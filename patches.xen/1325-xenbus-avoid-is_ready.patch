From http://xenbits.xen.org/hg/linux-2.6.18-xen.hg/rev/d8a0a20fdf20
From: xen-devel@lists.xenproject.org
Patch-mainline: Never, SUSE-Xen specific
Subject: xenbus: don't invoke ->is_ready() for most device states
References: bsc#987333

Along the lines of is_device_connecting(), print_device_status() should
avoid invoking ->is_ready() when the device is in other than connected
state. Convert the log message issuing logic to an if-else-if sequence
to at once make sure
- at most one warning will be issued,
- there will be a warning for any unexpected state.

Signed-off-by: Jan Beulich <jbeulich@suse.com>

--- a/drivers/xen/xenbus/xenbus_probe.c
+++ b/drivers/xen/xenbus/xenbus_probe.c
@@ -1282,7 +1282,6 @@ static int print_device_status(struct de
 {
 	struct xenbus_device *xendev = to_xenbus_device(dev);
 	struct device_driver *drv = data;
-	struct xenbus_driver *xendrv;
 
 	/* Is this operation limited to a particular driver? */
 	if (drv && (dev->driver != drv))
@@ -1292,22 +1291,22 @@ static int print_device_status(struct de
 		/* Information only: is this too noisy? */
 		printk(KERN_INFO "XENBUS: Device with no driver: %s\n",
 		       xendev->nodename);
-		return 0;
-	}
-
-	if (xendev->state < XenbusStateConnected) {
+	} else if (xendev->state < XenbusStateConnected) {
 		enum xenbus_state rstate = XenbusStateUnknown;
 		if (xendev->otherend)
 			rstate = xenbus_read_driver_state(xendev->otherend);
 		printk(KERN_WARNING "XENBUS: Timeout connecting "
 		       "to device: %s (local state %d, remote state %d)\n",
 		       xendev->nodename, xendev->state, rstate);
-	}
+	} else if (xendev->state == XenbusStateConnected) {
+		struct xenbus_driver *xendrv = to_xenbus_driver(dev->driver);
 
-	xendrv = to_xenbus_driver(dev->driver);
-	if (xendrv->is_ready && !xendrv->is_ready(xendev))
-		printk(KERN_WARNING "XENBUS: Device not ready: %s\n",
-		       xendev->nodename);
+		if (xendrv->is_ready && !xendrv->is_ready(xendev))
+			printk(KERN_WARNING "XENBUS: Device not ready: %s\n",
+			       xendev->nodename);
+	} else
+		printk(KERN_WARNING "XENBUS: Unexpected state %d: %s\n",
+		       xendev->state, xendev->nodename);
 
 	return 0;
 }
