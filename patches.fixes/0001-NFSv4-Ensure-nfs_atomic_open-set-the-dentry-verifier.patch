From: Trond Myklebust <trond.myklebust@primarydata.com>
Date: Thu, 23 Oct 2014 19:33:14 +0300
Subject: [PATCH] NFSv4: Ensure nfs_atomic_open set the dentry verifier on
 ENOENT
Git-commit: 809fd143de8805970eec02c27c0bc2622a6ecbda
Patch-mainline: v3.18
References: bnc#866130

If the OPEN rpc call to the server fails with an ENOENT call, nfs_atomic_open
will create a negative dentry for that file, however it currently fails
to call nfs_set_verifier(), thus causing the dentry to be immediately
revalidated on the next call to nfs_lookup_revalidate() instead of following
the usual lookup caching rules.

Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
Acked-by: NeilBrown <neilb@suse.com>

---
 fs/nfs/dir.c |    1 +
 1 file changed, 1 insertion(+)

--- a/fs/nfs/dir.c
+++ b/fs/nfs/dir.c
@@ -1560,6 +1560,7 @@ int nfs_atomic_open(struct inode *dir, s
 		switch (err) {
 		case -ENOENT:
 			d_add(dentry, NULL);
+			nfs_set_verifier(dentry, nfs_save_change_attribute(dir));
 			break;
 		case -EISDIR:
 		case -ENOTDIR:
