From: NeilBrown <neilb@suse.com>
Subject: avoid dentry crash triggered by NFS
Git-commit: 6f18493e541c690169c3b1479d47d95f624161cf
Patch-mainline: v3.17
References: bsc#984194

__d_drop clocks a hash chain based,in part, on the ->d_parent pointer
(as tested by IS_ROOT).
As __d_materialise_dentry() can change the parent pointer, we need
to __d_drop() before calling __d_materialise_dentry(), otherwise the wrong
list might get locked, and list corruption results.

The identified upstream commit fixes this bug and makes other changes too.
This patch just contains the minimal bugfix.

Signed-off-by: NeilBrown <neilb@suse.com>


---
 fs/dcache.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/fs/dcache.c
+++ b/fs/dcache.c
@@ -2685,9 +2685,9 @@ struct dentry *d_materialise_unique(stru
 			} else if (IS_ROOT(alias)) {
 				/* Is this an anonymous mountpoint that we
 				 * could splice into our tree? */
+				__d_drop(alias);
 				__d_materialise_dentry(dentry, alias);
 				write_sequnlock(&rename_lock);
-				__d_drop(alias);
 				goto found;
 			} else {
 				/* Nope, but we must(!) avoid directory
