From: Trond Myklebust <trond.myklebust@primarydata.com>
Date: Tue, 3 Mar 2015 00:06:35 -0500
Subject: [PATCH] NFS: Don't write enable new pages while an invalidation is
 proceeding
Git-commit: ef070dcb3989f553f5d84edf555eebc7e204099d
Patch-mainline: v4.0
References: bsc#999584

nfs_vm_page_mkwrite() should wait until the page cache invalidation
is finished. This is the second patch in a 2 patch series to deprecate
the NFS client's reliance on nfs_release_page() in the context of
nfs_invalidate_mapping().

Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
Acked-by: NeilBrown <neilb@suse.com>

---
 fs/nfs/file.c  |    3 +++
 fs/nfs/inode.c |    1 +
 2 files changed, 4 insertions(+)

--- a/fs/nfs/file.c
+++ b/fs/nfs/file.c
@@ -621,6 +621,9 @@ static int nfs_vm_page_mkwrite(struct vm
 	/* make sure the cache has finished storing the page */
 	nfs_fscache_wait_on_page_write(NFS_I(dentry->d_inode), page);
 
+	wait_on_bit(&NFS_I(dentry->d_inode)->flags, NFS_INO_INVALIDATING,
+		    nfs_wait_bit_killable, TASK_KILLABLE);
+
 	lock_page(page);
 	mapping = page_file_mapping(page);
 	if (mapping != dentry->d_inode->i_mapping)
--- a/fs/nfs/inode.c
+++ b/fs/nfs/inode.c
@@ -1016,6 +1016,7 @@ static int nfs_invalidate_mapping(struct
 
 	if (mapping->nrpages != 0) {
 		if (S_ISREG(inode->i_mode)) {
+			unmap_mapping_range(mapping, 0, 0, 0);
 			ret = nfs_sync_mapping(mapping);
 			if (ret < 0)
 				return ret;
