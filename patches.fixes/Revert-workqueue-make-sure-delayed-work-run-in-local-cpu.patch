From: Mike Galbraith <mgalbraith@suse.de>
Date: Mon Feb  8 04:22:18 CET 2016
Subject: Revert workqueue: make sure delayed work run in local cpu
Patch-mainline: Never, stable only
References: bnc#959463

This reverts 3.12-stable commit dc268a6f (mainline 874bbfe60)

Revert justification:
1. Without 22b886dd leads to timer corruption.
2. With 22b886dd, victim of 1 reports performance regression
   (https://lkml.org/lkml/2016/2/4/618)
3. Leads to scheduling work to offlined CPU (bnc#959463).
4. NO_HZ_FULL regressess due to no longer redirecting unbound work timers to housekeeper CPUs.

Replace with 176bed1d vmstat: explicitly schedule per-cpu work on the CPU we need it to run on

Signed-off-by: Mike Galbraith <mgalbraith@suse.de>
---
 kernel/workqueue.c |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

--- a/kernel/workqueue.c
+++ b/kernel/workqueue.c
@@ -1468,13 +1468,13 @@ static void __queue_delayed_work(int cpu
 	timer_stats_timer_set_start_info(&dwork->timer);
 
 	dwork->wq = wq;
-	/* timer isn't guaranteed to run in this cpu, record earlier */
-	if (cpu == WORK_CPU_UNBOUND)
-		cpu = raw_smp_processor_id();
 	dwork->cpu = cpu;
 	timer->expires = jiffies + delay;
 
-	add_timer_on(timer, cpu);
+	if (unlikely(cpu != WORK_CPU_UNBOUND))
+		add_timer_on(timer, cpu);
+	else
+		add_timer(timer);
 }
 
 /**
