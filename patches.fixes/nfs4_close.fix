From: NeilBrown <neilb@suse.com>
Subject: NFSv4.1: don't use machine credentials for CLOSE when using 'sec=sys'
Patch-mainline: Not yet, upstream doesn't seem much interested.
References: bsc#972003

An NFSv4.1 client might close a file after the user who openned it has
logged off.  In this case the users credentials may no longer be
valid, if there are e.g. kerberos credentials and expire.

NFSv4.1 has a mechanism to allow the client to use machine credentials
to close a file.  However due to a short-coming in the RFC, a CLOSE
with those credentials may not be possible if the file in question
isn't exported to the same security flavor - the required PUTFH must
be rejected when this is the case.

Specifically if a server and client support kerberos in general and
have used it to form a machine credential, but the file is only
exported to "sec=sys", a PUTFH with the machine credentials will fail,
so CLOSE is not possible.

As RPC_AUTH_UNIX (used by sec=sys) credentials can never expire, there
is no value in using the machine credential in place of them.
So in that case, just use the users credentials for CLOSE etc, as you would
in NFSv4.0

Signed-off-by: Neil Brown <neilb@suse.com>

---
 fs/nfs/nfs4_fs.h |    9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

--- a/fs/nfs/nfs4_fs.h
+++ b/fs/nfs/nfs4_fs.h
@@ -281,7 +281,14 @@ _nfs4_state_protect(struct nfs_client *c
 	struct rpc_cred *newcred = NULL;
 	rpc_authflavor_t flavor;
 
-	if (test_bit(sp4_mode, &clp->cl_sp4_flags)) {
+	if (test_bit(sp4_mode, &clp->cl_sp4_flags) &&
+	    /* RPC_AUTH_UNIX credential cannot expire so don't bother
+	     * swapping in the machine credential for them.  It might
+	     * not even be accepted.
+	     */
+	    *clntp && (*clntp)->cl_auth &&
+	    (*clntp)->cl_auth->au_flavor != RPC_AUTH_UNIX
+		) {
 		spin_lock(&clp->cl_lock);
 		if (clp->cl_machine_cred != NULL)
 			/* don't call get_rpccred on the machine cred -
