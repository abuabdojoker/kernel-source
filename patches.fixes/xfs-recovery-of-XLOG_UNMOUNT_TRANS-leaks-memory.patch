From: Dave Chinner <dchinner@redhat.com>
Date: Mon, 29 Sep 2014 09:45:18 +1000
Subject: [PATCH] xfs: recovery of XLOG_UNMOUNT_TRANS leaks memory
References: bsc#947953
Patch-mainline: v3.18
Git-commit: e9131e50f9d0a632e3011d73f283ba69be0cc682

The XLOG_UNMOUNT_TRANS case skips the transaction, despite the fact
an unmount record is always in a standalone transaction. Hence
whenever we come across one of these we need to free the transaction
structure associated with it as there is no commit record that
follows it.

Signed-off-by: Dave Chinner <dchinner@redhat.com>
Reviewed-by: Christoph Hellwig <hch@lst.de>
Signed-off-by: Dave Chinner <david@fromorbit.com>
Signed-off-by: Mark Fasheh <mfasheh@suse.de>

--- a/fs/xfs/xfs_log_recover.c
+++ b/fs/xfs/xfs_log_recover.c
@@ -3569,6 +3569,7 @@ xlog_recover_process_data(
 	int			error;
 	unsigned long		hash;
 	uint			flags;
+	bool			freeit = false;
 
 	lp = dp + be32_to_cpu(rhead->h_len);
 	num_logops = be32_to_cpu(rhead->h_num_logops);
@@ -3609,9 +3610,11 @@ xlog_recover_process_data(
 			case XLOG_COMMIT_TRANS:
 				error = xlog_recover_commit_trans(log,
 								trans, pass);
+				freeit = true;
 				break;
 			case XLOG_UNMOUNT_TRANS:
 				error = xlog_recover_unmount_trans(log, trans);
+				freeit = true;
 				break;
 			case XLOG_WAS_CONT_TRANS:
 				error = xlog_recover_add_to_cont_trans(log,
@@ -3636,7 +3639,7 @@ xlog_recover_process_data(
 				error = XFS_ERROR(EIO);
 				break;
 			}
-			if (error) {
+			if (error || freeit) {
 				xlog_recover_free_trans(trans);
 				return error;
 			}
