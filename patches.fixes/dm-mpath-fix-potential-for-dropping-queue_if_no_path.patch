From: Mike Snitzer <snitzer@redhat.com>
Date: Thu, 4 Aug 2016 19:16:04 -0400
Subject: dm mpath: fix potential for dropping queue_if_no_path due to multiple path failures
Patch-Mainline: queued in maintainer subsystem repository
Git-commit: d50a6450104c237db1dc75314d17b78c990a8c05
Git-repo: git://git.kernel.org/device-mapper/linux-dm/h/for-next
References: bsc#992073

If a multipath device is configured with the 'queue_if_no_path' feature
and it experiences multiple simultaneous path failures the 2nd
queue_if_no_path() call from multipath_presuspend() could cause the
previous MPATHF_QUEUE_IF_NO_PATH state (stored in
MPATHF_SAVED_QUEUE_IF_NO_PATH) to get dropped on the floor.

This could lead to spurious IO errors (e.g. -EIO) being returned up the
IO stack despite the queue_if_no_path feature being configured.

Reported-by: Bart Van Assche <bart.vanassche@sandisk.com>
Signed-off-by: Mike Snitzer <snitzer@redhat.com>
Cc: stable@vger.kernel.org # < 4.7 would need a different backport
Acked-by: Hannes Reinecke <hare@suse.com>
---
 drivers/md/dm-mpath.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/drivers/md/dm-mpath.c b/drivers/md/dm-mpath.c
index 7790a70..f8aec2c 100644
--- a/drivers/md/dm-mpath.c
+++ b/drivers/md/dm-mpath.c
@@ -544,7 +544,8 @@ static int queue_if_no_path(struct multipath *m, bool queue_if_no_path,
 	spin_lock_irqsave(&m->lock, flags);
 
 	if (save_old_value) {
-		if (test_bit(MPATHF_QUEUE_IF_NO_PATH, &m->flags))
+		if (test_bit(MPATHF_QUEUE_IF_NO_PATH, &m->flags) ||
+		    test_bit(MPATHF_SAVED_QUEUE_IF_NO_PATH, &m->flags))
 			set_bit(MPATHF_SAVED_QUEUE_IF_NO_PATH, &m->flags);
 		else
 			clear_bit(MPATHF_SAVED_QUEUE_IF_NO_PATH, &m->flags);
-- 
1.8.5.6

