/* arch/powerpc/kernel/btext.o */
btext_update_display extern void btext_update_display ( unsigned long , int , int , int , int ) 

/* arch/powerpc/kernel/cputable.o */
e#powerpc_pmc_type enum powerpc_pmc_type { PPC_PMC_DEFAULT = 0 , PPC_PMC_IBM = 1 , PPC_PMC_PA6T = 2 , PPC_PMC_G4 = 3 , } 
t#cpu_setup_t typedef void ( * cpu_setup_t ) ( unsigned long , s#cpu_spec * ) 
t#cpu_restore_t typedef void ( * cpu_restore_t ) ( void ) 
e#powerpc_oprofile_type enum powerpc_oprofile_type { PPC_OPROFILE_INVALID = 0 , PPC_OPROFILE_RS64 = 1 , PPC_OPROFILE_POWER4 = 2 , PPC_OPROFILE_G4 = 3 , PPC_OPROFILE_FSL_EMB = 4 , PPC_OPROFILE_CELL = 5 , PPC_OPROFILE_PA6T = 6 , } 
s#pt_regs struct pt_regs { unsigned long gpr [ 32 ] ; unsigned long nip ; unsigned long msr ; unsigned long orig_gpr3 ; unsigned long ctr ; unsigned long link ; unsigned long xer ; unsigned long ccr ; unsigned long softe ; unsigned long trap ; unsigned long dar ; unsigned long dsisr ; unsigned long result ; } 
s#cpu_spec struct cpu_spec { unsigned int pvr_mask ; unsigned int pvr_value ; char * cpu_name ; unsigned long cpu_features ; unsigned int cpu_user_features ; unsigned int cpu_user_features2 ; unsigned int mmu_features ; unsigned int icache_bsize ; unsigned int dcache_bsize ; unsigned int num_pmcs ; e#powerpc_pmc_type pmc_type ; t#cpu_setup_t cpu_setup ; t#cpu_restore_t cpu_restore ; char * oprofile_cpu_type ; e#powerpc_oprofile_type oprofile_type ; unsigned long oprofile_mmcra_sihv ; unsigned long oprofile_mmcra_sipr ; unsigned long oprofile_mmcra_clear ; char * platform ; int ( * machine_check ) ( s#pt_regs * ) ; long ( * machine_check_early ) ( s#pt_regs * ) ; void ( * flush_tlb ) ( unsigned long ) ; } 
cur_cpu_spec extern s#cpu_spec * cur_cpu_spec 

/* arch/powerpc/kernel/crash.o */
t#crash_shutdown_t typedef void ( * crash_shutdown_t ) ( void ) 
crash_shutdown_register extern int crash_shutdown_register ( t#crash_shutdown_t ) 
crash_shutdown_unregister extern int crash_shutdown_unregister ( t#crash_shutdown_t ) 

/* arch/powerpc/kernel/dma.o */
s##device_private
s#list_head struct list_head { s#list_head * next , * prev ; } 
t#arch_spinlock_t typedef struct { volatile unsigned int slock ; } arch_spinlock_t 
s#raw_spinlock struct raw_spinlock { t#arch_spinlock_t raw_lock ; } 
s#spinlock struct spinlock { union { s#raw_spinlock rlock ; } ; } 
t#spinlock_t typedef s#spinlock spinlock_t 
s#kobj_uevent_env struct kobj_uevent_env { char * envp [ 32 ] ; int envp_idx ; char buf [ 2048 ] ; int buflen ; } 
s#kset_uevent_ops struct kset_uevent_ops { int ( * const filter ) ( s#kset * , s#kobject * ) ; const char * ( * const name ) ( s#kset * , s#kobject * ) ; int ( * const uevent ) ( s#kset * , s#kobject * , s#kobj_uevent_env * ) ; } 
s#kset struct kset { s#list_head list ; t#spinlock_t list_lock ; s#kobject kobj ; const s#kset_uevent_ops * uevent_ops ; } 
t#__kernel_long_t typedef long __kernel_long_t 
t#__kernel_ssize_t typedef t#__kernel_long_t __kernel_ssize_t 
t#ssize_t typedef t#__kernel_ssize_t ssize_t 
t#umode_t typedef unsigned short umode_t 
s#attribute struct attribute { const char * name ; t#umode_t mode ; } 
t#__kernel_ulong_t typedef unsigned long __kernel_ulong_t 
t#__kernel_size_t typedef t#__kernel_ulong_t __kernel_size_t 
t#size_t typedef t#__kernel_size_t size_t 
s#sysfs_ops struct sysfs_ops { t#ssize_t ( * show ) ( s#kobject * , s#attribute * , char * ) ; t#ssize_t ( * store ) ( s#kobject * , s#attribute * , const char * , t#size_t ) ; } 
e#kobj_ns_type enum kobj_ns_type { KOBJ_NS_TYPE_NONE = 0 , KOBJ_NS_TYPE_NET , KOBJ_NS_TYPES } 
t#bool typedef _Bool bool 
s##sock
s#kobj_ns_type_operations struct kobj_ns_type_operations { e#kobj_ns_type type ; t#bool ( * current_may_mount ) ( void ) ; void * ( * grab_current_ns ) ( void ) ; const void * ( * netlink_ns ) ( s#sock * ) ; const void * ( * initial_ns ) ( void ) ; void ( * drop_ns ) ( void * ) ; } 
s#kobj_type struct kobj_type { void ( * release ) ( s#kobject * ) ; const s#sysfs_ops * sysfs_ops ; s#attribute * * default_attrs ; const s#kobj_ns_type_operations * ( * child_ns_type ) ( s#kobject * ) ; const void * ( * namespace ) ( s#kobject * ) ; } 
s##sysfs_dirent
t#atomic_t typedef struct { int counter ; } atomic_t 
s#kref struct kref { t#atomic_t refcount ; } 
s#kobject struct kobject { const char * name ; s#list_head entry ; s#kobject * parent ; s#kset * kset ; s#kobj_type * ktype ; s#sysfs_dirent * sd ; s#kref kref ; unsigned int state_initialized : 1 ; unsigned int state_in_sysfs : 1 ; unsigned int state_add_uevent_sent : 1 ; unsigned int state_remove_uevent_sent : 1 ; unsigned int uevent_suppress : 1 ; } 
s##file
t#__kernel_loff_t typedef long long __kernel_loff_t 
t#loff_t typedef t#__kernel_loff_t loff_t 
s#rb_node struct rb_node { unsigned long __rb_parent_color ; s#rb_node * rb_right ; s#rb_node * rb_left ; } 
s#rb_root struct rb_root { s#rb_node * rb_node ; } 
t#u32 typedef unsigned int u32 
t#pgd_t typedef unsigned long pgd_t 
t#atomic64_t typedef struct { long counter ; } atomic64_t 
t#atomic_long_t typedef t#atomic64_t atomic_long_t 
t#raw_spinlock_t typedef s#raw_spinlock raw_spinlock_t 
s#llist_node struct llist_node { s#llist_node * next ; } 
s##sched_class
s#load_weight struct load_weight { unsigned long weight ; t#u32 inv_weight ; } 
t#u64 typedef unsigned long long u64 
t#s64 typedef signed long long s64 
s#sched_statistics struct sched_statistics { t#u64 wait_start ; t#u64 wait_max ; t#u64 wait_count ; t#u64 wait_sum ; t#u64 iowait_count ; t#u64 iowait_sum ; t#u64 sleep_start ; t#u64 sleep_max ; t#s64 sum_sleep_runtime ; t#u64 block_start ; t#u64 block_max ; t#u64 exec_max ; t#u64 slice_max ; t#u64 nr_migrations_cold ; t#u64 nr_failed_migrations_affine ; t#u64 nr_failed_migrations_running ; t#u64 nr_failed_migrations_hot ; t#u64 nr_forced_migrations ; t#u64 nr_wakeups ; t#u64 nr_wakeups_sync ; t#u64 nr_wakeups_migrate ; t#u64 nr_wakeups_local ; t#u64 nr_wakeups_remote ; t#u64 nr_wakeups_affine ; t#u64 nr_wakeups_affine_attempts ; t#u64 nr_wakeups_passive ; t#u64 nr_wakeups_idle ; } 
s##cfs_rq
s#sched_avg struct sched_avg { t#u32 runnable_avg_sum , runnable_avg_period ; t#u64 last_runnable_update ; t#s64 decay_count ; unsigned long load_avg_contrib ; } 
s#sched_entity struct sched_entity { s#load_weight load ; s#rb_node run_node ; s#list_head group_node ; unsigned int on_rq ; t#u64 exec_start ; t#u64 sum_exec_runtime ; t#u64 vruntime ; t#u64 prev_sum_exec_runtime ; t#u64 nr_migrations ; s#sched_statistics statistics ; s#sched_entity * parent ; s#cfs_rq * cfs_rq ; s#cfs_rq * my_q ; s#sched_avg avg ; void * suse_kabi_padding ; } 
s##rt_rq
s#sched_rt_entity struct sched_rt_entity { s#list_head run_list ; unsigned long timeout ; unsigned long watchdog_stamp ; unsigned int time_slice ; s#sched_rt_entity * back ; s#sched_rt_entity * parent ; s#rt_rq * rt_rq ; s#rt_rq * my_q ; } 
s##task_group
s#hlist_node struct hlist_node { s#hlist_node * next , * * pprev ; } 
s#hlist_head struct hlist_head { s#hlist_node * first ; } 
s#cpumask struct cpumask { unsigned long bits [ ( ( ( 2048 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
t#cpumask_t typedef s#cpumask cpumask_t 
s#sched_info struct sched_info { unsigned long pcount ; unsigned long long run_delay ; unsigned long long last_arrival , last_queued ; } 
s#plist_node struct plist_node { int prio ; s#list_head prio_list ; s#list_head node_list ; } 
E#NR_MM_COUNTERS 3 
s#task_rss_stat struct task_rss_stat { int events ; int count [ E#NR_MM_COUNTERS ] ; } 
t#__kernel_pid_t typedef int __kernel_pid_t 
t#pid_t typedef t#__kernel_pid_t pid_t 
E#PIDTYPE_MAX 3 
s#callback_head struct callback_head { s#callback_head * next ; void ( * func ) ( s#callback_head * ) ; } 
s##pid_namespace
s#upid struct upid { int nr ; s#pid_namespace * ns ; s#hlist_node pid_chain ; } 
s#pid struct pid { t#atomic_t count ; unsigned int level ; s#hlist_head tasks [ E#PIDTYPE_MAX ] ; s#callback_head rcu ; s#upid numbers [ 1 ] ; } 
s#pid_link struct pid_link { s#hlist_node node ; s#pid * pid ; } 
s#__wait_queue_head struct __wait_queue_head { t#spinlock_t lock ; s#list_head task_list ; } 
t#wait_queue_head_t typedef s#__wait_queue_head wait_queue_head_t 
s#completion struct completion { unsigned int done ; t#wait_queue_head_t wait ; } 
t#cputime_t typedef unsigned long cputime_t 
s#cputime struct cputime { t#cputime_t utime ; t#cputime_t stime ; } 
t#__kernel_time_t typedef t#__kernel_long_t __kernel_time_t 
s#timespec struct timespec { t#__kernel_time_t tv_sec ; long tv_nsec ; } 
s#task_cputime struct task_cputime { t#cputime_t utime ; t#cputime_t stime ; unsigned long long sum_exec_runtime ; } 
t#__kernel_uid32_t typedef unsigned int __kernel_uid32_t 
t#uid_t typedef t#__kernel_uid32_t uid_t 
t#kuid_t typedef struct { t#uid_t val ; } kuid_t 
t#__kernel_gid32_t typedef unsigned int __kernel_gid32_t 
t#gid_t typedef t#__kernel_gid32_t gid_t 
t#kgid_t typedef struct { t#gid_t val ; } kgid_t 
t#__u32 typedef unsigned int __u32 
s#kernel_cap_struct struct kernel_cap_struct { t#__u32 cap [ 2 ] ; } 
t#kernel_cap_t typedef s#kernel_cap_struct kernel_cap_t 
t#__s32 typedef __signed__ int __s32 
t#int32_t typedef t#__s32 int32_t 
t#key_serial_t typedef t#int32_t key_serial_t 
s##key_user
t#time_t typedef t#__kernel_time_t time_t 
t#uint32_t typedef t#__u32 uint32_t 
t#key_perm_t typedef t#uint32_t key_perm_t 
s##key_type
s#keyring_index_key struct keyring_index_key { s#key_type * type ; const char * description ; t#size_t desc_len ; } 
s##assoc_array_ptr
s#assoc_array struct assoc_array { s#assoc_array_ptr * root ; unsigned long nr_leaves_on_tree ; } 
s#key struct key { t#atomic_t usage ; t#key_serial_t serial ; union { s#list_head graveyard_link ; s#rb_node serial_node ; } ; s#rw_semaphore sem ; s#key_user * user ; void * security ; union { t#time_t expiry ; t#time_t revoked_at ; } ; t#time_t last_used_at ; t#kuid_t uid ; t#kgid_t gid ; t#key_perm_t perm ; unsigned short quotalen ; unsigned short datalen ; unsigned long flags ; union { s#keyring_index_key index_key ; struct { s#key_type * type ; char * description ; } ; } ; union { s#list_head link ; unsigned long x [ 2 ] ; void * p [ 2 ] ; int reject_error ; } type_data ; union { union { unsigned long value ; void * rcudata ; void * data ; void * data2 [ 2 ] ; } payload ; s#assoc_array keys ; } ; } 
s#user_struct struct user_struct { t#atomic_t __count ; t#atomic_t processes ; t#atomic_t files ; t#atomic_t sigpending ; t#atomic_t inotify_watches ; t#atomic_t inotify_devs ; t#atomic_t fanotify_listeners ; t#atomic_long_t epoll_watches ; unsigned long mq_bytes ; unsigned long locked_shm ; s#key * uid_keyring ; s#key * session_keyring ; s#hlist_node uidhash_node ; t#kuid_t uid ; t#atomic_long_t locked_vm ; } 
s##user_namespace
s#group_info struct group_info { t#atomic_t usage ; int ngroups ; int nblocks ; t#kgid_t small_block [ 32 ] ; t#kgid_t * blocks [ 0 ] ; } 
s#cred struct cred { t#atomic_t usage ; t#kuid_t uid ; t#kgid_t gid ; t#kuid_t suid ; t#kgid_t sgid ; t#kuid_t euid ; t#kgid_t egid ; t#kuid_t fsuid ; t#kgid_t fsgid ; unsigned securebits ; t#kernel_cap_t cap_inheritable ; t#kernel_cap_t cap_permitted ; t#kernel_cap_t cap_effective ; t#kernel_cap_t cap_bset ; unsigned char jit_keyring ; s#key * session_keyring ; s#key * process_keyring ; s#key * thread_keyring ; s#key * request_key_auth ; void * security ; s#user_struct * user ; s#user_namespace * user_ns ; s#group_info * group_info ; s#callback_head rcu ; } 
s##sem_undo_list
s#sysv_sem struct sysv_sem { s#sem_undo_list * undo_list ; } 
t#mm_segment_t typedef struct { unsigned long seg ; } mm_segment_t 
s#thread_fp_state struct thread_fp_state { t#u64 fpr [ 32 ] [ 2 ] __attribute__ ( ( aligned ( 16 ) ) ) ; t#u64 fpscr ; } 
s##perf_event
t#u16 typedef unsigned short u16 
s#arch_hw_breakpoint struct arch_hw_breakpoint { unsigned long address ; t#u16 type ; t#u16 len ; } 
t#__vector128 typedef struct { t#__u32 u [ 4 ] ; } __attribute__ ( ( aligned ( 16 ) ) ) __vector128 
t#vector128 typedef t#__vector128 vector128 
s#thread_vr_state struct thread_vr_state { t#vector128 vr [ 32 ] __attribute__ ( ( aligned ( 16 ) ) ) ; t#vector128 vscr __attribute__ ( ( aligned ( 16 ) ) ) ; } 
s#thread_struct struct thread_struct { unsigned long ksp ; unsigned long ksp_vsid ; s#pt_regs * regs ; t#mm_segment_t fs ; s#thread_fp_state fp_state ; s#thread_fp_state * fp_save_area ; int fpexc_mode ; unsigned int align_ctl ; unsigned long start_tb ; unsigned long accum_tb ; s#perf_event * ptrace_bps [ 1 ] ; s#perf_event * last_hit_ubp ; s#arch_hw_breakpoint hw_brk ; unsigned long trap_nr ; s#thread_vr_state vr_state ; s#thread_vr_state * vr_save_area ; unsigned long vrsave ; int used_vr ; int used_vsr ; t#u64 tm_tfhar ; t#u64 tm_texasr ; t#u64 tm_tfiar ; unsigned long tm_orig_msr ; s#pt_regs ckpt_regs ; unsigned long tm_tar ; unsigned long tm_ppr ; unsigned long tm_dscr ; s#thread_fp_state transact_fp ; s#thread_vr_state transact_vr ; unsigned long transact_vrsave ; unsigned long dscr ; int dscr_inherit ; unsigned long ppr ; unsigned long tar ; unsigned long ebbrr ; unsigned long ebbhr ; unsigned long bescr ; unsigned long siar ; unsigned long sdar ; unsigned long sier ; unsigned long mmcr2 ; unsigned mmcr0 ; unsigned used_ebb ; } 
s##fs_struct
s##files_struct
s##nsproxy
t#sigset_t typedef struct { unsigned long sig [ ( 64 / 64 ) ] ; } sigset_t 
s#sigpending struct sigpending { s#list_head list ; t#sigset_t signal ; } 
u#ktime union ktime { t#s64 tv64 ; } 
t#ktime_t typedef u#ktime ktime_t 
s#timerqueue_node struct timerqueue_node { s#rb_node node ; t#ktime_t expires ; } 
e#hrtimer_restart enum hrtimer_restart { HRTIMER_NORESTART , HRTIMER_RESTART , } 
E#HRTIMER_MAX_CLOCK_BASES 4 
s#hrtimer_cpu_base struct hrtimer_cpu_base { t#raw_spinlock_t lock ; unsigned int active_bases ; unsigned int clock_was_set ; t#ktime_t expires_next ; int hres_active ; int hang_detected ; unsigned long nr_events ; unsigned long nr_retries ; unsigned long nr_hangs ; t#ktime_t max_hang_time ; s#hrtimer_clock_base clock_base [ E#HRTIMER_MAX_CLOCK_BASES ] ; } 
t#__kernel_clockid_t typedef int __kernel_clockid_t 
t#clockid_t typedef t#__kernel_clockid_t clockid_t 
s#timerqueue_head struct timerqueue_head { s#rb_root head ; s#timerqueue_node * next ; } 
s#hrtimer_clock_base struct hrtimer_clock_base { s#hrtimer_cpu_base * cpu_base ; int index ; t#clockid_t clockid ; s#timerqueue_head active ; t#ktime_t resolution ; t#ktime_t ( * get_time ) ( void ) ; t#ktime_t softirq_time ; t#ktime_t offset ; } 
s#hrtimer struct hrtimer { s#timerqueue_node node ; t#ktime_t _softexpires ; e#hrtimer_restart ( * function ) ( s#hrtimer * ) ; s#hrtimer_clock_base * base ; unsigned long state ; int start_pid ; void * start_site ; char start_comm [ 16 ] ; } 
s#cpu_itimer struct cpu_itimer { t#cputime_t expires ; t#cputime_t incr ; t#u32 error ; t#u32 incr_error ; } 
s#thread_group_cputimer struct thread_group_cputimer { s#task_cputime cputime ; int running ; t#raw_spinlock_t lock ; } 
s##tty_struct
s#task_io_accounting struct task_io_accounting { t#u64 rchar ; t#u64 wchar ; t#u64 syscr ; t#u64 syscw ; t#u64 read_bytes ; t#u64 write_bytes ; t#u64 cancelled_write_bytes ; } 
s#rlimit struct rlimit { unsigned long rlim_cur ; unsigned long rlim_max ; } 
s#pacct_struct struct pacct_struct { int ac_flag ; long ac_exitcode ; unsigned long ac_mem ; t#cputime_t ac_utime , ac_stime ; unsigned long ac_minflt , ac_majflt ; } 
s##taskstats
s##tty_audit_buf
t#oom_flags_t typedef unsigned oom_flags_t 
s##optimistic_spin_queue
s#mutex struct mutex { t#atomic_t count ; t#spinlock_t wait_lock ; s#list_head wait_list ; s#task_struct * owner ; s#optimistic_spin_queue * osq ; } 
s#signal_struct struct signal_struct { t#atomic_t sigcnt ; t#atomic_t live ; int nr_threads ; s#list_head thread_head ; t#wait_queue_head_t wait_chldexit ; s#task_struct * curr_target ; s#sigpending shared_pending ; int group_exit_code ; int notify_count ; s#task_struct * group_exit_task ; int group_stop_count ; unsigned int flags ; unsigned int is_child_subreaper : 1 ; unsigned int has_child_subreaper : 1 ; int posix_timer_id ; s#list_head posix_timers ; s#hrtimer real_timer ; s#pid * leader_pid ; t#ktime_t it_real_incr ; s#cpu_itimer it [ 2 ] ; s#thread_group_cputimer cputimer ; s#task_cputime cputime_expires ; s#list_head cpu_timers [ 3 ] ; s#pid * tty_old_pgrp ; int leader ; s#tty_struct * tty ; t#cputime_t utime , stime , cutime , cstime ; t#cputime_t gtime ; t#cputime_t cgtime ; s#cputime prev_cputime ; unsigned long nvcsw , nivcsw , cnvcsw , cnivcsw ; unsigned long min_flt , maj_flt , cmin_flt , cmaj_flt ; unsigned long inblock , oublock , cinblock , coublock ; unsigned long maxrss , cmaxrss ; s#task_io_accounting ioac ; unsigned long long sum_sched_runtime ; s#rlimit rlim [ 16 ] ; s#pacct_struct pacct ; s#taskstats * stats ; unsigned audit_tty ; unsigned audit_tty_log_passwd ; s#tty_audit_buf * tty_audit_buf ; s#rw_semaphore group_rwsem ; t#oom_flags_t oom_flags ; short oom_score_adj ; short oom_score_adj_min ; s#mutex cred_guard_mutex ; void * suse_kabi_padding ; } 
t#__signalfn_t typedef void __signalfn_t ( int ) 
t#__sighandler_t typedef t#__signalfn_t * __sighandler_t 
t#__restorefn_t typedef void __restorefn_t ( void ) 
t#__sigrestore_t typedef t#__restorefn_t * __sigrestore_t 
s#sigaction struct sigaction { t#__sighandler_t sa_handler ; unsigned long sa_flags ; t#__sigrestore_t sa_restorer ; t#sigset_t sa_mask ; } 
s#k_sigaction struct k_sigaction { s#sigaction sa ; } 
s#sighand_struct struct sighand_struct { t#atomic_t count ; s#k_sigaction action [ 64 ] ; t#spinlock_t siglock ; t#wait_queue_head_t signalfd_wqh ; } 
s##audit_context
s##seccomp_filter
s#seccomp struct seccomp { int mode ; s#seccomp_filter * filter ; } 
s#plist_head struct plist_head { s#list_head node_list ; } 
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
t#__kernel_timer_t typedef int __kernel_timer_t 
u#sigval union sigval { int sival_int ; void * sival_ptr ; } 
t#sigval_t typedef u#sigval sigval_t 
t#__kernel_clock_t typedef t#__kernel_long_t __kernel_clock_t 
s#siginfo struct siginfo { int si_signo ; int si_errno ; int si_code ; union { int _pad [ ( ( 128 - ( 4 * sizeof ( int ) ) ) / sizeof ( int ) ) ] ; struct { t#__kernel_pid_t _pid ; t#__kernel_uid32_t _uid ; } _kill ; struct { t#__kernel_timer_t _tid ; int _overrun ; char _pad [ sizeof ( __kernel_uid32_t ) - sizeof ( int ) ] ; t#sigval_t _sigval ; int _sys_private ; } _timer ; struct { t#__kernel_pid_t _pid ; t#__kernel_uid32_t _uid ; t#sigval_t _sigval ; } _rt ; struct { t#__kernel_pid_t _pid ; t#__kernel_uid32_t _uid ; int _status ; t#__kernel_clock_t _utime ; t#__kernel_clock_t _stime ; } _sigchld ; struct { void * _addr ; short _addr_lsb ; } _sigfault ; struct { long _band ; int _fd ; } _sigpoll ; struct { void * _call_addr ; int _syscall ; unsigned int _arch ; } _sigsys ; } _sifields ; } 
t#siginfo_t typedef s#siginfo siginfo_t 
t#nodemask_t typedef struct { unsigned long bits [ ( ( ( ( 1 << 8 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } nodemask_t 
s#seqcount struct seqcount { unsigned sequence ; } 
t#seqcount_t typedef s#seqcount seqcount_t 
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
E#perf_nr_task_contexts ( 0 ) + 2 
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
t#u8 typedef unsigned char u8 
s#reciprocal_value struct reciprocal_value { t#u32 m ; t#u8 sh1 , sh2 ; } 
t#gfp_t typedef unsigned gfp_t 
s##kmem_cache_node
s##array_cache
s#kmem_cache struct kmem_cache { unsigned int batchcount ; unsigned int limit ; unsigned int shared ; unsigned int size ; s#reciprocal_value reciprocal_buffer_size ; unsigned int flags ; unsigned int num ; unsigned int gfporder ; t#gfp_t allocflags ; t#size_t colour ; unsigned int colour_off ; s#kmem_cache * slabp_cache ; unsigned int slab_size ; void ( * ctor ) ( void * ) ; const char * name ; s#list_head list ; int refcount ; int object_size ; int align ; s#kmem_cache_node * * node ; s#array_cache * array [ 2048 + ( 1 << 8 ) ] ; } 
s#page struct page { unsigned long flags ; s#address_space * mapping ; struct { union { unsigned long index ; void * freelist ; t#bool pfmemalloc ; } ; union { unsigned counters ; struct { union { t#atomic_t _mapcount ; struct { unsigned inuse : 16 ; unsigned objects : 15 ; unsigned frozen : 1 ; } ; int units ; } ; t#atomic_t _count ; } ; } ; } ; union { s#list_head lru ; struct { s#page * next ; int pages ; int pobjects ; } ; s#list_head list ; s#slab * slab_page ; } ; union { unsigned long private ; t#spinlock_t ptl ; s#kmem_cache * slab_cache ; s#page * first_page ; } ; int _last_cpupid ; } 
s#page_frag struct page_frag { s#page * page ; t#__u32 offset ; t#__u32 size ; } 
s#task_delay_info struct task_delay_info { t#spinlock_t lock ; unsigned int flags ; s#timespec blkio_start , blkio_end ; t#u64 blkio_delay ; t#u64 swapin_delay ; t#u32 blkio_count ; t#u32 swapin_count ; s#timespec freepages_start , freepages_end ; t#u64 freepages_delay ; t#u32 freepages_count ; } 
s#latency_record struct latency_record { unsigned long backtrace [ 12 ] ; unsigned int count ; unsigned long time ; unsigned long max ; } 
s##ftrace_ret_stack
s##mem_cgroup
s#memcg_batch_info struct memcg_batch_info { int do_batch ; s#mem_cgroup * memcg ; unsigned long nr_pages ; unsigned long memsw_nr_pages ; } 
s#memcg_oom_info struct memcg_oom_info { s#mem_cgroup * memcg ; t#gfp_t gfp_mask ; int order ; unsigned int may_oom : 1 ; } 
e#uprobe_task_state enum uprobe_task_state { UTASK_RUNNING , UTASK_SSTEP , UTASK_SSTEP_ACK , UTASK_SSTEP_TRAPPED , } 
s#arch_uprobe_task struct arch_uprobe_task { unsigned long saved_trap_nr ; } 
s##return_instance
s##uprobe
s#uprobe_task struct uprobe_task { e#uprobe_task_state state ; s#arch_uprobe_task autask ; s#return_instance * return_instances ; unsigned int depth ; s#uprobe * active_uprobe ; unsigned long xol_vaddr ; unsigned long vaddr ; } 
s#task_struct struct task_struct { volatile long state ; void * stack ; t#atomic_t usage ; unsigned int flags ; unsigned int ptrace ; s#llist_node wake_entry ; int on_cpu ; s#task_struct * last_wakee ; unsigned long wakee_flips ; unsigned long wakee_flip_decay_ts ; int wake_cpu ; int on_rq ; int prio , static_prio , normal_prio ; unsigned int rt_priority ; const s#sched_class * sched_class ; s#sched_entity se ; s#sched_rt_entity rt ; s#task_group * sched_task_group ; s#hlist_head preempt_notifiers ; unsigned char fpu_counter ; unsigned int btrace_seq ; unsigned int policy ; int nr_cpus_allowed ; t#cpumask_t cpus_allowed ; s#sched_info sched_info ; s#list_head tasks ; s#plist_node pushable_tasks ; s#mm_struct * mm , * active_mm ; t#u32 vmacache_seqnum ; s#vm_area_struct * vmacache [ ( 1U << 2 ) ] ; s#task_rss_stat rss_stat ; int exit_state ; int exit_code , exit_signal ; int pdeath_signal ; unsigned int jobctl ; unsigned int personality ; unsigned did_exec : 1 ; unsigned in_execve : 1 ; unsigned in_iowait : 1 ; unsigned no_new_privs : 1 ; unsigned sched_reset_on_fork : 1 ; unsigned sched_contributes_to_load : 1 ; t#pid_t pid ; t#pid_t tgid ; s#task_struct * real_parent ; s#task_struct * parent ; s#list_head children ; s#list_head sibling ; s#task_struct * group_leader ; s#list_head ptraced ; s#list_head ptrace_entry ; s#pid_link pids [ E#PIDTYPE_MAX ] ; s#list_head thread_group ; s#list_head thread_node ; s#completion * vfork_done ; int * set_child_tid ; int * clear_child_tid ; t#cputime_t utime , stime , utimescaled , stimescaled ; t#cputime_t gtime ; s#cputime prev_cputime ; unsigned long nvcsw , nivcsw ; s#timespec start_time ; s#timespec real_start_time ; unsigned long min_flt , maj_flt ; s#task_cputime cputime_expires ; s#list_head cpu_timers [ 3 ] ; const s#cred * real_cred ; const s#cred * cred ; char comm [ 16 ] ; int link_count , total_link_count ; s#sysv_sem sysvsem ; unsigned long last_switch_count ; s#thread_struct thread ; s#fs_struct * fs ; s#files_struct * files ; s#nsproxy * nsproxy ; s#signal_struct * signal ; s#sighand_struct * sighand ; t#sigset_t blocked , real_blocked ; t#sigset_t saved_sigmask ; s#sigpending pending ; unsigned long sas_ss_sp ; t#size_t sas_ss_size ; int ( * notifier ) ( void * ) ; void * notifier_data ; t#sigset_t * notifier_mask ; s#callback_head * task_works ; s#audit_context * audit_context ; t#kuid_t loginuid ; unsigned int sessionid ; s#seccomp seccomp ; t#u32 parent_exec_id ; t#u32 self_exec_id ; t#spinlock_t alloc_lock ; t#raw_spinlock_t pi_lock ; s#plist_head pi_waiters ; s#rt_mutex_waiter * pi_blocked_on ; void * journal_info ; s#bio_list * bio_list ; s#blk_plug * plug ; s#reclaim_state * reclaim_state ; s#backing_dev_info * backing_dev_info ; s#io_context * io_context ; unsigned long ptrace_message ; t#siginfo_t * last_siginfo ; s#task_io_accounting ioac ; t#u64 acct_rss_mem1 ; t#u64 acct_vm_mem1 ; t#cputime_t acct_timexpd ; t#nodemask_t mems_allowed ; t#seqcount_t mems_allowed_seq ; int cpuset_mem_spread_rotor ; int cpuset_slab_spread_rotor ; s#css_set * cgroups ; s#list_head cg_list ; s#robust_list_head * robust_list ; s#compat_robust_list_head * compat_robust_list ; s#list_head pi_state_list ; s#futex_pi_state * pi_state_cache ; s#perf_event_context * perf_event_ctxp [ E#perf_nr_task_contexts ] ; s#mutex perf_event_mutex ; s#list_head perf_event_list ; s#mempolicy * mempolicy ; short il_next ; short pref_node_fork ; int numa_scan_seq ; unsigned int numa_scan_period ; unsigned int numa_scan_period_max ; int numa_preferred_nid ; unsigned long numa_migrate_retry ; t#u64 node_stamp ; t#u64 last_task_numa_placement ; t#u64 last_sum_exec_runtime ; s#callback_head numa_work ; s#list_head numa_entry ; s#numa_group * numa_group ; unsigned long * numa_faults_memory ; unsigned long total_numa_faults ; unsigned long * numa_faults_buffer_memory ; unsigned long * numa_faults_cpu ; unsigned long * numa_faults_buffer_cpu ; unsigned long numa_faults_locality [ 2 ] ; unsigned long numa_pages_migrated ; s#callback_head rcu ; s#pipe_inode_info * splice_pipe ; s#page_frag task_frag ; s#task_delay_info * delays ; int nr_dirtied ; int nr_dirtied_pause ; unsigned long dirty_paused_when ; int latency_record_count ; s#latency_record latency_record [ 32 ] ; unsigned long timer_slack_ns ; unsigned long default_timer_slack_ns ; int curr_ret_stack ; s#ftrace_ret_stack * ret_stack ; unsigned long long ftrace_timestamp ; t#atomic_t trace_overrun ; t#atomic_t tracing_graph_pause ; unsigned long trace ; unsigned long trace_recursion ; s#memcg_batch_info memcg_batch ; unsigned int memcg_kmem_skip_account ; s#memcg_oom_info memcg_oom ; s#uprobe_task * utask ; unsigned int sequential_io ; unsigned int sequential_io_avg ; unsigned long suse_kabi_padding ; } 
s#rw_semaphore struct rw_semaphore { long count ; t#raw_spinlock_t wait_lock ; s#list_head wait_list ; s#task_struct * owner ; s#optimistic_spin_queue * osq ; } 
s#mm_rss_stat struct mm_rss_stat { t#atomic_long_t count [ E#NR_MM_COUNTERS ] ; } 
s##linux_binfmt
t#cpumask_var_t typedef s#cpumask cpumask_var_t [ 1 ] 
t#mm_context_id_t typedef unsigned long mm_context_id_t 
s#subpage_prot_table struct subpage_prot_table { unsigned long maxaddr ; unsigned int * * protptrs [ 2 ] ; unsigned int * low_prot [ 4 ] ; } 
t#mm_context_t typedef struct { t#mm_context_id_t id ; t#u16 user_psize ; t#u64 low_slices_psize ; unsigned char high_slices_psize [ ( ( 1UL << ( 8 + 10 + 0 + 12 + 16 ) ) >> 41 ) ] ; unsigned long vdso_base ; s#subpage_prot_table spt ; s#spinlock * cop_lockp ; unsigned long acop ; unsigned int cop_pid ; void * pte_frag ; } mm_context_t 
s#core_thread struct core_thread { s#task_struct * task ; s#core_thread * next ; } 
s#core_state struct core_state { t#atomic_t nr_threads ; s#core_thread dumper ; s#completion startup ; } 
s##kioctx_table
s##mmu_notifier_mm
t#pte_basic_t typedef unsigned long pte_basic_t 
t#pte_t typedef t#pte_basic_t pte_t 
t#pgtable_t typedef t#pte_t * pgtable_t 
s#xol_area struct xol_area { t#wait_queue_head_t wq ; t#atomic_t slot_count ; unsigned long * bitmap ; s#page * page ; unsigned long vaddr ; } 
s#uprobes_state struct uprobes_state { s#xol_area * xol_area ; } 
s#mm_struct struct mm_struct { s#vm_area_struct * mmap ; s#rb_root mm_rb ; t#u32 vmacache_seqnum ; unsigned long ( * get_unmapped_area ) ( s#file * , unsigned long , unsigned long , unsigned long , unsigned long ) ; unsigned long mmap_base ; unsigned long mmap_legacy_base ; unsigned long task_size ; unsigned long highest_vm_end ; t#pgd_t * pgd ; t#atomic_t mm_users ; t#atomic_t mm_count ; t#atomic_long_t nr_ptes ; int map_count ; t#spinlock_t page_table_lock ; s#rw_semaphore mmap_sem ; s#list_head mmlist ; unsigned long hiwater_rss ; unsigned long hiwater_vm ; unsigned long total_vm ; unsigned long locked_vm ; unsigned long pinned_vm ; unsigned long shared_vm ; unsigned long exec_vm ; unsigned long stack_vm ; unsigned long def_flags ; unsigned long start_code , end_code , start_data , end_data ; unsigned long start_brk , brk , start_stack ; unsigned long arg_start , arg_end , env_start , env_end ; unsigned long saved_auxv [ ( 2 * ( 6 + 20 + 1 ) ) ] ; s#mm_rss_stat rss_stat ; s#linux_binfmt * binfmt ; t#cpumask_var_t cpu_vm_mask_var ; t#mm_context_t context ; unsigned long flags ; s#core_state * core_state ; t#spinlock_t ioctx_lock ; s#kioctx_table * ioctx_table ; s#task_struct * owner ; s#file * exe_file ; s#mmu_notifier_mm * mmu_notifier_mm ; t#pgtable_t pmd_huge_pte ; unsigned long numa_next_scan ; unsigned long numa_scan_offset ; int numa_scan_seq ; t#bool tlb_flush_pending ; s#uprobes_state uprobes_state ; void * suse_kabi_padding ; } 
t#pgprot_t typedef unsigned long pgprot_t 
s##anon_vma
s#vm_fault struct vm_fault { unsigned int flags ; unsigned long pgoff ; void * virtual_address ; s#page * page ; void * spare ; } 
s#vm_operations_struct struct vm_operations_struct { void ( * open ) ( s#vm_area_struct * ) ; void ( * close ) ( s#vm_area_struct * ) ; int ( * fault ) ( s#vm_area_struct * , s#vm_fault * ) ; int ( * page_mkwrite ) ( s#vm_area_struct * , s#vm_fault * ) ; int ( * access ) ( s#vm_area_struct * , unsigned long , void * , int , int ) ; int ( * set_policy ) ( s#vm_area_struct * , s#mempolicy * ) ; s#mempolicy * ( * get_policy ) ( s#vm_area_struct * , unsigned long ) ; int ( * migrate ) ( s#vm_area_struct * , const t#nodemask_t * , const t#nodemask_t * , unsigned long ) ; int ( * __deprecated_remap_pages ) ( s#vm_area_struct * , unsigned long , unsigned long , unsigned long ) ; } 
s#vm_area_struct struct vm_area_struct { unsigned long vm_start ; unsigned long vm_end ; s#vm_area_struct * vm_next , * vm_prev ; s#rb_node vm_rb ; unsigned long rb_subtree_gap ; s#mm_struct * vm_mm ; t#pgprot_t vm_page_prot ; unsigned long vm_flags ; union { struct { s#rb_node rb ; unsigned long rb_subtree_last ; } linear ; s#list_head nonlinear ; } shared ; s#list_head anon_vma_chain ; s#anon_vma * anon_vma ; const s#vm_operations_struct * vm_ops ; unsigned long vm_pgoff ; s#file * vm_file ; void * vm_private_data ; s#mempolicy * vm_policy ; void * suse_kabi_padding ; } 
s#bin_attribute struct bin_attribute { s#attribute attr ; t#size_t size ; void * private ; t#ssize_t ( * read ) ( s#file * , s#kobject * , s#bin_attribute * , char * , t#loff_t , t#size_t ) ; t#ssize_t ( * write ) ( s#file * , s#kobject * , s#bin_attribute * , char * , t#loff_t , t#size_t ) ; int ( * mmap ) ( s#file * , s#kobject * , s#bin_attribute * , s#vm_area_struct * ) ; } 
s#attribute_group struct attribute_group { const char * name ; t#umode_t ( * is_visible ) ( s#kobject * , s#attribute * , int ) ; s#attribute * * attrs ; s#bin_attribute * * bin_attrs ; } 
s#dev_pm_ops struct dev_pm_ops { int ( * prepare ) ( s#device * ) ; void ( * complete ) ( s#device * ) ; int ( * suspend ) ( s#device * ) ; int ( * resume ) ( s#device * ) ; int ( * freeze ) ( s#device * ) ; int ( * thaw ) ( s#device * ) ; int ( * poweroff ) ( s#device * ) ; int ( * restore ) ( s#device * ) ; int ( * suspend_late ) ( s#device * ) ; int ( * resume_early ) ( s#device * ) ; int ( * freeze_late ) ( s#device * ) ; int ( * thaw_early ) ( s#device * ) ; int ( * poweroff_late ) ( s#device * ) ; int ( * restore_early ) ( s#device * ) ; int ( * suspend_noirq ) ( s#device * ) ; int ( * resume_noirq ) ( s#device * ) ; int ( * freeze_noirq ) ( s#device * ) ; int ( * thaw_noirq ) ( s#device * ) ; int ( * poweroff_noirq ) ( s#device * ) ; int ( * restore_noirq ) ( s#device * ) ; int ( * runtime_suspend ) ( s#device * ) ; int ( * runtime_resume ) ( s#device * ) ; int ( * runtime_idle ) ( s#device * ) ; } 
s#device_type struct device_type { const char * name ; const s#attribute_group * * groups ; int ( * uevent ) ( s#device * , s#kobj_uevent_env * ) ; char * ( * devnode ) ( s#device * , t#umode_t * , t#kuid_t * , t#kgid_t * ) ; void ( * release ) ( s#device * ) ; const s#dev_pm_ops * pm ; } 
s#bus_attribute struct bus_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#bus_type * , char * ) ; t#ssize_t ( * store ) ( s#bus_type * , const char * , t#size_t ) ; } 
s#device_attribute struct device_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#device * , s#device_attribute * , char * ) ; t#ssize_t ( * store ) ( s#device * , s#device_attribute * , const char * , t#size_t ) ; } 
s##module
s#of_device_id struct of_device_id { char name [ 32 ] ; char type [ 32 ] ; char compatible [ 128 ] ; const void * data ; } 
t#__u8 typedef unsigned char __u8 
t#kernel_ulong_t typedef unsigned long kernel_ulong_t 
s#acpi_device_id struct acpi_device_id { t#__u8 id [ 9 ] ; t#kernel_ulong_t driver_data ; } 
s#pm_message struct pm_message { int event ; } 
t#pm_message_t typedef s#pm_message pm_message_t 
s##driver_private
s#device_driver struct device_driver { const char * name ; s#bus_type * bus ; s#module * owner ; const char * mod_name ; t#bool suppress_bind_attrs ; const s#of_device_id * of_match_table ; const s#acpi_device_id * acpi_match_table ; int ( * probe ) ( s#device * ) ; int ( * remove ) ( s#device * ) ; void ( * shutdown ) ( s#device * ) ; int ( * suspend ) ( s#device * , t#pm_message_t ) ; int ( * resume ) ( s#device * ) ; const s#attribute_group * * groups ; const s#dev_pm_ops * pm ; s#driver_private * p ; } 
s#driver_attribute struct driver_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#device_driver * , char * ) ; t#ssize_t ( * store ) ( s#device_driver * , const char * , t#size_t ) ; } 
s##iommu_ops
s##subsys_private
s#lock_class_key struct lock_class_key { } 
s#bus_type struct bus_type { const char * name ; const char * dev_name ; s#device * dev_root ; s#bus_attribute * bus_attrs ; s#device_attribute * dev_attrs ; s#driver_attribute * drv_attrs ; const s#attribute_group * * bus_groups ; const s#attribute_group * * dev_groups ; const s#attribute_group * * drv_groups ; int ( * match ) ( s#device * , s#device_driver * ) ; int ( * uevent ) ( s#device * , s#kobj_uevent_env * ) ; int ( * probe ) ( s#device * ) ; int ( * remove ) ( s#device * ) ; void ( * shutdown ) ( s#device * ) ; int ( * online ) ( s#device * ) ; int ( * offline ) ( s#device * ) ; int ( * suspend ) ( s#device * , t#pm_message_t ) ; int ( * resume ) ( s#device * ) ; const s#dev_pm_ops * pm ; s#iommu_ops * iommu_ops ; s#subsys_private * p ; s#lock_class_key lock_key ; } 
s##tvec_base
s#timer_list struct timer_list { s#list_head entry ; unsigned long expires ; s#tvec_base * base ; void ( * function ) ( unsigned long ) ; unsigned long data ; int slack ; int start_pid ; void * start_site ; char start_comm [ 16 ] ; } 
s#wakeup_source struct wakeup_source { const char * name ; s#list_head entry ; t#spinlock_t lock ; s#timer_list timer ; unsigned long timer_expires ; t#ktime_t total_time ; t#ktime_t max_time ; t#ktime_t last_time ; t#ktime_t start_prevent_time ; t#ktime_t prevent_sleep_time ; unsigned long event_count ; unsigned long active_count ; unsigned long relax_count ; unsigned long expire_count ; unsigned long wakeup_count ; t#bool active : 1 ; t#bool autosleep_enabled : 1 ; } 
t#work_func_t typedef void ( * work_func_t ) ( s#work_struct * ) 
s#work_struct struct work_struct { t#atomic_long_t data ; s#list_head entry ; t#work_func_t func ; } 
e#rpm_request enum rpm_request { RPM_REQ_NONE = 0 , RPM_REQ_IDLE , RPM_REQ_SUSPEND , RPM_REQ_AUTOSUSPEND , RPM_REQ_RESUME , } 
e#rpm_status enum rpm_status { RPM_ACTIVE = 0 , RPM_RESUMING , RPM_SUSPENDED , RPM_SUSPENDING , } 
s#pm_subsys_data struct pm_subsys_data { t#spinlock_t lock ; unsigned int refcount ; } 
s##dev_pm_qos
s#dev_pm_info struct dev_pm_info { t#pm_message_t power_state ; unsigned int can_wakeup : 1 ; unsigned int async_suspend : 1 ; t#bool is_prepared : 1 ; t#bool is_suspended : 1 ; t#bool ignore_children : 1 ; t#bool early_init : 1 ; t#spinlock_t lock ; s#list_head entry ; s#completion completion ; s#wakeup_source * wakeup ; t#bool wakeup_path : 1 ; t#bool syscore : 1 ; s#timer_list suspend_timer ; unsigned long timer_expires ; s#work_struct work ; t#wait_queue_head_t wait_queue ; t#atomic_t usage_count ; t#atomic_t child_count ; unsigned int disable_depth : 3 ; unsigned int idle_notification : 1 ; unsigned int request_pending : 1 ; unsigned int deferred_resume : 1 ; unsigned int run_wake : 1 ; unsigned int runtime_auto : 1 ; unsigned int no_callbacks : 1 ; unsigned int irq_safe : 1 ; unsigned int use_autosuspend : 1 ; unsigned int timer_autosuspends : 1 ; unsigned int memalloc_noio : 1 ; e#rpm_request request ; e#rpm_status runtime_status ; int runtime_error ; int autosuspend_delay ; unsigned long last_busy ; unsigned long active_jiffies ; unsigned long suspended_jiffies ; unsigned long accounting_timestamp ; s#pm_subsys_data * subsys_data ; s#dev_pm_qos * qos ; } 
s#dev_pm_domain struct dev_pm_domain { s#dev_pm_ops ops ; } 
s#device_dma_parameters struct device_dma_parameters { unsigned int max_segment_size ; unsigned long segment_boundary_mask ; } 
s##dma_coherent_mem
t#dma_addr_t typedef t#u64 dma_addr_t 
s##proc_dir_entry
s##hotplug_slot
s#pci_slot struct pci_slot { s#pci_bus * bus ; s#list_head list ; s#hotplug_slot * hotplug ; unsigned char number ; s#kobject kobj ; } 
s#pci_device_id struct pci_device_id { t#__u32 vendor , device ; t#__u32 subvendor , subdevice ; t#__u32 class , class_mask ; t#kernel_ulong_t driver_data ; } 
t#pci_ers_result_t typedef unsigned int pci_ers_result_t 
e#pci_channel_state enum pci_channel_state { pci_channel_io_normal = ( pci_channel_state_t ) 1 , pci_channel_io_frozen = ( pci_channel_state_t ) 2 , pci_channel_io_perm_failure = ( pci_channel_state_t ) 3 , } 
s#pci_error_handlers struct pci_error_handlers { t#pci_ers_result_t ( * error_detected ) ( s#pci_dev * , e#pci_channel_state ) ; t#pci_ers_result_t ( * mmio_enabled ) ( s#pci_dev * ) ; t#pci_ers_result_t ( * link_reset ) ( s#pci_dev * ) ; t#pci_ers_result_t ( * slot_reset ) ( s#pci_dev * ) ; void ( * resume ) ( s#pci_dev * ) ; } 
s#pci_dynids struct pci_dynids { t#spinlock_t lock ; s#list_head list ; } 
s#pci_driver struct pci_driver { s#list_head node ; const char * name ; const s#pci_device_id * id_table ; int ( * probe ) ( s#pci_dev * , const s#pci_device_id * ) ; void ( * remove ) ( s#pci_dev * ) ; int ( * suspend ) ( s#pci_dev * , t#pm_message_t ) ; int ( * suspend_late ) ( s#pci_dev * , t#pm_message_t ) ; int ( * resume_early ) ( s#pci_dev * ) ; int ( * resume ) ( s#pci_dev * ) ; void ( * shutdown ) ( s#pci_dev * ) ; int ( * sriov_configure ) ( s#pci_dev * , int ) ; const s#pci_error_handlers * err_handler ; s#device_driver driver ; s#pci_dynids dynids ; } 
t#pci_power_t typedef int pci_power_t 
s##pcie_link_state
t#pci_channel_state_t typedef unsigned int pci_channel_state_t 
t#phys_addr_t typedef t#u64 phys_addr_t 
t#resource_size_t typedef t#phys_addr_t resource_size_t 
s#resource struct resource { t#resource_size_t start ; t#resource_size_t end ; const char * name ; unsigned long flags ; s#resource * parent , * sibling , * child ; } 
E#PCI_IOV_RESOURCES ( 5 ) + 2 
E#PCI_BRIDGE_RESOURCES ( E#PCI_IOV_RESOURCES + 6 - 1 ) + 1 
E#PCI_NUM_RESOURCES ( E#PCI_BRIDGE_RESOURCES + 4 - 1 ) + 1 
E#DEVICE_COUNT_RESOURCE E#PCI_NUM_RESOURCES 
t#pci_dev_flags_t typedef unsigned short pci_dev_flags_t 
s##pci_vpd
s##pci_sriov
s##pci_ats
s#pci_dev struct pci_dev { s#list_head bus_list ; s#pci_bus * bus ; s#pci_bus * subordinate ; void * sysdata ; s#proc_dir_entry * procent ; s#pci_slot * slot ; unsigned int devfn ; unsigned short vendor ; unsigned short device ; unsigned short subsystem_vendor ; unsigned short subsystem_device ; unsigned int class ; t#u8 revision ; t#u8 hdr_type ; t#u8 pcie_cap ; t#u8 msi_cap ; t#u8 msix_cap ; t#u8 pcie_mpss : 3 ; t#u8 rom_base_reg ; t#u8 pin ; t#u16 pcie_flags_reg ; s#pci_driver * driver ; t#u64 dma_mask ; s#device_dma_parameters dma_parms ; t#pci_power_t current_state ; t#u8 pm_cap ; unsigned int pme_support : 5 ; unsigned int pme_interrupt : 1 ; unsigned int pme_poll : 1 ; unsigned int d1_support : 1 ; unsigned int d2_support : 1 ; unsigned int no_d1d2 : 1 ; unsigned int no_d3cold : 1 ; unsigned int d3cold_allowed : 1 ; unsigned int mmio_always_on : 1 ; unsigned int wakeup_prepared : 1 ; unsigned int runtime_d3cold : 1 ; unsigned int d3_delay ; unsigned int d3cold_delay ; s#pcie_link_state * link_state ; t#pci_channel_state_t error_state ; s#device dev ; int cfg_size ; unsigned int irq ; s#resource resource [ E#DEVICE_COUNT_RESOURCE ] ; t#bool match_driver ; unsigned int transparent : 1 ; unsigned int multifunction : 1 ; unsigned int is_added : 1 ; unsigned int is_busmaster : 1 ; unsigned int no_msi : 1 ; unsigned int block_cfg_access : 1 ; unsigned int broken_parity_status : 1 ; unsigned int irq_reroute_variant : 2 ; unsigned int msi_enabled : 1 ; unsigned int msix_enabled : 1 ; unsigned int ari_enabled : 1 ; unsigned int is_managed : 1 ; unsigned int is_pcie : 1 ; unsigned int needs_freset : 1 ; unsigned int state_saved : 1 ; unsigned int is_physfn : 1 ; unsigned int is_virtfn : 1 ; unsigned int reset_fn : 1 ; unsigned int is_hotplug_bridge : 1 ; unsigned int __aer_firmware_first_valid : 1 ; unsigned int __aer_firmware_first : 1 ; unsigned int broken_intx_masking : 1 ; unsigned int io_window_1k : 1 ; t#pci_dev_flags_t dev_flags ; t#atomic_t enable_cnt ; t#u32 saved_config_space [ 16 ] ; s#hlist_head saved_cap_space ; s#bin_attribute * rom_attr ; int rom_attr_enabled ; s#bin_attribute * res_attr [ E#DEVICE_COUNT_RESOURCE ] ; s#bin_attribute * res_attr_wc [ E#DEVICE_COUNT_RESOURCE ] ; s#list_head msi_list ; s#kset * msi_kset ; s#pci_vpd * vpd ; union { s#pci_sriov * sriov ; s#pci_dev * physfn ; } ; s#pci_ats * ats ; t#phys_addr_t rom ; t#size_t romlen ; } 
s#pci_ops struct pci_ops { int ( * read ) ( s#pci_bus * , unsigned int , int , int , t#u32 * ) ; int ( * write ) ( s#pci_bus * , unsigned int , int , int , t#u32 ) ; } 
s##msi_chip
t#pci_bus_flags_t typedef unsigned short pci_bus_flags_t 
s#pci_bus struct pci_bus { s#list_head node ; s#pci_bus * parent ; s#list_head children ; s#list_head devices ; s#pci_dev * self ; s#list_head slots ; s#resource * resource [ 4 ] ; s#list_head resources ; s#resource busn_res ; s#pci_ops * ops ; s#msi_chip * msi ; void * sysdata ; s#proc_dir_entry * procdir ; unsigned char number ; unsigned char primary ; unsigned char max_bus_speed ; unsigned char cur_bus_speed ; char name [ 48 ] ; unsigned short bridge_ctl ; t#pci_bus_flags_t bus_flags ; s#device * bridge ; s#device dev ; s#bin_attribute * legacy_io ; s#bin_attribute * legacy_mem ; unsigned int is_added : 1 ; } 
t#phandle typedef t#u32 phandle 
s#property struct property { char * name ; int length ; void * value ; s#property * next ; unsigned long _flags ; unsigned int unique_id ; } 
s#device_node struct device_node { const char * name ; const char * type ; t#phandle t#phandle ; const char * full_name ; s#property * properties ; s#property * deadprops ; s#device_node * parent ; s#device_node * child ; s#device_node * sibling ; s#device_node * next ; s#device_node * allnext ; s#proc_dir_entry * pde ; s#kref kref ; unsigned long _flags ; void * data ; } 
s#pci_controller struct pci_controller { s#pci_bus * bus ; char is_dynamic ; int node ; s#device_node * dn ; s#list_head list_node ; s#device * parent ; int first_busno ; int last_busno ; int self_busno ; s#resource busn ; void * io_base_virt ; void * io_base_alloc ; t#resource_size_t io_base_phys ; t#resource_size_t pci_io_size ; t#resource_size_t isa_mem_phys ; t#resource_size_t isa_mem_size ; s#pci_ops * ops ; unsigned int * cfg_addr ; void * cfg_data ; t#u32 indirect_type ; s#resource io_resource ; s#resource mem_resources [ 3 ] ; t#resource_size_t mem_offset [ 3 ] ; int global_number ; t#resource_size_t dma_window_base_cur ; t#resource_size_t dma_window_size ; unsigned long buid ; void * private_data ; } 
t#__kernel_suseconds_t typedef t#__kernel_long_t __kernel_suseconds_t 
s#timeval struct timeval { t#__kernel_time_t tv_sec ; t#__kernel_suseconds_t tv_usec ; } 
s#eeh_pe struct eeh_pe { int type ; int state ; int config_addr ; int addr ; s#pci_controller * phb ; s#pci_bus * bus ; int check_count ; int freeze_count ; s#timeval tstamp ; int false_positives ; s#eeh_pe * parent ; s#list_head child_list ; s#list_head edevs ; s#list_head child ; } 
s#eeh_dev struct eeh_dev { int mode ; int class_code ; int config_addr ; int pe_config_addr ; t#u32 config_space [ 16 ] ; t#u8 pcie_cap ; s#eeh_pe * pe ; s#list_head list ; s#pci_controller * phb ; s#device_node * dn ; s#pci_dev * pdev ; s#pci_bus * bus ; } 
s#dev_archdata struct dev_archdata { s#dma_map_ops * dma_ops ; union { t#dma_addr_t dma_offset ; void * iommu_table_base ; } dma_data ; void * iommu_domain ; s#eeh_dev * edev ; } 
s#acpi_dev_node struct acpi_dev_node { } 
t#__kernel_dev_t typedef t#__u32 __kernel_dev_t 
t#dev_t typedef t#__kernel_dev_t dev_t 
s#klist_node struct klist_node { void * n_klist ; s#list_head n_node ; s#kref n_ref ; } 
s#class_attribute struct class_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#class * , s#class_attribute * , char * ) ; t#ssize_t ( * store ) ( s#class * , s#class_attribute * , const char * , t#size_t ) ; } 
s#class struct class { const char * name ; s#module * owner ; s#class_attribute * class_attrs ; s#device_attribute * dev_attrs ; const s#attribute_group * * dev_groups ; s#bin_attribute * dev_bin_attrs ; s#kobject * dev_kobj ; int ( * dev_uevent ) ( s#device * , s#kobj_uevent_env * ) ; char * ( * devnode ) ( s#device * , t#umode_t * ) ; void ( * class_release ) ( s#class * ) ; void ( * dev_release ) ( s#device * ) ; int ( * suspend ) ( s#device * , t#pm_message_t ) ; int ( * resume ) ( s#device * ) ; const s#kobj_ns_type_operations * ns_type ; const void * ( * namespace ) ( s#device * ) ; const s#dev_pm_ops * pm ; s#subsys_private * p ; } 
s##iommu_group
s#device struct device { s#device * parent ; s#device_private * p ; s#kobject kobj ; const char * init_name ; const s#device_type * type ; s#mutex mutex ; s#bus_type * bus ; s#device_driver * driver ; void * platform_data ; s#dev_pm_info power ; s#dev_pm_domain * pm_domain ; int numa_node ; t#u64 * dma_mask ; t#u64 coherent_dma_mask ; s#device_dma_parameters * dma_parms ; s#list_head dma_pools ; s#dma_coherent_mem * dma_mem ; s#dev_archdata archdata ; s#device_node * of_node ; s#acpi_dev_node acpi_node ; t#dev_t devt ; t#u32 id ; t#spinlock_t devres_lock ; s#list_head devres_head ; s#klist_node knode_class ; s#class * class ; const s#attribute_group * * groups ; void ( * release ) ( s#device * ) ; s#iommu_group * iommu_group ; t#bool offline_disabled : 1 ; t#bool offline : 1 ; } 
E#DMA_ATTR_MAX 7 
s#dma_attrs struct dma_attrs { unsigned long flags [ ( ( ( E#DMA_ATTR_MAX ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
s#scatterlist struct scatterlist { unsigned long page_link ; unsigned int offset ; unsigned int length ; t#dma_addr_t dma_address ; unsigned int dma_length ; } 
s#sg_table struct sg_table { s#scatterlist * sgl ; unsigned int nents ; unsigned int orig_nents ; } 
e#dma_data_direction enum dma_data_direction { DMA_BIDIRECTIONAL = 0 , DMA_TO_DEVICE = 1 , DMA_FROM_DEVICE = 2 , DMA_NONE = 3 , } 
s#dma_map_ops struct dma_map_ops { void * ( * alloc ) ( s#device * , t#size_t , t#dma_addr_t * , t#gfp_t , s#dma_attrs * ) ; void ( * free ) ( s#device * , t#size_t , void * , t#dma_addr_t , s#dma_attrs * ) ; int ( * mmap ) ( s#device * , s#vm_area_struct * , void * , t#dma_addr_t , t#size_t , s#dma_attrs * ) ; int ( * get_sgtable ) ( s#device * , s#sg_table * , void * , t#dma_addr_t , t#size_t , s#dma_attrs * ) ; t#dma_addr_t ( * map_page ) ( s#device * , s#page * , unsigned long , t#size_t , e#dma_data_direction , s#dma_attrs * ) ; void ( * unmap_page ) ( s#device * , t#dma_addr_t , t#size_t , e#dma_data_direction , s#dma_attrs * ) ; int ( * map_sg ) ( s#device * , s#scatterlist * , int , e#dma_data_direction , s#dma_attrs * ) ; void ( * unmap_sg ) ( s#device * , s#scatterlist * , int , e#dma_data_direction , s#dma_attrs * ) ; void ( * sync_single_for_cpu ) ( s#device * , t#dma_addr_t , t#size_t , e#dma_data_direction ) ; void ( * sync_single_for_device ) ( s#device * , t#dma_addr_t , t#size_t , e#dma_data_direction ) ; void ( * sync_sg_for_cpu ) ( s#device * , s#scatterlist * , int , e#dma_data_direction ) ; void ( * sync_sg_for_device ) ( s#device * , s#scatterlist * , int , e#dma_data_direction ) ; int ( * mapping_error ) ( s#device * , t#dma_addr_t ) ; int ( * dma_supported ) ( s#device * , t#u64 ) ; int ( * set_dma_mask ) ( s#device * , t#u64 ) ; t#u64 ( * get_required_mask ) ( s#device * ) ; int is_phys ; } 
dma_direct_ops extern s#dma_map_ops dma_direct_ops 
dma_set_mask extern int dma_set_mask ( s#device * , t#u64 ) 
dma_get_required_mask extern t#u64 dma_get_required_mask ( s#device * ) 

/* arch/powerpc/kernel/dma-iommu.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
dma_iommu_ops extern s#dma_map_ops dma_iommu_ops 

/* arch/powerpc/kernel/eeh.o */
eeh_subsystem_enabled extern t#bool eeh_subsystem_enabled 
s##proc_dir_entry
s##hotplug_slot
s##sock
s##sysfs_dirent
s##device_private
s##vfsmount
s#hlist_bl_node struct hlist_bl_node { s#hlist_bl_node * next , * * pprev ; } 
s#qstr struct qstr { union { struct { t#u32 hash ; t#u32 len ; ; } ; t#u64 hash_len ; } ; const unsigned char * name ; } 
s##posix_acl
s##nameidata
s#iattr struct iattr { unsigned int ia_valid ; t#umode_t ia_mode ; t#kuid_t ia_uid ; t#kgid_t ia_gid ; t#loff_t ia_size ; s#timespec ia_atime ; s#timespec ia_mtime ; s#timespec ia_ctime ; s#file * ia_file ; } 
s#kstat struct kstat { t#u64 ino ; t#dev_t dev ; t#umode_t mode ; unsigned int nlink ; t#kuid_t uid ; t#kgid_t gid ; t#dev_t rdev ; t#loff_t size ; s#timespec atime ; s#timespec mtime ; s#timespec ctime ; unsigned long blksize ; unsigned long long blocks ; } 
t#__u64 __extension__ typedef unsigned long long __u64 
s#fiemap_extent struct fiemap_extent { t#__u64 fe_logical ; t#__u64 fe_physical ; t#__u64 fe_length ; t#__u64 fe_reserved64 [ 2 ] ; t#__u32 fe_flags ; t#__u32 fe_reserved [ 3 ] ; } 
s#fiemap_extent_info struct fiemap_extent_info { unsigned int fi_flags ; unsigned int fi_extents_mapped ; unsigned int fi_extents_max ; s#fiemap_extent * fi_extents_start ; } 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s#radix_tree_root struct radix_tree_root { unsigned int height ; t#gfp_t gfp_mask ; s#radix_tree_node * rnode ; } 
s##optimistic_spin_queue
s##writeback_control
t#sector_t typedef unsigned long sector_t 
s##kiocb
s##iovec
e#migrate_mode enum migrate_mode { MIGRATE_ASYNC , MIGRATE_SYNC_LIGHT , MIGRATE_SYNC , } 
t#read_descriptor_t typedef struct { t#size_t written ; t#size_t count ; union { char * buf ; void * data ; } arg ; int error ; } read_descriptor_t 
s##swap_info_struct
s#address_space_operations struct address_space_operations { int ( * writepage ) ( s#page * , s#writeback_control * ) ; int ( * readpage ) ( s#file * , s#page * ) ; int ( * writepages ) ( s#address_space * , s#writeback_control * ) ; int ( * set_page_dirty ) ( s#page * ) ; int ( * readpages ) ( s#file * , s#address_space * , s#list_head * , unsigned ) ; int ( * write_begin ) ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , void * * ) ; int ( * write_end ) ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) ; t#sector_t ( * bmap ) ( s#address_space * , t#sector_t ) ; void ( * invalidatepage ) ( s#page * , unsigned int , unsigned int ) ; int ( * releasepage ) ( s#page * , t#gfp_t ) ; void ( * freepage ) ( s#page * ) ; t#ssize_t ( * direct_IO ) ( int , s#kiocb * , const s#iovec * , t#loff_t , unsigned long ) ; int ( * get_xip_mem ) ( s#address_space * , unsigned long , int , void * * , unsigned long * ) ; int ( * migratepage ) ( s#address_space * , s#page * , s#page * , e#migrate_mode ) ; int ( * launder_page ) ( s#page * ) ; int ( * is_partially_uptodate ) ( s#page * , t#read_descriptor_t * , unsigned long ) ; void ( * is_dirty_writeback ) ( s#page * , t#bool * , t#bool * ) ; int ( * error_remove_page ) ( s#address_space * , s#page * ) ; int ( * swap_activate ) ( s#swap_info_struct * , s#file * , t#sector_t * ) ; void ( * swap_deactivate ) ( s#file * ) ; } 
s##backing_dev_info
s#address_space struct address_space { s#inode * host ; s#radix_tree_root page_tree ; t#spinlock_t tree_lock ; unsigned int i_mmap_writable ; s#rb_root i_mmap ; s#list_head i_mmap_nonlinear ; s#mutex i_mmap_mutex ; unsigned long nrpages ; unsigned long writeback_index ; const s#address_space_operations * a_ops ; unsigned long flags ; s#backing_dev_info * backing_dev_info ; t#spinlock_t private_lock ; s#list_head private_list ; void * private_data ; } 
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s#inode_operations struct inode_operations { s#dentry * ( * lookup ) ( s#inode * , s#dentry * , unsigned int ) ; void * ( * follow_link ) ( s#dentry * , s#nameidata * ) ; int ( * permission ) ( s#inode * , int ) ; s#posix_acl * ( * get_acl ) ( s#inode * , int ) ; int ( * readlink ) ( s#dentry * , char * , int ) ; void ( * put_link ) ( s#dentry * , s#nameidata * , void * ) ; int ( * create ) ( s#inode * , s#dentry * , t#umode_t , t#bool ) ; int ( * link ) ( s#dentry * , s#inode * , s#dentry * ) ; int ( * unlink ) ( s#inode * , s#dentry * ) ; int ( * symlink ) ( s#inode * , s#dentry * , const char * ) ; int ( * mkdir ) ( s#inode * , s#dentry * , t#umode_t ) ; int ( * rmdir ) ( s#inode * , s#dentry * ) ; int ( * mknod ) ( s#inode * , s#dentry * , t#umode_t , t#dev_t ) ; int ( * rename ) ( s#inode * , s#dentry * , s#inode * , s#dentry * ) ; int ( * setattr ) ( s#dentry * , s#iattr * ) ; int ( * getattr ) ( s#vfsmount * , s#dentry * , s#kstat * ) ; int ( * setxattr ) ( s#dentry * , const char * , const void * , t#size_t , int ) ; t#ssize_t ( * getxattr ) ( s#dentry * , const char * , void * , t#size_t ) ; t#ssize_t ( * listxattr ) ( s#dentry * , char * , t#size_t ) ; int ( * removexattr ) ( s#dentry * , const char * ) ; int ( * fiemap ) ( s#inode * , s#fiemap_extent_info * , t#u64 , t#u64 ) ; int ( * update_time ) ( s#inode * , s#timespec * , int ) ; int ( * atomic_open ) ( s#inode * , s#dentry * , s#file * , unsigned , t#umode_t , int * ) ; int ( * tmpfile ) ( s#inode * , s#dentry * , t#umode_t ) ; int ( * dentry_open ) ( s#dentry * , s#file * , const s#cred * ) ; } 
s##module
E#SB_FREEZE_COMPLETE 4 
s#file_system_type struct file_system_type { const char * name ; int fs_flags ; s#dentry * ( * mount ) ( s#file_system_type * , int , const char * , void * ) ; void ( * kill_sb ) ( s#super_block * ) ; s#module * owner ; s#file_system_type * next ; s#hlist_head fs_supers ; s#lock_class_key s_lock_key ; s#lock_class_key s_umount_key ; s#lock_class_key s_vfs_rename_key ; s#lock_class_key s_writers_key [ ( E#SB_FREEZE_COMPLETE - 1 ) ] ; s#lock_class_key i_lock_key ; s#lock_class_key i_mutex_key ; s#lock_class_key i_mutex_dir_key ; } 
s##kstatfs
s#seq_operations struct seq_operations { void * ( * start ) ( s#seq_file * , t#loff_t * ) ; void ( * stop ) ( s#seq_file * , void * ) ; void * ( * next ) ( s#seq_file * , void * , t#loff_t * ) ; int ( * show ) ( s#seq_file * , void * ) ; } 
s#seq_file struct seq_file { char * buf ; t#size_t size ; t#size_t from ; t#size_t count ; t#loff_t index ; t#loff_t read_pos ; t#u64 version ; s#mutex lock ; const s#seq_operations * op ; int poll_event ; s#user_namespace * user_ns ; void * private ; } 
s#super_operations struct super_operations { s#inode * ( * alloc_inode ) ( s#super_block * ) ; void ( * destroy_inode ) ( s#inode * ) ; void ( * dirty_inode ) ( s#inode * , int ) ; int ( * write_inode ) ( s#inode * , s#writeback_control * ) ; int ( * drop_inode ) ( s#inode * ) ; void ( * evict_inode ) ( s#inode * ) ; void ( * put_super ) ( s#super_block * ) ; int ( * sync_fs ) ( s#super_block * , int ) ; int ( * freeze_fs ) ( s#super_block * ) ; int ( * unfreeze_fs ) ( s#super_block * ) ; int ( * statfs ) ( s#dentry * , s#kstatfs * ) ; int ( * remount_fs ) ( s#super_block * , int * , char * ) ; void ( * umount_begin ) ( s#super_block * ) ; int ( * show_options ) ( s#seq_file * , s#dentry * ) ; int ( * show_devname ) ( s#seq_file * , s#dentry * ) ; int ( * show_path ) ( s#seq_file * , s#dentry * ) ; int ( * show_stats ) ( s#seq_file * , s#dentry * ) ; t#ssize_t ( * quota_read ) ( s#super_block * , int , char * , t#size_t , t#loff_t ) ; t#ssize_t ( * quota_write ) ( s#super_block * , int , const char * , t#size_t , t#loff_t ) ; int ( * bdev_try_to_free_page ) ( s#super_block * , s#page * , t#gfp_t ) ; long ( * nr_cached_objects ) ( s#super_block * , int ) ; long ( * free_cached_objects ) ( s#super_block * , long , int ) ; } 
t#projid_t typedef t#__kernel_uid32_t projid_t 
t#kprojid_t typedef struct { t#projid_t val ; } kprojid_t 
e#quota_type enum quota_type { USRQUOTA = 0 , GRPQUOTA = 1 , PRJQUOTA = 2 , } 
s#kqid struct kqid { union { t#kuid_t uid ; t#kgid_t gid ; t#kprojid_t projid ; } ; e#quota_type type ; } 
t#qsize_t typedef long long qsize_t 
s#mem_dqblk struct mem_dqblk { t#qsize_t dqb_bhardlimit ; t#qsize_t dqb_bsoftlimit ; t#qsize_t dqb_curspace ; t#qsize_t dqb_rsvspace ; t#qsize_t dqb_ihardlimit ; t#qsize_t dqb_isoftlimit ; t#qsize_t dqb_curinodes ; t#time_t dqb_btime ; t#time_t dqb_itime ; } 
s#dquot struct dquot { s#hlist_node dq_hash ; s#list_head dq_inuse ; s#list_head dq_free ; s#list_head dq_dirty ; s#mutex dq_lock ; t#atomic_t dq_count ; t#wait_queue_head_t dq_wait_unused ; s#super_block * dq_sb ; s#kqid dq_id ; t#loff_t dq_off ; unsigned long dq_flags ; s#mem_dqblk dq_dqb ; } 
s#dquot_operations struct dquot_operations { int ( * write_dquot ) ( s#dquot * ) ; s#dquot * ( * alloc_dquot ) ( s#super_block * , int ) ; void ( * destroy_dquot ) ( s#dquot * ) ; int ( * acquire_dquot ) ( s#dquot * ) ; int ( * release_dquot ) ( s#dquot * ) ; int ( * mark_dirty ) ( s#dquot * ) ; int ( * write_info ) ( s#super_block * , int ) ; t#qsize_t * ( * get_reserved_space ) ( s#inode * ) ; } 
s#if_dqinfo struct if_dqinfo { t#__u64 dqi_bgrace ; t#__u64 dqi_igrace ; t#__u32 dqi_flags ; t#__u32 dqi_valid ; } 
t#__s8 typedef __signed__ char __s8 
t#__u16 typedef unsigned short __u16 
t#__s16 typedef __signed__ short __s16 
s#fs_disk_quota struct fs_disk_quota { t#__s8 d_version ; t#__s8 d_flags ; t#__u16 d_fieldmask ; t#__u32 d_id ; t#__u64 d_blk_hardlimit ; t#__u64 d_blk_softlimit ; t#__u64 d_ino_hardlimit ; t#__u64 d_ino_softlimit ; t#__u64 d_bcount ; t#__u64 d_icount ; t#__s32 d_itimer ; t#__s32 d_btimer ; t#__u16 d_iwarns ; t#__u16 d_bwarns ; t#__s32 d_padding2 ; t#__u64 d_rtb_hardlimit ; t#__u64 d_rtb_softlimit ; t#__u64 d_rtbcount ; t#__s32 d_rtbtimer ; t#__u16 d_rtbwarns ; t#__s16 d_padding3 ; char d_padding4 [ 8 ] ; } 
s#fs_qfilestat struct fs_qfilestat { t#__u64 qfs_ino ; t#__u64 qfs_nblks ; t#__u32 qfs_nextents ; } 
t#fs_qfilestat_t typedef s#fs_qfilestat fs_qfilestat_t 
s#fs_quota_stat struct fs_quota_stat { t#__s8 qs_version ; t#__u16 qs_flags ; t#__s8 qs_pad ; t#fs_qfilestat_t qs_uquota ; t#fs_qfilestat_t qs_gquota ; t#__u32 qs_incoredqs ; t#__s32 qs_btimelimit ; t#__s32 qs_itimelimit ; t#__s32 qs_rtbtimelimit ; t#__u16 qs_bwarnlimit ; t#__u16 qs_iwarnlimit ; } 
s#fs_qfilestatv struct fs_qfilestatv { t#__u64 qfs_ino ; t#__u64 qfs_nblks ; t#__u32 qfs_nextents ; t#__u32 qfs_pad ; } 
s#fs_quota_statv struct fs_quota_statv { t#__s8 qs_version ; t#__u8 qs_pad1 ; t#__u16 qs_flags ; t#__u32 qs_incoredqs ; s#fs_qfilestatv qs_uquota ; s#fs_qfilestatv qs_gquota ; s#fs_qfilestatv qs_pquota ; t#__s32 qs_btimelimit ; t#__s32 qs_itimelimit ; t#__s32 qs_rtbtimelimit ; t#__u16 qs_bwarnlimit ; t#__u16 qs_iwarnlimit ; t#__u64 qs_pad2 [ 8 ] ; } 
s#quotactl_ops struct quotactl_ops { int ( * quota_on ) ( s#super_block * , int , int , s#path * ) ; int ( * quota_on_meta ) ( s#super_block * , int , int ) ; int ( * quota_off ) ( s#super_block * , int ) ; int ( * quota_sync ) ( s#super_block * , int ) ; int ( * get_info ) ( s#super_block * , int , s#if_dqinfo * ) ; int ( * set_info ) ( s#super_block * , int , s#if_dqinfo * ) ; int ( * get_dqblk ) ( s#super_block * , s#kqid , s#fs_disk_quota * ) ; int ( * set_dqblk ) ( s#super_block * , s#kqid , s#fs_disk_quota * ) ; int ( * get_xstate ) ( s#super_block * , s#fs_quota_stat * ) ; int ( * set_xstate ) ( s#super_block * , unsigned int , int ) ; int ( * get_xstatev ) ( s#super_block * , s#fs_quota_statv * ) ; int ( * rm_xquota ) ( s#super_block * , unsigned int ) ; } 
s##export_operations
s##xattr_handler
s#hlist_bl_head struct hlist_bl_head { s#hlist_bl_node * first ; } 
s##hd_struct
s##gendisk
s##request_queue
s#block_device struct block_device { t#dev_t bd_dev ; int bd_openers ; s#inode * bd_inode ; s#super_block * bd_super ; s#mutex bd_mutex ; s#list_head bd_inodes ; void * bd_claiming ; void * bd_holder ; int bd_holders ; t#bool bd_write_holder ; s#list_head bd_holder_disks ; s#block_device * bd_contains ; unsigned bd_block_size ; s#hd_struct * bd_part ; unsigned bd_part_count ; int bd_invalidated ; s#gendisk * bd_disk ; s#request_queue * bd_queue ; s#list_head bd_list ; unsigned long bd_private ; int bd_fsfreeze_count ; s#mutex bd_fsfreeze_mutex ; } 
s##mtd_info
s#quota_format_ops struct quota_format_ops { int ( * check_quota_file ) ( s#super_block * , int ) ; int ( * read_file_info ) ( s#super_block * , int ) ; int ( * write_file_info ) ( s#super_block * , int ) ; int ( * free_file_info ) ( s#super_block * , int ) ; int ( * read_dqblk ) ( s#dquot * ) ; int ( * commit_dqblk ) ( s#dquot * ) ; int ( * release_dqblk ) ( s#dquot * ) ; } 
s#quota_format_type struct quota_format_type { int qf_fmt_id ; const s#quota_format_ops * qf_ops ; s#module * qf_owner ; s#quota_format_type * qf_next ; } 
s#mem_dqinfo struct mem_dqinfo { s#quota_format_type * dqi_format ; int dqi_fmt_id ; s#list_head dqi_dirty_list ; unsigned long dqi_flags ; unsigned int dqi_bgrace ; unsigned int dqi_igrace ; t#qsize_t dqi_maxblimit ; t#qsize_t dqi_maxilimit ; void * dqi_priv ; } 
s#quota_info struct quota_info { unsigned int flags ; s#mutex dqio_mutex ; s#mutex dqonoff_mutex ; s#rw_semaphore dqptr_sem ; s#inode * files [ 2 ] ; s#mem_dqinfo info [ 2 ] ; const s#quota_format_ops * ops [ 2 ] ; } 
t#s32 typedef signed int s32 
s#percpu_counter struct percpu_counter { t#raw_spinlock_t lock ; t#s64 count ; s#list_head list ; t#s32 * counters ; } 
s#sb_writers struct sb_writers { s#percpu_counter counter [ ( E#SB_FREEZE_COMPLETE - 1 ) ] ; t#wait_queue_head_t wait ; int frozen ; t#wait_queue_head_t wait_unfrozen ; } 
t#fmode_t typedef unsigned fmode_t 
s#dentry_operations struct dentry_operations { int ( * d_revalidate ) ( s#dentry * , unsigned int ) ; int ( * d_weak_revalidate ) ( s#dentry * , unsigned int ) ; int ( * d_hash ) ( const s#dentry * , s#qstr * ) ; int ( * d_compare ) ( const s#dentry * , const s#dentry * , unsigned int , const char * , const s#qstr * ) ; int ( * d_delete ) ( const s#dentry * ) ; void ( * d_release ) ( s#dentry * ) ; void ( * d_prune ) ( s#dentry * ) ; void ( * d_iput ) ( s#dentry * , s#inode * ) ; char * ( * d_dname ) ( s#dentry * , char * , int ) ; s#vfsmount * ( * d_automount ) ( s#path * ) ; int ( * d_manage ) ( s#dentry * , t#bool ) ; } 
s#shrink_control struct shrink_control { t#gfp_t gfp_mask ; unsigned long nr_to_scan ; t#nodemask_t nodes_to_scan ; int nid ; } 
s#shrinker struct shrinker { unsigned long ( * count_objects ) ( s#shrinker * , s#shrink_control * ) ; unsigned long ( * scan_objects ) ( s#shrinker * , s#shrink_control * ) ; int seeks ; long batch ; unsigned long flags ; s#list_head list ; t#atomic_long_t * nr_deferred ; } 
s##workqueue_struct
s#list_lru_node struct list_lru_node { t#spinlock_t lock ; s#list_head list ; long nr_items ; } 
s#list_lru struct list_lru { s#list_lru_node * node ; t#nodemask_t active_nodes ; } 
s#super_block struct super_block { s#list_head s_list ; t#dev_t s_dev ; unsigned char s_blocksize_bits ; unsigned long s_blocksize ; t#loff_t s_maxbytes ; s#file_system_type * s_type ; const s#super_operations * s_op ; const s#dquot_operations * dq_op ; const s#quotactl_ops * s_qcop ; const s#export_operations * s_export_op ; unsigned long s_flags ; unsigned long s_magic ; s#dentry * s_root ; s#rw_semaphore s_umount ; int s_count ; t#atomic_t s_active ; void * s_security ; const s#xattr_handler * * s_xattr ; s#list_head s_inodes ; s#hlist_bl_head s_anon ; s#list_head s_sbdevs ; s#list_head s_mounts ; s#block_device * s_bdev ; s#backing_dev_info * s_bdi ; s#mtd_info * s_mtd ; s#hlist_node s_instances ; s#quota_info s_dquot ; s#sb_writers s_writers ; char s_id [ 32 ] ; t#u8 s_uuid [ 16 ] ; void * s_fs_info ; unsigned int s_max_links ; t#fmode_t s_mode ; t#u32 s_time_gran ; s#mutex s_vfs_rename_mutex ; char * s_subtype ; char * s_options ; const s#dentry_operations * s_d_op ; int cleancache_poolid ; s#shrinker s_shrink ; t#atomic_long_t s_remove_count ; int s_readonly_remount ; s#workqueue_struct * s_dio_done_wq ; int s_stack_depth ; s#list_lru s_dentry_lru __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; s#list_lru s_inode_lru __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; } 
t#blkcnt_t typedef unsigned long blkcnt_t 
t#filldir_t typedef int ( * filldir_t ) ( void * , const char * , int , t#loff_t , t#u64 , unsigned ) 
s#dir_context struct dir_context { const t#filldir_t actor ; t#loff_t pos ; } 
s##poll_table_struct
t#fl_owner_t typedef s#files_struct * fl_owner_t 
s#fasync_struct struct fasync_struct { t#spinlock_t fa_lock ; int magic ; int fa_fd ; s#fasync_struct * fa_next ; s#file * fa_file ; s#callback_head fa_rcu ; } 
s#file_lock_operations struct file_lock_operations { void ( * fl_copy_lock ) ( s#file_lock * , s#file_lock * ) ; void ( * fl_release_private ) ( s#file_lock * ) ; } 
s#lock_manager_operations struct lock_manager_operations { int ( * lm_compare_owner ) ( s#file_lock * , s#file_lock * ) ; unsigned long ( * lm_owner_key ) ( s#file_lock * ) ; void ( * lm_notify ) ( s#file_lock * ) ; int ( * lm_grant ) ( s#file_lock * , s#file_lock * , int ) ; void ( * lm_break ) ( s#file_lock * ) ; int ( * lm_change ) ( s#file_lock * * , int ) ; } 
s##nlm_lockowner
s#nfs_lock_info struct nfs_lock_info { t#u32 state ; s#nlm_lockowner * owner ; s#list_head list ; } 
s##nfs4_lock_state
s#nfs4_lock_info struct nfs4_lock_info { s#nfs4_lock_state * owner ; } 
s#file_lock struct file_lock { s#file_lock * fl_next ; s#hlist_node fl_link ; s#list_head fl_block ; t#fl_owner_t fl_owner ; unsigned int fl_flags ; unsigned char fl_type ; unsigned int fl_pid ; int fl_link_cpu ; s#pid * fl_nspid ; t#wait_queue_head_t fl_wait ; s#file * fl_file ; t#loff_t fl_start ; t#loff_t fl_end ; s#fasync_struct * fl_fasync ; unsigned long fl_break_time ; unsigned long fl_downgrade_time ; const s#file_lock_operations * fl_ops ; const s#lock_manager_operations * fl_lmops ; union { s#nfs_lock_info nfs_fl ; s#nfs4_lock_info nfs4_fl ; struct { s#list_head link ; int state ; } afs ; } fl_u ; } 
s#file_operations struct file_operations { s#module * owner ; t#loff_t ( * llseek ) ( s#file * , t#loff_t , int ) ; t#ssize_t ( * read ) ( s#file * , char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * write ) ( s#file * , const char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * aio_read ) ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t ) ; t#ssize_t ( * aio_write ) ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t ) ; int ( * iterate ) ( s#file * , s#dir_context * ) ; unsigned int ( * poll ) ( s#file * , s#poll_table_struct * ) ; long ( * unlocked_ioctl ) ( s#file * , unsigned int , unsigned long ) ; long ( * compat_ioctl ) ( s#file * , unsigned int , unsigned long ) ; int ( * mmap ) ( s#file * , s#vm_area_struct * ) ; int ( * open ) ( s#inode * , s#file * ) ; int ( * flush ) ( s#file * , t#fl_owner_t ) ; int ( * release ) ( s#inode * , s#file * ) ; int ( * fsync ) ( s#file * , t#loff_t , t#loff_t , int ) ; int ( * aio_fsync ) ( s#kiocb * , int ) ; int ( * fasync ) ( int , s#file * , int ) ; int ( * lock ) ( s#file * , int , s#file_lock * ) ; t#ssize_t ( * sendpage ) ( s#file * , s#page * , int , t#size_t , t#loff_t * , int ) ; unsigned long ( * get_unmapped_area ) ( s#file * , unsigned long , unsigned long , unsigned long , unsigned long ) ; int ( * check_flags ) ( int ) ; int ( * flock ) ( s#file * , int , s#file_lock * ) ; t#ssize_t ( * splice_write ) ( s#pipe_inode_info * , s#file * , t#loff_t * , t#size_t , unsigned int ) ; t#ssize_t ( * splice_read ) ( s#file * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) ; int ( * setlease ) ( s#file * , long , s#file_lock * * ) ; long ( * fallocate ) ( s#file * , int , t#loff_t , t#loff_t ) ; int ( * show_fdinfo ) ( s#seq_file * , s#file * ) ; } 
s##cdev
s#inode struct inode { t#umode_t i_mode ; unsigned short i_opflags ; t#kuid_t i_uid ; t#kgid_t i_gid ; unsigned int i_flags ; s#posix_acl * i_acl ; s#posix_acl * i_default_acl ; const s#inode_operations * i_op ; s#super_block * i_sb ; s#address_space * i_mapping ; void * i_security ; unsigned long i_ino ; union { const unsigned int i_nlink ; unsigned int __i_nlink ; } ; t#dev_t i_rdev ; t#loff_t i_size ; s#timespec i_atime ; s#timespec i_mtime ; s#timespec i_ctime ; t#spinlock_t i_lock ; unsigned short i_bytes ; unsigned int i_blkbits ; t#blkcnt_t i_blocks ; unsigned long i_state ; s#mutex i_mutex ; unsigned long dirtied_when ; s#hlist_node i_hash ; s#list_head i_wb_list ; s#list_head i_lru ; s#list_head i_sb_list ; union { s#hlist_head i_dentry ; s#callback_head i_rcu ; } ; t#u64 i_version ; t#atomic_t i_count ; t#atomic_t i_dio_count ; t#atomic_t i_writecount ; const s#file_operations * i_fop ; s#file_lock * i_flock ; s#address_space i_data ; s#dquot * i_dquot [ 2 ] ; s#list_head i_devices ; union { s#pipe_inode_info * i_pipe ; s#block_device * i_bdev ; s#cdev * i_cdev ; } ; t#__u32 i_generation ; t#__u32 i_fsnotify_mask ; s#hlist_head i_fsnotify_marks ; t#atomic_t i_readcount ; void * i_private ; } 
s#lockref struct lockref { union { struct { t#spinlock_t lock ; unsigned int count ; } ; } ; } 
s#dentry struct dentry { unsigned int d_flags ; t#seqcount_t d_seq ; s#hlist_bl_node d_hash ; s#dentry * d_parent ; s#qstr d_name ; s#inode * d_inode ; unsigned char d_iname [ 32 ] ; s#lockref d_lockref ; const s#dentry_operations * d_op ; s#super_block * d_sb ; unsigned long d_time ; void * d_fsdata ; s#list_head d_lru ; union { s#list_head d_child ; s#callback_head d_rcu ; } d_u ; s#list_head d_subdirs ; s#hlist_node d_alias ; } 
s#path struct path { s#vfsmount * mnt ; s#dentry * dentry ; } 
t#arch_rwlock_t typedef struct { volatile signed int lock ; } arch_rwlock_t 
t#rwlock_t typedef struct { t#arch_rwlock_t raw_lock ; } rwlock_t 
e#pid_type enum pid_type { PIDTYPE_PID , PIDTYPE_PGID , PIDTYPE_SID , PIDTYPE_MAX } 
s#fown_struct struct fown_struct { t#rwlock_t lock ; s#pid * pid ; e#pid_type pid_type ; t#kuid_t uid , euid ; int signum ; } 
s#file_ra_state struct file_ra_state { unsigned long start ; unsigned int size ; unsigned int async_size ; unsigned int ra_pages ; unsigned int mmap_miss ; t#loff_t prev_pos ; } 
s#file struct file { union { s#llist_node fu_llist ; s#callback_head fu_rcuhead ; } f_u ; s#path f_path ; s#inode * f_inode ; const s#file_operations * f_op ; t#spinlock_t f_lock ; t#atomic_long_t f_count ; unsigned int f_flags ; t#fmode_t f_mode ; t#loff_t f_pos ; s#fown_struct f_owner ; const s#cred * f_cred ; s#file_ra_state f_ra ; t#u64 f_version ; void * f_security ; void * private_data ; s#list_head f_ep_links ; s#list_head f_tfile_llink ; s#address_space * f_mapping ; } 
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##subsys_private
s##iommu_group
s##iommu_ops
s##driver_private
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
eeh_dev_check_failure int eeh_dev_check_failure ( s#eeh_dev * ) 
eeh_check_failure unsigned long eeh_check_failure ( const volatile void * , unsigned long ) 
eeh_add_device_tree_early void eeh_add_device_tree_early ( s#device_node * ) 
eeh_add_device_tree_late void eeh_add_device_tree_late ( s#pci_bus * ) 
eeh_add_sysfs_files void eeh_add_sysfs_files ( s#pci_bus * ) 

/* arch/powerpc/kernel/firmware.o */
powerpc_firmware_features extern unsigned long powerpc_firmware_features 

/* arch/powerpc/kernel/idle.o */
cpuidle_disable extern unsigned long cpuidle_disable 

/* arch/powerpc/kernel/io.o */
_insb extern void _insb ( const volatile t#u8 * , void * , long ) 
_outsb extern void _outsb ( volatile t#u8 * , const void * , long ) 
_insw_ns extern void _insw_ns ( const volatile t#u16 * , void * , long ) 
_outsw_ns extern void _outsw_ns ( volatile t#u16 * , const void * , long ) 
_insl_ns extern void _insl_ns ( const volatile t#u32 * , void * , long ) 
_outsl_ns extern void _outsl_ns ( volatile t#u32 * , const void * , long ) 
_memset_io extern void _memset_io ( volatile void * , int , unsigned long ) 
_memcpy_fromio extern void _memcpy_fromio ( void * , const volatile void * , unsigned long ) 
_memcpy_toio extern void _memcpy_toio ( volatile void * , const void * , unsigned long ) 

/* arch/powerpc/kernel/iommu.o */
iommu_tce_direction extern e#dma_data_direction iommu_tce_direction ( unsigned long ) 
s#iommu_pool struct iommu_pool { unsigned long start ; unsigned long end ; unsigned long hint ; t#spinlock_t lock ; } 
s##iommu_group
s#iommu_table struct iommu_table { unsigned long it_busno ; unsigned long it_size ; unsigned long it_offset ; unsigned long it_base ; unsigned long it_index ; unsigned long it_type ; unsigned long it_blocksize ; unsigned long poolsize ; unsigned long nr_pools ; s#iommu_pool large_pool ; s#iommu_pool pools [ ( 1 << 2 ) ] ; unsigned long * it_map ; unsigned long it_page_shift ; s#iommu_group * it_group ; void ( * set_bypass ) ( s#iommu_table * , t#bool ) ; } 
iommu_flush_tce extern void iommu_flush_tce ( s#iommu_table * ) 
iommu_tce_clear_param_check extern int iommu_tce_clear_param_check ( s#iommu_table * , unsigned long , unsigned long , unsigned long ) 
iommu_tce_put_param_check extern int iommu_tce_put_param_check ( s#iommu_table * , unsigned long , unsigned long ) 
iommu_clear_tce extern unsigned long iommu_clear_tce ( s#iommu_table * , unsigned long ) 
iommu_clear_tces_and_put_pages extern int iommu_clear_tces_and_put_pages ( s#iommu_table * , unsigned long , unsigned long ) 
iommu_tce_build extern int iommu_tce_build ( s#iommu_table * , unsigned long , unsigned long , e#dma_data_direction ) 
iommu_put_tce_user_mode extern int iommu_put_tce_user_mode ( s#iommu_table * , unsigned long , unsigned long ) 
iommu_take_ownership extern int iommu_take_ownership ( s#iommu_table * ) 
iommu_release_ownership extern void iommu_release_ownership ( s#iommu_table * ) 
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s#iovec struct iovec { void * iov_base ; t#__kernel_size_t iov_len ; } 
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s#pidmap struct pidmap { t#atomic_t nr_free ; void * page ; } 
s##bsd_acct_struct
s##user_namespace
s#pid_namespace struct pid_namespace { s#kref kref ; s#pidmap pidmap [ ( ( ( 0 ? ( 1UL << 16 ) * 8 : ( sizeof ( long ) > 4 ? 4 * 1024 * 1024 : ( 0 ? 0x1000 : 0x8000 ) ) ) + ( ( 1UL << 16 ) * 8 ) - 1 ) / ( ( 1UL << 16 ) * 8 ) ) ] ; int last_pid ; unsigned int nr_hashed ; s#task_struct * child_reaper ; s#kmem_cache * pid_cachep ; unsigned int level ; s#pid_namespace * parent ; s#vfsmount * proc_mnt ; s#dentry * proc_self ; s#bsd_acct_struct * bacct ; s#user_namespace * user_ns ; s#work_struct proc_work ; t#kgid_t pid_gid ; int hide_pid ; int reboot ; unsigned int proc_inum ; } 
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s#nsproxy struct nsproxy { t#atomic_t count ; s#uts_namespace * uts_ns ; s#ipc_namespace * ipc_ns ; s#mnt_namespace * mnt_ns ; s#pid_namespace * pid_ns_for_children ; s#net * net_ns ; } 
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
t#compat_uptr_t typedef t#u32 compat_uptr_t 
s#compat_robust_list struct compat_robust_list { t#compat_uptr_t next ; } 
t#compat_long_t typedef t#s32 compat_long_t 
s#compat_robust_list_head struct compat_robust_list_head { s#compat_robust_list list ; t#compat_long_t futex_offset ; t#compat_uptr_t list_op_pending ; } 
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##module
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
t#iommu_fault_handler_t typedef int ( * iommu_fault_handler_t ) ( s#iommu_domain * , s#device * , unsigned long , int , void * ) 
s#iommu_domain_geometry struct iommu_domain_geometry { t#dma_addr_t aperture_start ; t#dma_addr_t aperture_end ; t#bool force_aperture ; } 
s#iommu_domain struct iommu_domain { s#iommu_ops * ops ; void * priv ; t#iommu_fault_handler_t handler ; void * handler_token ; s#iommu_domain_geometry geometry ; } 
e#iommu_attr enum iommu_attr { DOMAIN_ATTR_GEOMETRY , DOMAIN_ATTR_PAGING , DOMAIN_ATTR_WINDOWS , DOMAIN_ATTR_FSL_PAMU_STASH , DOMAIN_ATTR_FSL_PAMU_ENABLE , DOMAIN_ATTR_FSL_PAMUV1 , DOMAIN_ATTR_MAX , } 
s#iommu_ops struct iommu_ops { int ( * domain_init ) ( s#iommu_domain * ) ; void ( * domain_destroy ) ( s#iommu_domain * ) ; int ( * attach_dev ) ( s#iommu_domain * , s#device * ) ; void ( * detach_dev ) ( s#iommu_domain * , s#device * ) ; int ( * map ) ( s#iommu_domain * , unsigned long , t#phys_addr_t , t#size_t , int ) ; t#size_t ( * unmap ) ( s#iommu_domain * , unsigned long , t#size_t ) ; t#phys_addr_t ( * iova_to_phys ) ( s#iommu_domain * , t#dma_addr_t ) ; int ( * domain_has_cap ) ( s#iommu_domain * , unsigned long ) ; int ( * add_device ) ( s#device * ) ; void ( * remove_device ) ( s#device * ) ; int ( * device_group ) ( s#device * , unsigned int * ) ; int ( * domain_get_attr ) ( s#iommu_domain * , e#iommu_attr , void * ) ; int ( * domain_set_attr ) ( s#iommu_domain * , e#iommu_attr , void * ) ; int ( * domain_window_enable ) ( s#iommu_domain * , t#u32 , t#phys_addr_t , t#u64 , int ) ; void ( * domain_window_disable ) ( s#iommu_domain * , t#u32 ) ; int ( * domain_set_windows ) ( s#iommu_domain * , t#u32 ) ; t#u32 ( * domain_get_windows ) ( s#iommu_domain * ) ; unsigned long pgsize_bitmap ; } 
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
iommu_add_device extern int iommu_add_device ( s#device * ) 
iommu_del_device extern void iommu_del_device ( s#device * ) 

/* arch/powerpc/kernel/irq.o */
t#irq_cpustat_t typedef struct { unsigned int __softirq_pending ; unsigned int timer_irqs_event ; unsigned int timer_irqs_others ; unsigned int pmu_irqs ; unsigned int mce_exceptions ; unsigned int spurious_irqs ; unsigned int doorbell_irqs ; } __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) irq_cpustat_t 
irq_stat extern __attribute__ ( ( section ( ".data..percpu" "..shared_aligned" ) ) ) __typeof__ ( t#irq_cpustat_t ) irq_stat 
arch_local_irq_restore extern void arch_local_irq_restore ( unsigned long ) 
t#irq_hw_number_t typedef unsigned long irq_hw_number_t 
virq_to_hw extern t#irq_hw_number_t virq_to_hw ( unsigned int ) 

/* arch/powerpc/kernel/isa-bridge.o */
isa_io_base extern unsigned long isa_io_base 
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
isa_bridge_pcidev extern s#pci_dev * isa_bridge_pcidev 

/* arch/powerpc/kernel/mce.o */
t#uint64_t typedef t#__u64 uint64_t 
e#MCE_Version enum MCE_Version { MCE_V1 = 1 , } 
t#uint8_t typedef t#__u8 uint8_t 
e#MCE_Severity enum MCE_Severity { MCE_SEV_NO_ERROR = 0 , MCE_SEV_WARNING = 1 , MCE_SEV_ERROR_SYNC = 2 , MCE_SEV_FATAL = 3 , } 
e#MCE_Initiator enum MCE_Initiator { MCE_INITIATOR_UNKNOWN = 0 , MCE_INITIATOR_CPU = 1 , } 
e#MCE_ErrorType enum MCE_ErrorType { MCE_ERROR_TYPE_UNKNOWN = 0 , MCE_ERROR_TYPE_UE = 1 , MCE_ERROR_TYPE_SLB = 2 , MCE_ERROR_TYPE_ERAT = 3 , MCE_ERROR_TYPE_TLB = 4 , } 
e#MCE_Disposition enum MCE_Disposition { MCE_DISPOSITION_RECOVERED = 0 , MCE_DISPOSITION_NOT_RECOVERED = 1 , } 
e#MCE_UeErrorType enum MCE_UeErrorType { MCE_UE_ERROR_INDETERMINATE = 0 , MCE_UE_ERROR_IFETCH = 1 , MCE_UE_ERROR_PAGE_TABLE_WALK_IFETCH = 2 , MCE_UE_ERROR_LOAD_STORE = 3 , MCE_UE_ERROR_PAGE_TABLE_WALK_LOAD_STORE = 4 , } 
e#MCE_SlbErrorType enum MCE_SlbErrorType { MCE_SLB_ERROR_INDETERMINATE = 0 , MCE_SLB_ERROR_PARITY = 1 , MCE_SLB_ERROR_MULTIHIT = 2 , } 
e#MCE_EratErrorType enum MCE_EratErrorType { MCE_ERAT_ERROR_INDETERMINATE = 0 , MCE_ERAT_ERROR_PARITY = 1 , MCE_ERAT_ERROR_MULTIHIT = 2 , } 
e#MCE_TlbErrorType enum MCE_TlbErrorType { MCE_TLB_ERROR_INDETERMINATE = 0 , MCE_TLB_ERROR_PARITY = 1 , MCE_TLB_ERROR_MULTIHIT = 2 , } 
s#machine_check_event struct machine_check_event { e#MCE_Version version : 8 ; t#uint8_t in_use ; e#MCE_Severity severity : 8 ; e#MCE_Initiator initiator : 8 ; e#MCE_ErrorType error_type : 8 ; e#MCE_Disposition disposition : 8 ; t#uint8_t reserved_1 [ 2 ] ; t#uint64_t gpr3 ; t#uint64_t srr0 ; t#uint64_t srr1 ; union { struct { e#MCE_UeErrorType ue_error_type : 8 ; t#uint8_t effective_address_provided ; t#uint8_t physical_address_provided ; t#uint8_t reserved_1 [ 5 ] ; t#uint64_t effective_address ; t#uint64_t physical_address ; t#uint8_t reserved_2 [ 8 ] ; } ue_error ; struct { e#MCE_SlbErrorType slb_error_type : 8 ; t#uint8_t effective_address_provided ; t#uint8_t reserved_1 [ 6 ] ; t#uint64_t effective_address ; t#uint8_t reserved_2 [ 16 ] ; } slb_error ; struct { e#MCE_EratErrorType erat_error_type : 8 ; t#uint8_t effective_address_provided ; t#uint8_t reserved_1 [ 6 ] ; t#uint64_t effective_address ; t#uint8_t reserved_2 [ 16 ] ; } erat_error ; struct { e#MCE_TlbErrorType tlb_error_type : 8 ; t#uint8_t effective_address_provided ; t#uint8_t reserved_1 [ 6 ] ; t#uint64_t effective_address ; t#uint8_t reserved_2 [ 16 ] ; } tlb_error ; } u ; } 
get_mce_fault_addr extern t#uint64_t get_mce_fault_addr ( s#machine_check_event * ) 

/* arch/powerpc/kernel/paca.o */
t#__be32 typedef t#__u32 __be32 
t#__be16 typedef t#__u16 __be16 
t#__be64 typedef t#__u64 __be64 
s#lppaca struct lppaca { t#__be32 desc ; t#__be16 size ; t#u8 reserved1 [ 3 ] ; t#u8 __old_status ; t#u8 reserved3 [ 14 ] ; volatile t#__be32 dyn_hw_node_id ; volatile t#__be32 dyn_hw_proc_id ; t#u8 reserved4 [ 56 ] ; volatile t#u8 vphn_assoc_counts [ 8 ] ; t#u8 reserved5 [ 32 ] ; t#u8 reserved6 [ 48 ] ; t#u8 cede_latency_hint ; t#u8 ebb_regs_in_use ; t#u8 reserved7 [ 6 ] ; t#u8 dtl_enable_mask ; t#u8 donate_dedicated_cpu ; t#u8 fpregs_in_use ; t#u8 pmcregs_in_use ; t#u8 reserved8 [ 28 ] ; t#__be64 wait_state_cycles ; t#u8 reserved9 [ 28 ] ; t#__be16 slb_count ; t#u8 idle ; t#u8 vmxregs_in_use ; volatile t#__be32 yield_count ; volatile t#__be32 dispersion_count ; volatile t#__be64 cmo_faults ; volatile t#__be64 cmo_fault_time ; t#u8 reserved10 [ 104 ] ; t#__be32 page_ins ; t#u8 reserved11 [ 148 ] ; volatile t#__be64 dtl_idx ; t#u8 reserved12 [ 96 ] ; } 
t#s16 typedef signed short s16 
s#slb_shadow struct slb_shadow { t#__be32 persistent ; t#__be32 buffer_length ; t#__be64 reserved ; struct { t#__be64 esid ; t#__be64 vsid ; } save_area [ 3 ] ; } 
s#dtl_entry struct dtl_entry { t#u8 dispatch_reason ; t#u8 preempt_reason ; t#__be16 processor_id ; t#__be32 enqueue_to_dispatch_time ; t#__be32 ready_to_enqueue_time ; t#__be32 waiting_to_ready_time ; t#__be64 timebase ; t#__be64 fault_addr ; t#__be64 srr0 ; t#__be64 srr1 ; } 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache
s##mempolicy
s##file
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##opal_machine_check_event
t#ulong typedef unsigned long ulong 
s#kvmppc_book3s_shadow_vcpu struct kvmppc_book3s_shadow_vcpu { t#bool in_use ; t#ulong gpr [ 14 ] ; t#u32 cr ; t#u32 xer ; t#ulong ctr ; t#ulong lr ; t#ulong pc ; t#ulong shadow_srr1 ; t#ulong fault_dar ; t#u32 fault_dsisr ; t#u32 last_inst ; t#u8 slb_max ; struct { t#u64 esid ; t#u64 vsid ; } slb [ 64 ] ; t#u64 shadow_fscr ; } 
s##kvm_vcpu
s##kvmppc_vcore
s#kvmppc_host_state struct kvmppc_host_state { t#ulong host_r1 ; t#ulong host_r2 ; t#ulong host_msr ; t#ulong vmhandler ; t#ulong scratch0 ; t#ulong scratch1 ; t#ulong scratch2 ; t#u8 in_guest ; t#u8 restore_hid5 ; t#u8 napping ; t#u8 hwthread_req ; t#u8 hwthread_state ; t#u8 host_ipi ; t#u8 ptid ; s#kvm_vcpu * kvm_vcpu ; s#kvmppc_vcore * kvm_vcore ; unsigned long xics_phys ; t#u32 saved_xirr ; t#u64 dabr ; t#u64 host_mmcr [ 7 ] ; t#u32 host_pmc [ 8 ] ; t#u64 host_purr ; t#u64 host_spurr ; t#u64 host_dscr ; t#u64 dec_expires ; t#u64 cfar ; t#u64 ppr ; t#u64 host_fscr ; } 
s#paca_struct struct paca_struct { s#lppaca * lppaca_ptr ; t#u16 paca_index ; t#u16 lock_token ; t#u64 kernel_toc ; t#u64 kernelbase ; t#u64 kernel_msr ; t#u64 stab_real ; t#u64 stab_addr ; void * emergency_sp ; t#u64 data_offset ; t#s16 hw_cpu_id ; t#u8 cpu_start ; t#u8 kexec_state ; s#slb_shadow * slb_shadow_ptr ; s#dtl_entry * dispatch_log ; s#dtl_entry * dispatch_log_end ; t#u64 exgen [ 13 ] __attribute__ ( ( aligned ( 0x80 ) ) ) ; t#u64 exmc [ 13 ] ; t#u64 exslb [ 13 ] ; t#u16 vmalloc_sllp ; t#u16 slb_cache_ptr ; t#u32 slb_cache [ 8 ] ; t#mm_context_t context ; s#task_struct * __current ; t#u64 kstack ; t#u64 stab_rr ; t#u64 saved_r1 ; t#u64 saved_msr ; t#u16 trap_save ; t#u8 soft_enabled ; t#u8 irq_happened ; t#u8 io_sync ; t#u8 irq_work_pending ; t#u8 nap_state_lost ; t#u64 sprg3 ; t#u64 tm_scratch ; s#opal_machine_check_event * opal_mc_evt ; void * mc_emergency_sp ; t#u16 in_mce ; t#u64 user_time ; t#u64 system_time ; t#u64 user_time_scaled ; t#u64 starttime ; t#u64 starttime_user ; t#u64 startspurr ; t#u64 utime_sspurr ; t#u64 stolen_time ; t#u64 dtl_ridx ; s#dtl_entry * dtl_curr ; s#kvmppc_book3s_shadow_vcpu shadow_vcpu ; s#kvmppc_host_state kvm_hstate ; } 
paca extern s#paca_struct * paca 

/* arch/powerpc/kernel/pci-common.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
e#perf_event_context_type enum perf_event_context_type { task_context , cpu_context , } 
s#perf_event_context struct perf_event_context { s#pmu * pmu ; e#perf_event_context_type type ; t#raw_spinlock_t lock ; s#mutex mutex ; s#list_head pinned_groups ; s#list_head flexible_groups ; s#list_head event_list ; int nr_events ; int nr_active ; int is_active ; int nr_stat ; int nr_freq ; int rotate_disable ; t#atomic_t refcount ; s#task_struct * task ; t#u64 time ; t#u64 timestamp ; s#perf_event_context * parent_ctx ; t#u64 parent_gen ; t#u64 generation ; int pin_count ; int nr_cgroups ; int nr_branch_stack ; s#callback_head callback_head ; } 
s##perf_cgroup
s#perf_cpu_context struct perf_cpu_context { s#perf_event_context ctx ; s#perf_event_context * task_ctx ; int active_oncpu ; int exclusive ; s#hrtimer hrtimer ; t#ktime_t hrtimer_interval ; s#list_head rotation_list ; s#pmu * unique_pmu ; s#perf_cgroup * cgrp ; } 
s#pmu struct pmu { s#list_head entry ; s#device * dev ; const s#attribute_group * * attr_groups ; const char * name ; int type ; int * pmu_disable_count ; s#perf_cpu_context * pmu_cpu_context ; int task_ctx_nr ; int hrtimer_interval_ms ; void ( * pmu_enable ) ( s#pmu * ) ; void ( * pmu_disable ) ( s#pmu * ) ; int ( * event_init ) ( s#perf_event * ) ; int ( * add ) ( s#perf_event * , int ) ; void ( * del ) ( s#perf_event * , int ) ; void ( * start ) ( s#perf_event * , int ) ; void ( * stop ) ( s#perf_event * , int ) ; void ( * read ) ( s#perf_event * ) ; void ( * start_txn ) ( s#pmu * ) ; int ( * commit_txn ) ( s#pmu * ) ; void ( * cancel_txn ) ( s#pmu * ) ; int ( * event_idx ) ( s#perf_event * ) ; void ( * flush_branch_stack ) ( void ) ; } 
e#perf_event_active_state enum perf_event_active_state { PERF_EVENT_STATE_ERROR = - 2 , PERF_EVENT_STATE_OFF = - 1 , PERF_EVENT_STATE_INACTIVE = 0 , PERF_EVENT_STATE_ACTIVE = 1 , } 
t#local_t typedef struct { t#atomic_long_t a ; } local_t 
t#local64_t typedef struct { t#local_t a ; } local64_t 
s#perf_event_attr struct perf_event_attr { t#__u32 type ; t#__u32 size ; t#__u64 config ; union { t#__u64 sample_period ; t#__u64 sample_freq ; } ; t#__u64 sample_type ; t#__u64 read_format ; t#__u64 disabled : 1 , inherit : 1 , pinned : 1 , exclusive : 1 , exclude_user : 1 , exclude_kernel : 1 , exclude_hv : 1 , exclude_idle : 1 , mmap : 1 , comm : 1 , freq : 1 , inherit_stat : 1 , enable_on_exec : 1 , task : 1 , watermark : 1 , precise_ip : 2 , mmap_data : 1 , sample_id_all : 1 , exclude_host : 1 , exclude_guest : 1 , exclude_callchain_kernel : 1 , exclude_callchain_user : 1 , mmap2 : 1 , __reserved_1 : 40 ; union { t#__u32 wakeup_events ; t#__u32 wakeup_watermark ; } ; t#__u32 bp_type ; union { t#__u64 bp_addr ; t#__u64 config1 ; } ; union { t#__u64 bp_len ; t#__u64 config2 ; } ; t#__u64 branch_sample_type ; t#__u64 sample_regs_user ; t#__u32 sample_stack_user ; t#__u32 __reserved_2 ; } 
s#hw_perf_event_extra struct hw_perf_event_extra { t#u64 config ; unsigned int reg ; int alloc ; int idx ; } 
s##event_constraint
s#hw_perf_event struct hw_perf_event { union { struct { t#u64 config ; t#u64 last_tag ; unsigned long config_base ; unsigned long event_base ; int event_base_rdpmc ; int idx ; int last_cpu ; int flags ; s#hw_perf_event_extra extra_reg ; s#hw_perf_event_extra branch_reg ; s#event_constraint * constraint ; } ; struct { s#hrtimer hrtimer ; } ; struct { s#task_struct * tp_target ; s#list_head tp_list ; } ; struct { s#task_struct * bp_target ; s#arch_hw_breakpoint info ; s#list_head bp_list ; } ; } ; int state ; t#local64_t prev_count ; t#u64 sample_period ; t#u64 last_period ; t#local64_t period_left ; t#u64 interrupts_seq ; t#u64 interrupts ; t#u64 freq_time_stamp ; t#u64 freq_count_stamp ; } 
s##ring_buffer
s#irq_work struct irq_work { unsigned long flags ; s#llist_node llnode ; void ( * func ) ( s#irq_work * ) ; } 
u#perf_mem_data_src union perf_mem_data_src { t#__u64 val ; struct { t#__u64 mem_op : 5 , mem_lvl : 14 , mem_snoop : 5 , mem_lock : 2 , mem_dtlb : 7 , mem_rsvd : 31 ; } ; } 
s#perf_callchain_entry struct perf_callchain_entry { t#__u64 nr ; t#__u64 ip [ 127 ] ; } 
s#perf_raw_record struct perf_raw_record { t#u32 size ; void * data ; } 
s#perf_branch_entry struct perf_branch_entry { t#__u64 from ; t#__u64 to ; t#__u64 mispred : 1 , predicted : 1 , in_tx : 1 , abort : 1 , reserved : 60 ; } 
s#perf_branch_stack struct perf_branch_stack { t#__u64 nr ; s#perf_branch_entry entries [ 0 ] ; } 
s#perf_regs_user struct perf_regs_user { t#__u64 abi ; s#pt_regs * regs ; } 
s#perf_sample_data struct perf_sample_data { t#u64 type ; t#u64 ip ; struct { t#u32 pid ; t#u32 tid ; } tid_entry ; t#u64 time ; t#u64 addr ; t#u64 id ; t#u64 stream_id ; struct { t#u32 cpu ; t#u32 reserved ; } cpu_entry ; t#u64 period ; u#perf_mem_data_src data_src ; s#perf_callchain_entry * callchain ; s#perf_raw_record * raw ; s#perf_branch_stack * br_stack ; s#perf_regs_user regs_user ; t#u64 stack_user_size ; t#u64 weight ; t#u64 txn ; } 
t#perf_overflow_handler_t typedef void ( * perf_overflow_handler_t ) ( s#perf_event * , s#perf_sample_data * , s#pt_regs * ) 
e#trace_reg enum trace_reg { TRACE_REG_REGISTER , TRACE_REG_UNREGISTER , TRACE_REG_PERF_REGISTER , TRACE_REG_PERF_UNREGISTER , TRACE_REG_PERF_OPEN , TRACE_REG_PERF_CLOSE , TRACE_REG_PERF_ADD , TRACE_REG_PERF_DEL , } 
s#ftrace_event_class struct ftrace_event_class { char * system ; void * probe ; void * perf_probe ; int ( * reg ) ( s#ftrace_event_call * , e#trace_reg , void * ) ; int ( * define_fields ) ( s#ftrace_event_call * ) ; s#list_head * ( * get_fields ) ( s#ftrace_event_call * ) ; s#list_head fields ; int ( * raw_init ) ( s#ftrace_event_call * ) ; } 
e#print_line_t enum print_line_t { TRACE_TYPE_PARTIAL_LINE = 0 , TRACE_TYPE_HANDLED = 1 , TRACE_TYPE_UNHANDLED = 2 , TRACE_TYPE_NO_CONSUME = 3 } 
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s#trace_seq struct trace_seq { unsigned char buffer [ ( 1UL << 16 ) ] ; unsigned int len ; unsigned int readpos ; int full ; } 
s#trace_entry struct trace_entry { unsigned short type ; unsigned char flags ; unsigned char preempt_count ; int pid ; } 
s#trace_iterator struct trace_iterator { s#trace_array * tr ; s#tracer * trace ; s#trace_buffer * trace_buffer ; void * private ; int cpu_file ; s#mutex mutex ; s#ring_buffer_iter * * buffer_iter ; unsigned long iter_flags ; s#trace_seq tmp_seq ; t#cpumask_var_t started ; t#bool snapshot ; s#trace_seq seq ; s#trace_entry * ent ; unsigned long lost_events ; int leftover ; int ent_size ; int cpu ; t#u64 ts ; t#loff_t pos ; long idx ; } 
t#trace_print_func typedef e#print_line_t ( * trace_print_func ) ( s#trace_iterator * , int , s#trace_event * ) 
s#trace_event_functions struct trace_event_functions { t#trace_print_func trace ; t#trace_print_func raw ; t#trace_print_func hex ; t#trace_print_func binary ; } 
s#trace_event struct trace_event { s#hlist_node node ; s#list_head list ; int type ; s#trace_event_functions * funcs ; } 
s##event_filter
s#ftrace_event_call struct ftrace_event_call { s#list_head list ; s#ftrace_event_class * class ; char * name ; s#trace_event event ; const char * print_fmt ; s#event_filter * filter ; s#list_head * files ; void * mod ; void * data ; int flags ; int perf_refcount ; s#hlist_head * perf_events ; } 
t#ftrace_func_t typedef void ( * ftrace_func_t ) ( unsigned long , unsigned long , s#ftrace_ops * , s#pt_regs * ) 
s##ftrace_hash
s#ftrace_ops struct ftrace_ops { t#ftrace_func_t func ; s#ftrace_ops * next ; unsigned long flags ; int * disabled ; void * private ; s#ftrace_hash * notrace_hash ; s#ftrace_hash * filter_hash ; s#mutex regex_lock ; } 
s#perf_event struct perf_event { s#list_head event_entry ; s#list_head group_entry ; s#list_head sibling_list ; s#list_head migrate_entry ; s#hlist_node hlist_entry ; int nr_siblings ; int group_flags ; s#perf_event * group_leader ; s#pmu * pmu ; e#perf_event_active_state state ; unsigned int attach_state ; t#local64_t count ; t#atomic64_t child_count ; t#u64 total_time_enabled ; t#u64 total_time_running ; t#u64 tstamp_enabled ; t#u64 tstamp_running ; t#u64 tstamp_stopped ; t#u64 shadow_ctx_time ; s#perf_event_attr attr ; t#u16 header_size ; t#u16 id_header_size ; t#u16 read_size ; s#hw_perf_event hw ; s#perf_event_context * ctx ; t#atomic_long_t refcount ; t#atomic64_t child_total_time_enabled ; t#atomic64_t child_total_time_running ; s#mutex child_mutex ; s#list_head child_list ; s#perf_event * parent ; int oncpu ; int cpu ; s#list_head owner_entry ; s#task_struct * owner ; s#mutex mmap_mutex ; t#atomic_t mmap_count ; s#ring_buffer * rb ; s#list_head rb_entry ; t#wait_queue_head_t waitq ; s#fasync_struct * fasync ; int pending_wakeup ; int pending_kill ; int pending_disable ; s#irq_work pending ; t#atomic_t event_limit ; void ( * destroy ) ( s#perf_event * ) ; s#callback_head callback_head ; s#pid_namespace * ns ; t#u64 id ; t#perf_overflow_handler_t overflow_handler ; void * overflow_handler_context ; s#ftrace_event_call * tp_event ; s#event_filter * filter ; s#ftrace_ops ftrace_ops ; s#perf_cgroup * cgrp ; int cgrp_defer_enabled ; } 
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s#ftrace_ret_stack struct ftrace_ret_stack { unsigned long ret ; unsigned long func ; unsigned long long calltime ; unsigned long long subtime ; unsigned long fp ; } 
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##module
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
t#poll_queue_proc typedef void ( * poll_queue_proc ) ( s#file * , t#wait_queue_head_t * , s#poll_table_struct * ) 
s#poll_table_struct struct poll_table_struct { t#poll_queue_proc _qproc ; unsigned long _key ; } 
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s#msi_msg struct msi_msg { t#u32 address_lo ; t#u32 address_hi ; t#u32 data ; } 
s#msi_desc struct msi_desc { struct { t#__u8 is_msix : 1 ; t#__u8 multiple : 3 ; t#__u8 maskbit : 1 ; t#__u8 is_64 : 1 ; t#__u8 pos ; t#__u16 entry_nr ; unsigned default_irq ; } msi_attrib ; t#u32 masked ; unsigned int irq ; unsigned int nvec_used ; s#list_head list ; union { void * mask_base ; t#u8 mask_pos ; } ; s#pci_dev * dev ; s#msi_msg msg ; s#kobject kobj ; } 
s#msi_chip struct msi_chip { s#module * owner ; s#device * dev ; s#device_node * of_node ; s#list_head list ; int ( * setup_irq ) ( s#msi_chip * , s#pci_dev * , s#msi_desc * ) ; void ( * teardown_irq ) ( s#msi_chip * , unsigned int ) ; int ( * check_device ) ( s#msi_chip * , s#pci_dev * , int , int ) ; } 
s##iommu_group
get_pci_dma_ops extern s#dma_map_ops * get_pci_dma_ops ( void ) 
pci_address_to_pio extern unsigned long pci_address_to_pio ( t#phys_addr_t ) 
pci_domain_nr extern int pci_domain_nr ( s#pci_bus * ) 
pcibios_fixup_bus void pcibios_fixup_bus ( s#pci_bus * ) 
pcibios_align_resource t#resource_size_t pcibios_align_resource ( void * , const s#resource * , t#resource_size_t , t#resource_size_t ) 
pcibios_finish_adding_to_bus extern void pcibios_finish_adding_to_bus ( s#pci_bus * ) 

/* arch/powerpc/kernel/pci-hotplug.o */
s##proc_dir_entry
s##hotplug_slot
s##sock
s##sysfs_dirent
s##device_private
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##module
s##subsys_private
s##iommu_group
s##iommu_ops
s##driver_private
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
pcibios_remove_pci_devices extern void pcibios_remove_pci_devices ( s#pci_bus * ) 
pcibios_add_pci_devices extern void pcibios_add_pci_devices ( s#pci_bus * ) 

/* arch/powerpc/kernel/pci_64.o */
pci_io_base extern unsigned long pci_io_base 
s##proc_dir_entry
s##hotplug_slot
s##sock
s##sysfs_dirent
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##module
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##subsys_private
s##iommu_group
s##iommu_ops
s##driver_private
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
pcibios_unmap_io_space extern int pcibios_unmap_io_space ( s#pci_bus * ) 
pcibios_map_io_space extern int pcibios_map_io_space ( s#pci_bus * ) 
pcibus_to_node extern int pcibus_to_node ( s#pci_bus * ) 

/* arch/powerpc/kernel/pci_of_scan.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
of_create_pci_dev extern s#pci_dev * of_create_pci_dev ( s#device_node * , s#pci_bus * , int ) 
of_scan_pci_bridge extern void of_scan_pci_bridge ( s#pci_dev * ) 
of_scan_bus extern void of_scan_bus ( s#device_node * , s#pci_bus * ) 
of_rescan_bus extern void of_rescan_bus ( s#device_node * , s#pci_bus * ) 

/* arch/powerpc/kernel/pmc.o */
t#perf_irq_t typedef void ( * perf_irq_t ) ( s#pt_regs * ) 
reserve_pmc_hardware int reserve_pmc_hardware ( t#perf_irq_t ) 
release_pmc_hardware void release_pmc_hardware ( void ) 

/* arch/powerpc/kernel/ppc_ksyms.o */
_mcount extern void _mcount ( void ) 
strcpy extern char * strcpy ( char * , const char * ) 
strncpy extern char * strncpy ( char * , const char * , t#__kernel_size_t ) 
strcat extern char * strcat ( char * , const char * ) 
strlen extern t#__kernel_size_t strlen ( const char * ) 
strcmp extern int strcmp ( const char * , const char * ) 
strncmp extern int strncmp ( const char * , const char * , t#__kernel_size_t ) 
__copy_tofrom_user extern unsigned long __copy_tofrom_user ( void * , const void * , unsigned long ) 
__clear_user extern unsigned long __clear_user ( void * , unsigned long ) 
copy_page extern void copy_page ( void * , void * ) 
start_thread void start_thread ( s#pt_regs * , unsigned long , unsigned long ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##sock
s##sysfs_dirent
s#cdev struct cdev { s#kobject kobj ; s#module * owner ; const s#file_operations * ops ; s#list_head list ; t#dev_t dev ; unsigned int count ; } 
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
t#tcflag_t typedef unsigned int tcflag_t 
t#cc_t typedef unsigned char cc_t 
t#speed_t typedef unsigned int speed_t 
s#ktermios struct ktermios { t#tcflag_t c_iflag ; t#tcflag_t c_oflag ; t#tcflag_t c_cflag ; t#tcflag_t c_lflag ; t#cc_t c_cc [ 19 ] ; t#cc_t c_line ; t#speed_t c_ispeed ; t#speed_t c_ospeed ; } 
s#tty_buffer struct tty_buffer { union { s#tty_buffer * next ; s#llist_node free ; } ; int used ; int size ; int commit ; int read ; unsigned long data [ 0 ] ; } 
s#llist_head struct llist_head { s#llist_node * first ; } 
s#tty_bufhead struct tty_bufhead { s#tty_buffer * head ; s#work_struct work ; s#mutex lock ; t#atomic_t priority ; s#tty_buffer sentinel ; s#llist_head free ; t#atomic_t memory_used ; s#tty_buffer * tail ; } 
s#tty_port_operations struct tty_port_operations { int ( * carrier_raised ) ( s#tty_port * ) ; void ( * dtr_rts ) ( s#tty_port * , int ) ; void ( * shutdown ) ( s#tty_port * ) ; void ( * drop ) ( s#tty_port * ) ; int ( * activate ) ( s#tty_port * , s#tty_struct * ) ; void ( * destruct ) ( s#tty_port * ) ; } 
s#tty_port struct tty_port { s#tty_bufhead buf ; s#tty_struct * tty ; s#tty_struct * itty ; const s#tty_port_operations * ops ; t#spinlock_t lock ; int blocked_open ; int count ; t#wait_queue_head_t open_wait ; t#wait_queue_head_t close_wait ; t#wait_queue_head_t delta_msr_wait ; unsigned long flags ; unsigned char console : 1 , low_latency : 1 ; s#mutex mutex ; s#mutex buf_mutex ; unsigned char * xmit_buf ; unsigned int close_delay ; unsigned int closing_wait ; int drain_delay ; s#kref kref ; } 
s#winsize struct winsize { unsigned short ws_row ; unsigned short ws_col ; unsigned short ws_xpixel ; unsigned short ws_ypixel ; } 
s#termiox struct termiox { t#__u16 x_hflag ; t#__u16 x_cflag ; t#__u16 x_rflag [ 5 ] ; t#__u16 x_sflag ; } 
s##serial_icounter_struct
s#tty_operations struct tty_operations { s#tty_struct * ( * lookup ) ( s#tty_driver * , s#inode * , int ) ; int ( * install ) ( s#tty_driver * , s#tty_struct * ) ; void ( * remove ) ( s#tty_driver * , s#tty_struct * ) ; int ( * open ) ( s#tty_struct * , s#file * ) ; void ( * close ) ( s#tty_struct * , s#file * ) ; void ( * shutdown ) ( s#tty_struct * ) ; void ( * cleanup ) ( s#tty_struct * ) ; int ( * write ) ( s#tty_struct * , const unsigned char * , int ) ; int ( * put_char ) ( s#tty_struct * , unsigned char ) ; void ( * flush_chars ) ( s#tty_struct * ) ; int ( * write_room ) ( s#tty_struct * ) ; int ( * chars_in_buffer ) ( s#tty_struct * ) ; int ( * ioctl ) ( s#tty_struct * , unsigned int , unsigned long ) ; long ( * compat_ioctl ) ( s#tty_struct * , unsigned int , unsigned long ) ; void ( * set_termios ) ( s#tty_struct * , s#ktermios * ) ; void ( * throttle ) ( s#tty_struct * ) ; void ( * unthrottle ) ( s#tty_struct * ) ; void ( * stop ) ( s#tty_struct * ) ; void ( * start ) ( s#tty_struct * ) ; void ( * hangup ) ( s#tty_struct * ) ; int ( * break_ctl ) ( s#tty_struct * , int ) ; void ( * flush_buffer ) ( s#tty_struct * ) ; void ( * set_ldisc ) ( s#tty_struct * ) ; void ( * wait_until_sent ) ( s#tty_struct * , int ) ; void ( * send_xchar ) ( s#tty_struct * , char ) ; int ( * tiocmget ) ( s#tty_struct * ) ; int ( * tiocmset ) ( s#tty_struct * , unsigned int , unsigned int ) ; int ( * resize ) ( s#tty_struct * , s#winsize * ) ; int ( * set_termiox ) ( s#tty_struct * , s#termiox * ) ; int ( * get_icount ) ( s#tty_struct * , s#serial_icounter_struct * ) ; int ( * poll_init ) ( s#tty_driver * , int , char * ) ; int ( * poll_get_char ) ( s#tty_driver * , int ) ; void ( * poll_put_char ) ( s#tty_driver * , int , char ) ; const s#file_operations * proc_fops ; } 
s#tty_driver struct tty_driver { int magic ; s#kref kref ; s#cdev * cdevs ; s#module * owner ; const char * driver_name ; const char * name ; int name_base ; int major ; int minor_start ; unsigned int num ; short type ; short subtype ; s#ktermios init_termios ; unsigned long flags ; s#proc_dir_entry * proc_entry ; s#tty_driver * other ; s#tty_struct * * ttys ; s#tty_port * * ports ; s#ktermios * * termios ; void * driver_state ; const s#tty_operations * ops ; s#list_head tty_drivers ; } 
s#ld_semaphore struct ld_semaphore { long count ; t#raw_spinlock_t wait_lock ; unsigned int wait_readers ; s#list_head read_wait ; s#list_head write_wait ; } 
s#tty_ldisc_ops struct tty_ldisc_ops { int magic ; char * name ; int num ; int flags ; int ( * open ) ( s#tty_struct * ) ; void ( * close ) ( s#tty_struct * ) ; void ( * flush_buffer ) ( s#tty_struct * ) ; t#ssize_t ( * chars_in_buffer ) ( s#tty_struct * ) ; t#ssize_t ( * read ) ( s#tty_struct * , s#file * , unsigned char * , t#size_t ) ; t#ssize_t ( * write ) ( s#tty_struct * , s#file * , const unsigned char * , t#size_t ) ; int ( * ioctl ) ( s#tty_struct * , s#file * , unsigned int , unsigned long ) ; long ( * compat_ioctl ) ( s#tty_struct * , s#file * , unsigned int , unsigned long ) ; void ( * set_termios ) ( s#tty_struct * , s#ktermios * ) ; unsigned int ( * poll ) ( s#tty_struct * , s#file * , s#poll_table_struct * ) ; int ( * hangup ) ( s#tty_struct * ) ; void ( * receive_buf ) ( s#tty_struct * , const unsigned char * , char * , int ) ; void ( * write_wakeup ) ( s#tty_struct * ) ; void ( * dcd_change ) ( s#tty_struct * , unsigned int ) ; void ( * fasync ) ( s#tty_struct * , int ) ; int ( * receive_buf2 ) ( s#tty_struct * , const unsigned char * , char * , int ) ; s#module * owner ; int refcount ; } 
s#tty_ldisc struct tty_ldisc { s#tty_ldisc_ops * ops ; s#tty_struct * tty ; } 
s#tty_struct struct tty_struct { int magic ; s#kref kref ; s#device * dev ; s#tty_driver * driver ; const s#tty_operations * ops ; int index ; s#ld_semaphore ldisc_sem ; s#tty_ldisc * ldisc ; s#mutex atomic_write_lock ; s#mutex legacy_mutex ; s#mutex throttle_mutex ; s#rw_semaphore termios_rwsem ; s#mutex winsize_mutex ; t#spinlock_t ctrl_lock ; s#ktermios termios , termios_locked ; s#termiox * termiox ; char name [ 64 ] ; s#pid * pgrp ; s#pid * session ; unsigned long flags ; int count ; s#winsize winsize ; unsigned char stopped : 1 , hw_stopped : 1 , flow_stopped : 1 , packet : 1 ; unsigned char ctrl_status ; unsigned int receive_room ; int flow_change ; s#tty_struct * link ; s#fasync_struct * fasync ; int alt_speed ; t#wait_queue_head_t write_wait ; t#wait_queue_head_t read_wait ; s#work_struct hangup_work ; void * disc_data ; void * driver_data ; s#list_head tty_files ; unsigned char closing : 1 ; unsigned char * write_buf ; int write_cnt ; s#work_struct SAK_work ; s#tty_port * port ; } 
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
giveup_fpu extern void giveup_fpu ( s#task_struct * ) 
load_fp_state extern void load_fp_state ( s#thread_fp_state * ) 
store_fp_state extern void store_fp_state ( s#thread_fp_state * ) 
giveup_altivec extern void giveup_altivec ( s#task_struct * ) 
load_vr_state extern void load_vr_state ( s#thread_vr_state * ) 
store_vr_state extern void store_vr_state ( s#thread_vr_state * ) 
giveup_vsx extern void giveup_vsx ( s#task_struct * ) 
__giveup_vsx extern void __giveup_vsx ( s#task_struct * ) 
flush_dcache_range extern void flush_dcache_range ( unsigned long , unsigned long ) 
s##rtc_time
to_tm extern void to_tm ( int , s#rtc_time * ) 
__bswapdi2 long long __bswapdi2 ( long long ) 
memset extern void * memset ( void * , int , t#__kernel_size_t ) 
memmove extern void * memmove ( void * , const void * , t#__kernel_size_t ) 
memcmp extern int memcmp ( const void * , const void * , t#__kernel_size_t ) 
memchr extern void * memchr ( const void * , int , t#__kernel_size_t ) 
empty_zero_page extern unsigned long empty_zero_page [ ] 
__arch_hweight8 unsigned int __arch_hweight8 ( unsigned int ) 
__arch_hweight16 unsigned int __arch_hweight16 ( unsigned int ) 
__arch_hweight32 unsigned int __arch_hweight32 ( unsigned int ) 
__arch_hweight64 unsigned long __arch_hweight64 ( t#__u64 ) 
s#mmu_psize_def struct mmu_psize_def { unsigned int shift ; int penc [ 14 ] ; unsigned int tlbiel ; unsigned long avpnm ; unsigned long sllp ; } 
mmu_psize_defs extern s#mmu_psize_def mmu_psize_defs [ 14 ] 
epapr_hypercall_start extern t#u32 epapr_hypercall_start [ ] 

/* arch/powerpc/kernel/process.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s#uid_gid_extent struct uid_gid_extent { t#u32 first ; t#u32 lower_first ; t#u32 count ; } 
s#uid_gid_map struct uid_gid_map { t#u32 nr_extents ; s#uid_gid_extent extent [ 5 ] ; } 
s#user_namespace struct user_namespace { s#uid_gid_map uid_map ; s#uid_gid_map gid_map ; s#uid_gid_map projid_map ; t#atomic_t count ; s#user_namespace * parent ; int level ; t#kuid_t owner ; t#kgid_t group ; unsigned int proc_inum ; } 
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##ftrace_event_call
s##event_filter
s##ftrace_hash
s##fs_struct
s#new_utsname struct new_utsname { char sysname [ 64 + 1 ] ; char nodename [ 64 + 1 ] ; char release [ 64 + 1 ] ; char version [ 64 + 1 ] ; char machine [ 64 + 1 ] ; char domainname [ 64 + 1 ] ; } 
s#uts_namespace struct uts_namespace { s#kref kref ; s#new_utsname name ; s#user_namespace * user_ns ; unsigned int proc_inum ; } 
s##ipc_namespace
s##mnt_namespace
t#proc_handler typedef int proc_handler ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
s#ctl_table_poll struct ctl_table_poll { t#atomic_t event ; t#wait_queue_head_t wait ; } 
s#ctl_table struct ctl_table { const char * procname ; void * data ; int maxlen ; t#umode_t mode ; s#ctl_table * child ; t#proc_handler * proc_handler ; s#ctl_table_poll * poll ; void * extra1 ; void * extra2 ; } 
s#ctl_table_root struct ctl_table_root { s#ctl_table_set default_set ; s#ctl_table_set * ( * lookup ) ( s#ctl_table_root * , s#nsproxy * ) ; int ( * permissions ) ( s#ctl_table_header * , s#ctl_table * ) ; } 
s#ctl_node struct ctl_node { s#rb_node node ; s#ctl_table_header * header ; } 
s#ctl_table_header struct ctl_table_header { union { struct { s#ctl_table * ctl_table ; int used ; int count ; int nreg ; } ; s#callback_head rcu ; } ; s#completion * unregistering ; s#ctl_table * ctl_table_arg ; s#ctl_table_root * root ; s#ctl_table_set * set ; s#ctl_dir * parent ; s#ctl_node * node ; } 
s#ctl_dir struct ctl_dir { s#ctl_table_header header ; s#rb_root root ; } 
s#ctl_table_set struct ctl_table_set { int ( * is_seen ) ( s#ctl_table_set * ) ; s#ctl_dir dir ; } 
s##net_device
s##prot_inuse
s#netns_core struct netns_core { s#ctl_table_header * sysctl_hdr ; int sysctl_somaxconn ; s#prot_inuse * inuse ; } 
E#__TCP_MIB_MAX ( 0 ) + 16 
s#tcp_mib struct tcp_mib { unsigned long mibs [ E#__TCP_MIB_MAX ] ; } 
E#__IPSTATS_MIB_MAX ( 0 ) + 36 
s#u64_stats_sync struct u64_stats_sync { } 
s#ipstats_mib struct ipstats_mib { t#u64 mibs [ E#__IPSTATS_MIB_MAX ] ; s#u64_stats_sync syncp ; } 
E#__LINUX_MIB_MAX ( 0 ) + 96 
s#linux_mib struct linux_mib { unsigned long mibs [ E#__LINUX_MIB_MAX ] ; } 
E#__UDP_MIB_MAX ( 0 ) + 8 
s#udp_mib struct udp_mib { unsigned long mibs [ E#__UDP_MIB_MAX ] ; } 
E#__ICMP_MIB_MAX ( 0 ) + 28 
s#icmp_mib struct icmp_mib { unsigned long mibs [ E#__ICMP_MIB_MAX ] ; } 
s#icmpmsg_mib struct icmpmsg_mib { t#atomic_long_t mibs [ 512 ] ; } 
E#__ICMP6_MIB_MAX ( 0 ) + 6 
s#icmpv6_mib struct icmpv6_mib { unsigned long mibs [ E#__ICMP6_MIB_MAX ] ; } 
s#icmpv6msg_mib struct icmpv6msg_mib { t#atomic_long_t mibs [ 512 ] ; } 
s#netns_mib struct netns_mib { __typeof__ ( s#tcp_mib ) * tcp_statistics [ 1 ] ; __typeof__ ( s#ipstats_mib ) * ip_statistics [ 1 ] ; __typeof__ ( s#linux_mib ) * net_statistics [ 1 ] ; __typeof__ ( s#udp_mib ) * udp_statistics [ 1 ] ; __typeof__ ( s#udp_mib ) * udplite_statistics [ 1 ] ; __typeof__ ( s#icmp_mib ) * icmp_statistics [ 1 ] ; __typeof__ ( s#icmpmsg_mib ) * icmpmsg_statistics ; s#proc_dir_entry * proc_net_devsnmp6 ; __typeof__ ( s#udp_mib ) * udp_stats_in6 [ 1 ] ; __typeof__ ( s#udp_mib ) * udplite_stats_in6 [ 1 ] ; __typeof__ ( s#ipstats_mib ) * ipv6_statistics [ 1 ] ; __typeof__ ( s#icmpv6_mib ) * icmpv6_statistics [ 1 ] ; __typeof__ ( s#icmpv6msg_mib ) * icmpv6msg_statistics ; } 
s#netns_packet struct netns_packet { s#mutex sklist_lock ; s#hlist_head sklist ; } 
s#netns_unix struct netns_unix { int sysctl_max_dgram_qlen ; s#ctl_table_header * ctl ; } 
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s#netns_frags struct netns_frags { int nqueues ; s#list_head lru_list ; t#spinlock_t lru_lock ; s#percpu_counter mem __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; int timeout ; int high_thresh ; int low_thresh ; } 
s##xt_table
s#netns_ipv4 struct netns_ipv4 { s#ctl_table_header * forw_hdr ; s#ctl_table_header * frags_hdr ; s#ctl_table_header * ipv4_hdr ; s#ctl_table_header * route_hdr ; s#ctl_table_header * xfrm4_hdr ; s#ipv4_devconf * devconf_all ; s#ipv4_devconf * devconf_dflt ; s#fib_rules_ops * rules_ops ; t#bool fib_has_custom_rules ; s#fib_table * fib_local ; s#fib_table * fib_main ; s#fib_table * fib_default ; int fib_num_tclassid_users ; s#hlist_head * fib_table_hash ; s#sock * fibnl ; s#sock * * icmp_sk ; s#inet_peer_base * peers ; s#tcpm_hash_bucket * tcp_metrics_hash ; unsigned int tcp_metrics_hash_log ; s#netns_frags frags ; s#xt_table * iptable_filter ; s#xt_table * iptable_mangle ; s#xt_table * iptable_raw ; s#xt_table * arptable_filter ; s#xt_table * iptable_security ; s#xt_table * nat_table ; int sysctl_icmp_echo_ignore_all ; int sysctl_icmp_echo_ignore_broadcasts ; int sysctl_icmp_ignore_bogus_error_responses ; int sysctl_icmp_ratelimit ; int sysctl_icmp_ratemask ; int sysctl_icmp_errors_use_inbound_ifaddr ; int sysctl_tcp_ecn ; t#kgid_t sysctl_ping_group_range [ 2 ] ; long sysctl_tcp_mem [ 3 ] ; t#atomic_t dev_addr_genid ; s#list_head mr_tables ; s#fib_rules_ops * mr_rules_ops ; t#atomic_t rt_genid ; } 
s#netns_sysctl_ipv6 struct netns_sysctl_ipv6 { s#ctl_table_header * hdr ; s#ctl_table_header * route_hdr ; s#ctl_table_header * icmp_hdr ; s#ctl_table_header * frags_hdr ; s#ctl_table_header * xfrm6_hdr ; int bindv6only ; int flush_delay ; int ip6_rt_max_size ; int ip6_rt_gc_min_interval ; int ip6_rt_gc_timeout ; int ip6_rt_gc_interval ; int ip6_rt_gc_elasticity ; int ip6_rt_mtu_expires ; int ip6_rt_min_advmss ; int icmpv6_time ; } 
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sec_path
t#__wsum typedef t#__u32 __wsum 
s#nf_conntrack struct nf_conntrack { t#atomic_t use ; } 
t#dma_cookie_t typedef t#s32 dma_cookie_t 
t#sk_buff_data_t typedef unsigned int sk_buff_data_t 
s#sk_buff struct sk_buff { s#sk_buff * next ; s#sk_buff * prev ; t#ktime_t tstamp ; s#sock * sk ; s#net_device * dev ; char cb [ 48 ] __attribute__ ( ( aligned ( 8 ) ) ) ; unsigned long _skb_refdst ; s#sec_path * sp ; unsigned int len , data_len ; t#__u16 mac_len , hdr_len ; union { t#__wsum csum ; struct { t#__u16 csum_start ; t#__u16 csum_offset ; } ; } ; t#__u32 priority ; ; t#__u8 local_df : 1 , cloned : 1 , ip_summed : 2 , nohdr : 1 , nfctinfo : 3 ; t#__u8 pkt_type : 3 , fclone : 2 , ipvs_property : 1 , peeked : 1 , nf_trace : 1 ; ; t#__be16 protocol ; void ( * destructor ) ( s#sk_buff * ) ; s#nf_conntrack * nfct ; int skb_iif ; t#__u32 rxhash ; t#__be16 vlan_proto ; t#__u16 vlan_tci ; t#__u16 tc_index ; t#__u16 tc_verd ; t#__u16 queue_mapping ; ; t#__u8 ndisc_nodetype : 2 ; t#__u8 pfmemalloc : 1 ; t#__u8 ooo_okay : 1 ; t#__u8 l4_rxhash : 1 ; t#__u8 wifi_acked_valid : 1 ; t#__u8 wifi_acked : 1 ; t#__u8 no_fcs : 1 ; t#__u8 head_frag : 1 ; t#__u8 encapsulation : 1 ; ; union { unsigned int napi_id ; t#dma_cookie_t dma_cookie ; } ; t#__u32 secmark ; union { t#__u32 mark ; t#__u32 dropcount ; t#__u32 reserved_tailroom ; } ; t#__be16 inner_protocol ; t#__u16 inner_transport_header ; t#__u16 inner_network_header ; t#__u16 inner_mac_header ; t#__u16 transport_header ; t#__u16 network_header ; t#__u16 mac_header ; t#sk_buff_data_t tail ; t#sk_buff_data_t end ; unsigned char * head , * data ; unsigned int truesize ; t#atomic_t users ; } 
s##neighbour
s#dst_ops struct dst_ops { unsigned short family ; t#__be16 protocol ; unsigned int gc_thresh ; int ( * gc ) ( s#dst_ops * ) ; s#dst_entry * ( * check ) ( s#dst_entry * , t#__u32 ) ; unsigned int ( * default_advmss ) ( const s#dst_entry * ) ; unsigned int ( * mtu ) ( const s#dst_entry * ) ; t#u32 * ( * cow_metrics ) ( s#dst_entry * , unsigned long ) ; void ( * destroy ) ( s#dst_entry * ) ; void ( * ifdown ) ( s#dst_entry * , s#net_device * , int ) ; s#dst_entry * ( * negative_advice ) ( s#dst_entry * ) ; void ( * link_failure ) ( s#sk_buff * ) ; void ( * update_pmtu ) ( s#dst_entry * , s#sock * , s#sk_buff * , t#u32 ) ; void ( * redirect ) ( s#dst_entry * , s#sock * , s#sk_buff * ) ; int ( * local_out ) ( s#sk_buff * ) ; s#neighbour * ( * neigh_lookup ) ( const s#dst_entry * , s#sk_buff * , const void * ) ; s#kmem_cache * kmem_cachep ; s#percpu_counter pcpuc_entries __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; } 
s#netns_ipv6 struct netns_ipv6 { s#netns_sysctl_ipv6 sysctl ; s#ipv6_devconf * devconf_all ; s#ipv6_devconf * devconf_dflt ; s#inet_peer_base * peers ; s#netns_frags frags ; s#xt_table * ip6table_filter ; s#xt_table * ip6table_mangle ; s#xt_table * ip6table_raw ; s#xt_table * ip6table_security ; s#xt_table * ip6table_nat ; s#rt6_info * ip6_null_entry ; s#rt6_statistics * rt6_stats ; s#timer_list ip6_fib_timer ; s#hlist_head * fib_table_hash ; s#fib6_table * fib6_main_tbl ; s#dst_ops ip6_dst_ops ; unsigned int ip6_rt_gc_expire ; unsigned long ip6_rt_last_gc ; s#rt6_info * ip6_prohibit_entry ; s#rt6_info * ip6_blk_hole_entry ; s#fib6_table * fib6_local_tbl ; s#fib_rules_ops * fib6_rules_ops ; s#sock * * icmp_sk ; s#sock * ndisc_sk ; s#sock * tcp_sk ; s#sock * igmp_sk ; t#atomic_t dev_addr_genid ; t#atomic_t rt_genid ; } 
s##sctp_mib
s#netns_sctp struct netns_sctp { __typeof__ ( s#sctp_mib ) * sctp_statistics [ 1 ] ; s#proc_dir_entry * proc_net_sctp ; s#ctl_table_header * sysctl_header ; s#sock * ctl_sock ; s#list_head local_addr_list ; s#list_head addr_waitq ; s#timer_list addr_wq_timer ; s#list_head auto_asconf_splist ; t#spinlock_t addr_wq_lock ; t#spinlock_t local_addr_lock ; unsigned int rto_initial ; unsigned int rto_min ; unsigned int rto_max ; int rto_alpha ; int rto_beta ; int max_burst ; int cookie_preserve_enable ; char * sctp_hmac_alg ; unsigned int valid_cookie_life ; unsigned int sack_timeout ; unsigned int hb_interval ; int max_retrans_association ; int max_retrans_path ; int max_retrans_init ; int pf_retrans ; int sndbuf_policy ; int rcvbuf_policy ; int default_auto_asconf ; int addip_enable ; int addip_noauth ; int prsctp_enable ; int auth_enable ; int scope_policy ; int rwnd_upd_shift ; unsigned long max_autoclose ; } 
s#netns_dccp struct netns_dccp { s#sock * v4_ctl_sk ; s#sock * v6_ctl_sk ; } 
s##nf_logger
E#NFPROTO_NUMPROTO ( 12 ) + 1 
s#netns_nf struct netns_nf { s#proc_dir_entry * proc_netfilter ; const s#nf_logger * nf_loggers [ E#NFPROTO_NUMPROTO ] ; s#ctl_table_header * nf_log_dir_header ; } 
s##ebt_table
s#netns_xt struct netns_xt { s#list_head tables [ E#NFPROTO_NUMPROTO ] ; t#bool notrack_deprecated_warning ; s#ebt_table * broute_table ; s#ebt_table * frame_filter ; s#ebt_table * frame_nat ; t#bool ulog_warn_deprecated ; t#bool ebt_ulog_warn_deprecated ; } 
s#hlist_nulls_node struct hlist_nulls_node { s#hlist_nulls_node * next , * * pprev ; } 
s#hlist_nulls_head struct hlist_nulls_head { s#hlist_nulls_node * first ; } 
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s#nf_proto_net struct nf_proto_net { s#ctl_table_header * ctl_table_header ; s#ctl_table * ctl_table ; unsigned int users ; } 
s#nf_generic_net struct nf_generic_net { s#nf_proto_net pn ; unsigned int timeout ; } 
E#TCP_CONNTRACK_TIMEOUT_MAX 14 
s#nf_tcp_net struct nf_tcp_net { s#nf_proto_net pn ; unsigned int timeouts [ E#TCP_CONNTRACK_TIMEOUT_MAX ] ; unsigned int tcp_loose ; unsigned int tcp_be_liberal ; unsigned int tcp_max_retrans ; } 
E#UDP_CT_MAX 2 
s#nf_udp_net struct nf_udp_net { s#nf_proto_net pn ; unsigned int timeouts [ E#UDP_CT_MAX ] ; } 
s#nf_icmp_net struct nf_icmp_net { s#nf_proto_net pn ; unsigned int timeout ; } 
s#nf_ip_net struct nf_ip_net { s#nf_generic_net generic ; s#nf_tcp_net tcp ; s#nf_udp_net udp ; s#nf_icmp_net icmp ; s#nf_icmp_net icmpv6 ; } 
s#netns_ct struct netns_ct { t#atomic_t count ; unsigned int expect_count ; unsigned int htable_size ; s#kmem_cache * nf_conntrack_cachep ; s#hlist_nulls_head * hash ; s#hlist_head * expect_hash ; s#hlist_nulls_head unconfirmed ; s#hlist_nulls_head dying ; s#hlist_nulls_head tmpl ; s#ip_conntrack_stat * stat ; s#nf_ct_event_notifier * nf_conntrack_event_cb ; s#nf_exp_event_notifier * nf_expect_event_cb ; int sysctl_events ; unsigned int sysctl_events_retry_timeout ; int sysctl_acct ; int sysctl_tstamp ; int sysctl_checksum ; unsigned int sysctl_log_invalid ; int sysctl_auto_assign_helper ; t#bool auto_assign_helper_warned ; s#nf_ip_net nf_ct_proto ; s#hlist_head * nat_bysource ; unsigned int nat_htable_size ; s#ctl_table_header * sysctl_header ; s#ctl_table_header * acct_sysctl_header ; s#ctl_table_header * tstamp_sysctl_header ; s#ctl_table_header * event_sysctl_header ; s#ctl_table_header * helper_sysctl_header ; char * slabname ; } 
s#netns_nf_frag struct netns_nf_frag { s#netns_sysctl_ipv6 sysctl ; s#netns_frags frags ; } 
s#sk_buff_head struct sk_buff_head { s#sk_buff * next ; s#sk_buff * prev ; t#__u32 qlen ; t#spinlock_t lock ; } 
s##net_generic
E#XFRM_POLICY_MAX 3 
s#xfrm_policy_hash struct xfrm_policy_hash { s#hlist_head * table ; unsigned int hmask ; } 
s#netns_xfrm struct netns_xfrm { s#list_head state_all ; s#hlist_head * state_bydst ; s#hlist_head * state_bysrc ; s#hlist_head * state_byspi ; unsigned int state_hmask ; unsigned int state_num ; s#work_struct state_hash_work ; s#hlist_head state_gc_list ; s#work_struct state_gc_work ; t#wait_queue_head_t km_waitq ; s#list_head policy_all ; s#hlist_head * policy_byidx ; unsigned int policy_idx_hmask ; s#hlist_head policy_inexact [ E#XFRM_POLICY_MAX * 2 ] ; s#xfrm_policy_hash policy_bydst [ E#XFRM_POLICY_MAX * 2 ] ; unsigned int policy_count [ E#XFRM_POLICY_MAX * 2 ] ; s#work_struct policy_hash_work ; s#sock * nlsk ; s#sock * nlsk_stash ; t#u32 sysctl_aevent_etime ; t#u32 sysctl_aevent_rseqth ; int sysctl_larval_drop ; t#u32 sysctl_acq_expires ; s#ctl_table_header * sysctl_hdr ; s#dst_ops xfrm4_dst_ops ; s#dst_ops xfrm6_dst_ops ; } 
s##netns_ipvs
s#net struct net { t#atomic_t passive ; t#atomic_t count ; t#spinlock_t rules_mod_lock ; s#list_head list ; s#list_head cleanup_list ; s#list_head exit_list ; s#user_namespace * user_ns ; unsigned int proc_inum ; s#proc_dir_entry * proc_net ; s#proc_dir_entry * proc_net_stat ; s#ctl_table_set sysctls ; s#sock * rtnl ; s#sock * genl_sock ; s#list_head dev_base_head ; s#hlist_head * dev_name_head ; s#hlist_head * dev_index_head ; unsigned int dev_base_seq ; int ifindex ; unsigned int dev_unreg_count ; s#list_head rules_ops ; s#net_device * loopback_dev ; s#netns_core core ; s#netns_mib mib ; s#netns_packet packet ; s#netns_unix unx ; s#netns_ipv4 ipv4 ; s#netns_ipv6 ipv6 ; s#netns_sctp sctp ; s#netns_dccp dccp ; s#netns_nf nf ; s#netns_xt xt ; s#netns_ct ct ; s#netns_nf_frag nf_frag ; s#sock * nfnl ; s#sock * nfnl_stash ; s#sk_buff_head wext_nlevents ; s#net_generic * gen ; s#netns_xfrm xfrm ; s#netns_ipvs * ipvs ; s#sock * diag_nlsk ; t#atomic_t fnhe_genid ; } 
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
flush_fp_to_thread extern void flush_fp_to_thread ( s#task_struct * ) 
enable_kernel_fp extern void enable_kernel_fp ( void ) 
enable_kernel_altivec extern void enable_kernel_altivec ( void ) 
flush_altivec_to_thread extern void flush_altivec_to_thread ( s#task_struct * ) 
flush_vsx_to_thread extern void flush_vsx_to_thread ( s#task_struct * ) 
validate_sp int validate_sp ( unsigned long , s#task_struct * , unsigned long ) 

/* arch/powerpc/kernel/prom.o */
cpu_to_chip_id extern int cpu_to_chip_id ( int ) 

/* arch/powerpc/kernel/rtas.o */
t#rtas_arg_t typedef t#__be32 rtas_arg_t 
s#rtas_args struct rtas_args { t#__be32 token ; t#__be32 nargs ; t#__be32 nret ; t#rtas_arg_t args [ 16 ] ; t#rtas_arg_t * rets ; } 
s##proc_dir_entry
s#rtas_t struct rtas_t { unsigned long entry ; unsigned long base ; unsigned long size ; t#arch_spinlock_t lock ; s#rtas_args args ; s#device_node * dev ; } 
rtas extern s#rtas_t rtas 
rtas_data_buf_lock extern t#spinlock_t rtas_data_buf_lock 
rtas_data_buf extern char rtas_data_buf [ 4096 ] 
rtas_flash_term_hook extern void ( * rtas_flash_term_hook ) ( int ) 
rtas_progress extern void rtas_progress ( char * , unsigned short ) 
rtas_token extern int rtas_token ( const char * ) 
rtas_service_present extern int rtas_service_present ( const char * ) 
rtas_get_error_log_max extern int rtas_get_error_log_max ( void ) 
rtas_call extern int rtas_call ( int , int , int , int * , ... ) 
rtas_busy_delay_time extern unsigned int rtas_busy_delay_time ( int ) 
rtas_busy_delay extern unsigned int rtas_busy_delay ( int ) 
rtas_get_power_level extern int rtas_get_power_level ( int , int * ) 
rtas_set_power_level extern int rtas_set_power_level ( int , int , int * ) 
rtas_get_sensor extern int rtas_get_sensor ( int , int , int * ) 
rtas_indicator_present extern t#bool rtas_indicator_present ( int , int * ) 
rtas_set_indicator extern int rtas_set_indicator ( int , int , int ) 
rtas_online_cpus_mask extern int rtas_online_cpus_mask ( t#cpumask_var_t ) 
rtas_offline_cpus_mask extern int rtas_offline_cpus_mask ( t#cpumask_var_t ) 

/* arch/powerpc/kernel/rtasd.o */
rtas_cancel_event_scan extern void rtas_cancel_event_scan ( void ) 

/* arch/powerpc/kernel/setup-common.o */
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##device_private
s##sock
s##sysfs_dirent
s##kiocb
s##iovec
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
s#serial_icounter_struct struct serial_icounter_struct { int cts , dsr , rng , dcd ; int rx , tx ; int frame , overrun , parity , brk ; int buf_overrun ; int reserved [ 9 ] ; } 
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pci_host_bridge
s##rtc_time
s##kimage
s#machdep_calls struct machdep_calls { char * name ; void ( * hpte_invalidate ) ( unsigned long , unsigned long , int , int , int , int ) ; long ( * hpte_updatepp ) ( unsigned long , unsigned long , unsigned long , int , int , int , int ) ; void ( * hpte_updateboltedpp ) ( unsigned long , unsigned long , int , int ) ; long ( * hpte_insert ) ( unsigned long , unsigned long , unsigned long , unsigned long , unsigned long , int , int , int ) ; long ( * hpte_remove ) ( unsigned long ) ; void ( * hpte_removebolted ) ( unsigned long , int , int ) ; void ( * flush_hash_range ) ( unsigned long , int ) ; void ( * hugepage_invalidate ) ( s#mm_struct * , unsigned char * , unsigned long , int ) ; void ( * hpte_clear_all ) ( void ) ; int ( * tce_build ) ( s#iommu_table * , long , long , unsigned long , e#dma_data_direction , s#dma_attrs * ) ; void ( * tce_free ) ( s#iommu_table * , long , long ) ; unsigned long ( * tce_get ) ( s#iommu_table * , long ) ; void ( * tce_flush ) ( s#iommu_table * ) ; int ( * tce_build_rm ) ( s#iommu_table * , long , long , unsigned long , e#dma_data_direction , s#dma_attrs * ) ; void ( * tce_free_rm ) ( s#iommu_table * , long , long ) ; void ( * tce_flush_rm ) ( s#iommu_table * ) ; void * ( * ioremap ) ( t#phys_addr_t , unsigned long , unsigned long , void * ) ; void ( * iounmap ) ( volatile void * ) ; void ( * iommu_save ) ( void ) ; void ( * iommu_restore ) ( void ) ; void ( * pci_dma_dev_setup ) ( s#pci_dev * ) ; void ( * pci_dma_bus_setup ) ( s#pci_bus * ) ; int ( * dma_set_mask ) ( s#device * , t#u64 ) ; t#u64 ( * dma_get_required_mask ) ( s#device * ) ; int ( * probe ) ( void ) ; void ( * setup_arch ) ( void ) ; void ( * init_early ) ( void ) ; void ( * show_cpuinfo ) ( s#seq_file * ) ; void ( * show_percpuinfo ) ( s#seq_file * , int ) ; void ( * init_IRQ ) ( void ) ; unsigned int ( * get_irq ) ( void ) ; void ( * pcibios_fixup ) ( void ) ; int ( * pci_probe_mode ) ( s#pci_bus * ) ; void ( * pci_irq_fixup ) ( s#pci_dev * ) ; int ( * pcibios_root_bridge_prepare ) ( s#pci_host_bridge * ) ; int ( * pci_setup_phb ) ( s#pci_controller * ) ; int ( * msi_check_device ) ( s#pci_dev * , int , int ) ; int ( * setup_msi_irqs ) ( s#pci_dev * , int , int ) ; void ( * teardown_msi_irqs ) ( s#pci_dev * ) ; void ( * restart ) ( char * ) ; void ( * power_off ) ( void ) ; void ( * halt ) ( void ) ; void ( * panic ) ( char * ) ; void ( * cpu_die ) ( void ) ; long ( * time_init ) ( void ) ; int ( * set_rtc_time ) ( s#rtc_time * ) ; void ( * get_rtc_time ) ( s#rtc_time * ) ; unsigned long ( * get_boot_time ) ( void ) ; unsigned char ( * rtc_read_val ) ( int ) ; void ( * rtc_write_val ) ( int , unsigned char ) ; void ( * calibrate_decr ) ( void ) ; void ( * progress ) ( char * , unsigned short ) ; void ( * log_error ) ( char * , unsigned int , int ) ; unsigned char ( * nvram_read_val ) ( int ) ; void ( * nvram_write_val ) ( int , unsigned char ) ; t#ssize_t ( * nvram_write ) ( char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * nvram_read ) ( char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * nvram_size ) ( void ) ; void ( * nvram_sync ) ( void ) ; int ( * system_reset_exception ) ( s#pt_regs * ) ; int ( * machine_check_exception ) ( s#pt_regs * ) ; t#bool ( * mce_check_early_recovery ) ( s#pt_regs * ) ; long ( * feature_call ) ( unsigned int , ... ) ; int ( * pci_get_legacy_ide_irq ) ( s#pci_dev * , int ) ; t#pgprot_t ( * phys_mem_access_prot ) ( s#file * , unsigned long , unsigned long , t#pgprot_t ) ; void ( * power_save ) ( void ) ; void ( * enable_pmcs ) ( void ) ; int ( * set_dabr ) ( unsigned long , unsigned long ) ; int ( * set_dawr ) ( unsigned long , unsigned long ) ; int ( * pci_exclude_device ) ( s#pci_controller * , unsigned char , unsigned char ) ; void ( * pcibios_fixup_resources ) ( s#pci_dev * ) ; void ( * pcibios_fixup_bus ) ( s#pci_bus * ) ; int ( * pcibios_enable_device_hook ) ( s#pci_dev * ) ; void ( * pcibios_fixup_phb ) ( s#pci_controller * ) ; t#resource_size_t ( * pcibios_window_alignment ) ( s#pci_bus * , unsigned long ) ; void ( * machine_shutdown ) ( void ) ; void ( * kexec_cpu_down ) ( int , int ) ; int ( * machine_kexec_prepare ) ( s#kimage * ) ; void ( * machine_kexec ) ( s#kimage * ) ; void ( * suspend_disable_irqs ) ( void ) ; void ( * suspend_enable_irqs ) ( void ) ; int ( * suspend_disable_cpu ) ( void ) ; t#ssize_t ( * cpu_probe ) ( const char * , t#size_t ) ; t#ssize_t ( * cpu_release ) ( const char * , t#size_t ) ; int ( * get_random_long ) ( unsigned long * ) ; } 
ppc_md extern s#machdep_calls ppc_md 
machine_id extern s#machdep_calls * machine_id 
of_i8042_kbd_irq int of_i8042_kbd_irq 
of_i8042_aux_irq int of_i8042_aux_irq 
machine_power_off extern void machine_power_off ( void ) 
pm_power_off extern void ( * pm_power_off ) ( void ) 
threads_per_core extern int threads_per_core 
threads_shift extern int threads_shift 
threads_core_mask extern t#cpumask_t threads_core_mask 
check_legacy_ioport extern int check_legacy_ioport ( unsigned long ) 
powerpc_debugfs_root extern s#dentry * powerpc_debugfs_root 

/* arch/powerpc/kernel/setup_64.o */
s#ppc64_caches struct ppc64_caches { t#u32 dsize ; t#u32 dline_size ; t#u32 log_dline_size ; t#u32 dlines_per_page ; t#u32 isize ; t#u32 iline_size ; t#u32 log_iline_size ; t#u32 ilines_per_page ; } 
ppc64_caches extern s#ppc64_caches ppc64_caches 
__per_cpu_offset extern unsigned long __per_cpu_offset [ 2048 ] 
s#ppc_pci_io extern struct ppc_pci_io { t#u8 ( * readb ) ( const volatile void * ) ; t#u16 ( * readw ) ( const volatile void * ) ; t#u32 ( * readl ) ( const volatile void * ) ; t#u16 ( * readw_be ) ( const volatile void * ) ; t#u32 ( * readl_be ) ( const volatile void * ) ; void ( * writeb ) ( t#u8 , volatile void * ) ; void ( * writew ) ( t#u16 , volatile void * ) ; void ( * writel ) ( t#u32 , volatile void * ) ; void ( * writew_be ) ( t#u16 , volatile void * ) ; void ( * writel_be ) ( t#u32 , volatile void * ) ; t#u64 ( * readq ) ( const volatile void * ) ; t#u64 ( * readq_be ) ( const volatile void * ) ; void ( * writeq ) ( t#u64 , volatile void * ) ; void ( * writeq_be ) ( t#u64 , volatile void * ) ; t#u8 ( * inb ) ( unsigned long ) ; t#u16 ( * inw ) ( unsigned long ) ; t#u32 ( * inl ) ( unsigned long ) ; void ( * outb ) ( t#u8 , unsigned long ) ; void ( * outw ) ( t#u16 , unsigned long ) ; void ( * outl ) ( t#u32 , unsigned long ) ; void ( * readsb ) ( const volatile void * , void * , unsigned long ) ; void ( * readsw ) ( const volatile void * , void * , unsigned long ) ; void ( * readsl ) ( const volatile void * , void * , unsigned long ) ; void ( * writesb ) ( volatile void * , const void * , unsigned long ) ; void ( * writesw ) ( volatile void * , const void * , unsigned long ) ; void ( * writesl ) ( volatile void * , const void * , unsigned long ) ; void ( * insb ) ( unsigned long , void * , unsigned long ) ; void ( * insw ) ( unsigned long , void * , unsigned long ) ; void ( * insl ) ( unsigned long , void * , unsigned long ) ; void ( * outsb ) ( unsigned long , const void * , unsigned long ) ; void ( * outsw ) ( unsigned long , const void * , unsigned long ) ; void ( * outsl ) ( unsigned long , const void * , unsigned long ) ; void ( * memset_io ) ( volatile void * , int , unsigned long ) ; void ( * memcpy_fromio ) ( void * , const volatile void * , unsigned long ) ; void ( * memcpy_toio ) ( volatile void * , const void * , unsigned long ) ; } 
ppc_pci_io extern s#ppc_pci_io ppc_pci_io 

/* arch/powerpc/kernel/smp.o */
cpu_sibling_map extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( t#cpumask_var_t ) cpu_sibling_map 
cpu_core_map extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( t#cpumask_var_t ) cpu_core_map 
smp_send_reschedule extern void smp_send_reschedule ( int ) 
cpu_core_index_of_thread int cpu_core_index_of_thread ( int ) 
cpu_first_thread_of_core int cpu_first_thread_of_core ( int ) 

/* arch/powerpc/kernel/stacktrace.o */
s#stack_trace struct stack_trace { unsigned int nr_entries , max_entries ; unsigned long * entries ; int skip ; } 
save_stack_trace extern void save_stack_trace ( s#stack_trace * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
save_stack_trace_tsk extern void save_stack_trace_tsk ( s#task_struct * , s#stack_trace * ) 

/* arch/powerpc/kernel/sysfs.o */
ppc_enable_pmcs void ppc_enable_pmcs ( void ) 
dscr_default unsigned long dscr_default 
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
cpu_add_dev_attr extern int cpu_add_dev_attr ( s#device_attribute * ) 
cpu_add_dev_attr_group extern int cpu_add_dev_attr_group ( s#attribute_group * ) 
cpu_remove_dev_attr extern void cpu_remove_dev_attr ( s#device_attribute * ) 
cpu_remove_dev_attr_group extern void cpu_remove_dev_attr_group ( s#attribute_group * ) 
sysfs_add_device_to_node extern int sysfs_add_device_to_node ( s#device * , int ) 
sysfs_remove_device_from_node extern void sysfs_remove_device_from_node ( s#device * , int ) 

/* arch/powerpc/kernel/time.o */
e#clock_event_mode enum clock_event_mode { CLOCK_EVT_MODE_UNUSED = 0 , CLOCK_EVT_MODE_SHUTDOWN , CLOCK_EVT_MODE_PERIODIC , CLOCK_EVT_MODE_ONESHOT , CLOCK_EVT_MODE_RESUME , } 
s##module
s#clock_event_device struct clock_event_device { void ( * event_handler ) ( s#clock_event_device * ) ; int ( * set_next_event ) ( unsigned long , s#clock_event_device * ) ; int ( * set_next_ktime ) ( t#ktime_t , s#clock_event_device * ) ; t#ktime_t next_event ; t#u64 max_delta_ns ; t#u64 min_delta_ns ; t#u32 mult ; t#u32 shift ; e#clock_event_mode mode ; unsigned int features ; unsigned long retries ; void ( * broadcast ) ( const s#cpumask * ) ; void ( * set_mode ) ( e#clock_event_mode , s#clock_event_device * ) ; void ( * suspend ) ( s#clock_event_device * ) ; void ( * resume ) ( s#clock_event_device * ) ; unsigned long min_delta_ticks ; unsigned long max_delta_ticks ; const char * name ; int rating ; int irq ; int bound_on ; const s#cpumask * cpumask ; s#list_head list ; s#module * owner ; } 
decrementer_clockevent extern s#clock_event_device decrementer_clockevent 
tb_ticks_per_usec extern unsigned long tb_ticks_per_usec 
tb_ticks_per_sec extern unsigned long tb_ticks_per_sec 
rtc_lock t#spinlock_t rtc_lock 
ppc_proc_freq extern unsigned long ppc_proc_freq 
ppc_tb_freq extern unsigned long ppc_tb_freq 
__delay extern void __delay ( unsigned long ) 
udelay extern void udelay ( unsigned long ) 
profile_pc extern unsigned long profile_pc ( s#pt_regs * ) 

/* arch/powerpc/kernel/traps.o */
__debugger extern int ( * __debugger ) ( s#pt_regs * ) 
__debugger_ipi extern int ( * __debugger_ipi ) ( s#pt_regs * ) 
__debugger_bpt extern int ( * __debugger_bpt ) ( s#pt_regs * ) 
__debugger_sstep extern int ( * __debugger_sstep ) ( s#pt_regs * ) 
__debugger_iabr_match extern int ( * __debugger_iabr_match ) ( s#pt_regs * ) 
__debugger_break_match extern int ( * __debugger_break_match ) ( s#pt_regs * ) 
__debugger_fault_handler extern int ( * __debugger_fault_handler ) ( s#pt_regs * ) 

/* arch/powerpc/kernel/vio.o */
vio_cmo_entitlement_update extern int vio_cmo_entitlement_update ( t#size_t ) 
e#vio_dev_family enum vio_dev_family { VDEVICE , PFO , } 
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
s#vio_dev struct vio_dev { const char * name ; const char * type ; t#uint32_t unit_address ; t#uint32_t resource_id ; unsigned int irq ; struct { t#size_t desired ; t#size_t entitled ; t#size_t allocated ; t#atomic_t allocs_failed ; } cmo ; e#vio_dev_family family ; s#device dev ; } 
vio_cmo_set_dev_desired extern void vio_cmo_set_dev_desired ( s#vio_dev * , t#size_t ) 
s#vio_pfo_op struct vio_pfo_op { t#u64 flags ; t#s64 in ; t#s64 inlen ; t#s64 out ; t#s64 outlen ; t#u64 csbcpb ; void * done ; unsigned long handle ; unsigned int timeout ; long hcall_err ; } 
vio_h_cop_sync extern int vio_h_cop_sync ( s#vio_dev * , s#vio_pfo_op * ) 
s#vio_device_id struct vio_device_id { char type [ 32 ] ; char compat [ 32 ] ; } 
s#vio_driver struct vio_driver { const char * name ; const s#vio_device_id * id_table ; int ( * probe ) ( s#vio_dev * , const s#vio_device_id * ) ; int ( * remove ) ( s#vio_dev * ) ; unsigned long ( * get_desired_dma ) ( s#vio_dev * ) ; const s#dev_pm_ops * pm ; s#device_driver driver ; } 
__vio_register_driver extern int __vio_register_driver ( s#vio_driver * , s#module * , const char * ) 
vio_unregister_driver extern void vio_unregister_driver ( s#vio_driver * ) 
vio_register_device_node extern s#vio_dev * vio_register_device_node ( s#device_node * ) 
vio_unregister_device extern void vio_unregister_device ( s#vio_dev * ) 
vio_get_attribute extern const void * vio_get_attribute ( s#vio_dev * , char * , int * ) 
vio_find_node extern s#vio_dev * vio_find_node ( s#device_node * ) 
vio_enable_interrupts extern int vio_enable_interrupts ( s#vio_dev * ) 
vio_disable_interrupts extern int vio_disable_interrupts ( s#vio_dev * ) 

/* arch/powerpc/kvm/book3s.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
e#module_state enum module_state { MODULE_STATE_LIVE , MODULE_STATE_COMING , MODULE_STATE_GOING , MODULE_STATE_UNFORMED , } 
s##sock
s##sysfs_dirent
s##module_param_attrs
s#module_kobject struct module_kobject { s#kobject kobj ; s#module * mod ; s#kobject * drivers_dir ; s#module_param_attrs * mp ; s#completion * kobj_completion ; } 
s#module_attribute struct module_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#module_attribute * , s#module_kobject * , char * ) ; t#ssize_t ( * store ) ( s#module_attribute * , s#module_kobject * , const char * , t#size_t ) ; void ( * setup ) ( s#module * , const char * ) ; int ( * test ) ( s#module * ) ; void ( * free ) ( s#module * ) ; } 
s#kernel_symbol struct kernel_symbol { unsigned long value ; const char * name ; } 
s#kernel_param_ops struct kernel_param_ops { unsigned int flags ; int ( * set ) ( const char * , const s#kernel_param * ) ; int ( * get ) ( char * , const s#kernel_param * ) ; void ( * free ) ( void * ) ; } 
s#kparam_string struct kparam_string { unsigned int maxlen ; char * string ; } 
s#kparam_array struct kparam_array { unsigned int max ; unsigned int elemsize ; unsigned int * num ; const s#kernel_param_ops * ops ; void * elem ; } 
s#kernel_param struct kernel_param { const char * name ; const s#kernel_param_ops * ops ; t#u16 perm ; t#s16 level ; union { void * arg ; const s#kparam_string * str ; const s#kparam_array * arr ; } ; } 
s#exception_table_entry struct exception_table_entry { unsigned long insn ; unsigned long fixup ; } 
s#bug_entry struct bug_entry { unsigned long bug_addr ; const char * file ; unsigned short line ; unsigned short flags ; } 
s#mod_arch_specific struct mod_arch_specific { unsigned int stubs_section ; unsigned int toc_section ; t#bool toc_fixed ; unsigned long toc ; unsigned long tramp ; s#list_head bug_list ; s#bug_entry * bug_table ; unsigned int num_bugs ; } 
t#Elf64_Word typedef t#__u32 Elf64_Word 
t#Elf64_Half typedef t#__u16 Elf64_Half 
t#Elf64_Addr typedef t#__u64 Elf64_Addr 
t#Elf64_Xword typedef t#__u64 Elf64_Xword 
s#elf64_sym struct elf64_sym { t#Elf64_Word st_name ; unsigned char st_info ; unsigned char st_other ; t#Elf64_Half st_shndx ; t#Elf64_Addr st_value ; t#Elf64_Xword st_size ; } 
t#Elf64_Sym typedef s#elf64_sym Elf64_Sym 
s##module_sect_attrs
s##module_notes_attrs
t#jump_label_t typedef t#u64 jump_label_t 
s#jump_entry struct jump_entry { t#jump_label_t code ; t#jump_label_t target ; t#jump_label_t key ; } 
s##static_key_mod
s#static_key struct static_key { t#atomic_t enabled ; s#jump_entry * entries ; s#static_key_mod * next ; } 
s#tracepoint_func struct tracepoint_func { void * func ; void * data ; } 
s#tracepoint struct tracepoint { const char * name ; s#static_key key ; void ( * regfunc ) ( void ) ; void ( * unregfunc ) ( void ) ; s#tracepoint_func * funcs ; } 
s##ftrace_event_call
s#module_ref struct module_ref { unsigned long incs ; unsigned long decs ; } 
s#module struct module { e#module_state state ; s#list_head list ; char name [ ( 64 - sizeof ( unsigned long ) ) ] ; s#module_kobject mkobj ; s#module_attribute * modinfo_attrs ; const char * version ; const char * srcversion ; s#kobject * holders_dir ; const s#kernel_symbol * syms ; const unsigned long * crcs ; unsigned int num_syms ; s#kernel_param * kp ; unsigned int num_kp ; unsigned int num_gpl_syms ; const s#kernel_symbol * gpl_syms ; const unsigned long * gpl_crcs ; const s#kernel_symbol * unused_syms ; const unsigned long * unused_crcs ; unsigned int num_unused_syms ; unsigned int num_unused_gpl_syms ; const s#kernel_symbol * unused_gpl_syms ; const unsigned long * unused_gpl_crcs ; t#bool sig_ok ; const s#kernel_symbol * gpl_future_syms ; const unsigned long * gpl_future_crcs ; unsigned int num_gpl_future_syms ; unsigned int num_exentries ; s#exception_table_entry * extable ; int ( * init ) ( void ) ; void * module_init ; void * module_core ; unsigned int init_size , core_size ; unsigned int init_text_size , core_text_size ; unsigned int init_ro_size , core_ro_size ; void * unwind_info ; s#mod_arch_specific arch ; unsigned int taints ; unsigned num_bugs ; s#list_head bug_list ; s#bug_entry * bug_table ; t#Elf64_Sym * symtab , * core_symtab ; unsigned int num_symtab , core_num_syms ; char * strtab , * core_strtab ; s#module_sect_attrs * sect_attrs ; s#module_notes_attrs * notes_attrs ; char * args ; void * percpu ; unsigned int percpu_size ; unsigned int num_tracepoints ; s#tracepoint * const * tracepoints_ptrs ; s#jump_entry * jump_entries ; unsigned int num_jump_entries ; unsigned int num_trace_bprintk_fmt ; const char * * trace_bprintk_fmt_start ; s#ftrace_event_call * * trace_events ; unsigned int num_trace_events ; unsigned int num_ftrace_callsites ; unsigned long * ftrace_callsites ; s#list_head source_list ; s#list_head target_list ; s#task_struct * waiter ; void ( * exit ) ( void ) ; s#module_ref * refptr ; } 
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s#mmu_notifier_mm struct mmu_notifier_mm { s#hlist_head list ; t#spinlock_t lock ; } 
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
t#gfn_t typedef t#u64 gfn_t 
s#kvm_arch_memory_slot struct kvm_arch_memory_slot { unsigned long * rmap ; unsigned long * slot_phys ; } 
s#kvm_memory_slot struct kvm_memory_slot { t#gfn_t base_gfn ; unsigned long npages ; unsigned long * dirty_bitmap ; s#kvm_arch_memory_slot arch ; unsigned long userspace_addr ; t#u32 flags ; short id ; } 
s#kvm_memslots struct kvm_memslots { t#u64 generation ; s#kvm_memory_slot memslots [ 32 ] ; short id_to_index [ 32 ] ; } 
s#srcu_struct_array struct srcu_struct_array { unsigned long c [ 2 ] ; unsigned long seq [ 2 ] ; } 
s#rcu_batch struct rcu_batch { s#callback_head * head , * * tail ; } 
s##tvec_base
s#delayed_work struct delayed_work { s#work_struct work ; s#timer_list timer ; s#workqueue_struct * wq ; int cpu ; } 
s#srcu_struct struct srcu_struct { unsigned completed ; s#srcu_struct_array * per_cpu_ref ; t#spinlock_t queue_lock ; t#bool running ; s#rcu_batch batch_queue ; s#rcu_batch batch_check0 ; s#rcu_batch batch_check1 ; s#rcu_batch batch_done ; s#delayed_work work ; } 
t#gpa_t typedef t#u64 gpa_t 
s##kvm_io_device
s#kvm_io_range struct kvm_io_range { t#gpa_t addr ; int len ; s#kvm_io_device * dev ; } 
s#kvm_io_bus struct kvm_io_bus { int dev_count ; int ioeventfd_count ; s#kvm_io_range range [ ] ; } 
E#KVM_NR_BUSES 3 
s#kvm_vm_stat struct kvm_vm_stat { t#u32 remote_tlb_flush ; } 
s#revmap_entry struct revmap_entry { unsigned long guest_rpte ; unsigned int forw , back ; } 
s#kvm_rma_info struct kvm_rma_info { t#atomic_t use_count ; unsigned long base_pfn ; } 
s##kvmppc_xics
s#kvm_sregs struct kvm_sregs { t#__u32 pvr ; union { struct { t#__u64 sdr1 ; struct { struct { t#__u64 slbe ; t#__u64 slbv ; } slb [ 64 ] ; } ppc64 ; struct { t#__u32 sr [ 16 ] ; t#__u64 ibat [ 8 ] ; t#__u64 dbat [ 8 ] ; } ppc32 ; } s ; struct { union { struct { t#__u32 features ; t#__u32 svr ; t#__u64 mcar ; t#__u32 hid0 ; t#__u32 pid1 , pid2 ; } fsl ; t#__u8 pad [ 256 ] ; } impl ; t#__u32 features ; t#__u32 impl_id ; t#__u32 update_special ; t#__u32 pir ; t#__u64 sprg8 ; t#__u64 sprg9 ; t#__u64 csrr0 ; t#__u64 dsrr0 ; t#__u64 mcsrr0 ; t#__u32 csrr1 ; t#__u32 dsrr1 ; t#__u32 mcsrr1 ; t#__u32 esr ; t#__u64 dear ; t#__u64 ivpr ; t#__u64 mcivpr ; t#__u64 mcsr ; t#__u32 tsr ; t#__u32 tcr ; t#__u32 decar ; t#__u32 dec ; t#__u64 tb ; t#__u32 dbsr ; t#__u32 dbcr [ 3 ] ; t#__u32 iac [ 4 ] ; t#__u32 dac [ 2 ] ; t#__u32 dvc [ 2 ] ; t#__u8 num_iac ; t#__u8 num_dac ; t#__u8 num_dvc ; t#__u8 pad ; t#__u32 epr ; t#__u32 vrsave ; t#__u32 epcr ; t#__u32 mas0 ; t#__u32 mas1 ; t#__u64 mas2 ; t#__u64 mas7_3 ; t#__u32 mas4 ; t#__u32 mas6 ; t#__u32 ivor_low [ 16 ] ; t#__u32 ivor_high [ 18 ] ; t#__u32 mmucfg ; t#__u32 eptcfg ; t#__u32 tlbcfg [ 4 ] ; t#__u32 tlbps [ 4 ] ; t#__u32 eplc , epsc ; } e ; t#__u8 pad [ 1020 ] ; } u ; } 
u#kvmppc_one_reg union kvmppc_one_reg { t#u32 wval ; t#u64 dval ; t#vector128 vval ; t#u64 vsxval [ 2 ] ; struct { t#u64 addr ; t#u64 length ; } vpaval ; } 
s#kvm_debug_exit_arch struct kvm_debug_exit_arch { } 
s#kvm_sync_regs struct kvm_sync_regs { } 
s#kvm_run struct kvm_run { t#__u8 request_interrupt_window ; t#__u8 padding1 [ 7 ] ; t#__u32 exit_reason ; t#__u8 ready_for_interrupt_injection ; t#__u8 if_flag ; t#__u8 padding2 [ 2 ] ; t#__u64 cr8 ; t#__u64 apic_base ; union { struct { t#__u64 hardware_exit_reason ; } hw ; struct { t#__u64 hardware_entry_failure_reason ; } fail_entry ; struct { t#__u32 exception ; t#__u32 error_code ; } ex ; struct { t#__u8 direction ; t#__u8 size ; t#__u16 port ; t#__u32 count ; t#__u64 data_offset ; } io ; struct { s#kvm_debug_exit_arch arch ; } debug ; struct { t#__u64 phys_addr ; t#__u8 data [ 8 ] ; t#__u32 len ; t#__u8 is_write ; } mmio ; struct { t#__u64 nr ; t#__u64 args [ 6 ] ; t#__u64 ret ; t#__u32 longmode ; t#__u32 pad ; } hypercall ; struct { t#__u64 rip ; t#__u32 is_write ; t#__u32 pad ; } tpr_access ; struct { t#__u8 icptcode ; t#__u16 ipa ; t#__u32 ipb ; } s390_sieic ; t#__u64 s390_reset_flags ; struct { t#__u64 trans_exc_code ; t#__u32 pgm_code ; } s390_ucontrol ; struct { t#__u32 dcrn ; t#__u32 data ; t#__u8 is_write ; } dcr ; struct { t#__u32 suberror ; t#__u32 ndata ; t#__u64 data [ 16 ] ; } internal ; struct { t#__u64 gprs [ 32 ] ; } osi ; struct { t#__u64 nr ; t#__u64 ret ; t#__u64 args [ 9 ] ; } papr_hcall ; struct { t#__u16 subchannel_id ; t#__u16 subchannel_nr ; t#__u32 io_int_parm ; t#__u32 io_int_word ; t#__u32 ipb ; t#__u8 dequeued ; } s390_tsch ; struct { t#__u32 epr ; } epr ; char padding [ 256 ] ; } ; t#__u64 kvm_valid_regs ; t#__u64 kvm_dirty_regs ; union { s#kvm_sync_regs regs ; char padding [ 1024 ] ; } s ; } 
s#kvm_dirty_log struct kvm_dirty_log { t#__u32 slot ; t#__u32 padding1 ; union { void * dirty_bitmap ; t#__u64 padding2 ; } ; } 
s#kvm_userspace_memory_region struct kvm_userspace_memory_region { t#__u32 slot ; t#__u32 flags ; t#__u64 guest_phys_addr ; t#__u64 memory_size ; t#__u64 userspace_addr ; } 
s#kvm_ppc_one_page_size struct kvm_ppc_one_page_size { t#__u32 page_shift ; t#__u32 pte_enc ; } 
s#kvm_ppc_one_seg_page_size struct kvm_ppc_one_seg_page_size { t#__u32 page_shift ; t#__u32 slb_enc ; s#kvm_ppc_one_page_size enc [ 8 ] ; } 
s#kvm_ppc_smmu_info struct kvm_ppc_smmu_info { t#__u64 flags ; t#__u32 slb_size ; t#__u32 pad ; s#kvm_ppc_one_seg_page_size sps [ 8 ] ; } 
s#kvmppc_ops struct kvmppc_ops { s#module * owner ; int ( * get_sregs ) ( s#kvm_vcpu * , s#kvm_sregs * ) ; int ( * set_sregs ) ( s#kvm_vcpu * , s#kvm_sregs * ) ; int ( * get_one_reg ) ( s#kvm_vcpu * , t#u64 , u#kvmppc_one_reg * ) ; int ( * set_one_reg ) ( s#kvm_vcpu * , t#u64 , u#kvmppc_one_reg * ) ; void ( * vcpu_load ) ( s#kvm_vcpu * , int ) ; void ( * vcpu_put ) ( s#kvm_vcpu * ) ; void ( * set_msr ) ( s#kvm_vcpu * , t#u64 ) ; int ( * vcpu_run ) ( s#kvm_run * , s#kvm_vcpu * ) ; s#kvm_vcpu * ( * vcpu_create ) ( s#kvm * , unsigned int ) ; void ( * vcpu_free ) ( s#kvm_vcpu * ) ; int ( * check_requests ) ( s#kvm_vcpu * ) ; int ( * get_dirty_log ) ( s#kvm * , s#kvm_dirty_log * ) ; void ( * flush_memslot ) ( s#kvm * , s#kvm_memory_slot * ) ; int ( * prepare_memory_region ) ( s#kvm * , s#kvm_memory_slot * , s#kvm_userspace_memory_region * ) ; void ( * commit_memory_region ) ( s#kvm * , s#kvm_userspace_memory_region * , const s#kvm_memory_slot * ) ; int ( * unmap_hva ) ( s#kvm * , unsigned long ) ; int ( * unmap_hva_range ) ( s#kvm * , unsigned long , unsigned long ) ; int ( * age_hva ) ( s#kvm * , unsigned long ) ; int ( * test_age_hva ) ( s#kvm * , unsigned long ) ; void ( * set_spte_hva ) ( s#kvm * , unsigned long , t#pte_t ) ; void ( * mmu_destroy ) ( s#kvm_vcpu * ) ; void ( * free_memslot ) ( s#kvm_memory_slot * , s#kvm_memory_slot * ) ; int ( * create_memslot ) ( s#kvm_memory_slot * , unsigned long ) ; int ( * init_vm ) ( s#kvm * ) ; void ( * destroy_vm ) ( s#kvm * ) ; int ( * get_smmu_info ) ( s#kvm * , s#kvm_ppc_smmu_info * ) ; int ( * emulate_op ) ( s#kvm_run * , s#kvm_vcpu * , unsigned int , int * ) ; int ( * emulate_mtspr ) ( s#kvm_vcpu * , int , t#ulong ) ; int ( * emulate_mfspr ) ( s#kvm_vcpu * , int , t#ulong * ) ; void ( * fast_vcpu_kick ) ( s#kvm_vcpu * ) ; long ( * arch_vm_ioctl ) ( s#file * , unsigned int , unsigned long ) ; int ( * hcall_implemented ) ( unsigned long ) ; } 
s#kvmppc_vcore struct kvmppc_vcore { int n_runnable ; int n_busy ; int num_threads ; int entry_exit_count ; int n_woken ; int nap_count ; int napping_threads ; int first_vcpuid ; t#u16 pcpu ; t#u16 last_cpu ; t#u8 vcore_state ; t#u8 in_guest ; s#list_head runnable_threads ; t#spinlock_t lock ; t#wait_queue_head_t wq ; t#u64 stolen_tb ; t#u64 preempt_tb ; s#kvm_vcpu * runner ; s#kvm * kvm ; t#u64 tb_offset ; t#ulong lpcr ; t#u32 arch_compat ; t#ulong pcr ; t#ulong dpdes ; } 
s#kvm_arch struct kvm_arch { unsigned int lpid ; unsigned long hpt_virt ; s#revmap_entry * revmap ; unsigned int host_lpid ; unsigned long host_lpcr ; unsigned long sdr1 ; unsigned long host_sdr1 ; int tlbie_lock ; unsigned long lpcr ; unsigned long rmor ; s#kvm_rma_info * rma ; unsigned long vrma_slb_v ; int rma_setup_done ; int using_mmu_notifiers ; t#u32 hpt_order ; t#atomic_t vcpus_running ; t#u32 online_vcores ; unsigned long hpt_npte ; unsigned long hpt_mask ; t#atomic_t hpte_mod_interest ; t#spinlock_t slot_phys_lock ; t#cpumask_t need_tlb_flush ; int hpt_cma_alloc ; s#mutex hpt_mutex ; s#list_head spapr_tce_tables ; s#list_head rtas_tokens ; unsigned long enabled_hcalls [ ( ( ( 0x31C / 4 + 1 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#kvmppc_xics * xics ; s#kvmppc_ops * kvm_ops ; s#kvmppc_vcore * vcores [ 2048 ] ; } 
s#kvm_coalesced_mmio struct kvm_coalesced_mmio { t#__u64 phys_addr ; t#__u32 len ; t#__u32 pad ; t#__u8 data [ 8 ] ; } 
s#kvm_coalesced_mmio_ring struct kvm_coalesced_mmio_ring { t#__u32 first , last ; s#kvm_coalesced_mmio coalesced_mmio [ 0 ] ; } 
s#mmu_notifier_ops struct mmu_notifier_ops { void ( * release ) ( s#mmu_notifier * , s#mm_struct * ) ; int ( * clear_flush_young ) ( s#mmu_notifier * , s#mm_struct * , unsigned long ) ; int ( * test_young ) ( s#mmu_notifier * , s#mm_struct * , unsigned long ) ; void ( * change_pte ) ( s#mmu_notifier * , s#mm_struct * , unsigned long , t#pte_t ) ; void ( * invalidate_page ) ( s#mmu_notifier * , s#mm_struct * , unsigned long ) ; void ( * invalidate_range_start ) ( s#mmu_notifier * , s#mm_struct * , unsigned long , unsigned long ) ; void ( * invalidate_range_end ) ( s#mmu_notifier * , s#mm_struct * , unsigned long , unsigned long ) ; } 
s#mmu_notifier struct mmu_notifier { s#hlist_node hlist ; const s#mmu_notifier_ops * ops ; } 
s#kvm struct kvm { t#spinlock_t mmu_lock ; s#mutex slots_lock ; s#mm_struct * mm ; s#kvm_memslots * memslots ; s#srcu_struct srcu ; s#kvm_vcpu * vcpus [ 2048 ] ; t#atomic_t online_vcpus ; int last_boosted_vcpu ; s#list_head vm_list ; s#mutex lock ; s#kvm_io_bus * buses [ E#KVM_NR_BUSES ] ; struct { t#spinlock_t lock ; s#list_head items ; s#list_head resampler_list ; s#mutex resampler_lock ; } irqfds ; s#list_head ioeventfds ; s#kvm_vm_stat stat ; s#kvm_arch arch ; t#atomic_t users_count ; s#kvm_coalesced_mmio_ring * coalesced_mmio_ring ; t#spinlock_t ring_lock ; s#list_head coalesced_zones ; s#mutex irq_lock ; s#mmu_notifier mmu_notifier ; unsigned long mmu_notifier_seq ; long mmu_notifier_count ; long tlbs_dirty ; s#list_head devices ; } 
s#preempt_ops struct preempt_ops { void ( * sched_in ) ( s#preempt_notifier * , int ) ; void ( * sched_out ) ( s#preempt_notifier * , s#task_struct * ) ; } 
s#preempt_notifier struct preempt_notifier { s#hlist_node link ; s#preempt_ops * ops ; } 
s#kvm_vcpu_stat struct kvm_vcpu_stat { t#u32 sum_exits ; t#u32 mmio_exits ; t#u32 dcr_exits ; t#u32 signal_exits ; t#u32 light_exits ; t#u32 itlb_real_miss_exits ; t#u32 itlb_virt_miss_exits ; t#u32 dtlb_real_miss_exits ; t#u32 dtlb_virt_miss_exits ; t#u32 syscall_exits ; t#u32 isi_exits ; t#u32 dsi_exits ; t#u32 emulated_inst_exits ; t#u32 dec_exits ; t#u32 ext_intr_exits ; t#u32 halt_wakeup ; t#u32 dbell_exits ; t#u32 gdbell_exits ; t#u32 pf_storage ; t#u32 pf_instruc ; t#u32 sp_storage ; t#u32 sp_instruc ; t#u32 queue_intr ; t#u32 ld ; t#u32 ld_slow ; t#u32 st ; t#u32 st_slow ; } 
s#kvm_mmio_fragment struct kvm_mmio_fragment { t#gpa_t gpa ; void * data ; unsigned len ; } 
s#kvmppc_slb struct kvmppc_slb { t#u64 esid ; t#u64 vsid ; t#u64 orige ; t#u64 origv ; t#bool valid : 1 ; t#bool Ks : 1 ; t#bool Kp : 1 ; t#bool nx : 1 ; t#bool large : 1 ; t#bool tb : 1 ; t#bool class : 1 ; t#u8 base_page_size ; } 
t#gva_t typedef unsigned long gva_t 
s#kvmppc_pte struct kvmppc_pte { t#ulong eaddr ; t#u64 vpage ; t#ulong raddr ; t#bool may_read : 1 ; t#bool may_write : 1 ; t#bool may_execute : 1 ; t#u8 page_size ; } 
s#kvmppc_mmu struct kvmppc_mmu { void ( * slbmte ) ( s#kvm_vcpu * , t#u64 , t#u64 ) ; t#u64 ( * slbmfee ) ( s#kvm_vcpu * , t#u64 ) ; t#u64 ( * slbmfev ) ( s#kvm_vcpu * , t#u64 ) ; void ( * slbie ) ( s#kvm_vcpu * , t#u64 ) ; void ( * slbia ) ( s#kvm_vcpu * ) ; void ( * mtsrin ) ( s#kvm_vcpu * , t#u32 , t#ulong ) ; t#u32 ( * mfsrin ) ( s#kvm_vcpu * , t#u32 ) ; int ( * xlate ) ( s#kvm_vcpu * , t#gva_t , s#kvmppc_pte * , t#bool , t#bool ) ; void ( * reset_msr ) ( s#kvm_vcpu * ) ; void ( * tlbie ) ( s#kvm_vcpu * , t#ulong , t#bool ) ; int ( * esid_to_vsid ) ( s#kvm_vcpu * , t#ulong , t#u64 * ) ; t#u64 ( * ea_to_vp ) ( s#kvm_vcpu * , t#gva_t , t#bool ) ; t#bool ( * is_dcbz32 ) ( s#kvm_vcpu * ) ; } 
s#kvmppc_sid_map struct kvmppc_sid_map { t#u64 guest_vsid ; t#u64 guest_esid ; t#u64 host_vsid ; t#bool valid : 1 ; } 
s#kvmppc_bat struct kvmppc_bat { t#u64 raw ; t#u32 bepi ; t#u32 bepi_mask ; t#u32 brpn ; t#u8 wimg ; t#u8 pp ; t#bool vs : 1 ; t#bool vp : 1 ; } 
s#kvmppc_vcpu_book3s struct kvmppc_vcpu_book3s { s#kvmppc_sid_map sid_map [ ( 1 << 9 ) ] ; struct { t#u64 esid ; t#u64 vsid ; } slb_shadow [ 64 ] ; t#u8 slb_shadow_max ; s#kvmppc_bat ibat [ 8 ] ; s#kvmppc_bat dbat [ 8 ] ; t#u64 hid [ 6 ] ; t#u64 gqr [ 8 ] ; t#u64 sdr1 ; t#u64 hior ; t#u64 msr_mask ; t#u64 proto_vsid_first ; t#u64 proto_vsid_max ; t#u64 proto_vsid_next ; int context_id [ 1 ] ; t#bool hior_explicit ; s#hlist_head hpte_hash_pte [ ( 1 << 13 ) ] ; s#hlist_head hpte_hash_pte_long [ ( 1 << 12 ) ] ; s#hlist_head hpte_hash_vpte [ ( 1 << 13 ) ] ; s#hlist_head hpte_hash_vpte_long [ ( 1 << 5 ) ] ; s#hlist_head hpte_hash_vpte_64k [ ( 1 << 11 ) ] ; int hpte_cache_count ; t#spinlock_t mmu_lock ; } 
s#tasklet_struct struct tasklet_struct { s#tasklet_struct * next ; unsigned long state ; t#atomic_t count ; void ( * func ) ( unsigned long ) ; unsigned long data ; } 
s#kvm_vcpu_arch_shared struct kvm_vcpu_arch_shared { t#__u64 scratch1 ; t#__u64 scratch2 ; t#__u64 scratch3 ; t#__u64 critical ; t#__u64 sprg0 ; t#__u64 sprg1 ; t#__u64 sprg2 ; t#__u64 sprg3 ; t#__u64 srr0 ; t#__u64 srr1 ; t#__u64 dar ; t#__u64 msr ; t#__u32 dsisr ; t#__u32 int_pending ; t#__u32 sr [ 16 ] ; t#__u32 mas0 ; t#__u32 mas1 ; t#__u64 mas7_3 ; t#__u64 mas2 ; t#__u32 mas4 ; t#__u32 mas6 ; t#__u32 esr ; t#__u32 pir ; t#__u64 sprg4 ; t#__u64 sprg5 ; t#__u64 sprg6 ; t#__u64 sprg7 ; } 
s##openpic
s##kvmppc_icp
s#kvmppc_vpa struct kvmppc_vpa { unsigned long gpa ; void * pinned_addr ; void * pinned_end ; unsigned long next_gpa ; unsigned long len ; t#u8 update_pending ; t#bool dirty ; } 
s#kvm_vcpu_arch struct kvm_vcpu_arch { t#ulong host_stack ; t#u32 host_pid ; s#kvmppc_slb slb [ 64 ] ; int slb_max ; int slb_nr ; s#kvmppc_mmu mmu ; s#kvmppc_vcpu_book3s * book3s ; t#ulong gpr [ 32 ] ; s#thread_fp_state fp ; s#thread_vr_state vr ; t#u32 qpr [ 32 ] ; t#ulong pc ; t#ulong ctr ; t#ulong lr ; t#ulong tar ; t#ulong xer ; t#u32 cr ; t#ulong hflags ; t#ulong guest_owned_ext ; t#ulong purr ; t#ulong spurr ; t#ulong ic ; t#ulong vtb ; t#ulong dscr ; t#ulong amr ; t#ulong uamor ; t#ulong iamr ; t#u32 ctrl ; t#u32 dabrx ; t#ulong dabr ; t#ulong dawr ; t#ulong dawrx ; t#ulong ciabr ; t#ulong cfar ; t#ulong ppr ; t#ulong pspb ; t#ulong fscr ; t#ulong shadow_fscr ; t#ulong ebbhr ; t#ulong ebbrr ; t#ulong bescr ; t#ulong csigr ; t#ulong tacr ; t#ulong tcscr ; t#ulong acop ; t#ulong wort ; t#ulong shadow_srr1 ; t#u32 vrsave ; t#u32 mmucr ; t#ulong shadow_msr ; t#ulong csrr0 ; t#ulong csrr1 ; t#ulong dsrr0 ; t#ulong dsrr1 ; t#ulong mcsrr0 ; t#ulong mcsrr1 ; t#ulong mcsr ; t#u32 dec ; t#u64 entry_tb ; t#u64 entry_vtb ; t#u64 entry_ic ; t#u32 tcr ; t#ulong tsr ; t#u32 ivor [ 64 ] ; t#ulong ivpr ; t#u32 pvr ; t#u32 shadow_pid ; t#u32 shadow_pid1 ; t#u32 pid ; t#u32 swap_pid ; t#u32 ccr0 ; t#u32 ccr1 ; t#u32 dbsr ; t#u64 mmcr [ 5 ] ; t#u32 pmc [ 8 ] ; t#u32 spmc [ 2 ] ; t#u64 siar ; t#u64 sdar ; t#u64 sier ; t#u64 tfhar ; t#u64 texasr ; t#u64 tfiar ; t#u32 cr_tm ; t#u64 lr_tm ; t#u64 ctr_tm ; t#u64 amr_tm ; t#u64 ppr_tm ; t#u64 dscr_tm ; t#u64 tar_tm ; t#ulong gpr_tm [ 32 ] ; s#thread_fp_state fp_tm ; s#thread_vr_state vr_tm ; t#u32 vrsave_tm ; t#ulong fault_dar ; t#u32 fault_dsisr ; unsigned long intr_msr ; t#gpa_t paddr_accessed ; t#gva_t vaddr_accessed ; t#u8 io_gpr ; t#u8 mmio_is_bigendian ; t#u8 mmio_sign_extend ; t#u8 dcr_needed ; t#u8 dcr_is_write ; t#u8 osi_needed ; t#u8 osi_enabled ; t#u8 papr_enabled ; t#u8 watchdog_enabled ; t#u8 sane ; t#u8 cpu_type ; t#u8 hcall_needed ; t#u8 epr_flags ; t#u8 epr_needed ; t#u32 cpr0_cfgaddr ; s#hrtimer dec_timer ; s#tasklet_struct tasklet ; t#u64 dec_jiffies ; t#u64 dec_expires ; unsigned long pending_exceptions ; t#u8 ceded ; t#u8 prodded ; t#u32 last_inst ; t#wait_queue_head_t * wqp ; s#kvmppc_vcore * vcore ; int ret ; int trap ; int state ; int ptid ; t#bool timer_running ; t#wait_queue_head_t cpu_run ; s#kvm_vcpu_arch_shared * shared ; t#bool shared_big_endian ; unsigned long magic_page_pa ; unsigned long magic_page_ea ; t#bool disable_kernel_nx ; int irq_type ; int irq_cpu_id ; s#openpic * mpic ; s#kvmppc_icp * icp ; s#kvm_vcpu_arch_shared shregs ; unsigned long pgfault_addr ; long pgfault_index ; unsigned long pgfault_hpte [ 2 ] ; s#list_head run_list ; s#task_struct * run_task ; s#kvm_run * kvm_run ; t#pgd_t * pgdir ; t#spinlock_t vpa_update_lock ; s#kvmppc_vpa vpa ; s#kvmppc_vpa dtl ; s#dtl_entry * dtl_ptr ; unsigned long dtl_index ; t#u64 stolen_logged ; s#kvmppc_vpa slb_shadow ; t#spinlock_t tbacct_lock ; t#u64 busy_stolen ; t#u64 busy_preempt ; } 
s#kvm_vcpu struct kvm_vcpu { s#kvm * kvm ; s#preempt_notifier preempt_notifier ; int cpu ; int vcpu_id ; int srcu_idx ; int mode ; unsigned long requests ; unsigned long guest_debug ; s#mutex mutex ; s#kvm_run * run ; int fpu_active ; int guest_fpu_loaded , guest_xcr0_loaded ; t#wait_queue_head_t wq ; s#pid * pid ; int sigset_active ; t#sigset_t sigset ; s#kvm_vcpu_stat stat ; int mmio_needed ; int mmio_read_completed ; int mmio_is_write ; int mmio_cur_fragment ; int mmio_nr_fragments ; s#kvm_mmio_fragment mmio_fragments [ 2 ] ; t#bool preempted ; s#kvm_vcpu_arch arch ; } 
kvmppc_book3s_queue_irqprio extern void kvmppc_book3s_queue_irqprio ( s#kvm_vcpu * , unsigned int ) 
kvmppc_core_queue_program extern void kvmppc_core_queue_program ( s#kvm_vcpu * , t#ulong ) 
kvmppc_core_queue_dec extern void kvmppc_core_queue_dec ( s#kvm_vcpu * ) 
kvmppc_core_pending_dec extern int kvmppc_core_pending_dec ( s#kvm_vcpu * ) 
kvmppc_core_dequeue_dec extern void kvmppc_core_dequeue_dec ( s#kvm_vcpu * ) 
kvmppc_core_prepare_to_enter extern int kvmppc_core_prepare_to_enter ( s#kvm_vcpu * ) 
t#hfn_t typedef t#u64 hfn_t 
t#pfn_t typedef t#hfn_t pfn_t 
kvmppc_gfn_to_pfn extern t#pfn_t kvmppc_gfn_to_pfn ( s#kvm_vcpu * , t#gfn_t , t#bool , t#bool * ) 
kvmppc_st extern int kvmppc_st ( s#kvm_vcpu * , t#ulong * , int , void * , t#bool ) 
kvmppc_ld extern int kvmppc_ld ( s#kvm_vcpu * , t#ulong * , int , void * , t#bool ) 
kvmppc_set_msr extern void kvmppc_set_msr ( s#kvm_vcpu * , t#u64 ) 
kvm_unmap_hva extern int kvm_unmap_hva ( s#kvm * , unsigned long ) 

/* arch/powerpc/kvm/book3s_64_vio_hv.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##optimistic_spin_queue
s#xattr_handler struct xattr_handler { const char * prefix ; int flags ; t#size_t ( * list ) ( s#dentry * , char * , t#size_t , const char * , t#size_t , int ) ; int ( * get ) ( s#dentry * , const char * , void * , t#size_t , int ) ; int ( * set ) ( s#dentry * , const char * , const void * , t#size_t , int , int ) ; } 
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##cdev
s##radix_tree_node
s#swap_cluster_info struct swap_cluster_info { unsigned int data : 24 ; unsigned int flags : 8 ; } 
s#percpu_cluster struct percpu_cluster { s#swap_cluster_info index ; unsigned int next ; } 
s#swap_extent struct swap_extent { s#list_head list ; unsigned long start_page ; unsigned long nr_pages ; t#sector_t start_block ; } 
s#swap_info_struct struct swap_info_struct { unsigned long flags ; signed short prio ; s#plist_node list ; s#plist_node avail_list ; signed char type ; unsigned int max ; unsigned char * swap_map ; s#swap_cluster_info * cluster_info ; s#swap_cluster_info free_cluster_head ; s#swap_cluster_info free_cluster_tail ; unsigned int lowest_bit ; unsigned int highest_bit ; unsigned int pages ; unsigned int inuse_pages ; unsigned int cluster_next ; unsigned int cluster_nr ; s#percpu_cluster * percpu_cluster ; s#swap_extent * curr_swap_extent ; s#swap_extent first_swap_extent ; s#block_device * bdev ; s#file * swap_file ; unsigned int old_block_size ; unsigned long * frontswap_map ; t#atomic_t frontswap_pages ; t#spinlock_t lock ; s#work_struct discard_work ; s#swap_cluster_info discard_cluster_head ; s#swap_cluster_info discard_cluster_tail ; } 
s##slab
s##kmem_cache_node
s##array_cache
s#mempolicy struct mempolicy { t#atomic_t refcnt ; unsigned short mode ; unsigned short flags ; union { short preferred_node ; t#nodemask_t nodes ; } v ; union { t#nodemask_t cpuset_mems_allowed ; t#nodemask_t user_nodemask ; } w ; } 
s##linux_binfmt
s##kioctx_table
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s#taskstats struct taskstats { t#__u16 version ; t#__u32 ac_exitcode ; t#__u8 ac_flag ; t#__u8 ac_nice ; t#__u64 cpu_count __attribute__ ( ( aligned ( 8 ) ) ) ; t#__u64 cpu_delay_total ; t#__u64 blkio_count ; t#__u64 blkio_delay_total ; t#__u64 swapin_count ; t#__u64 swapin_delay_total ; t#__u64 cpu_run_real_total ; t#__u64 cpu_run_virtual_total ; char ac_comm [ 32 ] ; t#__u8 ac_sched __attribute__ ( ( aligned ( 8 ) ) ) ; t#__u8 ac_pad [ 3 ] ; t#__u32 ac_uid __attribute__ ( ( aligned ( 8 ) ) ) ; t#__u32 ac_gid ; t#__u32 ac_pid ; t#__u32 ac_ppid ; t#__u32 ac_btime ; t#__u64 ac_etime __attribute__ ( ( aligned ( 8 ) ) ) ; t#__u64 ac_utime ; t#__u64 ac_stime ; t#__u64 ac_minflt ; t#__u64 ac_majflt ; t#__u64 coremem ; t#__u64 virtmem ; t#__u64 hiwater_rss ; t#__u64 hiwater_vm ; t#__u64 read_char ; t#__u64 write_char ; t#__u64 read_syscalls ; t#__u64 write_syscalls ; t#__u64 read_bytes ; t#__u64 write_bytes ; t#__u64 cancelled_write_bytes ; t#__u64 nvcsw ; t#__u64 nivcsw ; t#__u64 ac_utimescaled ; t#__u64 ac_stimescaled ; t#__u64 cpu_scaled_run_real_total ; t#__u64 freepages_count ; t#__u64 freepages_delay_total ; } 
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s#reclaim_state struct reclaim_state { unsigned long reclaimed_slab ; } 
s##io_context
s#cgroup_name struct cgroup_name { s#callback_head callback_head ; char name [ ] ; } 
E#CGROUP_BUILTIN_SUBSYS_COUNT 9 
E#CGROUP_SUBSYS_COUNT ( E#CGROUP_BUILTIN_SUBSYS_COUNT - 1 ) + 3 
s#idr_layer struct idr_layer { int prefix ; unsigned long bitmap [ ( ( ( ( 1 << 8 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#idr_layer * ary [ 1 << 8 ] ; int count ; int layer ; s#callback_head callback_head ; } 
s#idr struct idr { s#idr_layer * hint ; s#idr_layer * top ; s#idr_layer * id_free ; int layers ; int id_free_cnt ; int cur ; t#spinlock_t lock ; } 
s#cgroupfs_root struct cgroupfs_root { s#super_block * sb ; unsigned long subsys_mask ; int hierarchy_id ; s#list_head subsys_list ; s#cgroup top_cgroup ; int number_of_cgroups ; s#list_head root_list ; unsigned long flags ; s#idr cgroup_idr ; char release_agent_path [ 4096 ] ; char name [ 64 ] ; } 
s#simple_xattrs struct simple_xattrs { s#list_head head ; t#spinlock_t lock ; } 
s#cgroup struct cgroup { unsigned long flags ; int id ; int nr_css ; s#list_head sibling ; s#list_head children ; s#list_head files ; s#cgroup * parent ; s#dentry * dentry ; t#u64 serial_nr ; s#cgroup_name * name ; s#cgroup_subsys_state * subsys [ E#CGROUP_SUBSYS_COUNT ] ; s#cgroupfs_root * root ; s#list_head cset_links ; s#list_head release_list ; s#list_head pidlists ; s#mutex pidlist_mutex ; s#cgroup_subsys_state dummy_css ; s#callback_head callback_head ; s#work_struct destroy_work ; s#list_head event_list ; t#spinlock_t event_list_lock ; s#simple_xattrs xattrs ; } 
s##cgroup_taskset
s#cgroup_map_cb struct cgroup_map_cb { int ( * fill ) ( s#cgroup_map_cb * , const char * , t#u64 ) ; void * state ; } 
s##eventfd_ctx
s#cftype struct cftype { char name [ 64 ] ; int private ; t#umode_t mode ; t#size_t max_write_len ; unsigned int flags ; s#cgroup_subsys * ss ; int ( * open ) ( s#inode * , s#file * ) ; t#ssize_t ( * read ) ( s#cgroup_subsys_state * , s#cftype * , s#file * , char * , t#size_t , t#loff_t * ) ; t#u64 ( * read_u64 ) ( s#cgroup_subsys_state * , s#cftype * ) ; t#s64 ( * read_s64 ) ( s#cgroup_subsys_state * , s#cftype * ) ; int ( * read_map ) ( s#cgroup_subsys_state * , s#cftype * , s#cgroup_map_cb * ) ; int ( * read_seq_string ) ( s#cgroup_subsys_state * , s#cftype * , s#seq_file * ) ; t#ssize_t ( * write ) ( s#cgroup_subsys_state * , s#cftype * , s#file * , const char * , t#size_t , t#loff_t * ) ; int ( * write_u64 ) ( s#cgroup_subsys_state * , s#cftype * , t#u64 ) ; int ( * write_s64 ) ( s#cgroup_subsys_state * , s#cftype * , t#s64 ) ; int ( * write_string ) ( s#cgroup_subsys_state * , s#cftype * , const char * ) ; int ( * trigger ) ( s#cgroup_subsys_state * , unsigned int ) ; int ( * release ) ( s#inode * , s#file * ) ; int ( * register_event ) ( s#cgroup_subsys_state * , s#cftype * , s#eventfd_ctx * , const char * ) ; void ( * unregister_event ) ( s#cgroup_subsys_state * , s#cftype * , s#eventfd_ctx * ) ; } 
s#cftype_set struct cftype_set { s#list_head node ; s#cftype * cfts ; } 
s#cgroup_subsys struct cgroup_subsys { s#cgroup_subsys_state * ( * css_alloc ) ( s#cgroup_subsys_state * ) ; int ( * css_online ) ( s#cgroup_subsys_state * ) ; void ( * css_offline ) ( s#cgroup_subsys_state * ) ; void ( * css_free ) ( s#cgroup_subsys_state * ) ; int ( * can_attach ) ( s#cgroup_subsys_state * , s#cgroup_taskset * ) ; void ( * cancel_attach ) ( s#cgroup_subsys_state * , s#cgroup_taskset * ) ; void ( * attach ) ( s#cgroup_subsys_state * , s#cgroup_taskset * ) ; void ( * fork ) ( s#task_struct * ) ; void ( * exit ) ( s#cgroup_subsys_state * , s#cgroup_subsys_state * , s#task_struct * ) ; void ( * bind ) ( s#cgroup_subsys_state * ) ; int subsys_id ; int disabled ; int early_init ; t#bool use_id ; t#bool broken_hierarchy ; t#bool warned_broken_hierarchy ; const char * name ; s#cgroupfs_root * root ; s#list_head sibling ; s#idr idr ; t#spinlock_t id_lock ; s#list_head cftsets ; s#cftype * base_cftypes ; s#cftype_set base_cftset ; s#module * module ; } 
t#percpu_ref_func_t typedef void ( percpu_ref_func_t ) ( s#percpu_ref * ) 
s#percpu_ref struct percpu_ref { t#atomic_t count ; unsigned * pcpu_count ; t#percpu_ref_func_t * release ; t#percpu_ref_func_t * confirm_kill ; s#callback_head rcu ; } 
s##css_id
s#cgroup_subsys_state struct cgroup_subsys_state { s#cgroup * cgroup ; s#cgroup_subsys * ss ; s#percpu_ref refcnt ; s#cgroup_subsys_state * parent ; unsigned long flags ; s#css_id * id ; s#callback_head callback_head ; s#work_struct destroy_work ; } 
s#css_set struct css_set { t#atomic_t refcount ; s#hlist_node hlist ; s#list_head tasks ; s#list_head cgrp_links ; s#cgroup_subsys_state * subsys [ E#CGROUP_SUBSYS_COUNT ] ; s#callback_head callback_head ; } 
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##tvec_base
s##kvm_io_device
s##kvmppc_xics
s##openpic
s##kvmppc_icp
kvmppc_h_get_tce extern long kvmppc_h_get_tce ( s#kvm_vcpu * , unsigned long , unsigned long ) 
kvmppc_h_put_tce extern long kvmppc_h_put_tce ( s#kvm_vcpu * , unsigned long , unsigned long , unsigned long ) 

/* arch/powerpc/kvm/book3s_exports.o */
kvmppc_hv_entry_trampoline extern void kvmppc_hv_entry_trampoline ( void ) 
kvmppc_entry_trampoline extern void kvmppc_entry_trampoline ( void ) 

/* arch/powerpc/kvm/book3s_hv_builtin.o */
kvm_rma_pages extern unsigned long kvm_rma_pages 
kvm_alloc_rma extern s#kvm_rma_info * kvm_alloc_rma ( void ) 
kvm_release_rma extern void kvm_release_rma ( s#kvm_rma_info * ) 
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
kvm_alloc_hpt extern s#page * kvm_alloc_hpt ( unsigned long ) 
kvm_release_hpt extern void kvm_release_hpt ( s#page * , unsigned long ) 
kvm_hv_vm_activated extern void kvm_hv_vm_activated ( void ) 
kvm_hv_vm_deactivated extern void kvm_hv_vm_deactivated ( void ) 
kvmppc_hcall_impl_hv_realmode extern int kvmppc_hcall_impl_hv_realmode ( unsigned long ) 

/* arch/powerpc/kvm/book3s_hv_rm_mmu.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##cdev
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##linux_binfmt
s##kioctx_table
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##tvec_base
s##openpic
s##kvmppc_icp
s##kvm_io_device
s##kvmppc_xics
kvmppc_add_revmap_chain extern void kvmppc_add_revmap_chain ( s#kvm * , s#revmap_entry * , unsigned long * , long , int ) 
kvmppc_do_h_enter extern long kvmppc_do_h_enter ( s#kvm * , unsigned long , long , unsigned long , unsigned long , t#pgd_t * , t#bool , unsigned long * ) 
kvmppc_do_h_remove extern long kvmppc_do_h_remove ( s#kvm * , unsigned long , unsigned long , unsigned long , unsigned long * ) 
kvmppc_invalidate_hpte extern void kvmppc_invalidate_hpte ( s#kvm * , t#__be64 * , unsigned long ) 
kvmppc_clear_ref_hpte void kvmppc_clear_ref_hpte ( s#kvm * , t#__be64 * , unsigned long ) 
kvmppc_hv_find_lock_hpte extern long kvmppc_hv_find_lock_hpte ( s#kvm * , t#gva_t , unsigned long , unsigned long ) 

/* arch/powerpc/kvm/book3s_rtas.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##tvec_base
s##workqueue_struct
s##kvm_io_device
s##kvmppc_xics
s##module
s##openpic
s##kvmppc_icp
kvmppc_rtas_hcall extern int kvmppc_rtas_hcall ( s#kvm_vcpu * ) 

/* arch/powerpc/kvm/book3s_xics.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##tvec_base
s##kvm_io_device
s#kvm_device_attr struct kvm_device_attr { t#__u32 flags ; t#__u32 group ; t#__u64 attr ; t#__u64 addr ; } 
s#kvm_device_ops struct kvm_device_ops { const char * name ; int ( * create ) ( s#kvm_device * , t#u32 ) ; void ( * destroy ) ( s#kvm_device * ) ; int ( * set_attr ) ( s#kvm_device * , s#kvm_device_attr * ) ; int ( * get_attr ) ( s#kvm_device * , s#kvm_device_attr * ) ; int ( * has_attr ) ( s#kvm_device * , s#kvm_device_attr * ) ; long ( * ioctl ) ( s#kvm_device * , unsigned int , unsigned long ) ; } 
s#kvm_device struct kvm_device { s#kvm_device_ops * ops ; s#kvm * kvm ; void * private ; s#list_head vm_node ; } 
s#ics_irq_state struct ics_irq_state { t#u32 number ; t#u32 server ; t#u8 priority ; t#u8 saved_priority ; t#u8 resend ; t#u8 masked_pending ; t#u8 asserted ; t#u8 exists ; } 
s#kvmppc_ics struct kvmppc_ics { s#mutex lock ; t#u16 icsid ; s#ics_irq_state irq_state [ ( 1 << 10 ) ] ; } 
s#kvmppc_xics struct kvmppc_xics { s#kvm * kvm ; s#kvm_device * dev ; s#dentry * dentry ; t#u32 max_icsid ; t#bool real_mode ; t#bool real_mode_dbg ; s#kvmppc_ics * ics [ 1023 + 1 ] ; } 
s##openpic
u#kvmppc_icp_state union kvmppc_icp_state { unsigned long raw ; struct { t#u8 out_ee : 1 ; t#u8 need_resend : 1 ; t#u8 cppr ; t#u8 mfrr ; t#u8 pending_pri ; t#u32 xisr ; } ; } 
s#kvmppc_icp struct kvmppc_icp { s#kvm_vcpu * vcpu ; unsigned long server_num ; u#kvmppc_icp_state state ; unsigned long resend_map [ ( 1023 / 64 + 1 ) ] ; t#u32 rm_action ; s#kvm_vcpu * rm_kick_target ; t#u32 rm_reject ; u#kvmppc_icp_state rm_dbgstate ; s#kvm_vcpu * rm_dbgtgt ; } 
kvmppc_xics_hcall extern int kvmppc_xics_hcall ( s#kvm_vcpu * , t#u32 ) 

/* arch/powerpc/kvm/emulate.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##tvec_base
s##workqueue_struct
s##kvm_io_device
s##kvmppc_xics
s##module
s##openpic
s##kvmppc_icp
kvmppc_emulate_instruction extern int kvmppc_emulate_instruction ( s#kvm_run * , s#kvm_vcpu * ) 

/* arch/powerpc/kvm/powerpc.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##sem_undo_list
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##proc_dir_entry
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##ring_buffer_iter
s##kvm_io_device
s##kvmppc_xics
s##openpic
s##kvmppc_icp
kvmppc_hv_ops extern s#kvmppc_ops * kvmppc_hv_ops 
kvmppc_pr_ops extern s#kvmppc_ops * kvmppc_pr_ops 
kvmppc_prepare_to_enter extern int kvmppc_prepare_to_enter ( s#kvm_vcpu * ) 
kvmppc_kvm_pv extern int kvmppc_kvm_pv ( s#kvm_vcpu * ) 
kvmppc_sanity_check extern int kvmppc_sanity_check ( s#kvm_vcpu * ) 
kvmppc_emulate_mmio extern int kvmppc_emulate_mmio ( s#kvm_run * , s#kvm_vcpu * ) 
kvmppc_handle_load extern int kvmppc_handle_load ( s#kvm_run * , s#kvm_vcpu * , unsigned int , unsigned int , int ) 
kvmppc_handle_store extern int kvmppc_handle_store ( s#kvm_run * , s#kvm_vcpu * , t#u64 , unsigned int , int ) 
kvmppc_alloc_lpid long kvmppc_alloc_lpid ( void ) 
kvmppc_claim_lpid void kvmppc_claim_lpid ( long ) 
kvmppc_free_lpid void kvmppc_free_lpid ( long ) 
kvmppc_init_lpid void kvmppc_init_lpid ( unsigned long ) 

/* arch/powerpc/lib/devres.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
devm_ioremap_prot void * devm_ioremap_prot ( s#device * , t#resource_size_t , t#size_t , unsigned long ) 

/* arch/powerpc/lib/locks.o */
arch_spin_unlock_wait extern void arch_spin_unlock_wait ( t#arch_spinlock_t * ) 

/* arch/powerpc/lib/usercopy_64.o */
copy_from_user extern unsigned long copy_from_user ( void * , const void * , unsigned long ) 
copy_to_user extern unsigned long copy_to_user ( void * , const void * , unsigned long ) 
copy_in_user extern unsigned long copy_in_user ( void * , const void * , unsigned long ) 

/* arch/powerpc/mm/hash_utils_64.o */
htab_hash_mask extern unsigned long htab_hash_mask 
mmu_slb_size extern t#u16 mmu_slb_size 
hash_page extern int hash_page ( unsigned long , unsigned long , unsigned long ) 

/* arch/powerpc/mm/hugetlbpage.o */
find_linux_pte_or_hugepte t#pte_t * find_linux_pte_or_hugepte ( t#pgd_t * , unsigned long , unsigned * ) 

/* arch/powerpc/mm/icswx.o */
s##anon_vma
s##address_space
s##slab
s##kmem_cache
s##mempolicy
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
use_cop extern int use_cop ( unsigned long , s#mm_struct * ) 
drop_cop extern void drop_cop ( unsigned long , s#mm_struct * ) 
acop_handle_fault extern int acop_handle_fault ( s#pt_regs * , unsigned long , unsigned long ) 

/* arch/powerpc/mm/init_64.o */
memstart_addr extern t#phys_addr_t memstart_addr 
kernstart_addr extern t#phys_addr_t kernstart_addr 

/* arch/powerpc/mm/mem.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
phys_mem_access_prot extern t#pgprot_t phys_mem_access_prot ( s#file * , unsigned long , unsigned long , t#pgprot_t ) 
walk_system_ram_range extern int walk_system_ram_range ( unsigned long , unsigned long , void * , int ( * ) ( unsigned long , unsigned long , void * ) ) 
flush_dcache_page extern void flush_dcache_page ( s#page * ) 
flush_dcache_icache_page extern void flush_dcache_icache_page ( s#page * ) 
clear_user_page extern void clear_user_page ( void * , unsigned long , s#page * ) 
flush_icache_user_range extern void flush_icache_user_range ( s#vm_area_struct * , s#page * , unsigned long , int ) 

/* arch/powerpc/mm/mmu_context_hash64.o */
__init_new_context extern int __init_new_context ( void ) 
__destroy_context extern void __destroy_context ( int ) 

/* arch/powerpc/mm/numa.o */
numa_cpu_lookup_table extern int numa_cpu_lookup_table [ ] 
node_to_cpumask_map extern t#cpumask_var_t node_to_cpumask_map [ ] 
E#NR_WMARK 3 
E#MIGRATE_PCPTYPES 3 
s#per_cpu_pages struct per_cpu_pages { int count ; int high ; int batch ; s#list_head lists [ E#MIGRATE_PCPTYPES ] ; } 
t#s8 typedef signed char s8 
E#NR_LRU_BASE 2 
E#NR_VM_ZONE_STAT_ITEMS ( E#NR_LRU_BASE ) + 34 
s#per_cpu_pageset struct per_cpu_pageset { s#per_cpu_pages pcp ; t#s8 expire ; t#s8 stat_threshold ; t#s8 vm_stat_diff [ E#NR_VM_ZONE_STAT_ITEMS ] ; } 
t#seqlock_t typedef struct { s#seqcount seqcount ; t#spinlock_t lock ; } seqlock_t 
s#zone_padding struct zone_padding { char x [ 0 ] ; } 
E#MIGRATE_TYPES ( E#MIGRATE_PCPTYPES ) + 3 
s#free_area struct free_area { s#list_head free_list [ E#MIGRATE_TYPES ] ; unsigned long nr_free ; } 
E#NR_LRU_LISTS ( 0 + 2 + 1 ) + 2 
s#zone_reclaim_stat struct zone_reclaim_stat { unsigned long recent_rotated [ 2 ] ; unsigned long recent_scanned [ 2 ] ; } 
s#lruvec struct lruvec { s#list_head lists [ E#NR_LRU_LISTS ] ; s#zone_reclaim_stat reclaim_stat ; s#zone * zone ; } 
s#zone struct zone { unsigned long watermark [ E#NR_WMARK ] ; long lowmem_reserve [ 3 ] ; int node ; unsigned int inactive_ratio ; s#pglist_data * zone_pgdat ; s#per_cpu_pageset * pageset ; unsigned long dirty_balance_reserve ; unsigned long min_unmapped_pages ; unsigned long min_slab_pages ; unsigned long zone_start_pfn ; unsigned long managed_pages ; unsigned long spanned_pages ; unsigned long present_pages ; const char * name ; int nr_migrate_reserve_block ; t#seqlock_t span_seqlock ; t#wait_queue_head_t * wait_table ; unsigned long wait_table_hash_nr_entries ; unsigned long wait_table_bits ; s#zone_padding _pad1_ ; t#spinlock_t lock ; s#free_area free_area [ 9 ] ; unsigned long flags ; s#zone_padding _pad2_ ; t#spinlock_t lru_lock ; s#lruvec lruvec ; unsigned long percpu_drift_mark ; unsigned long compact_cached_free_pfn ; unsigned long compact_cached_migrate_pfn [ 2 ] ; unsigned int compact_considered ; unsigned int compact_defer_shift ; int compact_order_failed ; t#bool compact_blockskip_flush ; t#atomic_t pagecache_reclaim ; s#zone_padding _pad3_ ; t#atomic_long_t vm_stat [ E#NR_VM_ZONE_STAT_ITEMS ] ; void * suse_kabi_padding ; } 
s#zonelist_cache struct zonelist_cache { unsigned short z_to_n [ ( ( 1 << 8 ) * 3 ) ] ; unsigned long fullzones [ ( ( ( ( ( 1 << 8 ) * 3 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long last_full_zap ; } 
s#zoneref struct zoneref { s#zone * zone ; int zone_idx ; } 
s#zonelist struct zonelist { s#zonelist_cache * zlcache_ptr ; s#zoneref _zonerefs [ ( ( 1 << 8 ) * 3 ) + 1 ] ; s#zonelist_cache zlcache ; } 
s#bootmem_data struct bootmem_data { unsigned long node_min_pfn ; unsigned long node_low_pfn ; void * node_bootmem_map ; unsigned long last_end_off ; unsigned long hint_idx ; s#list_head list ; } 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
e#zone_type enum zone_type { ZONE_DMA , ZONE_NORMAL , ZONE_MOVABLE , __MAX_NR_ZONES } 
s#pglist_data struct pglist_data { s#zone node_zones [ 3 ] ; s#zonelist node_zonelists [ 2 ] ; int nr_zones ; s#bootmem_data * bdata ; t#spinlock_t node_size_lock ; unsigned long node_start_pfn ; unsigned long node_present_pages ; unsigned long node_spanned_pages ; int node_id ; t#wait_queue_head_t kswapd_wait ; t#wait_queue_head_t pfmemalloc_wait ; s#task_struct * kswapd ; int kswapd_max_order ; e#zone_type classzone_idx ; t#spinlock_t numabalancing_migrate_lock ; unsigned long numabalancing_migrate_next_window ; unsigned long numabalancing_migrate_nr_pages ; void * suse_kabi_padding ; } 
t#pg_data_t typedef s#pglist_data pg_data_t 
node_data extern t#pg_data_t * node_data [ ] 
__node_distance extern int __node_distance ( int , int ) 
s##proc_dir_entry
of_node_to_nid extern int of_node_to_nid ( s#device_node * ) 

/* arch/powerpc/mm/pgtable_64.o */
ioremap extern void * ioremap ( t#phys_addr_t , unsigned long ) 
ioremap_wc extern void * ioremap_wc ( t#phys_addr_t , unsigned long ) 
ioremap_prot extern void * ioremap_prot ( t#phys_addr_t , unsigned long , unsigned long ) 
__ioremap extern void * __ioremap ( t#phys_addr_t , unsigned long , unsigned long ) 
__ioremap_at extern void * __ioremap_at ( t#phys_addr_t , void * , unsigned long , unsigned long ) 
iounmap extern void iounmap ( volatile void * ) 
__iounmap extern void __iounmap ( volatile void * ) 
__iounmap_at extern void __iounmap_at ( void * , unsigned long ) 

/* arch/powerpc/mm/slice.o */
slice_get_unmapped_area extern unsigned long slice_get_unmapped_area ( unsigned long , unsigned long , unsigned long , unsigned int , int ) 
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##kiocb
s##iovec
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
get_slice_psize extern unsigned int get_slice_psize ( s#mm_struct * , unsigned long ) 

/* arch/powerpc/platforms/powernv/opal.o */
t#notifier_fn_t typedef int ( * notifier_fn_t ) ( s#notifier_block * , unsigned long , void * ) 
s#notifier_block struct notifier_block { t#notifier_fn_t notifier_call ; s#notifier_block * next ; int priority ; } 
opal_notifier_register extern int opal_notifier_register ( s#notifier_block * ) 
opal_notifier_unregister extern int opal_notifier_unregister ( s#notifier_block * ) 
t#__s64 __extension__ typedef __signed__ long long __s64 
t#int64_t typedef t#__s64 int64_t 
opal_invalid_call t#int64_t opal_invalid_call ( void ) 

/* arch/powerpc/platforms/powernv/opal-sensor.o */
opal_get_sensor_data extern int opal_get_sensor_data ( t#u32 , t#u32 * ) 

/* arch/powerpc/platforms/powernv/rng.o */
powernv_get_random_long int powernv_get_random_long ( unsigned long * ) 

/* arch/powerpc/platforms/powernv/setup.o */
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##device_private
s##sock
s##sysfs_dirent
s##kiocb
s##iovec
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##iommu_table
s#pci_host_bridge struct pci_host_bridge { s#device dev ; s#pci_bus * bus ; s#list_head windows ; void ( * release_fn ) ( s#pci_host_bridge * ) ; void * release_data ; } 
s##rtc_time
s##kimage
mach_powernv extern s#machdep_calls mach_powernv 

/* arch/powerpc/platforms/pseries/hvconsole.o */
hvc_get_chars extern int hvc_get_chars ( t#uint32_t , char * , int ) 
hvc_put_chars extern int hvc_put_chars ( t#uint32_t , const char * , int ) 

/* arch/powerpc/platforms/pseries/hvcserver.o */
hvcs_free_partner_info extern int hvcs_free_partner_info ( s#list_head * ) 
hvcs_get_partner_info extern int hvcs_get_partner_info ( t#uint32_t , s#list_head * , unsigned long * ) 
hvcs_register_connection extern int hvcs_register_connection ( t#uint32_t , t#uint32_t , t#uint32_t ) 
hvcs_free_connection extern int hvcs_free_connection ( t#uint32_t ) 

/* arch/powerpc/platforms/pseries/io_event_irq.o */
s#atomic_notifier_head struct atomic_notifier_head { t#spinlock_t lock ; s#notifier_block * head ; } 
pseries_ioei_notifier_list extern s#atomic_notifier_head pseries_ioei_notifier_list 

/* arch/powerpc/platforms/pseries/lpar.o */
plpar_hcall long plpar_hcall ( unsigned long , unsigned long * , ... ) 
plpar_hcall9 long plpar_hcall9 ( unsigned long , unsigned long * , ... ) 
plpar_hcall_norets long plpar_hcall_norets ( unsigned long , ... ) 
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
arch_free_page void arch_free_page ( s#page * , int ) 
s#hvcall_mpp_data struct hvcall_mpp_data { unsigned long entitled_mem ; unsigned long mapped_mem ; unsigned short group_num ; unsigned short pool_num ; unsigned char mem_weight ; unsigned char unallocated_mem_weight ; unsigned long unallocated_entitlement ; unsigned long pool_size ; signed long loan_request ; unsigned long backing_mem ; } 
h_get_mpp int h_get_mpp ( s#hvcall_mpp_data * ) 

/* arch/powerpc/platforms/pseries/pci_dlpar.o */
s##proc_dir_entry
s##hotplug_slot
s##sock
s##sysfs_dirent
s##device_private
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##module
s##subsys_private
s##iommu_group
s##iommu_ops
s##driver_private
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
pcibios_find_pci_bus extern s#pci_bus * pcibios_find_pci_bus ( s#device_node * ) 
init_phb_dynamic extern s#pci_controller * init_phb_dynamic ( s#device_node * ) 
remove_phb_dynamic extern int remove_phb_dynamic ( s#pci_controller * ) 

/* arch/powerpc/platforms/pseries/setup.o */
CMO_PageSize extern unsigned long CMO_PageSize 
pSeries_enable_reloc_on_exc extern long pSeries_enable_reloc_on_exc ( void ) 
pSeries_disable_reloc_on_exc extern long pSeries_disable_reloc_on_exc ( void ) 
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##device_private
s##sock
s##sysfs_dirent
s##kiocb
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##radix_tree_node
s##swap_info_struct
s##slab
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##rtc_time
t#kimage_entry_t typedef unsigned long kimage_entry_t 
s#kexec_segment struct kexec_segment { void * buf ; t#size_t bufsz ; unsigned long mem ; t#size_t memsz ; } 
s#kimage struct kimage { t#kimage_entry_t head ; t#kimage_entry_t * entry ; t#kimage_entry_t * last_entry ; unsigned long destination ; unsigned long start ; s#page * control_code_page ; s#page * swap_page ; unsigned long nr_segments ; s#kexec_segment segment [ 16 ] ; s#list_head control_pages ; s#list_head dest_pages ; s#list_head unuseable_pages ; unsigned long control_page ; unsigned int type : 1 ; unsigned int preserve_context : 1 ; } 
mach_pseries extern s#machdep_calls mach_pseries 

/* arch/powerpc/sysdev/mpic.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##subsys_private
s##iommu_group
s##iommu_ops
mpic_subsys extern s#bus_type mpic_subsys 

/* arch/powerpc/sysdev/scom.o */
t#scom_map_t typedef void * scom_map_t 
s##proc_dir_entry
s#scom_controller struct scom_controller { t#scom_map_t ( * map ) ( s#device_node * , t#u64 , t#u64 ) ; void ( * unmap ) ( t#scom_map_t ) ; int ( * read ) ( t#scom_map_t , t#u64 , t#u64 * ) ; int ( * write ) ( t#scom_map_t , t#u64 , t#u64 ) ; } 
scom_controller extern const s#scom_controller * scom_controller 
scom_find_parent s#device_node * scom_find_parent ( s#device_node * ) 
scom_map_device extern t#scom_map_t scom_map_device ( s#device_node * , int ) 

/* arch/powerpc/sysdev/xics/icp-native.o */
xics_wake_cpu extern void xics_wake_cpu ( int ) 

/* arch/powerpc/xmon/xmon.o */
xmon extern int xmon ( s#pt_regs * ) 

/* block/blk-cgroup.o */
s##posix_acl
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
e#writeback_sync_modes enum writeback_sync_modes { WB_SYNC_NONE , WB_SYNC_ALL , } 
s#writeback_control struct writeback_control { long nr_to_write ; long pages_skipped ; t#loff_t range_start ; t#loff_t range_end ; e#writeback_sync_modes sync_mode ; unsigned for_kupdate : 1 ; unsigned for_background : 1 ; unsigned tagged_writepages : 1 ; unsigned for_reclaim : 1 ; unsigned range_cyclic : 1 ; unsigned for_sync : 1 ; } 
s##kiocb
s##iovec
s##kstatfs
s##user_namespace
s##export_operations
t#congested_fn typedef int ( congested_fn ) ( void * , int ) 
E#NR_BDI_STAT_ITEMS 4 
s#fprop_local_percpu struct fprop_local_percpu { s#percpu_counter events ; unsigned int period ; t#raw_spinlock_t lock ; } 
s##tvec_base
s##workqueue_struct
s#bdi_writeback struct bdi_writeback { s#backing_dev_info * bdi ; unsigned int nr ; unsigned long last_old_flush ; s#delayed_work dwork ; s#list_head b_dirty ; s#list_head b_io ; s#list_head b_more_io ; t#spinlock_t list_lock ; } 
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s#backing_dev_info struct backing_dev_info { s#list_head bdi_list ; unsigned long ra_pages ; unsigned long state ; unsigned int capabilities ; t#congested_fn * congested_fn ; void * congested_data ; char * name ; s#percpu_counter bdi_stat [ E#NR_BDI_STAT_ITEMS ] ; unsigned long bw_time_stamp ; unsigned long dirtied_stamp ; unsigned long written_stamp ; unsigned long write_bandwidth ; unsigned long avg_write_bandwidth ; unsigned long dirty_ratelimit ; unsigned long balanced_dirty_ratelimit ; s#fprop_local_percpu completions ; int dirty_exceeded ; unsigned int min_ratio ; unsigned int max_ratio , max_prop_frac ; s#bdi_writeback wb ; t#spinlock_t wb_lock ; s#list_head work_list ; s#device * dev ; s#timer_list laptop_mode_wb_timer ; s#dentry * debug_dir ; s#dentry * debug_stats ; } 
s##mtd_info
s#partition_meta_info struct partition_meta_info { char uuid [ 37 ] ; t#u8 volname [ 64 ] ; } 
s#disk_stats struct disk_stats { unsigned long sectors [ 2 ] ; unsigned long ios [ 2 ] ; unsigned long merges [ 2 ] ; unsigned long ticks [ 2 ] ; unsigned long io_ticks ; unsigned long time_in_queue ; } 
s#hd_struct struct hd_struct { t#sector_t start_sect ; t#sector_t nr_sects ; t#seqcount_t nr_sects_seq ; t#sector_t alignment_offset ; unsigned int discard_alignment ; s#device __dev ; s#kobject * holder_dir ; int policy , partno ; s#partition_meta_info * info ; unsigned long stamp ; t#atomic_t in_flight [ 2 ] ; s#disk_stats * dkstats ; t#atomic_t ref ; s#callback_head callback_head ; } 
s#disk_part_tbl struct disk_part_tbl { s#callback_head callback_head ; int len ; s#hd_struct * last_lookup ; s#hd_struct * part [ ] ; } 
s##hd_geometry
s#block_device_operations struct block_device_operations { int ( * open ) ( s#block_device * , t#fmode_t ) ; void ( * release ) ( s#gendisk * , t#fmode_t ) ; int ( * ioctl ) ( s#block_device * , t#fmode_t , unsigned , unsigned long ) ; int ( * compat_ioctl ) ( s#block_device * , t#fmode_t , unsigned , unsigned long ) ; long ( * direct_access ) ( s#block_device * , t#sector_t , void * * , unsigned long * , long ) ; unsigned int ( * check_events ) ( s#gendisk * , unsigned int ) ; int ( * media_changed ) ( s#gendisk * ) ; void ( * unlock_native_capacity ) ( s#gendisk * ) ; int ( * revalidate_disk ) ( s#gendisk * ) ; int ( * getgeo ) ( s#block_device * , s#hd_geometry * ) ; void ( * swap_slot_free_notify ) ( s#block_device * , unsigned long ) ; s#module * owner ; } 
t#smp_call_func_t typedef void ( * smp_call_func_t ) ( void * ) 
s#call_single_data struct call_single_data { s#list_head list ; t#smp_call_func_t func ; void * info ; t#u16 flags ; } 
s##blk_mq_ctx
e#rq_cmd_type_bits enum rq_cmd_type_bits { REQ_TYPE_FS = 1 , REQ_TYPE_BLOCK_PC , REQ_TYPE_SENSE , REQ_TYPE_PM_SUSPEND , REQ_TYPE_PM_RESUME , REQ_TYPE_PM_SHUTDOWN , REQ_TYPE_SPECIAL , REQ_TYPE_ATA_TASKFILE , REQ_TYPE_ATA_PC , } 
t#bio_end_io_t typedef void ( bio_end_io_t ) ( s#bio * , int ) 
s##kmem_cache_node
s##array_cache
s#io_cq struct io_cq { s#request_queue * q ; s#io_context * ioc ; union { s#list_head q_node ; s#kmem_cache * __rcu_icq_cache ; } ; union { s#hlist_node ioc_node ; s#callback_head __rcu_head ; } ; unsigned int flags ; } 
s#io_context struct io_context { t#atomic_long_t refcount ; t#atomic_t active_ref ; t#atomic_t nr_tasks ; t#spinlock_t lock ; unsigned short ioprio ; int nr_batch_requests ; unsigned long last_waited ; s#radix_tree_root icq_tree ; s#io_cq * icq_hint ; s#hlist_head icq_list ; s#work_struct release_work ; } 
s#bio_vec struct bio_vec { s#page * bv_page ; unsigned int bv_len ; unsigned int bv_offset ; } 
s#bio_integrity_payload struct bio_integrity_payload { s#bio * bip_bio ; t#sector_t bip_sector ; void * bip_buf ; t#bio_end_io_t * bip_end_io ; unsigned int bip_size ; unsigned short bip_slab ; unsigned short bip_vcnt ; unsigned short bip_idx ; unsigned bip_owns_buf : 1 ; s#work_struct bip_work ; s#bio_vec * bip_vec ; s#bio_vec bip_inline_vecs [ 0 ] ; } 
t#mempool_alloc_t typedef void * ( mempool_alloc_t ) ( t#gfp_t , void * ) 
t#mempool_free_t typedef void ( mempool_free_t ) ( void * , void * ) 
s#mempool_s struct mempool_s { t#spinlock_t lock ; int min_nr ; int curr_nr ; void * * elements ; void * pool_data ; t#mempool_alloc_t * alloc ; t#mempool_free_t * free ; t#wait_queue_head_t wait ; } 
t#mempool_t typedef s#mempool_s mempool_t 
s#bio_list struct bio_list { s#bio * head ; s#bio * tail ; } 
s#bio_set struct bio_set { s#kmem_cache * bio_slab ; unsigned int front_pad ; t#mempool_t * bio_pool ; t#mempool_t * bvec_pool ; t#mempool_t * bio_integrity_pool ; t#mempool_t * bvec_integrity_pool ; t#spinlock_t rescue_lock ; s#bio_list rescue_list ; s#work_struct rescue_work ; s#workqueue_struct * rescue_workqueue ; } 
s#bio struct bio { t#sector_t bi_sector ; s#bio * bi_next ; s#block_device * bi_bdev ; unsigned long bi_flags ; unsigned long bi_rw ; unsigned short bi_vcnt ; unsigned short bi_idx ; unsigned int bi_phys_segments ; unsigned int bi_size ; unsigned int bi_seg_front_size ; unsigned int bi_seg_back_size ; t#bio_end_io_t * bi_end_io ; void * bi_private ; s#io_context * bi_ioc ; s#cgroup_subsys_state * bi_css ; s#bio_integrity_payload * bi_integrity ; unsigned int bi_max_vecs ; t#atomic_t bi_cnt ; s#bio_vec * bi_io_vec ; s#bio_set * bi_pool ; s#bio_vec bi_inline_vecs [ 0 ] ; } 
t#rq_end_io_fn typedef void ( rq_end_io_fn ) ( s#request * , int ) 
s#blkg_policy_data struct blkg_policy_data { s#blkcg_gq * blkg ; int plid ; s#list_head alloc_node ; } 
s#blkcg_gq struct blkcg_gq { s#request_queue * q ; s#list_head q_node ; s#hlist_node blkcg_node ; s#blkcg * blkcg ; s#blkcg_gq * parent ; s#request_list rl ; t#atomic_t refcnt ; t#bool online ; s#blkg_policy_data * pd [ 2 ] ; s#callback_head callback_head ; } 
s#request_list struct request_list { s#request_queue * q ; s#blkcg_gq * blkg ; int count [ 2 ] ; int starved [ 2 ] ; t#mempool_t * rq_pool ; t#wait_queue_head_t wait [ 2 ] ; unsigned int flags ; } 
s#request struct request { union { s#list_head queuelist ; s#llist_node ll_list ; } ; union { s#call_single_data csd ; s#work_struct mq_flush_work ; } ; s#request_queue * q ; s#blk_mq_ctx * mq_ctx ; t#u64 cmd_flags ; e#rq_cmd_type_bits cmd_type ; unsigned long atomic_flags ; int cpu ; unsigned int __data_len ; t#sector_t __sector ; s#bio * bio ; s#bio * biotail ; s#hlist_node hash ; union { s#rb_node rb_node ; void * completion_data ; } ; union { struct { s#io_cq * icq ; void * priv [ 2 ] ; } elv ; struct { unsigned int seq ; s#list_head list ; t#rq_end_io_fn * saved_end_io ; } flush ; } ; s#gendisk * rq_disk ; s#hd_struct * part ; unsigned long start_time ; s#request_list * rl ; unsigned long long start_time_ns ; unsigned long long io_start_time_ns ; unsigned short nr_phys_segments ; unsigned short nr_integrity_segments ; unsigned short ioprio ; void * special ; char * buffer ; int tag ; int errors ; unsigned char __cmd [ 16 ] ; unsigned char * cmd ; unsigned short cmd_len ; unsigned int extra_len ; unsigned int sense_len ; unsigned int resid_len ; void * sense ; unsigned long deadline ; s#list_head timeout_list ; unsigned int timeout ; int retries ; t#rq_end_io_fn * end_io ; void * end_io_data ; s#request * next_rq ; } 
t#elevator_merge_fn typedef int ( elevator_merge_fn ) ( s#request_queue * , s#request * * , s#bio * ) 
t#elevator_merged_fn typedef void ( elevator_merged_fn ) ( s#request_queue * , s#request * , int ) 
t#elevator_merge_req_fn typedef void ( elevator_merge_req_fn ) ( s#request_queue * , s#request * , s#request * ) 
t#elevator_allow_merge_fn typedef int ( elevator_allow_merge_fn ) ( s#request_queue * , s#request * , s#bio * ) 
t#elevator_bio_merged_fn typedef void ( elevator_bio_merged_fn ) ( s#request_queue * , s#request * , s#bio * ) 
t#elevator_dispatch_fn typedef int ( elevator_dispatch_fn ) ( s#request_queue * , int ) 
t#elevator_add_req_fn typedef void ( elevator_add_req_fn ) ( s#request_queue * , s#request * ) 
t#elevator_activate_req_fn typedef void ( elevator_activate_req_fn ) ( s#request_queue * , s#request * ) 
t#elevator_deactivate_req_fn typedef void ( elevator_deactivate_req_fn ) ( s#request_queue * , s#request * ) 
t#elevator_completed_req_fn typedef void ( elevator_completed_req_fn ) ( s#request_queue * , s#request * ) 
t#elevator_request_list_fn typedef s#request * ( elevator_request_list_fn ) ( s#request_queue * , s#request * ) 
t#elevator_init_icq_fn typedef void ( elevator_init_icq_fn ) ( s#io_cq * ) 
t#elevator_exit_icq_fn typedef void ( elevator_exit_icq_fn ) ( s#io_cq * ) 
t#elevator_set_req_fn typedef int ( elevator_set_req_fn ) ( s#request_queue * , s#request * , s#bio * , t#gfp_t ) 
t#elevator_put_req_fn typedef void ( elevator_put_req_fn ) ( s#request * ) 
t#elevator_may_queue_fn typedef int ( elevator_may_queue_fn ) ( s#request_queue * , int ) 
t#elevator_init_fn typedef int ( elevator_init_fn ) ( s#request_queue * , s#elevator_type * ) 
t#elevator_exit_fn typedef void ( elevator_exit_fn ) ( s#elevator_queue * ) 
s#elevator_ops struct elevator_ops { t#elevator_merge_fn * elevator_merge_fn ; t#elevator_merged_fn * elevator_merged_fn ; t#elevator_merge_req_fn * elevator_merge_req_fn ; t#elevator_allow_merge_fn * elevator_allow_merge_fn ; t#elevator_bio_merged_fn * elevator_bio_merged_fn ; t#elevator_dispatch_fn * elevator_dispatch_fn ; t#elevator_add_req_fn * elevator_add_req_fn ; t#elevator_activate_req_fn * elevator_activate_req_fn ; t#elevator_deactivate_req_fn * elevator_deactivate_req_fn ; t#elevator_completed_req_fn * elevator_completed_req_fn ; t#elevator_request_list_fn * elevator_former_req_fn ; t#elevator_request_list_fn * elevator_latter_req_fn ; t#elevator_init_icq_fn * elevator_init_icq_fn ; t#elevator_exit_icq_fn * elevator_exit_icq_fn ; t#elevator_set_req_fn * elevator_set_req_fn ; t#elevator_put_req_fn * elevator_put_req_fn ; t#elevator_may_queue_fn * elevator_may_queue_fn ; t#elevator_init_fn * elevator_init_fn ; t#elevator_exit_fn * elevator_exit_fn ; } 
s#elv_fs_entry struct elv_fs_entry { s#attribute attr ; t#ssize_t ( * show ) ( s#elevator_queue * , char * ) ; t#ssize_t ( * store ) ( s#elevator_queue * , const char * , t#size_t ) ; } 
s#elevator_type struct elevator_type { s#kmem_cache * icq_cache ; s#elevator_ops ops ; t#size_t icq_size ; t#size_t icq_align ; s#elv_fs_entry * elevator_attrs ; char elevator_name [ ( 16 ) ] ; s#module * elevator_owner ; char icq_cache_name [ ( 16 ) + 5 ] ; s#list_head list ; } 
s#elevator_queue struct elevator_queue { s#elevator_type * type ; void * elevator_data ; s#kobject kobj ; s#mutex sysfs_lock ; unsigned int registered : 1 ; s#hlist_head hash [ 1 << ( 6 ) ] ; } 
t#request_fn_proc typedef void ( request_fn_proc ) ( s#request_queue * ) 
t#make_request_fn typedef void ( make_request_fn ) ( s#request_queue * , s#bio * ) 
t#prep_rq_fn typedef int ( prep_rq_fn ) ( s#request_queue * , s#request * ) 
t#unprep_rq_fn typedef void ( unprep_rq_fn ) ( s#request_queue * , s#request * ) 
s#bvec_merge_data struct bvec_merge_data { s#block_device * bi_bdev ; t#sector_t bi_sector ; unsigned bi_size ; unsigned long bi_rw ; } 
t#merge_bvec_fn typedef int ( merge_bvec_fn ) ( s#request_queue * , s#bvec_merge_data * , s#bio_vec * ) 
t#softirq_done_fn typedef void ( softirq_done_fn ) ( s#request * ) 
e#blk_eh_timer_return enum blk_eh_timer_return { BLK_EH_NOT_HANDLED , BLK_EH_HANDLED , BLK_EH_RESET_TIMER , } 
t#rq_timed_out_fn typedef e#blk_eh_timer_return ( rq_timed_out_fn ) ( s#request * ) 
t#dma_drain_needed_fn typedef int ( dma_drain_needed_fn ) ( s#request * ) 
t#lld_busy_fn typedef int ( lld_busy_fn ) ( s#request_queue * ) 
s##blk_mq_ops
s##blk_mq_hw_ctx
s#blk_queue_tag struct blk_queue_tag { s#request * * tag_index ; unsigned long * tag_map ; int busy ; int max_depth ; int real_max_depth ; t#atomic_t refcnt ; } 
s#queue_limits struct queue_limits { unsigned long bounce_pfn ; unsigned long seg_boundary_mask ; unsigned int max_hw_sectors ; unsigned int max_sectors ; unsigned int max_segment_size ; unsigned int physical_block_size ; unsigned int alignment_offset ; unsigned int io_min ; unsigned int io_opt ; unsigned int max_discard_sectors ; unsigned int max_write_same_sectors ; unsigned int discard_granularity ; unsigned int discard_alignment ; unsigned short logical_block_size ; unsigned short max_segments ; unsigned short max_integrity_segments ; unsigned char misaligned ; unsigned char discard_misaligned ; unsigned char cluster ; unsigned char discard_zeroes_data ; } 
s##blk_trace
s##bsg_job
t#bsg_job_fn typedef int ( bsg_job_fn ) ( s#bsg_job * ) 
s#bsg_class_device struct bsg_class_device { s#device * class_dev ; s#device * parent ; int minor ; s#request_queue * queue ; s#kref ref ; void ( * release ) ( s#device * ) ; } 
s##throtl_data
s#request_queue struct request_queue { s#list_head queue_head ; s#request * last_merge ; s#elevator_queue * elevator ; int nr_rqs [ 2 ] ; int nr_rqs_elvpriv ; s#request_list root_rl ; t#request_fn_proc * request_fn ; t#make_request_fn * make_request_fn ; t#prep_rq_fn * prep_rq_fn ; t#unprep_rq_fn * unprep_rq_fn ; t#merge_bvec_fn * merge_bvec_fn ; t#softirq_done_fn * softirq_done_fn ; t#rq_timed_out_fn * rq_timed_out_fn ; t#dma_drain_needed_fn * dma_drain_needed ; t#lld_busy_fn * lld_busy_fn ; s#blk_mq_ops * mq_ops ; unsigned int * mq_map ; s#blk_mq_ctx * queue_ctx ; unsigned int nr_queues ; s#blk_mq_hw_ctx * * queue_hw_ctx ; unsigned int nr_hw_queues ; t#sector_t end_sector ; s#request * boundary_rq ; s#delayed_work delay_work ; s#backing_dev_info backing_dev_info ; void * queuedata ; unsigned long queue_flags ; int id ; t#gfp_t bounce_gfp ; t#spinlock_t __queue_lock ; t#spinlock_t * queue_lock ; s#kobject kobj ; s#kobject mq_kobj ; s#device * dev ; int rpm_status ; unsigned int nr_pending ; unsigned long nr_requests ; unsigned int nr_congestion_on ; unsigned int nr_congestion_off ; unsigned int nr_batching ; unsigned int dma_drain_size ; void * dma_drain_buffer ; unsigned int dma_pad_mask ; unsigned int dma_alignment ; s#blk_queue_tag * queue_tags ; s#list_head tag_busy_list ; unsigned int nr_sorted ; unsigned int in_flight [ 2 ] ; unsigned int request_fn_active ; unsigned int rq_timeout ; s#timer_list timeout ; s#list_head timeout_list ; s#list_head icq_list ; unsigned long blkcg_pols [ ( ( ( 2 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#blkcg_gq * root_blkg ; s#list_head blkg_list ; s#queue_limits limits ; unsigned int sg_timeout ; unsigned int sg_reserved_size ; int node ; s#blk_trace * blk_trace ; unsigned int flush_flags ; unsigned int flush_not_queueable : 1 ; unsigned int flush_queue_delayed : 1 ; unsigned int flush_pending_idx : 1 ; unsigned int flush_running_idx : 1 ; unsigned long flush_pending_since ; s#list_head flush_queue [ 2 ] ; s#list_head flush_data_in_flight ; s#request * flush_rq ; t#spinlock_t mq_flush_lock ; s#mutex sysfs_lock ; int bypass_depth ; t#bsg_job_fn * bsg_job_fn ; int bsg_job_size ; s#bsg_class_device bsg_dev ; s#throtl_data * td ; s#callback_head callback_head ; t#wait_queue_head_t mq_freeze_wq ; s#percpu_counter mq_usage_counter ; s#list_head all_q_node ; } 
s##timer_rand_state
s##disk_events
s#blk_integrity_exchg struct blk_integrity_exchg { void * prot_buf ; void * data_buf ; t#sector_t sector ; unsigned int data_size ; unsigned short sector_size ; const char * disk_name ; } 
t#integrity_gen_fn typedef void ( integrity_gen_fn ) ( s#blk_integrity_exchg * ) 
t#integrity_vrfy_fn typedef int ( integrity_vrfy_fn ) ( s#blk_integrity_exchg * ) 
t#integrity_set_tag_fn typedef void ( integrity_set_tag_fn ) ( void * , void * , unsigned int ) 
t#integrity_get_tag_fn typedef void ( integrity_get_tag_fn ) ( void * , void * , unsigned int ) 
s#blk_integrity struct blk_integrity { t#integrity_gen_fn * generate_fn ; t#integrity_vrfy_fn * verify_fn ; t#integrity_set_tag_fn * set_tag_fn ; t#integrity_get_tag_fn * get_tag_fn ; unsigned short flags ; unsigned short tuple_size ; unsigned short sector_size ; unsigned short tag_size ; const char * name ; s#kobject kobj ; } 
s#gendisk struct gendisk { int major ; int first_minor ; int minors ; char disk_name [ 32 ] ; char * ( * devnode ) ( s#gendisk * , t#umode_t * ) ; unsigned int events ; unsigned int async_events ; s#disk_part_tbl * part_tbl ; s#hd_struct part0 ; const s#block_device_operations * fops ; s#request_queue * queue ; void * private_data ; int flags ; s#device * driverfs_dev ; s#kobject * slave_dir ; s#timer_rand_state * random ; t#atomic_t sync_io ; s#disk_events * ev ; s#blk_integrity * integrity ; int node_id ; } 
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s#blk_plug struct blk_plug { unsigned long magic ; s#list_head list ; s#list_head mq_list ; s#list_head cb_list ; } 
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s#blkcg struct blkcg { s#cgroup_subsys_state css ; t#spinlock_t lock ; s#radix_tree_root blkg_tree ; s#blkcg_gq * blkg_hint ; s#hlist_head blkg_list ; t#uint64_t id ; unsigned int cfq_weight ; unsigned int cfq_leaf_weight ; } 
blkcg_root extern s#blkcg blkcg_root 
blkg_lookup s#blkcg_gq * blkg_lookup ( s#blkcg * , s#request_queue * ) 
blkg_lookup_create s#blkcg_gq * blkg_lookup_create ( s#blkcg * , s#request_queue * ) 
__blkg_release_rcu void __blkg_release_rcu ( s#callback_head * ) 
t#blkcg_pol_init_pd_fn typedef void ( blkcg_pol_init_pd_fn ) ( s#blkcg_gq * ) 
t#blkcg_pol_online_pd_fn typedef void ( blkcg_pol_online_pd_fn ) ( s#blkcg_gq * ) 
t#blkcg_pol_offline_pd_fn typedef void ( blkcg_pol_offline_pd_fn ) ( s#blkcg_gq * ) 
t#blkcg_pol_exit_pd_fn typedef void ( blkcg_pol_exit_pd_fn ) ( s#blkcg_gq * ) 
t#blkcg_pol_reset_pd_stats_fn typedef void ( blkcg_pol_reset_pd_stats_fn ) ( s#blkcg_gq * ) 
s#blkcg_policy struct blkcg_policy { int plid ; t#size_t pd_size ; s#cftype * cftypes ; t#blkcg_pol_init_pd_fn * pd_init_fn ; t#blkcg_pol_online_pd_fn * pd_online_fn ; t#blkcg_pol_offline_pd_fn * pd_offline_fn ; t#blkcg_pol_exit_pd_fn * pd_exit_fn ; t#blkcg_pol_reset_pd_stats_fn * pd_reset_stats_fn ; } 
blkcg_print_blkgs void blkcg_print_blkgs ( s#seq_file * , s#blkcg * , t#u64 ( * ) ( s#seq_file * , s#blkg_policy_data * , int ) , const s#blkcg_policy * , int , t#bool ) 
__blkg_prfill_u64 t#u64 __blkg_prfill_u64 ( s#seq_file * , s#blkg_policy_data * , t#u64 ) 
E#BLKG_RWSTAT_NR 4 
s#blkg_rwstat struct blkg_rwstat { s#u64_stats_sync syncp ; t#uint64_t cnt [ E#BLKG_RWSTAT_NR ] ; } 
__blkg_prfill_rwstat t#u64 __blkg_prfill_rwstat ( s#seq_file * , s#blkg_policy_data * , const s#blkg_rwstat * ) 
blkg_prfill_stat t#u64 blkg_prfill_stat ( s#seq_file * , s#blkg_policy_data * , int ) 
blkg_prfill_rwstat t#u64 blkg_prfill_rwstat ( s#seq_file * , s#blkg_policy_data * , int ) 
blkg_stat_recursive_sum t#u64 blkg_stat_recursive_sum ( s#blkg_policy_data * , int ) 
blkg_rwstat_recursive_sum s#blkg_rwstat blkg_rwstat_recursive_sum ( s#blkg_policy_data * , int ) 
s#blkg_conf_ctx struct blkg_conf_ctx { s#gendisk * disk ; s#blkcg_gq * blkg ; t#u64 v ; } 
blkg_conf_prep int blkg_conf_prep ( s#blkcg * , const s#blkcg_policy * , const char * , s#blkg_conf_ctx * ) 
blkg_conf_finish void blkg_conf_finish ( s#blkg_conf_ctx * ) 
blkio_subsys extern s#cgroup_subsys blkio_subsys 
blkcg_activate_policy int blkcg_activate_policy ( s#request_queue * , const s#blkcg_policy * ) 
blkcg_deactivate_policy void blkcg_deactivate_policy ( s#request_queue * , const s#blkcg_policy * ) 
blkcg_policy_register int blkcg_policy_register ( s#blkcg_policy * ) 
blkcg_policy_unregister void blkcg_policy_unregister ( s#blkcg_policy * ) 

/* block/blk-core.o */
s##static_key_mod
__tracepoint_block_bio_remap extern s#tracepoint __tracepoint_block_bio_remap 
__tracepoint_block_rq_remap extern s#tracepoint __tracepoint_block_rq_remap 
__tracepoint_block_bio_complete extern s#tracepoint __tracepoint_block_bio_complete 
__tracepoint_block_unplug extern s#tracepoint __tracepoint_block_unplug 
s##tvec_base
s##workqueue_struct
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##user_namespace
s##export_operations
s##mtd_info
s##hd_geometry
s#blk_mq_ctx struct blk_mq_ctx { struct { t#spinlock_t lock ; s#list_head rq_list ; } __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; unsigned int cpu ; unsigned int index_hw ; unsigned int ipi_redirect ; unsigned long rq_dispatched [ 2 ] ; unsigned long rq_merged ; unsigned long __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) rq_completed [ 2 ] ; s#request_queue * queue ; s#kobject kobj ; } 
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blk_mq_tags
s#blk_mq_cpu_notifier struct blk_mq_cpu_notifier { s#list_head list ; void * data ; void ( * notify ) ( void * , unsigned long , unsigned int ) ; } 
s#blk_mq_hw_ctx struct blk_mq_hw_ctx { struct { t#spinlock_t lock ; s#list_head dispatch ; } __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; unsigned long state ; s#delayed_work delayed_work ; unsigned long flags ; s#request_queue * queue ; unsigned int queue_num ; void * driver_data ; unsigned int nr_ctx ; s#blk_mq_ctx * * ctxs ; unsigned int nr_ctx_map ; unsigned long * ctx_map ; s#request * * rqs ; s#list_head page_list ; s#blk_mq_tags * tags ; unsigned long queued ; unsigned long run ; unsigned long dispatched [ 10 ] ; unsigned int queue_depth ; unsigned int numa_node ; unsigned int cmd_size ; s#blk_mq_cpu_notifier cpu_notifier ; s#kobject kobj ; } 
t#queue_rq_fn typedef int ( queue_rq_fn ) ( s#blk_mq_hw_ctx * , s#request * ) 
t#map_queue_fn typedef s#blk_mq_hw_ctx * ( map_queue_fn ) ( s#request_queue * , const int ) 
s#blk_mq_reg struct blk_mq_reg { s#blk_mq_ops * ops ; unsigned int nr_hw_queues ; unsigned int queue_depth ; unsigned int reserved_tags ; unsigned int cmd_size ; int numa_node ; unsigned int timeout ; unsigned int flags ; } 
t#alloc_hctx_fn typedef s#blk_mq_hw_ctx * ( alloc_hctx_fn ) ( s#blk_mq_reg * , unsigned int ) 
t#free_hctx_fn typedef void ( free_hctx_fn ) ( s#blk_mq_hw_ctx * , unsigned int ) 
t#init_hctx_fn typedef int ( init_hctx_fn ) ( s#blk_mq_hw_ctx * , void * , unsigned int ) 
t#exit_hctx_fn typedef void ( exit_hctx_fn ) ( s#blk_mq_hw_ctx * , unsigned int ) 
s#blk_mq_ops struct blk_mq_ops { t#queue_rq_fn * queue_rq ; t#map_queue_fn * map_queue ; t#rq_timed_out_fn * timeout ; t#softirq_done_fn * complete ; t#alloc_hctx_fn * alloc_hctx ; t#free_hctx_fn * free_hctx ; t#init_hctx_fn * init_hctx ; t#exit_hctx_fn * exit_hctx ; } 
s#rchan_buf struct rchan_buf { void * start ; void * data ; t#size_t offset ; t#size_t subbufs_produced ; t#size_t subbufs_consumed ; s#rchan * chan ; t#wait_queue_head_t read_wait ; s#timer_list timer ; s#dentry * dentry ; s#kref kref ; s#page * * page_array ; unsigned int page_count ; unsigned int finalized ; t#size_t * padding ; t#size_t prev_padding ; t#size_t bytes_consumed ; t#size_t early_bytes ; unsigned int cpu ; } 
s#rchan_callbacks struct rchan_callbacks { int ( * subbuf_start ) ( s#rchan_buf * , void * , void * , t#size_t ) ; void ( * buf_mapped ) ( s#rchan_buf * , s#file * ) ; void ( * buf_unmapped ) ( s#rchan_buf * , s#file * ) ; s#dentry * ( * create_buf_file ) ( const char * , s#dentry * , t#umode_t , s#rchan_buf * , int * ) ; int ( * remove_buf_file ) ( s#dentry * ) ; } 
s#rchan struct rchan { t#u32 version ; t#size_t subbuf_size ; t#size_t n_subbufs ; t#size_t alloc_size ; s#rchan_callbacks * cb ; s#kref kref ; void * private_data ; t#size_t last_toobig ; s#rchan_buf * buf [ 2048 ] ; int is_global ; s#list_head list ; s#dentry * parent ; int has_base_filename ; char base_filename [ 255 ] ; } 
s#blk_trace struct blk_trace { int trace_state ; s#rchan * rchan ; unsigned long * sequence ; unsigned char * msg_data ; t#u16 act_mask ; t#u64 start_lba ; t#u64 end_lba ; t#u32 pid ; t#u32 dev ; s#dentry * dir ; s#dentry * dropped_file ; s#dentry * msg_file ; s#list_head running_list ; t#atomic_t dropped ; } 
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##sem_undo_list
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
blk_get_backing_dev_info extern s#backing_dev_info * blk_get_backing_dev_info ( s#block_device * ) 
blk_rq_init extern void blk_rq_init ( s#request_queue * , s#request * ) 
blk_dump_rq_flags extern void blk_dump_rq_flags ( s#request * , char * ) 
blk_delay_queue extern void blk_delay_queue ( s#request_queue * , unsigned long ) 
blk_start_queue extern void blk_start_queue ( s#request_queue * ) 
blk_stop_queue extern void blk_stop_queue ( s#request_queue * ) 
blk_sync_queue extern void blk_sync_queue ( s#request_queue * ) 
__blk_run_queue extern void __blk_run_queue ( s#request_queue * ) 
blk_run_queue_async extern void blk_run_queue_async ( s#request_queue * ) 
blk_run_queue extern void blk_run_queue ( s#request_queue * ) 
blk_put_queue extern void blk_put_queue ( s#request_queue * ) 
blk_queue_bypass_start void blk_queue_bypass_start ( s#request_queue * ) 
blk_queue_bypass_end void blk_queue_bypass_end ( s#request_queue * ) 
blk_cleanup_queue extern void blk_cleanup_queue ( s#request_queue * ) 
blk_alloc_queue s#request_queue * blk_alloc_queue ( t#gfp_t ) 
blk_alloc_queue_node s#request_queue * blk_alloc_queue_node ( t#gfp_t , int ) 
blk_init_queue extern s#request_queue * blk_init_queue ( t#request_fn_proc * , t#spinlock_t * ) 
blk_init_queue_node extern s#request_queue * blk_init_queue_node ( t#request_fn_proc * , t#spinlock_t * , int ) 
blk_init_allocated_queue extern s#request_queue * blk_init_allocated_queue ( s#request_queue * , t#request_fn_proc * , t#spinlock_t * ) 
blk_get_queue t#bool blk_get_queue ( s#request_queue * ) 
blk_get_request extern s#request * blk_get_request ( s#request_queue * , int , t#gfp_t ) 
blk_make_request extern s#request * blk_make_request ( s#request_queue * , s#bio * , t#gfp_t ) 
blk_requeue_request extern void blk_requeue_request ( s#request_queue * , s#request * ) 
part_round_stats extern void part_round_stats ( int , s#hd_struct * ) 
__blk_put_request extern void __blk_put_request ( s#request_queue * , s#request * ) 
blk_put_request extern void blk_put_request ( s#request * ) 
blk_add_request_payload extern void blk_add_request_payload ( s#request * , s#page * , unsigned int ) 
blk_queue_bio extern void blk_queue_bio ( s#request_queue * , s#bio * ) 
generic_make_request extern void generic_make_request ( s#bio * ) 
submit_bio extern void submit_bio ( int , s#bio * ) 
blk_rq_check_limits extern int blk_rq_check_limits ( s#request_queue * , s#request * ) 
blk_insert_cloned_request extern int blk_insert_cloned_request ( s#request_queue * , s#request * ) 
blk_rq_err_bytes extern unsigned int blk_rq_err_bytes ( const s#request * ) 
blk_peek_request extern s#request * blk_peek_request ( s#request_queue * ) 
blk_start_request extern void blk_start_request ( s#request * ) 
blk_fetch_request extern s#request * blk_fetch_request ( s#request_queue * ) 
blk_update_request extern t#bool blk_update_request ( s#request * , int , unsigned int ) 
blk_unprep_request extern void blk_unprep_request ( s#request * ) 
blk_end_request extern t#bool blk_end_request ( s#request * , int , unsigned int ) 
blk_end_request_all extern void blk_end_request_all ( s#request * , int ) 
blk_end_request_cur extern t#bool blk_end_request_cur ( s#request * , int ) 
blk_end_request_err extern t#bool blk_end_request_err ( s#request * , int ) 
__blk_end_request extern t#bool __blk_end_request ( s#request * , int , unsigned int ) 
__blk_end_request_all extern void __blk_end_request_all ( s#request * , int ) 
__blk_end_request_cur extern t#bool __blk_end_request_cur ( s#request * , int ) 
__blk_end_request_err extern t#bool __blk_end_request_err ( s#request * , int ) 
rq_flush_dcache_pages extern void rq_flush_dcache_pages ( s#request * ) 
blk_lld_busy extern int blk_lld_busy ( s#request_queue * ) 
blk_rq_unprep_clone extern void blk_rq_unprep_clone ( s#request * ) 
blk_rq_prep_clone extern int blk_rq_prep_clone ( s#request * , s#request * , s#bio_set * , t#gfp_t , int ( * ) ( s#bio * , s#bio * , void * ) , void * ) 
kblockd_schedule_work int kblockd_schedule_work ( s#request_queue * , s#work_struct * ) 
kblockd_schedule_delayed_work int kblockd_schedule_delayed_work ( s#request_queue * , s#delayed_work * , unsigned long ) 
blk_start_plug extern void blk_start_plug ( s#blk_plug * ) 
t#blk_plug_cb_fn typedef void ( * blk_plug_cb_fn ) ( s#blk_plug_cb * , t#bool ) 
s#blk_plug_cb struct blk_plug_cb { s#list_head list ; t#blk_plug_cb_fn callback ; void * data ; } 
blk_check_plugged extern s#blk_plug_cb * blk_check_plugged ( t#blk_plug_cb_fn , void * , int ) 
blk_finish_plug extern void blk_finish_plug ( s#blk_plug * ) 
blk_pm_runtime_init extern void blk_pm_runtime_init ( s#request_queue * , s#device * ) 
blk_pre_runtime_suspend extern int blk_pre_runtime_suspend ( s#request_queue * ) 
blk_post_runtime_suspend extern void blk_post_runtime_suspend ( s#request_queue * , int ) 
blk_pre_runtime_resume extern void blk_pre_runtime_resume ( s#request_queue * ) 
blk_post_runtime_resume extern void blk_post_runtime_resume ( s#request_queue * , int ) 

/* block/blk-exec.o */
s##blk_mq_ctx
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_tags
s##blk_trace
s##bsg_job
s##throtl_data
blk_execute_rq_nowait extern void blk_execute_rq_nowait ( s#request_queue * , s#gendisk * , s#request * , int , t#rq_end_io_fn * ) 
blk_execute_rq extern int blk_execute_rq ( s#request_queue * , s#gendisk * , s#request * , int ) 

/* block/blk-flush.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_tags
s##blk_trace
s##bsg_job
s##throtl_data
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
blkdev_issue_flush extern int blkdev_issue_flush ( s#block_device * , t#gfp_t , t#sector_t * ) 

/* block/blk-integrity.o */
s##blk_mq_ctx
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##seq_file
s##radix_tree_node
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##tvec_base
s##workqueue_struct
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##slab
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
blk_rq_count_integrity_sg extern int blk_rq_count_integrity_sg ( s#request_queue * , s#bio * ) 
blk_rq_map_integrity_sg extern int blk_rq_map_integrity_sg ( s#request_queue * , s#bio * , s#scatterlist * ) 
blk_integrity_compare extern int blk_integrity_compare ( s#gendisk * , s#gendisk * ) 
blk_integrity_merge_rq extern int blk_integrity_merge_rq ( s#request_queue * , s#request * , s#request * ) 
blk_integrity_merge_bio extern int blk_integrity_merge_bio ( s#request_queue * , s#request * , s#bio * ) 
blk_integrity_is_initialized extern t#bool blk_integrity_is_initialized ( s#gendisk * ) 
blk_integrity_register extern int blk_integrity_register ( s#gendisk * , s#blk_integrity * ) 
blk_integrity_unregister extern void blk_integrity_unregister ( s#gendisk * ) 

/* block/blk-ioc.o */
s##radix_tree_node
s##blk_mq_ctx
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##optimistic_spin_queue
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
get_io_context void get_io_context ( s#io_context * ) 
put_io_context void put_io_context ( s#io_context * ) 
get_task_io_context s#io_context * get_task_io_context ( s#task_struct * , t#gfp_t , int ) 
ioc_lookup_icq s#io_cq * ioc_lookup_icq ( s#io_context * , s#request_queue * ) 

/* block/blk-iopoll.o */
blk_iopoll_enabled extern int blk_iopoll_enabled 
t#blk_iopoll_fn typedef int ( blk_iopoll_fn ) ( s#blk_iopoll * , int ) 
s#blk_iopoll struct blk_iopoll { s#list_head list ; unsigned long state ; unsigned long data ; int weight ; int max ; t#blk_iopoll_fn * poll ; } 
blk_iopoll_sched extern void blk_iopoll_sched ( s#blk_iopoll * ) 
__blk_iopoll_complete extern void __blk_iopoll_complete ( s#blk_iopoll * ) 
blk_iopoll_complete extern void blk_iopoll_complete ( s#blk_iopoll * ) 
blk_iopoll_disable extern void blk_iopoll_disable ( s#blk_iopoll * ) 
blk_iopoll_enable extern void blk_iopoll_enable ( s#blk_iopoll * ) 
blk_iopoll_init extern void blk_iopoll_init ( s#blk_iopoll * , int , t#blk_iopoll_fn * ) 

/* block/blk-lib.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
blkdev_issue_discard extern int blkdev_issue_discard ( s#block_device * , t#sector_t , t#sector_t , t#gfp_t , unsigned long ) 
blkdev_issue_write_same extern int blkdev_issue_write_same ( s#block_device * , t#sector_t , t#sector_t , t#gfp_t , s#page * ) 
blkdev_issue_zeroout extern int blkdev_issue_zeroout ( s#block_device * , t#sector_t , t#sector_t , t#gfp_t ) 

/* block/blk-map.o */
s##blk_mq_ctx
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s#rq_map_data struct rq_map_data { s#page * * pages ; int page_order ; int nr_entries ; unsigned long offset ; int null_mapped ; int from_user ; } 
blk_rq_map_user extern int blk_rq_map_user ( s#request_queue * , s#request * , s#rq_map_data * , void * , unsigned long , t#gfp_t ) 
s#sg_iovec struct sg_iovec { void * iov_base ; t#size_t iov_len ; } 
blk_rq_map_user_iov extern int blk_rq_map_user_iov ( s#request_queue * , s#request * , s#rq_map_data * , s#sg_iovec * , int , unsigned int , t#gfp_t ) 
blk_rq_unmap_user extern int blk_rq_unmap_user ( s#bio * ) 
blk_rq_map_kern extern int blk_rq_map_kern ( s#request_queue * , s#request * , void * , unsigned int , t#gfp_t ) 

/* block/blk-merge.o */
s##blk_mq_ctx
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
blk_recount_segments extern void blk_recount_segments ( s#request_queue * , s#bio * ) 
blk_rq_map_sg extern int blk_rq_map_sg ( s#request_queue * , s#request * , s#scatterlist * ) 
blk_bio_map_sg extern int blk_bio_map_sg ( s#request_queue * , s#bio * , s#scatterlist * ) 

/* block/blk-mq.o */
s##tvec_base
s##workqueue_struct
s##sock
s##sysfs_dirent
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##bsg_job
s##throtl_data
s##blk_mq_tags
blk_mq_can_queue t#bool blk_mq_can_queue ( s#blk_mq_hw_ctx * ) 
blk_mq_alloc_reserved_request s#request * blk_mq_alloc_reserved_request ( s#request_queue * , int , t#gfp_t ) 
blk_mq_end_io_partial t#bool blk_mq_end_io_partial ( s#request * , int , unsigned int ) 
blk_mq_complete_request void blk_mq_complete_request ( s#request * ) 
blk_mq_run_queues void blk_mq_run_queues ( s#request_queue * , t#bool ) 
blk_mq_stop_hw_queue void blk_mq_stop_hw_queue ( s#blk_mq_hw_ctx * ) 
blk_mq_stop_hw_queues void blk_mq_stop_hw_queues ( s#request_queue * ) 
blk_mq_start_hw_queue void blk_mq_start_hw_queue ( s#blk_mq_hw_ctx * ) 
blk_mq_start_stopped_hw_queues void blk_mq_start_stopped_hw_queues ( s#request_queue * ) 
blk_mq_map_queue s#blk_mq_hw_ctx * blk_mq_map_queue ( s#request_queue * , const int ) 
blk_mq_alloc_single_hw_queue s#blk_mq_hw_ctx * blk_mq_alloc_single_hw_queue ( s#blk_mq_reg * , unsigned int ) 
blk_mq_free_single_hw_queue void blk_mq_free_single_hw_queue ( s#blk_mq_hw_ctx * , unsigned int ) 
blk_mq_init_commands void blk_mq_init_commands ( s#request_queue * , void ( * ) ( void * , s#blk_mq_hw_ctx * , s#request * , unsigned int ) , void * ) 
blk_mq_init_queue s#request_queue * blk_mq_init_queue ( s#blk_mq_reg * , void * ) 

/* block/blk-settings.o */
blk_max_low_pfn extern unsigned long blk_max_low_pfn 
s##blk_mq_ctx
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
blk_queue_prep_rq extern void blk_queue_prep_rq ( s#request_queue * , t#prep_rq_fn * ) 
blk_queue_unprep_rq extern void blk_queue_unprep_rq ( s#request_queue * , t#unprep_rq_fn * ) 
blk_queue_merge_bvec extern void blk_queue_merge_bvec ( s#request_queue * , t#merge_bvec_fn * ) 
blk_queue_softirq_done extern void blk_queue_softirq_done ( s#request_queue * , t#softirq_done_fn * ) 
blk_queue_rq_timeout extern void blk_queue_rq_timeout ( s#request_queue * , unsigned int ) 
blk_queue_rq_timed_out extern void blk_queue_rq_timed_out ( s#request_queue * , t#rq_timed_out_fn * ) 
blk_queue_lld_busy extern void blk_queue_lld_busy ( s#request_queue * , t#lld_busy_fn * ) 
blk_set_default_limits extern void blk_set_default_limits ( s#queue_limits * ) 
blk_set_stacking_limits extern void blk_set_stacking_limits ( s#queue_limits * ) 
blk_queue_make_request extern void blk_queue_make_request ( s#request_queue * , t#make_request_fn * ) 
blk_queue_bounce_limit extern void blk_queue_bounce_limit ( s#request_queue * , t#u64 ) 
blk_limits_max_hw_sectors extern void blk_limits_max_hw_sectors ( s#queue_limits * , unsigned int ) 
blk_queue_max_hw_sectors extern void blk_queue_max_hw_sectors ( s#request_queue * , unsigned int ) 
blk_queue_max_discard_sectors extern void blk_queue_max_discard_sectors ( s#request_queue * , unsigned int ) 
blk_queue_max_write_same_sectors extern void blk_queue_max_write_same_sectors ( s#request_queue * , unsigned int ) 
blk_queue_max_segments extern void blk_queue_max_segments ( s#request_queue * , unsigned short ) 
blk_queue_max_segment_size extern void blk_queue_max_segment_size ( s#request_queue * , unsigned int ) 
blk_queue_logical_block_size extern void blk_queue_logical_block_size ( s#request_queue * , unsigned short ) 
blk_queue_physical_block_size extern void blk_queue_physical_block_size ( s#request_queue * , unsigned int ) 
blk_queue_alignment_offset extern void blk_queue_alignment_offset ( s#request_queue * , unsigned int ) 
blk_limits_io_min extern void blk_limits_io_min ( s#queue_limits * , unsigned int ) 
blk_queue_io_min extern void blk_queue_io_min ( s#request_queue * , unsigned int ) 
blk_limits_io_opt extern void blk_limits_io_opt ( s#queue_limits * , unsigned int ) 
blk_queue_io_opt extern void blk_queue_io_opt ( s#request_queue * , unsigned int ) 
blk_queue_stack_limits extern void blk_queue_stack_limits ( s#request_queue * , s#request_queue * ) 
blk_stack_limits extern int blk_stack_limits ( s#queue_limits * , s#queue_limits * , t#sector_t ) 
bdev_stack_limits extern int bdev_stack_limits ( s#queue_limits * , s#block_device * , t#sector_t ) 
disk_stack_limits extern void disk_stack_limits ( s#gendisk * , s#block_device * , t#sector_t ) 
blk_queue_dma_pad extern void blk_queue_dma_pad ( s#request_queue * , unsigned int ) 
blk_queue_update_dma_pad extern void blk_queue_update_dma_pad ( s#request_queue * , unsigned int ) 
blk_queue_dma_drain extern int blk_queue_dma_drain ( s#request_queue * , t#dma_drain_needed_fn * , void * , unsigned int ) 
blk_queue_segment_boundary extern void blk_queue_segment_boundary ( s#request_queue * , unsigned long ) 
blk_queue_dma_alignment extern void blk_queue_dma_alignment ( s#request_queue * , int ) 
blk_queue_update_dma_alignment extern void blk_queue_update_dma_alignment ( s#request_queue * , int ) 
blk_queue_flush extern void blk_queue_flush ( s#request_queue * , unsigned int ) 
blk_queue_flush_queueable extern void blk_queue_flush_queueable ( s#request_queue * , t#bool ) 

/* block/blk-softirq.o */
s##kmem_cache_node
s##array_cache
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
blk_complete_request extern void blk_complete_request ( s#request * ) 

/* block/blk-tag.o */
s##kmem_cache_node
s##array_cache
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
blk_queue_find_tag extern s#request * blk_queue_find_tag ( s#request_queue * , int ) 
blk_free_tags extern void blk_free_tags ( s#blk_queue_tag * ) 
blk_queue_free_tags extern void blk_queue_free_tags ( s#request_queue * ) 
blk_init_tags extern s#blk_queue_tag * blk_init_tags ( int ) 
blk_queue_init_tags extern int blk_queue_init_tags ( s#request_queue * , int , s#blk_queue_tag * ) 
blk_queue_resize_tags extern int blk_queue_resize_tags ( s#request_queue * , int ) 
blk_queue_end_tag extern void blk_queue_end_tag ( s#request_queue * , s#request * ) 
blk_queue_start_tag extern int blk_queue_start_tag ( s#request_queue * , s#request * ) 
blk_queue_invalidate_tags extern void blk_queue_invalidate_tags ( s#request_queue * ) 

/* block/blk-timeout.o */
s##kmem_cache_node
s##array_cache
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
blk_abort_request extern void blk_abort_request ( s#request * ) 

/* block/bsg.o */
s##blk_mq_ctx
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
bsg_unregister_queue extern void bsg_unregister_queue ( s#request_queue * ) 
bsg_register_queue extern int bsg_register_queue ( s#request_queue * , s#device * , const char * , void ( * ) ( s#device * ) ) 

/* block/bsg-lib.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##module
s##kstatfs
s##seq_file
s##export_operations
s##tvec_base
s##workqueue_struct
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s#bsg_buffer struct bsg_buffer { unsigned int payload_len ; int sg_cnt ; s#scatterlist * sg_list ; } 
s#bsg_job struct bsg_job { s#device * dev ; s#request * req ; void * request ; void * reply ; unsigned int request_len ; unsigned int reply_len ; s#bsg_buffer request_payload ; s#bsg_buffer reply_payload ; void * dd_data ; } 
bsg_job_done void bsg_job_done ( s#bsg_job * , int , unsigned int ) 
bsg_request_fn void bsg_request_fn ( s#request_queue * ) 
bsg_setup_queue int bsg_setup_queue ( s#device * , s#request_queue * , char * , t#bsg_job_fn * , int ) 

/* block/elevator.o */
s##kmem_cache_node
s##array_cache
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_mq_ops
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##bsg_job
s##throtl_data
elv_rq_merge_ok extern t#bool elv_rq_merge_ok ( s#request * , s#bio * ) 
elevator_alloc extern s#elevator_queue * elevator_alloc ( s#request_queue * , s#elevator_type * ) 
elevator_init extern int elevator_init ( s#request_queue * , char * ) 
elevator_exit extern void elevator_exit ( s#elevator_queue * ) 
elv_rb_add extern void elv_rb_add ( s#rb_root * , s#request * ) 
elv_rb_del extern void elv_rb_del ( s#rb_root * , s#request * ) 
elv_rb_find extern s#request * elv_rb_find ( s#rb_root * , t#sector_t ) 
elv_dispatch_sort extern void elv_dispatch_sort ( s#request_queue * , s#request * ) 
elv_dispatch_add_tail extern void elv_dispatch_add_tail ( s#request_queue * , s#request * ) 
__elv_add_request extern void __elv_add_request ( s#request_queue * , s#request * , int ) 
elv_add_request extern void elv_add_request ( s#request_queue * , s#request * , int ) 
elv_abort_queue extern void elv_abort_queue ( s#request_queue * ) 
elv_register_queue extern int elv_register_queue ( s#request_queue * ) 
elv_unregister_queue extern void elv_unregister_queue ( s#request_queue * ) 
elv_register extern int elv_register ( s#elevator_type * ) 
elv_unregister extern void elv_unregister ( s#elevator_type * ) 
elevator_change extern int elevator_change ( s#request_queue * , const char * ) 
elv_rb_former_request extern s#request * elv_rb_former_request ( s#request_queue * , s#request * ) 
elv_rb_latter_request extern s#request * elv_rb_latter_request ( s#request_queue * , s#request * ) 

/* block/genhd.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
disk_get_part extern s#hd_struct * disk_get_part ( s#gendisk * , int ) 
s#disk_part_iter struct disk_part_iter { s#gendisk * disk ; s#hd_struct * part ; int idx ; unsigned int flags ; } 
disk_part_iter_init extern void disk_part_iter_init ( s#disk_part_iter * , s#gendisk * , unsigned int ) 
disk_part_iter_next extern s#hd_struct * disk_part_iter_next ( s#disk_part_iter * ) 
disk_part_iter_exit extern void disk_part_iter_exit ( s#disk_part_iter * ) 
disk_map_sector_rcu extern s#hd_struct * disk_map_sector_rcu ( s#gendisk * , t#sector_t ) 
register_blkdev extern int register_blkdev ( unsigned int , const char * ) 
unregister_blkdev extern void unregister_blkdev ( unsigned int , const char * ) 
blk_register_region extern void blk_register_region ( t#dev_t , unsigned long , s#module * , s#kobject * ( * ) ( t#dev_t , int * , void * ) , int ( * ) ( t#dev_t , void * ) , void * ) 
blk_unregister_region extern void blk_unregister_region ( t#dev_t , unsigned long ) 
add_disk extern void add_disk ( s#gendisk * ) 
del_gendisk extern void del_gendisk ( s#gendisk * ) 
get_gendisk extern s#gendisk * get_gendisk ( t#dev_t , int * ) 
bdget_disk extern s#block_device * bdget_disk ( s#gendisk * , int ) 
blk_lookup_devt extern t#dev_t blk_lookup_devt ( const char * , int ) 
alloc_disk extern s#gendisk * alloc_disk ( int ) 
alloc_disk_node extern s#gendisk * alloc_disk_node ( int , int ) 
get_disk extern s#kobject * get_disk ( s#gendisk * ) 
put_disk extern void put_disk ( s#gendisk * ) 
set_device_ro extern void set_device_ro ( s#block_device * , int ) 
set_disk_ro extern void set_disk_ro ( s#gendisk * , int ) 
bdev_read_only extern int bdev_read_only ( s#block_device * ) 
invalidate_partition extern int invalidate_partition ( s#gendisk * , int ) 

/* block/ioctl.o */
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##seq_file
s##radix_tree_node
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s#hd_geometry struct hd_geometry { unsigned char heads ; unsigned char sectors ; unsigned short cylinders ; unsigned long start ; } 
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##kmem_cache_node
s##array_cache
s##blk_mq_ops
s##blk_mq_hw_ctx
s##workqueue_struct
s##bsg_job
s##throtl_data
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##slab
s##export_operations
s##mtd_info
s##nameidata
s##cdev
__blkdev_driver_ioctl extern int __blkdev_driver_ioctl ( s#block_device * , t#fmode_t , unsigned int , unsigned long ) 
blkdev_ioctl extern int blkdev_ioctl ( s#block_device * , t#fmode_t , unsigned , unsigned long ) 

/* block/partition-generic.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##bsg_job
s##throtl_data
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
bdevname extern const char * bdevname ( s#block_device * , char * ) 
__bdevname extern const char * __bdevname ( t#dev_t , char * ) 
t#Sector typedef struct { s#page * v ; } Sector 
read_dev_sector unsigned char * read_dev_sector ( s#block_device * , t#sector_t , t#Sector * ) 

/* block/scsi_ioctl.o */
scsi_command_size_tbl extern const unsigned char scsi_command_size_tbl [ 8 ] 
blk_verify_command extern int blk_verify_command ( unsigned char * , t#fmode_t ) 
s##blk_mq_ctx
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s#scsi_ioctl_command struct scsi_ioctl_command { unsigned int inlen ; unsigned int outlen ; unsigned char data [ 0 ] ; } 
sg_scsi_ioctl extern int sg_scsi_ioctl ( s#request_queue * , s#gendisk * , t#fmode_t , s#scsi_ioctl_command * ) 
scsi_cmd_ioctl extern int scsi_cmd_ioctl ( s#request_queue * , s#gendisk * , t#fmode_t , unsigned int , void * ) 
scsi_verify_blk_ioctl extern int scsi_verify_blk_ioctl ( s#block_device * , unsigned int ) 
scsi_cmd_blk_ioctl extern int scsi_cmd_blk_ioctl ( s#block_device * , t#fmode_t , unsigned int , void * ) 

/* crypto/ablkcipher.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
t#netdev_features_t typedef t#u64 netdev_features_t 
s#net_device_stats struct net_device_stats { unsigned long rx_packets ; unsigned long tx_packets ; unsigned long rx_bytes ; unsigned long tx_bytes ; unsigned long rx_errors ; unsigned long tx_errors ; unsigned long rx_dropped ; unsigned long tx_dropped ; unsigned long multicast ; unsigned long collisions ; unsigned long rx_length_errors ; unsigned long rx_over_errors ; unsigned long rx_crc_errors ; unsigned long rx_frame_errors ; unsigned long rx_fifo_errors ; unsigned long rx_missed_errors ; unsigned long tx_aborted_errors ; unsigned long tx_carrier_errors ; unsigned long tx_fifo_errors ; unsigned long tx_heartbeat_errors ; unsigned long tx_window_errors ; unsigned long rx_compressed ; unsigned long tx_compressed ; } 
s##iw_handler_def
s##iw_public_data
e#netdev_tx enum netdev_tx { __NETDEV_TX_MIN = ( - ( ( int ) ( ~ 0U >> 1 ) ) - 1 ) , NETDEV_TX_OK = 0x00 , NETDEV_TX_BUSY = 0x10 , NETDEV_TX_LOCKED = 0x20 , } 
t#netdev_tx_t typedef e#netdev_tx netdev_tx_t 
s##sec_path
t#select_queue_fallback_t typedef t#u16 ( * select_queue_fallback_t ) ( s#net_device * , s#sk_buff * ) 
t#__kernel_sa_family_t typedef unsigned short __kernel_sa_family_t 
t#sa_family_t typedef t#__kernel_sa_family_t sa_family_t 
s#sockaddr struct sockaddr { t#sa_family_t sa_family ; char sa_data [ 14 ] ; } 
s#ifmap struct ifmap { unsigned long mem_start ; unsigned long mem_end ; unsigned short base_addr ; unsigned char irq ; unsigned char dma ; unsigned char port ; } 
t#raw_hdlc_proto typedef struct { unsigned short encoding ; unsigned short parity ; } raw_hdlc_proto 
t#cisco_proto typedef struct { unsigned int interval ; unsigned int timeout ; } cisco_proto 
t#fr_proto typedef struct { unsigned int t391 ; unsigned int t392 ; unsigned int n391 ; unsigned int n392 ; unsigned int n393 ; unsigned short lmi ; unsigned short dce ; } fr_proto 
t#fr_proto_pvc typedef struct { unsigned int dlci ; } fr_proto_pvc 
t#fr_proto_pvc_info typedef struct { unsigned int dlci ; char master [ 16 ] ; } fr_proto_pvc_info 
t#sync_serial_settings typedef struct { unsigned int clock_rate ; unsigned int clock_type ; unsigned short loopback ; } sync_serial_settings 
t#te1_settings typedef struct { unsigned int clock_rate ; unsigned int clock_type ; unsigned short loopback ; unsigned int slot_map ; } te1_settings 
s#if_settings struct if_settings { unsigned int type ; unsigned int size ; union { t#raw_hdlc_proto * raw_hdlc ; t#cisco_proto * cisco ; t#fr_proto * fr ; t#fr_proto_pvc * fr_pvc ; t#fr_proto_pvc_info * fr_pvc_info ; t#sync_serial_settings * sync ; t#te1_settings * te1 ; } ifs_ifsu ; } 
s#ifreq struct ifreq { union { char ifrn_name [ 16 ] ; } ifr_ifrn ; union { s#sockaddr ifru_addr ; s#sockaddr ifru_dstaddr ; s#sockaddr ifru_broadaddr ; s#sockaddr ifru_netmask ; s#sockaddr ifru_hwaddr ; short ifru_flags ; int ifru_ivalue ; int ifru_mtu ; s#ifmap ifru_map ; char ifru_slave [ 16 ] ; char ifru_newname [ 16 ] ; void * ifru_data ; s#if_settings ifru_settings ; } ifr_ifru ; } 
s##neigh_parms
s#rtnl_link_stats64 struct rtnl_link_stats64 { t#__u64 rx_packets ; t#__u64 tx_packets ; t#__u64 rx_bytes ; t#__u64 tx_bytes ; t#__u64 rx_errors ; t#__u64 tx_errors ; t#__u64 rx_dropped ; t#__u64 tx_dropped ; t#__u64 multicast ; t#__u64 collisions ; t#__u64 rx_length_errors ; t#__u64 rx_over_errors ; t#__u64 rx_crc_errors ; t#__u64 rx_frame_errors ; t#__u64 rx_fifo_errors ; t#__u64 rx_missed_errors ; t#__u64 tx_aborted_errors ; t#__u64 tx_carrier_errors ; t#__u64 tx_fifo_errors ; t#__u64 tx_heartbeat_errors ; t#__u64 tx_window_errors ; t#__u64 rx_compressed ; t#__u64 tx_compressed ; } 
s##netpoll_info
s#napi_struct struct napi_struct { s#list_head poll_list ; unsigned long state ; int weight ; unsigned int gro_count ; int ( * poll ) ( s#napi_struct * , int ) ; t#spinlock_t poll_lock ; int poll_owner ; s#net_device * dev ; s#sk_buff * gro_list ; s#sk_buff * skb ; s#list_head dev_list ; s#hlist_node napi_hash_node ; unsigned int napi_id ; } 
s#ifla_vf_info struct ifla_vf_info { t#__u32 vf ; t#__u8 mac [ 32 ] ; t#__u32 vlan ; t#__u32 qos ; t#__u32 tx_rate ; t#__u32 spoofchk ; t#__u32 linkstate ; } 
s#nlattr struct nlattr { t#__u16 nla_len ; t#__u16 nla_type ; } 
s#netdev_fcoe_hbainfo struct netdev_fcoe_hbainfo { char manufacturer [ 64 ] ; char serial_number [ 64 ] ; char hardware_version [ 64 ] ; char driver_version [ 64 ] ; char optionrom_version [ 64 ] ; char firmware_version [ 64 ] ; char model [ 256 ] ; char model_description [ 256 ] ; } 
s##neighbour
s#ndmsg struct ndmsg { t#__u8 ndm_family ; t#__u8 ndm_pad1 ; t#__u16 ndm_pad2 ; t#__s32 ndm_ifindex ; t#__u16 ndm_state ; t#__u8 ndm_flags ; t#__u8 ndm_type ; } 
s#nlmsghdr struct nlmsghdr { t#__u32 nlmsg_len ; t#__u16 nlmsg_type ; t#__u16 nlmsg_flags ; t#__u32 nlmsg_seq ; t#__u32 nlmsg_pid ; } 
s#netlink_callback struct netlink_callback { s#sk_buff * skb ; const s#nlmsghdr * nlh ; int ( * dump ) ( s#sk_buff * , s#netlink_callback * ) ; int ( * done ) ( s#netlink_callback * ) ; void * data ; s#module * module ; t#u16 family ; t#u16 min_dump_alloc ; unsigned int prev_seq , seq ; long args [ 6 ] ; } 
s#netdev_phys_port_id struct netdev_phys_port_id { unsigned char id [ 32 ] ; unsigned char id_len ; } 
s#net_device_ops struct net_device_ops { int ( * ndo_init ) ( s#net_device * ) ; void ( * ndo_uninit ) ( s#net_device * ) ; int ( * ndo_open ) ( s#net_device * ) ; int ( * ndo_stop ) ( s#net_device * ) ; t#netdev_tx_t ( * ndo_start_xmit ) ( s#sk_buff * , s#net_device * ) ; t#u16 ( * ndo_select_queue ) ( s#net_device * , s#sk_buff * , void * , t#select_queue_fallback_t ) ; void ( * ndo_change_rx_flags ) ( s#net_device * , int ) ; void ( * ndo_set_rx_mode ) ( s#net_device * ) ; int ( * ndo_set_mac_address ) ( s#net_device * , void * ) ; int ( * ndo_validate_addr ) ( s#net_device * ) ; int ( * ndo_do_ioctl ) ( s#net_device * , s#ifreq * , int ) ; int ( * ndo_set_config ) ( s#net_device * , s#ifmap * ) ; int ( * ndo_change_mtu ) ( s#net_device * , int ) ; int ( * ndo_neigh_setup ) ( s#net_device * , s#neigh_parms * ) ; void ( * ndo_tx_timeout ) ( s#net_device * ) ; s#rtnl_link_stats64 * ( * ndo_get_stats64 ) ( s#net_device * , s#rtnl_link_stats64 * ) ; s#net_device_stats * ( * ndo_get_stats ) ( s#net_device * ) ; int ( * ndo_vlan_rx_add_vid ) ( s#net_device * , t#__be16 , t#u16 ) ; int ( * ndo_vlan_rx_kill_vid ) ( s#net_device * , t#__be16 , t#u16 ) ; void ( * ndo_poll_controller ) ( s#net_device * ) ; int ( * ndo_netpoll_setup ) ( s#net_device * , s#netpoll_info * , t#gfp_t ) ; void ( * ndo_netpoll_cleanup ) ( s#net_device * ) ; int ( * ndo_busy_poll ) ( s#napi_struct * ) ; int ( * ndo_set_vf_mac ) ( s#net_device * , int , t#u8 * ) ; int ( * ndo_set_vf_vlan ) ( s#net_device * , int , t#u16 , t#u8 ) ; int ( * ndo_set_vf_tx_rate ) ( s#net_device * , int , int ) ; int ( * ndo_set_vf_spoofchk ) ( s#net_device * , int , t#bool ) ; int ( * ndo_get_vf_config ) ( s#net_device * , int , s#ifla_vf_info * ) ; int ( * ndo_set_vf_link_state ) ( s#net_device * , int , int ) ; int ( * ndo_set_vf_port ) ( s#net_device * , int , s#nlattr * [ ] ) ; int ( * ndo_get_vf_port ) ( s#net_device * , int , s#sk_buff * ) ; int ( * ndo_setup_tc ) ( s#net_device * , t#u8 ) ; int ( * ndo_fcoe_enable ) ( s#net_device * ) ; int ( * ndo_fcoe_disable ) ( s#net_device * ) ; int ( * ndo_fcoe_ddp_setup ) ( s#net_device * , t#u16 , s#scatterlist * , unsigned int ) ; int ( * ndo_fcoe_ddp_done ) ( s#net_device * , t#u16 ) ; int ( * ndo_fcoe_ddp_target ) ( s#net_device * , t#u16 , s#scatterlist * , unsigned int ) ; int ( * ndo_fcoe_get_hbainfo ) ( s#net_device * , s#netdev_fcoe_hbainfo * ) ; int ( * ndo_fcoe_get_wwn ) ( s#net_device * , t#u64 * , int ) ; int ( * ndo_rx_flow_steer ) ( s#net_device * , const s#sk_buff * , t#u16 , t#u32 ) ; int ( * ndo_add_slave ) ( s#net_device * , s#net_device * ) ; int ( * ndo_del_slave ) ( s#net_device * , s#net_device * ) ; t#netdev_features_t ( * ndo_fix_features ) ( s#net_device * , t#netdev_features_t ) ; int ( * ndo_set_features ) ( s#net_device * , t#netdev_features_t ) ; int ( * ndo_neigh_construct ) ( s#neighbour * ) ; void ( * ndo_neigh_destroy ) ( s#neighbour * ) ; int ( * ndo_fdb_add ) ( s#ndmsg * , s#nlattr * [ ] , s#net_device * , const unsigned char * , t#u16 ) ; int ( * ndo_fdb_del ) ( s#ndmsg * , s#nlattr * [ ] , s#net_device * , const unsigned char * ) ; int ( * ndo_fdb_dump ) ( s#sk_buff * , s#netlink_callback * , s#net_device * , int ) ; int ( * ndo_bridge_setlink ) ( s#net_device * , s#nlmsghdr * ) ; int ( * ndo_bridge_getlink ) ( s#sk_buff * , t#u32 , t#u32 , s#net_device * , t#u32 ) ; int ( * ndo_bridge_dellink ) ( s#net_device * , s#nlmsghdr * ) ; int ( * ndo_change_carrier ) ( s#net_device * , t#bool ) ; int ( * ndo_get_phys_port_id ) ( s#net_device * , s#netdev_phys_port_id * ) ; void ( * ndo_add_vxlan_port ) ( s#net_device * , t#sa_family_t , t#__be16 ) ; void ( * ndo_del_vxlan_port ) ( s#net_device * , t#sa_family_t , t#__be16 ) ; void * ( * ndo_dfwd_add_station ) ( s#net_device * , s#net_device * ) ; void ( * ndo_dfwd_del_station ) ( s#net_device * , void * ) ; t#netdev_tx_t ( * ndo_dfwd_start_xmit ) ( s#sk_buff * , s#net_device * , void * ) ; } 
s#ethtool_cmd struct ethtool_cmd { t#__u32 cmd ; t#__u32 supported ; t#__u32 advertising ; t#__u16 speed ; t#__u8 duplex ; t#__u8 port ; t#__u8 phy_address ; t#__u8 transceiver ; t#__u8 autoneg ; t#__u8 mdio_support ; t#__u32 maxtxpkt ; t#__u32 maxrxpkt ; t#__u16 speed_hi ; t#__u8 eth_tp_mdix ; t#__u8 eth_tp_mdix_ctrl ; t#__u32 lp_advertising ; t#__u32 reserved [ 2 ] ; } 
s#ethtool_drvinfo struct ethtool_drvinfo { t#__u32 cmd ; char driver [ 32 ] ; char version [ 32 ] ; char fw_version [ 32 ] ; char bus_info [ 32 ] ; char reserved1 [ 32 ] ; char reserved2 [ 12 ] ; t#__u32 n_priv_flags ; t#__u32 n_stats ; t#__u32 testinfo_len ; t#__u32 eedump_len ; t#__u32 regdump_len ; } 
s#ethtool_regs struct ethtool_regs { t#__u32 cmd ; t#__u32 version ; t#__u32 len ; t#__u8 data [ 0 ] ; } 
s#ethtool_wolinfo struct ethtool_wolinfo { t#__u32 cmd ; t#__u32 supported ; t#__u32 wolopts ; t#__u8 sopass [ 6 ] ; } 
s#ethtool_eeprom struct ethtool_eeprom { t#__u32 cmd ; t#__u32 magic ; t#__u32 offset ; t#__u32 len ; t#__u8 data [ 0 ] ; } 
s#ethtool_coalesce struct ethtool_coalesce { t#__u32 cmd ; t#__u32 rx_coalesce_usecs ; t#__u32 rx_max_coalesced_frames ; t#__u32 rx_coalesce_usecs_irq ; t#__u32 rx_max_coalesced_frames_irq ; t#__u32 tx_coalesce_usecs ; t#__u32 tx_max_coalesced_frames ; t#__u32 tx_coalesce_usecs_irq ; t#__u32 tx_max_coalesced_frames_irq ; t#__u32 stats_block_coalesce_usecs ; t#__u32 use_adaptive_rx_coalesce ; t#__u32 use_adaptive_tx_coalesce ; t#__u32 pkt_rate_low ; t#__u32 rx_coalesce_usecs_low ; t#__u32 rx_max_coalesced_frames_low ; t#__u32 tx_coalesce_usecs_low ; t#__u32 tx_max_coalesced_frames_low ; t#__u32 pkt_rate_high ; t#__u32 rx_coalesce_usecs_high ; t#__u32 rx_max_coalesced_frames_high ; t#__u32 tx_coalesce_usecs_high ; t#__u32 tx_max_coalesced_frames_high ; t#__u32 rate_sample_interval ; } 
s#ethtool_ringparam struct ethtool_ringparam { t#__u32 cmd ; t#__u32 rx_max_pending ; t#__u32 rx_mini_max_pending ; t#__u32 rx_jumbo_max_pending ; t#__u32 tx_max_pending ; t#__u32 rx_pending ; t#__u32 rx_mini_pending ; t#__u32 rx_jumbo_pending ; t#__u32 tx_pending ; } 
s#ethtool_pauseparam struct ethtool_pauseparam { t#__u32 cmd ; t#__u32 autoneg ; t#__u32 rx_pause ; t#__u32 tx_pause ; } 
s#ethtool_test struct ethtool_test { t#__u32 cmd ; t#__u32 flags ; t#__u32 reserved ; t#__u32 len ; t#__u64 data [ 0 ] ; } 
e#ethtool_phys_id_state enum ethtool_phys_id_state { ETHTOOL_ID_INACTIVE , ETHTOOL_ID_ACTIVE , ETHTOOL_ID_ON , ETHTOOL_ID_OFF } 
s#ethtool_stats struct ethtool_stats { t#__u32 cmd ; t#__u32 n_stats ; t#__u64 data [ 0 ] ; } 
s#ethtool_tcpip4_spec struct ethtool_tcpip4_spec { t#__be32 ip4src ; t#__be32 ip4dst ; t#__be16 psrc ; t#__be16 pdst ; t#__u8 tos ; } 
s#ethtool_ah_espip4_spec struct ethtool_ah_espip4_spec { t#__be32 ip4src ; t#__be32 ip4dst ; t#__be32 spi ; t#__u8 tos ; } 
s#ethtool_usrip4_spec struct ethtool_usrip4_spec { t#__be32 ip4src ; t#__be32 ip4dst ; t#__be32 l4_4_bytes ; t#__u8 tos ; t#__u8 ip_ver ; t#__u8 proto ; } 
s#ethhdr struct ethhdr { unsigned char h_dest [ 6 ] ; unsigned char h_source [ 6 ] ; t#__be16 h_proto ; } 
u#ethtool_flow_union union ethtool_flow_union { s#ethtool_tcpip4_spec tcp_ip4_spec ; s#ethtool_tcpip4_spec udp_ip4_spec ; s#ethtool_tcpip4_spec sctp_ip4_spec ; s#ethtool_ah_espip4_spec ah_ip4_spec ; s#ethtool_ah_espip4_spec esp_ip4_spec ; s#ethtool_usrip4_spec usr_ip4_spec ; s#ethhdr ether_spec ; t#__u8 hdata [ 52 ] ; } 
s#ethtool_flow_ext struct ethtool_flow_ext { t#__u8 padding [ 2 ] ; unsigned char h_dest [ 6 ] ; t#__be16 vlan_etype ; t#__be16 vlan_tci ; t#__be32 data [ 2 ] ; } 
s#ethtool_rx_flow_spec struct ethtool_rx_flow_spec { t#__u32 flow_type ; u#ethtool_flow_union h_u ; s#ethtool_flow_ext h_ext ; u#ethtool_flow_union m_u ; s#ethtool_flow_ext m_ext ; t#__u64 ring_cookie ; t#__u32 location ; } 
s#ethtool_rxnfc struct ethtool_rxnfc { t#__u32 cmd ; t#__u32 flow_type ; t#__u64 data ; s#ethtool_rx_flow_spec fs ; t#__u32 rule_cnt ; t#__u32 rule_locs [ 0 ] ; } 
s#ethtool_flash struct ethtool_flash { t#__u32 cmd ; t#__u32 region ; char data [ 128 ] ; } 
s#ethtool_channels struct ethtool_channels { t#__u32 cmd ; t#__u32 max_rx ; t#__u32 max_tx ; t#__u32 max_other ; t#__u32 max_combined ; t#__u32 rx_count ; t#__u32 tx_count ; t#__u32 other_count ; t#__u32 combined_count ; } 
s#ethtool_dump struct ethtool_dump { t#__u32 cmd ; t#__u32 version ; t#__u32 flag ; t#__u32 len ; t#__u8 data [ 0 ] ; } 
s#ethtool_ts_info struct ethtool_ts_info { t#__u32 cmd ; t#__u32 so_timestamping ; t#__s32 phc_index ; t#__u32 tx_types ; t#__u32 tx_reserved [ 3 ] ; t#__u32 rx_filters ; t#__u32 rx_reserved [ 3 ] ; } 
s#ethtool_modinfo struct ethtool_modinfo { t#__u32 cmd ; t#__u32 type ; t#__u32 eeprom_len ; t#__u32 reserved [ 8 ] ; } 
s#ethtool_eee struct ethtool_eee { t#__u32 cmd ; t#__u32 supported ; t#__u32 advertised ; t#__u32 lp_advertised ; t#__u32 eee_active ; t#__u32 eee_enabled ; t#__u32 tx_lpi_enabled ; t#__u32 tx_lpi_timer ; t#__u32 reserved [ 2 ] ; } 
s#ethtool_ops struct ethtool_ops { int ( * get_settings ) ( s#net_device * , s#ethtool_cmd * ) ; int ( * set_settings ) ( s#net_device * , s#ethtool_cmd * ) ; void ( * get_drvinfo ) ( s#net_device * , s#ethtool_drvinfo * ) ; int ( * get_regs_len ) ( s#net_device * ) ; void ( * get_regs ) ( s#net_device * , s#ethtool_regs * , void * ) ; void ( * get_wol ) ( s#net_device * , s#ethtool_wolinfo * ) ; int ( * set_wol ) ( s#net_device * , s#ethtool_wolinfo * ) ; t#u32 ( * get_msglevel ) ( s#net_device * ) ; void ( * set_msglevel ) ( s#net_device * , t#u32 ) ; int ( * nway_reset ) ( s#net_device * ) ; t#u32 ( * get_link ) ( s#net_device * ) ; int ( * get_eeprom_len ) ( s#net_device * ) ; int ( * get_eeprom ) ( s#net_device * , s#ethtool_eeprom * , t#u8 * ) ; int ( * set_eeprom ) ( s#net_device * , s#ethtool_eeprom * , t#u8 * ) ; int ( * get_coalesce ) ( s#net_device * , s#ethtool_coalesce * ) ; int ( * set_coalesce ) ( s#net_device * , s#ethtool_coalesce * ) ; void ( * get_ringparam ) ( s#net_device * , s#ethtool_ringparam * ) ; int ( * set_ringparam ) ( s#net_device * , s#ethtool_ringparam * ) ; void ( * get_pauseparam ) ( s#net_device * , s#ethtool_pauseparam * ) ; int ( * set_pauseparam ) ( s#net_device * , s#ethtool_pauseparam * ) ; void ( * self_test ) ( s#net_device * , s#ethtool_test * , t#u64 * ) ; void ( * get_strings ) ( s#net_device * , t#u32 , t#u8 * ) ; int ( * set_phys_id ) ( s#net_device * , e#ethtool_phys_id_state ) ; void ( * get_ethtool_stats ) ( s#net_device * , s#ethtool_stats * , t#u64 * ) ; int ( * begin ) ( s#net_device * ) ; void ( * complete ) ( s#net_device * ) ; t#u32 ( * get_priv_flags ) ( s#net_device * ) ; int ( * set_priv_flags ) ( s#net_device * , t#u32 ) ; int ( * get_sset_count ) ( s#net_device * , int ) ; int ( * get_rxnfc ) ( s#net_device * , s#ethtool_rxnfc * , t#u32 * ) ; int ( * set_rxnfc ) ( s#net_device * , s#ethtool_rxnfc * ) ; int ( * flash_device ) ( s#net_device * , s#ethtool_flash * ) ; int ( * reset ) ( s#net_device * , t#u32 * ) ; t#u32 ( * get_rxfh_indir_size ) ( s#net_device * ) ; int ( * get_rxfh_indir ) ( s#net_device * , t#u32 * ) ; int ( * set_rxfh_indir ) ( s#net_device * , const t#u32 * ) ; void ( * get_channels ) ( s#net_device * , s#ethtool_channels * ) ; int ( * set_channels ) ( s#net_device * , s#ethtool_channels * ) ; int ( * get_dump_flag ) ( s#net_device * , s#ethtool_dump * ) ; int ( * get_dump_data ) ( s#net_device * , s#ethtool_dump * , void * ) ; int ( * set_dump ) ( s#net_device * , s#ethtool_dump * ) ; int ( * get_ts_info ) ( s#net_device * , s#ethtool_ts_info * ) ; int ( * get_module_info ) ( s#net_device * , s#ethtool_modinfo * ) ; int ( * get_module_eeprom ) ( s#net_device * , s#ethtool_eeprom * , t#u8 * ) ; int ( * get_eee ) ( s#net_device * , s#ethtool_eee * ) ; int ( * set_eee ) ( s#net_device * , s#ethtool_eee * ) ; } 
s##forwarding_accel_ops
s#hh_cache struct hh_cache { t#u16 hh_len ; t#u16 __pad ; t#seqlock_t hh_lock ; unsigned long hh_data [ ( ( ( 128 ) + ( 16 - 1 ) ) & ~ ( 16 - 1 ) ) / sizeof ( long ) ] ; } 
s#header_ops struct header_ops { int ( * create ) ( s#sk_buff * , s#net_device * , unsigned short , const void * , const void * , unsigned int ) ; int ( * parse ) ( const s#sk_buff * , unsigned char * ) ; int ( * rebuild ) ( s#sk_buff * ) ; int ( * cache ) ( const s#neighbour * , s#hh_cache * , t#__be16 ) ; void ( * cache_update ) ( s#hh_cache * , const s#net_device * , const unsigned char * ) ; } 
s#netdev_hw_addr_list struct netdev_hw_addr_list { s#list_head list ; int count ; } 
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
e#pm_qos_type enum pm_qos_type { PM_QOS_UNITIALIZED , PM_QOS_MAX , PM_QOS_MIN } 
s#blocking_notifier_head struct blocking_notifier_head { s#rw_semaphore rwsem ; s#notifier_block * head ; } 
s#pm_qos_constraints struct pm_qos_constraints { s#plist_head list ; t#s32 target_value ; t#s32 default_value ; e#pm_qos_type type ; s#blocking_notifier_head * notifiers ; } 
s#pm_qos_flags struct pm_qos_flags { s#list_head list ; t#s32 effective_flags ; } 
e#dev_pm_qos_req_type enum dev_pm_qos_req_type { DEV_PM_QOS_LATENCY = 1 , DEV_PM_QOS_FLAGS , } 
s#pm_qos_flags_request struct pm_qos_flags_request { s#list_head node ; t#s32 flags ; } 
s#dev_pm_qos_request struct dev_pm_qos_request { e#dev_pm_qos_req_type type ; union { s#plist_node pnode ; s#pm_qos_flags_request flr ; } data ; s#device * dev ; } 
s#dev_pm_qos struct dev_pm_qos { s#pm_qos_constraints latency ; s#pm_qos_flags flags ; s#dev_pm_qos_request * latency_req ; s#dev_pm_qos_request * flags_req ; } 
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s#dsa_chip_data struct dsa_chip_data { s#device * mii_bus ; int sw_addr ; char * port_names [ 12 ] ; t#s8 * rtable ; } 
s#dsa_platform_data struct dsa_platform_data { s#device * netdev ; int nr_chips ; s#dsa_chip_data * chip ; } 
s##mii_bus
s#dsa_switch_driver struct dsa_switch_driver { s#list_head list ; t#__be16 tag_protocol ; int priv_size ; char * ( * probe ) ( s#mii_bus * , int ) ; int ( * setup ) ( s#dsa_switch * ) ; int ( * set_addr ) ( s#dsa_switch * , t#u8 * ) ; int ( * phy_read ) ( s#dsa_switch * , int , int ) ; int ( * phy_write ) ( s#dsa_switch * , int , int , t#u16 ) ; void ( * poll_link ) ( s#dsa_switch * ) ; void ( * get_strings ) ( s#dsa_switch * , int , t#uint8_t * ) ; void ( * get_ethtool_stats ) ( s#dsa_switch * , int , t#uint64_t * ) ; int ( * get_sset_count ) ( s#dsa_switch * ) ; } 
s#dsa_switch struct dsa_switch { s#dsa_switch_tree * dst ; int index ; s#dsa_chip_data * pd ; s#dsa_switch_driver * drv ; s#mii_bus * master_mii_bus ; t#u32 dsa_port_mask ; t#u32 phys_port_mask ; s#mii_bus * slave_mii_bus ; s#net_device * ports [ 12 ] ; } 
s#dsa_switch_tree struct dsa_switch_tree { s#dsa_platform_data * pd ; s#net_device * master_netdev ; t#__be16 tag_protocol ; t#s8 cpu_switch ; t#s8 cpu_port ; int link_poll_needed ; s#work_struct link_poll_work ; s#timer_list link_poll_timer ; s#dsa_switch * ds [ 4 ] ; } 
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s#rps_map struct rps_map { unsigned int len ; s#callback_head rcu ; t#u16 cpus [ 0 ] ; } 
s#rps_dev_flow struct rps_dev_flow { t#u16 cpu ; t#u16 filter ; unsigned int last_qtail ; } 
s#rps_dev_flow_table struct rps_dev_flow_table { unsigned int mask ; s#callback_head rcu ; s#rps_dev_flow flows [ 0 ] ; } 
s#netdev_rx_queue struct netdev_rx_queue { s#rps_map * rps_map ; s#rps_dev_flow_table * rps_flow_table ; s#kobject kobj ; s#net_device * dev ; } 
e#rx_handler_result enum rx_handler_result { RX_HANDLER_CONSUMED , RX_HANDLER_ANOTHER , RX_HANDLER_EXACT , RX_HANDLER_PASS , } 
t#rx_handler_result_t typedef e#rx_handler_result rx_handler_result_t 
t#rx_handler_func_t typedef t#rx_handler_result_t rx_handler_func_t ( s#sk_buff * * ) 
s##Qdisc
s#dql struct dql { unsigned int num_queued ; unsigned int adj_limit ; unsigned int last_obj_cnt ; unsigned int limit __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; unsigned int num_completed ; unsigned int prev_ovlimit ; unsigned int prev_num_queued ; unsigned int prev_last_obj_cnt ; unsigned int lowest_slack ; unsigned long slack_start_time ; unsigned int max_limit ; unsigned int min_limit ; unsigned int slack_hold_time ; } 
s#netdev_queue struct netdev_queue { s#net_device * dev ; s#Qdisc * qdisc ; s#Qdisc * qdisc_sleeping ; s#kobject kobj ; int numa_node ; t#spinlock_t _xmit_lock __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; int xmit_lock_owner ; unsigned long trans_start ; unsigned long trans_timeout ; unsigned long state ; s#dql dql ; } 
s#xps_map struct xps_map { unsigned int len ; unsigned int alloc_len ; s#callback_head rcu ; t#u16 queues [ 0 ] ; } 
s#xps_dev_maps struct xps_dev_maps { s#callback_head rcu ; s#xps_map * cpu_map [ 0 ] ; } 
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s#ieee_ets struct ieee_ets { t#__u8 willing ; t#__u8 ets_cap ; t#__u8 cbs ; t#__u8 tc_tx_bw [ 8 ] ; t#__u8 tc_rx_bw [ 8 ] ; t#__u8 tc_tsa [ 8 ] ; t#__u8 prio_tc [ 8 ] ; t#__u8 tc_reco_bw [ 8 ] ; t#__u8 tc_reco_tsa [ 8 ] ; t#__u8 reco_prio_tc [ 8 ] ; } 
s#ieee_maxrate struct ieee_maxrate { t#__u64 tc_maxrate [ 8 ] ; } 
s#ieee_pfc struct ieee_pfc { t#__u8 pfc_cap ; t#__u8 pfc_en ; t#__u8 mbc ; t#__u16 delay ; t#__u64 requests [ 8 ] ; t#__u64 indications [ 8 ] ; } 
s#dcb_app struct dcb_app { t#__u8 selector ; t#__u8 priority ; t#__u16 protocol ; } 
s#dcb_peer_app_info struct dcb_peer_app_info { t#__u8 willing ; t#__u8 error ; } 
s#cee_pg struct cee_pg { t#__u8 willing ; t#__u8 error ; t#__u8 pg_en ; t#__u8 tcs_supported ; t#__u8 pg_bw [ 8 ] ; t#__u8 prio_pg [ 8 ] ; } 
s#cee_pfc struct cee_pfc { t#__u8 willing ; t#__u8 error ; t#__u8 pfc_en ; t#__u8 tcs_supported ; } 
s#dcbnl_rtnl_ops struct dcbnl_rtnl_ops { int ( * ieee_getets ) ( s#net_device * , s#ieee_ets * ) ; int ( * ieee_setets ) ( s#net_device * , s#ieee_ets * ) ; int ( * ieee_getmaxrate ) ( s#net_device * , s#ieee_maxrate * ) ; int ( * ieee_setmaxrate ) ( s#net_device * , s#ieee_maxrate * ) ; int ( * ieee_getpfc ) ( s#net_device * , s#ieee_pfc * ) ; int ( * ieee_setpfc ) ( s#net_device * , s#ieee_pfc * ) ; int ( * ieee_getapp ) ( s#net_device * , s#dcb_app * ) ; int ( * ieee_setapp ) ( s#net_device * , s#dcb_app * ) ; int ( * ieee_delapp ) ( s#net_device * , s#dcb_app * ) ; int ( * ieee_peer_getets ) ( s#net_device * , s#ieee_ets * ) ; int ( * ieee_peer_getpfc ) ( s#net_device * , s#ieee_pfc * ) ; t#u8 ( * getstate ) ( s#net_device * ) ; t#u8 ( * setstate ) ( s#net_device * , t#u8 ) ; void ( * getpermhwaddr ) ( s#net_device * , t#u8 * ) ; void ( * setpgtccfgtx ) ( s#net_device * , int , t#u8 , t#u8 , t#u8 , t#u8 ) ; void ( * setpgbwgcfgtx ) ( s#net_device * , int , t#u8 ) ; void ( * setpgtccfgrx ) ( s#net_device * , int , t#u8 , t#u8 , t#u8 , t#u8 ) ; void ( * setpgbwgcfgrx ) ( s#net_device * , int , t#u8 ) ; void ( * getpgtccfgtx ) ( s#net_device * , int , t#u8 * , t#u8 * , t#u8 * , t#u8 * ) ; void ( * getpgbwgcfgtx ) ( s#net_device * , int , t#u8 * ) ; void ( * getpgtccfgrx ) ( s#net_device * , int , t#u8 * , t#u8 * , t#u8 * , t#u8 * ) ; void ( * getpgbwgcfgrx ) ( s#net_device * , int , t#u8 * ) ; void ( * setpfccfg ) ( s#net_device * , int , t#u8 ) ; void ( * getpfccfg ) ( s#net_device * , int , t#u8 * ) ; t#u8 ( * setall ) ( s#net_device * ) ; t#u8 ( * getcap ) ( s#net_device * , int , t#u8 * ) ; int ( * getnumtcs ) ( s#net_device * , int , t#u8 * ) ; int ( * setnumtcs ) ( s#net_device * , int , t#u8 ) ; t#u8 ( * getpfcstate ) ( s#net_device * ) ; void ( * setpfcstate ) ( s#net_device * , t#u8 ) ; void ( * getbcncfg ) ( s#net_device * , int , t#u32 * ) ; void ( * setbcncfg ) ( s#net_device * , int , t#u32 ) ; void ( * getbcnrp ) ( s#net_device * , int , t#u8 * ) ; void ( * setbcnrp ) ( s#net_device * , int , t#u8 ) ; t#u8 ( * setapp ) ( s#net_device * , t#u8 , t#u16 , t#u8 ) ; t#u8 ( * getapp ) ( s#net_device * , t#u8 , t#u16 ) ; t#u8 ( * getfeatcfg ) ( s#net_device * , int , t#u8 * ) ; t#u8 ( * setfeatcfg ) ( s#net_device * , int , t#u8 ) ; t#u8 ( * getdcbx ) ( s#net_device * ) ; t#u8 ( * setdcbx ) ( s#net_device * , t#u8 ) ; int ( * peer_getappinfo ) ( s#net_device * , s#dcb_peer_app_info * , t#u16 * ) ; int ( * peer_getapptable ) ( s#net_device * , s#dcb_app * ) ; int ( * cee_peer_getpg ) ( s#net_device * , s#cee_pg * ) ; int ( * cee_peer_getpfc ) ( s#net_device * , s#cee_pfc * ) ; } 
s#netdev_tc_txq struct netdev_tc_txq { t#u16 count ; t#u16 offset ; } 
s#netprio_map struct netprio_map { s#callback_head rcu ; t#u32 priomap_len ; t#u32 priomap [ ] ; } 
s##phy_device
s##workqueue_struct
s#pm_qos_request struct pm_qos_request { s#plist_node node ; int pm_qos_class ; s#delayed_work work ; } 
s#net_device struct net_device { char name [ 16 ] ; s#hlist_node name_hlist ; char * ifalias ; unsigned long mem_end ; unsigned long mem_start ; unsigned long base_addr ; unsigned int irq ; unsigned long state ; s#list_head dev_list ; s#list_head napi_list ; s#list_head unreg_list ; s#list_head close_list ; struct { s#list_head upper ; s#list_head lower ; } adj_list ; struct { s#list_head upper ; s#list_head lower ; } all_adj_list ; t#netdev_features_t features ; t#netdev_features_t hw_features ; t#netdev_features_t wanted_features ; t#netdev_features_t vlan_features ; t#netdev_features_t hw_enc_features ; t#netdev_features_t mpls_features ; int ifindex ; int iflink ; s#net_device_stats stats ; t#atomic_long_t rx_dropped ; const s#iw_handler_def * wireless_handlers ; s#iw_public_data * wireless_data ; const s#net_device_ops * netdev_ops ; const s#ethtool_ops * ethtool_ops ; const s#forwarding_accel_ops * fwd_ops ; const s#header_ops * header_ops ; unsigned int flags ; unsigned int priv_flags ; unsigned short gflags ; unsigned short padded ; unsigned char operstate ; unsigned char link_mode ; unsigned char if_port ; unsigned char dma ; unsigned int mtu ; unsigned short type ; unsigned short hard_header_len ; unsigned short needed_headroom ; unsigned short needed_tailroom ; unsigned char perm_addr [ 32 ] ; unsigned char addr_assign_type ; unsigned char addr_len ; unsigned char neigh_priv_len ; unsigned short dev_id ; t#spinlock_t addr_list_lock ; s#netdev_hw_addr_list uc ; s#netdev_hw_addr_list mc ; s#netdev_hw_addr_list dev_addrs ; s#kset * queues_kset ; t#bool uc_promisc ; unsigned int promiscuity ; unsigned int allmulti ; s#vlan_info * vlan_info ; s#dsa_switch_tree * dsa_ptr ; void * atalk_ptr ; s#in_device * ip_ptr ; s#dn_dev * dn_ptr ; s#inet6_dev * ip6_ptr ; void * ax25_ptr ; s#wireless_dev * ieee80211_ptr ; unsigned long last_rx ; unsigned char * dev_addr ; s#netdev_rx_queue * _rx ; unsigned int num_rx_queues ; unsigned int real_num_rx_queues ; t#rx_handler_func_t * rx_handler ; void * rx_handler_data ; s#netdev_queue * ingress_queue ; unsigned char broadcast [ 32 ] ; s#netdev_queue * _tx __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; unsigned int num_tx_queues ; unsigned int real_num_tx_queues ; s#Qdisc * qdisc ; unsigned long tx_queue_len ; t#spinlock_t tx_global_lock ; s#xps_dev_maps * xps_maps ; s#cpu_rmap * rx_cpu_rmap ; unsigned long trans_start ; int watchdog_timeo ; s#timer_list watchdog_timer ; int * pcpu_refcnt ; s#list_head todo_list ; s#hlist_node index_hlist ; s#list_head link_watch_list ; enum { NETREG_UNINITIALIZED = 0 , NETREG_REGISTERED , NETREG_UNREGISTERING , NETREG_UNREGISTERED , NETREG_RELEASED , NETREG_DUMMY , } reg_state : 8 ; t#bool dismantle ; enum { RTNL_LINK_INITIALIZED , RTNL_LINK_INITIALIZING , } rtnl_link_state : 16 ; void ( * destructor ) ( s#net_device * ) ; s#netpoll_info * npinfo ; s#net * nd_net ; union { void * ml_priv ; s#pcpu_lstats * lstats ; s#pcpu_tstats * tstats ; s#pcpu_dstats * dstats ; s#pcpu_vstats * vstats ; } ; s#garp_port * garp_port ; s#mrp_port * mrp_port ; s#device dev ; const s#attribute_group * sysfs_groups [ 4 ] ; const s#rtnl_link_ops * rtnl_link_ops ; unsigned int gso_max_size ; t#u16 gso_max_segs ; const s#dcbnl_rtnl_ops * dcbnl_ops ; t#u8 num_tc ; s#netdev_tc_txq tc_to_txq [ 16 ] ; t#u8 prio_tc_map [ 15 + 1 ] ; unsigned int fcoe_ddp_xid ; s#netprio_map * priomap ; s#phy_device * phydev ; s#lock_class_key * qdisc_tx_busylock ; int group ; s#pm_qos_request pm_qos_req ; } 
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s#scatter_walk struct scatter_walk { s#scatterlist * sg ; unsigned int offset ; } 
s#ablkcipher_walk struct ablkcipher_walk { struct { s#page * page ; unsigned int offset ; } src , dst ; s#scatter_walk in ; unsigned int nbytes ; s#scatter_walk out ; unsigned int total ; s#list_head buffers ; t#u8 * iv_buffer ; t#u8 * iv ; int flags ; unsigned int blocksize ; } 
__ablkcipher_walk_complete void __ablkcipher_walk_complete ( s#ablkcipher_walk * ) 
t#crypto_completion_t typedef void ( * crypto_completion_t ) ( s#crypto_async_request * , int ) 
s#crypto_ablkcipher struct crypto_ablkcipher { s#crypto_tfm base ; } 
s#skcipher_givcrypt_request struct skcipher_givcrypt_request { t#u64 seq ; t#u8 * giv ; s#ablkcipher_request creq ; } 
s#ablkcipher_tfm struct ablkcipher_tfm { int ( * setkey ) ( s#crypto_ablkcipher * , const t#u8 * , unsigned int ) ; int ( * encrypt ) ( s#ablkcipher_request * ) ; int ( * decrypt ) ( s#ablkcipher_request * ) ; int ( * givencrypt ) ( s#skcipher_givcrypt_request * ) ; int ( * givdecrypt ) ( s#skcipher_givcrypt_request * ) ; s#crypto_ablkcipher * base ; unsigned int ivsize ; unsigned int reqsize ; } 
s#crypto_aead struct crypto_aead { s#crypto_tfm base ; } 
s#aead_request struct aead_request { s#crypto_async_request base ; unsigned int assoclen ; unsigned int cryptlen ; t#u8 * iv ; s#scatterlist * assoc ; s#scatterlist * src ; s#scatterlist * dst ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
s##aead_givcrypt_request
s#aead_tfm struct aead_tfm { int ( * setkey ) ( s#crypto_aead * , const t#u8 * , unsigned int ) ; int ( * encrypt ) ( s#aead_request * ) ; int ( * decrypt ) ( s#aead_request * ) ; int ( * givencrypt ) ( s#aead_givcrypt_request * ) ; int ( * givdecrypt ) ( s#aead_givcrypt_request * ) ; s#crypto_aead * base ; unsigned int ivsize ; unsigned int authsize ; unsigned int reqsize ; } 
s#crypto_blkcipher struct crypto_blkcipher { s#crypto_tfm base ; } 
s#blkcipher_desc struct blkcipher_desc { s#crypto_blkcipher * tfm ; void * info ; t#u32 flags ; } 
s#blkcipher_tfm struct blkcipher_tfm { void * iv ; int ( * setkey ) ( s#crypto_tfm * , const t#u8 * , unsigned int ) ; int ( * encrypt ) ( s#blkcipher_desc * , s#scatterlist * , s#scatterlist * , unsigned int ) ; int ( * decrypt ) ( s#blkcipher_desc * , s#scatterlist * , s#scatterlist * , unsigned int ) ; } 
s#cipher_tfm struct cipher_tfm { int ( * cit_setkey ) ( s#crypto_tfm * , const t#u8 * , unsigned int ) ; void ( * cit_encrypt_one ) ( s#crypto_tfm * , t#u8 * , const t#u8 * ) ; void ( * cit_decrypt_one ) ( s#crypto_tfm * , t#u8 * , const t#u8 * ) ; } 
s#crypto_hash struct crypto_hash { s#crypto_tfm base ; } 
s#hash_desc struct hash_desc { s#crypto_hash * tfm ; t#u32 flags ; } 
s#hash_tfm struct hash_tfm { int ( * init ) ( s#hash_desc * ) ; int ( * update ) ( s#hash_desc * , s#scatterlist * , unsigned int ) ; int ( * final ) ( s#hash_desc * , t#u8 * ) ; int ( * digest ) ( s#hash_desc * , s#scatterlist * , unsigned int , t#u8 * ) ; int ( * setkey ) ( s#crypto_hash * , const t#u8 * , unsigned int ) ; unsigned int digestsize ; } 
s#compress_tfm struct compress_tfm { int ( * cot_compress ) ( s#crypto_tfm * , const t#u8 * , unsigned int , t#u8 * , unsigned int * ) ; int ( * cot_decompress ) ( s#crypto_tfm * , const t#u8 * , unsigned int , t#u8 * , unsigned int * ) ; } 
s#crypto_rng struct crypto_rng { s#crypto_tfm base ; } 
s#rng_tfm struct rng_tfm { int ( * rng_gen_random ) ( s#crypto_rng * , t#u8 * , unsigned int ) ; int ( * rng_reset ) ( s#crypto_rng * , t#u8 * , unsigned int ) ; } 
s#crypto_type struct crypto_type { unsigned int ( * ctxsize ) ( s#crypto_alg * , t#u32 , t#u32 ) ; unsigned int ( * extsize ) ( s#crypto_alg * ) ; int ( * init ) ( s#crypto_tfm * , t#u32 , t#u32 ) ; int ( * init_tfm ) ( s#crypto_tfm * ) ; void ( * show ) ( s#seq_file * , s#crypto_alg * ) ; int ( * report ) ( s#sk_buff * , s#crypto_alg * ) ; s#crypto_alg * ( * lookup ) ( const char * , t#u32 , t#u32 ) ; unsigned int type ; unsigned int maskclear ; unsigned int maskset ; unsigned int tfmsize ; } 
s#ablkcipher_alg struct ablkcipher_alg { int ( * setkey ) ( s#crypto_ablkcipher * , const t#u8 * , unsigned int ) ; int ( * encrypt ) ( s#ablkcipher_request * ) ; int ( * decrypt ) ( s#ablkcipher_request * ) ; int ( * givencrypt ) ( s#skcipher_givcrypt_request * ) ; int ( * givdecrypt ) ( s#skcipher_givcrypt_request * ) ; const char * geniv ; unsigned int min_keysize ; unsigned int max_keysize ; unsigned int ivsize ; } 
s#aead_alg struct aead_alg { int ( * setkey ) ( s#crypto_aead * , const t#u8 * , unsigned int ) ; int ( * setauthsize ) ( s#crypto_aead * , unsigned int ) ; int ( * encrypt ) ( s#aead_request * ) ; int ( * decrypt ) ( s#aead_request * ) ; int ( * givencrypt ) ( s#aead_givcrypt_request * ) ; int ( * givdecrypt ) ( s#aead_givcrypt_request * ) ; const char * geniv ; unsigned int ivsize ; unsigned int maxauthsize ; } 
s#blkcipher_alg struct blkcipher_alg { int ( * setkey ) ( s#crypto_tfm * , const t#u8 * , unsigned int ) ; int ( * encrypt ) ( s#blkcipher_desc * , s#scatterlist * , s#scatterlist * , unsigned int ) ; int ( * decrypt ) ( s#blkcipher_desc * , s#scatterlist * , s#scatterlist * , unsigned int ) ; const char * geniv ; unsigned int min_keysize ; unsigned int max_keysize ; unsigned int ivsize ; } 
s#cipher_alg struct cipher_alg { unsigned int cia_min_keysize ; unsigned int cia_max_keysize ; int ( * cia_setkey ) ( s#crypto_tfm * , const t#u8 * , unsigned int ) ; void ( * cia_encrypt ) ( s#crypto_tfm * , t#u8 * , const t#u8 * ) ; void ( * cia_decrypt ) ( s#crypto_tfm * , t#u8 * , const t#u8 * ) ; } 
s#compress_alg struct compress_alg { int ( * coa_compress ) ( s#crypto_tfm * , const t#u8 * , unsigned int , t#u8 * , unsigned int * ) ; int ( * coa_decompress ) ( s#crypto_tfm * , const t#u8 * , unsigned int , t#u8 * , unsigned int * ) ; } 
s#rng_alg struct rng_alg { int ( * rng_make_random ) ( s#crypto_rng * , t#u8 * , unsigned int ) ; int ( * rng_reset ) ( s#crypto_rng * , t#u8 * , unsigned int ) ; unsigned int seedsize ; } 
s#crypto_alg struct crypto_alg { s#list_head cra_list ; s#list_head cra_users ; t#u32 cra_flags ; unsigned int cra_blocksize ; unsigned int cra_ctxsize ; unsigned int cra_alignmask ; int cra_priority ; t#atomic_t cra_refcnt ; char cra_name [ 64 ] ; char cra_driver_name [ 64 ] ; const s#crypto_type * cra_type ; union { s#ablkcipher_alg ablkcipher ; s#aead_alg aead ; s#blkcipher_alg blkcipher ; s#cipher_alg cipher ; s#compress_alg compress ; s#rng_alg rng ; } cra_u ; int ( * cra_init ) ( s#crypto_tfm * ) ; void ( * cra_exit ) ( s#crypto_tfm * ) ; void ( * cra_destroy ) ( s#crypto_alg * ) ; s#module * cra_module ; } 
s#crypto_tfm struct crypto_tfm { t#u32 crt_flags ; union { s#ablkcipher_tfm ablkcipher ; s#aead_tfm aead ; s#blkcipher_tfm blkcipher ; s#cipher_tfm cipher ; s#hash_tfm hash ; s#compress_tfm compress ; s#rng_tfm rng ; } crt_u ; void ( * exit ) ( s#crypto_tfm * ) ; s#crypto_alg * __crt_alg ; void * __crt_ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
s#crypto_async_request struct crypto_async_request { s#list_head list ; t#crypto_completion_t complete ; void * data ; s#crypto_tfm * tfm ; t#u32 flags ; } 
s#ablkcipher_request struct ablkcipher_request { s#crypto_async_request base ; unsigned int nbytes ; void * info ; s#scatterlist * src ; s#scatterlist * dst ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
ablkcipher_walk_done int ablkcipher_walk_done ( s#ablkcipher_request * , s#ablkcipher_walk * , int ) 
ablkcipher_walk_phys int ablkcipher_walk_phys ( s#ablkcipher_request * , s#ablkcipher_walk * ) 
crypto_ablkcipher_type extern const s#crypto_type crypto_ablkcipher_type 
crypto_givcipher_type extern const s#crypto_type crypto_givcipher_type 
crypto_lookup_skcipher s#crypto_alg * crypto_lookup_skcipher ( const char * , t#u32 , t#u32 ) 
s#rtattr struct rtattr { unsigned short rta_len ; unsigned short rta_type ; } 
s#crypto_template struct crypto_template { s#list_head list ; s#hlist_head instances ; s#module * module ; s#crypto_instance * ( * alloc ) ( s#rtattr * * ) ; void ( * free ) ( s#crypto_instance * ) ; int ( * create ) ( s#crypto_template * , s#rtattr * * ) ; char name [ 64 ] ; } 
s#crypto_instance struct crypto_instance { s#crypto_alg alg ; s#crypto_template * tmpl ; s#hlist_node list ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
s#crypto_spawn struct crypto_spawn { s#list_head list ; s#crypto_alg * alg ; s#crypto_instance * inst ; const s#crypto_type * frontend ; t#u32 mask ; } 
s#crypto_skcipher_spawn struct crypto_skcipher_spawn { s#crypto_spawn base ; } 
crypto_grab_skcipher int crypto_grab_skcipher ( s#crypto_skcipher_spawn * , const char * , t#u32 , t#u32 ) 
crypto_alloc_ablkcipher s#crypto_ablkcipher * crypto_alloc_ablkcipher ( const char * , t#u32 , t#u32 ) 

/* crypto/aead.o */
s##skcipher_givcrypt_request
s#aead_givcrypt_request struct aead_givcrypt_request { t#u64 seq ; t#u8 * giv ; s#aead_request areq ; } 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
crypto_aead_setauthsize int crypto_aead_setauthsize ( s#crypto_aead * , unsigned int ) 
crypto_aead_type extern const s#crypto_type crypto_aead_type 
crypto_nivaead_type extern const s#crypto_type crypto_nivaead_type 
aead_geniv_alloc s#crypto_instance * aead_geniv_alloc ( s#crypto_template * , s#rtattr * * , t#u32 , t#u32 ) 
aead_geniv_free void aead_geniv_free ( s#crypto_instance * ) 
aead_geniv_init int aead_geniv_init ( s#crypto_tfm * ) 
aead_geniv_exit void aead_geniv_exit ( s#crypto_tfm * ) 
crypto_lookup_aead s#crypto_alg * crypto_lookup_aead ( const char * , t#u32 , t#u32 ) 
s#crypto_aead_spawn struct crypto_aead_spawn { s#crypto_spawn base ; } 
crypto_grab_aead int crypto_grab_aead ( s#crypto_aead_spawn * , const char * , t#u32 , t#u32 ) 
crypto_alloc_aead s#crypto_aead * crypto_alloc_aead ( const char * , t#u32 , t#u32 ) 

/* crypto/aes_generic.o */
crypto_ft_tab extern const t#u32 crypto_ft_tab [ 4 ] [ 256 ] 
crypto_fl_tab extern const t#u32 crypto_fl_tab [ 4 ] [ 256 ] 
crypto_it_tab extern const t#u32 crypto_it_tab [ 4 ] [ 256 ] 
crypto_il_tab extern const t#u32 crypto_il_tab [ 4 ] [ 256 ] 
s#crypto_aes_ctx struct crypto_aes_ctx { t#u32 key_enc [ ( ( 15 * 16 ) / sizeof ( u32 ) ) ] ; t#u32 key_dec [ ( ( 15 * 16 ) / sizeof ( u32 ) ) ] ; t#u32 key_length ; } 
crypto_aes_expand_key int crypto_aes_expand_key ( s#crypto_aes_ctx * , const t#u8 * , unsigned int ) 
s##scatterlist
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
crypto_aes_set_key int crypto_aes_set_key ( s#crypto_tfm * , const t#u8 * , unsigned int ) 

/* crypto/af_alg.o */
t#__addrpair typedef t#__u64 __addrpair 
t#__portpair typedef t#__u32 __portpair 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s#pneigh_entry struct pneigh_entry { s#pneigh_entry * next ; s#net * net ; s#net_device * dev ; t#u8 flags ; t#u8 key [ 0 ] ; } 
s##tvec_base
s##workqueue_struct
s#neigh_statistics struct neigh_statistics { unsigned long allocs ; unsigned long destroys ; unsigned long hash_grows ; unsigned long res_failed ; unsigned long lookups ; unsigned long hits ; unsigned long rcv_probes_mcast ; unsigned long rcv_probes_ucast ; unsigned long periodic_gc_runs ; unsigned long forced_gc_runs ; unsigned long unres_discards ; } 
s#neigh_hash_table struct neigh_hash_table { s#neighbour * * hash_buckets ; unsigned int hash_shift ; t#__u32 hash_rnd [ 4 ] ; s#callback_head rcu ; } 
s#neigh_table struct neigh_table { s#neigh_table * next ; int family ; int entry_size ; int key_len ; t#__u32 ( * hash ) ( const void * , const s#net_device * , t#__u32 * ) ; int ( * constructor ) ( s#neighbour * ) ; int ( * pconstructor ) ( s#pneigh_entry * ) ; void ( * pdestructor ) ( s#pneigh_entry * ) ; void ( * proxy_redo ) ( s#sk_buff * ) ; char * id ; s#neigh_parms parms ; int gc_interval ; int gc_thresh1 ; int gc_thresh2 ; int gc_thresh3 ; unsigned long last_flush ; s#delayed_work gc_work ; s#timer_list proxy_timer ; s#sk_buff_head proxy_queue ; t#atomic_t entries ; t#rwlock_t lock ; unsigned long last_rand ; s#neigh_statistics * stats ; s#neigh_hash_table * nht ; s#pneigh_entry * * phash_buckets ; } 
s#neigh_ops struct neigh_ops { int family ; void ( * solicit ) ( s#neighbour * , s#sk_buff * ) ; void ( * error_report ) ( s#neighbour * , s#sk_buff * ) ; int ( * output ) ( s#neighbour * , s#sk_buff * ) ; int ( * connected_output ) ( s#neighbour * , s#sk_buff * ) ; } 
s#neighbour struct neighbour { s#neighbour * next ; s#neigh_table * tbl ; s#neigh_parms * parms ; unsigned long confirmed ; unsigned long updated ; t#rwlock_t lock ; t#atomic_t refcnt ; s#sk_buff_head arp_queue ; unsigned int arp_queue_len_bytes ; s#timer_list timer ; unsigned long used ; t#atomic_t probes ; t#__u8 flags ; t#__u8 nud_state ; t#__u8 type ; t#__u8 dead ; t#seqlock_t ha_lock ; unsigned char ha [ ( ( ( ( 32 ) ) + ( ( typeof ( ( 32 ) ) ) ( ( sizeof ( unsigned long ) ) ) - 1 ) ) & ~ ( ( typeof ( ( 32 ) ) ) ( ( sizeof ( unsigned long ) ) ) - 1 ) ) ] ; s#hh_cache hh ; int ( * output ) ( s#neighbour * , s#sk_buff * ) ; const s#neigh_ops * ops ; s#callback_head rcu ; s#net_device * dev ; t#u8 primary_key [ 0 ] ; } 
s#neigh_parms struct neigh_parms { s#net * net ; s#net_device * dev ; s#neigh_parms * next ; int ( * neigh_setup ) ( s#neighbour * ) ; void ( * neigh_cleanup ) ( s#neighbour * ) ; s#neigh_table * tbl ; void * sysctl_table ; int dead ; t#atomic_t refcnt ; s#callback_head callback_head ; int base_reachable_time ; int retrans_time ; int gc_staletime ; int reachable_time ; int delay_probe_time ; int queue_len_bytes ; int ucast_probes ; int app_probes ; int mcast_probes ; int anycast_delay ; int proxy_delay ; int proxy_qlen ; int locktime ; } 
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s#nla_policy struct nla_policy { t#u16 type ; t#u16 len ; } 
s#rtnl_link_ops struct rtnl_link_ops { s#list_head list ; const char * kind ; t#size_t priv_size ; void ( * setup ) ( s#net_device * ) ; int maxtype ; const s#nla_policy * policy ; int ( * validate ) ( s#nlattr * [ ] , s#nlattr * [ ] ) ; int ( * newlink ) ( s#net * , s#net_device * , s#nlattr * [ ] , s#nlattr * [ ] ) ; int ( * changelink ) ( s#net_device * , s#nlattr * [ ] , s#nlattr * [ ] ) ; void ( * dellink ) ( s#net_device * , s#list_head * ) ; t#size_t ( * get_size ) ( const s#net_device * ) ; int ( * fill_info ) ( s#sk_buff * , const s#net_device * ) ; t#size_t ( * get_xstats_size ) ( const s#net_device * ) ; int ( * fill_xstats ) ( s#sk_buff * , const s#net_device * ) ; unsigned int ( * get_num_tx_queues ) ( void ) ; unsigned int ( * get_num_rx_queues ) ( void ) ; int slave_maxtype ; const s#nla_policy * slave_policy ; int ( * slave_validate ) ( s#nlattr * [ ] , s#nlattr * [ ] ) ; int ( * slave_changelink ) ( s#net_device * , s#net_device * , s#nlattr * [ ] , s#nlattr * [ ] ) ; t#size_t ( * get_slave_size ) ( const s#net_device * , const s#net_device * ) ; int ( * fill_slave_info ) ( s#sk_buff * , const s#net_device * , const s#net_device * ) ; } 
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s#dst_entry struct dst_entry { s#callback_head callback_head ; s#dst_entry * child ; s#net_device * dev ; s#dst_ops * ops ; unsigned long _metrics ; unsigned long expires ; s#dst_entry * path ; s#dst_entry * from ; s#xfrm_state * xfrm ; int ( * input ) ( s#sk_buff * ) ; int ( * output ) ( s#sk_buff * ) ; unsigned short flags ; unsigned short pending_confirm ; short error ; short obsolete ; unsigned short header_len ; unsigned short trailer_len ; t#__u32 tclassid ; long __pad_to_align_refcnt [ 2 ] ; t#atomic_t __refcnt ; int __use ; unsigned long lastuse ; union { s#dst_entry * next ; s#rtable * rt_next ; s#rt6_info * rt6_next ; s#dn_route * dn_next ; } ; } 
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
t#kiocb_cancel_fn typedef int ( kiocb_cancel_fn ) ( s#kiocb * ) 
s#kiocb struct kiocb { s#file * ki_filp ; s#kioctx * ki_ctx ; t#kiocb_cancel_fn * ki_cancel ; void * private ; union { void * user ; s#task_struct * tsk ; } ki_obj ; t#__u64 ki_user_data ; t#loff_t ki_pos ; t#size_t ki_nbytes ; s#list_head ki_list ; s#eventfd_ctx * ki_eventfd ; } 
s#msghdr struct msghdr { void * msg_name ; int msg_namelen ; s#iovec * msg_iov ; t#__kernel_size_t msg_iovlen ; void * msg_control ; t#__kernel_size_t msg_controllen ; unsigned int msg_flags ; } 
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s#proto struct proto { void ( * close ) ( s#sock * , long ) ; int ( * connect ) ( s#sock * , s#sockaddr * , int ) ; int ( * disconnect ) ( s#sock * , int ) ; s#sock * ( * accept ) ( s#sock * , int , int * ) ; int ( * ioctl ) ( s#sock * , int , unsigned long ) ; int ( * init ) ( s#sock * ) ; void ( * destroy ) ( s#sock * ) ; void ( * shutdown ) ( s#sock * , int ) ; int ( * setsockopt ) ( s#sock * , int , int , char * , unsigned int ) ; int ( * getsockopt ) ( s#sock * , int , int , char * , int * ) ; int ( * compat_setsockopt ) ( s#sock * , int , int , char * , unsigned int ) ; int ( * compat_getsockopt ) ( s#sock * , int , int , char * , int * ) ; int ( * compat_ioctl ) ( s#sock * , unsigned int , unsigned long ) ; int ( * sendmsg ) ( s#kiocb * , s#sock * , s#msghdr * , t#size_t ) ; int ( * recvmsg ) ( s#kiocb * , s#sock * , s#msghdr * , t#size_t , int , int , int * ) ; int ( * sendpage ) ( s#sock * , s#page * , int , t#size_t , int ) ; int ( * bind ) ( s#sock * , s#sockaddr * , int ) ; int ( * backlog_rcv ) ( s#sock * , s#sk_buff * ) ; void ( * release_cb ) ( s#sock * ) ; void ( * mtu_reduced ) ( s#sock * ) ; void ( * hash ) ( s#sock * ) ; void ( * unhash ) ( s#sock * ) ; void ( * rehash ) ( s#sock * ) ; int ( * get_port ) ( s#sock * , unsigned short ) ; void ( * clear_sk ) ( s#sock * , int ) ; unsigned int inuse_idx ; t#bool ( * stream_memory_free ) ( const s#sock * ) ; void ( * enter_memory_pressure ) ( s#sock * ) ; t#atomic_long_t * memory_allocated ; s#percpu_counter * sockets_allocated ; int * memory_pressure ; long * sysctl_mem ; int * sysctl_wmem ; int * sysctl_rmem ; int max_header ; t#bool no_autobind ; s#kmem_cache * slab ; unsigned int obj_size ; int slab_flags ; s#percpu_counter * orphan_count ; s#request_sock_ops * rsk_prot ; s#timewait_sock_ops * twsk_prot ; union { s#inet_hashinfo * hashinfo ; s#udp_table * udp_table ; s#raw_hashinfo * raw_hash ; } h ; s#module * owner ; char name [ 32 ] ; s#list_head node ; } 
s#sock_common struct sock_common { union { t#__addrpair skc_addrpair ; struct { t#__be32 skc_daddr ; t#__be32 skc_rcv_saddr ; } ; } ; union { unsigned int skc_hash ; t#__u16 skc_u16hashes [ 2 ] ; } ; union { t#__portpair skc_portpair ; struct { t#__be16 skc_dport ; t#__u16 skc_num ; } ; } ; unsigned short skc_family ; volatile unsigned char skc_state ; unsigned char skc_reuse : 4 ; unsigned char skc_reuseport : 4 ; int skc_bound_dev_if ; union { s#hlist_node skc_bind_node ; s#hlist_nulls_node skc_portaddr_node ; } ; s#proto * skc_prot ; s#net * skc_net ; int skc_dontcopy_begin [ 0 ] ; union { s#hlist_node skc_node ; s#hlist_nulls_node skc_nulls_node ; } ; int skc_tx_queue_mapping ; t#atomic_t skc_refcnt ; int skc_dontcopy_end [ 0 ] ; } 
t#socket_lock_t typedef struct { t#spinlock_t slock ; int owned ; t#wait_queue_head_t wq ; } socket_lock_t 
s#sock_filter struct sock_filter { t#__u16 code ; t#__u8 jt ; t#__u8 jf ; t#__u32 k ; } 
s#sk_filter struct sk_filter { t#atomic_t refcnt ; unsigned int len ; s#callback_head rcu ; unsigned int ( * bpf_func ) ( const s#sk_buff * , const s#sock_filter * ) ; union { s#sock_filter insns [ 0 ] ; s#work_struct work ; } ; } 
s#socket_wq struct socket_wq { t#wait_queue_head_t wait ; s#fasync_struct * fasync_list ; s#callback_head rcu ; } 
s##xfrm_policy
t#socket_state typedef enum { SS_FREE = 0 , SS_UNCONNECTED , SS_CONNECTING , SS_CONNECTED , SS_DISCONNECTING } socket_state 
s#proto_ops struct proto_ops { int family ; s#module * owner ; int ( * release ) ( s#socket * ) ; int ( * bind ) ( s#socket * , s#sockaddr * , int ) ; int ( * connect ) ( s#socket * , s#sockaddr * , int , int ) ; int ( * socketpair ) ( s#socket * , s#socket * ) ; int ( * accept ) ( s#socket * , s#socket * , int ) ; int ( * getname ) ( s#socket * , s#sockaddr * , int * , int ) ; unsigned int ( * poll ) ( s#file * , s#socket * , s#poll_table_struct * ) ; int ( * ioctl ) ( s#socket * , unsigned int , unsigned long ) ; int ( * compat_ioctl ) ( s#socket * , unsigned int , unsigned long ) ; int ( * listen ) ( s#socket * , int ) ; int ( * shutdown ) ( s#socket * , int ) ; int ( * setsockopt ) ( s#socket * , int , int , char * , unsigned int ) ; int ( * getsockopt ) ( s#socket * , int , int , char * , int * ) ; int ( * compat_setsockopt ) ( s#socket * , int , int , char * , unsigned int ) ; int ( * compat_getsockopt ) ( s#socket * , int , int , char * , int * ) ; int ( * sendmsg ) ( s#kiocb * , s#socket * , s#msghdr * , t#size_t ) ; int ( * recvmsg ) ( s#kiocb * , s#socket * , s#msghdr * , t#size_t , int ) ; int ( * mmap ) ( s#file * , s#socket * , s#vm_area_struct * ) ; t#ssize_t ( * sendpage ) ( s#socket * , s#page * , int , t#size_t , int ) ; t#ssize_t ( * splice_read ) ( s#socket * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) ; int ( * set_peek_off ) ( s#sock * , int ) ; } 
s#socket struct socket { t#socket_state state ; ; short type ; ; unsigned long flags ; s#socket_wq * wq ; s#file * file ; s#sock * sk ; const s#proto_ops * ops ; } 
s#res_counter struct res_counter { unsigned long long usage ; unsigned long long max_usage ; unsigned long long limit ; unsigned long long soft_limit ; unsigned long long suse_kabi_padding1 ; unsigned long long suse_kabi_padding2 ; unsigned long long suse_kabi_padding3 ; unsigned long long failcnt ; t#spinlock_t lock ; s#res_counter * parent ; } 
s#cg_proto struct cg_proto { void ( * enter_memory_pressure ) ( s#sock * ) ; s#res_counter * memory_allocated ; s#percpu_counter * sockets_allocated ; int * memory_pressure ; long * sysctl_mem ; unsigned long flags ; s#mem_cgroup * memcg ; } 
s#sock struct sock { s#sock_common __sk_common ; t#socket_lock_t sk_lock ; s#sk_buff_head sk_receive_queue ; struct { t#atomic_t rmem_alloc ; int len ; s#sk_buff * head ; s#sk_buff * tail ; } sk_backlog ; int sk_forward_alloc ; t#__u32 sk_rxhash ; unsigned int sk_napi_id ; unsigned int sk_ll_usec ; t#atomic_t sk_drops ; int sk_rcvbuf ; s#sk_filter * sk_filter ; s#socket_wq * sk_wq ; s#xfrm_policy * sk_policy [ 2 ] ; unsigned long sk_flags ; s#dst_entry * sk_rx_dst ; s#dst_entry * sk_dst_cache ; t#spinlock_t sk_dst_lock ; t#atomic_t sk_wmem_alloc ; t#atomic_t sk_omem_alloc ; int sk_sndbuf ; s#sk_buff_head sk_write_queue ; ; unsigned int sk_shutdown : 2 , sk_no_check : 2 , sk_userlocks : 4 , sk_protocol : 8 , sk_type : 16 ; ; int sk_wmem_queued ; t#gfp_t sk_allocation ; t#u32 sk_pacing_rate ; t#netdev_features_t sk_route_caps ; t#netdev_features_t sk_route_nocaps ; int sk_gso_type ; unsigned int sk_gso_max_size ; t#u16 sk_gso_max_segs ; int sk_rcvlowat ; unsigned long sk_lingertime ; s#sk_buff_head sk_error_queue ; s#proto * sk_prot_creator ; t#rwlock_t sk_callback_lock ; int sk_err , sk_err_soft ; unsigned short sk_ack_backlog ; unsigned short sk_max_ack_backlog ; t#__u32 sk_priority ; t#__u32 sk_cgrp_prioidx ; s#pid * sk_peer_pid ; const s#cred * sk_peer_cred ; long sk_rcvtimeo ; long sk_sndtimeo ; void * sk_protinfo ; s#timer_list sk_timer ; t#ktime_t sk_stamp ; s#socket * sk_socket ; void * sk_user_data ; s#page_frag sk_frag ; s#sk_buff * sk_send_head ; t#__s32 sk_peek_off ; int sk_write_pending ; void * sk_security ; t#__u32 sk_mark ; t#u32 sk_classid ; s#cg_proto * sk_cgrp ; void ( * sk_state_change ) ( s#sock * ) ; void ( * sk_data_ready ) ( s#sock * , int ) ; void ( * sk_write_space ) ( s#sock * ) ; void ( * sk_error_report ) ( s#sock * ) ; int ( * sk_backlog_rcv ) ( s#sock * , s#sk_buff * ) ; void ( * sk_destruct ) ( s#sock * ) ; void * suse_kabi_padding ; } 
s#af_alg_type struct af_alg_type { void * ( * bind ) ( const char * , t#u32 , t#u32 ) ; void ( * release ) ( void * ) ; int ( * setkey ) ( void * , const t#u8 * , unsigned int ) ; int ( * accept ) ( void * , s#sock * ) ; s#proto_ops * ops ; s#module * owner ; char name [ 14 ] ; } 
af_alg_register_type int af_alg_register_type ( const s#af_alg_type * ) 
af_alg_unregister_type int af_alg_unregister_type ( const s#af_alg_type * ) 
af_alg_release int af_alg_release ( s#socket * ) 
af_alg_accept int af_alg_accept ( s#sock * , s#socket * ) 
s#af_alg_sgl struct af_alg_sgl { s#scatterlist sg [ 16 ] ; s#page * pages [ 16 ] ; } 
af_alg_make_sg int af_alg_make_sg ( s#af_alg_sgl * , void * , int , int ) 
af_alg_free_sg void af_alg_free_sg ( s#af_alg_sgl * ) 
s#af_alg_iv struct af_alg_iv { t#__u32 ivlen ; t#__u8 iv [ 0 ] ; } 
s#af_alg_control struct af_alg_control { s#af_alg_iv * iv ; int op ; } 
af_alg_cmsg_send int af_alg_cmsg_send ( s#msghdr * , s#af_alg_control * ) 
s#af_alg_completion struct af_alg_completion { s#completion completion ; int err ; } 
af_alg_wait_for_completion int af_alg_wait_for_completion ( int , s#af_alg_completion * ) 
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
af_alg_complete void af_alg_complete ( s#crypto_async_request * , int ) 

/* crypto/ahash.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s#crypto_hash_walk struct crypto_hash_walk { char * data ; unsigned int offset ; unsigned int alignmask ; s#page * pg ; unsigned int entrylen ; unsigned int total ; s#scatterlist * sg ; unsigned int flags ; } 
crypto_hash_walk_done int crypto_hash_walk_done ( s#crypto_hash_walk * , int ) 
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##net_device
s##sec_path
s#ahash_request struct ahash_request { s#crypto_async_request base ; unsigned int nbytes ; s#scatterlist * src ; t#u8 * result ; void * priv ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
crypto_hash_walk_first int crypto_hash_walk_first ( s#ahash_request * , s#crypto_hash_walk * ) 
s#crypto_ahash struct crypto_ahash { int ( * init ) ( s#ahash_request * ) ; int ( * update ) ( s#ahash_request * ) ; int ( * final ) ( s#ahash_request * ) ; int ( * finup ) ( s#ahash_request * ) ; int ( * digest ) ( s#ahash_request * ) ; int ( * export ) ( s#ahash_request * , void * ) ; int ( * import ) ( s#ahash_request * , const void * ) ; int ( * setkey ) ( s#crypto_ahash * , const t#u8 * , unsigned int ) ; unsigned int reqsize ; s#crypto_tfm base ; } 
crypto_ahash_setkey int crypto_ahash_setkey ( s#crypto_ahash * , const t#u8 * , unsigned int ) 
crypto_ahash_final int crypto_ahash_final ( s#ahash_request * ) 
crypto_ahash_finup int crypto_ahash_finup ( s#ahash_request * ) 
crypto_ahash_digest int crypto_ahash_digest ( s#ahash_request * ) 
crypto_ahash_type extern const s#crypto_type crypto_ahash_type 
crypto_alloc_ahash s#crypto_ahash * crypto_alloc_ahash ( const char * , t#u32 , t#u32 ) 
s#hash_alg_common struct hash_alg_common { unsigned int digestsize ; unsigned int statesize ; s#crypto_alg base ; } 
s#ahash_alg struct ahash_alg { int ( * init ) ( s#ahash_request * ) ; int ( * update ) ( s#ahash_request * ) ; int ( * final ) ( s#ahash_request * ) ; int ( * finup ) ( s#ahash_request * ) ; int ( * digest ) ( s#ahash_request * ) ; int ( * export ) ( s#ahash_request * , void * ) ; int ( * import ) ( s#ahash_request * , const void * ) ; int ( * setkey ) ( s#crypto_ahash * , const t#u8 * , unsigned int ) ; s#hash_alg_common halg ; } 
crypto_register_ahash int crypto_register_ahash ( s#ahash_alg * ) 
crypto_unregister_ahash int crypto_unregister_ahash ( s#ahash_alg * ) 
s##rtattr
s#ahash_instance struct ahash_instance { s#ahash_alg alg ; } 
ahash_register_instance int ahash_register_instance ( s#crypto_template * , s#ahash_instance * ) 
ahash_free_instance void ahash_free_instance ( s#crypto_instance * ) 
s#crypto_ahash_spawn struct crypto_ahash_spawn { s#crypto_spawn base ; } 
crypto_init_ahash_spawn int crypto_init_ahash_spawn ( s#crypto_ahash_spawn * , s#hash_alg_common * , s#crypto_instance * ) 
ahash_attr_alg s#hash_alg_common * ahash_attr_alg ( s#rtattr * , t#u32 , t#u32 ) 

/* crypto/algapi.o */
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
crypto_remove_spawns void crypto_remove_spawns ( s#crypto_alg * , s#list_head * , s#crypto_alg * ) 
crypto_alg_tested void crypto_alg_tested ( const char * , int ) 
crypto_remove_final void crypto_remove_final ( s#list_head * ) 
crypto_register_alg int crypto_register_alg ( s#crypto_alg * ) 
crypto_unregister_alg int crypto_unregister_alg ( s#crypto_alg * ) 
crypto_register_algs int crypto_register_algs ( s#crypto_alg * , int ) 
crypto_unregister_algs int crypto_unregister_algs ( s#crypto_alg * , int ) 
crypto_register_template int crypto_register_template ( s#crypto_template * ) 
crypto_unregister_template void crypto_unregister_template ( s#crypto_template * ) 
crypto_lookup_template s#crypto_template * crypto_lookup_template ( const char * ) 
crypto_register_instance int crypto_register_instance ( s#crypto_template * , s#crypto_instance * ) 
crypto_unregister_instance int crypto_unregister_instance ( s#crypto_alg * ) 
crypto_init_spawn int crypto_init_spawn ( s#crypto_spawn * , s#crypto_alg * , s#crypto_instance * , t#u32 ) 
crypto_init_spawn2 int crypto_init_spawn2 ( s#crypto_spawn * , s#crypto_alg * , s#crypto_instance * , const s#crypto_type * ) 
crypto_drop_spawn void crypto_drop_spawn ( s#crypto_spawn * ) 
crypto_spawn_tfm s#crypto_tfm * crypto_spawn_tfm ( s#crypto_spawn * , t#u32 , t#u32 ) 
crypto_spawn_tfm2 void * crypto_spawn_tfm2 ( s#crypto_spawn * ) 
crypto_register_notifier int crypto_register_notifier ( s#notifier_block * ) 
crypto_unregister_notifier int crypto_unregister_notifier ( s#notifier_block * ) 
s#crypto_attr_type struct crypto_attr_type { t#u32 type ; t#u32 mask ; } 
crypto_get_attr_type s#crypto_attr_type * crypto_get_attr_type ( s#rtattr * * ) 
crypto_check_attr_type int crypto_check_attr_type ( s#rtattr * * , t#u32 ) 
crypto_attr_alg_name const char * crypto_attr_alg_name ( s#rtattr * ) 
crypto_attr_alg2 s#crypto_alg * crypto_attr_alg2 ( s#rtattr * , const s#crypto_type * , t#u32 , t#u32 ) 
crypto_attr_u32 int crypto_attr_u32 ( s#rtattr * , t#u32 * ) 
crypto_alloc_instance2 void * crypto_alloc_instance2 ( const char * , s#crypto_alg * , unsigned int ) 
crypto_alloc_instance s#crypto_instance * crypto_alloc_instance ( const char * , s#crypto_alg * ) 
s#crypto_queue struct crypto_queue { s#list_head list ; s#list_head * backlog ; unsigned int qlen ; unsigned int max_qlen ; } 
crypto_init_queue void crypto_init_queue ( s#crypto_queue * , unsigned int ) 
crypto_enqueue_request int crypto_enqueue_request ( s#crypto_queue * , s#crypto_async_request * ) 
__crypto_dequeue_request void * __crypto_dequeue_request ( s#crypto_queue * , unsigned int ) 
crypto_dequeue_request s#crypto_async_request * crypto_dequeue_request ( s#crypto_queue * ) 
crypto_tfm_in_queue int crypto_tfm_in_queue ( s#crypto_queue * , s#crypto_tfm * ) 
crypto_inc void crypto_inc ( t#u8 * , unsigned int ) 
crypto_xor void crypto_xor ( t#u8 * , const t#u8 * , unsigned int ) 

/* crypto/api.o */
crypto_alg_list extern s#list_head crypto_alg_list 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
crypto_alg_sem extern s#rw_semaphore crypto_alg_sem 
crypto_chain extern s#blocking_notifier_head crypto_chain 
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##net_device
s##sec_path
crypto_mod_get s#crypto_alg * crypto_mod_get ( s#crypto_alg * ) 
crypto_mod_put void crypto_mod_put ( s#crypto_alg * ) 
s#crypto_larval struct crypto_larval { s#crypto_alg alg ; s#crypto_alg * adult ; s#completion completion ; t#u32 mask ; } 
crypto_larval_alloc s#crypto_larval * crypto_larval_alloc ( const char * , t#u32 , t#u32 ) 
crypto_larval_kill void crypto_larval_kill ( s#crypto_alg * ) 
crypto_alg_lookup s#crypto_alg * crypto_alg_lookup ( const char * , t#u32 , t#u32 ) 
crypto_larval_lookup s#crypto_alg * crypto_larval_lookup ( const char * , t#u32 , t#u32 ) 
crypto_probing_notify int crypto_probing_notify ( unsigned long , void * ) 
crypto_alg_mod_lookup s#crypto_alg * crypto_alg_mod_lookup ( const char * , t#u32 , t#u32 ) 
crypto_shoot_alg void crypto_shoot_alg ( s#crypto_alg * ) 
__crypto_alloc_tfm s#crypto_tfm * __crypto_alloc_tfm ( s#crypto_alg * , t#u32 , t#u32 ) 
crypto_alloc_base s#crypto_tfm * crypto_alloc_base ( const char * , t#u32 , t#u32 ) 
crypto_create_tfm void * crypto_create_tfm ( s#crypto_alg * , const s#crypto_type * ) 
crypto_find_alg s#crypto_alg * crypto_find_alg ( const char * , const s#crypto_type * , t#u32 , t#u32 ) 
crypto_alloc_tfm void * crypto_alloc_tfm ( const char * , const s#crypto_type * , t#u32 , t#u32 ) 
crypto_destroy_tfm void crypto_destroy_tfm ( void * , s#crypto_tfm * ) 
crypto_has_alg int crypto_has_alg ( const char * , t#u32 , t#u32 ) 

/* crypto/asymmetric_keys/asymmetric_type.o */
s#key_preparsed_payload struct key_preparsed_payload { char * description ; void * type_data [ 2 ] ; void * payload ; const void * data ; t#size_t datalen ; t#size_t quotalen ; t#bool trusted ; } 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##assoc_array_ptr
s#key_construction struct key_construction { s#key * key ; s#key * authkey ; } 
t#request_key_actor_t typedef int ( * request_key_actor_t ) ( s#key_construction * , const char * , void * ) 
s#key_type struct key_type { const char * name ; t#size_t def_datalen ; unsigned def_lookup_type ; int ( * vet_description ) ( const char * ) ; int ( * preparse ) ( s#key_preparsed_payload * ) ; void ( * free_preparse ) ( s#key_preparsed_payload * ) ; int ( * instantiate ) ( s#key * , s#key_preparsed_payload * ) ; int ( * update ) ( s#key * , s#key_preparsed_payload * ) ; int ( * match ) ( const s#key * , const void * ) ; void ( * revoke ) ( s#key * ) ; void ( * destroy ) ( s#key * ) ; void ( * describe ) ( const s#key * , s#seq_file * ) ; long ( * read ) ( const s#key * , char * , t#size_t ) ; t#request_key_actor_t request_key ; s#list_head link ; s#lock_class_key lock_class ; } 
key_type_asymmetric extern s#key_type key_type_asymmetric 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s#asymmetric_key_parser struct asymmetric_key_parser { s#list_head link ; s#module * owner ; const char * name ; int ( * parse ) ( s#key_preparsed_payload * ) ; } 
register_asymmetric_key_parser extern int register_asymmetric_key_parser ( s#asymmetric_key_parser * ) 
unregister_asymmetric_key_parser extern void unregister_asymmetric_key_parser ( s#asymmetric_key_parser * ) 

/* crypto/asymmetric_keys/public_key.o */
E#PKEY_ALGO__LAST 2 
pkey_algo_name extern const char * const pkey_algo_name [ E#PKEY_ALGO__LAST ] 
e#pkey_algo enum pkey_algo { PKEY_ALGO_DSA , PKEY_ALGO_RSA , PKEY_ALGO__LAST } 
e#pkey_id_type enum pkey_id_type { PKEY_ID_PGP , PKEY_ID_X509 , PKEY_ID_TYPE__LAST } 
t#mpi_limb_t typedef unsigned long int mpi_limb_t 
s#gcry_mpi struct gcry_mpi { int alloced ; int nlimbs ; int nbits ; int sign ; unsigned flags ; t#mpi_limb_t * d ; } 
t#MPI typedef s#gcry_mpi * MPI 
s#public_key struct public_key { const s#public_key_algorithm * algo ; t#u8 capabilities ; e#pkey_algo pkey_algo : 8 ; e#pkey_id_type id_type : 8 ; union { t#MPI mpi [ 5 ] ; struct { t#MPI p ; t#MPI q ; t#MPI g ; t#MPI y ; t#MPI x ; } dsa ; struct { t#MPI n ; t#MPI e ; t#MPI d ; t#MPI p ; t#MPI q ; } rsa ; } ; } 
e#pkey_hash_algo enum pkey_hash_algo { PKEY_HASH_MD4 , PKEY_HASH_MD5 , PKEY_HASH_SHA1 , PKEY_HASH_RIPE_MD_160 , PKEY_HASH_SHA256 , PKEY_HASH_SHA384 , PKEY_HASH_SHA512 , PKEY_HASH_SHA224 , PKEY_HASH__LAST } 
s#public_key_signature struct public_key_signature { t#u8 * digest ; t#u8 digest_size ; t#u8 nr_mpi ; e#pkey_algo pkey_algo : 8 ; e#pkey_hash_algo pkey_hash_algo : 8 ; union { t#MPI mpi [ 2 ] ; struct { t#MPI s ; } rsa ; struct { t#MPI r ; t#MPI s ; } dsa ; } ; } 
s#public_key_algorithm struct public_key_algorithm { const char * name ; t#u8 n_pub_mpi ; t#u8 n_sec_mpi ; t#u8 n_sig_mpi ; int ( * verify_signature ) ( const s#public_key * , const s#public_key_signature * ) ; } 
pkey_algo extern const s#public_key_algorithm * pkey_algo [ E#PKEY_ALGO__LAST ] 
E#PKEY_HASH__LAST 8 
pkey_hash_algo_name extern const char * const pkey_hash_algo_name [ E#PKEY_HASH__LAST ] 
E#PKEY_ID_TYPE__LAST 2 
pkey_id_type_name extern const char * const pkey_id_type_name [ E#PKEY_ID_TYPE__LAST ] 
public_key_destroy extern void public_key_destroy ( void * ) 
public_key_verify_signature extern int public_key_verify_signature ( const s#public_key * , const s#public_key_signature * ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##user_namespace
s##assoc_array_ptr
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#asymmetric_key_subtype struct asymmetric_key_subtype { s#module * owner ; const char * name ; unsigned short name_len ; void ( * describe ) ( const s#key * , s#seq_file * ) ; void ( * destroy ) ( void * ) ; int ( * verify_signature ) ( const s#key * , const s#public_key_signature * ) ; } 
public_key_subtype extern s#asymmetric_key_subtype public_key_subtype 

/* crypto/asymmetric_keys/rsa.o */
RSA_public_key_algorithm extern const s#public_key_algorithm RSA_public_key_algorithm 

/* crypto/asymmetric_keys/signature.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache
s##pid_namespace
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##assoc_array_ptr
verify_signature extern int verify_signature ( const s#key * , const s#public_key_signature * ) 

/* crypto/asymmetric_keys/x509_public_key.o */
s#tm struct tm { int tm_sec ; int tm_min ; int tm_hour ; int tm_mday ; int tm_mon ; long tm_year ; int tm_wday ; int tm_yday ; } 
s#x509_certificate struct x509_certificate { s#x509_certificate * next ; s#public_key * pub ; char * issuer ; char * subject ; char * fingerprint ; char * authority ; s#tm valid_from ; s#tm valid_to ; const void * tbs ; unsigned tbs_size ; unsigned raw_sig_size ; const void * raw_sig ; s#public_key_signature sig ; } 
x509_get_sig_params extern int x509_get_sig_params ( s#x509_certificate * ) 
x509_check_signature extern int x509_check_signature ( const s#public_key * , s#x509_certificate * ) 

/* crypto/async_tx/async_memcpy.o */
e#dma_ctrl_flags enum dma_ctrl_flags { DMA_PREP_INTERRUPT = ( 1 << 0 ) , DMA_CTRL_ACK = ( 1 << 1 ) , DMA_COMPL_SKIP_SRC_UNMAP = ( 1 << 2 ) , DMA_COMPL_SKIP_DEST_UNMAP = ( 1 << 3 ) , DMA_COMPL_SRC_UNMAP_SINGLE = ( 1 << 4 ) , DMA_COMPL_DEST_UNMAP_SINGLE = ( 1 << 5 ) , DMA_PREP_PQ_DISABLE_P = ( 1 << 6 ) , DMA_PREP_PQ_DISABLE_Q = ( 1 << 7 ) , DMA_PREP_CONTINUE = ( 1 << 8 ) , DMA_PREP_FENCE = ( 1 << 9 ) , } 
E#DMA_TX_TYPE_END 12 
t#dma_cap_mask_t typedef struct { unsigned long bits [ ( ( ( E#DMA_TX_TYPE_END ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } dma_cap_mask_t 
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
E#SUM_CHECK_P 0 
E#SUM_CHECK_Q 1 
e#sum_check_flags enum sum_check_flags { SUM_CHECK_P_RESULT = ( 1 << E#SUM_CHECK_P ) , SUM_CHECK_Q_RESULT = ( 1 << E#SUM_CHECK_Q ) , } 
e#dma_transfer_direction enum dma_transfer_direction { DMA_MEM_TO_MEM , DMA_MEM_TO_DEV , DMA_DEV_TO_MEM , DMA_DEV_TO_DEV , DMA_TRANS_NONE , } 
s#data_chunk struct data_chunk { t#size_t size ; t#size_t icg ; } 
s#dma_interleaved_template struct dma_interleaved_template { t#dma_addr_t src_start ; t#dma_addr_t dst_start ; e#dma_transfer_direction dir ; t#bool src_inc ; t#bool dst_inc ; t#bool src_sgl ; t#bool dst_sgl ; t#size_t numf ; t#size_t frame_size ; s#data_chunk sgl [ 0 ] ; } 
e#dma_ctrl_cmd enum dma_ctrl_cmd { DMA_TERMINATE_ALL , DMA_PAUSE , DMA_RESUME , DMA_SLAVE_CONFIG , FSLDMA_EXTERNAL_START , } 
e#dma_status enum dma_status { DMA_SUCCESS , DMA_IN_PROGRESS , DMA_PAUSED , DMA_ERROR , } 
s#dma_tx_state struct dma_tx_state { t#dma_cookie_t last ; t#dma_cookie_t used ; t#u32 residue ; } 
s#dma_slave_caps struct dma_slave_caps { t#u32 src_addr_widths ; t#u32 dstn_addr_widths ; t#u32 directions ; t#bool cmd_pause ; t#bool cmd_terminate ; } 
s#dma_device struct dma_device { unsigned int chancnt ; unsigned int privatecnt ; s#list_head channels ; s#list_head global_node ; t#dma_cap_mask_t cap_mask ; unsigned short max_xor ; unsigned short max_pq ; t#u8 copy_align ; t#u8 xor_align ; t#u8 pq_align ; t#u8 fill_align ; int dev_id ; s#device * dev ; int ( * device_alloc_chan_resources ) ( s#dma_chan * ) ; void ( * device_free_chan_resources ) ( s#dma_chan * ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_memcpy ) ( s#dma_chan * , t#dma_addr_t , t#dma_addr_t , t#size_t , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_xor ) ( s#dma_chan * , t#dma_addr_t , t#dma_addr_t * , unsigned int , t#size_t , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_xor_val ) ( s#dma_chan * , t#dma_addr_t * , unsigned int , t#size_t , e#sum_check_flags * , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_pq ) ( s#dma_chan * , t#dma_addr_t * , t#dma_addr_t * , unsigned int , const unsigned char * , t#size_t , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_pq_val ) ( s#dma_chan * , t#dma_addr_t * , t#dma_addr_t * , unsigned int , const unsigned char * , t#size_t , e#sum_check_flags * , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_interrupt ) ( s#dma_chan * , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_sg ) ( s#dma_chan * , s#scatterlist * , unsigned int , s#scatterlist * , unsigned int , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_slave_sg ) ( s#dma_chan * , s#scatterlist * , unsigned int , e#dma_transfer_direction , unsigned long , void * ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_cyclic ) ( s#dma_chan * , t#dma_addr_t , t#size_t , t#size_t , e#dma_transfer_direction , unsigned long , void * ) ; s#dma_async_tx_descriptor * ( * device_prep_interleaved_dma ) ( s#dma_chan * , s#dma_interleaved_template * , unsigned long ) ; int ( * device_control ) ( s#dma_chan * , e#dma_ctrl_cmd , unsigned long ) ; e#dma_status ( * device_tx_status ) ( s#dma_chan * , t#dma_cookie_t , s#dma_tx_state * ) ; void ( * device_issue_pending ) ( s#dma_chan * ) ; int ( * device_slave_caps ) ( s#dma_chan * , s#dma_slave_caps * ) ; } 
s#dma_chan_dev struct dma_chan_dev { s#dma_chan * chan ; s#device device ; int dev_id ; t#atomic_t * idr_ref ; } 
s#dma_chan_percpu struct dma_chan_percpu { unsigned long memcpy_count ; unsigned long bytes_transferred ; } 
s#dma_chan struct dma_chan { s#dma_device * device ; t#dma_cookie_t cookie ; t#dma_cookie_t completed_cookie ; int chan_id ; s#dma_chan_dev * dev ; s#list_head device_node ; s#dma_chan_percpu * local ; int client_count ; int table_count ; void * private ; } 
t#dma_async_tx_callback typedef void ( * dma_async_tx_callback ) ( void * ) 
s#dma_async_tx_descriptor struct dma_async_tx_descriptor { t#dma_cookie_t cookie ; e#dma_ctrl_flags flags ; t#dma_addr_t phys ; s#dma_chan * chan ; t#dma_cookie_t ( * tx_submit ) ( s#dma_async_tx_descriptor * ) ; t#dma_async_tx_callback callback ; void * callback_param ; } 
e#async_tx_flags enum async_tx_flags { ASYNC_TX_XOR_ZERO_DST = ( 1 << 0 ) , ASYNC_TX_XOR_DROP_DST = ( 1 << 1 ) , ASYNC_TX_ACK = ( 1 << 2 ) , ASYNC_TX_FENCE = ( 1 << 3 ) , } 
s#async_submit_ctl struct async_submit_ctl { e#async_tx_flags flags ; s#dma_async_tx_descriptor * depend_tx ; t#dma_async_tx_callback cb_fn ; void * cb_param ; void * scribble ; } 
async_memcpy s#dma_async_tx_descriptor * async_memcpy ( s#page * , s#page * , unsigned int , unsigned int , t#size_t , s#async_submit_ctl * ) 

/* crypto/async_tx/async_pq.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##tvec_base
s##workqueue_struct
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
async_gen_syndrome s#dma_async_tx_descriptor * async_gen_syndrome ( s#page * * , unsigned int , int , t#size_t , s#async_submit_ctl * ) 
async_syndrome_val s#dma_async_tx_descriptor * async_syndrome_val ( s#page * * , unsigned int , int , t#size_t , e#sum_check_flags * , s#page * , s#async_submit_ctl * ) 

/* crypto/async_tx/async_raid6_recov.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##tvec_base
s##workqueue_struct
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
async_raid6_2data_recov s#dma_async_tx_descriptor * async_raid6_2data_recov ( int , t#size_t , int , int , s#page * * , s#async_submit_ctl * ) 
async_raid6_datap_recov s#dma_async_tx_descriptor * async_raid6_datap_recov ( int , t#size_t , int , s#page * * , s#async_submit_ctl * ) 

/* crypto/async_tx/async_tx.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
e#dma_transaction_type enum dma_transaction_type { DMA_MEMCPY , DMA_XOR , DMA_PQ , DMA_XOR_VAL , DMA_PQ_VAL , DMA_INTERRUPT , DMA_SG , DMA_PRIVATE , DMA_ASYNC_TX , DMA_SLAVE , DMA_CYCLIC , DMA_INTERLEAVE , DMA_TX_TYPE_END , } 
__async_tx_find_channel s#dma_chan * __async_tx_find_channel ( s#async_submit_ctl * , e#dma_transaction_type ) 
async_tx_submit void async_tx_submit ( s#dma_chan * , s#dma_async_tx_descriptor * , s#async_submit_ctl * ) 
async_trigger_callback s#dma_async_tx_descriptor * async_trigger_callback ( s#async_submit_ctl * ) 
async_tx_quiesce void async_tx_quiesce ( s#dma_async_tx_descriptor * * ) 

/* crypto/async_tx/async_xor.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
async_xor s#dma_async_tx_descriptor * async_xor ( s#page * , s#page * * , unsigned int , int , t#size_t , s#async_submit_ctl * ) 
async_xor_val s#dma_async_tx_descriptor * async_xor_val ( s#page * , s#page * * , unsigned int , int , t#size_t , e#sum_check_flags * , s#async_submit_ctl * ) 

/* crypto/blkcipher.o */
s##aead_givcrypt_request
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##net_device
s##sec_path
s#blkcipher_walk struct blkcipher_walk { union { struct { s#page * page ; unsigned long offset ; } phys ; struct { t#u8 * page ; t#u8 * addr ; } virt ; } src , dst ; s#scatter_walk in ; unsigned int nbytes ; s#scatter_walk out ; unsigned int total ; void * page ; t#u8 * buffer ; t#u8 * iv ; int flags ; unsigned int blocksize ; } 
blkcipher_walk_done int blkcipher_walk_done ( s#blkcipher_desc * , s#blkcipher_walk * , int ) 
blkcipher_walk_virt int blkcipher_walk_virt ( s#blkcipher_desc * , s#blkcipher_walk * ) 
blkcipher_walk_phys int blkcipher_walk_phys ( s#blkcipher_desc * , s#blkcipher_walk * ) 
blkcipher_walk_virt_block int blkcipher_walk_virt_block ( s#blkcipher_desc * , s#blkcipher_walk * , unsigned int ) 
crypto_blkcipher_type extern const s#crypto_type crypto_blkcipher_type 
s##rtattr
skcipher_geniv_alloc s#crypto_instance * skcipher_geniv_alloc ( s#crypto_template * , s#rtattr * * , t#u32 , t#u32 ) 
skcipher_geniv_free void skcipher_geniv_free ( s#crypto_instance * ) 
skcipher_geniv_init int skcipher_geniv_init ( s#crypto_tfm * ) 
skcipher_geniv_exit void skcipher_geniv_exit ( s#crypto_tfm * ) 

/* crypto/blowfish_common.o */
s##scatterlist
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
blowfish_setkey int blowfish_setkey ( s#crypto_tfm * , const t#u8 * , unsigned int ) 

/* crypto/cast5_generic.o */
s#cast5_ctx struct cast5_ctx { t#u32 Km [ 16 ] ; t#u8 Kr [ 16 ] ; int rr ; } 
__cast5_encrypt void __cast5_encrypt ( s#cast5_ctx * , t#u8 * , const t#u8 * ) 
__cast5_decrypt void __cast5_decrypt ( s#cast5_ctx * , t#u8 * , const t#u8 * ) 
s##scatterlist
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
cast5_setkey int cast5_setkey ( s#crypto_tfm * , const t#u8 * , unsigned int ) 

/* crypto/cast6_generic.o */
s#cast6_ctx struct cast6_ctx { t#u32 Km [ 12 ] [ 4 ] ; t#u8 Kr [ 12 ] [ 4 ] ; } 
__cast6_setkey int __cast6_setkey ( s#cast6_ctx * , const t#u8 * , unsigned int , t#u32 * ) 
s##scatterlist
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
cast6_setkey int cast6_setkey ( s#crypto_tfm * , const t#u8 * , unsigned int ) 
__cast6_encrypt void __cast6_encrypt ( s#cast6_ctx * , t#u8 * , const t#u8 * ) 
__cast6_decrypt void __cast6_decrypt ( s#cast6_ctx * , t#u8 * , const t#u8 * ) 

/* crypto/cast_common.o */
cast_s1 extern const t#u32 cast_s1 [ 256 ] 
cast_s2 extern const t#u32 cast_s2 [ 256 ] 
cast_s3 extern const t#u32 cast_s3 [ 256 ] 
cast_s4 extern const t#u32 cast_s4 [ 256 ] 

/* crypto/crct10dif_common.o */
crc_t10dif_generic t#__u16 crc_t10dif_generic ( t#__u16 , const unsigned char * , t#size_t ) 

/* crypto/cryptd.o */
s##skcipher_givcrypt_request
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##sock
s##net_device
s##sec_path
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s#cryptd_ablkcipher struct cryptd_ablkcipher { s#crypto_ablkcipher base ; } 
cryptd_alloc_ablkcipher s#cryptd_ablkcipher * cryptd_alloc_ablkcipher ( const char * , t#u32 , t#u32 ) 
cryptd_ablkcipher_child s#crypto_blkcipher * cryptd_ablkcipher_child ( s#cryptd_ablkcipher * ) 
cryptd_free_ablkcipher void cryptd_free_ablkcipher ( s#cryptd_ablkcipher * ) 
s#cryptd_ahash struct cryptd_ahash { s#crypto_ahash base ; } 
cryptd_alloc_ahash s#cryptd_ahash * cryptd_alloc_ahash ( const char * , t#u32 , t#u32 ) 
s#crypto_shash struct crypto_shash { unsigned int descsize ; s#crypto_tfm base ; } 
cryptd_ahash_child s#crypto_shash * cryptd_ahash_child ( s#cryptd_ahash * ) 
s#shash_desc struct shash_desc { s#crypto_shash * tfm ; t#u32 flags ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
cryptd_shash_desc s#shash_desc * cryptd_shash_desc ( s#ahash_request * ) 
cryptd_free_ahash void cryptd_free_ahash ( s#cryptd_ahash * ) 
s#cryptd_aead struct cryptd_aead { s#crypto_aead base ; } 
cryptd_alloc_aead s#cryptd_aead * cryptd_alloc_aead ( const char * , t#u32 , t#u32 ) 
cryptd_aead_child s#crypto_aead * cryptd_aead_child ( s#cryptd_aead * ) 
cryptd_free_aead void cryptd_free_aead ( s#cryptd_aead * ) 

/* crypto/crypto_wq.o */
s##workqueue_struct
kcrypto_wq extern s#workqueue_struct * kcrypto_wq 

/* crypto/des_generic.o */
des_ekey extern unsigned long des_ekey ( t#u32 * , const t#u8 * ) 

/* crypto/fips.o */
fips_enabled extern int fips_enabled 

/* crypto/gf128mul.o */
t#be128 typedef struct { t#__be64 a , b ; } be128 
gf128mul_x_ble void gf128mul_x_ble ( t#be128 * , const t#be128 * ) 
gf128mul_lle void gf128mul_lle ( t#be128 * , const t#be128 * ) 
gf128mul_bbe void gf128mul_bbe ( t#be128 * , const t#be128 * ) 
s#gf128mul_4k struct gf128mul_4k { t#be128 t [ 256 ] ; } 
s#gf128mul_64k struct gf128mul_64k { s#gf128mul_4k * t [ 16 ] ; } 
gf128mul_init_64k_lle s#gf128mul_64k * gf128mul_init_64k_lle ( const t#be128 * ) 
gf128mul_init_64k_bbe s#gf128mul_64k * gf128mul_init_64k_bbe ( const t#be128 * ) 
gf128mul_free_64k void gf128mul_free_64k ( s#gf128mul_64k * ) 
gf128mul_64k_lle void gf128mul_64k_lle ( t#be128 * , s#gf128mul_64k * ) 
gf128mul_64k_bbe void gf128mul_64k_bbe ( t#be128 * , s#gf128mul_64k * ) 
gf128mul_init_4k_lle s#gf128mul_4k * gf128mul_init_4k_lle ( const t#be128 * ) 
gf128mul_init_4k_bbe s#gf128mul_4k * gf128mul_init_4k_bbe ( const t#be128 * ) 
gf128mul_4k_lle void gf128mul_4k_lle ( t#be128 * , s#gf128mul_4k * ) 
gf128mul_4k_bbe void gf128mul_4k_bbe ( t#be128 * , s#gf128mul_4k * ) 

/* crypto/lrw.o */
s#lrw_table_ctx struct lrw_table_ctx { s#gf128mul_64k * table ; t#be128 mulinc [ 128 ] ; } 
lrw_init_table int lrw_init_table ( s#lrw_table_ctx * , const t#u8 * ) 
lrw_free_table void lrw_free_table ( s#lrw_table_ctx * ) 
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##sock
s##net_device
s##sec_path
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s#lrw_crypt_req struct lrw_crypt_req { t#be128 * tbuf ; unsigned int tbuflen ; s#lrw_table_ctx * table_ctx ; void * crypt_ctx ; void ( * crypt_fn ) ( void * , t#u8 * , unsigned int ) ; } 
lrw_crypt int lrw_crypt ( s#blkcipher_desc * , s#scatterlist * , s#scatterlist * , unsigned int , s#lrw_crypt_req * ) 

/* crypto/pcompress.o */
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##net_device
s##sec_path
s#crypto_pcomp struct crypto_pcomp { s#crypto_tfm base ; } 
crypto_alloc_pcomp extern s#crypto_pcomp * crypto_alloc_pcomp ( const char * , t#u32 , t#u32 ) 
s#comp_request struct comp_request { const void * next_in ; void * next_out ; unsigned int avail_in ; unsigned int avail_out ; } 
s#pcomp_alg struct pcomp_alg { int ( * compress_setup ) ( s#crypto_pcomp * , void * , unsigned int ) ; int ( * compress_init ) ( s#crypto_pcomp * ) ; int ( * compress_update ) ( s#crypto_pcomp * , s#comp_request * ) ; int ( * compress_final ) ( s#crypto_pcomp * , s#comp_request * ) ; int ( * decompress_setup ) ( s#crypto_pcomp * , void * , unsigned int ) ; int ( * decompress_init ) ( s#crypto_pcomp * ) ; int ( * decompress_update ) ( s#crypto_pcomp * , s#comp_request * ) ; int ( * decompress_final ) ( s#crypto_pcomp * , s#comp_request * ) ; s#crypto_alg base ; } 
crypto_register_pcomp extern int crypto_register_pcomp ( s#pcomp_alg * ) 
crypto_unregister_pcomp extern int crypto_unregister_pcomp ( s#pcomp_alg * ) 

/* crypto/rng.o */
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##sock
s##net_device
s##sec_path
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
crypto_default_rng extern s#crypto_rng * crypto_default_rng 
crypto_rng_type extern const s#crypto_type crypto_rng_type 
crypto_get_default_rng int crypto_get_default_rng ( void ) 
crypto_put_default_rng void crypto_put_default_rng ( void ) 

/* crypto/scatterwalk.o */
scatterwalk_start void scatterwalk_start ( s#scatter_walk * , s#scatterlist * ) 
scatterwalk_map void * scatterwalk_map ( s#scatter_walk * ) 
scatterwalk_done void scatterwalk_done ( s#scatter_walk * , int , int ) 
scatterwalk_copychunks void scatterwalk_copychunks ( void * , s#scatter_walk * , t#size_t , int ) 
scatterwalk_map_and_copy void scatterwalk_map_and_copy ( void * , s#scatterlist * , unsigned int , unsigned int , int ) 
scatterwalk_bytes_sglen int scatterwalk_bytes_sglen ( s#scatterlist * , int ) 

/* crypto/serpent_generic.o */
s#serpent_ctx struct serpent_ctx { t#u32 expkey [ 132 ] ; } 
__serpent_setkey int __serpent_setkey ( s#serpent_ctx * , const t#u8 * , unsigned int ) 
s##scatterlist
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
serpent_setkey int serpent_setkey ( s#crypto_tfm * , const t#u8 * , unsigned int ) 
__serpent_encrypt void __serpent_encrypt ( s#serpent_ctx * , t#u8 * , const t#u8 * ) 
__serpent_decrypt void __serpent_decrypt ( s#serpent_ctx * , t#u8 * , const t#u8 * ) 

/* crypto/sha1_generic.o */
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##sock
s##net_device
s##sec_path
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
crypto_sha1_update extern int crypto_sha1_update ( s#shash_desc * , const t#u8 * , unsigned int ) 

/* crypto/sha256_generic.o */
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##sock
s##net_device
s##sec_path
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
crypto_sha256_update extern int crypto_sha256_update ( s#shash_desc * , const t#u8 * , unsigned int ) 

/* crypto/sha512_generic.o */
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##sock
s##net_device
s##sec_path
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
crypto_sha512_update extern int crypto_sha512_update ( s#shash_desc * , const t#u8 * , unsigned int ) 

/* crypto/shash.o */
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##net_device
s##sec_path
crypto_shash_setkey int crypto_shash_setkey ( s#crypto_shash * , const t#u8 * , unsigned int ) 
crypto_shash_update int crypto_shash_update ( s#shash_desc * , const t#u8 * , unsigned int ) 
crypto_shash_final int crypto_shash_final ( s#shash_desc * , t#u8 * ) 
crypto_shash_finup int crypto_shash_finup ( s#shash_desc * , const t#u8 * , unsigned int , t#u8 * ) 
crypto_shash_digest int crypto_shash_digest ( s#shash_desc * , const t#u8 * , unsigned int , t#u8 * ) 
shash_ahash_update int shash_ahash_update ( s#ahash_request * , s#shash_desc * ) 
shash_ahash_finup int shash_ahash_finup ( s#ahash_request * , s#shash_desc * ) 
shash_ahash_digest int shash_ahash_digest ( s#ahash_request * , s#shash_desc * ) 
crypto_alloc_shash s#crypto_shash * crypto_alloc_shash ( const char * , t#u32 , t#u32 ) 
s#shash_alg struct shash_alg { int ( * init ) ( s#shash_desc * ) ; int ( * update ) ( s#shash_desc * , const t#u8 * , unsigned int ) ; int ( * final ) ( s#shash_desc * , t#u8 * ) ; int ( * finup ) ( s#shash_desc * , const t#u8 * , unsigned int , t#u8 * ) ; int ( * digest ) ( s#shash_desc * , const t#u8 * , unsigned int , t#u8 * ) ; int ( * export ) ( s#shash_desc * , void * ) ; int ( * import ) ( s#shash_desc * , const void * ) ; int ( * setkey ) ( s#crypto_shash * , const t#u8 * , unsigned int ) ; unsigned int descsize ; unsigned int digestsize __attribute__ ( ( aligned ( __alignof__ ( struct hash_alg_common ) ) ) ) ; unsigned int statesize ; s#crypto_alg base ; } 
crypto_register_shash int crypto_register_shash ( s#shash_alg * ) 
crypto_unregister_shash int crypto_unregister_shash ( s#shash_alg * ) 
crypto_register_shashes int crypto_register_shashes ( s#shash_alg * , int ) 
crypto_unregister_shashes int crypto_unregister_shashes ( s#shash_alg * , int ) 
s##rtattr
s#shash_instance struct shash_instance { s#shash_alg alg ; } 
shash_register_instance int shash_register_instance ( s#crypto_template * , s#shash_instance * ) 
shash_free_instance void shash_free_instance ( s#crypto_instance * ) 
s#crypto_shash_spawn struct crypto_shash_spawn { s#crypto_spawn base ; } 
crypto_init_shash_spawn int crypto_init_shash_spawn ( s#crypto_shash_spawn * , s#shash_alg * , s#crypto_instance * ) 
shash_attr_alg s#shash_alg * shash_attr_alg ( s#rtattr * , t#u32 , t#u32 ) 

/* crypto/testmgr.o */
alg_test int alg_test ( const char * , const char * , t#u32 , t#u32 ) 

/* crypto/twofish_common.o */
s#twofish_ctx struct twofish_ctx { t#u32 s [ 4 ] [ 256 ] , w [ 8 ] , k [ 32 ] ; } 
__twofish_setkey int __twofish_setkey ( s#twofish_ctx * , const t#u8 * , unsigned int , t#u32 * ) 
s##scatterlist
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
twofish_setkey int twofish_setkey ( s#crypto_tfm * , const t#u8 * , unsigned int ) 

/* crypto/xor.o */
xor_blocks extern void xor_blocks ( unsigned int , unsigned int , void * , void * * ) 

/* crypto/xts.o */
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##sock
s##net_device
s##sec_path
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s#xts_crypt_req struct xts_crypt_req { t#be128 * tbuf ; unsigned int tbuflen ; void * tweak_ctx ; void ( * tweak_fn ) ( void * , t#u8 * , const t#u8 * ) ; void * crypt_ctx ; void ( * crypt_fn ) ( void * , t#u8 * , unsigned int ) ; } 
xts_crypt int xts_crypt ( s#blkcipher_desc * , s#scatterlist * , s#scatterlist * , unsigned int , s#xts_crypt_req * ) 

/* drivers/ata/libahci.o */
ahci_ignore_sss extern int ahci_ignore_sss 
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
ahci_shost_attrs extern s#device_attribute * ahci_shost_attrs [ ] 
ahci_sdev_attrs extern s#device_attribute * ahci_sdev_attrs [ ] 
s##scsi_host_cmd_pool
s##scsi_device
s#scsi_data_buffer struct scsi_data_buffer { s#sg_table table ; unsigned length ; int resid ; } 
s#scsi_pointer struct scsi_pointer { char * ptr ; int this_residual ; s#scatterlist * buffer ; int buffers_residual ; t#dma_addr_t dma_handle ; volatile int Status ; volatile int Message ; volatile int have_data_in ; volatile int sent_command ; volatile int phase ; } 
s#scsi_cmnd struct scsi_cmnd { s#scsi_device * device ; s#list_head list ; s#list_head eh_entry ; s#delayed_work abort_work ; int eh_eflags ; unsigned long serial_number ; unsigned long jiffies_at_alloc ; int retries ; int allowed ; unsigned char prot_op ; unsigned char prot_type ; unsigned short cmd_len ; e#dma_data_direction sc_data_direction ; unsigned char * cmnd ; s#scsi_data_buffer sdb ; s#scsi_data_buffer * prot_sdb ; unsigned underflow ; unsigned transfersize ; s#request * request ; unsigned char * sense_buffer ; void ( * scsi_done ) ( s#scsi_cmnd * ) ; s#scsi_pointer SCp ; unsigned char * host_scribble ; int result ; unsigned char tag ; } 
s##scsi_target
s##proc_dir_entry
s#scsi_host_template struct scsi_host_template { s#module * module ; const char * name ; int ( * detect ) ( s#scsi_host_template * ) ; int ( * release ) ( s#Scsi_Host * ) ; const char * ( * info ) ( s#Scsi_Host * ) ; int ( * ioctl ) ( s#scsi_device * , int , void * ) ; int ( * compat_ioctl ) ( s#scsi_device * , int , void * ) ; int ( * queuecommand ) ( s#Scsi_Host * , s#scsi_cmnd * ) ; int ( * transfer_response ) ( s#scsi_cmnd * , void ( * ) ( s#scsi_cmnd * ) ) ; int ( * eh_abort_handler ) ( s#scsi_cmnd * ) ; int ( * eh_device_reset_handler ) ( s#scsi_cmnd * ) ; int ( * eh_target_reset_handler ) ( s#scsi_cmnd * ) ; int ( * eh_bus_reset_handler ) ( s#scsi_cmnd * ) ; int ( * eh_host_reset_handler ) ( s#scsi_cmnd * ) ; int ( * slave_alloc ) ( s#scsi_device * ) ; int ( * slave_configure ) ( s#scsi_device * ) ; void ( * slave_destroy ) ( s#scsi_device * ) ; int ( * target_alloc ) ( s#scsi_target * ) ; void ( * target_destroy ) ( s#scsi_target * ) ; int ( * scan_finished ) ( s#Scsi_Host * , unsigned long ) ; void ( * scan_start ) ( s#Scsi_Host * ) ; int ( * change_queue_depth ) ( s#scsi_device * , int , int ) ; int ( * change_queue_type ) ( s#scsi_device * , int ) ; int ( * bios_param ) ( s#scsi_device * , s#block_device * , t#sector_t , int [ ] ) ; void ( * unlock_native_capacity ) ( s#scsi_device * ) ; int ( * show_info ) ( s#seq_file * , s#Scsi_Host * ) ; int ( * write_info ) ( s#Scsi_Host * , char * , int ) ; e#blk_eh_timer_return ( * eh_timed_out ) ( s#scsi_cmnd * ) ; int ( * host_reset ) ( s#Scsi_Host * , int ) ; const char * proc_name ; s#proc_dir_entry * proc_dir ; int can_queue ; int this_id ; unsigned short sg_tablesize ; unsigned short sg_prot_tablesize ; unsigned short max_sectors ; unsigned long dma_boundary ; short cmd_per_lun ; unsigned char present ; unsigned supported_mode : 2 ; unsigned unchecked_isa_dma : 1 ; unsigned use_clustering : 1 ; unsigned emulated : 1 ; unsigned skip_settle_delay : 1 ; unsigned ordered_tag : 1 ; unsigned no_write_same : 1 ; unsigned no_async_abort : 1 ; unsigned int max_host_blocked ; s#device_attribute * * shost_attrs ; s#device_attribute * * sdev_attrs ; s#list_head legacy_hosts ; t#u64 vendor_id ; } 
s##scsi_transport_template
e#scsi_host_state enum scsi_host_state { SHOST_CREATED = 1 , SHOST_RUNNING , SHOST_CANCEL , SHOST_DEL , SHOST_RECOVERY , SHOST_CANCEL_RECOVERY , SHOST_DEL_RECOVERY , } 
s#Scsi_Host struct Scsi_Host { s#list_head __devices ; s#list_head __targets ; s#scsi_host_cmd_pool * cmd_pool ; t#spinlock_t free_list_lock ; s#list_head free_list ; s#list_head starved_list ; t#spinlock_t default_lock ; t#spinlock_t * host_lock ; s#mutex scan_mutex ; s#list_head eh_cmd_q ; s#task_struct * ehandler ; s#completion * eh_action ; t#wait_queue_head_t host_wait ; s#scsi_host_template * hostt ; s#scsi_transport_template * transportt ; s#blk_queue_tag * bqt ; unsigned int host_busy ; unsigned int host_failed ; unsigned int host_eh_scheduled ; unsigned int host_no ; int eh_deadline ; unsigned long last_reset ; unsigned int max_id ; unsigned int max_lun ; unsigned int max_channel ; unsigned int unique_id ; unsigned short max_cmd_len ; int this_id ; int can_queue ; short cmd_per_lun ; short unsigned int sg_tablesize ; short unsigned int sg_prot_tablesize ; short unsigned int max_sectors ; unsigned long dma_boundary ; unsigned long cmd_serial_number ; unsigned active_mode : 2 ; unsigned unchecked_isa_dma : 1 ; unsigned use_clustering : 1 ; unsigned use_blk_tcq : 1 ; unsigned host_self_blocked : 1 ; unsigned reverse_ordering : 1 ; unsigned ordered_tag : 1 ; unsigned tmf_in_progress : 1 ; unsigned async_scan : 1 ; unsigned eh_noresume : 1 ; unsigned no_write_same : 1 ; char work_q_name [ 20 ] ; s#workqueue_struct * work_q ; s#workqueue_struct * tmf_work_q ; unsigned int host_blocked ; unsigned int max_host_blocked ; unsigned int prot_capabilities ; unsigned char prot_guard_type ; s#request_queue * uspace_req_q ; unsigned long base ; unsigned long io_port ; unsigned char n_io_port ; unsigned char dma_channel ; unsigned int irq ; e#scsi_host_state shost_state ; s#device shost_gendev , shost_dev ; s#list_head sht_legacy_list ; void * shost_data ; s#device * dma_dev ; unsigned long hostdata [ 0 ] __attribute__ ( ( aligned ( sizeof ( unsigned long ) ) ) ) ; } 
s#ata_ioports struct ata_ioports { void * cmd_addr ; void * data_addr ; void * error_addr ; void * feature_addr ; void * nsect_addr ; void * lbal_addr ; void * lbam_addr ; void * lbah_addr ; void * device_addr ; void * status_addr ; void * command_addr ; void * altstatus_addr ; void * ctl_addr ; void * bmdma_addr ; void * scr_addr ; } 
e#ata_lpm_policy enum ata_lpm_policy { ATA_LPM_UNKNOWN , ATA_LPM_MAX_POWER , ATA_LPM_MED_POWER , ATA_LPM_MIN_POWER , } 
E#ATA_ID_WORDS 256 
E#SATA_PMP_GSCR_DWORDS 128 
E#ATA_LOG_DEVSLP_SIZE 0x08 
E#ATA_LOG_NCQ_SEND_RECV_SIZE 0x10 
s#ata_ering_entry struct ata_ering_entry { unsigned int eflags ; unsigned int err_mask ; t#u64 timestamp ; } 
E#ATA_ERING_SIZE 32 
s#ata_ering struct ata_ering { int cursor ; s#ata_ering_entry ring [ E#ATA_ERING_SIZE ] ; } 
s#ata_device struct ata_device { s#ata_link * link ; unsigned int devno ; unsigned int horkage ; unsigned long flags ; s#scsi_device * sdev ; void * private_data ; s#device tdev ; t#u64 n_sectors ; t#u64 n_native_sectors ; unsigned int class ; unsigned long unpark_deadline ; t#u8 pio_mode ; t#u8 dma_mode ; t#u8 xfer_mode ; unsigned int xfer_shift ; unsigned int multi_count ; unsigned int max_sectors ; unsigned int cdb_len ; unsigned long pio_mask ; unsigned long mwdma_mask ; unsigned long udma_mask ; t#u16 cylinders ; t#u16 heads ; t#u16 sectors ; union { t#u16 id [ E#ATA_ID_WORDS ] ; t#u32 gscr [ E#SATA_PMP_GSCR_DWORDS ] ; } ; t#u8 devslp_timing [ E#ATA_LOG_DEVSLP_SIZE ] ; t#u8 ncq_send_recv_cmds [ E#ATA_LOG_NCQ_SEND_RECV_SIZE ] ; int spdn_cnt ; s#ata_ering ering ; } 
E#ATA_MAX_DEVICES 2 
E#ATA_EH_DESC_LEN 80 
s#ata_eh_info struct ata_eh_info { s#ata_device * dev ; t#u32 serror ; unsigned int err_mask ; unsigned int action ; unsigned int dev_action [ E#ATA_MAX_DEVICES ] ; unsigned int flags ; unsigned int probe_mask ; char desc [ E#ATA_EH_DESC_LEN ] ; int desc_len ; } 
E#ATA_EH_CMD_TIMEOUT_TABLE_SIZE 6 
s#ata_eh_context struct ata_eh_context { s#ata_eh_info i ; int tries [ E#ATA_MAX_DEVICES ] ; int cmd_timeout_idx [ E#ATA_MAX_DEVICES ] [ E#ATA_EH_CMD_TIMEOUT_TABLE_SIZE ] ; unsigned int classes [ E#ATA_MAX_DEVICES ] ; unsigned int did_probe_mask ; unsigned int unloaded_mask ; unsigned int saved_ncq_enabled ; t#u8 saved_xfer_mode [ E#ATA_MAX_DEVICES ] ; unsigned long last_reset ; } 
s#ata_link struct ata_link { s#ata_port * ap ; int pmp ; s#device tdev ; unsigned int active_tag ; t#u32 sactive ; unsigned int flags ; t#u32 saved_scontrol ; unsigned int hw_sata_spd_limit ; unsigned int sata_spd_limit ; unsigned int sata_spd ; e#ata_lpm_policy lpm_policy ; s#ata_eh_info eh_info ; s#ata_eh_context eh_context ; s#ata_device device [ E#ATA_MAX_DEVICES ] ; } 
t#__le32 typedef t#__u32 __le32 
s#ata_bmdma_prd struct ata_bmdma_prd { t#__le32 addr ; t#__le32 flags_len ; } 
E#ATA_MAX_QUEUE 32 
s#ata_port_stats struct ata_port_stats { unsigned long unhandled_irq ; unsigned long idle_irq ; unsigned long rw_reqbuf ; } 
s#ata_host struct ata_host { t#spinlock_t lock ; s#device * dev ; void * const * iomap ; unsigned int n_ports ; unsigned int n_tags ; void * private_data ; s#ata_port_operations * ops ; unsigned long flags ; s#mutex eh_mutex ; s#task_struct * eh_owner ; s#ata_port * simplex_claimed ; s#ata_port * ports [ 0 ] ; } 
E#ATA_SECT_SIZE 512 
s#ata_port struct ata_port { s#Scsi_Host * scsi_host ; s#ata_port_operations * ops ; t#spinlock_t * lock ; unsigned long flags ; unsigned int pflags ; unsigned int print_id ; unsigned int local_port_no ; unsigned int port_no ; s#ata_ioports ioaddr ; t#u8 ctl ; t#u8 last_ctl ; s#ata_link * sff_pio_task_link ; s#delayed_work sff_pio_task ; s#ata_bmdma_prd * bmdma_prd ; t#dma_addr_t bmdma_prd_dma ; unsigned int pio_mask ; unsigned int mwdma_mask ; unsigned int udma_mask ; unsigned int cbl ; s#ata_queued_cmd qcmd [ E#ATA_MAX_QUEUE ] ; unsigned long qc_allocated ; unsigned int qc_active ; int nr_active_links ; unsigned int last_tag ; s#ata_link link ; s#ata_link * slave_link ; int nr_pmp_links ; s#ata_link * pmp_link ; s#ata_link * excl_link ; s#ata_port_stats stats ; s#ata_host * host ; s#device * dev ; s#device tdev ; s#mutex scsi_scan_mutex ; s#delayed_work hotplug_task ; s#work_struct scsi_rescan_task ; unsigned int hsm_task_state ; t#u32 msg_enable ; s#list_head eh_done_q ; t#wait_queue_head_t eh_wait_q ; int eh_tries ; s#completion park_req_pending ; t#pm_message_t pm_mesg ; int * pm_result ; e#ata_lpm_policy target_lpm_policy ; s#timer_list fastdrain_timer ; unsigned long fastdrain_cnt ; int em_message_type ; void * private_data ; t#u8 sector_buf [ E#ATA_SECT_SIZE ] __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; } 
s#ata_taskfile struct ata_taskfile { unsigned long flags ; t#u8 protocol ; t#u8 ctl ; t#u8 hob_feature ; t#u8 hob_nsect ; t#u8 hob_lbal ; t#u8 hob_lbam ; t#u8 hob_lbah ; t#u8 feature ; t#u8 nsect ; t#u8 lbal ; t#u8 lbam ; t#u8 lbah ; t#u8 device ; t#u8 command ; t#u32 auxiliary ; } 
E#ATAPI_CDB_LEN 16 
t#ata_qc_cb_t typedef void ( * ata_qc_cb_t ) ( s#ata_queued_cmd * ) 
s#ata_queued_cmd struct ata_queued_cmd { s#ata_port * ap ; s#ata_device * dev ; s#scsi_cmnd * scsicmd ; void ( * scsidone ) ( s#scsi_cmnd * ) ; s#ata_taskfile tf ; t#u8 cdb [ E#ATAPI_CDB_LEN ] ; unsigned long flags ; unsigned int tag ; unsigned int n_elem ; unsigned int orig_n_elem ; int dma_dir ; unsigned int sect_size ; unsigned int nbytes ; unsigned int extrabytes ; unsigned int curbytes ; s#scatterlist sgent ; s#scatterlist * sg ; s#scatterlist * cursg ; unsigned int cursg_ofs ; unsigned int err_mask ; s#ata_taskfile result_tf ; t#ata_qc_cb_t complete_fn ; void * private_data ; void * lldd_task ; } 
t#ata_prereset_fn_t typedef int ( * ata_prereset_fn_t ) ( s#ata_link * , unsigned long ) 
t#ata_reset_fn_t typedef int ( * ata_reset_fn_t ) ( s#ata_link * , unsigned int * , unsigned long ) 
t#ata_postreset_fn_t typedef void ( * ata_postreset_fn_t ) ( s#ata_link * , unsigned int * ) 
e#sw_activity enum sw_activity { OFF , BLINK_ON , BLINK_OFF , } 
s#ata_port_operations struct ata_port_operations { int ( * qc_defer ) ( s#ata_queued_cmd * ) ; int ( * check_atapi_dma ) ( s#ata_queued_cmd * ) ; void ( * qc_prep ) ( s#ata_queued_cmd * ) ; unsigned int ( * qc_issue ) ( s#ata_queued_cmd * ) ; t#bool ( * qc_fill_rtf ) ( s#ata_queued_cmd * ) ; int ( * cable_detect ) ( s#ata_port * ) ; unsigned long ( * mode_filter ) ( s#ata_device * , unsigned long ) ; void ( * set_piomode ) ( s#ata_port * , s#ata_device * ) ; void ( * set_dmamode ) ( s#ata_port * , s#ata_device * ) ; int ( * set_mode ) ( s#ata_link * , s#ata_device * * ) ; unsigned int ( * read_id ) ( s#ata_device * , s#ata_taskfile * , t#u16 * ) ; void ( * dev_config ) ( s#ata_device * ) ; void ( * freeze ) ( s#ata_port * ) ; void ( * thaw ) ( s#ata_port * ) ; t#ata_prereset_fn_t prereset ; t#ata_reset_fn_t softreset ; t#ata_reset_fn_t hardreset ; t#ata_postreset_fn_t postreset ; t#ata_prereset_fn_t pmp_prereset ; t#ata_reset_fn_t pmp_softreset ; t#ata_reset_fn_t pmp_hardreset ; t#ata_postreset_fn_t pmp_postreset ; void ( * error_handler ) ( s#ata_port * ) ; void ( * lost_interrupt ) ( s#ata_port * ) ; void ( * post_internal_cmd ) ( s#ata_queued_cmd * ) ; void ( * sched_eh ) ( s#ata_port * ) ; void ( * end_eh ) ( s#ata_port * ) ; int ( * scr_read ) ( s#ata_link * , unsigned int , t#u32 * ) ; int ( * scr_write ) ( s#ata_link * , unsigned int , t#u32 ) ; void ( * pmp_attach ) ( s#ata_port * ) ; void ( * pmp_detach ) ( s#ata_port * ) ; int ( * set_lpm ) ( s#ata_link * , e#ata_lpm_policy , unsigned ) ; int ( * port_suspend ) ( s#ata_port * , t#pm_message_t ) ; int ( * port_resume ) ( s#ata_port * ) ; int ( * port_start ) ( s#ata_port * ) ; void ( * port_stop ) ( s#ata_port * ) ; void ( * host_stop ) ( s#ata_host * ) ; void ( * sff_dev_select ) ( s#ata_port * , unsigned int ) ; void ( * sff_set_devctl ) ( s#ata_port * , t#u8 ) ; t#u8 ( * sff_check_status ) ( s#ata_port * ) ; t#u8 ( * sff_check_altstatus ) ( s#ata_port * ) ; void ( * sff_tf_load ) ( s#ata_port * , const s#ata_taskfile * ) ; void ( * sff_tf_read ) ( s#ata_port * , s#ata_taskfile * ) ; void ( * sff_exec_command ) ( s#ata_port * , const s#ata_taskfile * ) ; unsigned int ( * sff_data_xfer ) ( s#ata_device * , unsigned char * , unsigned int , int ) ; void ( * sff_irq_on ) ( s#ata_port * ) ; t#bool ( * sff_irq_check ) ( s#ata_port * ) ; void ( * sff_irq_clear ) ( s#ata_port * ) ; void ( * sff_drain_fifo ) ( s#ata_queued_cmd * ) ; void ( * bmdma_setup ) ( s#ata_queued_cmd * ) ; void ( * bmdma_start ) ( s#ata_queued_cmd * ) ; void ( * bmdma_stop ) ( s#ata_queued_cmd * ) ; t#u8 ( * bmdma_status ) ( s#ata_port * ) ; t#ssize_t ( * em_show ) ( s#ata_port * , char * ) ; t#ssize_t ( * em_store ) ( s#ata_port * , const char * , t#size_t ) ; t#ssize_t ( * sw_activity_show ) ( s#ata_device * , char * ) ; t#ssize_t ( * sw_activity_store ) ( s#ata_device * , e#sw_activity ) ; t#ssize_t ( * transmit_led_message ) ( s#ata_port * , t#u32 , t#ssize_t ) ; void ( * phy_reset ) ( s#ata_port * ) ; void ( * eng_timeout ) ( s#ata_port * ) ; const s#ata_port_operations * inherits ; } 
ahci_ops extern s#ata_port_operations ahci_ops 
ahci_pmp_retry_srst_ops extern s#ata_port_operations ahci_pmp_retry_srst_ops 
ahci_em_messages int ahci_em_messages 
s##clk
s#ahci_host_priv struct ahci_host_priv { void * mmio ; unsigned int flags ; t#u32 cap ; t#u32 cap2 ; t#u32 port_map ; t#u32 saved_cap ; t#u32 saved_cap2 ; t#u32 saved_port_map ; t#u32 em_loc ; t#u32 em_buf_sz ; t#u32 em_msg_type ; s#clk * clk ; void * plat_data ; } 
ahci_save_initial_config void ahci_save_initial_config ( s#device * , s#ahci_host_priv * , unsigned int , unsigned int ) 
ahci_start_engine void ahci_start_engine ( s#ata_port * ) 
ahci_stop_engine int ahci_stop_engine ( s#ata_port * ) 
ahci_reset_controller int ahci_reset_controller ( s#ata_host * ) 
ahci_reset_em int ahci_reset_em ( s#ata_host * ) 
ahci_init_controller void ahci_init_controller ( s#ata_host * ) 
ahci_dev_classify unsigned int ahci_dev_classify ( s#ata_port * ) 
s#ahci_cmd_hdr struct ahci_cmd_hdr { t#__le32 opts ; t#__le32 status ; t#__le32 tbl_addr ; t#__le32 tbl_addr_hi ; t#__le32 reserved [ 4 ] ; } 
s#ahci_em_priv struct ahci_em_priv { e#sw_activity blink_policy ; s#timer_list timer ; unsigned long saved_activity ; unsigned long activity ; unsigned long led_state ; } 
E#EM_MAX_SLOTS 8 
s#ahci_port_priv struct ahci_port_priv { s#ata_link * active_link ; s#ahci_cmd_hdr * cmd_slot ; t#dma_addr_t cmd_slot_dma ; void * cmd_tbl ; t#dma_addr_t cmd_tbl_dma ; void * rx_fis ; t#dma_addr_t rx_fis_dma ; unsigned int ncq_saw_d2h : 1 ; unsigned int ncq_saw_dmas : 1 ; unsigned int ncq_saw_sdb : 1 ; t#u32 intr_status ; t#spinlock_t lock ; t#u32 intr_mask ; t#bool fbs_supported ; t#bool fbs_enabled ; int fbs_last_dev ; s#ahci_em_priv em_priv [ E#EM_MAX_SLOTS ] ; char * irq_desc ; } 
ahci_fill_cmd_slot void ahci_fill_cmd_slot ( s#ahci_port_priv * , unsigned int , t#u32 ) 
ahci_kick_engine int ahci_kick_engine ( s#ata_port * ) 
ahci_check_ready int ahci_check_ready ( s#ata_link * ) 
ahci_do_softreset int ahci_do_softreset ( s#ata_link * , unsigned int * , int , unsigned long , int ( * ) ( s#ata_link * ) ) 
e#irqreturn enum irqreturn { IRQ_NONE = ( 0 << 0 ) , IRQ_HANDLED = ( 1 << 0 ) , IRQ_WAKE_THREAD = ( 1 << 1 ) , } 
t#irqreturn_t typedef e#irqreturn irqreturn_t 
ahci_thread_fn t#irqreturn_t ahci_thread_fn ( int , void * ) 
ahci_hw_interrupt t#irqreturn_t ahci_hw_interrupt ( int , void * ) 
ahci_interrupt t#irqreturn_t ahci_interrupt ( int , void * ) 
ahci_port_resume int ahci_port_resume ( s#ata_port * ) 
ahci_print_info void ahci_print_info ( s#ata_host * , const char * ) 
s#ata_port_info struct ata_port_info { unsigned long flags ; unsigned long link_flags ; unsigned long pio_mask ; unsigned long mwdma_mask ; unsigned long udma_mask ; s#ata_port_operations * port_ops ; void * private_data ; } 
ahci_set_em_messages void ahci_set_em_messages ( s#ahci_host_priv * , s#ata_port_info * ) 

/* drivers/ata/libata-core.o */
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##scsi_device
s##scsi_target
s##scsi_transport_template
ata_dev_set_feature extern unsigned int ata_dev_set_feature ( s#ata_device * , t#u8 , t#u8 ) 
ata_sas_port_async_suspend extern int ata_sas_port_async_suspend ( s#ata_port * , int * ) 
ata_sas_port_async_resume extern int ata_sas_port_async_resume ( s#ata_port * , int * ) 
ata_port_printk __attribute__ ( ( format ( printf , 3 , 4 ) ) ) int ata_port_printk ( const s#ata_port * , const char * , const char * , ... ) 
ata_link_printk __attribute__ ( ( format ( printf , 3 , 4 ) ) ) int ata_link_printk ( const s#ata_link * , const char * , const char * , ... ) 
ata_dev_printk __attribute__ ( ( format ( printf , 3 , 4 ) ) ) int ata_dev_printk ( const s#ata_device * , const char * , const char * , ... ) 
ata_print_version void ata_print_version ( const s#device * , const char * ) 
sata_deb_timing_normal extern const unsigned long sata_deb_timing_normal [ ] 
sata_deb_timing_hotplug extern const unsigned long sata_deb_timing_hotplug [ ] 
sata_deb_timing_long extern const unsigned long sata_deb_timing_long [ ] 
ata_base_port_ops extern const s#ata_port_operations ata_base_port_ops 
sata_port_ops extern const s#ata_port_operations sata_port_ops 
ata_dummy_port_ops extern s#ata_port_operations ata_dummy_port_ops 
ata_dummy_port_info extern const s#ata_port_info ata_dummy_port_info 
e#ata_link_iter_mode enum ata_link_iter_mode { ATA_LITER_EDGE , ATA_LITER_HOST_FIRST , ATA_LITER_PMP_FIRST , } 
ata_link_next extern s#ata_link * ata_link_next ( s#ata_link * , s#ata_port * , e#ata_link_iter_mode ) 
e#ata_dev_iter_mode enum ata_dev_iter_mode { ATA_DITER_ENABLED , ATA_DITER_ENABLED_REVERSE , ATA_DITER_ALL , ATA_DITER_ALL_REVERSE , } 
ata_dev_next extern s#ata_device * ata_dev_next ( s#ata_device * , s#ata_link * , e#ata_dev_iter_mode ) 
ata_std_bios_param extern int ata_std_bios_param ( s#scsi_device * , s#block_device * , t#sector_t , int [ ] ) 
ata_scsi_unlock_native_capacity extern void ata_scsi_unlock_native_capacity ( s#scsi_device * ) 
ata_host_init extern void ata_host_init ( s#ata_host * , s#device * , s#ata_port_operations * ) 
ata_host_alloc extern s#ata_host * ata_host_alloc ( s#device * , int ) 
ata_host_alloc_pinfo extern s#ata_host * ata_host_alloc_pinfo ( s#device * , const s#ata_port_info * const * , int ) 
ata_slave_link_init extern int ata_slave_link_init ( s#ata_port * ) 
ata_host_start extern int ata_host_start ( s#ata_host * ) 
ata_host_register extern int ata_host_register ( s#ata_host * , s#scsi_host_template * ) 
t#irq_handler_t typedef t#irqreturn_t ( * irq_handler_t ) ( int , void * ) 
ata_host_activate extern int ata_host_activate ( s#ata_host * , int , t#irq_handler_t , unsigned long , s#scsi_host_template * ) 
ata_host_detach extern void ata_host_detach ( s#ata_host * ) 
ata_sg_init extern void ata_sg_init ( s#ata_queued_cmd * , s#scatterlist * , unsigned int ) 
ata_qc_complete extern void ata_qc_complete ( s#ata_queued_cmd * ) 
ata_qc_complete_multiple extern int ata_qc_complete_multiple ( s#ata_port * , t#u32 ) 
atapi_cmd_type extern int atapi_cmd_type ( t#u8 ) 
ata_tf_to_fis extern void ata_tf_to_fis ( const s#ata_taskfile * , t#u8 , int , t#u8 * ) 
ata_tf_from_fis extern void ata_tf_from_fis ( const t#u8 * , s#ata_taskfile * ) 
ata_pack_xfermask extern unsigned long ata_pack_xfermask ( unsigned long , unsigned long , unsigned long ) 
ata_unpack_xfermask extern void ata_unpack_xfermask ( unsigned long , unsigned long * , unsigned long * , unsigned long * ) 
ata_xfer_mask2mode extern t#u8 ata_xfer_mask2mode ( unsigned long ) 
ata_xfer_mode2mask extern unsigned long ata_xfer_mode2mask ( t#u8 ) 
ata_xfer_mode2shift extern int ata_xfer_mode2shift ( unsigned long ) 
ata_mode_string extern const char * ata_mode_string ( unsigned long ) 
ata_id_xfermask extern unsigned long ata_id_xfermask ( const t#u16 * ) 
ata_do_set_mode extern int ata_do_set_mode ( s#ata_link * , s#ata_device * * ) 
ata_std_qc_defer extern int ata_std_qc_defer ( s#ata_queued_cmd * ) 
ata_noop_qc_prep extern void ata_noop_qc_prep ( s#ata_queued_cmd * ) 
ata_dev_disable extern void ata_dev_disable ( s#ata_device * ) 
sata_set_spd extern int sata_set_spd ( s#ata_link * ) 
ata_wait_after_reset extern int ata_wait_after_reset ( s#ata_link * , unsigned long , int ( * ) ( s#ata_link * ) ) 
sata_link_debounce extern int sata_link_debounce ( s#ata_link * , const unsigned long * , unsigned long ) 
sata_link_resume extern int sata_link_resume ( s#ata_link * , const unsigned long * , unsigned long ) 
sata_link_scr_lpm extern int sata_link_scr_lpm ( s#ata_link * , e#ata_lpm_policy , t#bool ) 
ata_std_prereset extern int ata_std_prereset ( s#ata_link * , unsigned long ) 
sata_link_hardreset extern int sata_link_hardreset ( s#ata_link * , const unsigned long * , unsigned long , t#bool * , int ( * ) ( s#ata_link * ) ) 
sata_std_hardreset extern int sata_std_hardreset ( s#ata_link * , unsigned int * , unsigned long ) 
ata_std_postreset extern void ata_std_postreset ( s#ata_link * , unsigned int * ) 
ata_dev_classify extern unsigned int ata_dev_classify ( const s#ata_taskfile * ) 
ata_dev_pair extern s#ata_device * ata_dev_pair ( s#ata_device * ) 
ata_ratelimit extern int ata_ratelimit ( void ) 
ata_msleep extern void ata_msleep ( s#ata_port * , unsigned int ) 
ata_wait_register extern t#u32 ata_wait_register ( s#ata_port * , void * , t#u32 , t#u32 , unsigned long , unsigned long ) 
ata_scsi_queuecmd extern int ata_scsi_queuecmd ( s#Scsi_Host * , s#scsi_cmnd * ) 
ata_scsi_slave_config extern int ata_scsi_slave_config ( s#scsi_device * ) 
ata_scsi_slave_destroy extern void ata_scsi_slave_destroy ( s#scsi_device * ) 
ata_scsi_change_queue_depth extern int ata_scsi_change_queue_depth ( s#scsi_device * , int , int ) 
__ata_change_queue_depth extern int __ata_change_queue_depth ( s#ata_port * , s#scsi_device * , int , int ) 
sata_scr_valid extern int sata_scr_valid ( s#ata_link * ) 
sata_scr_read extern int sata_scr_read ( s#ata_link * , int , t#u32 * ) 
sata_scr_write extern int sata_scr_write ( s#ata_link * , int , t#u32 ) 
sata_scr_write_flush extern int sata_scr_write_flush ( s#ata_link * , int , t#u32 ) 
ata_link_online extern t#bool ata_link_online ( s#ata_link * ) 
ata_link_offline extern t#bool ata_link_offline ( s#ata_link * ) 
ata_host_suspend extern int ata_host_suspend ( s#ata_host * , t#pm_message_t ) 
ata_host_resume extern void ata_host_resume ( s#ata_host * ) 
ata_id_string extern void ata_id_string ( const t#u16 * , unsigned char * , unsigned int , unsigned int ) 
ata_id_c_string extern void ata_id_c_string ( const t#u16 * , unsigned char * , unsigned int , unsigned int ) 
ata_do_dev_read_id extern unsigned int ata_do_dev_read_id ( s#ata_device * , s#ata_taskfile * , t#u16 * ) 
ata_scsi_simulate extern void ata_scsi_simulate ( s#ata_device * , s#scsi_cmnd * ) 
ata_pio_need_iordy extern unsigned int ata_pio_need_iordy ( const s#ata_device * ) 
s#ata_timing struct ata_timing { unsigned short mode ; unsigned short setup ; unsigned short act8b ; unsigned short rec8b ; unsigned short cyc8b ; unsigned short active ; unsigned short recover ; unsigned short dmack_hold ; unsigned short cycle ; unsigned short udma ; } 
ata_timing_find_mode extern const s#ata_timing * ata_timing_find_mode ( t#u8 ) 
ata_timing_compute extern int ata_timing_compute ( s#ata_device * , unsigned short , s#ata_timing * , int , int ) 
ata_timing_merge extern void ata_timing_merge ( const s#ata_timing * , const s#ata_timing * , s#ata_timing * , unsigned int ) 
ata_timing_cycle2mode extern t#u8 ata_timing_cycle2mode ( unsigned int , int ) 
s#pci_bits struct pci_bits { unsigned int reg ; unsigned int width ; unsigned long mask ; unsigned long val ; } 
pci_test_config_bits extern int pci_test_config_bits ( s#pci_dev * , const s#pci_bits * ) 
ata_pci_remove_one extern void ata_pci_remove_one ( s#pci_dev * ) 
ata_pci_device_do_suspend extern void ata_pci_device_do_suspend ( s#pci_dev * , t#pm_message_t ) 
ata_pci_device_do_resume extern int ata_pci_device_do_resume ( s#pci_dev * ) 
ata_pci_device_suspend extern int ata_pci_device_suspend ( s#pci_dev * , t#pm_message_t ) 
ata_pci_device_resume extern int ata_pci_device_resume ( s#pci_dev * ) 
s#platform_device_id struct platform_device_id { char name [ 20 ] ; t#kernel_ulong_t driver_data ; } 
s##mfd_cell
s#pdev_archdata struct pdev_archdata { t#u64 dma_mask ; } 
s#platform_device struct platform_device { const char * name ; int id ; t#bool id_auto ; s#device dev ; t#u32 num_resources ; s#resource * resource ; const s#platform_device_id * id_entry ; s#mfd_cell * mfd_cell ; s#pdev_archdata archdata ; } 
ata_platform_remove_one extern int ata_platform_remove_one ( s#platform_device * ) 
__ata_ehi_push_desc extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void __ata_ehi_push_desc ( s#ata_eh_info * , const char * , ... ) 
ata_ehi_push_desc extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void ata_ehi_push_desc ( s#ata_eh_info * , const char * , ... ) 
ata_ehi_clear_desc extern void ata_ehi_clear_desc ( s#ata_eh_info * ) 
ata_port_desc extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void ata_port_desc ( s#ata_port * , const char * , ... ) 
ata_port_pbar_desc extern void ata_port_pbar_desc ( s#ata_port * , int , t#ssize_t , const char * ) 
ata_port_schedule_eh extern void ata_port_schedule_eh ( s#ata_port * ) 
ata_link_abort extern int ata_link_abort ( s#ata_link * ) 
ata_port_abort extern int ata_port_abort ( s#ata_port * ) 
ata_port_freeze extern int ata_port_freeze ( s#ata_port * ) 
sata_async_notification extern int sata_async_notification ( s#ata_port * ) 
ata_eh_freeze_port extern void ata_eh_freeze_port ( s#ata_port * ) 
ata_eh_thaw_port extern void ata_eh_thaw_port ( s#ata_port * ) 
ata_eh_qc_complete extern void ata_eh_qc_complete ( s#ata_queued_cmd * ) 
ata_eh_qc_retry extern void ata_eh_qc_retry ( s#ata_queued_cmd * ) 
ata_eh_analyze_ncq_error extern void ata_eh_analyze_ncq_error ( s#ata_link * ) 
ata_do_eh extern void ata_do_eh ( s#ata_port * , t#ata_prereset_fn_t , t#ata_reset_fn_t , t#ata_reset_fn_t , t#ata_postreset_fn_t ) 
ata_std_error_handler extern void ata_std_error_handler ( s#ata_port * ) 
ata_cable_40wire extern int ata_cable_40wire ( s#ata_port * ) 
ata_cable_80wire extern int ata_cable_80wire ( s#ata_port * ) 
ata_cable_unknown extern int ata_cable_unknown ( s#ata_port * ) 
ata_cable_ignore extern int ata_cable_ignore ( s#ata_port * ) 
ata_cable_sata extern int ata_cable_sata ( s#ata_port * ) 

/* drivers/ata/libata-eh.o */
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##sock
s##sysfs_dirent
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
e#scsi_target_state enum scsi_target_state { STARGET_CREATED = 1 , STARGET_RUNNING , STARGET_DEL , } 
s#scsi_target struct scsi_target { s#scsi_device * starget_sdev_user ; s#list_head siblings ; s#list_head devices ; s#device dev ; s#kref reap_ref ; unsigned int channel ; unsigned int id ; unsigned int create : 1 ; unsigned int single_lun : 1 ; unsigned int pdt_1f_for_no_lun : 1 ; unsigned int no_report_luns : 1 ; unsigned int expecting_lun_change : 1 ; unsigned int target_busy ; unsigned int can_queue ; unsigned int target_blocked ; unsigned int max_target_blocked ; char scsi_level ; e#scsi_target_state state ; void * hostdata ; unsigned long starget_data [ 0 ] ; } 
E#SDEV_EVT_POWER_ON_RESET_OCCURRED ( 1 ) + 6 
E#SDEV_EVT_LAST E#SDEV_EVT_POWER_ON_RESET_OCCURRED 
E#SDEV_EVT_MAXBITS E#SDEV_EVT_LAST + 1 
s#execute_work struct execute_work { s#work_struct work ; } 
s#scsi_dh_devlist struct scsi_dh_devlist { char * vendor ; char * model ; } 
s#scsi_sense_hdr struct scsi_sense_hdr { t#u8 response_code ; t#u8 sense_key ; t#u8 asc ; t#u8 ascq ; t#u8 byte4 ; t#u8 byte5 ; t#u8 byte6 ; t#u8 additional_length ; } 
t#activate_complete typedef void ( * activate_complete ) ( void * , int ) 
s#scsi_device_handler struct scsi_device_handler { s#list_head list ; s#module * module ; const char * name ; const s#scsi_dh_devlist * devlist ; int ( * check_sense ) ( s#scsi_device * , s#scsi_sense_hdr * ) ; int ( * attach ) ( s#scsi_device * ) ; void ( * detach ) ( s#scsi_device * ) ; int ( * activate ) ( s#scsi_device * , t#activate_complete , void * ) ; int ( * prep_fn ) ( s#scsi_device * , s#request * ) ; int ( * set_params ) ( s#scsi_device * , const char * ) ; t#bool ( * match ) ( s#scsi_device * ) ; } 
s#scsi_dh_data struct scsi_dh_data { s#scsi_device_handler * scsi_dh ; s#scsi_device * sdev ; s#kref kref ; char buf [ 0 ] ; } 
e#scsi_device_state enum scsi_device_state { SDEV_CREATED = 1 , SDEV_RUNNING , SDEV_CANCEL , SDEV_DEL , SDEV_QUIESCE , SDEV_OFFLINE , SDEV_TRANSPORT_OFFLINE , SDEV_BLOCK , SDEV_CREATED_BLOCK , } 
s#scsi_device struct scsi_device { s#Scsi_Host * host ; s#request_queue * request_queue ; s#list_head siblings ; s#list_head same_target_siblings ; unsigned int device_busy ; t#spinlock_t list_lock ; s#list_head cmd_list ; s#list_head starved_entry ; s#scsi_cmnd * current_cmnd ; unsigned short queue_depth ; unsigned short max_queue_depth ; unsigned short last_queue_full_depth ; unsigned short last_queue_full_count ; unsigned long last_queue_full_time ; unsigned long queue_ramp_up_period ; unsigned long last_queue_ramp_up ; unsigned int id , lun , channel ; unsigned int manufacturer ; unsigned sector_size ; void * hostdata ; char type ; char scsi_level ; char inq_periph_qual ; unsigned char inquiry_len ; unsigned char * inquiry ; const char * vendor ; const char * model ; const char * rev ; int vpd_pg83_len ; unsigned char * vpd_pg83 ; int vpd_pg80_len ; unsigned char * vpd_pg80 ; unsigned char current_tag ; s#scsi_target * sdev_target ; unsigned int sdev_bflags ; unsigned int eh_timeout ; unsigned writeable : 1 ; unsigned removable : 1 ; unsigned changed : 1 ; unsigned busy : 1 ; unsigned lockable : 1 ; unsigned locked : 1 ; unsigned borken : 1 ; unsigned disconnect : 1 ; unsigned soft_reset : 1 ; unsigned sdtr : 1 ; unsigned wdtr : 1 ; unsigned ppr : 1 ; unsigned tagged_supported : 1 ; unsigned simple_tags : 1 ; unsigned ordered_tags : 1 ; unsigned was_reset : 1 ; unsigned expecting_cc_ua : 1 ; unsigned use_10_for_rw : 1 ; unsigned use_10_for_ms : 1 ; unsigned no_report_opcodes : 1 ; unsigned no_write_same : 1 ; unsigned use_16_for_rw : 1 ; unsigned skip_ms_page_8 : 1 ; unsigned skip_ms_page_3f : 1 ; unsigned skip_vpd_pages : 1 ; unsigned try_vpd_pages : 1 ; unsigned use_192_bytes_for_3f : 1 ; unsigned no_start_on_add : 1 ; unsigned allow_restart : 1 ; unsigned manage_start_stop : 1 ; unsigned start_stop_pwr_cond : 1 ; unsigned no_uld_attach : 1 ; unsigned select_no_atn : 1 ; unsigned fix_capacity : 1 ; unsigned guess_capacity : 1 ; unsigned retry_hwerror : 1 ; unsigned last_sector_bug : 1 ; unsigned no_read_disc_info : 1 ; unsigned no_read_capacity_16 : 1 ; unsigned try_rc_10_first : 1 ; unsigned is_visible : 1 ; unsigned wce_default_on : 1 ; unsigned no_dif : 1 ; unsigned broken_fua : 1 ; t#atomic_t disk_events_disable_depth ; unsigned long supported_events [ ( ( ( E#SDEV_EVT_MAXBITS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long pending_events [ ( ( ( E#SDEV_EVT_MAXBITS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#list_head event_list ; s#work_struct event_work ; unsigned int device_blocked ; unsigned int max_device_blocked ; t#atomic_t iorequest_cnt ; t#atomic_t iodone_cnt ; t#atomic_t ioerr_cnt ; s#device sdev_gendev , sdev_dev ; s#execute_work ew ; s#work_struct requeue_work ; s#scsi_dh_data * scsi_dh_data ; e#scsi_device_state sdev_state ; unsigned long sdev_data [ 0 ] ; } 
s##scsi_transport_template
ata_scsi_cmd_error_handler extern void ata_scsi_cmd_error_handler ( s#Scsi_Host * , s#ata_port * , s#list_head * ) 
ata_scsi_port_error_handler extern void ata_scsi_port_error_handler ( s#Scsi_Host * , s#ata_port * ) 
ata_port_wait_eh extern void ata_port_wait_eh ( s#ata_port * ) 
ata_std_sched_eh extern void ata_std_sched_eh ( s#ata_port * ) 
ata_std_end_eh extern void ata_std_end_eh ( s#ata_port * ) 

/* drivers/ata/libata-pmp.o */
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##scsi_device
s##scsi_cmnd
s##scsi_target
e##blk_eh_timer_return
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##scsi_transport_template
s##blk_queue_tag
sata_pmp_port_ops extern const s#ata_port_operations sata_pmp_port_ops 
sata_pmp_qc_defer_cmd_switch extern int sata_pmp_qc_defer_cmd_switch ( s#ata_queued_cmd * ) 
sata_pmp_error_handler extern void sata_pmp_error_handler ( s#ata_port * ) 

/* drivers/ata/libata-scsi.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##mtd_info
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
dev_attr_link_power_management_policy extern s#device_attribute dev_attr_link_power_management_policy 
dev_attr_unload_heads extern s#device_attribute dev_attr_unload_heads 
dev_attr_em_message extern s#device_attribute dev_attr_em_message 
dev_attr_em_message_type extern s#device_attribute dev_attr_em_message_type 
dev_attr_sw_activity extern s#device_attribute dev_attr_sw_activity 
ata_common_sdev_attrs extern s#device_attribute * ata_common_sdev_attrs [ ] 
s##scsi_host_cmd_pool
s##proc_dir_entry
s#klist struct klist { t#spinlock_t k_lock ; s#list_head k_list ; void ( * get ) ( s#klist_node * ) ; void ( * put ) ( s#klist_node * ) ; } 
s#attribute_container struct attribute_container { s#list_head node ; s#klist containers ; s#class * class ; const s#attribute_group * grp ; s#device_attribute * * attrs ; int ( * match ) ( s#attribute_container * , s#device * ) ; unsigned long flags ; } 
s#transport_container struct transport_container { s#attribute_container ac ; const s#attribute_group * statistics ; } 
t#uint typedef unsigned int uint 
s#scsi_transport_template struct scsi_transport_template { s#transport_container host_attrs ; s#transport_container target_attrs ; s#transport_container device_attrs ; int ( * user_scan ) ( s#Scsi_Host * , t#uint , t#uint , t#uint ) ; int device_size ; int device_private_offset ; int target_size ; int target_private_offset ; int host_size ; unsigned int create_work_queue : 1 ; void ( * eh_strategy_handler ) ( s#Scsi_Host * ) ; e#blk_eh_timer_return ( * eh_timed_out ) ( s#scsi_cmnd * ) ; int ( * it_nexus_response ) ( s#Scsi_Host * , t#u64 , int ) ; int ( * tsk_mgmt_response ) ( s#Scsi_Host * , t#u64 , t#u64 , int ) ; } 
ata_sas_scsi_ioctl extern int ata_sas_scsi_ioctl ( s#ata_port * , s#scsi_device * , int , void * ) 
ata_scsi_ioctl extern int ata_scsi_ioctl ( s#scsi_device * , int , void * ) 
ata_sas_port_alloc extern s#ata_port * ata_sas_port_alloc ( s#ata_host * , s#ata_port_info * , s#Scsi_Host * ) 
ata_sas_port_start extern int ata_sas_port_start ( s#ata_port * ) 
ata_sas_port_stop extern void ata_sas_port_stop ( s#ata_port * ) 
ata_sas_async_probe extern void ata_sas_async_probe ( s#ata_port * ) 
ata_sas_sync_probe extern int ata_sas_sync_probe ( s#ata_port * ) 
ata_sas_port_init extern int ata_sas_port_init ( s#ata_port * ) 
ata_sas_port_destroy extern void ata_sas_port_destroy ( s#ata_port * ) 
ata_sas_slave_configure extern int ata_sas_slave_configure ( s#scsi_device * , s#ata_port * ) 
ata_sas_queuecmd extern int ata_sas_queuecmd ( s#scsi_cmnd * , s#ata_port * ) 

/* drivers/ata/libata-sff.o */
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##scsi_device
s##scsi_cmnd
s##scsi_target
e##blk_eh_timer_return
s##proc_dir_entry
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##scsi_transport_template
s##blk_queue_tag
ata_sff_port_ops extern const s#ata_port_operations ata_sff_port_ops 
ata_sff_check_status extern t#u8 ata_sff_check_status ( s#ata_port * ) 
ata_sff_pause extern void ata_sff_pause ( s#ata_port * ) 
ata_sff_dma_pause extern void ata_sff_dma_pause ( s#ata_port * ) 
ata_sff_busy_sleep extern int ata_sff_busy_sleep ( s#ata_port * , unsigned long , unsigned long ) 
ata_sff_wait_ready extern int ata_sff_wait_ready ( s#ata_link * , unsigned long ) 
ata_sff_dev_select extern void ata_sff_dev_select ( s#ata_port * , unsigned int ) 
ata_sff_irq_on extern void ata_sff_irq_on ( s#ata_port * ) 
ata_sff_tf_load extern void ata_sff_tf_load ( s#ata_port * , const s#ata_taskfile * ) 
ata_sff_tf_read extern void ata_sff_tf_read ( s#ata_port * , s#ata_taskfile * ) 
ata_sff_exec_command extern void ata_sff_exec_command ( s#ata_port * , const s#ata_taskfile * ) 
ata_sff_data_xfer extern unsigned int ata_sff_data_xfer ( s#ata_device * , unsigned char * , unsigned int , int ) 
ata_sff_data_xfer32 extern unsigned int ata_sff_data_xfer32 ( s#ata_device * , unsigned char * , unsigned int , int ) 
ata_sff_data_xfer_noirq extern unsigned int ata_sff_data_xfer_noirq ( s#ata_device * , unsigned char * , unsigned int , int ) 
ata_sff_hsm_move extern int ata_sff_hsm_move ( s#ata_port * , s#ata_queued_cmd * , t#u8 , int ) 
ata_sff_queue_work extern void ata_sff_queue_work ( s#work_struct * ) 
ata_sff_queue_delayed_work extern void ata_sff_queue_delayed_work ( s#delayed_work * , unsigned long ) 
ata_sff_queue_pio_task extern void ata_sff_queue_pio_task ( s#ata_link * , unsigned long ) 
ata_sff_qc_issue extern unsigned int ata_sff_qc_issue ( s#ata_queued_cmd * ) 
ata_sff_qc_fill_rtf extern t#bool ata_sff_qc_fill_rtf ( s#ata_queued_cmd * ) 
ata_sff_port_intr extern unsigned int ata_sff_port_intr ( s#ata_port * , s#ata_queued_cmd * ) 
ata_sff_interrupt extern t#irqreturn_t ata_sff_interrupt ( int , void * ) 
ata_sff_lost_interrupt extern void ata_sff_lost_interrupt ( s#ata_port * ) 
ata_sff_freeze extern void ata_sff_freeze ( s#ata_port * ) 
ata_sff_thaw extern void ata_sff_thaw ( s#ata_port * ) 
ata_sff_prereset extern int ata_sff_prereset ( s#ata_link * , unsigned long ) 
ata_sff_dev_classify extern unsigned int ata_sff_dev_classify ( s#ata_device * , int , t#u8 * ) 
ata_sff_wait_after_reset extern int ata_sff_wait_after_reset ( s#ata_link * , unsigned int , unsigned long ) 
ata_sff_softreset extern int ata_sff_softreset ( s#ata_link * , unsigned int * , unsigned long ) 
sata_sff_hardreset extern int sata_sff_hardreset ( s#ata_link * , unsigned int * , unsigned long ) 
ata_sff_postreset extern void ata_sff_postreset ( s#ata_link * , unsigned int * ) 
ata_sff_drain_fifo extern void ata_sff_drain_fifo ( s#ata_queued_cmd * ) 
ata_sff_error_handler extern void ata_sff_error_handler ( s#ata_port * ) 
ata_sff_std_ports extern void ata_sff_std_ports ( s#ata_ioports * ) 
ata_pci_sff_init_host extern int ata_pci_sff_init_host ( s#ata_host * ) 
ata_pci_sff_prepare_host extern int ata_pci_sff_prepare_host ( s#pci_dev * , const s#ata_port_info * const * , s#ata_host * * ) 
ata_pci_sff_activate_host extern int ata_pci_sff_activate_host ( s#ata_host * , t#irq_handler_t , s#scsi_host_template * ) 
ata_pci_sff_init_one extern int ata_pci_sff_init_one ( s#pci_dev * , const s#ata_port_info * const * , s#scsi_host_template * , void * , int ) 
ata_bmdma_port_ops extern const s#ata_port_operations ata_bmdma_port_ops 
ata_bmdma32_port_ops extern const s#ata_port_operations ata_bmdma32_port_ops 
ata_bmdma_qc_prep extern void ata_bmdma_qc_prep ( s#ata_queued_cmd * ) 
ata_bmdma_dumb_qc_prep extern void ata_bmdma_dumb_qc_prep ( s#ata_queued_cmd * ) 
ata_bmdma_qc_issue extern unsigned int ata_bmdma_qc_issue ( s#ata_queued_cmd * ) 
ata_bmdma_port_intr extern unsigned int ata_bmdma_port_intr ( s#ata_port * , s#ata_queued_cmd * ) 
ata_bmdma_interrupt extern t#irqreturn_t ata_bmdma_interrupt ( int , void * ) 
ata_bmdma_error_handler extern void ata_bmdma_error_handler ( s#ata_port * ) 
ata_bmdma_post_internal_cmd extern void ata_bmdma_post_internal_cmd ( s#ata_queued_cmd * ) 
ata_bmdma_irq_clear extern void ata_bmdma_irq_clear ( s#ata_port * ) 
ata_bmdma_setup extern void ata_bmdma_setup ( s#ata_queued_cmd * ) 
ata_bmdma_start extern void ata_bmdma_start ( s#ata_queued_cmd * ) 
ata_bmdma_stop extern void ata_bmdma_stop ( s#ata_queued_cmd * ) 
ata_bmdma_status extern t#u8 ata_bmdma_status ( s#ata_port * ) 
ata_bmdma_port_start extern int ata_bmdma_port_start ( s#ata_port * ) 
ata_bmdma_port_start32 extern int ata_bmdma_port_start32 ( s#ata_port * ) 
ata_pci_bmdma_clear_simplex extern int ata_pci_bmdma_clear_simplex ( s#pci_dev * ) 
ata_pci_bmdma_init extern void ata_pci_bmdma_init ( s#ata_host * ) 
ata_pci_bmdma_prepare_host extern int ata_pci_bmdma_prepare_host ( s#pci_dev * , const s#ata_port_info * const * , s#ata_host * * ) 
ata_pci_bmdma_init_one extern int ata_pci_bmdma_init_one ( s#pci_dev * , const s#ata_port_info * const * , s#scsi_host_template * , void * , int ) 

/* drivers/base/attribute_container.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#device_private struct device_private { s#klist klist_children ; s#klist_node knode_parent ; s#klist_node knode_driver ; s#klist_node knode_bus ; s#list_head deferred_probe ; void * driver_data ; s#device * device ; } 
s##of_device_id
s##acpi_device_id
s#driver_private struct driver_private { s#kobject kobj ; s#klist klist_devices ; s#klist_node knode_bus ; s#module_kobject * mkobj ; s#device_driver * driver ; } 
s##iommu_ops
s#subsys_private struct subsys_private { s#kset subsys ; s#kset * devices_kset ; s#list_head interfaces ; s#mutex mutex ; s#kset * drivers_kset ; s#klist klist_devices ; s#klist klist_drivers ; s#blocking_notifier_head bus_notifier ; unsigned int drivers_autoprobe : 1 ; s#bus_type * bus ; s#kset glue_dirs ; s#class * class ; } 
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
attribute_container_classdev_to_container s#attribute_container * attribute_container_classdev_to_container ( s#device * ) 
attribute_container_register int attribute_container_register ( s#attribute_container * ) 
attribute_container_unregister int attribute_container_unregister ( s#attribute_container * ) 
attribute_container_find_class_device s#device * attribute_container_find_class_device ( s#attribute_container * , s#device * ) 

/* drivers/base/bus.o */
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##of_device_id
s##acpi_device_id
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##iommu_ops
bus_create_file extern int bus_create_file ( s#bus_type * , s#bus_attribute * ) 
bus_remove_file extern void bus_remove_file ( s#bus_type * , s#bus_attribute * ) 
bus_for_each_dev int bus_for_each_dev ( s#bus_type * , s#device * , void * , int ( * ) ( s#device * , void * ) ) 
bus_find_device s#device * bus_find_device ( s#bus_type * , s#device * , void * , int ( * ) ( s#device * , void * ) ) 
bus_find_device_by_name s#device * bus_find_device_by_name ( s#bus_type * , s#device * , const char * ) 
subsys_find_device_by_id s#device * subsys_find_device_by_id ( s#bus_type * , unsigned int , s#device * ) 
bus_for_each_drv int bus_for_each_drv ( s#bus_type * , s#device_driver * , void * , int ( * ) ( s#device_driver * , void * ) ) 
bus_rescan_devices extern int bus_rescan_devices ( s#bus_type * ) 
device_reprobe extern int device_reprobe ( s#device * ) 
bus_register extern int bus_register ( s#bus_type * ) 
bus_unregister extern void bus_unregister ( s#bus_type * ) 
bus_register_notifier extern int bus_register_notifier ( s#bus_type * , s#notifier_block * ) 
bus_unregister_notifier extern int bus_unregister_notifier ( s#bus_type * , s#notifier_block * ) 
bus_get_kset extern s#kset * bus_get_kset ( s#bus_type * ) 
bus_get_device_klist extern s#klist * bus_get_device_klist ( s#bus_type * ) 
bus_sort_breadthfirst void bus_sort_breadthfirst ( s#bus_type * , int ( * ) ( const s#device * , const s#device * ) ) 
s#klist_iter struct klist_iter { s#klist * i_klist ; s#klist_node * i_cur ; } 
s#subsys_dev_iter struct subsys_dev_iter { s#klist_iter ki ; const s#device_type * type ; } 
subsys_dev_iter_init void subsys_dev_iter_init ( s#subsys_dev_iter * , s#bus_type * , s#device * , const s#device_type * ) 
subsys_dev_iter_next s#device * subsys_dev_iter_next ( s#subsys_dev_iter * ) 
subsys_dev_iter_exit void subsys_dev_iter_exit ( s#subsys_dev_iter * ) 
s#subsys_interface struct subsys_interface { const char * name ; s#bus_type * subsys ; s#list_head node ; int ( * add_dev ) ( s#device * , s#subsys_interface * ) ; int ( * remove_dev ) ( s#device * , s#subsys_interface * ) ; } 
subsys_interface_register int subsys_interface_register ( s#subsys_interface * ) 
subsys_interface_unregister void subsys_interface_unregister ( s#subsys_interface * ) 
subsys_system_register int subsys_system_register ( s#bus_type * , const s#attribute_group * * ) 
subsys_virtual_register int subsys_virtual_register ( s#bus_type * , const s#attribute_group * * ) 

/* drivers/base/class.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##of_device_id
s##acpi_device_id
s##iommu_ops
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##block_device_operations
s##request_queue
s##timer_rand_state
s##disk_events
s##blk_integrity
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
__class_register extern int __class_register ( s#class * , s#lock_class_key * ) 
__class_create extern s#class * __class_create ( s#module * , const char * , s#lock_class_key * ) 
s#class_dev_iter struct class_dev_iter { s#klist_iter ki ; const s#device_type * type ; } 
class_dev_iter_init extern void class_dev_iter_init ( s#class_dev_iter * , s#class * , s#device * , const s#device_type * ) 
class_dev_iter_next extern s#device * class_dev_iter_next ( s#class_dev_iter * ) 
class_dev_iter_exit extern void class_dev_iter_exit ( s#class_dev_iter * ) 
class_for_each_device extern int class_for_each_device ( s#class * , s#device * , void * , int ( * ) ( s#device * , void * ) ) 
class_find_device extern s#device * class_find_device ( s#class * , s#device * , const void * , int ( * ) ( s#device * , const void * ) ) 
show_class_attr_string extern t#ssize_t show_class_attr_string ( s#class * , s#class_attribute * , char * ) 
s##class_compat
class_compat_register s#class_compat * class_compat_register ( const char * ) 
class_compat_unregister void class_compat_unregister ( s#class_compat * ) 
class_compat_create_link int class_compat_create_link ( s#class_compat * , s#device * , s#device * ) 
class_compat_remove_link void class_compat_remove_link ( s#class_compat * , s#device * , s#device * ) 
class_create_file_ns extern int class_create_file_ns ( s#class * , const s#class_attribute * , const void * ) 
class_remove_file_ns extern void class_remove_file_ns ( s#class * , const s#class_attribute * , const void * ) 
class_unregister extern void class_unregister ( s#class * ) 
class_destroy extern void class_destroy ( s#class * ) 
s#class_interface struct class_interface { s#list_head node ; s#class * class ; int ( * add_dev ) ( s#device * , s#class_interface * ) ; void ( * remove_dev ) ( s#device * , s#class_interface * ) ; } 
class_interface_register extern int class_interface_register ( s#class_interface * ) 
class_interface_unregister extern void class_interface_unregister ( s#class_interface * ) 

/* drivers/base/core.o */
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##block_device_operations
s##request_queue
s##timer_rand_state
s##disk_events
s##blk_integrity
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##iommu_ops
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##pci_dev
s##iommu_group
dev_driver_string extern const char * dev_driver_string ( const s#device * ) 
device_store_ulong t#ssize_t device_store_ulong ( s#device * , s#device_attribute * , const char * , t#size_t ) 
device_show_ulong t#ssize_t device_show_ulong ( s#device * , s#device_attribute * , char * ) 
device_store_int t#ssize_t device_store_int ( s#device * , s#device_attribute * , const char * , t#size_t ) 
device_show_int t#ssize_t device_show_int ( s#device * , s#device_attribute * , char * ) 
device_store_bool t#ssize_t device_store_bool ( s#device * , s#device_attribute * , const char * , t#size_t ) 
device_show_bool t#ssize_t device_show_bool ( s#device * , s#device_attribute * , char * ) 
device_create_file extern int device_create_file ( s#device * , const s#device_attribute * ) 
device_remove_file extern void device_remove_file ( s#device * , const s#device_attribute * ) 
device_create_bin_file extern int device_create_bin_file ( s#device * , const s#bin_attribute * ) 
device_remove_bin_file extern void device_remove_bin_file ( s#device * , const s#bin_attribute * ) 
device_schedule_callback_owner extern int device_schedule_callback_owner ( s#device * , void ( * ) ( s#device * ) , s#module * ) 
device_initialize extern void device_initialize ( s#device * ) 
dev_set_name extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int dev_set_name ( s#device * , const char * , ... ) 
device_add extern int device_add ( s#device * ) 
device_register extern int device_register ( s#device * ) 
get_device extern s#device * get_device ( s#device * ) 
put_device extern void put_device ( s#device * ) 
device_del extern void device_del ( s#device * ) 
device_unregister extern void device_unregister ( s#device * ) 
device_for_each_child extern int device_for_each_child ( s#device * , void * , int ( * ) ( s#device * , void * ) ) 
device_find_child extern s#device * device_find_child ( s#device * , void * , int ( * ) ( s#device * , void * ) ) 
__root_device_register extern s#device * __root_device_register ( const char * , s#module * ) 
root_device_unregister extern void root_device_unregister ( s#device * ) 
device_create_vargs extern s#device * device_create_vargs ( s#class * , s#device * , t#dev_t , void * , const char * , va_list vargs ) 
device_create extern __attribute__ ( ( format ( printf , 5 , 6 ) ) ) s#device * device_create ( s#class * , s#device * , t#dev_t , void * , const char * , ... ) 
device_create_with_groups extern __attribute__ ( ( format ( printf , 6 , 7 ) ) ) s#device * device_create_with_groups ( s#class * , s#device * , t#dev_t , void * , const s#attribute_group * * , const char * , ... ) 
device_destroy extern void device_destroy ( s#class * , t#dev_t ) 
device_rename extern int device_rename ( s#device * , const char * ) 
e#dpm_order enum dpm_order { DPM_ORDER_NONE , DPM_ORDER_DEV_AFTER_PARENT , DPM_ORDER_PARENT_BEFORE_DEV , DPM_ORDER_DEV_LAST , } 
device_move extern int device_move ( s#device * , s#device * , e#dpm_order ) 
create_syslog_header int create_syslog_header ( const s#device * , char * , t#size_t ) 
dev_vprintk_emit extern __attribute__ ( ( format ( printf , 3 , 0 ) ) ) int dev_vprintk_emit ( int , const s#device * , const char * , va_list args ) 
dev_printk_emit extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) int dev_printk_emit ( int , const s#device * , const char * , ... ) 
dev_printk extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) int dev_printk ( const char * , const s#device * , const char * , ... ) 
dev_emerg extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int dev_emerg ( const s#device * , const char * , ... ) 
dev_alert extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int dev_alert ( const s#device * , const char * , ... ) 
dev_crit extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int dev_crit ( const s#device * , const char * , ... ) 
dev_err extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int dev_err ( const s#device * , const char * , ... ) 
dev_warn extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int dev_warn ( const s#device * , const char * , ... ) 
dev_notice extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int dev_notice ( const s#device * , const char * , ... ) 
_dev_info extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int _dev_info ( const s#device * , const char * , ... ) 

/* drivers/base/cpu.o */
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##proc_dir_entry
s##iommu_group
s##iommu_ops
cpu_subsys extern s#bus_type cpu_subsys 
get_cpu_device extern s#device * get_cpu_device ( unsigned ) 
cpu_is_hotpluggable extern t#bool cpu_is_hotpluggable ( unsigned ) 

/* drivers/base/dd.o */
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##of_device_id
s##acpi_device_id
s##iommu_ops
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
device_bind_driver extern int device_bind_driver ( s#device * ) 
wait_for_device_probe extern void wait_for_device_probe ( void ) 
device_attach extern int device_attach ( s#device * ) 
driver_attach extern int driver_attach ( s#device_driver * ) 
device_release_driver extern void device_release_driver ( s#device * ) 
dev_get_drvdata extern void * dev_get_drvdata ( const s#device * ) 
dev_set_drvdata extern int dev_set_drvdata ( s#device * , void * ) 

/* drivers/base/devres.o */
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##of_device_id
s##acpi_device_id
s##iommu_ops
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
t#dr_release_t typedef void ( * dr_release_t ) ( s#device * , void * ) 
devres_alloc extern void * devres_alloc ( t#dr_release_t , t#size_t , t#gfp_t ) 
t#dr_match_t typedef int ( * dr_match_t ) ( s#device * , void * , void * ) 
devres_for_each_res extern void devres_for_each_res ( s#device * , t#dr_release_t , t#dr_match_t , void * , void ( * ) ( s#device * , void * , void * ) , void * ) 
devres_free extern void devres_free ( void * ) 
devres_add extern void devres_add ( s#device * , void * ) 
devres_find extern void * devres_find ( s#device * , t#dr_release_t , t#dr_match_t , void * ) 
devres_get extern void * devres_get ( s#device * , void * , t#dr_match_t , void * ) 
devres_remove extern void * devres_remove ( s#device * , t#dr_release_t , t#dr_match_t , void * ) 
devres_destroy extern int devres_destroy ( s#device * , t#dr_release_t , t#dr_match_t , void * ) 
devres_release extern int devres_release ( s#device * , t#dr_release_t , t#dr_match_t , void * ) 
devres_open_group extern void * devres_open_group ( s#device * , void * , t#gfp_t ) 
devres_close_group extern void devres_close_group ( s#device * , void * ) 
devres_remove_group extern void devres_remove_group ( s#device * , void * ) 
devres_release_group extern int devres_release_group ( s#device * , void * ) 
devm_add_action int devm_add_action ( s#device * , void ( * ) ( void * ) , void * ) 
devm_remove_action void devm_remove_action ( s#device * , void ( * ) ( void * ) , void * ) 
devm_kzalloc extern void * devm_kzalloc ( s#device * , t#size_t , t#gfp_t ) 
devm_kfree extern void devm_kfree ( s#device * , void * ) 

/* drivers/base/dma-buf.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s#dma_buf_attachment struct dma_buf_attachment { s#dma_buf * dmabuf ; s#device * dev ; s#list_head node ; void * priv ; } 
s#dma_buf_ops struct dma_buf_ops { int ( * attach ) ( s#dma_buf * , s#device * , s#dma_buf_attachment * ) ; void ( * detach ) ( s#dma_buf * , s#dma_buf_attachment * ) ; s#sg_table * ( * map_dma_buf ) ( s#dma_buf_attachment * , e#dma_data_direction ) ; void ( * unmap_dma_buf ) ( s#dma_buf_attachment * , s#sg_table * , e#dma_data_direction ) ; void ( * release ) ( s#dma_buf * ) ; int ( * begin_cpu_access ) ( s#dma_buf * , t#size_t , t#size_t , e#dma_data_direction ) ; void ( * end_cpu_access ) ( s#dma_buf * , t#size_t , t#size_t , e#dma_data_direction ) ; void * ( * kmap_atomic ) ( s#dma_buf * , unsigned long ) ; void ( * kunmap_atomic ) ( s#dma_buf * , unsigned long , void * ) ; void * ( * kmap ) ( s#dma_buf * , unsigned long ) ; void ( * kunmap ) ( s#dma_buf * , unsigned long , void * ) ; int ( * mmap ) ( s#dma_buf * , s#vm_area_struct * ) ; void * ( * vmap ) ( s#dma_buf * ) ; void ( * vunmap ) ( s#dma_buf * , void * ) ; } 
s#dma_buf struct dma_buf { t#size_t size ; s#file * file ; s#list_head attachments ; const s#dma_buf_ops * ops ; s#mutex lock ; unsigned vmapping_counter ; void * vmap_ptr ; const char * exp_name ; s#list_head list_node ; void * priv ; } 
dma_buf_export_named s#dma_buf * dma_buf_export_named ( void * , const s#dma_buf_ops * , t#size_t , int , const char * ) 
dma_buf_fd int dma_buf_fd ( s#dma_buf * , int ) 
dma_buf_get s#dma_buf * dma_buf_get ( int ) 
dma_buf_put void dma_buf_put ( s#dma_buf * ) 
dma_buf_attach s#dma_buf_attachment * dma_buf_attach ( s#dma_buf * , s#device * ) 
dma_buf_detach void dma_buf_detach ( s#dma_buf * , s#dma_buf_attachment * ) 
dma_buf_map_attachment s#sg_table * dma_buf_map_attachment ( s#dma_buf_attachment * , e#dma_data_direction ) 
dma_buf_unmap_attachment void dma_buf_unmap_attachment ( s#dma_buf_attachment * , s#sg_table * , e#dma_data_direction ) 
dma_buf_begin_cpu_access int dma_buf_begin_cpu_access ( s#dma_buf * , t#size_t , t#size_t , e#dma_data_direction ) 
dma_buf_end_cpu_access void dma_buf_end_cpu_access ( s#dma_buf * , t#size_t , t#size_t , e#dma_data_direction ) 
dma_buf_kmap_atomic void * dma_buf_kmap_atomic ( s#dma_buf * , unsigned long ) 
dma_buf_kunmap_atomic void dma_buf_kunmap_atomic ( s#dma_buf * , unsigned long , void * ) 
dma_buf_kmap void * dma_buf_kmap ( s#dma_buf * , unsigned long ) 
dma_buf_kunmap void dma_buf_kunmap ( s#dma_buf * , unsigned long , void * ) 
dma_buf_mmap int dma_buf_mmap ( s#dma_buf * , s#vm_area_struct * , unsigned long ) 
dma_buf_vmap void * dma_buf_vmap ( s#dma_buf * ) 
dma_buf_vunmap void dma_buf_vunmap ( s#dma_buf * , void * ) 

/* drivers/base/dma-mapping.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
dmam_alloc_coherent extern void * dmam_alloc_coherent ( s#device * , t#size_t , t#dma_addr_t * , t#gfp_t ) 
dmam_free_coherent extern void dmam_free_coherent ( s#device * , t#size_t , void * , t#dma_addr_t ) 
dmam_alloc_noncoherent extern void * dmam_alloc_noncoherent ( s#device * , t#size_t , t#dma_addr_t * , t#gfp_t ) 
dmam_free_noncoherent extern void dmam_free_noncoherent ( s#device * , t#size_t , void * , t#dma_addr_t ) 
dma_common_get_sgtable int dma_common_get_sgtable ( s#device * , s#sg_table * , void * , t#dma_addr_t , t#size_t ) 
dma_common_mmap extern int dma_common_mmap ( s#device * , s#vm_area_struct * , void * , t#dma_addr_t , t#size_t ) 

/* drivers/base/driver.o */
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##iommu_group
s##iommu_ops
s##of_device_id
s##acpi_device_id
driver_for_each_device extern int driver_for_each_device ( s#device_driver * , s#device * , void * , int ( * ) ( s#device * , void * ) ) 
driver_find_device s#device * driver_find_device ( s#device_driver * , s#device * , void * , int ( * ) ( s#device * , void * ) ) 
driver_create_file extern int driver_create_file ( s#device_driver * , const s#driver_attribute * ) 
driver_remove_file extern void driver_remove_file ( s#device_driver * , const s#driver_attribute * ) 
driver_register extern int driver_register ( s#device_driver * ) 
driver_unregister extern void driver_unregister ( s#device_driver * ) 
driver_find extern s#device_driver * driver_find ( const char * , s#bus_type * ) 

/* drivers/base/firmware.o */
s##sock
s##sysfs_dirent
firmware_kobj extern s#kobject * firmware_kobj 

/* drivers/base/firmware_class.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s#firmware struct firmware { t#size_t size ; const t#u8 * data ; s#page * * pages ; void * priv ; } 
s##of_device_id
s##acpi_device_id
s##iommu_ops
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
request_firmware int request_firmware ( const s#firmware * * , const char * , s#device * ) 
request_firmware_direct int request_firmware_direct ( const s#firmware * * , const char * , s#device * ) 
release_firmware void release_firmware ( const s#firmware * ) 
request_firmware_nowait int request_firmware_nowait ( s#module * , t#bool , const char * , s#device * , t#gfp_t , void * , void ( * ) ( const s#firmware * , void * ) ) 

/* drivers/base/memory.o */
register_memory_notifier extern int register_memory_notifier ( s#notifier_block * ) 
unregister_memory_notifier extern void unregister_memory_notifier ( s#notifier_block * ) 
register_memory_isolate_notifier extern int register_memory_isolate_notifier ( s#notifier_block * ) 
unregister_memory_isolate_notifier extern void unregister_memory_isolate_notifier ( s#notifier_block * ) 

/* drivers/base/platform.o */
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##iommu_ops
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
platform_bus extern s#device platform_bus 
s##mfd_cell
platform_get_resource extern s#resource * platform_get_resource ( s#platform_device * , unsigned int , unsigned int ) 
platform_get_irq extern int platform_get_irq ( s#platform_device * , unsigned int ) 
platform_get_resource_byname extern s#resource * platform_get_resource_byname ( s#platform_device * , unsigned int , const char * ) 
platform_get_irq_byname extern int platform_get_irq_byname ( s#platform_device * , const char * ) 
platform_add_devices extern int platform_add_devices ( s#platform_device * * , int ) 
platform_device_put extern void platform_device_put ( s#platform_device * ) 
platform_device_alloc extern s#platform_device * platform_device_alloc ( const char * , int ) 
platform_device_add_resources extern int platform_device_add_resources ( s#platform_device * , const s#resource * , unsigned int ) 
platform_device_add_data extern int platform_device_add_data ( s#platform_device * , const void * , t#size_t ) 
platform_device_add extern int platform_device_add ( s#platform_device * ) 
platform_device_del extern void platform_device_del ( s#platform_device * ) 
platform_device_register extern int platform_device_register ( s#platform_device * ) 
platform_device_unregister extern void platform_device_unregister ( s#platform_device * ) 
s#platform_device_info struct platform_device_info { s#device * parent ; s#acpi_dev_node acpi_node ; const char * name ; int id ; const s#resource * res ; unsigned int num_res ; const void * data ; t#size_t size_data ; t#u64 dma_mask ; } 
platform_device_register_full extern s#platform_device * platform_device_register_full ( const s#platform_device_info * ) 
s#platform_driver struct platform_driver { int ( * probe ) ( s#platform_device * ) ; int ( * remove ) ( s#platform_device * ) ; void ( * shutdown ) ( s#platform_device * ) ; int ( * suspend ) ( s#platform_device * , t#pm_message_t ) ; int ( * resume ) ( s#platform_device * ) ; s#device_driver driver ; const s#platform_device_id * id_table ; } 
__platform_driver_register extern int __platform_driver_register ( s#platform_driver * , s#module * ) 
platform_driver_unregister extern void platform_driver_unregister ( s#platform_driver * ) 
platform_driver_probe extern int platform_driver_probe ( s#platform_driver * , int ( * ) ( s#platform_device * ) ) 
platform_create_bundle extern s#platform_device * platform_create_bundle ( s#platform_driver * , int ( * ) ( s#platform_device * ) , s#resource * , unsigned int , const void * , t#size_t ) 
platform_bus_type extern s#bus_type platform_bus_type 

/* drivers/base/power/common.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
dev_pm_get_subsys_data extern int dev_pm_get_subsys_data ( s#device * ) 
dev_pm_put_subsys_data extern int dev_pm_put_subsys_data ( s#device * ) 

/* drivers/base/power/generic_ops.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
pm_generic_runtime_suspend extern int pm_generic_runtime_suspend ( s#device * ) 
pm_generic_runtime_resume extern int pm_generic_runtime_resume ( s#device * ) 
pm_generic_suspend_noirq extern int pm_generic_suspend_noirq ( s#device * ) 
pm_generic_suspend_late extern int pm_generic_suspend_late ( s#device * ) 
pm_generic_suspend extern int pm_generic_suspend ( s#device * ) 
pm_generic_freeze_noirq extern int pm_generic_freeze_noirq ( s#device * ) 
pm_generic_freeze_late extern int pm_generic_freeze_late ( s#device * ) 
pm_generic_freeze extern int pm_generic_freeze ( s#device * ) 
pm_generic_poweroff_noirq extern int pm_generic_poweroff_noirq ( s#device * ) 
pm_generic_poweroff_late extern int pm_generic_poweroff_late ( s#device * ) 
pm_generic_poweroff extern int pm_generic_poweroff ( s#device * ) 
pm_generic_thaw_noirq extern int pm_generic_thaw_noirq ( s#device * ) 
pm_generic_thaw_early extern int pm_generic_thaw_early ( s#device * ) 
pm_generic_thaw extern int pm_generic_thaw ( s#device * ) 
pm_generic_resume_noirq extern int pm_generic_resume_noirq ( s#device * ) 
pm_generic_resume_early extern int pm_generic_resume_early ( s#device * ) 
pm_generic_resume extern int pm_generic_resume ( s#device * ) 
pm_generic_restore_noirq extern int pm_generic_restore_noirq ( s#device * ) 
pm_generic_restore_early extern int pm_generic_restore_early ( s#device * ) 
pm_generic_restore extern int pm_generic_restore ( s#device * ) 

/* drivers/base/power/main.o */
dpm_resume_start extern void dpm_resume_start ( t#pm_message_t ) 
dpm_resume_end extern void dpm_resume_end ( t#pm_message_t ) 
dpm_suspend_end extern int dpm_suspend_end ( t#pm_message_t ) 
dpm_suspend_start extern int dpm_suspend_start ( t#pm_message_t ) 
__suspend_report_result extern void __suspend_report_result ( const char * , void * , int ) 
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##module
s##kstatfs
s##seq_file
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##module_kobject
s##iommu_ops
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
device_pm_wait_for_dev extern int device_pm_wait_for_dev ( s#device * , s#device * ) 
dpm_for_each_dev extern void dpm_for_each_dev ( void * , void ( * ) ( s#device * , void * ) ) 

/* drivers/base/power/qos.o */
e#pm_qos_flags_status enum pm_qos_flags_status { PM_QOS_FLAGS_UNDEFINED = - 1 , PM_QOS_FLAGS_NONE , PM_QOS_FLAGS_SOME , PM_QOS_FLAGS_ALL , } 
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
dev_pm_qos_flags e#pm_qos_flags_status dev_pm_qos_flags ( s#device * , t#s32 ) 
dev_pm_qos_add_request int dev_pm_qos_add_request ( s#device * , s#dev_pm_qos_request * , e#dev_pm_qos_req_type , t#s32 ) 
dev_pm_qos_update_request int dev_pm_qos_update_request ( s#dev_pm_qos_request * , t#s32 ) 
dev_pm_qos_remove_request int dev_pm_qos_remove_request ( s#dev_pm_qos_request * ) 
dev_pm_qos_add_notifier int dev_pm_qos_add_notifier ( s#device * , s#notifier_block * ) 
dev_pm_qos_remove_notifier int dev_pm_qos_remove_notifier ( s#device * , s#notifier_block * ) 
dev_pm_qos_add_global_notifier int dev_pm_qos_add_global_notifier ( s#notifier_block * ) 
dev_pm_qos_remove_global_notifier int dev_pm_qos_remove_global_notifier ( s#notifier_block * ) 
dev_pm_qos_add_ancestor_request int dev_pm_qos_add_ancestor_request ( s#device * , s#dev_pm_qos_request * , t#s32 ) 
dev_pm_qos_expose_latency_limit int dev_pm_qos_expose_latency_limit ( s#device * , t#s32 ) 
dev_pm_qos_hide_latency_limit void dev_pm_qos_hide_latency_limit ( s#device * ) 
dev_pm_qos_expose_flags int dev_pm_qos_expose_flags ( s#device * , t#s32 ) 
dev_pm_qos_hide_flags void dev_pm_qos_hide_flags ( s#device * ) 

/* drivers/base/power/runtime.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
pm_runtime_autosuspend_expiration extern unsigned long pm_runtime_autosuspend_expiration ( s#device * ) 
pm_runtime_set_memalloc_noio extern void pm_runtime_set_memalloc_noio ( s#device * , t#bool ) 
pm_schedule_suspend extern int pm_schedule_suspend ( s#device * , unsigned int ) 
__pm_runtime_idle extern int __pm_runtime_idle ( s#device * , int ) 
__pm_runtime_suspend extern int __pm_runtime_suspend ( s#device * , int ) 
__pm_runtime_resume extern int __pm_runtime_resume ( s#device * , int ) 
__pm_runtime_set_status extern int __pm_runtime_set_status ( s#device * , unsigned int ) 
pm_runtime_barrier extern int pm_runtime_barrier ( s#device * ) 
__pm_runtime_disable extern void __pm_runtime_disable ( s#device * , t#bool ) 
pm_runtime_enable extern void pm_runtime_enable ( s#device * ) 
pm_runtime_forbid extern void pm_runtime_forbid ( s#device * ) 
pm_runtime_allow extern void pm_runtime_allow ( s#device * ) 
pm_runtime_no_callbacks extern void pm_runtime_no_callbacks ( s#device * ) 
pm_runtime_irq_safe extern void pm_runtime_irq_safe ( s#device * ) 
pm_runtime_set_autosuspend_delay extern void pm_runtime_set_autosuspend_delay ( s#device * , int ) 
__pm_runtime_use_autosuspend extern void __pm_runtime_use_autosuspend ( s#device * , t#bool ) 

/* drivers/base/power/sysfs.o */
power_group_name extern const char power_group_name [ ] 

/* drivers/base/power/wakeup.o */
s##tvec_base
wakeup_source_prepare extern void wakeup_source_prepare ( s#wakeup_source * , const char * ) 
wakeup_source_create extern s#wakeup_source * wakeup_source_create ( const char * ) 
wakeup_source_drop extern void wakeup_source_drop ( s#wakeup_source * ) 
wakeup_source_destroy extern void wakeup_source_destroy ( s#wakeup_source * ) 
wakeup_source_add extern void wakeup_source_add ( s#wakeup_source * ) 
wakeup_source_remove extern void wakeup_source_remove ( s#wakeup_source * ) 
wakeup_source_register extern s#wakeup_source * wakeup_source_register ( const char * ) 
wakeup_source_unregister extern void wakeup_source_unregister ( s#wakeup_source * ) 
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
device_wakeup_enable extern int device_wakeup_enable ( s#device * ) 
device_wakeup_disable extern int device_wakeup_disable ( s#device * ) 
device_set_wakeup_capable extern void device_set_wakeup_capable ( s#device * , t#bool ) 
device_init_wakeup extern int device_init_wakeup ( s#device * , t#bool ) 
device_set_wakeup_enable extern int device_set_wakeup_enable ( s#device * , t#bool ) 
__pm_stay_awake extern void __pm_stay_awake ( s#wakeup_source * ) 
pm_stay_awake extern void pm_stay_awake ( s#device * ) 
__pm_relax extern void __pm_relax ( s#wakeup_source * ) 
pm_relax extern void pm_relax ( s#device * ) 
__pm_wakeup_event extern void __pm_wakeup_event ( s#wakeup_source * , unsigned int ) 
pm_wakeup_event extern void pm_wakeup_event ( s#device * , unsigned int ) 
pm_print_active_wakeup_sources extern void pm_print_active_wakeup_sources ( void ) 

/* drivers/base/regmap/regcache.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
t#regmap_lock typedef void ( * regmap_lock ) ( void * ) 
t#regmap_unlock typedef void ( * regmap_unlock ) ( void * ) 
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s#regmap_format struct regmap_format { t#size_t buf_size ; t#size_t reg_bytes ; t#size_t pad_bytes ; t#size_t val_bytes ; void ( * format_write ) ( s#regmap * , unsigned int , unsigned int ) ; void ( * format_reg ) ( void * , unsigned int , unsigned int ) ; void ( * format_val ) ( void * , unsigned int , unsigned int ) ; unsigned int ( * parse_val ) ( const void * ) ; void ( * parse_inplace ) ( void * ) ; } 
t#regmap_hw_write typedef int ( * regmap_hw_write ) ( void * , const void * , t#size_t ) 
t#regmap_hw_gather_write typedef int ( * regmap_hw_gather_write ) ( void * , const void * , t#size_t , const void * , t#size_t ) 
s#regmap_async struct regmap_async { s#list_head list ; s#work_struct cleanup ; s#regmap * map ; void * work_buf ; } 
t#regmap_hw_async_write typedef int ( * regmap_hw_async_write ) ( void * , const void * , t#size_t , const void * , t#size_t , s#regmap_async * ) 
t#regmap_hw_read typedef int ( * regmap_hw_read ) ( void * , const void * , t#size_t , void * , t#size_t ) 
t#regmap_hw_free_context typedef void ( * regmap_hw_free_context ) ( void * ) 
t#regmap_hw_async_alloc typedef s#regmap_async * ( * regmap_hw_async_alloc ) ( void ) 
e#regmap_endian enum regmap_endian { REGMAP_ENDIAN_DEFAULT = 0 , REGMAP_ENDIAN_BIG , REGMAP_ENDIAN_LITTLE , REGMAP_ENDIAN_NATIVE , } 
s#regmap_bus struct regmap_bus { t#bool fast_io ; t#regmap_hw_write write ; t#regmap_hw_gather_write gather_write ; t#regmap_hw_async_write async_write ; t#regmap_hw_read read ; t#regmap_hw_free_context free_context ; t#regmap_hw_async_alloc async_alloc ; t#u8 read_flag_mask ; e#regmap_endian reg_format_endian_default ; e#regmap_endian val_format_endian_default ; } 
s#regmap_range struct regmap_range { unsigned int range_min ; unsigned int range_max ; } 
s#regmap_access_table struct regmap_access_table { const s#regmap_range * yes_ranges ; unsigned int n_yes_ranges ; const s#regmap_range * no_ranges ; unsigned int n_no_ranges ; } 
e#regcache_type enum regcache_type { REGCACHE_NONE , REGCACHE_RBTREE , REGCACHE_COMPRESSED , REGCACHE_FLAT , } 
s#regcache_ops struct regcache_ops { const char * name ; e#regcache_type type ; int ( * init ) ( s#regmap * ) ; int ( * exit ) ( s#regmap * ) ; int ( * read ) ( s#regmap * , unsigned int , unsigned int * ) ; int ( * write ) ( s#regmap * , unsigned int , unsigned int ) ; int ( * sync ) ( s#regmap * , unsigned int , unsigned int ) ; int ( * drop ) ( s#regmap * , unsigned int , unsigned int ) ; } 
s#reg_default struct reg_default { unsigned int reg ; unsigned int def ; } 
s#regmap struct regmap { s#mutex mutex ; t#spinlock_t spinlock ; unsigned long spinlock_flags ; t#regmap_lock lock ; t#regmap_unlock unlock ; void * lock_arg ; s#device * dev ; void * work_buf ; s#regmap_format format ; const s#regmap_bus * bus ; void * bus_context ; const char * name ; t#spinlock_t async_lock ; t#wait_queue_head_t async_waitq ; s#list_head async_list ; int async_ret ; s#dentry * debugfs ; const char * debugfs_name ; unsigned int debugfs_reg_len ; unsigned int debugfs_val_len ; unsigned int debugfs_tot_len ; s#list_head debugfs_off_cache ; s#mutex cache_lock ; unsigned int max_register ; t#bool ( * writeable_reg ) ( s#device * , unsigned int ) ; t#bool ( * readable_reg ) ( s#device * , unsigned int ) ; t#bool ( * volatile_reg ) ( s#device * , unsigned int ) ; t#bool ( * precious_reg ) ( s#device * , unsigned int ) ; const s#regmap_access_table * wr_table ; const s#regmap_access_table * rd_table ; const s#regmap_access_table * volatile_table ; const s#regmap_access_table * precious_table ; int ( * reg_read ) ( void * , unsigned int , unsigned int * ) ; int ( * reg_write ) ( void * , unsigned int , unsigned int ) ; t#bool defer_caching ; t#u8 read_flag_mask ; t#u8 write_flag_mask ; int reg_shift ; int reg_stride ; const s#regcache_ops * cache_ops ; e#regcache_type cache_type ; unsigned int cache_size_raw ; unsigned int cache_word_size ; unsigned int num_reg_defaults ; unsigned int num_reg_defaults_raw ; t#u32 cache_only ; t#u32 cache_bypass ; t#bool cache_free ; s#reg_default * reg_defaults ; const void * reg_defaults_raw ; void * cache ; t#u32 cache_dirty ; s#reg_default * patch ; int patch_regs ; t#bool use_single_rw ; s#rb_root range_tree ; void * selector_work_buf ; } 
regcache_sync int regcache_sync ( s#regmap * ) 
regcache_sync_region int regcache_sync_region ( s#regmap * , unsigned int , unsigned int ) 
regcache_drop_region int regcache_drop_region ( s#regmap * , unsigned int , unsigned int ) 
regcache_cache_only void regcache_cache_only ( s#regmap * , t#bool ) 
regcache_mark_dirty void regcache_mark_dirty ( s#regmap * ) 
regcache_cache_bypass void regcache_cache_bypass ( s#regmap * , t#bool ) 

/* drivers/base/regmap/regmap.o */
regmap_reg_in_ranges t#bool regmap_reg_in_ranges ( unsigned int , const s#regmap_range * , unsigned int ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
regmap_check_range_table t#bool regmap_check_range_table ( s#regmap * , unsigned int , const s#regmap_access_table * ) 
s#regmap_range_cfg struct regmap_range_cfg { const char * name ; unsigned int range_min ; unsigned int range_max ; unsigned int selector_reg ; unsigned int selector_mask ; int selector_shift ; unsigned int window_start ; unsigned int window_len ; } 
s#regmap_config struct regmap_config { const char * name ; int reg_bits ; int reg_stride ; int pad_bits ; int val_bits ; t#bool ( * writeable_reg ) ( s#device * , unsigned int ) ; t#bool ( * readable_reg ) ( s#device * , unsigned int ) ; t#bool ( * volatile_reg ) ( s#device * , unsigned int ) ; t#bool ( * precious_reg ) ( s#device * , unsigned int ) ; t#regmap_lock lock ; t#regmap_unlock unlock ; void * lock_arg ; int ( * reg_read ) ( void * , unsigned int , unsigned int * ) ; int ( * reg_write ) ( void * , unsigned int , unsigned int ) ; t#bool fast_io ; unsigned int max_register ; const s#regmap_access_table * wr_table ; const s#regmap_access_table * rd_table ; const s#regmap_access_table * volatile_table ; const s#regmap_access_table * precious_table ; const s#reg_default * reg_defaults ; unsigned int num_reg_defaults ; e#regcache_type cache_type ; const void * reg_defaults_raw ; unsigned int num_reg_defaults_raw ; t#u8 read_flag_mask ; t#u8 write_flag_mask ; t#bool use_single_rw ; e#regmap_endian reg_format_endian ; e#regmap_endian val_format_endian ; const s#regmap_range_cfg * ranges ; unsigned int num_ranges ; } 
regmap_init s#regmap * regmap_init ( s#device * , const s#regmap_bus * , void * , const s#regmap_config * ) 
devm_regmap_init s#regmap * devm_regmap_init ( s#device * , const s#regmap_bus * , void * , const s#regmap_config * ) 
s#regmap_field struct regmap_field { s#regmap * regmap ; unsigned int mask ; unsigned int shift ; unsigned int reg ; } 
s#reg_field struct reg_field { unsigned int reg ; unsigned int lsb ; unsigned int msb ; } 
devm_regmap_field_alloc s#regmap_field * devm_regmap_field_alloc ( s#device * , s#regmap * , s#reg_field ) 
devm_regmap_field_free void devm_regmap_field_free ( s#device * , s#regmap_field * ) 
regmap_field_alloc s#regmap_field * regmap_field_alloc ( s#regmap * , s#reg_field ) 
regmap_field_free void regmap_field_free ( s#regmap_field * ) 
regmap_reinit_cache int regmap_reinit_cache ( s#regmap * , const s#regmap_config * ) 
regmap_exit void regmap_exit ( s#regmap * ) 
dev_get_regmap s#regmap * dev_get_regmap ( s#device * , const char * ) 
regmap_can_raw_write t#bool regmap_can_raw_write ( s#regmap * ) 
regmap_write int regmap_write ( s#regmap * , unsigned int , unsigned int ) 
regmap_raw_write int regmap_raw_write ( s#regmap * , unsigned int , const void * , t#size_t ) 
regmap_field_write int regmap_field_write ( s#regmap_field * , unsigned int ) 
regmap_bulk_write int regmap_bulk_write ( s#regmap * , unsigned int , const void * , t#size_t ) 
regmap_raw_write_async int regmap_raw_write_async ( s#regmap * , unsigned int , const void * , t#size_t ) 
regmap_read int regmap_read ( s#regmap * , unsigned int , unsigned int * ) 
regmap_raw_read int regmap_raw_read ( s#regmap * , unsigned int , void * , t#size_t ) 
regmap_field_read int regmap_field_read ( s#regmap_field * , unsigned int * ) 
regmap_bulk_read int regmap_bulk_read ( s#regmap * , unsigned int , void * , t#size_t ) 
regmap_update_bits int regmap_update_bits ( s#regmap * , unsigned int , unsigned int , unsigned int ) 
regmap_update_bits_check int regmap_update_bits_check ( s#regmap * , unsigned int , unsigned int , unsigned int , t#bool * ) 
regmap_async_complete_cb void regmap_async_complete_cb ( s#regmap_async * , int ) 
regmap_async_complete int regmap_async_complete ( s#regmap * ) 
regmap_register_patch int regmap_register_patch ( s#regmap * , const s#reg_default * , int ) 
regmap_get_val_bytes int regmap_get_val_bytes ( s#regmap * ) 

/* drivers/base/regmap/regmap-i2c.o */
s##regmap
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#i2c_msg struct i2c_msg { t#__u16 addr ; t#__u16 flags ; t#__u16 len ; t#__u8 * buf ; } 
u#i2c_smbus_data union i2c_smbus_data { t#__u8 byte ; t#__u16 word ; t#__u8 block [ 32 + 2 ] ; } 
s#i2c_algorithm struct i2c_algorithm { int ( * master_xfer ) ( s#i2c_adapter * , s#i2c_msg * , int ) ; int ( * smbus_xfer ) ( s#i2c_adapter * , t#u16 , unsigned short , char , t#u8 , int , u#i2c_smbus_data * ) ; t#u32 ( * functionality ) ( s#i2c_adapter * ) ; } 
s#rt_mutex struct rt_mutex { t#raw_spinlock_t wait_lock ; s#plist_head wait_list ; s#task_struct * owner ; } 
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##proc_dir_entry
s##iommu_group
s#i2c_bus_recovery_info struct i2c_bus_recovery_info { int ( * recover_bus ) ( s#i2c_adapter * ) ; int ( * get_scl ) ( s#i2c_adapter * ) ; void ( * set_scl ) ( s#i2c_adapter * , int ) ; int ( * get_sda ) ( s#i2c_adapter * ) ; void ( * prepare_recovery ) ( s#i2c_bus_recovery_info * ) ; void ( * unprepare_recovery ) ( s#i2c_bus_recovery_info * ) ; int scl_gpio ; int sda_gpio ; } 
s#i2c_adapter struct i2c_adapter { s#module * owner ; unsigned int class ; const s#i2c_algorithm * algo ; void * algo_data ; s#rt_mutex bus_lock ; int timeout ; int retries ; s#device dev ; int nr ; char name [ 48 ] ; s#completion dev_released ; s#mutex userspace_clients_lock ; s#list_head userspace_clients ; s#i2c_bus_recovery_info * bus_recovery_info ; } 
s#i2c_device_id struct i2c_device_id { char name [ 20 ] ; t#kernel_ulong_t driver_data ; } 
s#i2c_board_info struct i2c_board_info { char type [ 20 ] ; unsigned short flags ; unsigned short addr ; void * platform_data ; s#dev_archdata * archdata ; s#device_node * of_node ; s#acpi_dev_node acpi_node ; int irq ; } 
s#i2c_driver struct i2c_driver { unsigned int class ; int ( * attach_adapter ) ( s#i2c_adapter * ) __attribute__ ( ( deprecated ) ) ; int ( * probe ) ( s#i2c_client * , const s#i2c_device_id * ) ; int ( * remove ) ( s#i2c_client * ) ; void ( * shutdown ) ( s#i2c_client * ) ; int ( * suspend ) ( s#i2c_client * , t#pm_message_t ) ; int ( * resume ) ( s#i2c_client * ) ; void ( * alert ) ( s#i2c_client * , unsigned int ) ; int ( * command ) ( s#i2c_client * , unsigned int , void * ) ; s#device_driver driver ; const s#i2c_device_id * id_table ; int ( * detect ) ( s#i2c_client * , s#i2c_board_info * ) ; const unsigned short * address_list ; s#list_head clients ; } 
s#i2c_client struct i2c_client { unsigned short flags ; unsigned short addr ; char name [ 20 ] ; s#i2c_adapter * adapter ; s#i2c_driver * driver ; s#device dev ; int irq ; s#list_head detected ; } 
regmap_init_i2c s#regmap * regmap_init_i2c ( s#i2c_client * , const s#regmap_config * ) 
devm_regmap_init_i2c s#regmap * devm_regmap_init_i2c ( s#i2c_client * , const s#regmap_config * ) 

/* drivers/base/regmap/regmap-mmio.o */
s##regmap
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
regmap_init_mmio_clk s#regmap * regmap_init_mmio_clk ( s#device * , const char * , void * , const s#regmap_config * ) 
devm_regmap_init_mmio_clk s#regmap * devm_regmap_init_mmio_clk ( s#device * , const char * , void * , const s#regmap_config * ) 

/* drivers/base/reservation.o */
s#ww_class struct ww_class { t#atomic_long_t stamp ; s#lock_class_key acquire_key ; s#lock_class_key mutex_key ; const char * acquire_name ; const char * mutex_name ; } 
reservation_ww_class extern s#ww_class reservation_ww_class 

/* drivers/base/syscore.o */
s#syscore_ops struct syscore_ops { s#list_head node ; int ( * suspend ) ( void ) ; void ( * resume ) ( void ) ; void ( * shutdown ) ( void ) ; } 
register_syscore_ops extern void register_syscore_ops ( s#syscore_ops * ) 
unregister_syscore_ops extern void unregister_syscore_ops ( s#syscore_ops * ) 
syscore_suspend extern int syscore_suspend ( void ) 
syscore_resume extern void syscore_resume ( void ) 

/* drivers/base/transport_class.o */
s##module
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s#transport_class struct transport_class { s#class class ; int ( * setup ) ( s#transport_container * , s#device * , s#device * ) ; int ( * configure ) ( s#transport_container * , s#device * , s#device * ) ; int ( * remove ) ( s#transport_container * , s#device * , s#device * ) ; } 
transport_class_register int transport_class_register ( s#transport_class * ) 
transport_class_unregister void transport_class_unregister ( s#transport_class * ) 
s#anon_transport_class struct anon_transport_class { s#transport_class tclass ; s#attribute_container container ; } 
anon_transport_class_register int anon_transport_class_register ( s#anon_transport_class * ) 
anon_transport_class_unregister void anon_transport_class_unregister ( s#anon_transport_class * ) 
transport_setup_device void transport_setup_device ( s#device * ) 
transport_add_device void transport_add_device ( s#device * ) 
transport_configure_device void transport_configure_device ( s#device * ) 
transport_remove_device void transport_remove_device ( s#device * ) 
transport_destroy_device void transport_destroy_device ( s#device * ) 

/* drivers/bcma/core.o */
s#bcma_host_ops struct bcma_host_ops { t#u8 ( * read8 ) ( s#bcma_device * , t#u16 ) ; t#u16 ( * read16 ) ( s#bcma_device * , t#u16 ) ; t#u32 ( * read32 ) ( s#bcma_device * , t#u16 ) ; void ( * write8 ) ( s#bcma_device * , t#u16 , t#u8 ) ; void ( * write16 ) ( s#bcma_device * , t#u16 , t#u16 ) ; void ( * write32 ) ( s#bcma_device * , t#u16 , t#u32 ) ; void ( * block_read ) ( s#bcma_device * , void * , t#size_t , t#u16 , t#u8 ) ; void ( * block_write ) ( s#bcma_device * , const void * , t#size_t , t#u16 , t#u8 ) ; t#u32 ( * aread32 ) ( s#bcma_device * , t#u16 ) ; void ( * awrite32 ) ( s#bcma_device * , t#u16 , t#u32 ) ; } 
e#bcma_hosttype enum bcma_hosttype { BCMA_HOSTTYPE_PCI , BCMA_HOSTTYPE_SDIO , BCMA_HOSTTYPE_SOC , } 
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##sdio_func
s#bcma_chipinfo struct bcma_chipinfo { t#u16 id ; t#u8 rev ; t#u8 pkg ; } 
s#bcma_boardinfo struct bcma_boardinfo { t#u16 vendor ; t#u16 type ; } 
s#bcma_chipcommon_pmu struct bcma_chipcommon_pmu { t#u8 rev ; t#u32 crystalfreq ; } 
s##mfd_cell
s##gpio_desc
s#of_phandle_args struct of_phandle_args { s#device_node * np ; int args_count ; t#uint32_t args [ 8 ] ; } 
s#gpio_chip struct gpio_chip { const char * label ; s#device * dev ; s#module * owner ; s#list_head list ; int ( * request ) ( s#gpio_chip * , unsigned ) ; void ( * free ) ( s#gpio_chip * , unsigned ) ; int ( * get_direction ) ( s#gpio_chip * , unsigned ) ; int ( * direction_input ) ( s#gpio_chip * , unsigned ) ; int ( * get ) ( s#gpio_chip * , unsigned ) ; int ( * direction_output ) ( s#gpio_chip * , unsigned , int ) ; int ( * set_debounce ) ( s#gpio_chip * , unsigned , unsigned ) ; void ( * set ) ( s#gpio_chip * , unsigned , int ) ; int ( * to_irq ) ( s#gpio_chip * , unsigned ) ; void ( * dbg_show ) ( s#seq_file * , s#gpio_chip * ) ; int base ; t#u16 ngpio ; s#gpio_desc * desc ; const char * const * names ; unsigned can_sleep : 1 ; unsigned exported : 1 ; s#device_node * of_node ; int of_gpio_n_cells ; int ( * of_xlate ) ( s#gpio_chip * , const s#of_phandle_args * , t#u32 * ) ; } 
s#bcma_drv_cc struct bcma_drv_cc { s#bcma_device * core ; t#u32 status ; t#u32 capabilities ; t#u32 capabilities_ext ; t#u8 setup_done : 1 ; t#u8 early_setup_done : 1 ; t#u16 fast_pwrup_delay ; s#bcma_chipcommon_pmu pmu ; t#u32 ticks_per_ms ; s#platform_device * watchdog ; t#spinlock_t gpio_lock ; s#gpio_chip gpio ; } 
s#bcma_drv_pci struct bcma_drv_pci { s#bcma_device * core ; t#u8 setup_done : 1 ; t#u8 hostmode : 1 ; } 
s#bcma_drv_mips struct bcma_drv_mips { s#bcma_device * core ; t#u8 setup_done : 1 ; t#u8 early_setup_done : 1 ; } 
s#bcma_drv_gmac_cmn struct bcma_drv_gmac_cmn { s#bcma_device * core ; s#mutex phy_mutex ; } 
s#ssb_sprom_core_pwr_info struct ssb_sprom_core_pwr_info { t#u8 itssi_2g , itssi_5g ; t#u8 maxpwr_2g , maxpwr_5gl , maxpwr_5g , maxpwr_5gh ; t#u16 pa_2g [ 4 ] , pa_5gl [ 4 ] , pa_5g [ 4 ] , pa_5gh [ 4 ] ; } 
s#ssb_sprom struct ssb_sprom { t#u8 revision ; t#u8 il0mac [ 6 ] __attribute__ ( ( aligned ( sizeof ( u16 ) ) ) ) ; t#u8 et0mac [ 6 ] __attribute__ ( ( aligned ( sizeof ( u16 ) ) ) ) ; t#u8 et1mac [ 6 ] __attribute__ ( ( aligned ( sizeof ( u16 ) ) ) ) ; t#u8 et0phyaddr ; t#u8 et1phyaddr ; t#u8 et0mdcport ; t#u8 et1mdcport ; t#u16 board_rev ; t#u16 board_num ; t#u16 board_type ; t#u8 country_code ; char alpha2 [ 2 ] ; t#u8 leddc_on_time ; t#u8 leddc_off_time ; t#u8 ant_available_a ; t#u8 ant_available_bg ; t#u16 pa0b0 ; t#u16 pa0b1 ; t#u16 pa0b2 ; t#u16 pa1b0 ; t#u16 pa1b1 ; t#u16 pa1b2 ; t#u16 pa1lob0 ; t#u16 pa1lob1 ; t#u16 pa1lob2 ; t#u16 pa1hib0 ; t#u16 pa1hib1 ; t#u16 pa1hib2 ; t#u8 gpio0 ; t#u8 gpio1 ; t#u8 gpio2 ; t#u8 gpio3 ; t#u8 maxpwr_bg ; t#u8 maxpwr_al ; t#u8 maxpwr_a ; t#u8 maxpwr_ah ; t#u8 itssi_a ; t#u8 itssi_bg ; t#u8 tri2g ; t#u8 tri5gl ; t#u8 tri5g ; t#u8 tri5gh ; t#u8 txpid2g [ 4 ] ; t#u8 txpid5gl [ 4 ] ; t#u8 txpid5g [ 4 ] ; t#u8 txpid5gh [ 4 ] ; t#s8 rxpo2g ; t#s8 rxpo5g ; t#u8 rssisav2g ; t#u8 rssismc2g ; t#u8 rssismf2g ; t#u8 bxa2g ; t#u8 rssisav5g ; t#u8 rssismc5g ; t#u8 rssismf5g ; t#u8 bxa5g ; t#u16 cck2gpo ; t#u32 ofdm2gpo ; t#u32 ofdm5glpo ; t#u32 ofdm5gpo ; t#u32 ofdm5ghpo ; t#u16 boardflags_lo ; t#u16 boardflags_hi ; t#u16 boardflags2_lo ; t#u16 boardflags2_hi ; s#ssb_sprom_core_pwr_info core_pwr_info [ 4 ] ; struct { t#s8 a0 , a1 , a2 , a3 ; } antenna_gain ; struct { struct { t#u8 tssipos , extpa_gain , pdet_range , tr_iso , antswlut ; } ghz2 ; struct { t#u8 tssipos , extpa_gain , pdet_range , tr_iso , antswlut ; } ghz5 ; } fem ; t#u16 mcs2gpo [ 8 ] ; t#u16 mcs5gpo [ 8 ] ; t#u16 mcs5glpo [ 8 ] ; t#u16 mcs5ghpo [ 8 ] ; t#u8 opo ; t#u8 rxgainerr2ga [ 3 ] ; t#u8 rxgainerr5gla [ 3 ] ; t#u8 rxgainerr5gma [ 3 ] ; t#u8 rxgainerr5gha [ 3 ] ; t#u8 rxgainerr5gua [ 3 ] ; t#u8 noiselvl2ga [ 3 ] ; t#u8 noiselvl5gla [ 3 ] ; t#u8 noiselvl5gma [ 3 ] ; t#u8 noiselvl5gha [ 3 ] ; t#u8 noiselvl5gua [ 3 ] ; t#u8 regrev ; t#u8 txchain ; t#u8 rxchain ; t#u8 antswitch ; t#u16 cddpo ; t#u16 stbcpo ; t#u16 bw40po ; t#u16 bwduppo ; t#u8 tempthresh ; t#u8 tempoffset ; t#u16 rawtempsense ; t#u8 measpower ; t#u8 tempsense_slope ; t#u8 tempcorrx ; t#u8 tempsense_option ; t#u8 freqoffset_corr ; t#u8 iqcal_swp_dis ; t#u8 hw_iqcal_en ; t#u8 elna2g ; t#u8 elna5g ; t#u8 phycal_tempdelta ; t#u8 temps_period ; t#u8 temps_hysteresis ; t#u8 measpower1 ; t#u8 measpower2 ; t#u8 pcieingress_war ; t#u16 cckbw202gpo ; t#u16 cckbw20ul2gpo ; t#u32 legofdmbw202gpo ; t#u32 legofdmbw20ul2gpo ; t#u32 legofdmbw205glpo ; t#u32 legofdmbw20ul5glpo ; t#u32 legofdmbw205gmpo ; t#u32 legofdmbw20ul5gmpo ; t#u32 legofdmbw205ghpo ; t#u32 legofdmbw20ul5ghpo ; t#u32 mcsbw202gpo ; t#u32 mcsbw20ul2gpo ; t#u32 mcsbw402gpo ; t#u32 mcsbw205glpo ; t#u32 mcsbw20ul5glpo ; t#u32 mcsbw405glpo ; t#u32 mcsbw205gmpo ; t#u32 mcsbw20ul5gmpo ; t#u32 mcsbw405gmpo ; t#u32 mcsbw205ghpo ; t#u32 mcsbw20ul5ghpo ; t#u32 mcsbw405ghpo ; t#u16 mcs32po ; t#u16 legofdm40duppo ; t#u8 sar2g ; t#u8 sar5g ; } 
s#bcma_bus struct bcma_bus { void * mmio ; const s#bcma_host_ops * ops ; e#bcma_hosttype hosttype ; union { s#pci_dev * host_pci ; s#sdio_func * host_sdio ; } ; s#bcma_chipinfo chipinfo ; s#bcma_boardinfo boardinfo ; s#bcma_device * mapped_core ; s#list_head cores ; t#u8 nr_cores ; t#u8 init_done : 1 ; t#u8 num ; s#bcma_drv_cc drv_cc ; s#bcma_drv_pci drv_pci [ 2 ] ; s#bcma_drv_mips drv_mips ; s#bcma_drv_gmac_cmn drv_gmac_cmn ; s#ssb_sprom sprom ; } 
s#bcma_device_id struct bcma_device_id { t#__u16 manuf ; t#__u16 id ; t#__u8 rev ; t#__u8 class ; } 
s#bcma_device struct bcma_device { s#bcma_bus * bus ; s#bcma_device_id id ; s#device dev ; s#device * dma_dev ; unsigned int irq ; t#bool dev_registered ; t#u8 core_index ; t#u8 core_unit ; t#u32 addr ; t#u32 addr1 ; t#u32 wrap ; void * io_addr ; void * io_wrap ; void * drvdata ; s#list_head list ; } 
bcma_core_is_enabled extern t#bool bcma_core_is_enabled ( s#bcma_device * ) 
bcma_core_disable extern void bcma_core_disable ( s#bcma_device * , t#u32 ) 
bcma_core_enable extern int bcma_core_enable ( s#bcma_device * , t#u32 ) 
e#bcma_clkmode enum bcma_clkmode { BCMA_CLKMODE_FAST , BCMA_CLKMODE_DYNAMIC , } 
bcma_core_set_clockmode extern void bcma_core_set_clockmode ( s#bcma_device * , e#bcma_clkmode ) 
bcma_core_pll_ctl extern void bcma_core_pll_ctl ( s#bcma_device * , t#u32 , t#u32 , t#bool ) 
bcma_core_dma_translation extern t#u32 bcma_core_dma_translation ( s#bcma_device * ) 

/* drivers/bcma/driver_chipcommon.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##sdio_func
s##mfd_cell
s##gpio_desc
bcma_chipco_get_alp_clock extern t#u32 bcma_chipco_get_alp_clock ( s#bcma_drv_cc * ) 
bcma_chipco_gpio_out t#u32 bcma_chipco_gpio_out ( s#bcma_drv_cc * , t#u32 , t#u32 ) 
bcma_chipco_gpio_outen t#u32 bcma_chipco_gpio_outen ( s#bcma_drv_cc * , t#u32 , t#u32 ) 
bcma_chipco_gpio_control t#u32 bcma_chipco_gpio_control ( s#bcma_drv_cc * , t#u32 , t#u32 ) 

/* drivers/bcma/driver_chipcommon_pmu.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##sdio_func
s##mfd_cell
s##gpio_desc
bcma_chipco_pll_read extern t#u32 bcma_chipco_pll_read ( s#bcma_drv_cc * , t#u32 ) 
bcma_chipco_pll_write extern void bcma_chipco_pll_write ( s#bcma_drv_cc * , t#u32 , t#u32 ) 
bcma_chipco_pll_maskset extern void bcma_chipco_pll_maskset ( s#bcma_drv_cc * , t#u32 , t#u32 , t#u32 ) 
bcma_chipco_chipctl_maskset extern void bcma_chipco_chipctl_maskset ( s#bcma_drv_cc * , t#u32 , t#u32 , t#u32 ) 
bcma_chipco_regctl_maskset extern void bcma_chipco_regctl_maskset ( s#bcma_drv_cc * , t#u32 , t#u32 , t#u32 ) 
bcma_pmu_get_bus_clock extern t#u32 bcma_pmu_get_bus_clock ( s#bcma_drv_cc * ) 
bcma_pmu_spuravoid_pllupdate extern void bcma_pmu_spuravoid_pllupdate ( s#bcma_drv_cc * , int ) 

/* drivers/bcma/driver_pci.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##sdio_func
s##mfd_cell
s##gpio_desc
bcma_core_pci_power_save extern void bcma_core_pci_power_save ( s#bcma_bus * , t#bool ) 
bcma_core_pci_irq_ctl extern int bcma_core_pci_irq_ctl ( s#bcma_drv_pci * , s#bcma_device * , t#bool ) 
bcma_core_pci_up extern void bcma_core_pci_up ( s#bcma_bus * ) 
bcma_core_pci_down extern void bcma_core_pci_down ( s#bcma_bus * ) 

/* drivers/bcma/main.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##sdio_func
s##mfd_cell
s##gpio_desc
bcma_find_core extern s#bcma_device * bcma_find_core ( s#bcma_bus * , t#u16 ) 
s#bcma_driver struct bcma_driver { const char * name ; const s#bcma_device_id * id_table ; int ( * probe ) ( s#bcma_device * ) ; void ( * remove ) ( s#bcma_device * ) ; int ( * suspend ) ( s#bcma_device * ) ; int ( * resume ) ( s#bcma_device * ) ; void ( * shutdown ) ( s#bcma_device * ) ; s#device_driver drv ; } 
__bcma_driver_register extern int __bcma_driver_register ( s#bcma_driver * , s#module * ) 
bcma_driver_unregister extern void bcma_driver_unregister ( s#bcma_driver * ) 

/* drivers/block/loop.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##optimistic_spin_queue
s#pipe_buf_operations struct pipe_buf_operations { int can_merge ; void * ( * map ) ( s#pipe_inode_info * , s#pipe_buffer * , int ) ; void ( * unmap ) ( s#pipe_inode_info * , s#pipe_buffer * , void * ) ; int ( * confirm ) ( s#pipe_inode_info * , s#pipe_buffer * ) ; void ( * release ) ( s#pipe_inode_info * , s#pipe_buffer * ) ; int ( * steal ) ( s#pipe_inode_info * , s#pipe_buffer * ) ; void ( * get ) ( s#pipe_inode_info * , s#pipe_buffer * ) ; } 
s#pipe_buffer struct pipe_buffer { s#page * page ; unsigned int offset , len ; const s#pipe_buf_operations * ops ; unsigned int flags ; unsigned long private ; } 
s#pipe_inode_info struct pipe_inode_info { s#mutex mutex ; t#wait_queue_head_t wait ; unsigned int nrbufs , curbuf , buffers ; unsigned int readers ; unsigned int writers ; unsigned int files ; unsigned int waiting_writers ; unsigned int r_counter ; unsigned int w_counter ; s#page * tmp_page ; s#fasync_struct * fasync_readers ; s#fasync_struct * fasync_writers ; s#pipe_buffer * bufs ; } 
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##workqueue_struct
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s##slab
s#loop_device struct loop_device { int lo_number ; int lo_refcnt ; t#loff_t lo_offset ; t#loff_t lo_sizelimit ; int lo_flags ; int ( * transfer ) ( s#loop_device * , int , s#page * , unsigned , s#page * , unsigned , int , t#sector_t ) ; char lo_file_name [ 64 ] ; char lo_crypt_name [ 64 ] ; char lo_encrypt_key [ 32 ] ; int lo_encrypt_key_size ; s#loop_func_table * lo_encryption ; t#__u32 lo_init [ 2 ] ; t#kuid_t lo_key_owner ; int ( * ioctl ) ( s#loop_device * , int , unsigned long ) ; s#file * lo_backing_file ; s#block_device * lo_device ; unsigned lo_blocksize ; void * key_data ; t#gfp_t old_gfp_mask ; t#spinlock_t lo_lock ; s#bio_list lo_bio_list ; unsigned int lo_bio_count ; int lo_state ; s#mutex lo_ctl_mutex ; s#task_struct * lo_thread ; t#wait_queue_head_t lo_event ; t#wait_queue_head_t lo_req_wait ; s#request_queue * lo_queue ; s#gendisk * lo_disk ; } 
s#loop_info64 struct loop_info64 { t#__u64 lo_device ; t#__u64 lo_inode ; t#__u64 lo_rdevice ; t#__u64 lo_offset ; t#__u64 lo_sizelimit ; t#__u32 lo_number ; t#__u32 lo_encrypt_type ; t#__u32 lo_encrypt_key_size ; t#__u32 lo_flags ; t#__u8 lo_file_name [ 64 ] ; t#__u8 lo_crypt_name [ 64 ] ; t#__u8 lo_encrypt_key [ 32 ] ; t#__u64 lo_init [ 2 ] ; } 
s#loop_func_table struct loop_func_table { int number ; int ( * transfer ) ( s#loop_device * , int , s#page * , unsigned , s#page * , unsigned , int , t#sector_t ) ; int ( * init ) ( s#loop_device * , const s#loop_info64 * ) ; int ( * release ) ( s#loop_device * ) ; int ( * ioctl ) ( s#loop_device * , int , unsigned long ) ; s#module * owner ; } 
loop_register_transfer int loop_register_transfer ( s#loop_func_table * ) 
loop_unregister_transfer int loop_unregister_transfer ( int ) 

/* drivers/bluetooth/btmrvl_main.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##user_namespace
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##workqueue_struct
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##mem_cgroup
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
t#bdaddr_t typedef struct { t#__u8 b [ 6 ] ; } __attribute__ ( ( packed ) ) bdaddr_t 
s#amp_assoc struct amp_assoc { t#__u16 len ; t#__u16 offset ; t#__u16 rem_len ; t#__u16 len_so_far ; t#__u8 data [ 672 ] ; } 
s#discovery_state struct discovery_state { int type ; enum { DISCOVERY_STOPPED , DISCOVERY_STARTING , DISCOVERY_FINDING , DISCOVERY_RESOLVING , DISCOVERY_STOPPING , } state ; s#list_head all ; s#list_head unknown ; s#list_head resolve ; t#__u32 timestamp ; } 
s#hci_conn_hash struct hci_conn_hash { s#list_head list ; unsigned int acl_num ; unsigned int amp_num ; unsigned int sco_num ; unsigned int le_num ; } 
s#hci_dev_stats struct hci_dev_stats { t#__u32 err_rx ; t#__u32 err_tx ; t#__u32 cmd_tx ; t#__u32 evt_rx ; t#__u32 acl_tx ; t#__u32 acl_rx ; t#__u32 sco_tx ; t#__u32 sco_rx ; t#__u32 byte_rx ; t#__u32 byte_tx ; } 
s##rfkill
s#hci_dev struct hci_dev { s#list_head list ; s#mutex lock ; char name [ 8 ] ; unsigned long flags ; t#__u16 id ; t#__u8 bus ; t#__u8 dev_type ; t#bdaddr_t bdaddr ; t#__u8 dev_name [ 248 ] ; t#__u8 short_name [ 10 ] ; t#__u8 eir [ 240 ] ; t#__u8 dev_class [ 3 ] ; t#__u8 major_class ; t#__u8 minor_class ; t#__u8 max_page ; t#__u8 features [ 3 ] [ 8 ] ; t#__u8 le_features [ 8 ] ; t#__u8 le_white_list_size ; t#__u8 le_states [ 8 ] ; t#__u8 commands [ 64 ] ; t#__u8 hci_ver ; t#__u16 hci_rev ; t#__u8 lmp_ver ; t#__u16 manufacturer ; t#__u16 lmp_subver ; t#__u16 voice_setting ; t#__u8 io_capability ; t#__s8 inq_tx_power ; t#__u16 page_scan_interval ; t#__u16 page_scan_window ; t#__u8 page_scan_type ; t#__u16 devid_source ; t#__u16 devid_vendor ; t#__u16 devid_product ; t#__u16 devid_version ; t#__u16 pkt_type ; t#__u16 esco_type ; t#__u16 link_policy ; t#__u16 link_mode ; t#__u32 idle_timeout ; t#__u16 sniff_min_interval ; t#__u16 sniff_max_interval ; t#__u8 amp_status ; t#__u32 amp_total_bw ; t#__u32 amp_max_bw ; t#__u32 amp_min_latency ; t#__u32 amp_max_pdu ; t#__u8 amp_type ; t#__u16 amp_pal_cap ; t#__u16 amp_assoc_size ; t#__u32 amp_max_flush_to ; t#__u32 amp_be_flush_to ; s#amp_assoc loc_assoc ; t#__u8 flow_ctl_mode ; unsigned int auto_accept_delay ; unsigned long quirks ; t#atomic_t cmd_cnt ; unsigned int acl_cnt ; unsigned int sco_cnt ; unsigned int le_cnt ; unsigned int acl_mtu ; unsigned int sco_mtu ; unsigned int le_mtu ; unsigned int acl_pkts ; unsigned int sco_pkts ; unsigned int le_pkts ; t#__u16 block_len ; t#__u16 block_mtu ; t#__u16 num_blocks ; t#__u16 block_cnt ; unsigned long acl_last_tx ; unsigned long sco_last_tx ; unsigned long le_last_tx ; s#workqueue_struct * workqueue ; s#workqueue_struct * req_workqueue ; s#work_struct power_on ; s#delayed_work power_off ; t#__u16 discov_timeout ; s#delayed_work discov_off ; s#delayed_work service_cache ; s#timer_list cmd_timer ; s#work_struct rx_work ; s#work_struct cmd_work ; s#work_struct tx_work ; s#sk_buff_head rx_q ; s#sk_buff_head raw_q ; s#sk_buff_head cmd_q ; s#sk_buff * recv_evt ; s#sk_buff * sent_cmd ; s#sk_buff * reassembly [ 4 ] ; s#mutex req_lock ; t#wait_queue_head_t req_wait_q ; t#__u32 req_status ; t#__u32 req_result ; s#list_head mgmt_pending ; s#discovery_state discovery ; s#hci_conn_hash conn_hash ; s#list_head blacklist ; s#list_head uuids ; s#list_head link_keys ; s#list_head long_term_keys ; s#list_head remote_oob_data ; s#hci_dev_stats stat ; t#atomic_t promisc ; s#dentry * debugfs ; s#device dev ; s#rfkill * rfkill ; unsigned long dev_flags ; s#delayed_work le_scan_disable ; t#__s8 adv_tx_power ; t#__u8 adv_data [ 31 ] ; t#__u8 adv_data_len ; int ( * open ) ( s#hci_dev * ) ; int ( * close ) ( s#hci_dev * ) ; int ( * flush ) ( s#hci_dev * ) ; int ( * setup ) ( s#hci_dev * ) ; int ( * send ) ( s#sk_buff * ) ; void ( * notify ) ( s#hci_dev * , unsigned int ) ; int ( * ioctl ) ( s#hci_dev * , unsigned int , unsigned long ) ; } 
s#btmrvl_device struct btmrvl_device { void * card ; s#hci_dev * hcidev ; t#u8 dev_type ; t#u8 tx_dnld_rdy ; t#u8 psmode ; t#u8 pscmd ; t#u8 hsmode ; t#u8 hscmd ; t#u16 gpio_gap ; t#u8 hscfgcmd ; t#u8 sendcmdflag ; } 
s#btmrvl_adapter struct btmrvl_adapter { t#u32 int_count ; s#sk_buff_head tx_queue ; t#u8 psmode ; t#u8 ps_state ; t#u8 hs_state ; t#u8 wakeup_tries ; t#wait_queue_head_t cmd_wait_q ; t#u8 cmd_complete ; t#bool is_suspended ; } 
s#btmrvl_thread struct btmrvl_thread { s#task_struct * task ; t#wait_queue_head_t wait_q ; void * priv ; } 
s#btmrvl_private struct btmrvl_private { s#btmrvl_device btmrvl_dev ; s#btmrvl_adapter * adapter ; s#btmrvl_thread main_thread ; int ( * hw_host_to_card ) ( s#btmrvl_private * , t#u8 * , t#u16 ) ; int ( * hw_wakeup_firmware ) ( s#btmrvl_private * ) ; int ( * hw_process_int_status ) ( s#btmrvl_private * ) ; t#spinlock_t driver_lock ; void * debugfs_data ; } 
btmrvl_interrupt void btmrvl_interrupt ( s#btmrvl_private * ) 
btmrvl_check_evtpkt t#bool btmrvl_check_evtpkt ( s#btmrvl_private * , s#sk_buff * ) 
btmrvl_process_event int btmrvl_process_event ( s#btmrvl_private * , s#sk_buff * ) 
btmrvl_send_module_cfg_cmd int btmrvl_send_module_cfg_cmd ( s#btmrvl_private * , int ) 
btmrvl_send_hscfg_cmd int btmrvl_send_hscfg_cmd ( s#btmrvl_private * ) 
btmrvl_enable_ps int btmrvl_enable_ps ( s#btmrvl_private * ) 
btmrvl_enable_hs int btmrvl_enable_hs ( s#btmrvl_private * ) 
btmrvl_register_hdev int btmrvl_register_hdev ( s#btmrvl_private * ) 
btmrvl_add_card s#btmrvl_private * btmrvl_add_card ( void * ) 
btmrvl_remove_card int btmrvl_remove_card ( s#btmrvl_private * ) 

/* drivers/cdrom/cdrom.o */
s#cdrom_msf0 struct cdrom_msf0 { t#__u8 minute ; t#__u8 second ; t#__u8 frame ; } 
u#cdrom_addr union cdrom_addr { s#cdrom_msf0 msf ; int lba ; } 
s#cdrom_multisession struct cdrom_multisession { u#cdrom_addr addr ; t#__u8 xa_flag ; t#__u8 addr_format ; } 
s#cdrom_mcn struct cdrom_mcn { t#__u8 medium_catalog_number [ 14 ] ; } 
s#request_sense struct request_sense { t#__u8 error_code : 7 ; t#__u8 valid : 1 ; t#__u8 segment_number ; t#__u8 sense_key : 4 ; t#__u8 reserved2 : 1 ; t#__u8 ili : 1 ; t#__u8 reserved1 : 2 ; t#__u8 information [ 4 ] ; t#__u8 add_sense_len ; t#__u8 command_info [ 4 ] ; t#__u8 asc ; t#__u8 ascq ; t#__u8 fruc ; t#__u8 sks [ 3 ] ; t#__u8 asb [ 46 ] ; } 
s#packet_command struct packet_command { unsigned char cmd [ 12 ] ; unsigned char * buffer ; unsigned int buflen ; int stat ; s#request_sense * sense ; unsigned char data_direction ; int quiet ; int timeout ; void * reserved [ 1 ] ; } 
s#cdrom_device_ops struct cdrom_device_ops { int ( * open ) ( s#cdrom_device_info * , int ) ; void ( * release ) ( s#cdrom_device_info * ) ; int ( * drive_status ) ( s#cdrom_device_info * , int ) ; unsigned int ( * check_events ) ( s#cdrom_device_info * , unsigned int , int ) ; int ( * media_changed ) ( s#cdrom_device_info * , int ) ; int ( * tray_move ) ( s#cdrom_device_info * , int ) ; int ( * lock_door ) ( s#cdrom_device_info * , int ) ; int ( * select_speed ) ( s#cdrom_device_info * , int ) ; int ( * select_disc ) ( s#cdrom_device_info * , int ) ; int ( * get_last_session ) ( s#cdrom_device_info * , s#cdrom_multisession * ) ; int ( * get_mcn ) ( s#cdrom_device_info * , s#cdrom_mcn * ) ; int ( * reset ) ( s#cdrom_device_info * ) ; int ( * audio_ioctl ) ( s#cdrom_device_info * , unsigned int , void * ) ; const int capability ; int n_minors ; int ( * generic_packet ) ( s#cdrom_device_info * , s#packet_command * ) ; } 
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##tvec_base
s##workqueue_struct
s##mtd_info
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##timer_rand_state
s##disk_events
s#cdrom_device_info struct cdrom_device_info { s#cdrom_device_ops * ops ; s#list_head list ; s#gendisk * disk ; void * handle ; int mask ; int speed ; int capacity ; unsigned int options : 30 ; unsigned mc_flags : 2 ; unsigned int vfs_events ; unsigned int ioctl_events ; int use_count ; char name [ 20 ] ; t#__u8 sanyo_slot : 2 ; t#__u8 keeplocked : 1 ; t#__u8 reserved : 5 ; int cdda_method ; t#__u8 last_sense ; t#__u8 media_written ; unsigned short mmc3_profile ; int for_data ; int ( * exit ) ( s#cdrom_device_info * ) ; int mrw_mode_page ; } 
cdrom_check_events extern unsigned int cdrom_check_events ( s#cdrom_device_info * , unsigned int ) 
cdrom_get_last_written extern int cdrom_get_last_written ( s#cdrom_device_info * , long * ) 
register_cdrom extern int register_cdrom ( s#cdrom_device_info * ) 
unregister_cdrom extern void unregister_cdrom ( s#cdrom_device_info * ) 
cdrom_open extern int cdrom_open ( s#cdrom_device_info * , s#block_device * , t#fmode_t ) 
cdrom_release extern void cdrom_release ( s#cdrom_device_info * , t#fmode_t ) 
cdrom_ioctl extern int cdrom_ioctl ( s#cdrom_device_info * , s#block_device * , t#fmode_t , unsigned int , unsigned long ) 
cdrom_media_changed extern int cdrom_media_changed ( s#cdrom_device_info * ) 
cdrom_number_of_slots extern int cdrom_number_of_slots ( s#cdrom_device_info * ) 
cdrom_mode_select extern int cdrom_mode_select ( s#cdrom_device_info * , s#packet_command * ) 
cdrom_mode_sense extern int cdrom_mode_sense ( s#cdrom_device_info * , s#packet_command * , int , int ) 
init_cdrom_command extern void init_cdrom_command ( s#packet_command * , void * , int , int ) 
s#media_event_desc struct media_event_desc { t#__u8 media_event_code : 4 ; t#__u8 reserved1 : 4 ; t#__u8 door_open : 1 ; t#__u8 media_present : 1 ; t#__u8 reserved2 : 6 ; t#__u8 start_slot ; t#__u8 end_slot ; } 
cdrom_get_media_event extern int cdrom_get_media_event ( s#cdrom_device_info * , s#media_event_desc * ) 

/* drivers/char/agp/backend.o */
s#agp_version struct agp_version { t#u16 major ; t#u16 minor ; } 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
e#aper_size_type enum aper_size_type { U8_APER_SIZE , U16_APER_SIZE , U32_APER_SIZE , LVL2_APER_SIZE , FIXED_APER_SIZE } 
s#gatt_mask struct gatt_mask { unsigned long mask ; t#u32 type ; } 
t#__kernel_off_t typedef t#__kernel_long_t __kernel_off_t 
t#off_t typedef t#__kernel_off_t off_t 
s#agp_memory struct agp_memory { s#agp_memory * next ; s#agp_memory * prev ; s#agp_bridge_data * bridge ; s#page * * pages ; t#size_t page_count ; int key ; int num_scratch_pages ; t#off_t pg_start ; t#u32 type ; t#u32 physical ; t#bool is_bound ; t#bool is_flushed ; s#list_head mapped_list ; s#scatterlist * sg_list ; int num_sg ; } 
s#agp_bridge_driver struct agp_bridge_driver { s#module * owner ; const void * aperture_sizes ; int num_aperture_sizes ; e#aper_size_type size_type ; t#bool cant_use_aperture ; t#bool needs_scratch_page ; const s#gatt_mask * masks ; int ( * fetch_size ) ( void ) ; int ( * configure ) ( void ) ; void ( * agp_enable ) ( s#agp_bridge_data * , t#u32 ) ; void ( * cleanup ) ( void ) ; void ( * tlb_flush ) ( s#agp_memory * ) ; unsigned long ( * mask_memory ) ( s#agp_bridge_data * , t#dma_addr_t , int ) ; void ( * cache_flush ) ( void ) ; int ( * create_gatt_table ) ( s#agp_bridge_data * ) ; int ( * free_gatt_table ) ( s#agp_bridge_data * ) ; int ( * insert_memory ) ( s#agp_memory * , t#off_t , int ) ; int ( * remove_memory ) ( s#agp_memory * , t#off_t , int ) ; s#agp_memory * ( * alloc_by_type ) ( t#size_t , int ) ; void ( * free_by_type ) ( s#agp_memory * ) ; s#page * ( * agp_alloc_page ) ( s#agp_bridge_data * ) ; int ( * agp_alloc_pages ) ( s#agp_bridge_data * , s#agp_memory * , t#size_t ) ; void ( * agp_destroy_page ) ( s#page * , int ) ; void ( * agp_destroy_pages ) ( s#agp_memory * ) ; int ( * agp_type_to_mask_type ) ( s#agp_bridge_data * , int ) ; } 
s##msi_chip
s##proc_dir_entry
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
e#chipset_type enum chipset_type { NOT_SUPPORTED , SUPPORTED , } 
s#agp_bridge_data struct agp_bridge_data { const s#agp_version * version ; const s#agp_bridge_driver * driver ; const s#vm_operations_struct * vm_ops ; void * previous_size ; void * current_size ; void * dev_private_data ; s#pci_dev * dev ; t#u32 * gatt_table ; t#u32 * gatt_table_real ; unsigned long scratch_page ; s#page * scratch_page_page ; t#dma_addr_t scratch_page_dma ; unsigned long gart_bus_addr ; unsigned long gatt_bus_addr ; t#u32 mode ; e#chipset_type type ; unsigned long * key_list ; t#atomic_t current_memory_agp ; t#atomic_t agp_in_use ; int max_memory_agp ; int aperture_size_idx ; int capndx ; int flags ; char major_version ; char minor_version ; s#list_head list ; t#u32 apbase_config ; s#list_head mapped_list ; t#spinlock_t mapped_lock ; } 
agp_bridge extern s#agp_bridge_data * agp_bridge 
agp_bridges extern s#list_head agp_bridges 
agp_find_bridge extern s#agp_bridge_data * ( * agp_find_bridge ) ( s#pci_dev * ) 
agp_backend_acquire extern s#agp_bridge_data * agp_backend_acquire ( s#pci_dev * ) 
agp_backend_release extern void agp_backend_release ( s#agp_bridge_data * ) 
agp_alloc_bridge s#agp_bridge_data * agp_alloc_bridge ( void ) 
agp_put_bridge void agp_put_bridge ( s#agp_bridge_data * ) 
agp_add_bridge int agp_add_bridge ( s#agp_bridge_data * ) 
agp_remove_bridge void agp_remove_bridge ( s#agp_bridge_data * ) 
agp_off extern int agp_off 
agp_try_unsupported_boot extern int agp_try_unsupported_boot 

/* drivers/char/agp/generic.o */
agp_memory_reserved int agp_memory_reserved 
agp_free_key void agp_free_key ( int ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##msi_chip
s##proc_dir_entry
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
agp_alloc_page_array void agp_alloc_page_array ( t#size_t , s#agp_memory * ) 
agp_free_page_array void agp_free_page_array ( s#agp_memory * ) 
agp_create_memory s#agp_memory * agp_create_memory ( int ) 
agp_free_memory extern void agp_free_memory ( s#agp_memory * ) 
agp_allocate_memory extern s#agp_memory * agp_allocate_memory ( s#agp_bridge_data * , t#size_t , t#u32 ) 
agp_num_entries int agp_num_entries ( void ) 
s#agp_kern_info struct agp_kern_info { s#agp_version version ; s#pci_dev * device ; e#chipset_type chipset ; unsigned long mode ; unsigned long aper_base ; t#size_t aper_size ; int max_memory ; int current_memory ; t#bool cant_use_aperture ; unsigned long page_mask ; const s#vm_operations_struct * vm_ops ; } 
agp_copy_info extern int agp_copy_info ( s#agp_bridge_data * , s#agp_kern_info * ) 
agp_bind_memory extern int agp_bind_memory ( s#agp_memory * , t#off_t ) 
agp_unbind_memory extern int agp_unbind_memory ( s#agp_memory * ) 
agp_collect_device_status t#u32 agp_collect_device_status ( s#agp_bridge_data * , t#u32 , t#u32 ) 
agp_device_command void agp_device_command ( t#u32 , t#bool ) 
get_agp_version void get_agp_version ( s#agp_bridge_data * ) 
agp_generic_enable void agp_generic_enable ( s#agp_bridge_data * , t#u32 ) 
agp_generic_create_gatt_table int agp_generic_create_gatt_table ( s#agp_bridge_data * ) 
agp_generic_free_gatt_table int agp_generic_free_gatt_table ( s#agp_bridge_data * ) 
agp_generic_insert_memory int agp_generic_insert_memory ( s#agp_memory * , t#off_t , int ) 
agp_generic_remove_memory int agp_generic_remove_memory ( s#agp_memory * , t#off_t , int ) 
agp_generic_alloc_by_type s#agp_memory * agp_generic_alloc_by_type ( t#size_t , int ) 
agp_generic_free_by_type void agp_generic_free_by_type ( s#agp_memory * ) 
agp_generic_alloc_user s#agp_memory * agp_generic_alloc_user ( t#size_t , int ) 
agp_generic_alloc_pages int agp_generic_alloc_pages ( s#agp_bridge_data * , s#agp_memory * , t#size_t ) 
agp_generic_alloc_page s#page * agp_generic_alloc_page ( s#agp_bridge_data * ) 
agp_generic_destroy_pages void agp_generic_destroy_pages ( s#agp_memory * ) 
agp_generic_destroy_page void agp_generic_destroy_page ( s#page * , int ) 
agp_enable extern void agp_enable ( s#agp_bridge_data * , t#u32 ) 
global_cache_flush void global_cache_flush ( void ) 
agp_generic_mask_memory unsigned long agp_generic_mask_memory ( s#agp_bridge_data * , t#dma_addr_t , int ) 
agp_generic_type_to_mask_type int agp_generic_type_to_mask_type ( s#agp_bridge_data * , int ) 
agp3_generic_fetch_size int agp3_generic_fetch_size ( void ) 
agp3_generic_tlbflush void agp3_generic_tlbflush ( s#agp_memory * ) 
agp3_generic_configure int agp3_generic_configure ( void ) 
agp3_generic_cleanup void agp3_generic_cleanup ( void ) 
s#aper_size_info_16 struct aper_size_info_16 { int size ; int num_entries ; int page_order ; t#u16 size_value ; } 
agp3_generic_sizes extern const s#aper_size_info_16 agp3_generic_sizes [ ] 

/* drivers/char/hw_random/core.o */
s#hwrng struct hwrng { const char * name ; int ( * init ) ( s#hwrng * ) ; void ( * cleanup ) ( s#hwrng * ) ; int ( * data_present ) ( s#hwrng * , int ) ; int ( * data_read ) ( s#hwrng * , t#u32 * ) ; int ( * read ) ( s#hwrng * , void * , t#size_t , t#bool ) ; unsigned long priv ; unsigned short quality ; s#list_head list ; } 
hwrng_register extern int hwrng_register ( s#hwrng * ) 
hwrng_unregister extern void hwrng_unregister ( s#hwrng * ) 

/* drivers/char/ipmi/ipmi_msghandler.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##writeback_control
s##kstatfs
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s#ipmi_smi_watcher struct ipmi_smi_watcher { s#list_head link ; s#module * owner ; void ( * new_smi ) ( int , s#device * ) ; void ( * smi_gone ) ( int ) ; } 
ipmi_smi_watcher_register int ipmi_smi_watcher_register ( s#ipmi_smi_watcher * ) 
ipmi_smi_watcher_unregister int ipmi_smi_watcher_unregister ( s#ipmi_smi_watcher * ) 
s#ipmi_addr struct ipmi_addr { int addr_type ; short channel ; char data [ 32 ] ; } 
ipmi_validate_addr int ipmi_validate_addr ( s#ipmi_addr * , int ) 
ipmi_addr_length unsigned int ipmi_addr_length ( int ) 
s##ipmi_user
t#ipmi_user_t typedef s#ipmi_user * ipmi_user_t 
s#kernel_ipmi_msg struct kernel_ipmi_msg { unsigned char netfn ; unsigned char cmd ; unsigned short data_len ; unsigned char * data ; } 
s#ipmi_recv_msg struct ipmi_recv_msg { s#list_head link ; int recv_type ; t#ipmi_user_t user ; s#ipmi_addr addr ; long msgid ; s#kernel_ipmi_msg msg ; void * user_msg_data ; void ( * done ) ( s#ipmi_recv_msg * ) ; unsigned char msg_data [ 272 ] ; } 
s#ipmi_user_hndl struct ipmi_user_hndl { void ( * ipmi_recv_hndl ) ( s#ipmi_recv_msg * , void * ) ; void ( * ipmi_watchdog_pretimeout ) ( void * ) ; } 
ipmi_create_user int ipmi_create_user ( unsigned int , s#ipmi_user_hndl * , void * , t#ipmi_user_t * ) 
e#ipmi_addr_src enum ipmi_addr_src { SI_INVALID = 0 , SI_HOTMOD , SI_HARDCODED , SI_SPMI , SI_ACPI , SI_SMBIOS , SI_PCI , SI_DEVICETREE , SI_DEFAULT } 
u#ipmi_smi_info_union union ipmi_smi_info_union { struct { void * acpi_handle ; } acpi_info ; } 
s#ipmi_smi_info struct ipmi_smi_info { e#ipmi_addr_src addr_src ; s#device * dev ; u#ipmi_smi_info_union addr_info ; } 
ipmi_get_smi_info extern int ipmi_get_smi_info ( int , s#ipmi_smi_info * ) 
ipmi_destroy_user int ipmi_destroy_user ( t#ipmi_user_t ) 
ipmi_get_version void ipmi_get_version ( t#ipmi_user_t , unsigned char * , unsigned char * ) 
ipmi_set_my_address int ipmi_set_my_address ( t#ipmi_user_t , unsigned int , unsigned char ) 
ipmi_get_my_address int ipmi_get_my_address ( t#ipmi_user_t , unsigned int , unsigned char * ) 
ipmi_set_my_LUN int ipmi_set_my_LUN ( t#ipmi_user_t , unsigned int , unsigned char ) 
ipmi_get_my_LUN int ipmi_get_my_LUN ( t#ipmi_user_t , unsigned int , unsigned char * ) 
ipmi_get_maintenance_mode int ipmi_get_maintenance_mode ( t#ipmi_user_t ) 
ipmi_set_maintenance_mode int ipmi_set_maintenance_mode ( t#ipmi_user_t , int ) 
ipmi_set_gets_events int ipmi_set_gets_events ( t#ipmi_user_t , int ) 
ipmi_register_for_cmd int ipmi_register_for_cmd ( t#ipmi_user_t , unsigned char , unsigned char , unsigned int ) 
ipmi_unregister_for_cmd int ipmi_unregister_for_cmd ( t#ipmi_user_t , unsigned char , unsigned char , unsigned int ) 
ipmi_request_settime int ipmi_request_settime ( t#ipmi_user_t , s#ipmi_addr * , long , s#kernel_ipmi_msg * , void * , int , int , unsigned int ) 
ipmi_request_supply_msgs int ipmi_request_supply_msgs ( t#ipmi_user_t , s#ipmi_addr * , long , s#kernel_ipmi_msg * , void * , void * , s#ipmi_recv_msg * , int ) 
s##ipmi_smi
t#ipmi_smi_t typedef s#ipmi_smi * ipmi_smi_t 
ipmi_smi_add_proc_entry int ipmi_smi_add_proc_entry ( t#ipmi_smi_t , char * , const s#file_operations * , void * ) 
ipmi_poll_interface void ipmi_poll_interface ( t#ipmi_user_t ) 
s#ipmi_smi_msg struct ipmi_smi_msg { s#list_head link ; long msgid ; void * user_data ; int data_size ; unsigned char data [ 272 ] ; int rsp_size ; unsigned char rsp [ 272 ] ; void ( * done ) ( s#ipmi_smi_msg * ) ; } 
s#ipmi_smi_handlers struct ipmi_smi_handlers { s#module * owner ; int ( * start_processing ) ( void * , t#ipmi_smi_t ) ; int ( * get_smi_info ) ( void * , s#ipmi_smi_info * ) ; void ( * sender ) ( void * , s#ipmi_smi_msg * , int ) ; void ( * request_events ) ( void * ) ; void ( * set_run_to_completion ) ( void * , int ) ; void ( * poll ) ( void * ) ; void ( * set_maintenance_mode ) ( void * , int ) ; int ( * inc_usecount ) ( void * ) ; void ( * dec_usecount ) ( void * ) ; } 
s#ipmi_device_id struct ipmi_device_id { unsigned char device_id ; unsigned char device_revision ; unsigned char firmware_revision_1 ; unsigned char firmware_revision_2 ; unsigned char ipmi_version ; unsigned char additional_device_support ; unsigned int manufacturer_id ; unsigned int product_id ; unsigned char aux_firmware_revision [ 4 ] ; unsigned int aux_firmware_revision_set : 1 ; } 
ipmi_register_smi int ipmi_register_smi ( s#ipmi_smi_handlers * , void * , s#ipmi_device_id * , s#device * , const char * , unsigned char ) 
ipmi_unregister_smi int ipmi_unregister_smi ( t#ipmi_smi_t ) 
ipmi_smi_msg_received void ipmi_smi_msg_received ( t#ipmi_smi_t , s#ipmi_smi_msg * ) 
ipmi_smi_watchdog_pretimeout void ipmi_smi_watchdog_pretimeout ( t#ipmi_smi_t ) 
ipmi_alloc_smi_msg s#ipmi_smi_msg * ipmi_alloc_smi_msg ( void ) 
ipmi_free_recv_msg void ipmi_free_recv_msg ( s#ipmi_recv_msg * ) 

/* drivers/char/misc.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##writeback_control
s##kstatfs
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##proc_dir_entry
s##serial_icounter_struct
s##poll_table_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#miscdevice struct miscdevice { int minor ; const char * name ; const s#file_operations * fops ; s#list_head list ; s#device * parent ; s#device * this_device ; const char * nodename ; t#umode_t mode ; } 
misc_register extern int misc_register ( s#miscdevice * ) 
misc_deregister extern int misc_deregister ( s#miscdevice * ) 

/* drivers/char/random.o */
add_device_randomness extern void add_device_randomness ( const void * , unsigned int ) 
add_input_randomness extern void add_input_randomness ( unsigned int , unsigned int , unsigned int ) 
get_random_bytes extern void get_random_bytes ( void * , int ) 
get_random_bytes_arch extern void get_random_bytes_arch ( void * , int ) 
generate_random_uuid void generate_random_uuid ( unsigned char [ 16 ] ) 
get_random_int unsigned int get_random_int ( void ) 
add_hwgenerator_randomness void add_hwgenerator_randomness ( const char * , t#size_t , t#size_t ) 

/* drivers/char/tpm/tpm.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s#tpm_vendor_specific struct tpm_vendor_specific { const t#u8 req_complete_mask ; const t#u8 req_complete_val ; t#bool ( * req_canceled ) ( s#tpm_chip * , t#u8 ) ; void * iobase ; unsigned long base ; int irq ; int probed_irq ; int region_size ; int have_region ; int ( * recv ) ( s#tpm_chip * , t#u8 * , t#size_t ) ; int ( * send ) ( s#tpm_chip * , t#u8 * , t#size_t ) ; void ( * cancel ) ( s#tpm_chip * ) ; t#u8 ( * status ) ( s#tpm_chip * ) ; void ( * release ) ( s#device * ) ; s#miscdevice miscdev ; s#attribute_group * attr_group ; s#list_head list ; int locality ; unsigned long timeout_a , timeout_b , timeout_c , timeout_d ; t#bool timeout_adjusted ; unsigned long duration [ 3 ] ; t#bool duration_adjusted ; void * priv ; t#wait_queue_head_t read_queue ; t#wait_queue_head_t int_queue ; t#u16 manufacturer_id ; } 
s#tpm_chip struct tpm_chip { s#device * dev ; int dev_num ; unsigned long is_open ; int time_expired ; t#u8 * data_buffer ; t#atomic_t data_pending ; s#mutex buffer_mutex ; s#timer_list user_read_timer ; s#work_struct work ; s#mutex tpm_mutex ; s#tpm_vendor_specific vendor ; s#dentry * * bios_dir ; s#list_head list ; void ( * release ) ( s#device * ) ; } 
tpm_calc_ordinal_duration extern unsigned long tpm_calc_ordinal_duration ( s#tpm_chip * , t#u32 ) 
tpm_gen_interrupt extern void tpm_gen_interrupt ( s#tpm_chip * ) 
tpm_get_timeouts extern int tpm_get_timeouts ( s#tpm_chip * ) 
tpm_show_enabled extern t#ssize_t tpm_show_enabled ( s#device * , s#device_attribute * , char * ) 
tpm_show_active extern t#ssize_t tpm_show_active ( s#device * , s#device_attribute * , char * ) 
tpm_show_owned extern t#ssize_t tpm_show_owned ( s#device * , s#device_attribute * , char * ) 
tpm_show_temp_deactivated extern t#ssize_t tpm_show_temp_deactivated ( s#device * , s#device_attribute * , char * ) 
tpm_pcr_read extern int tpm_pcr_read ( t#u32 , int , t#u8 * ) 
tpm_pcr_extend extern int tpm_pcr_extend ( t#u32 , int , const t#u8 * ) 
tpm_do_selftest extern int tpm_do_selftest ( s#tpm_chip * ) 
tpm_send extern int tpm_send ( t#u32 , void * , t#size_t ) 
tpm_show_pcrs extern t#ssize_t tpm_show_pcrs ( s#device * , s#device_attribute * , char * ) 
tpm_show_pubek extern t#ssize_t tpm_show_pubek ( s#device * , s#device_attribute * , char * ) 
tpm_show_caps extern t#ssize_t tpm_show_caps ( s#device * , s#device_attribute * , char * ) 
tpm_show_caps_1_2 extern t#ssize_t tpm_show_caps_1_2 ( s#device * , s#device_attribute * , char * ) 
tpm_show_durations extern t#ssize_t tpm_show_durations ( s#device * , s#device_attribute * , char * ) 
tpm_show_timeouts extern t#ssize_t tpm_show_timeouts ( s#device * , s#device_attribute * , char * ) 
tpm_store_cancel extern t#ssize_t tpm_store_cancel ( s#device * , s#device_attribute * , const char * , t#size_t ) 
wait_for_tpm_stat extern int wait_for_tpm_stat ( s#tpm_chip * , t#u8 , unsigned long , t#wait_queue_head_t * , t#bool ) 
tpm_open extern int tpm_open ( s#inode * , s#file * ) 
tpm_release extern int tpm_release ( s#inode * , s#file * ) 
tpm_write extern t#ssize_t tpm_write ( s#file * , const char * , t#size_t , t#loff_t * ) 
tpm_read extern t#ssize_t tpm_read ( s#file * , char * , t#size_t , t#loff_t * ) 
tpm_remove_hardware extern void tpm_remove_hardware ( s#device * ) 
tpm_pm_suspend extern int tpm_pm_suspend ( s#device * ) 
tpm_pm_resume extern int tpm_pm_resume ( s#device * ) 
tpm_get_random extern int tpm_get_random ( t#u32 , t#u8 * , t#size_t ) 
tpm_dev_vendor_release extern void tpm_dev_vendor_release ( s#tpm_chip * ) 
tpm_dev_release extern void tpm_dev_release ( s#device * ) 
tpm_register_hardware extern s#tpm_chip * tpm_register_hardware ( s#device * , const s#tpm_vendor_specific * ) 

/* drivers/char/tpm/tpm_eventlog.o */
s##posix_acl
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cdev
tpm_bios_log_setup extern s#dentry * * tpm_bios_log_setup ( char * ) 
tpm_bios_log_teardown extern void tpm_bios_log_teardown ( s#dentry * * ) 

/* drivers/clocksource/i8253.o */
i8253_lock extern t#raw_spinlock_t i8253_lock 

/* drivers/connector/connector.o */
s#cb_id struct cb_id { t#__u32 idx ; t#__u32 val ; } 
s#cn_msg struct cn_msg { s#cb_id id ; t#__u32 seq ; t#__u32 ack ; t#__u16 len ; t#__u16 flags ; t#__u8 data [ 0 ] ; } 
cn_netlink_send int cn_netlink_send ( s#cn_msg * , t#u32 , t#gfp_t ) 
s#scm_creds struct scm_creds { t#u32 pid ; t#kuid_t uid ; t#kgid_t gid ; } 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s#netlink_skb_parms struct netlink_skb_parms { s#scm_creds creds ; t#__u32 portid ; t#__u32 dst_group ; t#__u32 flags ; s#sock * sk ; } 
cn_add_callback int cn_add_callback ( s#cb_id * , const char * , void ( * ) ( s#cn_msg * , s#netlink_skb_parms * ) ) 
cn_del_callback void cn_del_callback ( s#cb_id * ) 

/* drivers/cpufreq/cpufreq.o */
have_governor_per_policy t#bool have_governor_per_policy ( void ) 
s##sock
s##sysfs_dirent
s#cpufreq_cpuinfo struct cpufreq_cpuinfo { unsigned int max_freq ; unsigned int min_freq ; unsigned int transition_latency ; } 
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#cpufreq_governor struct cpufreq_governor { char name [ 16 ] ; int initialized ; int ( * governor ) ( s#cpufreq_policy * , unsigned int ) ; t#ssize_t ( * show_setspeed ) ( s#cpufreq_policy * , char * ) ; int ( * store_setspeed ) ( s#cpufreq_policy * , unsigned int ) ; unsigned int max_transition_latency ; s#list_head governor_list ; s#module * owner ; } 
s#cpufreq_real_policy struct cpufreq_real_policy { unsigned int min ; unsigned int max ; unsigned int policy ; s#cpufreq_governor * governor ; } 
s#cpufreq_policy struct cpufreq_policy { t#cpumask_var_t cpus ; t#cpumask_var_t related_cpus ; unsigned int shared_type ; unsigned int cpu ; unsigned int last_cpu ; s#cpufreq_cpuinfo cpuinfo ; unsigned int min ; unsigned int max ; unsigned int cur ; unsigned int policy ; s#cpufreq_governor * governor ; void * governor_data ; t#bool governor_enabled ; s#work_struct update ; s#cpufreq_real_policy user_policy ; s#list_head policy_list ; s#kobject kobj ; s#completion kobj_unregister ; } 
get_governor_parent_kobj s#kobject * get_governor_parent_kobj ( s#cpufreq_policy * ) 
get_cpu_idle_time t#u64 get_cpu_idle_time ( unsigned int , t#u64 * , int ) 
s#cpufreq_frequency_table struct cpufreq_frequency_table { unsigned int driver_data ; unsigned int frequency ; } 
cpufreq_generic_init int cpufreq_generic_init ( s#cpufreq_policy * , s#cpufreq_frequency_table * , unsigned int ) 
cpufreq_cpu_get s#cpufreq_policy * cpufreq_cpu_get ( unsigned int ) 
cpufreq_cpu_put void cpufreq_cpu_put ( s#cpufreq_policy * ) 
s#cpufreq_freqs struct cpufreq_freqs { unsigned int cpu ; unsigned int old ; unsigned int new ; t#u8 flags ; } 
cpufreq_notify_transition void cpufreq_notify_transition ( s#cpufreq_policy * , s#cpufreq_freqs * , unsigned int ) 
cpufreq_show_cpus t#ssize_t cpufreq_show_cpus ( const s#cpumask * , char * ) 
cpufreq_global_kobject extern s#kobject * cpufreq_global_kobject 
cpufreq_get_global_kobject int cpufreq_get_global_kobject ( void ) 
cpufreq_put_global_kobject void cpufreq_put_global_kobject ( void ) 
cpufreq_sysfs_create_file int cpufreq_sysfs_create_file ( const s#attribute * ) 
cpufreq_sysfs_remove_file void cpufreq_sysfs_remove_file ( const s#attribute * ) 
cpufreq_quick_get unsigned int cpufreq_quick_get ( unsigned int ) 
cpufreq_quick_get_max unsigned int cpufreq_quick_get_max ( unsigned int ) 
cpufreq_get unsigned int cpufreq_get ( unsigned int ) 
cpufreq_get_current_driver const char * cpufreq_get_current_driver ( void ) 
cpufreq_register_notifier int cpufreq_register_notifier ( s#notifier_block * , unsigned int ) 
cpufreq_unregister_notifier int cpufreq_unregister_notifier ( s#notifier_block * , unsigned int ) 
__cpufreq_driver_target int __cpufreq_driver_target ( s#cpufreq_policy * , unsigned int , unsigned int ) 
cpufreq_driver_target int cpufreq_driver_target ( s#cpufreq_policy * , unsigned int , unsigned int ) 
cpufreq_register_governor int cpufreq_register_governor ( s#cpufreq_governor * ) 
cpufreq_unregister_governor void cpufreq_unregister_governor ( s#cpufreq_governor * ) 
cpufreq_get_policy int cpufreq_get_policy ( s#cpufreq_policy * , unsigned int ) 
cpufreq_update_policy int cpufreq_update_policy ( unsigned int ) 
s#freq_attr struct freq_attr { s#attribute attr ; t#ssize_t ( * show ) ( s#cpufreq_policy * , char * ) ; t#ssize_t ( * store ) ( s#cpufreq_policy * , const char * , t#size_t ) ; } 
s#cpufreq_driver struct cpufreq_driver { char name [ 16 ] ; t#u8 flags ; t#bool have_governor_per_policy ; int ( * init ) ( s#cpufreq_policy * ) ; int ( * verify ) ( s#cpufreq_policy * ) ; int ( * setpolicy ) ( s#cpufreq_policy * ) ; int ( * target ) ( s#cpufreq_policy * , unsigned int , unsigned int ) ; int ( * target_index ) ( s#cpufreq_policy * , unsigned int ) ; unsigned int ( * get ) ( unsigned int ) ; int ( * bios_limit ) ( int , unsigned int * ) ; int ( * exit ) ( s#cpufreq_policy * ) ; int ( * suspend ) ( s#cpufreq_policy * ) ; int ( * resume ) ( s#cpufreq_policy * ) ; s#freq_attr * * attr ; } 
cpufreq_register_driver int cpufreq_register_driver ( s#cpufreq_driver * ) 
cpufreq_unregister_driver int cpufreq_unregister_driver ( s#cpufreq_driver * ) 

/* drivers/cpufreq/cpufreq_governor.o */
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##tvec_base
s##workqueue_struct
s#cpu_dbs_common_info struct cpu_dbs_common_info { int cpu ; t#u64 prev_cpu_idle ; t#u64 prev_cpu_wall ; t#u64 prev_cpu_nice ; s#cpufreq_policy * cur_policy ; s#delayed_work work ; s#mutex timer_mutex ; t#ktime_t time_stamp ; } 
s#common_dbs_data struct common_dbs_data { int governor ; s#attribute_group * attr_group_gov_sys ; s#attribute_group * attr_group_gov_pol ; s#dbs_data * gdbs_data ; s#cpu_dbs_common_info * ( * get_cpu_cdbs ) ( int ) ; void * ( * get_cpu_dbs_info_s ) ( int ) ; void ( * gov_dbs_timer ) ( s#work_struct * ) ; void ( * gov_check_cpu ) ( int , unsigned int ) ; int ( * init ) ( s#dbs_data * ) ; void ( * exit ) ( s#dbs_data * ) ; void * gov_ops ; } 
s#dbs_data struct dbs_data { s#common_dbs_data * cdata ; unsigned int min_sampling_rate ; int usage_count ; void * tuners ; s#mutex mutex ; } 
dbs_check_cpu void dbs_check_cpu ( s#dbs_data * , int ) 
gov_queue_work void gov_queue_work ( s#dbs_data * , s#cpufreq_policy * , unsigned int , t#bool ) 
need_load_eval t#bool need_load_eval ( s#cpu_dbs_common_info * , unsigned int ) 
cpufreq_governor_dbs int cpufreq_governor_dbs ( s#cpufreq_policy * , s#common_dbs_data * , unsigned int ) 

/* drivers/cpufreq/freq_table.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
cpufreq_frequency_table_cpuinfo int cpufreq_frequency_table_cpuinfo ( s#cpufreq_policy * , s#cpufreq_frequency_table * ) 
cpufreq_frequency_table_verify int cpufreq_frequency_table_verify ( s#cpufreq_policy * , s#cpufreq_frequency_table * ) 
cpufreq_generic_frequency_table_verify int cpufreq_generic_frequency_table_verify ( s#cpufreq_policy * ) 
cpufreq_frequency_table_target int cpufreq_frequency_table_target ( s#cpufreq_policy * , s#cpufreq_frequency_table * , unsigned int , unsigned int , unsigned int * ) 
cpufreq_freq_attr_scaling_available_freqs extern s#freq_attr cpufreq_freq_attr_scaling_available_freqs 
cpufreq_generic_attr extern s#freq_attr * cpufreq_generic_attr [ ] 
cpufreq_frequency_table_get_attr void cpufreq_frequency_table_get_attr ( s#cpufreq_frequency_table * , unsigned int ) 
cpufreq_frequency_table_put_attr void cpufreq_frequency_table_put_attr ( unsigned int ) 
cpufreq_table_validate_and_show int cpufreq_table_validate_and_show ( s#cpufreq_policy * , s#cpufreq_frequency_table * ) 
cpufreq_frequency_get_table s#cpufreq_frequency_table * cpufreq_frequency_get_table ( unsigned int ) 

/* drivers/cpuidle/cpuidle.o */
cpuidle_pause_and_lock extern void cpuidle_pause_and_lock ( void ) 
cpuidle_resume_and_unlock extern void cpuidle_resume_and_unlock ( void ) 
s#cpuidle_state_usage struct cpuidle_state_usage { unsigned long long disable ; unsigned long long usage ; unsigned long long time ; } 
s##cpuidle_state_kobj
s##cpuidle_driver_kobj
s##cpuidle_device_kobj
s#cpuidle_device struct cpuidle_device { unsigned int registered : 1 ; unsigned int enabled : 1 ; unsigned int cpu ; int last_residency ; int state_count ; s#cpuidle_state_usage states_usage [ 10 ] ; s#cpuidle_state_kobj * kobjs [ 10 ] ; s#cpuidle_driver_kobj * kobj_driver ; s#cpuidle_device_kobj * kobj_dev ; s#list_head device_list ; } 
cpuidle_enable_device extern int cpuidle_enable_device ( s#cpuidle_device * ) 
cpuidle_disable_device extern void cpuidle_disable_device ( s#cpuidle_device * ) 
cpuidle_register_device extern int cpuidle_register_device ( s#cpuidle_device * ) 
cpuidle_unregister_device extern void cpuidle_unregister_device ( s#cpuidle_device * ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#cpuidle_state struct cpuidle_state { char name [ 16 ] ; char desc [ 32 ] ; unsigned int flags ; unsigned int exit_latency ; int power_usage ; unsigned int target_residency ; t#bool disabled ; int ( * enter ) ( s#cpuidle_device * , s#cpuidle_driver * , int ) ; int ( * enter_dead ) ( s#cpuidle_device * , int ) ; } 
s#cpuidle_driver struct cpuidle_driver { const char * name ; s#module * owner ; int refcnt ; unsigned int bctimer : 1 ; s#cpuidle_state states [ 10 ] ; int state_count ; int safe_state_index ; s#cpumask * cpumask ; } 
cpuidle_unregister extern void cpuidle_unregister ( s#cpuidle_driver * ) 
cpuidle_register extern int cpuidle_register ( s#cpuidle_driver * , const s#cpumask * const ) 

/* drivers/cpuidle/driver.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##cpuidle_state_kobj
s##cpuidle_driver_kobj
s##cpuidle_device_kobj
cpuidle_register_driver extern int cpuidle_register_driver ( s#cpuidle_driver * ) 
cpuidle_unregister_driver extern void cpuidle_unregister_driver ( s#cpuidle_driver * ) 
cpuidle_get_driver extern s#cpuidle_driver * cpuidle_get_driver ( void ) 
cpuidle_get_cpu_driver extern s#cpuidle_driver * cpuidle_get_cpu_driver ( s#cpuidle_device * ) 

/* drivers/dma/dmaengine.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
dma_sync_wait e#dma_status dma_sync_wait ( s#dma_chan * , t#dma_cookie_t ) 
dma_find_channel s#dma_chan * dma_find_channel ( e#dma_transaction_type ) 
net_dma_find_channel s#dma_chan * net_dma_find_channel ( void ) 
dma_issue_pending_all void dma_issue_pending_all ( void ) 
dma_get_slave_channel s#dma_chan * dma_get_slave_channel ( s#dma_chan * ) 
t#dma_filter_fn typedef t#bool ( * dma_filter_fn ) ( s#dma_chan * , void * ) 
__dma_request_channel s#dma_chan * __dma_request_channel ( const t#dma_cap_mask_t * , t#dma_filter_fn , void * ) 
dma_request_slave_channel s#dma_chan * dma_request_slave_channel ( s#device * , const char * ) 
dma_release_channel void dma_release_channel ( s#dma_chan * ) 
dmaengine_get void dmaengine_get ( void ) 
dmaengine_put void dmaengine_put ( void ) 
dma_async_device_register int dma_async_device_register ( s#dma_device * ) 
dma_async_device_unregister void dma_async_device_unregister ( s#dma_device * ) 
dma_async_memcpy_buf_to_buf t#dma_cookie_t dma_async_memcpy_buf_to_buf ( s#dma_chan * , void * , void * , t#size_t ) 
dma_async_memcpy_buf_to_pg t#dma_cookie_t dma_async_memcpy_buf_to_pg ( s#dma_chan * , s#page * , unsigned int , void * , t#size_t ) 
dma_async_memcpy_pg_to_pg t#dma_cookie_t dma_async_memcpy_pg_to_pg ( s#dma_chan * , s#page * , unsigned int , s#page * , unsigned int , t#size_t ) 
dma_async_tx_descriptor_init void dma_async_tx_descriptor_init ( s#dma_async_tx_descriptor * , s#dma_chan * ) 
dma_wait_for_async_tx e#dma_status dma_wait_for_async_tx ( s#dma_async_tx_descriptor * ) 
dma_run_dependencies void dma_run_dependencies ( s#dma_async_tx_descriptor * ) 

/* drivers/dma/dw/core.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
dw_dma_get_src_addr t#dma_addr_t dw_dma_get_src_addr ( s#dma_chan * ) 
dw_dma_get_dst_addr t#dma_addr_t dw_dma_get_dst_addr ( s#dma_chan * ) 
dw_dma_cyclic_start int dw_dma_cyclic_start ( s#dma_chan * ) 
dw_dma_cyclic_stop void dw_dma_cyclic_stop ( s#dma_chan * ) 
s#dw_lli struct dw_lli { t#u32 sar ; t#u32 dar ; t#u32 llp ; t#u32 ctllo ; t#u32 ctlhi ; t#u32 sstat ; t#u32 dstat ; } 
s#dw_desc struct dw_desc { s#dw_lli lli ; s#list_head desc_node ; s#list_head tx_list ; s#dma_async_tx_descriptor txd ; t#size_t len ; t#size_t total_len ; } 
s#dw_cyclic_desc struct dw_cyclic_desc { s#dw_desc * * desc ; unsigned long periods ; void ( * period_callback ) ( void * ) ; void * period_callback_param ; } 
dw_dma_cyclic_prep s#dw_cyclic_desc * dw_dma_cyclic_prep ( s#dma_chan * , t#dma_addr_t , t#size_t , t#size_t , e#dma_transfer_direction ) 
dw_dma_cyclic_free void dw_dma_cyclic_free ( s#dma_chan * ) 
s##dma_pool
s##clk
e#dma_slave_buswidth enum dma_slave_buswidth { DMA_SLAVE_BUSWIDTH_UNDEFINED = 0 , DMA_SLAVE_BUSWIDTH_1_BYTE = 1 , DMA_SLAVE_BUSWIDTH_2_BYTES = 2 , DMA_SLAVE_BUSWIDTH_4_BYTES = 4 , DMA_SLAVE_BUSWIDTH_8_BYTES = 8 , } 
s#dma_slave_config struct dma_slave_config { e#dma_transfer_direction direction ; t#dma_addr_t src_addr ; t#dma_addr_t dst_addr ; e#dma_slave_buswidth src_addr_width ; e#dma_slave_buswidth dst_addr_width ; t#u32 src_maxburst ; t#u32 dst_maxburst ; t#bool device_fc ; unsigned int slave_id ; } 
s#dw_dma_chan struct dw_dma_chan { s#dma_chan chan ; void * ch_regs ; t#u8 mask ; t#u8 priority ; e#dma_transfer_direction direction ; t#bool paused ; t#bool initialized ; s#list_head * tx_node_active ; t#spinlock_t lock ; unsigned long flags ; s#list_head active_list ; s#list_head queue ; s#list_head free_list ; t#u32 residue ; s#dw_cyclic_desc * cdesc ; unsigned int descs_allocated ; unsigned int block_size ; t#bool nollp ; unsigned int request_line ; unsigned char src_master ; unsigned char dst_master ; s#dma_slave_config dma_sconfig ; } 
s#dw_dma struct dw_dma { s#dma_device dma ; void * regs ; s#dma_pool * desc_pool ; s#tasklet_struct tasklet ; s#clk * clk ; t#u8 all_chan_mask ; unsigned char nr_masters ; unsigned char data_width [ 4 ] ; s#dw_dma_chan chan [ 0 ] ; } 
s#dw_dma_chip struct dw_dma_chip { s#device * dev ; int irq ; void * regs ; s#dw_dma * dw ; } 
s#dw_dma_platform_data struct dw_dma_platform_data { unsigned int nr_channels ; t#bool is_private ; unsigned char chan_allocation_order ; unsigned char chan_priority ; unsigned short block_size ; unsigned char nr_masters ; unsigned char data_width [ 4 ] ; } 
dw_dma_probe int dw_dma_probe ( s#dw_dma_chip * , s#dw_dma_platform_data * ) 
dw_dma_remove int dw_dma_remove ( s#dw_dma_chip * ) 
dw_dma_shutdown void dw_dma_shutdown ( s#dw_dma_chip * ) 
dw_dma_suspend int dw_dma_suspend ( s#dw_dma_chip * ) 
dw_dma_resume int dw_dma_resume ( s#dw_dma_chip * ) 

/* drivers/dma/of-dma.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##pci_dev
s##iommu_group
s#of_dma struct of_dma { s#list_head of_dma_controllers ; s#device_node * of_node ; s#dma_chan * ( * of_dma_xlate ) ( s#of_phandle_args * , s#of_dma * ) ; void * of_dma_data ; } 
of_dma_controller_register extern int of_dma_controller_register ( s#device_node * , s#dma_chan * ( * ) ( s#of_phandle_args * , s#of_dma * ) , void * ) 
of_dma_controller_free extern void of_dma_controller_free ( s#device_node * ) 
of_dma_simple_xlate extern s#dma_chan * of_dma_simple_xlate ( s#of_phandle_args * , s#of_dma * ) 

/* drivers/edac/edac_device.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#edac_dev_sysfs_attribute struct edac_dev_sysfs_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#edac_device_ctl_info * , char * ) ; t#ssize_t ( * store ) ( s#edac_device_ctl_info * , const char * , t#size_t ) ; } 
s##device_private
s##driver_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##subsys_private
s##iommu_group
s##iommu_ops
s#edac_device_counter struct edac_device_counter { t#u32 ue_count ; t#u32 ce_count ; } 
s#edac_dev_sysfs_block_attribute struct edac_dev_sysfs_block_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#kobject * , s#attribute * , char * ) ; t#ssize_t ( * store ) ( s#kobject * , s#attribute * , const char * , t#size_t ) ; s#edac_device_block * block ; unsigned int value ; } 
s#edac_device_block struct edac_device_block { s#edac_device_instance * instance ; char name [ 31 + 1 ] ; s#edac_device_counter counters ; int nr_attribs ; s#edac_dev_sysfs_block_attribute * block_attributes ; s#kobject kobj ; } 
s#edac_device_instance struct edac_device_instance { s#edac_device_ctl_info * ctl ; char name [ 31 + 4 ] ; s#edac_device_counter counters ; t#u32 nr_blocks ; s#edac_device_block * blocks ; s#kobject kobj ; } 
s#edac_device_ctl_info struct edac_device_ctl_info { s#list_head link ; s#module * owner ; int dev_idx ; int log_ue ; int log_ce ; int panic_on_ue ; unsigned poll_msec ; unsigned long delay ; s#edac_dev_sysfs_attribute * sysfs_attributes ; s#bus_type * edac_subsys ; int op_state ; s#delayed_work work ; void ( * edac_check ) ( s#edac_device_ctl_info * ) ; s#device * dev ; const char * mod_name ; const char * ctl_name ; const char * dev_name ; void * pvt_info ; unsigned long start_time ; s#completion removal_complete ; char name [ 31 + 1 ] ; t#u32 nr_instances ; s#edac_device_instance * instances ; s#edac_device_counter counters ; s#kobject kobj ; } 
edac_device_alloc_ctl_info extern s#edac_device_ctl_info * edac_device_alloc_ctl_info ( unsigned , char * , unsigned , char * , unsigned , unsigned , s#edac_dev_sysfs_block_attribute * , unsigned , int ) 
edac_device_free_ctl_info extern void edac_device_free_ctl_info ( s#edac_device_ctl_info * ) 
edac_device_alloc_index extern int edac_device_alloc_index ( void ) 
edac_device_add_device extern int edac_device_add_device ( s#edac_device_ctl_info * ) 
edac_device_del_device extern s#edac_device_ctl_info * edac_device_del_device ( s#device * ) 
edac_device_handle_ce extern void edac_device_handle_ce ( s#edac_device_ctl_info * , int , int , const char * ) 
edac_device_handle_ue extern void edac_device_handle_ue ( s#edac_device_ctl_info * , int , int , const char * ) 

/* drivers/edac/edac_mc.o */
edac_mem_types extern const char * edac_mem_types [ ] 
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
e#scrub_type enum scrub_type { SCRUB_UNKNOWN = 0 , SCRUB_NONE , SCRUB_SW_PROG , SCRUB_SW_SRC , SCRUB_SW_PROG_SRC , SCRUB_SW_TUNABLE , SCRUB_HW_PROG , SCRUB_HW_SRC , SCRUB_HW_PROG_SRC , SCRUB_HW_TUNABLE } 
e#dev_type enum dev_type { DEV_UNKNOWN = 0 , DEV_X1 , DEV_X2 , DEV_X4 , DEV_X8 , DEV_X16 , DEV_X32 , DEV_X64 } 
e#mem_type enum mem_type { MEM_EMPTY = 0 , MEM_RESERVED , MEM_UNKNOWN , MEM_FPM , MEM_EDO , MEM_BEDO , MEM_SDR , MEM_RDR , MEM_DDR , MEM_RDDR , MEM_RMBS , MEM_DDR2 , MEM_FB_DDR2 , MEM_RDDR2 , MEM_XDR , MEM_DDR3 , MEM_RDDR3 , } 
e#edac_type enum edac_type { EDAC_UNKNOWN = 0 , EDAC_NONE , EDAC_RESERVED , EDAC_PARITY , EDAC_EC , EDAC_SECDED , EDAC_S2ECD2ED , EDAC_S4ECD4ED , EDAC_S8ECD8ED , EDAC_S16ECD16ED , } 
s#dimm_info struct dimm_info { s#device dev ; char label [ 31 + 1 ] ; unsigned location [ 3 ] ; s#mem_ctl_info * mci ; t#u32 grain ; e#dev_type dtype ; e#mem_type mtype ; e#edac_type edac_mode ; t#u32 nr_pages ; unsigned csrow , cschannel ; } 
s#rank_info struct rank_info { int chan_idx ; s#csrow_info * csrow ; s#dimm_info * dimm ; t#u32 ce_count ; } 
s#csrow_info struct csrow_info { s#device dev ; unsigned long first_page ; unsigned long last_page ; unsigned long page_mask ; int csrow_idx ; t#u32 ue_count ; t#u32 ce_count ; s#mem_ctl_info * mci ; t#u32 nr_channels ; s#rank_info * * channels ; } 
e#edac_mc_layer_type enum edac_mc_layer_type { EDAC_MC_LAYER_BRANCH , EDAC_MC_LAYER_CHANNEL , EDAC_MC_LAYER_SLOT , EDAC_MC_LAYER_CHIP_SELECT , EDAC_MC_LAYER_ALL_MEM , } 
s#edac_mc_layer struct edac_mc_layer { e#edac_mc_layer_type type ; unsigned size ; t#bool is_virt_csrow ; } 
s##mcidev_sysfs_attribute
s#edac_raw_error_desc struct edac_raw_error_desc { char location [ 256 ] ; char label [ ( 31 + 1 + sizeof ( " or " ) ) * 8 ] ; long grain ; t#u16 error_count ; int top_layer ; int mid_layer ; int low_layer ; unsigned long page_frame_number ; unsigned long offset_in_page ; unsigned long syndrome ; const char * msg ; const char * other_detail ; t#bool enable_per_layer_report ; } 
s#mem_ctl_info struct mem_ctl_info { s#device dev ; s#bus_type * bus ; s#list_head link ; s#module * owner ; unsigned long mtype_cap ; unsigned long edac_ctl_cap ; unsigned long edac_cap ; unsigned long scrub_cap ; e#scrub_type scrub_mode ; int ( * set_sdram_scrub_rate ) ( s#mem_ctl_info * , t#u32 ) ; int ( * get_sdram_scrub_rate ) ( s#mem_ctl_info * ) ; void ( * edac_check ) ( s#mem_ctl_info * ) ; unsigned long ( * ctl_page_to_phys ) ( s#mem_ctl_info * , unsigned long ) ; int mc_idx ; s#csrow_info * * csrows ; unsigned nr_csrows , num_cschannel ; unsigned n_layers ; s#edac_mc_layer * layers ; t#bool csbased ; unsigned tot_dimms ; s#dimm_info * * dimms ; s#device * pdev ; const char * mod_name ; const char * mod_ver ; const char * ctl_name ; const char * dev_name ; void * pvt_info ; unsigned long start_time ; t#u32 ce_noinfo_count , ue_noinfo_count ; t#u32 ue_mc , ce_mc ; t#u32 * ce_per_layer [ 3 ] , * ue_per_layer [ 3 ] ; s#completion complete ; const s#mcidev_sysfs_attribute * mc_driver_sysfs_attributes ; s#delayed_work work ; s#edac_raw_error_desc error_desc ; int op_state ; } 
edac_mc_alloc s#mem_ctl_info * edac_mc_alloc ( unsigned , unsigned , s#edac_mc_layer * , unsigned ) 
edac_mc_free extern void edac_mc_free ( s#mem_ctl_info * ) 
find_mci_by_dev extern s#mem_ctl_info * find_mci_by_dev ( s#device * ) 
edac_mc_find extern s#mem_ctl_info * edac_mc_find ( int ) 
edac_mc_add_mc extern int edac_mc_add_mc ( s#mem_ctl_info * ) 
edac_mc_del_mc extern s#mem_ctl_info * edac_mc_del_mc ( s#device * ) 
edac_mc_find_csrow_by_page extern int edac_mc_find_csrow_by_page ( s#mem_ctl_info * , unsigned long ) 
edac_layer_name extern const char * edac_layer_name [ ] 
e#hw_event_mc_err_type enum hw_event_mc_err_type { HW_EVENT_ERR_CORRECTED , HW_EVENT_ERR_UNCORRECTED , HW_EVENT_ERR_FATAL , HW_EVENT_ERR_INFO , } 
edac_raw_mc_handle_error void edac_raw_mc_handle_error ( const e#hw_event_mc_err_type , s#mem_ctl_info * , s#edac_raw_error_desc * ) 
edac_mc_handle_error void edac_mc_handle_error ( const e#hw_event_mc_err_type , s#mem_ctl_info * , const t#u16 , const unsigned long , const unsigned long , const unsigned long , const int , const int , const int , const char * , const char * ) 

/* drivers/edac/edac_pci.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##subsys_private
s##iommu_group
s##iommu_ops
s#edac_pci_counter struct edac_pci_counter { t#atomic_t pe_count ; t#atomic_t npe_count ; } 
s#edac_pci_ctl_info struct edac_pci_ctl_info { s#list_head link ; int pci_idx ; s#bus_type * edac_subsys ; int op_state ; s#delayed_work work ; void ( * edac_check ) ( s#edac_pci_ctl_info * ) ; s#device * dev ; const char * mod_name ; const char * ctl_name ; const char * dev_name ; void * pvt_info ; unsigned long start_time ; s#completion complete ; char name [ 31 + 1 ] ; s#edac_pci_counter counters ; s#kobject kobj ; s#completion kobj_complete ; } 
edac_pci_alloc_ctl_info extern s#edac_pci_ctl_info * edac_pci_alloc_ctl_info ( unsigned int , const char * ) 
edac_pci_free_ctl_info extern void edac_pci_free_ctl_info ( s#edac_pci_ctl_info * ) 
edac_pci_reset_delay_period extern void edac_pci_reset_delay_period ( s#edac_pci_ctl_info * , unsigned long ) 
edac_pci_alloc_index extern int edac_pci_alloc_index ( void ) 
edac_pci_add_device extern int edac_pci_add_device ( s#edac_pci_ctl_info * , int ) 
edac_pci_del_device extern s#edac_pci_ctl_info * edac_pci_del_device ( s#device * ) 
edac_pci_create_generic_ctl extern s#edac_pci_ctl_info * edac_pci_create_generic_ctl ( s#device * , const char * ) 
edac_pci_release_generic_ctl extern void edac_pci_release_generic_ctl ( s#edac_pci_ctl_info * ) 

/* drivers/edac/edac_pci_sysfs.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##subsys_private
s##iommu_group
s##iommu_ops
edac_pci_handle_pe extern void edac_pci_handle_pe ( s#edac_pci_ctl_info * , const char * ) 
edac_pci_handle_npe extern void edac_pci_handle_npe ( s#edac_pci_ctl_info * , const char * ) 

/* drivers/edac/edac_stub.o */
edac_op_state extern int edac_op_state 
edac_handlers extern t#atomic_t edac_handlers 
edac_err_assert extern int edac_err_assert 
edac_report_status extern int edac_report_status 
edac_handler_set extern int edac_handler_set ( void ) 
edac_atomic_assert_error extern void edac_atomic_assert_error ( void ) 
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##subsys_private
s##iommu_group
s##iommu_ops
edac_subsys extern s#bus_type edac_subsys 
edac_get_sysfs_subsys extern s#bus_type * edac_get_sysfs_subsys ( void ) 
edac_put_sysfs_subsys extern void edac_put_sysfs_subsys ( void ) 

/* drivers/extcon/extcon-class.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s#raw_notifier_head struct raw_notifier_head { s#notifier_block * head ; } 
s#extcon_cable struct extcon_cable { s#extcon_dev * edev ; int cable_index ; s#attribute_group attr_g ; s#device_attribute attr_name ; s#device_attribute attr_state ; s#attribute * attrs [ 3 ] ; } 
s#extcon_dev struct extcon_dev { const char * name ; const char * * supported_cable ; const t#u32 * mutually_exclusive ; t#ssize_t ( * print_name ) ( s#extcon_dev * , char * ) ; t#ssize_t ( * print_state ) ( s#extcon_dev * , char * ) ; s#device * dev ; t#u32 state ; s#raw_notifier_head nh ; s#list_head entry ; t#spinlock_t lock ; int max_supported ; s#device_type extcon_dev_type ; s#extcon_cable * cables ; s#attribute_group attr_g_muex ; s#attribute * * attrs_muex ; s#device_attribute * d_attrs_muex ; } 
extcon_update_state extern int extcon_update_state ( s#extcon_dev * , t#u32 , t#u32 ) 
extcon_set_state extern int extcon_set_state ( s#extcon_dev * , t#u32 ) 
extcon_find_cable_index extern int extcon_find_cable_index ( s#extcon_dev * , const char * ) 
extcon_get_cable_state_ extern int extcon_get_cable_state_ ( s#extcon_dev * , int ) 
extcon_get_cable_state extern int extcon_get_cable_state ( s#extcon_dev * , const char * ) 
extcon_set_cable_state_ extern int extcon_set_cable_state_ ( s#extcon_dev * , int , t#bool ) 
extcon_set_cable_state extern int extcon_set_cable_state ( s#extcon_dev * , const char * , t#bool ) 
extcon_get_extcon_dev extern s#extcon_dev * extcon_get_extcon_dev ( const char * ) 
s#extcon_specific_cable_nb struct extcon_specific_cable_nb { s#notifier_block internal_nb ; s#notifier_block * user_nb ; int cable_index ; s#extcon_dev * edev ; unsigned long previous_value ; } 
extcon_register_interest extern int extcon_register_interest ( s#extcon_specific_cable_nb * , const char * , const char * , s#notifier_block * ) 
extcon_unregister_interest extern int extcon_unregister_interest ( s#extcon_specific_cable_nb * ) 
extcon_register_notifier extern int extcon_register_notifier ( s#extcon_dev * , s#notifier_block * ) 
extcon_unregister_notifier extern int extcon_unregister_notifier ( s#extcon_dev * , s#notifier_block * ) 
extcon_dev_register extern int extcon_dev_register ( s#extcon_dev * , s#device * ) 
extcon_dev_unregister extern void extcon_dev_unregister ( s#extcon_dev * ) 

/* drivers/extcon/of_extcon.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##proc_dir_entry
s##iommu_group
of_extcon_get_extcon_dev extern s#extcon_dev * of_extcon_get_extcon_dev ( s#device * , int ) 

/* drivers/firewire/core-card.o */
s#fw_descriptor struct fw_descriptor { s#list_head link ; t#size_t length ; t#u32 immediate ; t#u32 key ; const t#u32 * data ; } 
fw_core_add_descriptor int fw_core_add_descriptor ( s#fw_descriptor * ) 
fw_core_remove_descriptor void fw_core_remove_descriptor ( s#fw_descriptor * ) 
t#fw_packet_callback_t typedef void ( * fw_packet_callback_t ) ( s#fw_packet * , s#fw_card * , int ) 
s#fw_packet struct fw_packet { int speed ; int generation ; t#u32 header [ 4 ] ; t#size_t header_length ; void * payload ; t#size_t payload_length ; t#dma_addr_t payload_bus ; t#bool payload_mapped ; t#u32 timestamp ; t#fw_packet_callback_t callback ; int ack ; s#list_head link ; void * driver_data ; } 
t#fw_iso_callback_t typedef void ( * fw_iso_callback_t ) ( s#fw_iso_context * , t#u32 , t#size_t , void * , void * ) 
t#fw_iso_mc_callback_t typedef void ( * fw_iso_mc_callback_t ) ( s#fw_iso_context * , t#dma_addr_t , void * ) 
s#fw_iso_context struct fw_iso_context { s#fw_card * card ; int type ; int channel ; int speed ; t#bool drop_overflow_headers ; t#size_t header_size ; union { t#fw_iso_callback_t sc ; t#fw_iso_mc_callback_t mc ; } callback ; void * callback_data ; } 
s#fw_iso_packet struct fw_iso_packet { t#u16 payload_length ; t#u32 interrupt : 1 ; t#u32 skip : 1 ; t#u32 tag : 2 ; t#u32 sy : 4 ; t#u32 header_length : 8 ; t#u32 header [ 0 ] ; } 
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s#fw_iso_buffer struct fw_iso_buffer { e#dma_data_direction direction ; s#page * * pages ; int page_count ; int page_count_mapped ; } 
s#fw_card_driver struct fw_card_driver { int ( * enable ) ( s#fw_card * , const t#__be32 * , t#size_t ) ; int ( * read_phy_reg ) ( s#fw_card * , int ) ; int ( * update_phy_reg ) ( s#fw_card * , int , int , int ) ; int ( * set_config_rom ) ( s#fw_card * , const t#__be32 * , t#size_t ) ; void ( * send_request ) ( s#fw_card * , s#fw_packet * ) ; void ( * send_response ) ( s#fw_card * , s#fw_packet * ) ; int ( * cancel_packet ) ( s#fw_card * , s#fw_packet * ) ; int ( * enable_phys_dma ) ( s#fw_card * , int , int ) ; t#u32 ( * read_csr ) ( s#fw_card * , int ) ; void ( * write_csr ) ( s#fw_card * , int , t#u32 ) ; s#fw_iso_context * ( * allocate_iso_context ) ( s#fw_card * , int , int , t#size_t ) ; void ( * free_iso_context ) ( s#fw_iso_context * ) ; int ( * start_iso ) ( s#fw_iso_context * , t#s32 , t#u32 , t#u32 ) ; int ( * set_iso_channels ) ( s#fw_iso_context * , t#u64 * ) ; int ( * queue_iso ) ( s#fw_iso_context * , s#fw_iso_packet * , s#fw_iso_buffer * , unsigned long ) ; void ( * flush_queue_iso ) ( s#fw_iso_context * ) ; int ( * flush_iso_completions ) ( s#fw_iso_context * ) ; int ( * stop_iso ) ( s#fw_iso_context * ) ; } 
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s#fw_node struct fw_node { t#u16 node_id ; t#u8 color ; t#u8 port_count ; t#u8 link_on : 1 ; t#u8 initiated_reset : 1 ; t#u8 b_path : 1 ; t#u8 phy_speed : 2 ; t#u8 max_speed : 2 ; t#u8 max_depth : 4 ; t#u8 max_hops : 4 ; t#atomic_t ref_count ; s#list_head link ; void * data ; s#fw_node * ports [ 0 ] ; } 
s#fw_card struct fw_card { const s#fw_card_driver * driver ; s#device * device ; s#kref kref ; s#completion done ; int node_id ; int generation ; int current_tlabel ; t#u64 tlabel_mask ; s#list_head transaction_list ; t#u64 reset_jiffies ; t#u32 split_timeout_hi ; t#u32 split_timeout_lo ; unsigned int split_timeout_cycles ; unsigned int split_timeout_jiffies ; unsigned long long guid ; unsigned max_receive ; int link_speed ; int config_rom_generation ; t#spinlock_t lock ; s#fw_node * local_node ; s#fw_node * root_node ; s#fw_node * irm_node ; t#u8 color ; int gap_count ; t#bool beta_repeaters_present ; int index ; s#list_head link ; s#list_head phy_receiver_list ; s#delayed_work br_work ; t#bool br_short ; s#delayed_work bm_work ; int bm_retries ; int bm_generation ; int bm_node_id ; t#bool bm_abdicate ; t#bool priority_budget_implemented ; t#bool broadcast_channel_auto_allocated ; t#bool broadcast_channel_allocated ; t#u32 broadcast_channel ; t#__be32 topology_map [ ( 0x1400 - 0x1000 ) / 4 ] ; t#__be32 maint_utility_register ; } 
fw_schedule_bus_reset void fw_schedule_bus_reset ( s#fw_card * , t#bool , t#bool ) 
fw_card_initialize void fw_card_initialize ( s#fw_card * , const s#fw_card_driver * , s#device * ) 
fw_card_add int fw_card_add ( s#fw_card * , t#u32 , t#u32 , t#u64 ) 
fw_card_release void fw_card_release ( s#kref * ) 
fw_core_remove_card void fw_core_remove_card ( s#fw_card * ) 

/* drivers/firewire/core-device.o */
s#fw_csr_iterator struct fw_csr_iterator { const t#u32 * p ; const t#u32 * end ; } 
fw_csr_iterator_init void fw_csr_iterator_init ( s#fw_csr_iterator * , const t#u32 * ) 
fw_csr_iterator_next int fw_csr_iterator_next ( s#fw_csr_iterator * , int * , int * ) 
fw_csr_string int fw_csr_string ( const t#u32 * , int , char * , t#size_t ) 
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##subsys_private
s##iommu_group
s##iommu_ops
fw_bus_type extern s#bus_type fw_bus_type 
s#fw_attribute_group struct fw_attribute_group { s#attribute_group * groups [ 2 ] ; s#attribute_group group ; s#attribute * attrs [ 13 ] ; } 
s#fw_device struct fw_device { t#atomic_t state ; s#fw_node * node ; int node_id ; int generation ; unsigned max_speed ; s#fw_card * card ; s#device device ; s#mutex client_list_mutex ; s#list_head client_list ; const t#u32 * config_rom ; t#size_t config_rom_length ; int config_rom_retries ; unsigned is_local : 1 ; unsigned max_rec : 4 ; unsigned cmc : 1 ; unsigned irmc : 1 ; unsigned bc_implemented : 2 ; t#work_func_t workfn ; s#delayed_work work ; s#fw_attribute_group attribute_group ; } 
fw_device_enable_phys_dma int fw_device_enable_phys_dma ( s#fw_device * ) 
fw_workqueue extern s#workqueue_struct * fw_workqueue 

/* drivers/firewire/core-iso.o */
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
fw_iso_buffer_init int fw_iso_buffer_init ( s#fw_iso_buffer * , s#fw_card * , int , e#dma_data_direction ) 
fw_iso_buffer_destroy void fw_iso_buffer_destroy ( s#fw_iso_buffer * , s#fw_card * ) 
fw_iso_context_create s#fw_iso_context * fw_iso_context_create ( s#fw_card * , int , int , int , t#size_t , t#fw_iso_callback_t , void * ) 
fw_iso_context_destroy void fw_iso_context_destroy ( s#fw_iso_context * ) 
fw_iso_context_start int fw_iso_context_start ( s#fw_iso_context * , int , int , int ) 
fw_iso_context_queue int fw_iso_context_queue ( s#fw_iso_context * , s#fw_iso_packet * , s#fw_iso_buffer * , unsigned long ) 
fw_iso_context_queue_flush void fw_iso_context_queue_flush ( s#fw_iso_context * ) 
fw_iso_context_flush_completions int fw_iso_context_flush_completions ( s#fw_iso_context * ) 
fw_iso_context_stop int fw_iso_context_stop ( s#fw_iso_context * ) 
fw_iso_resource_manage void fw_iso_resource_manage ( s#fw_card * , int , t#u64 , int * , int * , t#bool ) 

/* drivers/firewire/core-topology.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
fw_core_handle_bus_reset void fw_core_handle_bus_reset ( s#fw_card * , int , int , int , t#u32 * , t#bool ) 

/* drivers/firewire/core-transaction.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
t#fw_transaction_callback_t typedef void ( * fw_transaction_callback_t ) ( s#fw_card * , int , void * , t#size_t , void * ) 
s#fw_transaction struct fw_transaction { int node_id ; int tlabel ; s#list_head link ; s#fw_card * card ; t#bool is_split_transaction ; s#timer_list split_timeout_timer ; s#fw_packet packet ; t#fw_transaction_callback_t callback ; void * callback_data ; } 
fw_cancel_transaction int fw_cancel_transaction ( s#fw_card * , s#fw_transaction * ) 
fw_send_request void fw_send_request ( s#fw_card * , s#fw_transaction * , int , int , int , int , unsigned long long , void * , t#size_t , t#fw_transaction_callback_t , void * ) 
fw_run_transaction int fw_run_transaction ( s#fw_card * , int , int , int , int , unsigned long long , void * , t#size_t ) 
s#fw_address_region struct fw_address_region { t#u64 start ; t#u64 end ; } 
fw_high_memory_region extern const s#fw_address_region fw_high_memory_region 
s##fw_request
t#fw_address_callback_t typedef void ( * fw_address_callback_t ) ( s#fw_card * , s#fw_request * , int , int , int , int , unsigned long long , void * , t#size_t , void * ) 
s#fw_address_handler struct fw_address_handler { t#u64 offset ; t#u64 length ; t#fw_address_callback_t address_callback ; void * callback_data ; s#list_head link ; } 
fw_core_add_address_handler int fw_core_add_address_handler ( s#fw_address_handler * , const s#fw_address_region * ) 
fw_core_remove_address_handler void fw_core_remove_address_handler ( s#fw_address_handler * ) 
fw_fill_response void fw_fill_response ( s#fw_packet * , t#u32 * , int , void * , t#size_t ) 
fw_send_response void fw_send_response ( s#fw_card * , s#fw_request * , int ) 
fw_get_request_speed int fw_get_request_speed ( s#fw_request * ) 
fw_core_handle_request void fw_core_handle_request ( s#fw_card * , s#fw_packet * ) 
fw_core_handle_response void fw_core_handle_response ( s#fw_card * , s#fw_packet * ) 
fw_rcode_string const char * fw_rcode_string ( int ) 

/* drivers/gpio/devres.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##proc_dir_entry
s##iommu_group
devm_gpio_request int devm_gpio_request ( s#device * , unsigned , const char * ) 
devm_gpio_request_one int devm_gpio_request_one ( s#device * , unsigned , unsigned long , const char * ) 
devm_gpio_free void devm_gpio_free ( s#device * , unsigned int ) 

/* drivers/gpio/gpio-generic.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
s##seq_file
s##gpio_desc
s#bgpio_chip struct bgpio_chip { s#gpio_chip gc ; unsigned long ( * read_reg ) ( void * ) ; void ( * write_reg ) ( void * , unsigned long ) ; void * reg_dat ; void * reg_set ; void * reg_clr ; void * reg_dir ; int bits ; unsigned long ( * pin2mask ) ( s#bgpio_chip * , unsigned int ) ; t#spinlock_t lock ; unsigned long data ; unsigned long dir ; } 
bgpio_remove int bgpio_remove ( s#bgpio_chip * ) 
bgpio_init int bgpio_init ( s#bgpio_chip * , s#device * , unsigned long , void * , void * , void * , void * , void * , unsigned long ) 

/* drivers/gpio/gpio-max730x.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##proc_dir_entry
s##iommu_group
s##seq_file
s##gpio_desc
s#max7301 struct max7301 { s#mutex lock ; t#u8 port_config [ 8 ] ; t#u32 out_level ; t#u32 input_pullup_active ; s#gpio_chip chip ; s#device * dev ; int ( * write ) ( s#device * , unsigned int , unsigned int ) ; int ( * read ) ( s#device * , unsigned int ) ; } 
__max730x_probe extern int __max730x_probe ( s#max7301 * ) 
__max730x_remove extern int __max730x_remove ( s#device * ) 

/* drivers/gpio/gpiolib.o */
gpio_export extern int gpio_export ( unsigned , t#bool ) 
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##proc_dir_entry
s##iommu_group
gpio_export_link extern int gpio_export_link ( s#device * , const char * , unsigned ) 
gpio_sysfs_set_active_low extern int gpio_sysfs_set_active_low ( unsigned , int ) 
gpio_unexport extern void gpio_unexport ( unsigned ) 
s##gpio_desc
gpiochip_add extern int gpiochip_add ( s#gpio_chip * ) 
gpiochip_remove extern int gpiochip_remove ( s#gpio_chip * ) 
gpiochip_find extern s#gpio_chip * gpiochip_find ( void * , int ( * ) ( s#gpio_chip * , void * ) ) 
gpio_request extern int gpio_request ( unsigned , const char * ) 
gpio_free extern void gpio_free ( unsigned ) 
gpio_request_one extern int gpio_request_one ( unsigned , unsigned long , const char * ) 
s#gpio struct gpio { unsigned gpio ; unsigned long flags ; const char * label ; } 
gpio_request_array extern int gpio_request_array ( const s#gpio * , t#size_t ) 
gpio_free_array extern void gpio_free_array ( const s#gpio * , t#size_t ) 
gpiochip_is_requested extern const char * gpiochip_is_requested ( s#gpio_chip * , unsigned ) 
gpio_direction_input extern int gpio_direction_input ( unsigned ) 
gpio_direction_output extern int gpio_direction_output ( unsigned , int ) 
gpio_set_debounce extern int gpio_set_debounce ( unsigned , unsigned ) 
__gpio_get_value extern int __gpio_get_value ( unsigned ) 
__gpio_set_value extern void __gpio_set_value ( unsigned , int ) 
__gpio_cansleep extern int __gpio_cansleep ( unsigned ) 
__gpio_to_irq extern int __gpio_to_irq ( unsigned ) 
gpio_get_value_cansleep extern int gpio_get_value_cansleep ( unsigned ) 
gpio_set_value_cansleep extern void gpio_set_value_cansleep ( unsigned , int ) 

/* drivers/gpio/gpiolib-of.o */
s##proc_dir_entry
e#of_gpio_flags enum of_gpio_flags { OF_GPIO_ACTIVE_LOW = 0x1 , } 
of_get_named_gpio_flags extern int of_get_named_gpio_flags ( s#device_node * , const char * , int , e#of_gpio_flags * ) 
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##pci_dev
s##iommu_group
s##seq_file
s##gpio_desc
of_gpio_simple_xlate extern int of_gpio_simple_xlate ( s#gpio_chip * , const s#of_phandle_args * , t#u32 * ) 
s#of_mm_gpio_chip struct of_mm_gpio_chip { s#gpio_chip gc ; void ( * save_regs ) ( s#of_mm_gpio_chip * ) ; void * regs ; } 
of_mm_gpiochip_add extern int of_mm_gpiochip_add ( s#device_node * , s#of_mm_gpio_chip * ) 

/* drivers/gpu/drm/ati_pcigart.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
e#drm_stat_type enum drm_stat_type { _DRM_STAT_LOCK , _DRM_STAT_OPENS , _DRM_STAT_CLOSES , _DRM_STAT_IOCTLS , _DRM_STAT_LOCKS , _DRM_STAT_UNLOCKS , _DRM_STAT_VALUE , _DRM_STAT_BYTE , _DRM_STAT_COUNT , _DRM_STAT_IRQ , _DRM_STAT_PRIMARY , _DRM_STAT_SECONDARY , _DRM_STAT_DMA , _DRM_STAT_SPECIAL , _DRM_STAT_MISSED } 
s#drm_open_hash struct drm_open_hash { s#hlist_head * table ; t#u8 order ; } 
t#drm_magic_t typedef unsigned int drm_magic_t 
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s#drm_hw_lock struct drm_hw_lock { __volatile__ unsigned int lock ; char padding [ 60 ] ; } 
s#drm_lock_data struct drm_lock_data { s#drm_hw_lock * hw_lock ; s#drm_file * file_priv ; t#wait_queue_head_t lock_queue ; unsigned long lock_time ; t#spinlock_t spinlock ; t#uint32_t kernel_waiters ; t#uint32_t user_waiters ; int idle_has_lock ; } 
s#drm_master struct drm_master { s#kref refcount ; s#list_head head ; s#drm_minor * minor ; char * unique ; int unique_len ; int unique_size ; int blocked ; s#drm_open_hash magiclist ; s#list_head magicfree ; s#drm_lock_data lock ; void * driver_priv ; } 
s#drm_mode_group struct drm_mode_group { t#uint32_t num_crtcs ; t#uint32_t num_encoders ; t#uint32_t num_connectors ; t#uint32_t num_bridges ; t#uint32_t * id_list ; } 
s#drm_minor struct drm_minor { int index ; int type ; t#dev_t device ; s#device kdev ; s#drm_device * dev ; s#dentry * debugfs_root ; s#list_head debugfs_list ; s#mutex debugfs_lock ; s#drm_master * master ; s#list_head master_list ; s#drm_mode_group mode_group ; } 
s#drm_prime_file_private struct drm_prime_file_private { s#list_head head ; s#mutex lock ; } 
s#drm_file struct drm_file { int authenticated ; s#pid * pid ; t#kuid_t uid ; t#drm_magic_t magic ; unsigned long ioctl_count ; s#list_head lhead ; s#drm_minor * minor ; unsigned long lock_count ; s#idr object_idr ; t#spinlock_t table_lock ; s#file * filp ; void * driver_priv ; int is_master ; s#drm_master * master ; s#list_head fbs ; s#mutex fbs_lock ; t#wait_queue_head_t event_wait ; s#list_head event_list ; int event_space ; s#drm_prime_file_private prime ; } 
s#drm_buf struct drm_buf { int idx ; int total ; int order ; int used ; unsigned long offset ; void * address ; unsigned long bus_address ; s#drm_buf * next ; __volatile__ int waiting ; __volatile__ int pending ; s#drm_file * file_priv ; int context ; int while_locked ; enum { DRM_LIST_NONE = 0 , DRM_LIST_FREE = 1 , DRM_LIST_WAIT = 2 , DRM_LIST_PEND = 3 , DRM_LIST_PRIO = 4 , DRM_LIST_RECLAIM = 5 } list ; int dev_priv_size ; void * dev_private ; } 
s#drm_dma_handle struct drm_dma_handle { t#dma_addr_t busaddr ; void * vaddr ; t#size_t size ; } 
s#drm_freelist struct drm_freelist { int initialized ; t#atomic_t count ; s#drm_buf * next ; t#wait_queue_head_t waiting ; int low_mark ; int high_mark ; t#atomic_t wfh ; t#spinlock_t lock ; } 
s#drm_buf_entry struct drm_buf_entry { int buf_size ; int buf_count ; s#drm_buf * buflist ; int seg_count ; int page_order ; s#drm_dma_handle * * seglist ; s#drm_freelist freelist ; } 
s#drm_device_dma struct drm_device_dma { s#drm_buf_entry bufs [ 22 + 1 ] ; int buf_count ; s#drm_buf * * buflist ; int seg_count ; int page_count ; unsigned long * pagelist ; unsigned long byte_count ; enum { _DRM_DMA_USE_AGP = 0x01 , _DRM_DMA_USE_SG = 0x02 , _DRM_DMA_USE_FB = 0x04 , _DRM_DMA_USE_PCI_RO = 0x08 } flags ; } 
s##agp_bridge_data
s#drm_agp_head struct drm_agp_head { s#agp_kern_info agp_info ; s#list_head memory ; unsigned long mode ; s#agp_bridge_data * bridge ; int enabled ; int acquired ; unsigned long base ; int agp_mtrr ; int cant_use_aperture ; unsigned long page_mask ; } 
s##mfd_cell
s##usb_device
s#drm_sg_mem struct drm_sg_mem { unsigned long handle ; void * virtual ; int pages ; s#page * * pagelist ; t#dma_addr_t * busaddr ; } 
s#drm_sigdata struct drm_sigdata { int context ; s#drm_hw_lock * lock ; } 
s#drm_mm struct drm_mm { s#list_head hole_stack ; s#drm_mm_node head_node ; unsigned int scan_check_range : 1 ; unsigned scan_alignment ; unsigned long scan_color ; unsigned long scan_size ; unsigned long scan_hit_start ; unsigned long scan_hit_end ; unsigned scanned_blocks ; unsigned long scan_start ; unsigned long scan_end ; s#drm_mm_node * prev_scanned_node ; void ( * color_adjust ) ( s#drm_mm_node * , unsigned long , unsigned long * , unsigned long * ) ; } 
s#drm_mm_node struct drm_mm_node { s#list_head node_list ; s#list_head hole_stack ; unsigned hole_follows : 1 ; unsigned scanned_block : 1 ; unsigned scanned_prev_free : 1 ; unsigned scanned_next_free : 1 ; unsigned scanned_preceeds_hole : 1 ; unsigned allocated : 1 ; unsigned long color ; unsigned long start ; unsigned long size ; s#drm_mm * mm ; } 
s#drm_vma_offset_node struct drm_vma_offset_node { t#rwlock_t vm_lock ; s#drm_mm_node vm_node ; s#rb_node vm_rb ; s#rb_root vm_files ; } 
s##dma_buf
s##dma_buf_attachment
s#drm_gem_object struct drm_gem_object { s#kref refcount ; unsigned handle_count ; s#drm_device * dev ; s#file * filp ; s#drm_vma_offset_node vma_node ; t#size_t size ; int name ; t#uint32_t read_domains ; t#uint32_t write_domain ; t#uint32_t pending_read_domains ; t#uint32_t pending_write_domain ; void * driver_private ; s#dma_buf * dma_buf ; s#dma_buf_attachment * import_attach ; } 
s#drm_mode_create_dumb struct drm_mode_create_dumb { t#uint32_t height ; t#uint32_t width ; t#uint32_t bpp ; t#uint32_t flags ; t#uint32_t handle ; t#uint32_t pitch ; t#uint64_t size ; } 
t#drm_ioctl_t typedef int drm_ioctl_t ( s#drm_device * , void * , s#drm_file * ) 
s#drm_ioctl_desc struct drm_ioctl_desc { unsigned int cmd ; int flags ; t#drm_ioctl_t * func ; unsigned int cmd_drv ; const char * name ; } 
s##usb_driver
s#drm_unique struct drm_unique { t#size_t unique_len ; char * unique ; } 
s#drm_irq_busid struct drm_irq_busid { int irq ; int busnum ; int devnum ; int funcnum ; } 
s#drm_bus struct drm_bus { int bus_type ; int ( * get_irq ) ( s#drm_device * ) ; const char * ( * get_name ) ( s#drm_device * ) ; int ( * set_busid ) ( s#drm_device * , s#drm_master * ) ; int ( * set_unique ) ( s#drm_device * , s#drm_master * , s#drm_unique * ) ; int ( * irq_by_busid ) ( s#drm_device * , s#drm_irq_busid * ) ; int ( * agp_init ) ( s#drm_device * ) ; void ( * agp_destroy ) ( s#drm_device * ) ; } 
s#drm_driver struct drm_driver { int ( * load ) ( s#drm_device * , unsigned long ) ; int ( * firstopen ) ( s#drm_device * ) ; int ( * open ) ( s#drm_device * , s#drm_file * ) ; void ( * preclose ) ( s#drm_device * , s#drm_file * ) ; void ( * postclose ) ( s#drm_device * , s#drm_file * ) ; void ( * lastclose ) ( s#drm_device * ) ; int ( * unload ) ( s#drm_device * ) ; int ( * suspend ) ( s#drm_device * , t#pm_message_t ) ; int ( * resume ) ( s#drm_device * ) ; int ( * dma_ioctl ) ( s#drm_device * , void * , s#drm_file * ) ; int ( * dma_quiescent ) ( s#drm_device * ) ; int ( * context_dtor ) ( s#drm_device * , int ) ; t#u32 ( * get_vblank_counter ) ( s#drm_device * , int ) ; int ( * enable_vblank ) ( s#drm_device * , int ) ; void ( * disable_vblank ) ( s#drm_device * , int ) ; int ( * device_is_agp ) ( s#drm_device * ) ; int ( * get_scanout_position ) ( s#drm_device * , int , int * , int * ) ; int ( * get_vblank_timestamp ) ( s#drm_device * , int , int * , s#timeval * , unsigned ) ; t#irqreturn_t ( * irq_handler ) ( int , void * ) ; void ( * irq_preinstall ) ( s#drm_device * ) ; int ( * irq_postinstall ) ( s#drm_device * ) ; void ( * irq_uninstall ) ( s#drm_device * ) ; int ( * master_create ) ( s#drm_device * , s#drm_master * ) ; void ( * master_destroy ) ( s#drm_device * , s#drm_master * ) ; int ( * master_set ) ( s#drm_device * , s#drm_file * , t#bool ) ; void ( * master_drop ) ( s#drm_device * , s#drm_file * , t#bool ) ; int ( * debugfs_init ) ( s#drm_minor * ) ; void ( * debugfs_cleanup ) ( s#drm_minor * ) ; int ( * gem_init_object ) ( s#drm_gem_object * ) ; void ( * gem_free_object ) ( s#drm_gem_object * ) ; int ( * gem_open_object ) ( s#drm_gem_object * , s#drm_file * ) ; void ( * gem_close_object ) ( s#drm_gem_object * , s#drm_file * ) ; int ( * prime_handle_to_fd ) ( s#drm_device * , s#drm_file * , t#uint32_t , t#uint32_t , int * ) ; int ( * prime_fd_to_handle ) ( s#drm_device * , s#drm_file * , int , t#uint32_t * ) ; s#dma_buf * ( * gem_prime_export ) ( s#drm_device * , s#drm_gem_object * , int ) ; s#drm_gem_object * ( * gem_prime_import ) ( s#drm_device * , s#dma_buf * ) ; int ( * gem_prime_pin ) ( s#drm_gem_object * ) ; void ( * gem_prime_unpin ) ( s#drm_gem_object * ) ; s#sg_table * ( * gem_prime_get_sg_table ) ( s#drm_gem_object * ) ; s#drm_gem_object * ( * gem_prime_import_sg_table ) ( s#drm_device * , t#size_t , s#sg_table * ) ; void * ( * gem_prime_vmap ) ( s#drm_gem_object * ) ; void ( * gem_prime_vunmap ) ( s#drm_gem_object * , void * ) ; int ( * gem_prime_mmap ) ( s#drm_gem_object * , s#vm_area_struct * ) ; void ( * vgaarb_irq ) ( s#drm_device * , t#bool ) ; int ( * dumb_create ) ( s#drm_file * , s#drm_device * , s#drm_mode_create_dumb * ) ; int ( * dumb_map_offset ) ( s#drm_file * , s#drm_device * , t#uint32_t , t#uint64_t * ) ; int ( * dumb_destroy ) ( s#drm_file * , s#drm_device * , t#uint32_t ) ; const s#vm_operations_struct * gem_vm_ops ; int major ; int minor ; int patchlevel ; char * name ; char * desc ; char * date ; t#u32 driver_features ; int dev_priv_size ; const s#drm_ioctl_desc * ioctls ; int num_ioctls ; const s#file_operations * fops ; union { s#pci_driver * pci ; s#platform_device * platform_device ; s#usb_driver * usb ; } kdriver ; s#drm_bus * bus ; s#list_head device_list ; } 
e#drm_map_type enum drm_map_type { _DRM_FRAME_BUFFER = 0 , _DRM_REGISTERS = 1 , _DRM_SHM = 2 , _DRM_AGP = 3 , _DRM_SCATTER_GATHER = 4 , _DRM_CONSISTENT = 5 , _DRM_GEM = 6 , } 
e#drm_map_flags enum drm_map_flags { _DRM_RESTRICTED = 0x01 , _DRM_READ_ONLY = 0x02 , _DRM_LOCKED = 0x04 , _DRM_KERNEL = 0x08 , _DRM_WRITE_COMBINING = 0x10 , _DRM_CONTAINS_LOCK = 0x20 , _DRM_REMOVABLE = 0x40 , _DRM_DRIVER = 0x80 } 
s#drm_local_map struct drm_local_map { t#resource_size_t offset ; unsigned long size ; e#drm_map_type type ; e#drm_map_flags flags ; void * handle ; int mtrr ; } 
s#drm_object_properties struct drm_object_properties { int count ; t#uint32_t ids [ 24 ] ; t#uint64_t values [ 24 ] ; } 
s#drm_mode_object struct drm_mode_object { t#uint32_t id ; t#uint32_t type ; s#drm_object_properties * properties ; } 
s#drm_clip_rect struct drm_clip_rect { unsigned short x1 ; unsigned short y1 ; unsigned short x2 ; unsigned short y2 ; } 
s#drm_framebuffer_funcs struct drm_framebuffer_funcs { void ( * destroy ) ( s#drm_framebuffer * ) ; int ( * create_handle ) ( s#drm_framebuffer * , s#drm_file * , unsigned int * ) ; int ( * dirty ) ( s#drm_framebuffer * , s#drm_file * , unsigned , unsigned , s#drm_clip_rect * , unsigned ) ; } 
s#drm_framebuffer struct drm_framebuffer { s#drm_device * dev ; s#kref refcount ; s#list_head head ; s#drm_mode_object base ; const s#drm_framebuffer_funcs * funcs ; unsigned int pitches [ 4 ] ; unsigned int offsets [ 4 ] ; unsigned int width ; unsigned int height ; unsigned int depth ; int bits_per_pixel ; int flags ; t#uint32_t pixel_format ; s#list_head filp_head ; void * helper_private ; } 
s#drm_mode_fb_cmd2 struct drm_mode_fb_cmd2 { t#__u32 fb_id ; t#__u32 width , height ; t#__u32 pixel_format ; t#__u32 flags ; t#__u32 handles [ 4 ] ; t#__u32 pitches [ 4 ] ; t#__u32 offsets [ 4 ] ; } 
s#drm_mode_config_funcs struct drm_mode_config_funcs { s#drm_framebuffer * ( * fb_create ) ( s#drm_device * , s#drm_file * , s#drm_mode_fb_cmd2 * ) ; void ( * output_poll_changed ) ( s#drm_device * ) ; } 
s#drm_property struct drm_property { s#list_head head ; s#drm_mode_object base ; t#uint32_t flags ; char name [ 32 ] ; t#uint32_t num_values ; t#uint64_t * values ; s#list_head enum_blob_list ; } 
s#drm_mode_config struct drm_mode_config { s#mutex mutex ; s#mutex idr_mutex ; s#idr crtc_idr ; s#mutex fb_lock ; int num_fb ; s#list_head fb_list ; int num_connector ; s#list_head connector_list ; int num_bridge ; s#list_head bridge_list ; int num_encoder ; s#list_head encoder_list ; int num_plane ; s#list_head plane_list ; int num_crtc ; s#list_head crtc_list ; s#list_head property_list ; int min_width , min_height ; int max_width , max_height ; const s#drm_mode_config_funcs * funcs ; t#resource_size_t fb_base ; t#bool poll_enabled ; t#bool poll_running ; s#delayed_work output_poll_work ; s#list_head property_blob_list ; s#drm_property * edid_property ; s#drm_property * dpms_property ; s#drm_property * dvi_i_subconnector_property ; s#drm_property * dvi_i_select_subconnector_property ; s#drm_property * tv_subconnector_property ; s#drm_property * tv_select_subconnector_property ; s#drm_property * tv_mode_property ; s#drm_property * tv_left_margin_property ; s#drm_property * tv_right_margin_property ; s#drm_property * tv_top_margin_property ; s#drm_property * tv_bottom_margin_property ; s#drm_property * tv_brightness_property ; s#drm_property * tv_contrast_property ; s#drm_property * tv_flicker_reduction_property ; s#drm_property * tv_overscan_property ; s#drm_property * tv_saturation_property ; s#drm_property * tv_hue_property ; s#drm_property * scaling_mode_property ; s#drm_property * dirty_info_property ; t#uint32_t preferred_depth , prefer_shadow ; t#bool async_page_flip ; } 
s#drm_device struct drm_device { s#list_head driver_item ; char * devname ; int if_version ; t#spinlock_t count_lock ; s#mutex struct_mutex ; int open_count ; t#atomic_t ioctl_count ; t#atomic_t vma_count ; int buf_use ; t#atomic_t buf_alloc ; unsigned long counters ; e#drm_stat_type types [ 15 ] ; t#atomic_t counts [ 15 ] ; s#list_head filelist ; s#list_head maplist ; int map_count ; s#drm_open_hash map_hash ; s#list_head ctxlist ; int ctx_count ; s#mutex ctxlist_mutex ; s#idr ctx_idr ; s#list_head vmalist ; s#drm_device_dma * dma ; int irq_enabled ; __volatile__ long context_flag ; int last_context ; s#work_struct work ; int vblank_disable_allowed ; t#wait_queue_head_t * vbl_queue ; t#atomic_t * _vblank_count ; s#timeval * _vblank_time ; t#spinlock_t vblank_time_lock ; t#spinlock_t vbl_lock ; t#atomic_t * vblank_refcount ; t#u32 * last_vblank ; int * vblank_enabled ; int * vblank_inmodeset ; t#u32 * last_vblank_wait ; s#timer_list vblank_disable_timer ; t#u32 max_vblank_count ; s#list_head vblank_event_list ; t#spinlock_t event_lock ; s#drm_agp_head * agp ; s#device * dev ; s#pci_dev * pdev ; int pci_vendor ; int pci_device ; s#platform_device * platformdev ; s#usb_device * usbdev ; s#drm_sg_mem * sg ; unsigned int num_crtcs ; void * dev_private ; void * mm_private ; s#address_space * dev_mapping ; s#drm_sigdata sigdata ; t#sigset_t sigmask ; s#drm_driver * driver ; s#drm_local_map * agp_buffer_map ; unsigned int agp_buffer_token ; s#drm_minor * control ; s#drm_minor * primary ; s#drm_minor * render ; s#drm_mode_config mode_config ; s#mutex object_name_lock ; s#idr object_name_idr ; int switch_power_state ; t#atomic_t unplugged ; } 
s#drm_ati_pcigart_info struct drm_ati_pcigart_info { int gart_table_location ; int gart_reg_if ; void * addr ; t#dma_addr_t bus_addr ; t#dma_addr_t table_mask ; s#drm_dma_handle * table_handle ; s#drm_local_map mapping ; int table_size ; } 
drm_ati_pcigart_cleanup extern int drm_ati_pcigart_cleanup ( s#drm_device * , s#drm_ati_pcigart_info * ) 
drm_ati_pcigart_init extern int drm_ati_pcigart_init ( s#drm_device * , s#drm_ati_pcigart_info * ) 

/* drivers/gpu/drm/drm_agpsupport.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
s#drm_agp_info struct drm_agp_info { int agp_version_major ; int agp_version_minor ; unsigned long mode ; unsigned long aperture_base ; unsigned long aperture_size ; unsigned long memory_allowed ; unsigned long memory_used ; unsigned short id_vendor ; unsigned short id_device ; } 
drm_agp_info int drm_agp_info ( s#drm_device * , s#drm_agp_info * ) 
drm_agp_acquire int drm_agp_acquire ( s#drm_device * ) 
drm_agp_release int drm_agp_release ( s#drm_device * ) 
s#drm_agp_mode struct drm_agp_mode { unsigned long mode ; } 
drm_agp_enable int drm_agp_enable ( s#drm_device * , s#drm_agp_mode ) 
s#drm_agp_buffer struct drm_agp_buffer { unsigned long size ; unsigned long handle ; unsigned long type ; unsigned long physical ; } 
drm_agp_alloc int drm_agp_alloc ( s#drm_device * , s#drm_agp_buffer * ) 
s#drm_agp_binding struct drm_agp_binding { unsigned long handle ; unsigned long offset ; } 
drm_agp_unbind int drm_agp_unbind ( s#drm_device * , s#drm_agp_binding * ) 
drm_agp_bind int drm_agp_bind ( s#drm_device * , s#drm_agp_binding * ) 
drm_agp_free int drm_agp_free ( s#drm_device * , s#drm_agp_buffer * ) 
drm_agp_bind_pages s#agp_memory * drm_agp_bind_pages ( s#drm_device * , s#page * * , unsigned long , t#uint32_t , t#uint32_t ) 

/* drivers/gpu/drm/drm_buffer.o */
s#drm_buffer struct drm_buffer { int iterator ; int size ; char * data [ ] ; } 
drm_buffer_alloc extern int drm_buffer_alloc ( s#drm_buffer * * , int ) 
drm_buffer_copy_from_user extern int drm_buffer_copy_from_user ( s#drm_buffer * , void * , int ) 
drm_buffer_free extern void drm_buffer_free ( s#drm_buffer * ) 
drm_buffer_read_object extern void * drm_buffer_read_object ( s#drm_buffer * , int , void * ) 

/* drivers/gpu/drm/drm_bufs.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_addmap extern int drm_addmap ( s#drm_device * , t#resource_size_t , unsigned int , e#drm_map_type , e#drm_map_flags , s#drm_local_map * * ) 
drm_rmmap_locked extern int drm_rmmap_locked ( s#drm_device * , s#drm_local_map * ) 
drm_rmmap extern int drm_rmmap ( s#drm_device * , s#drm_local_map * ) 
s#drm_buf_desc struct drm_buf_desc { int count ; int size ; int low_mark ; int high_mark ; enum { _DRM_PAGE_ALIGN = 0x01 , _DRM_AGP_BUFFER = 0x02 , _DRM_SG_BUFFER = 0x04 , _DRM_FB_BUFFER = 0x08 , _DRM_PCI_BUFFER_RO = 0x10 } flags ; unsigned long agp_start ; } 
drm_addbufs_agp extern int drm_addbufs_agp ( s#drm_device * , s#drm_buf_desc * ) 
drm_addbufs_pci extern int drm_addbufs_pci ( s#drm_device * , s#drm_buf_desc * ) 
drm_getsarea extern s#drm_local_map * drm_getsarea ( s#drm_device * ) 

/* drivers/gpu/drm/drm_cache.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
drm_clflush_pages void drm_clflush_pages ( s#page * [ ] , unsigned long ) 
drm_clflush_sg void drm_clflush_sg ( s#sg_table * ) 
drm_clflush_virt_range void drm_clflush_virt_range ( char * , unsigned long ) 

/* drivers/gpu/drm/drm_crtc.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_modeset_lock_all extern void drm_modeset_lock_all ( s#drm_device * ) 
drm_modeset_unlock_all extern void drm_modeset_unlock_all ( s#drm_device * ) 
drm_warn_on_modeset_not_all_locked extern void drm_warn_on_modeset_not_all_locked ( s#drm_device * ) 
e#drm_mode_status enum drm_mode_status { MODE_OK = 0 , MODE_HSYNC , MODE_VSYNC , MODE_H_ILLEGAL , MODE_V_ILLEGAL , MODE_BAD_WIDTH , MODE_NOMODE , MODE_NO_INTERLACE , MODE_NO_DBLESCAN , MODE_NO_VSCAN , MODE_MEM , MODE_VIRTUAL_X , MODE_VIRTUAL_Y , MODE_MEM_VIRT , MODE_NOCLOCK , MODE_CLOCK_HIGH , MODE_CLOCK_LOW , MODE_CLOCK_RANGE , MODE_BAD_HVALUE , MODE_BAD_VVALUE , MODE_BAD_VSCAN , MODE_HSYNC_NARROW , MODE_HSYNC_WIDE , MODE_HBLANK_NARROW , MODE_HBLANK_WIDE , MODE_VSYNC_NARROW , MODE_VSYNC_WIDE , MODE_VBLANK_NARROW , MODE_VBLANK_WIDE , MODE_PANEL , MODE_INTERLACE_WIDTH , MODE_ONE_WIDTH , MODE_ONE_HEIGHT , MODE_ONE_SIZE , MODE_NO_REDUCED , MODE_UNVERIFIED = - 3 , MODE_BAD = - 2 , MODE_ERROR = - 1 } 
s#drm_display_mode struct drm_display_mode { s#list_head head ; s#drm_mode_object base ; char name [ 32 ] ; e#drm_mode_status status ; unsigned int type ; int clock ; int hdisplay ; int hsync_start ; int hsync_end ; int htotal ; int hskew ; int vdisplay ; int vsync_start ; int vsync_end ; int vtotal ; int vscan ; unsigned int flags ; int width_mm ; int height_mm ; int clock_index ; int synth_clock ; int crtc_hdisplay ; int crtc_hblank_start ; int crtc_hblank_end ; int crtc_hsync_start ; int crtc_hsync_end ; int crtc_htotal ; int crtc_hskew ; int crtc_vdisplay ; int crtc_vblank_start ; int crtc_vblank_end ; int crtc_vsync_start ; int crtc_vsync_end ; int crtc_vtotal ; int private_size ; int * private ; int private_flags ; int vrefresh ; int hsync ; } 
e#drm_connector_status enum drm_connector_status { connector_status_connected = 1 , connector_status_disconnected = 2 , connector_status_unknown = 3 , } 
e#subpixel_order enum subpixel_order { SubPixelUnknown = 0 , SubPixelHorizontalRGB , SubPixelHorizontalBGR , SubPixelVerticalRGB , SubPixelVerticalBGR , SubPixelNone , } 
s#drm_display_info struct drm_display_info { char name [ 32 ] ; unsigned int width_mm ; unsigned int height_mm ; unsigned int min_vfreq , max_vfreq ; unsigned int min_hfreq , max_hfreq ; unsigned int pixel_clock ; unsigned int bpc ; e#subpixel_order subpixel_order ; t#u32 color_formats ; t#u8 cea_rev ; } 
s#drm_connector_funcs struct drm_connector_funcs { void ( * dpms ) ( s#drm_connector * , int ) ; void ( * save ) ( s#drm_connector * ) ; void ( * restore ) ( s#drm_connector * ) ; void ( * reset ) ( s#drm_connector * ) ; e#drm_connector_status ( * detect ) ( s#drm_connector * , t#bool ) ; int ( * fill_modes ) ( s#drm_connector * , t#uint32_t , t#uint32_t ) ; int ( * set_property ) ( s#drm_connector * , s#drm_property * , t#uint64_t ) ; void ( * destroy ) ( s#drm_connector * ) ; void ( * force ) ( s#drm_connector * ) ; } 
s#drm_property_blob struct drm_property_blob { s#drm_mode_object base ; s#list_head head ; unsigned int length ; unsigned char data [ ] ; } 
e#drm_connector_force enum drm_connector_force { DRM_FORCE_UNSPECIFIED , DRM_FORCE_OFF , DRM_FORCE_ON , DRM_FORCE_ON_DIGITAL , } 
s#drm_connector struct drm_connector { s#drm_device * dev ; s#device kdev ; s#device_attribute * attr ; s#list_head head ; s#drm_mode_object base ; int connector_type ; int connector_type_id ; t#bool interlace_allowed ; t#bool doublescan_allowed ; s#list_head modes ; e#drm_connector_status status ; s#list_head probed_modes ; s#drm_display_info display_info ; const s#drm_connector_funcs * funcs ; s#drm_property_blob * edid_blob_ptr ; s#drm_object_properties properties ; t#uint8_t polled ; int dpms ; void * helper_private ; e#drm_connector_force force ; t#uint32_t encoder_ids [ 3 ] ; s#drm_encoder * encoder ; t#uint8_t eld [ 128 ] ; t#bool dvi_dual ; int max_tmds_clock ; t#bool latency_present [ 2 ] ; int video_latency [ 2 ] ; int audio_latency [ 2 ] ; int null_edid_counter ; unsigned bad_edid_counter ; } 
s#drm_mode_set struct drm_mode_set { s#drm_framebuffer * fb ; s#drm_crtc * crtc ; s#drm_display_mode * mode ; t#uint32_t x ; t#uint32_t y ; s#drm_connector * * connectors ; t#size_t num_connectors ; } 
s#drm_event struct drm_event { t#__u32 type ; t#__u32 length ; } 
s#drm_pending_event struct drm_pending_event { s#drm_event * event ; s#list_head link ; s#drm_file * file_priv ; t#pid_t pid ; void ( * destroy ) ( s#drm_pending_event * ) ; } 
s#drm_event_vblank struct drm_event_vblank { s#drm_event base ; t#__u64 user_data ; t#__u32 tv_sec ; t#__u32 tv_usec ; t#__u32 sequence ; t#__u32 reserved ; } 
s#drm_pending_vblank_event struct drm_pending_vblank_event { s#drm_pending_event base ; int pipe ; s#drm_event_vblank event ; } 
s#drm_crtc_funcs struct drm_crtc_funcs { void ( * save ) ( s#drm_crtc * ) ; void ( * restore ) ( s#drm_crtc * ) ; void ( * reset ) ( s#drm_crtc * ) ; int ( * cursor_set ) ( s#drm_crtc * , s#drm_file * , t#uint32_t , t#uint32_t , t#uint32_t ) ; int ( * cursor_set2 ) ( s#drm_crtc * , s#drm_file * , t#uint32_t , t#uint32_t , t#uint32_t , t#int32_t , t#int32_t ) ; int ( * cursor_move ) ( s#drm_crtc * , int , int ) ; void ( * gamma_set ) ( s#drm_crtc * , t#u16 * , t#u16 * , t#u16 * , t#uint32_t , t#uint32_t ) ; void ( * destroy ) ( s#drm_crtc * ) ; int ( * set_config ) ( s#drm_mode_set * ) ; int ( * page_flip ) ( s#drm_crtc * , s#drm_framebuffer * , s#drm_pending_vblank_event * , t#uint32_t ) ; int ( * set_property ) ( s#drm_crtc * , s#drm_property * , t#uint64_t ) ; } 
t#uint16_t typedef t#__u16 uint16_t 
s#drm_crtc struct drm_crtc { s#drm_device * dev ; s#list_head head ; s#mutex mutex ; s#drm_mode_object base ; s#drm_framebuffer * fb ; s#drm_framebuffer * old_fb ; t#bool enabled ; s#drm_display_mode mode ; s#drm_display_mode hwmode ; t#bool invert_dimensions ; int x , y ; const s#drm_crtc_funcs * funcs ; t#uint32_t gamma_size ; t#uint16_t * gamma_store ; t#s64 framedur_ns , linedur_ns , pixeldur_ns ; void * helper_private ; s#drm_object_properties properties ; } 
s#drm_bridge_funcs struct drm_bridge_funcs { t#bool ( * mode_fixup ) ( s#drm_bridge * , const s#drm_display_mode * , s#drm_display_mode * ) ; void ( * disable ) ( s#drm_bridge * ) ; void ( * post_disable ) ( s#drm_bridge * ) ; void ( * mode_set ) ( s#drm_bridge * , s#drm_display_mode * , s#drm_display_mode * ) ; void ( * pre_enable ) ( s#drm_bridge * ) ; void ( * enable ) ( s#drm_bridge * ) ; void ( * destroy ) ( s#drm_bridge * ) ; } 
s#drm_bridge struct drm_bridge { s#drm_device * dev ; s#list_head head ; s#drm_mode_object base ; const s#drm_bridge_funcs * funcs ; void * driver_private ; } 
s#drm_encoder_funcs struct drm_encoder_funcs { void ( * reset ) ( s#drm_encoder * ) ; void ( * destroy ) ( s#drm_encoder * ) ; } 
s#drm_encoder struct drm_encoder { s#drm_device * dev ; s#list_head head ; s#drm_mode_object base ; int encoder_type ; t#uint32_t possible_crtcs ; t#uint32_t possible_clones ; s#drm_crtc * crtc ; s#drm_bridge * bridge ; const s#drm_encoder_funcs * funcs ; void * helper_private ; } 
drm_get_encoder_name extern const char * drm_get_encoder_name ( const s#drm_encoder * ) 
drm_get_connector_name extern const char * drm_get_connector_name ( const s#drm_connector * ) 
drm_get_connector_status_name extern const char * drm_get_connector_status_name ( e#drm_connector_status ) 
drm_get_format_name extern const char * drm_get_format_name ( t#uint32_t ) 
drm_mode_object_find extern s#drm_mode_object * drm_mode_object_find ( s#drm_device * , t#uint32_t , t#uint32_t ) 
drm_framebuffer_init extern int drm_framebuffer_init ( s#drm_device * , s#drm_framebuffer * , const s#drm_framebuffer_funcs * ) 
drm_framebuffer_lookup extern s#drm_framebuffer * drm_framebuffer_lookup ( s#drm_device * , t#uint32_t ) 
drm_framebuffer_unreference extern void drm_framebuffer_unreference ( s#drm_framebuffer * ) 
drm_framebuffer_reference extern void drm_framebuffer_reference ( s#drm_framebuffer * ) 
drm_framebuffer_unregister_private extern void drm_framebuffer_unregister_private ( s#drm_framebuffer * ) 
drm_framebuffer_cleanup extern void drm_framebuffer_cleanup ( s#drm_framebuffer * ) 
drm_framebuffer_remove extern void drm_framebuffer_remove ( s#drm_framebuffer * ) 
drm_crtc_init extern int drm_crtc_init ( s#drm_device * , s#drm_crtc * , const s#drm_crtc_funcs * ) 
drm_crtc_cleanup extern void drm_crtc_cleanup ( s#drm_crtc * ) 
drm_mode_probed_add extern void drm_mode_probed_add ( s#drm_connector * , s#drm_display_mode * ) 
drm_connector_init extern int drm_connector_init ( s#drm_device * , s#drm_connector * , const s#drm_connector_funcs * , int ) 
drm_connector_cleanup extern void drm_connector_cleanup ( s#drm_connector * ) 
drm_connector_unplug_all extern void drm_connector_unplug_all ( s#drm_device * ) 
drm_bridge_init extern int drm_bridge_init ( s#drm_device * , s#drm_bridge * , const s#drm_bridge_funcs * ) 
drm_bridge_cleanup extern void drm_bridge_cleanup ( s#drm_bridge * ) 
drm_encoder_init extern int drm_encoder_init ( s#drm_device * , s#drm_encoder * , const s#drm_encoder_funcs * , int ) 
drm_encoder_cleanup extern void drm_encoder_cleanup ( s#drm_encoder * ) 
s#drm_plane_funcs struct drm_plane_funcs { int ( * update_plane ) ( s#drm_plane * , s#drm_crtc * , s#drm_framebuffer * , int , int , unsigned int , unsigned int , t#uint32_t , t#uint32_t , t#uint32_t , t#uint32_t ) ; int ( * disable_plane ) ( s#drm_plane * ) ; void ( * destroy ) ( s#drm_plane * ) ; int ( * set_property ) ( s#drm_plane * , s#drm_property * , t#uint64_t ) ; } 
s#drm_plane struct drm_plane { s#drm_device * dev ; s#list_head head ; s#drm_mode_object base ; t#uint32_t possible_crtcs ; t#uint32_t * format_types ; t#uint32_t format_count ; s#drm_crtc * crtc ; s#drm_framebuffer * fb ; const s#drm_plane_funcs * funcs ; s#drm_object_properties properties ; } 
drm_plane_init extern int drm_plane_init ( s#drm_device * , s#drm_plane * , unsigned long , const s#drm_plane_funcs * , const t#uint32_t * , t#uint32_t , t#bool ) 
drm_plane_cleanup extern void drm_plane_cleanup ( s#drm_plane * ) 
drm_plane_force_disable extern void drm_plane_force_disable ( s#drm_plane * ) 
drm_mode_create extern s#drm_display_mode * drm_mode_create ( s#drm_device * ) 
drm_mode_destroy extern void drm_mode_destroy ( s#drm_device * , s#drm_display_mode * ) 
drm_mode_create_dvi_i_properties extern int drm_mode_create_dvi_i_properties ( s#drm_device * ) 
drm_mode_create_tv_properties extern int drm_mode_create_tv_properties ( s#drm_device * , int , char * [ ] ) 
drm_mode_create_scaling_mode_property extern int drm_mode_create_scaling_mode_property ( s#drm_device * ) 
drm_mode_create_dirty_info_property extern int drm_mode_create_dirty_info_property ( s#drm_device * ) 
drm_mode_group_init_legacy_group extern int drm_mode_group_init_legacy_group ( s#drm_device * , s#drm_mode_group * ) 
drm_mode_set_config_internal extern int drm_mode_set_config_internal ( s#drm_mode_set * ) 
drm_mode_legacy_fb_format extern t#uint32_t drm_mode_legacy_fb_format ( t#uint32_t , t#uint32_t ) 
drm_property_create extern s#drm_property * drm_property_create ( s#drm_device * , int , const char * , int ) 
s#drm_prop_enum_list struct drm_prop_enum_list { int type ; char * name ; } 
drm_property_create_enum extern s#drm_property * drm_property_create_enum ( s#drm_device * , int , const char * , const s#drm_prop_enum_list * , int ) 
drm_property_create_bitmask s#drm_property * drm_property_create_bitmask ( s#drm_device * , int , const char * , const s#drm_prop_enum_list * , int ) 
drm_property_create_range s#drm_property * drm_property_create_range ( s#drm_device * , int , const char * , t#uint64_t , t#uint64_t ) 
drm_property_add_enum extern int drm_property_add_enum ( s#drm_property * , int , t#uint64_t , const char * ) 
drm_property_destroy extern void drm_property_destroy ( s#drm_device * , s#drm_property * ) 
drm_object_attach_property extern void drm_object_attach_property ( s#drm_mode_object * , s#drm_property * , t#uint64_t ) 
drm_object_property_set_value extern int drm_object_property_set_value ( s#drm_mode_object * , s#drm_property * , t#uint64_t ) 
drm_object_property_get_value extern int drm_object_property_get_value ( s#drm_mode_object * , s#drm_property * , t#uint64_t * ) 
s#est_timings struct est_timings { t#u8 t1 ; t#u8 t2 ; t#u8 mfg_rsvd ; } 
s#std_timing struct std_timing { t#u8 hsize ; t#u8 vfreq_aspect ; } 
t#__le16 typedef t#__u16 __le16 
s#detailed_pixel_timing struct detailed_pixel_timing { t#u8 hactive_lo ; t#u8 hblank_lo ; t#u8 hactive_hblank_hi ; t#u8 vactive_lo ; t#u8 vblank_lo ; t#u8 vactive_vblank_hi ; t#u8 hsync_offset_lo ; t#u8 hsync_pulse_width_lo ; t#u8 vsync_offset_pulse_width_lo ; t#u8 hsync_vsync_offset_pulse_width_hi ; t#u8 width_mm_lo ; t#u8 height_mm_lo ; t#u8 width_height_mm_hi ; t#u8 hborder ; t#u8 vborder ; t#u8 misc ; } 
s#detailed_data_string struct detailed_data_string { t#u8 str [ 13 ] ; } 
s#detailed_data_monitor_range struct detailed_data_monitor_range { t#u8 min_vfreq ; t#u8 max_vfreq ; t#u8 min_hfreq_khz ; t#u8 max_hfreq_khz ; t#u8 pixel_clock_mhz ; t#u8 flags ; union { struct { t#u8 reserved ; t#u8 hfreq_start_khz ; t#u8 c ; t#__le16 m ; t#u8 k ; t#u8 j ; } __attribute__ ( ( packed ) ) gtf2 ; struct { t#u8 version ; t#u8 data1 ; t#u8 data2 ; t#u8 supported_aspects ; t#u8 flags ; t#u8 supported_scalings ; t#u8 preferred_refresh ; } __attribute__ ( ( packed ) ) cvt ; } formula ; } 
s#detailed_data_wpindex struct detailed_data_wpindex { t#u8 white_yx_lo ; t#u8 white_x_hi ; t#u8 white_y_hi ; t#u8 gamma ; } 
s#cvt_timing struct cvt_timing { t#u8 code [ 3 ] ; } 
s#detailed_non_pixel struct detailed_non_pixel { t#u8 pad1 ; t#u8 type ; t#u8 pad2 ; union { s#detailed_data_string str ; s#detailed_data_monitor_range range ; s#detailed_data_wpindex color ; s#std_timing timings [ 6 ] ; s#cvt_timing cvt [ 4 ] ; } data ; } 
s#detailed_timing struct detailed_timing { t#__le16 pixel_clock ; union { s#detailed_pixel_timing pixel_data ; s#detailed_non_pixel other_data ; } data ; } 
s#edid struct edid { t#u8 header [ 8 ] ; t#u8 mfg_id [ 2 ] ; t#u8 prod_code [ 2 ] ; t#u32 serial ; t#u8 mfg_week ; t#u8 mfg_year ; t#u8 version ; t#u8 revision ; t#u8 input ; t#u8 width_cm ; t#u8 height_cm ; t#u8 gamma ; t#u8 features ; t#u8 red_green_lo ; t#u8 black_white_lo ; t#u8 red_x ; t#u8 red_y ; t#u8 green_x ; t#u8 green_y ; t#u8 blue_x ; t#u8 blue_y ; t#u8 white_x ; t#u8 white_y ; s#est_timings established_timings ; s#std_timing standard_timings [ 8 ] ; s#detailed_timing detailed_timings [ 4 ] ; t#u8 extensions ; t#u8 checksum ; } 
drm_mode_connector_update_edid_property extern int drm_mode_connector_update_edid_property ( s#drm_connector * , s#edid * ) 
drm_mode_connector_attach_encoder extern int drm_mode_connector_attach_encoder ( s#drm_connector * , s#drm_encoder * ) 
drm_mode_connector_detach_encoder extern void drm_mode_connector_detach_encoder ( s#drm_connector * , s#drm_encoder * ) 
drm_mode_crtc_set_gamma_size extern int drm_mode_crtc_set_gamma_size ( s#drm_crtc * , int ) 
drm_mode_config_reset extern void drm_mode_config_reset ( s#drm_device * ) 
drm_fb_get_bpp_depth extern void drm_fb_get_bpp_depth ( t#uint32_t , unsigned int * , int * ) 
drm_format_num_planes extern int drm_format_num_planes ( t#uint32_t ) 
drm_format_plane_cpp extern int drm_format_plane_cpp ( t#uint32_t , int ) 
drm_format_horz_chroma_subsampling extern int drm_format_horz_chroma_subsampling ( t#uint32_t ) 
drm_format_vert_chroma_subsampling extern int drm_format_vert_chroma_subsampling ( t#uint32_t ) 
drm_mode_config_init extern void drm_mode_config_init ( s#drm_device * ) 
drm_mode_config_cleanup extern void drm_mode_config_cleanup ( s#drm_device * ) 

/* drivers/gpu/drm/drm_crtc_helper.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_helper_move_panel_connectors_to_head extern void drm_helper_move_panel_connectors_to_head ( s#drm_device * ) 
drm_helper_probe_single_connector_modes extern int drm_helper_probe_single_connector_modes ( s#drm_connector * , t#uint32_t , t#uint32_t ) 
drm_helper_encoder_in_use extern t#bool drm_helper_encoder_in_use ( s#drm_encoder * ) 
drm_helper_crtc_in_use extern t#bool drm_helper_crtc_in_use ( s#drm_crtc * ) 
drm_helper_disable_unused_functions extern void drm_helper_disable_unused_functions ( s#drm_device * ) 
drm_crtc_helper_set_mode extern t#bool drm_crtc_helper_set_mode ( s#drm_crtc * , s#drm_display_mode * , int , int , s#drm_framebuffer * ) 
drm_crtc_helper_set_config extern int drm_crtc_helper_set_config ( s#drm_mode_set * ) 
drm_helper_connector_dpms extern void drm_helper_connector_dpms ( s#drm_connector * , int ) 
drm_helper_mode_fill_fb_struct extern int drm_helper_mode_fill_fb_struct ( s#drm_framebuffer * , s#drm_mode_fb_cmd2 * ) 
drm_helper_resume_force_mode extern int drm_helper_resume_force_mode ( s#drm_device * ) 
drm_kms_helper_hotplug_event extern void drm_kms_helper_hotplug_event ( s#drm_device * ) 
drm_kms_helper_poll_disable extern void drm_kms_helper_poll_disable ( s#drm_device * ) 
drm_kms_helper_poll_enable extern void drm_kms_helper_poll_enable ( s#drm_device * ) 
drm_kms_helper_poll_init extern void drm_kms_helper_poll_init ( s#drm_device * ) 
drm_kms_helper_poll_fini extern void drm_kms_helper_poll_fini ( s#drm_device * ) 
drm_helper_hpd_irq_event extern void drm_helper_hpd_irq_event ( s#drm_device * ) 

/* drivers/gpu/drm/drm_debugfs.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#drm_info_list struct drm_info_list { const char * name ; int ( * show ) ( s#seq_file * , void * ) ; t#u32 driver_features ; void * data ; } 
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_debugfs_create_files extern int drm_debugfs_create_files ( s#drm_info_list * , int , s#dentry * , s#drm_minor * ) 
drm_debugfs_remove_files extern int drm_debugfs_remove_files ( s#drm_info_list * , int , s#drm_minor * ) 

/* drivers/gpu/drm/drm_dma.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_core_reclaim_buffers extern void drm_core_reclaim_buffers ( s#drm_device * , s#drm_file * ) 

/* drivers/gpu/drm/drm_dp_helper.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
i2c_dp_aux_add_bus int i2c_dp_aux_add_bus ( s#i2c_adapter * ) 
drm_dp_channel_eq_ok t#bool drm_dp_channel_eq_ok ( t#u8 [ 6 ] , int ) 
drm_dp_clock_recovery_ok t#bool drm_dp_clock_recovery_ok ( t#u8 [ 6 ] , int ) 
drm_dp_get_adjust_request_voltage t#u8 drm_dp_get_adjust_request_voltage ( t#u8 [ 6 ] , int ) 
drm_dp_get_adjust_request_pre_emphasis t#u8 drm_dp_get_adjust_request_pre_emphasis ( t#u8 [ 6 ] , int ) 
drm_dp_link_train_clock_recovery_delay void drm_dp_link_train_clock_recovery_delay ( t#u8 [ 0xf ] ) 
drm_dp_link_train_channel_eq_delay void drm_dp_link_train_channel_eq_delay ( t#u8 [ 0xf ] ) 
drm_dp_link_rate_to_bw_code t#u8 drm_dp_link_rate_to_bw_code ( int ) 
drm_dp_bw_code_to_link_rate int drm_dp_bw_code_to_link_rate ( t#u8 ) 

/* drivers/gpu/drm/drm_drv.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
drm_ioctl extern long drm_ioctl ( s#file * , unsigned int , unsigned long ) 

/* drivers/gpu/drm/drm_edid.o */
drm_edid_header_is_valid extern int drm_edid_header_is_valid ( const t#u8 * ) 
drm_edid_block_valid extern t#bool drm_edid_block_valid ( t#u8 * , int , t#bool ) 
drm_edid_is_valid extern t#bool drm_edid_is_valid ( s#edid * ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
drm_probe_ddc extern t#bool drm_probe_ddc ( s#i2c_adapter * ) 
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_get_edid extern s#edid * drm_get_edid ( s#drm_connector * , s#i2c_adapter * ) 
drm_mode_find_dmt s#drm_display_mode * drm_mode_find_dmt ( s#drm_device * , int , int , int , t#bool ) 
drm_match_cea_mode extern t#u8 drm_match_cea_mode ( const s#drm_display_mode * ) 
drm_edid_to_eld void drm_edid_to_eld ( s#drm_connector * , s#edid * ) 
s#cea_sad struct cea_sad { t#u8 format ; t#u8 channels ; t#u8 freq ; t#u8 byte2 ; } 
drm_edid_to_sad int drm_edid_to_sad ( s#edid * , s#cea_sad * * ) 
drm_edid_to_speaker_allocation int drm_edid_to_speaker_allocation ( s#edid * , t#u8 * * ) 
drm_av_sync_delay int drm_av_sync_delay ( s#drm_connector * , s#drm_display_mode * ) 
drm_select_eld s#drm_connector * drm_select_eld ( s#drm_encoder * , s#drm_display_mode * ) 
drm_detect_hdmi_monitor extern t#bool drm_detect_hdmi_monitor ( s#edid * ) 
drm_detect_monitor_audio extern t#bool drm_detect_monitor_audio ( s#edid * ) 
drm_rgb_quant_range_selectable extern t#bool drm_rgb_quant_range_selectable ( s#edid * ) 
drm_add_edid_modes extern int drm_add_edid_modes ( s#drm_connector * , s#edid * ) 
drm_add_modes_noedid extern int drm_add_modes_noedid ( s#drm_connector * , int , int ) 
drm_set_preferred_mode extern void drm_set_preferred_mode ( s#drm_connector * , int , int ) 
e#hdmi_infoframe_type enum hdmi_infoframe_type { HDMI_INFOFRAME_TYPE_VENDOR = 0x81 , HDMI_INFOFRAME_TYPE_AVI = 0x82 , HDMI_INFOFRAME_TYPE_SPD = 0x83 , HDMI_INFOFRAME_TYPE_AUDIO = 0x84 , } 
e#hdmi_colorspace enum hdmi_colorspace { HDMI_COLORSPACE_RGB , HDMI_COLORSPACE_YUV422 , HDMI_COLORSPACE_YUV444 , } 
e#hdmi_scan_mode enum hdmi_scan_mode { HDMI_SCAN_MODE_NONE , HDMI_SCAN_MODE_OVERSCAN , HDMI_SCAN_MODE_UNDERSCAN , } 
e#hdmi_colorimetry enum hdmi_colorimetry { HDMI_COLORIMETRY_NONE , HDMI_COLORIMETRY_ITU_601 , HDMI_COLORIMETRY_ITU_709 , HDMI_COLORIMETRY_EXTENDED , } 
e#hdmi_picture_aspect enum hdmi_picture_aspect { HDMI_PICTURE_ASPECT_NONE , HDMI_PICTURE_ASPECT_4_3 , HDMI_PICTURE_ASPECT_16_9 , } 
e#hdmi_active_aspect enum hdmi_active_aspect { HDMI_ACTIVE_ASPECT_16_9_TOP = 2 , HDMI_ACTIVE_ASPECT_14_9_TOP = 3 , HDMI_ACTIVE_ASPECT_16_9_CENTER = 4 , HDMI_ACTIVE_ASPECT_PICTURE = 8 , HDMI_ACTIVE_ASPECT_4_3 = 9 , HDMI_ACTIVE_ASPECT_16_9 = 10 , HDMI_ACTIVE_ASPECT_14_9 = 11 , HDMI_ACTIVE_ASPECT_4_3_SP_14_9 = 13 , HDMI_ACTIVE_ASPECT_16_9_SP_14_9 = 14 , HDMI_ACTIVE_ASPECT_16_9_SP_4_3 = 15 , } 
e#hdmi_extended_colorimetry enum hdmi_extended_colorimetry { HDMI_EXTENDED_COLORIMETRY_XV_YCC_601 , HDMI_EXTENDED_COLORIMETRY_XV_YCC_709 , HDMI_EXTENDED_COLORIMETRY_S_YCC_601 , HDMI_EXTENDED_COLORIMETRY_ADOBE_YCC_601 , HDMI_EXTENDED_COLORIMETRY_ADOBE_RGB , } 
e#hdmi_quantization_range enum hdmi_quantization_range { HDMI_QUANTIZATION_RANGE_DEFAULT , HDMI_QUANTIZATION_RANGE_LIMITED , HDMI_QUANTIZATION_RANGE_FULL , } 
e#hdmi_nups enum hdmi_nups { HDMI_NUPS_UNKNOWN , HDMI_NUPS_HORIZONTAL , HDMI_NUPS_VERTICAL , HDMI_NUPS_BOTH , } 
e#hdmi_ycc_quantization_range enum hdmi_ycc_quantization_range { HDMI_YCC_QUANTIZATION_RANGE_LIMITED , HDMI_YCC_QUANTIZATION_RANGE_FULL , } 
e#hdmi_content_type enum hdmi_content_type { HDMI_CONTENT_TYPE_NONE , HDMI_CONTENT_TYPE_PHOTO , HDMI_CONTENT_TYPE_CINEMA , HDMI_CONTENT_TYPE_GAME , } 
s#hdmi_avi_infoframe struct hdmi_avi_infoframe { e#hdmi_infoframe_type type ; unsigned char version ; unsigned char length ; e#hdmi_colorspace colorspace ; e#hdmi_scan_mode scan_mode ; e#hdmi_colorimetry colorimetry ; e#hdmi_picture_aspect picture_aspect ; e#hdmi_active_aspect active_aspect ; t#bool itc ; e#hdmi_extended_colorimetry extended_colorimetry ; e#hdmi_quantization_range quantization_range ; e#hdmi_nups nups ; unsigned char video_code ; e#hdmi_ycc_quantization_range ycc_quantization_range ; e#hdmi_content_type content_type ; unsigned char pixel_repeat ; unsigned short top_bar ; unsigned short bottom_bar ; unsigned short left_bar ; unsigned short right_bar ; } 
drm_hdmi_avi_infoframe_from_display_mode int drm_hdmi_avi_infoframe_from_display_mode ( s#hdmi_avi_infoframe * , const s#drm_display_mode * ) 
e#hdmi_3d_structure enum hdmi_3d_structure { HDMI_3D_STRUCTURE_INVALID = - 1 , HDMI_3D_STRUCTURE_FRAME_PACKING = 0 , HDMI_3D_STRUCTURE_FIELD_ALTERNATIVE , HDMI_3D_STRUCTURE_LINE_ALTERNATIVE , HDMI_3D_STRUCTURE_SIDE_BY_SIDE_FULL , HDMI_3D_STRUCTURE_L_DEPTH , HDMI_3D_STRUCTURE_L_DEPTH_GFX_GFX_DEPTH , HDMI_3D_STRUCTURE_TOP_AND_BOTTOM , HDMI_3D_STRUCTURE_SIDE_BY_SIDE_HALF = 8 , } 
s#hdmi_vendor_infoframe struct hdmi_vendor_infoframe { e#hdmi_infoframe_type type ; unsigned char version ; unsigned char length ; unsigned int oui ; t#u8 vic ; e#hdmi_3d_structure s3d_struct ; unsigned int s3d_ext_data ; } 
drm_hdmi_vendor_infoframe_from_display_mode int drm_hdmi_vendor_infoframe_from_display_mode ( s#hdmi_vendor_infoframe * , const s#drm_display_mode * ) 

/* drivers/gpu/drm/drm_encoder_slave.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
s#drm_encoder_slave_funcs struct drm_encoder_slave_funcs { void ( * set_config ) ( s#drm_encoder * , void * ) ; void ( * destroy ) ( s#drm_encoder * ) ; void ( * dpms ) ( s#drm_encoder * , int ) ; void ( * save ) ( s#drm_encoder * ) ; void ( * restore ) ( s#drm_encoder * ) ; t#bool ( * mode_fixup ) ( s#drm_encoder * , const s#drm_display_mode * , s#drm_display_mode * ) ; int ( * mode_valid ) ( s#drm_encoder * , s#drm_display_mode * ) ; void ( * mode_set ) ( s#drm_encoder * , s#drm_display_mode * , s#drm_display_mode * ) ; e#drm_connector_status ( * detect ) ( s#drm_encoder * , s#drm_connector * ) ; int ( * get_modes ) ( s#drm_encoder * , s#drm_connector * ) ; int ( * create_resources ) ( s#drm_encoder * , s#drm_connector * ) ; int ( * set_property ) ( s#drm_encoder * , s#drm_connector * , s#drm_property * , t#uint64_t ) ; } 
s#drm_encoder_slave struct drm_encoder_slave { s#drm_encoder base ; s#drm_encoder_slave_funcs * slave_funcs ; void * slave_priv ; void * bus_priv ; } 
drm_i2c_encoder_init int drm_i2c_encoder_init ( s#drm_device * , s#drm_encoder_slave * , s#i2c_adapter * , const s#i2c_board_info * ) 
drm_i2c_encoder_destroy void drm_i2c_encoder_destroy ( s#drm_encoder * ) 
drm_i2c_encoder_dpms void drm_i2c_encoder_dpms ( s#drm_encoder * , int ) 
drm_i2c_encoder_mode_fixup t#bool drm_i2c_encoder_mode_fixup ( s#drm_encoder * , const s#drm_display_mode * , s#drm_display_mode * ) 
drm_i2c_encoder_prepare void drm_i2c_encoder_prepare ( s#drm_encoder * ) 
drm_i2c_encoder_commit void drm_i2c_encoder_commit ( s#drm_encoder * ) 
drm_i2c_encoder_mode_set void drm_i2c_encoder_mode_set ( s#drm_encoder * , s#drm_display_mode * , s#drm_display_mode * ) 
drm_i2c_encoder_detect e#drm_connector_status drm_i2c_encoder_detect ( s#drm_encoder * , s#drm_connector * ) 
drm_i2c_encoder_save void drm_i2c_encoder_save ( s#drm_encoder * ) 
drm_i2c_encoder_restore void drm_i2c_encoder_restore ( s#drm_encoder * ) 

/* drivers/gpu/drm/drm_fb_helper.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
s#drm_fb_helper_crtc struct drm_fb_helper_crtc { s#drm_mode_set mode_set ; s#drm_display_mode * desired_mode ; } 
s#drm_cmdline_mode struct drm_cmdline_mode { t#bool specified ; t#bool refresh_specified ; t#bool bpp_specified ; int xres , yres ; int bpp ; int refresh ; t#bool rb ; t#bool interlace ; t#bool cvt ; t#bool margins ; e#drm_connector_force force ; } 
s#drm_fb_helper_connector struct drm_fb_helper_connector { s#drm_connector * connector ; s#drm_cmdline_mode cmdline_mode ; } 
s#drm_fb_helper_surface_size struct drm_fb_helper_surface_size { t#u32 fb_width ; t#u32 fb_height ; t#u32 surface_width ; t#u32 surface_height ; t#u32 surface_bpp ; t#u32 surface_depth ; } 
s#drm_fb_helper_funcs struct drm_fb_helper_funcs { void ( * gamma_set ) ( s#drm_crtc * , t#u16 , t#u16 , t#u16 , int ) ; void ( * gamma_get ) ( s#drm_crtc * , t#u16 * , t#u16 * , t#u16 * , int ) ; int ( * fb_probe ) ( s#drm_fb_helper * , s#drm_fb_helper_surface_size * ) ; t#bool ( * initial_config ) ( s#drm_fb_helper * , s#drm_fb_helper_crtc * * , s#drm_display_mode * * , t#bool * , int , int ) ; } 
s#fb_bitfield struct fb_bitfield { t#__u32 offset ; t#__u32 length ; t#__u32 msb_right ; } 
s#fb_var_screeninfo struct fb_var_screeninfo { t#__u32 xres ; t#__u32 yres ; t#__u32 xres_virtual ; t#__u32 yres_virtual ; t#__u32 xoffset ; t#__u32 yoffset ; t#__u32 bits_per_pixel ; t#__u32 grayscale ; s#fb_bitfield red ; s#fb_bitfield green ; s#fb_bitfield blue ; s#fb_bitfield transp ; t#__u32 nonstd ; t#__u32 activate ; t#__u32 height ; t#__u32 width ; t#__u32 accel_flags ; t#__u32 pixclock ; t#__u32 left_margin ; t#__u32 right_margin ; t#__u32 upper_margin ; t#__u32 lower_margin ; t#__u32 hsync_len ; t#__u32 vsync_len ; t#__u32 sync ; t#__u32 vmode ; t#__u32 rotate ; t#__u32 colorspace ; t#__u32 reserved [ 4 ] ; } 
s#fb_fix_screeninfo struct fb_fix_screeninfo { char id [ 16 ] ; unsigned long smem_start ; t#__u32 smem_len ; t#__u32 type ; t#__u32 type_aux ; t#__u32 visual ; t#__u16 xpanstep ; t#__u16 ypanstep ; t#__u16 ywrapstep ; t#__u32 line_length ; unsigned long mmio_start ; t#__u32 mmio_len ; t#__u32 accel ; t#__u16 capabilities ; t#__u16 reserved [ 2 ] ; } 
s#fb_chroma struct fb_chroma { t#__u32 redx ; t#__u32 greenx ; t#__u32 bluex ; t#__u32 whitex ; t#__u32 redy ; t#__u32 greeny ; t#__u32 bluey ; t#__u32 whitey ; } 
s#fb_videomode struct fb_videomode { const char * name ; t#u32 refresh ; t#u32 xres ; t#u32 yres ; t#u32 pixclock ; t#u32 left_margin ; t#u32 right_margin ; t#u32 upper_margin ; t#u32 lower_margin ; t#u32 hsync_len ; t#u32 vsync_len ; t#u32 sync ; t#u32 vmode ; t#u32 flag ; } 
s#fb_monspecs struct fb_monspecs { s#fb_chroma chroma ; s#fb_videomode * modedb ; t#__u8 manufacturer [ 4 ] ; t#__u8 monitor [ 14 ] ; t#__u8 serial_no [ 14 ] ; t#__u8 ascii [ 14 ] ; t#__u32 modedb_len ; t#__u32 model ; t#__u32 serial ; t#__u32 year ; t#__u32 week ; t#__u32 hfmin ; t#__u32 hfmax ; t#__u32 dclkmin ; t#__u32 dclkmax ; t#__u16 input ; t#__u16 dpms ; t#__u16 signal ; t#__u16 vfmin ; t#__u16 vfmax ; t#__u16 gamma ; t#__u16 gtf : 1 ; t#__u16 misc ; t#__u8 version ; t#__u8 revision ; t#__u8 max_x ; t#__u8 max_y ; } 
s#fb_pixmap struct fb_pixmap { t#u8 * addr ; t#u32 size ; t#u32 offset ; t#u32 buf_align ; t#u32 scan_align ; t#u32 access_align ; t#u32 flags ; t#u32 blit_x ; t#u32 blit_y ; void ( * writeio ) ( s#fb_info * , void * , void * , unsigned int ) ; void ( * readio ) ( s#fb_info * , void * , void * , unsigned int ) ; } 
s#fb_cmap struct fb_cmap { t#__u32 start ; t#__u32 len ; t#__u16 * red ; t#__u16 * green ; t#__u16 * blue ; t#__u16 * transp ; } 
e#backlight_type enum backlight_type { BACKLIGHT_RAW = 1 , BACKLIGHT_PLATFORM , BACKLIGHT_FIRMWARE , BACKLIGHT_TYPE_MAX , } 
s#backlight_properties struct backlight_properties { int brightness ; int max_brightness ; int power ; int fb_blank ; e#backlight_type type ; unsigned int state ; } 
s#backlight_ops struct backlight_ops { unsigned int options ; int ( * update_status ) ( s#backlight_device * ) ; int ( * get_brightness ) ( s#backlight_device * ) ; int ( * check_fb ) ( s#backlight_device * , s#fb_info * ) ; } 
s#backlight_device struct backlight_device { s#backlight_properties props ; s#mutex update_lock ; s#mutex ops_lock ; const s#backlight_ops * ops ; s#notifier_block fb_notif ; s#device dev ; } 
s#fb_deferred_io struct fb_deferred_io { unsigned long delay ; s#mutex lock ; s#list_head pagelist ; void ( * first_io ) ( s#fb_info * ) ; void ( * deferred_io ) ( s#fb_info * , s#list_head * ) ; } 
s#fb_fillrect struct fb_fillrect { t#__u32 dx ; t#__u32 dy ; t#__u32 width ; t#__u32 height ; t#__u32 color ; t#__u32 rop ; } 
s#fb_copyarea struct fb_copyarea { t#__u32 dx ; t#__u32 dy ; t#__u32 width ; t#__u32 height ; t#__u32 sx ; t#__u32 sy ; } 
s#fb_image struct fb_image { t#__u32 dx ; t#__u32 dy ; t#__u32 width ; t#__u32 height ; t#__u32 fg_color ; t#__u32 bg_color ; t#__u8 depth ; const char * data ; s#fb_cmap cmap ; } 
s#fbcurpos struct fbcurpos { t#__u16 x , y ; } 
s#fb_cursor struct fb_cursor { t#__u16 set ; t#__u16 enable ; t#__u16 rop ; const char * mask ; s#fbcurpos hot ; s#fb_image image ; } 
s#fb_blit_caps struct fb_blit_caps { t#u32 x ; t#u32 y ; t#u32 len ; t#u32 flags ; } 
s#fb_ops struct fb_ops { s#module * owner ; int ( * fb_open ) ( s#fb_info * , int ) ; int ( * fb_release ) ( s#fb_info * , int ) ; t#ssize_t ( * fb_read ) ( s#fb_info * , char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * fb_write ) ( s#fb_info * , const char * , t#size_t , t#loff_t * ) ; int ( * fb_check_var ) ( s#fb_var_screeninfo * , s#fb_info * ) ; int ( * fb_set_par ) ( s#fb_info * ) ; int ( * fb_setcolreg ) ( unsigned , unsigned , unsigned , unsigned , unsigned , s#fb_info * ) ; int ( * fb_setcmap ) ( s#fb_cmap * , s#fb_info * ) ; int ( * fb_blank ) ( int , s#fb_info * ) ; int ( * fb_pan_display ) ( s#fb_var_screeninfo * , s#fb_info * ) ; void ( * fb_fillrect ) ( s#fb_info * , const s#fb_fillrect * ) ; void ( * fb_copyarea ) ( s#fb_info * , const s#fb_copyarea * ) ; void ( * fb_imageblit ) ( s#fb_info * , const s#fb_image * ) ; int ( * fb_cursor ) ( s#fb_info * , s#fb_cursor * ) ; void ( * fb_rotate ) ( s#fb_info * , int ) ; int ( * fb_sync ) ( s#fb_info * ) ; int ( * fb_ioctl ) ( s#fb_info * , unsigned int , unsigned long ) ; int ( * fb_compat_ioctl ) ( s#fb_info * , unsigned , unsigned long ) ; int ( * fb_mmap ) ( s#fb_info * , s#vm_area_struct * ) ; void ( * fb_get_caps ) ( s#fb_info * , s#fb_blit_caps * , s#fb_var_screeninfo * ) ; void ( * fb_destroy ) ( s#fb_info * ) ; int ( * fb_debug_enter ) ( s#fb_info * ) ; int ( * fb_debug_leave ) ( s#fb_info * ) ; } 
s#fb_tilemap struct fb_tilemap { t#__u32 width ; t#__u32 height ; t#__u32 depth ; t#__u32 length ; const t#__u8 * data ; } 
s#fb_tilearea struct fb_tilearea { t#__u32 sx ; t#__u32 sy ; t#__u32 dx ; t#__u32 dy ; t#__u32 width ; t#__u32 height ; } 
s#fb_tilerect struct fb_tilerect { t#__u32 sx ; t#__u32 sy ; t#__u32 width ; t#__u32 height ; t#__u32 index ; t#__u32 fg ; t#__u32 bg ; t#__u32 rop ; } 
s#fb_tileblit struct fb_tileblit { t#__u32 sx ; t#__u32 sy ; t#__u32 width ; t#__u32 height ; t#__u32 fg ; t#__u32 bg ; t#__u32 length ; t#__u32 * indices ; } 
s#fb_tilecursor struct fb_tilecursor { t#__u32 sx ; t#__u32 sy ; t#__u32 mode ; t#__u32 shape ; t#__u32 fg ; t#__u32 bg ; } 
s#fb_tile_ops struct fb_tile_ops { void ( * fb_settile ) ( s#fb_info * , s#fb_tilemap * ) ; void ( * fb_tilecopy ) ( s#fb_info * , s#fb_tilearea * ) ; void ( * fb_tilefill ) ( s#fb_info * , s#fb_tilerect * ) ; void ( * fb_tileblit ) ( s#fb_info * , s#fb_tileblit * ) ; void ( * fb_tilecursor ) ( s#fb_info * , s#fb_tilecursor * ) ; int ( * fb_get_tilemax ) ( s#fb_info * ) ; } 
s#aperture struct aperture { t#resource_size_t base ; t#resource_size_t size ; } 
s#apertures_struct struct apertures_struct { unsigned int count ; s#aperture ranges [ 0 ] ; } 
s#fb_info struct fb_info { t#atomic_t count ; int node ; int flags ; s#mutex lock ; s#mutex mm_lock ; s#fb_var_screeninfo var ; s#fb_fix_screeninfo fix ; s#fb_monspecs monspecs ; s#work_struct queue ; s#fb_pixmap pixmap ; s#fb_pixmap sprite ; s#fb_cmap cmap ; s#list_head modelist ; s#fb_videomode * mode ; s#backlight_device * bl_dev ; s#mutex bl_curve_mutex ; t#u8 bl_curve [ 128 ] ; s#delayed_work deferred_work ; s#fb_deferred_io * fbdefio ; s#fb_ops * fbops ; s#device * device ; s#device * dev ; int class_flag ; s#fb_tile_ops * tileops ; char * screen_base ; unsigned long screen_size ; void * pseudo_palette ; t#u32 state ; void * fbcon_par ; void * par ; s#apertures_struct * apertures ; t#bool skip_vt_switch ; } 
s#drm_fb_helper struct drm_fb_helper { s#drm_framebuffer * fb ; s#drm_device * dev ; int crtc_count ; s#drm_fb_helper_crtc * crtc_info ; int connector_count ; s#drm_fb_helper_connector * * connector_info ; s#drm_fb_helper_funcs * funcs ; s#fb_info * fbdev ; t#u32 pseudo_palette [ 17 ] ; s#list_head kernel_fb_list ; t#bool delayed_hotplug ; } 
drm_fb_helper_single_add_all_connectors int drm_fb_helper_single_add_all_connectors ( s#drm_fb_helper * ) 
drm_fb_helper_debug_enter int drm_fb_helper_debug_enter ( s#fb_info * ) 
drm_fb_helper_debug_leave int drm_fb_helper_debug_leave ( s#fb_info * ) 
drm_fb_helper_restore_fbdev_mode t#bool drm_fb_helper_restore_fbdev_mode ( s#drm_fb_helper * ) 
drm_fb_helper_blank int drm_fb_helper_blank ( int , s#fb_info * ) 
drm_fb_helper_init int drm_fb_helper_init ( s#drm_device * , s#drm_fb_helper * , int , int ) 
drm_fb_helper_fini void drm_fb_helper_fini ( s#drm_fb_helper * ) 
drm_fb_helper_setcmap int drm_fb_helper_setcmap ( s#fb_cmap * , s#fb_info * ) 
drm_fb_helper_check_var int drm_fb_helper_check_var ( s#fb_var_screeninfo * , s#fb_info * ) 
drm_fb_helper_set_par int drm_fb_helper_set_par ( s#fb_info * ) 
drm_fb_helper_pan_display int drm_fb_helper_pan_display ( s#fb_var_screeninfo * , s#fb_info * ) 
drm_fb_helper_fill_fix void drm_fb_helper_fill_fix ( s#fb_info * , t#uint32_t , t#uint32_t ) 
drm_fb_helper_fill_var void drm_fb_helper_fill_var ( s#fb_info * , s#drm_fb_helper * , t#uint32_t , t#uint32_t ) 
drm_fb_helper_initial_config t#bool drm_fb_helper_initial_config ( s#drm_fb_helper * , int ) 
drm_fb_helper_hotplug_event int drm_fb_helper_hotplug_event ( s#drm_fb_helper * ) 

/* drivers/gpu/drm/drm_flip_work.o */
t#drm_flip_func_t typedef void ( * drm_flip_func_t ) ( s#drm_flip_work * , void * ) 
s#__kfifo struct __kfifo { unsigned int in ; unsigned int out ; unsigned int mask ; unsigned int esize ; void * data ; } 
s#drm_flip_work struct drm_flip_work { const char * name ; t#atomic_t pending , count ; t#drm_flip_func_t func ; s#work_struct worker ; struct { union { s#__kfifo kfifo ; void * * type ; char ( * rectype ) [ 0 ] ; void * * ptr ; const void * * ptr_const ; } ; void * buf [ 0 ] ; } fifo ; } 
drm_flip_work_queue void drm_flip_work_queue ( s#drm_flip_work * , void * ) 
s##workqueue_struct
drm_flip_work_commit void drm_flip_work_commit ( s#drm_flip_work * , s#workqueue_struct * ) 
drm_flip_work_init int drm_flip_work_init ( s#drm_flip_work * , int , const char * , t#drm_flip_func_t ) 
drm_flip_work_cleanup void drm_flip_work_cleanup ( s#drm_flip_work * ) 

/* drivers/gpu/drm/drm_fops.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
drm_global_mutex extern s#mutex drm_global_mutex 
drm_open extern int drm_open ( s#inode * , s#file * ) 
drm_release extern int drm_release ( s#inode * , s#file * ) 
drm_read extern t#ssize_t drm_read ( s#file * , char * , t#size_t , t#loff_t * ) 
drm_poll extern unsigned int drm_poll ( s#file * , s#poll_table_struct * ) 

/* drivers/gpu/drm/drm_gem.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##usb_driver
drm_gem_object_init int drm_gem_object_init ( s#drm_device * , s#drm_gem_object * , t#size_t ) 
drm_gem_private_object_init void drm_gem_private_object_init ( s#drm_device * , s#drm_gem_object * , t#size_t ) 
drm_gem_object_alloc s#drm_gem_object * drm_gem_object_alloc ( s#drm_device * , t#size_t ) 
drm_gem_handle_delete int drm_gem_handle_delete ( s#drm_file * , t#u32 ) 
drm_gem_dumb_destroy int drm_gem_dumb_destroy ( s#drm_file * , s#drm_device * , t#uint32_t ) 
drm_gem_handle_create int drm_gem_handle_create ( s#drm_file * , s#drm_gem_object * , t#u32 * ) 
drm_gem_free_mmap_offset void drm_gem_free_mmap_offset ( s#drm_gem_object * ) 
drm_gem_create_mmap_offset_size int drm_gem_create_mmap_offset_size ( s#drm_gem_object * , t#size_t ) 
drm_gem_create_mmap_offset int drm_gem_create_mmap_offset ( s#drm_gem_object * ) 
drm_gem_get_pages s#page * * drm_gem_get_pages ( s#drm_gem_object * , t#gfp_t ) 
drm_gem_put_pages void drm_gem_put_pages ( s#drm_gem_object * , s#page * * , t#bool , t#bool ) 
drm_gem_object_lookup s#drm_gem_object * drm_gem_object_lookup ( s#drm_device * , s#drm_file * , t#u32 ) 
drm_gem_object_release void drm_gem_object_release ( s#drm_gem_object * ) 
drm_gem_object_free void drm_gem_object_free ( s#kref * ) 
drm_gem_vm_open void drm_gem_vm_open ( s#vm_area_struct * ) 
drm_gem_vm_close void drm_gem_vm_close ( s#vm_area_struct * ) 
drm_gem_mmap_obj int drm_gem_mmap_obj ( s#drm_gem_object * , unsigned long , s#vm_area_struct * ) 
drm_gem_mmap int drm_gem_mmap ( s#file * , s#vm_area_struct * ) 

/* drivers/gpu/drm/drm_global.o */
e#drm_global_types enum drm_global_types { DRM_GLOBAL_TTM_MEM = 0 , DRM_GLOBAL_TTM_BO , DRM_GLOBAL_TTM_OBJECT , DRM_GLOBAL_NUM } 
s#drm_global_reference struct drm_global_reference { e#drm_global_types global_type ; t#size_t size ; void * object ; int ( * init ) ( s#drm_global_reference * ) ; void ( * release ) ( s#drm_global_reference * ) ; } 
drm_global_item_ref extern int drm_global_item_ref ( s#drm_global_reference * ) 
drm_global_item_unref extern void drm_global_item_unref ( s#drm_global_reference * ) 

/* drivers/gpu/drm/drm_hashtab.o */
drm_ht_create extern int drm_ht_create ( s#drm_open_hash * , unsigned int ) 
s#drm_hash_item struct drm_hash_item { s#hlist_node head ; unsigned long key ; } 
drm_ht_insert_item extern int drm_ht_insert_item ( s#drm_open_hash * , s#drm_hash_item * ) 
drm_ht_just_insert_please extern int drm_ht_just_insert_please ( s#drm_open_hash * , s#drm_hash_item * , unsigned long , int , int , unsigned long ) 
drm_ht_find_item extern int drm_ht_find_item ( s#drm_open_hash * , unsigned long , s#drm_hash_item * * ) 
drm_ht_remove_item extern int drm_ht_remove_item ( s#drm_open_hash * , s#drm_hash_item * ) 
drm_ht_remove extern void drm_ht_remove ( s#drm_open_hash * ) 

/* drivers/gpu/drm/drm_ioc32.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
drm_compat_ioctl extern long drm_compat_ioctl ( s#file * , unsigned int , unsigned long ) 

/* drivers/gpu/drm/drm_ioctl.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_noop extern int drm_noop ( s#drm_device * , void * , s#drm_file * ) 

/* drivers/gpu/drm/drm_irq.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_vblank_cleanup extern void drm_vblank_cleanup ( s#drm_device * ) 
drm_vblank_init extern int drm_vblank_init ( s#drm_device * , int ) 
drm_irq_install extern int drm_irq_install ( s#drm_device * ) 
drm_irq_uninstall extern int drm_irq_uninstall ( s#drm_device * ) 
drm_calc_timestamping_constants extern void drm_calc_timestamping_constants ( s#drm_crtc * ) 
drm_calc_vbltimestamp_from_scanoutpos extern int drm_calc_vbltimestamp_from_scanoutpos ( s#drm_device * , int , int * , s#timeval * , unsigned , s#drm_crtc * ) 
drm_get_last_vbltimestamp extern t#u32 drm_get_last_vbltimestamp ( s#drm_device * , int , s#timeval * , unsigned ) 
drm_vblank_count extern t#u32 drm_vblank_count ( s#drm_device * , int ) 
drm_vblank_count_and_time extern t#u32 drm_vblank_count_and_time ( s#drm_device * , int , s#timeval * ) 
drm_send_vblank_event extern void drm_send_vblank_event ( s#drm_device * , int , s#drm_pending_vblank_event * ) 
drm_vblank_get extern int drm_vblank_get ( s#drm_device * , int ) 
drm_vblank_put extern void drm_vblank_put ( s#drm_device * , int ) 
drm_vblank_off extern void drm_vblank_off ( s#drm_device * , int ) 
drm_vblank_pre_modeset extern void drm_vblank_pre_modeset ( s#drm_device * , int ) 
drm_vblank_post_modeset extern void drm_vblank_post_modeset ( s#drm_device * , int ) 
drm_handle_vblank extern t#bool drm_handle_vblank ( s#drm_device * , int ) 

/* drivers/gpu/drm/drm_lock.o */
s##pid_namespace
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_idlelock_take extern void drm_idlelock_take ( s#drm_lock_data * ) 
drm_idlelock_release extern void drm_idlelock_release ( s#drm_lock_data * ) 

/* drivers/gpu/drm/drm_memory.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_core_ioremap extern void drm_core_ioremap ( s#drm_local_map * , s#drm_device * ) 
drm_core_ioremap_wc extern void drm_core_ioremap_wc ( s#drm_local_map * , s#drm_device * ) 
drm_core_ioremapfree extern void drm_core_ioremapfree ( s#drm_local_map * , s#drm_device * ) 

/* drivers/gpu/drm/drm_mm.o */
drm_mm_reserve_node extern int drm_mm_reserve_node ( s#drm_mm * , s#drm_mm_node * ) 
e#drm_mm_search_flags enum drm_mm_search_flags { DRM_MM_SEARCH_DEFAULT = 0 , DRM_MM_SEARCH_BEST = 1 << 0 , } 
drm_mm_insert_node_generic extern int drm_mm_insert_node_generic ( s#drm_mm * , s#drm_mm_node * , unsigned long , unsigned , unsigned long , e#drm_mm_search_flags ) 
drm_mm_insert_node_in_range_generic extern int drm_mm_insert_node_in_range_generic ( s#drm_mm * , s#drm_mm_node * , unsigned long , unsigned , unsigned long , unsigned long , unsigned long , e#drm_mm_search_flags ) 
drm_mm_remove_node extern void drm_mm_remove_node ( s#drm_mm_node * ) 
drm_mm_replace_node extern void drm_mm_replace_node ( s#drm_mm_node * , s#drm_mm_node * ) 
drm_mm_init_scan void drm_mm_init_scan ( s#drm_mm * , unsigned long , unsigned , unsigned long ) 
drm_mm_init_scan_with_range void drm_mm_init_scan_with_range ( s#drm_mm * , unsigned long , unsigned , unsigned long , unsigned long , unsigned long ) 
drm_mm_scan_add_block int drm_mm_scan_add_block ( s#drm_mm_node * ) 
drm_mm_scan_remove_block int drm_mm_scan_remove_block ( s#drm_mm_node * ) 
drm_mm_clean extern int drm_mm_clean ( s#drm_mm * ) 
drm_mm_init extern void drm_mm_init ( s#drm_mm * , unsigned long , unsigned long ) 
drm_mm_takedown extern void drm_mm_takedown ( s#drm_mm * ) 
drm_mm_debug_table extern void drm_mm_debug_table ( s#drm_mm * , const char * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
drm_mm_dump_table int drm_mm_dump_table ( s#seq_file * , s#drm_mm * ) 

/* drivers/gpu/drm/drm_modes.o */
drm_mode_debug_printmodeline extern void drm_mode_debug_printmodeline ( const s#drm_display_mode * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_cvt_mode extern s#drm_display_mode * drm_cvt_mode ( s#drm_device * , int , int , int , t#bool , t#bool , t#bool ) 
drm_gtf_mode_complex extern s#drm_display_mode * drm_gtf_mode_complex ( s#drm_device * , int , int , int , t#bool , int , int , int , int , int ) 
drm_gtf_mode extern s#drm_display_mode * drm_gtf_mode ( s#drm_device * , int , int , int , t#bool , int ) 
drm_mode_set_name extern void drm_mode_set_name ( s#drm_display_mode * ) 
drm_mode_width extern int drm_mode_width ( const s#drm_display_mode * ) 
drm_mode_height extern int drm_mode_height ( const s#drm_display_mode * ) 
drm_mode_hsync extern int drm_mode_hsync ( const s#drm_display_mode * ) 
drm_mode_vrefresh extern int drm_mode_vrefresh ( const s#drm_display_mode * ) 
drm_mode_set_crtcinfo extern void drm_mode_set_crtcinfo ( s#drm_display_mode * , int ) 
drm_mode_copy extern void drm_mode_copy ( s#drm_display_mode * , const s#drm_display_mode * ) 
drm_mode_duplicate extern s#drm_display_mode * drm_mode_duplicate ( s#drm_device * , const s#drm_display_mode * ) 
drm_mode_equal extern t#bool drm_mode_equal ( const s#drm_display_mode * , const s#drm_display_mode * ) 
drm_mode_equal_no_clocks extern t#bool drm_mode_equal_no_clocks ( const s#drm_display_mode * , const s#drm_display_mode * ) 
drm_mode_validate_size extern void drm_mode_validate_size ( s#drm_device * , s#list_head * , int , int , int ) 
drm_mode_prune_invalid extern void drm_mode_prune_invalid ( s#drm_device * , s#list_head * , t#bool ) 
drm_mode_sort extern void drm_mode_sort ( s#list_head * ) 
drm_mode_connector_list_update extern void drm_mode_connector_list_update ( s#drm_connector * ) 
drm_mode_parse_command_line_for_connector extern t#bool drm_mode_parse_command_line_for_connector ( const char * , s#drm_connector * , s#drm_cmdline_mode * ) 
drm_mode_create_from_cmdline_mode extern s#drm_display_mode * drm_mode_create_from_cmdline_mode ( s#drm_device * , s#drm_cmdline_mode * ) 

/* drivers/gpu/drm/drm_pci.o */
t#drm_dma_handle_t typedef s#drm_dma_handle drm_dma_handle_t 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_pci_alloc extern t#drm_dma_handle_t * drm_pci_alloc ( s#drm_device * , t#size_t , t#size_t ) 
drm_pci_free extern void drm_pci_free ( s#drm_device * , t#drm_dma_handle_t * ) 
drm_get_pci_dev extern int drm_get_pci_dev ( s#pci_dev * , const s#pci_device_id * , s#drm_driver * ) 
drm_pcie_get_speed_cap_mask extern int drm_pcie_get_speed_cap_mask ( s#drm_device * , t#u32 * ) 
drm_pci_init extern int drm_pci_init ( s#drm_driver * , s#pci_driver * ) 
drm_pci_exit extern void drm_pci_exit ( s#drm_driver * , s#pci_driver * ) 

/* drivers/gpu/drm/drm_platform.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_platform_init extern int drm_platform_init ( s#drm_driver * , s#platform_device * ) 
drm_platform_exit extern void drm_platform_exit ( s#drm_driver * , s#platform_device * ) 

/* drivers/gpu/drm/drm_prime.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
drm_gem_dmabuf_release extern void drm_gem_dmabuf_release ( s#dma_buf * ) 
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##usb_driver
drm_gem_prime_export extern s#dma_buf * drm_gem_prime_export ( s#drm_device * , s#drm_gem_object * , int ) 
drm_gem_prime_handle_to_fd extern int drm_gem_prime_handle_to_fd ( s#drm_device * , s#drm_file * , t#uint32_t , t#uint32_t , int * ) 
drm_gem_prime_import extern s#drm_gem_object * drm_gem_prime_import ( s#drm_device * , s#dma_buf * ) 
drm_gem_prime_fd_to_handle extern int drm_gem_prime_fd_to_handle ( s#drm_device * , s#drm_file * , int , t#uint32_t * ) 
drm_prime_pages_to_sg extern s#sg_table * drm_prime_pages_to_sg ( s#page * * , int ) 
drm_prime_sg_to_page_addr_arrays extern int drm_prime_sg_to_page_addr_arrays ( s#sg_table * , s#page * * , t#dma_addr_t * , int ) 
drm_prime_gem_destroy extern void drm_prime_gem_destroy ( s#drm_gem_object * , s#sg_table * ) 
drm_prime_init_file_private void drm_prime_init_file_private ( s#drm_prime_file_private * ) 
drm_prime_destroy_file_private void drm_prime_destroy_file_private ( s#drm_prime_file_private * ) 

/* drivers/gpu/drm/drm_rect.o */
s#drm_rect struct drm_rect { int x1 , y1 , x2 , y2 ; } 
drm_rect_intersect t#bool drm_rect_intersect ( s#drm_rect * , const s#drm_rect * ) 
drm_rect_clip_scaled t#bool drm_rect_clip_scaled ( s#drm_rect * , s#drm_rect * , const s#drm_rect * , int , int ) 
drm_rect_calc_hscale int drm_rect_calc_hscale ( const s#drm_rect * , const s#drm_rect * , int , int ) 
drm_rect_calc_vscale int drm_rect_calc_vscale ( const s#drm_rect * , const s#drm_rect * , int , int ) 
drm_rect_calc_hscale_relaxed int drm_rect_calc_hscale_relaxed ( s#drm_rect * , s#drm_rect * , int , int ) 
drm_rect_calc_vscale_relaxed int drm_rect_calc_vscale_relaxed ( s#drm_rect * , s#drm_rect * , int , int ) 
drm_rect_debug_print void drm_rect_debug_print ( const s#drm_rect * , t#bool ) 

/* drivers/gpu/drm/drm_stub.o */
drm_debug extern unsigned int drm_debug 
drm_rnodes extern unsigned int drm_rnodes 
drm_vblank_offdelay extern unsigned int drm_vblank_offdelay 
drm_timestamp_precision extern unsigned int drm_timestamp_precision 
drm_err extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int drm_err ( const char * , const char * , ... ) 
drm_ut_debug_printk extern __attribute__ ( ( format ( printf , 4 , 5 ) ) ) void drm_ut_debug_printk ( unsigned int , const char * , const char * , const char * , ... ) 
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_master_get extern s#drm_master * drm_master_get ( s#drm_master * ) 
drm_master_put extern void drm_master_put ( s#drm_master * * ) 
drm_fill_in_dev extern int drm_fill_in_dev ( s#drm_device * , const s#pci_device_id * , s#drm_driver * ) 
drm_get_minor int drm_get_minor ( s#drm_device * , s#drm_minor * * , int ) 
drm_put_minor extern int drm_put_minor ( s#drm_minor * * ) 
drm_put_dev extern void drm_put_dev ( s#drm_device * ) 
drm_unplug_dev extern void drm_unplug_dev ( s#drm_device * ) 

/* drivers/gpu/drm/drm_sysfs.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_sysfs_connector_add extern int drm_sysfs_connector_add ( s#drm_connector * ) 
drm_sysfs_connector_remove extern void drm_sysfs_connector_remove ( s#drm_connector * ) 
drm_sysfs_hotplug_event extern void drm_sysfs_hotplug_event ( s#drm_device * ) 
drm_class_device_register extern int drm_class_device_register ( s#device * ) 
drm_class_device_unregister extern void drm_class_device_unregister ( s#device * ) 

/* drivers/gpu/drm/drm_usb.o */
s#usb_interface_descriptor struct usb_interface_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 bInterfaceNumber ; t#__u8 bAlternateSetting ; t#__u8 bNumEndpoints ; t#__u8 bInterfaceClass ; t#__u8 bInterfaceSubClass ; t#__u8 bInterfaceProtocol ; t#__u8 iInterface ; } 
s#usb_endpoint_descriptor struct usb_endpoint_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 bEndpointAddress ; t#__u8 bmAttributes ; t#__le16 wMaxPacketSize ; t#__u8 bInterval ; t#__u8 bRefresh ; t#__u8 bSynchAddress ; } 
s#usb_ss_ep_comp_descriptor struct usb_ss_ep_comp_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 bMaxBurst ; t#__u8 bmAttributes ; t#__le16 wBytesPerInterval ; } 
s##ep_device
s#usb_host_endpoint struct usb_host_endpoint { s#usb_endpoint_descriptor desc ; s#usb_ss_ep_comp_descriptor ss_ep_comp ; s#list_head urb_list ; void * hcpriv ; s#ep_device * ep_dev ; unsigned char * extra ; int extralen ; int enabled ; int streams ; } 
s#usb_host_interface struct usb_host_interface { s#usb_interface_descriptor desc ; int extralen ; unsigned char * extra ; s#usb_host_endpoint * endpoint ; char * string ; } 
s#usb_interface_assoc_descriptor struct usb_interface_assoc_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 bFirstInterface ; t#__u8 bInterfaceCount ; t#__u8 bFunctionClass ; t#__u8 bFunctionSubClass ; t#__u8 bFunctionProtocol ; t#__u8 iFunction ; } 
e#usb_interface_condition enum usb_interface_condition { USB_INTERFACE_UNBOUND = 0 , USB_INTERFACE_BINDING , USB_INTERFACE_BOUND , USB_INTERFACE_UNBINDING , } 
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s#usb_interface struct usb_interface { s#usb_host_interface * altsetting ; s#usb_host_interface * cur_altsetting ; unsigned num_altsetting ; s#usb_interface_assoc_descriptor * intf_assoc ; int minor ; e#usb_interface_condition condition ; unsigned sysfs_files_created : 1 ; unsigned ep_devs_created : 1 ; unsigned unregistering : 1 ; unsigned needs_remote_wakeup : 1 ; unsigned needs_altsetting0 : 1 ; unsigned needs_binding : 1 ; unsigned reset_running : 1 ; unsigned resetting_device : 1 ; s#device dev ; s#device * usb_dev ; t#atomic_t pm_usage_cnt ; s#work_struct reset_ws ; } 
s#usb_device_id struct usb_device_id { t#__u16 match_flags ; t#__u16 idVendor ; t#__u16 idProduct ; t#__u16 bcdDevice_lo ; t#__u16 bcdDevice_hi ; t#__u8 bDeviceClass ; t#__u8 bDeviceSubClass ; t#__u8 bDeviceProtocol ; t#__u8 bInterfaceClass ; t#__u8 bInterfaceSubClass ; t#__u8 bInterfaceProtocol ; t#__u8 bInterfaceNumber ; t#kernel_ulong_t driver_info __attribute__ ( ( aligned ( sizeof ( kernel_ulong_t ) ) ) ) ; } 
s##agp_bridge_data
s##mfd_cell
e#usb_device_state enum usb_device_state { USB_STATE_NOTATTACHED = 0 , USB_STATE_ATTACHED , USB_STATE_POWERED , USB_STATE_RECONNECTING , USB_STATE_UNAUTHENTICATED , USB_STATE_DEFAULT , USB_STATE_ADDRESS , USB_STATE_CONFIGURED , USB_STATE_SUSPENDED } 
e#usb_device_speed enum usb_device_speed { USB_SPEED_UNKNOWN = 0 , USB_SPEED_LOW , USB_SPEED_FULL , USB_SPEED_HIGH , USB_SPEED_WIRELESS , USB_SPEED_SUPER , } 
s##usb_tt
s#usb_devmap struct usb_devmap { unsigned long devicemap [ 128 / ( 8 * sizeof ( unsigned long ) ) ] ; } 
s##mon_bus
s#usb_bus struct usb_bus { s#device * controller ; int busnum ; const char * bus_name ; t#u8 uses_dma ; t#u8 uses_pio_for_control ; t#u8 otg_port ; unsigned is_b_host : 1 ; unsigned b_hnp_enable : 1 ; unsigned no_stop_on_short : 1 ; unsigned no_sg_constraint : 1 ; unsigned sg_tablesize ; int devnum_next ; s#usb_devmap devmap ; s#usb_device * root_hub ; s#usb_bus * hs_companion ; s#list_head bus_list ; s#mutex usb_address0_mutex ; int bandwidth_allocated ; int bandwidth_int_reqs ; int bandwidth_isoc_reqs ; unsigned resuming_ports ; s#mon_bus * mon_bus ; int monitored ; } 
s#usb_device_descriptor struct usb_device_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__le16 bcdUSB ; t#__u8 bDeviceClass ; t#__u8 bDeviceSubClass ; t#__u8 bDeviceProtocol ; t#__u8 bMaxPacketSize0 ; t#__le16 idVendor ; t#__le16 idProduct ; t#__le16 bcdDevice ; t#__u8 iManufacturer ; t#__u8 iProduct ; t#__u8 iSerialNumber ; t#__u8 bNumConfigurations ; } 
s#usb_bos_descriptor struct usb_bos_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__le16 wTotalLength ; t#__u8 bNumDeviceCaps ; } 
s#usb_ext_cap_descriptor struct usb_ext_cap_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 bDevCapabilityType ; t#__le32 bmAttributes ; } 
s#usb_ss_cap_descriptor struct usb_ss_cap_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 bDevCapabilityType ; t#__u8 bmAttributes ; t#__le16 wSpeedSupported ; t#__u8 bFunctionalitySupport ; t#__u8 bU1devExitLat ; t#__le16 bU2DevExitLat ; } 
s#usb_ss_container_id_descriptor struct usb_ss_container_id_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 bDevCapabilityType ; t#__u8 bReserved ; t#__u8 ContainerID [ 16 ] ; } 
s#usb_host_bos struct usb_host_bos { s#usb_bos_descriptor * desc ; s#usb_ext_cap_descriptor * ext_cap ; s#usb_ss_cap_descriptor * ss_cap ; s#usb_ss_container_id_descriptor * ss_id ; } 
s#usb_config_descriptor struct usb_config_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__le16 wTotalLength ; t#__u8 bNumInterfaces ; t#__u8 bConfigurationValue ; t#__u8 iConfiguration ; t#__u8 bmAttributes ; t#__u8 bMaxPower ; } 
s#usb_interface_cache struct usb_interface_cache { unsigned num_altsetting ; s#kref ref ; s#usb_host_interface altsetting [ 0 ] ; } 
s#usb_host_config struct usb_host_config { s#usb_config_descriptor desc ; char * string ; s#usb_interface_assoc_descriptor * intf_assoc [ ( 32 / 2 ) ] ; s#usb_interface * interface [ 32 ] ; s#usb_interface_cache * intf_cache [ 32 ] ; unsigned char * extra ; int extralen ; } 
s##wusb_dev
e#usb_device_removable enum usb_device_removable { USB_DEVICE_REMOVABLE_UNKNOWN = 0 , USB_DEVICE_REMOVABLE , USB_DEVICE_FIXED , } 
s#usb2_lpm_parameters struct usb2_lpm_parameters { unsigned int besl ; int timeout ; } 
s#usb3_lpm_parameters struct usb3_lpm_parameters { unsigned int mel ; unsigned int pel ; unsigned int sel ; int timeout ; } 
s#usb_device struct usb_device { int devnum ; char devpath [ 16 ] ; t#u32 route ; e#usb_device_state state ; e#usb_device_speed speed ; s#usb_tt * tt ; int ttport ; unsigned int toggle [ 2 ] ; s#usb_device * parent ; s#usb_bus * bus ; s#usb_host_endpoint ep0 ; s#device dev ; s#usb_device_descriptor descriptor ; s#usb_host_bos * bos ; s#usb_host_config * config ; s#usb_host_config * actconfig ; s#usb_host_endpoint * ep_in [ 16 ] ; s#usb_host_endpoint * ep_out [ 16 ] ; char * * rawdescriptors ; unsigned short bus_mA ; t#u8 portnum ; t#u8 level ; unsigned can_submit : 1 ; unsigned persist_enabled : 1 ; unsigned have_langid : 1 ; unsigned authorized : 1 ; unsigned authenticated : 1 ; unsigned wusb : 1 ; unsigned lpm_capable : 1 ; unsigned usb2_hw_lpm_capable : 1 ; unsigned usb2_hw_lpm_besl_capable : 1 ; unsigned usb2_hw_lpm_enabled : 1 ; unsigned usb2_hw_lpm_allowed : 1 ; unsigned usb3_lpm_enabled : 1 ; int string_langid ; char * product ; char * manufacturer ; char * serial ; s#list_head filelist ; int maxchild ; t#u32 quirks ; t#atomic_t urbnum ; unsigned long active_duration ; unsigned long connect_time ; unsigned do_remote_wakeup : 1 ; unsigned reset_resume : 1 ; unsigned port_is_suspended : 1 ; s#wusb_dev * wusb_dev ; int slot_id ; e#usb_device_removable removable ; s#usb2_lpm_parameters l1_params ; s#usb3_lpm_parameters u1_params ; s#usb3_lpm_parameters u2_params ; unsigned lpm_disable_count ; } 
s##dma_buf
s##dma_buf_attachment
s#usb_dynids struct usb_dynids { t#spinlock_t lock ; s#list_head list ; } 
s#usbdrv_wrap struct usbdrv_wrap { s#device_driver driver ; int for_devices ; } 
s#usb_driver struct usb_driver { const char * name ; int ( * probe ) ( s#usb_interface * , const s#usb_device_id * ) ; void ( * disconnect ) ( s#usb_interface * ) ; int ( * unlocked_ioctl ) ( s#usb_interface * , unsigned int , void * ) ; int ( * suspend ) ( s#usb_interface * , t#pm_message_t ) ; int ( * resume ) ( s#usb_interface * ) ; int ( * reset_resume ) ( s#usb_interface * ) ; int ( * pre_reset ) ( s#usb_interface * ) ; int ( * post_reset ) ( s#usb_interface * ) ; const s#usb_device_id * id_table ; s#usb_dynids dynids ; s#usbdrv_wrap drvwrap ; unsigned int no_dynamic_id : 1 ; unsigned int supports_autosuspend : 1 ; unsigned int disable_hub_initiated_lpm : 1 ; unsigned int soft_unbind : 1 ; void * suse_kabi_padding ; } 
drm_get_usb_dev int drm_get_usb_dev ( s#usb_interface * , const s#usb_device_id * , s#drm_driver * ) 
drm_usb_init int drm_usb_init ( s#drm_driver * , s#usb_driver * ) 
drm_usb_exit void drm_usb_exit ( s#drm_driver * , s#usb_driver * ) 

/* drivers/gpu/drm/drm_vm.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_vm_open_locked extern void drm_vm_open_locked ( s#drm_device * , s#vm_area_struct * ) 
drm_mmap extern int drm_mmap ( s#file * , s#vm_area_struct * ) 

/* drivers/gpu/drm/drm_vma_manager.o */
s#drm_vma_offset_manager struct drm_vma_offset_manager { t#rwlock_t vm_lock ; s#rb_root vm_addr_space_rb ; s#drm_mm vm_addr_space_mm ; } 
drm_vma_offset_manager_init void drm_vma_offset_manager_init ( s#drm_vma_offset_manager * , unsigned long , unsigned long ) 
drm_vma_offset_manager_destroy void drm_vma_offset_manager_destroy ( s#drm_vma_offset_manager * ) 
drm_vma_offset_lookup s#drm_vma_offset_node * drm_vma_offset_lookup ( s#drm_vma_offset_manager * , unsigned long , unsigned long ) 
drm_vma_offset_lookup_locked s#drm_vma_offset_node * drm_vma_offset_lookup_locked ( s#drm_vma_offset_manager * , unsigned long , unsigned long ) 
drm_vma_offset_add int drm_vma_offset_add ( s#drm_vma_offset_manager * , s#drm_vma_offset_node * , unsigned long ) 
drm_vma_offset_remove void drm_vma_offset_remove ( s#drm_vma_offset_manager * , s#drm_vma_offset_node * ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
drm_vma_node_allow int drm_vma_node_allow ( s#drm_vma_offset_node * , s#file * ) 
drm_vma_node_revoke void drm_vma_node_revoke ( s#drm_vma_offset_node * , s#file * ) 
drm_vma_node_is_allowed t#bool drm_vma_node_is_allowed ( s#drm_vma_offset_node * , s#file * ) 

/* drivers/gpu/drm/ttm/ttm_agp_backend.o */
s##sock
s##sysfs_dirent
s#ttm_mem_shrink struct ttm_mem_shrink { int ( * do_shrink ) ( s#ttm_mem_shrink * ) ; } 
s##workqueue_struct
s##ttm_mem_zone
s#ttm_mem_global struct ttm_mem_global { s#kobject kobj ; s#ttm_mem_shrink * shrink ; s#workqueue_struct * swap_queue ; s#work_struct work ; t#spinlock_t lock ; s#ttm_mem_zone * zones [ 2 ] ; unsigned int num_zones ; s#ttm_mem_zone * zone_kernel ; s#ttm_mem_zone * zone_dma32 ; } 
s##posix_acl
s##vfsmount
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s#ttm_bo_global struct ttm_bo_global { s#kobject kobj ; s#ttm_mem_global * mem_glob ; s#page * dummy_read_page ; s#ttm_mem_shrink shrink ; s#mutex device_list_mutex ; t#spinlock_t lru_lock ; s#list_head device_list ; s#list_head swap_lru ; t#atomic_t bo_count ; } 
e#ttm_bo_type enum ttm_bo_type { ttm_bo_type_device , ttm_bo_type_kernel , ttm_bo_type_sg } 
s#ttm_bus_placement struct ttm_bus_placement { void * addr ; unsigned long base ; unsigned long size ; unsigned long offset ; t#bool is_iomem ; t#bool io_reserved_vm ; t#uint64_t io_reserved_count ; } 
s#ttm_mem_reg struct ttm_mem_reg { void * mm_node ; unsigned long start ; unsigned long size ; unsigned long num_pages ; t#uint32_t page_alignment ; t#uint32_t mem_type ; t#uint32_t placement ; s#ttm_bus_placement bus ; } 
s##sg_table
s#ww_acquire_ctx struct ww_acquire_ctx { s#task_struct * task ; unsigned long stamp ; unsigned acquired ; } 
s#ww_mutex struct ww_mutex { s#mutex base ; s#ww_acquire_ctx * ctx ; } 
s#reservation_object struct reservation_object { s#ww_mutex lock ; } 
s#ttm_buffer_object struct ttm_buffer_object { s#ttm_bo_global * glob ; s#ttm_bo_device * bdev ; e#ttm_bo_type type ; void ( * destroy ) ( s#ttm_buffer_object * ) ; unsigned long num_pages ; t#size_t acc_size ; s#kref kref ; s#kref list_kref ; s#ttm_mem_reg mem ; s#file * persistent_swap_storage ; s#ttm_tt * ttm ; t#bool evicted ; t#atomic_t cpu_writers ; s#list_head lru ; s#list_head ddestroy ; s#list_head swap ; s#list_head io_reserve_lru ; void * sync_obj ; unsigned long priv_flags ; s#drm_vma_offset_node vma_node ; unsigned long offset ; t#uint32_t cur_placement ; s#sg_table * sg ; s#reservation_object * resv ; s#reservation_object ttm_resv ; } 
s#ttm_placement struct ttm_placement { unsigned fpfn ; unsigned lpfn ; unsigned num_placement ; const t#uint32_t * placement ; unsigned num_busy_placement ; const t#uint32_t * busy_placement ; } 
s#ttm_mem_type_manager_func struct ttm_mem_type_manager_func { int ( * init ) ( s#ttm_mem_type_manager * , unsigned long ) ; int ( * takedown ) ( s#ttm_mem_type_manager * ) ; int ( * get_node ) ( s#ttm_mem_type_manager * , s#ttm_buffer_object * , s#ttm_placement * , s#ttm_mem_reg * ) ; void ( * put_node ) ( s#ttm_mem_type_manager * , s#ttm_mem_reg * ) ; void ( * debug ) ( s#ttm_mem_type_manager * , const char * ) ; } 
s#ttm_mem_type_manager struct ttm_mem_type_manager { s#ttm_bo_device * bdev ; t#bool has_type ; t#bool use_type ; t#uint32_t flags ; unsigned long gpu_offset ; t#uint64_t size ; t#uint32_t available_caching ; t#uint32_t default_caching ; const s#ttm_mem_type_manager_func * func ; void * priv ; s#mutex io_reserve_mutex ; t#bool use_io_reserve_lru ; t#bool io_reserve_fastpath ; s#list_head io_reserve_lru ; s#list_head lru ; } 
s#ttm_bo_driver struct ttm_bo_driver { s#ttm_tt * ( * ttm_tt_create ) ( s#ttm_bo_device * , unsigned long , t#uint32_t , s#page * ) ; int ( * ttm_tt_populate ) ( s#ttm_tt * ) ; void ( * ttm_tt_unpopulate ) ( s#ttm_tt * ) ; int ( * invalidate_caches ) ( s#ttm_bo_device * , t#uint32_t ) ; int ( * init_mem_type ) ( s#ttm_bo_device * , t#uint32_t , s#ttm_mem_type_manager * ) ; void ( * evict_flags ) ( s#ttm_buffer_object * , s#ttm_placement * ) ; int ( * move ) ( s#ttm_buffer_object * , t#bool , t#bool , t#bool , s#ttm_mem_reg * ) ; int ( * verify_access ) ( s#ttm_buffer_object * , s#file * ) ; t#bool ( * sync_obj_signaled ) ( void * ) ; int ( * sync_obj_wait ) ( void * , t#bool , t#bool ) ; int ( * sync_obj_flush ) ( void * ) ; void ( * sync_obj_unref ) ( void * * ) ; void * ( * sync_obj_ref ) ( void * ) ; void ( * move_notify ) ( s#ttm_buffer_object * , s#ttm_mem_reg * ) ; int ( * fault_reserve_notify ) ( s#ttm_buffer_object * ) ; void ( * swap_notify ) ( s#ttm_buffer_object * ) ; int ( * io_mem_reserve ) ( s#ttm_bo_device * , s#ttm_mem_reg * ) ; void ( * io_mem_free ) ( s#ttm_bo_device * , s#ttm_mem_reg * ) ; } 
s##tvec_base
s#ttm_bo_device struct ttm_bo_device { s#list_head device_list ; s#ttm_bo_global * glob ; s#ttm_bo_driver * driver ; s#ttm_mem_type_manager man [ 8 ] ; t#spinlock_t fence_lock ; s#drm_vma_offset_manager vma_manager ; s#list_head ddestroy ; t#uint32_t val_seq ; s#address_space * dev_mapping ; s#delayed_work wq ; t#bool need_dma32 ; } 
s#ttm_backend_func struct ttm_backend_func { int ( * bind ) ( s#ttm_tt * , s#ttm_mem_reg * ) ; int ( * unbind ) ( s#ttm_tt * ) ; void ( * destroy ) ( s#ttm_tt * ) ; } 
e#ttm_caching_state enum ttm_caching_state { tt_uncached , tt_wc , tt_cached } 
s#ttm_tt struct ttm_tt { s#ttm_bo_device * bdev ; s#ttm_backend_func * func ; s#page * dummy_read_page ; s#page * * pages ; t#uint32_t page_flags ; unsigned long num_pages ; s#sg_table * sg ; s#ttm_bo_global * glob ; s#file * swap_storage ; e#ttm_caching_state caching_state ; enum { tt_bound , tt_unbound , tt_unpopulated , } state ; } 
s##agp_bridge_data
ttm_agp_tt_create extern s#ttm_tt * ttm_agp_tt_create ( s#ttm_bo_device * , s#agp_bridge_data * , unsigned long , t#uint32_t , s#page * ) 
ttm_agp_tt_populate int ttm_agp_tt_populate ( s#ttm_tt * ) 
ttm_agp_tt_unpopulate void ttm_agp_tt_unpopulate ( s#ttm_tt * ) 

/* drivers/gpu/drm/ttm/ttm_bo.o */
s##sock
s##sysfs_dirent
s##workqueue_struct
s##ttm_mem_zone
s##posix_acl
s##vfsmount
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##sg_table
s##tvec_base
ttm_bo_add_to_lru extern void ttm_bo_add_to_lru ( s#ttm_buffer_object * ) 
ttm_bo_del_sub_from_lru extern void ttm_bo_del_sub_from_lru ( s#ttm_buffer_object * ) 
ttm_bo_unref extern void ttm_bo_unref ( s#ttm_buffer_object * * ) 
ttm_bo_lock_delayed_workqueue extern int ttm_bo_lock_delayed_workqueue ( s#ttm_bo_device * ) 
ttm_bo_unlock_delayed_workqueue extern void ttm_bo_unlock_delayed_workqueue ( s#ttm_bo_device * , int ) 
ttm_bo_mem_put extern void ttm_bo_mem_put ( s#ttm_buffer_object * , s#ttm_mem_reg * ) 
ttm_bo_mem_space extern int ttm_bo_mem_space ( s#ttm_buffer_object * , s#ttm_placement * , s#ttm_mem_reg * , t#bool , t#bool ) 
ttm_bo_validate extern int ttm_bo_validate ( s#ttm_buffer_object * , s#ttm_placement * , t#bool , t#bool ) 
ttm_bo_init extern int ttm_bo_init ( s#ttm_bo_device * , s#ttm_buffer_object * , unsigned long , e#ttm_bo_type , s#ttm_placement * , t#uint32_t , t#bool , s#file * , t#size_t , s#sg_table * , void ( * ) ( s#ttm_buffer_object * ) ) 
ttm_bo_acc_size t#size_t ttm_bo_acc_size ( s#ttm_bo_device * , unsigned long , unsigned ) 
ttm_bo_dma_acc_size t#size_t ttm_bo_dma_acc_size ( s#ttm_bo_device * , unsigned long , unsigned ) 
ttm_bo_create extern int ttm_bo_create ( s#ttm_bo_device * , unsigned long , e#ttm_bo_type , s#ttm_placement * , t#uint32_t , t#bool , s#file * , s#ttm_buffer_object * * ) 
ttm_bo_clean_mm extern int ttm_bo_clean_mm ( s#ttm_bo_device * , unsigned ) 
ttm_bo_evict_mm extern int ttm_bo_evict_mm ( s#ttm_bo_device * , unsigned ) 
ttm_bo_init_mm extern int ttm_bo_init_mm ( s#ttm_bo_device * , unsigned , unsigned long ) 
ttm_bo_global_release extern void ttm_bo_global_release ( s#drm_global_reference * ) 
ttm_bo_global_init extern int ttm_bo_global_init ( s#drm_global_reference * ) 
ttm_bo_device_release extern int ttm_bo_device_release ( s#ttm_bo_device * ) 
ttm_bo_device_init extern int ttm_bo_device_init ( s#ttm_bo_device * , s#ttm_bo_global * , s#ttm_bo_driver * , t#uint64_t , t#bool ) 
ttm_bo_unmap_virtual extern void ttm_bo_unmap_virtual ( s#ttm_buffer_object * ) 
ttm_bo_wait extern int ttm_bo_wait ( s#ttm_buffer_object * , t#bool , t#bool , t#bool ) 
ttm_bo_synccpu_write_grab extern int ttm_bo_synccpu_write_grab ( s#ttm_buffer_object * , t#bool ) 
ttm_bo_synccpu_write_release extern void ttm_bo_synccpu_write_release ( s#ttm_buffer_object * ) 
ttm_bo_swapout_all extern void ttm_bo_swapout_all ( s#ttm_bo_device * ) 

/* drivers/gpu/drm/ttm/ttm_bo_manager.o */
s##sock
s##sysfs_dirent
s##workqueue_struct
s##ttm_mem_zone
s##posix_acl
s##vfsmount
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##sg_table
s##tvec_base
ttm_bo_manager_func extern const s#ttm_mem_type_manager_func ttm_bo_manager_func 

/* drivers/gpu/drm/ttm/ttm_bo_util.o */
s##sock
s##sysfs_dirent
s##workqueue_struct
s##ttm_mem_zone
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##sg_table
s##tvec_base
ttm_bo_move_ttm extern int ttm_bo_move_ttm ( s#ttm_buffer_object * , t#bool , t#bool , s#ttm_mem_reg * ) 
ttm_mem_io_lock extern int ttm_mem_io_lock ( s#ttm_mem_type_manager * , t#bool ) 
ttm_mem_io_unlock extern void ttm_mem_io_unlock ( s#ttm_mem_type_manager * ) 
ttm_mem_io_reserve int ttm_mem_io_reserve ( s#ttm_bo_device * , s#ttm_mem_reg * ) 
ttm_mem_io_free void ttm_mem_io_free ( s#ttm_bo_device * , s#ttm_mem_reg * ) 
ttm_bo_move_memcpy extern int ttm_bo_move_memcpy ( s#ttm_buffer_object * , t#bool , t#bool , s#ttm_mem_reg * ) 
ttm_io_prot extern t#pgprot_t ttm_io_prot ( t#uint32_t , t#pgprot_t ) 
s#ttm_bo_kmap_obj struct ttm_bo_kmap_obj { void * virtual ; s#page * page ; enum { ttm_bo_map_iomap = 1 | 0x80 , ttm_bo_map_vmap = 2 , ttm_bo_map_kmap = 3 , ttm_bo_map_premapped = 4 | 0x80 , } bo_kmap_type ; s#ttm_buffer_object * bo ; } 
ttm_bo_kmap extern int ttm_bo_kmap ( s#ttm_buffer_object * , unsigned long , unsigned long , s#ttm_bo_kmap_obj * ) 
ttm_bo_kunmap extern void ttm_bo_kunmap ( s#ttm_bo_kmap_obj * ) 
ttm_bo_move_accel_cleanup extern int ttm_bo_move_accel_cleanup ( s#ttm_buffer_object * , void * , t#bool , t#bool , s#ttm_mem_reg * ) 

/* drivers/gpu/drm/ttm/ttm_bo_vm.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##ttm_mem_zone
s##sg_table
s##tvec_base
ttm_bo_mmap extern int ttm_bo_mmap ( s#file * , s#vm_area_struct * , s#ttm_bo_device * ) 
ttm_fbdev_mmap extern int ttm_fbdev_mmap ( s#vm_area_struct * , s#ttm_buffer_object * ) 

/* drivers/gpu/drm/ttm/ttm_execbuf_util.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
ttm_eu_backoff_reservation extern void ttm_eu_backoff_reservation ( s#ww_acquire_ctx * , s#list_head * ) 
ttm_eu_reserve_buffers extern int ttm_eu_reserve_buffers ( s#ww_acquire_ctx * , s#list_head * ) 
ttm_eu_fence_buffer_objects extern void ttm_eu_fence_buffer_objects ( s#ww_acquire_ctx * , s#list_head * , void * ) 

/* drivers/gpu/drm/ttm/ttm_lock.o */
e#ttm_object_type enum ttm_object_type { ttm_fence_type , ttm_buffer_type , ttm_lock_type , ttm_driver_type0 = 256 , ttm_driver_type1 , ttm_driver_type2 , ttm_driver_type3 , ttm_driver_type4 , ttm_driver_type5 } 
s##ttm_object_file
e#ttm_ref_type enum ttm_ref_type { TTM_REF_USAGE , TTM_REF_SYNCCPU_READ , TTM_REF_SYNCCPU_WRITE , TTM_REF_NUM } 
s#ttm_base_object struct ttm_base_object { s#callback_head rhead ; s#drm_hash_item hash ; e#ttm_object_type object_type ; t#bool shareable ; s#ttm_object_file * tfile ; s#kref refcount ; void ( * refcount_release ) ( s#ttm_base_object * * ) ; void ( * ref_obj_release ) ( s#ttm_base_object * , e#ttm_ref_type ) ; } 
s#ttm_lock struct ttm_lock { s#ttm_base_object base ; t#wait_queue_head_t queue ; t#spinlock_t lock ; t#int32_t rw ; t#uint32_t flags ; t#bool kill_takers ; int signal ; s#ttm_object_file * vt_holder ; } 
ttm_lock_init extern void ttm_lock_init ( s#ttm_lock * ) 
ttm_read_unlock extern void ttm_read_unlock ( s#ttm_lock * ) 
ttm_read_lock extern int ttm_read_lock ( s#ttm_lock * , t#bool ) 
ttm_write_unlock extern void ttm_write_unlock ( s#ttm_lock * ) 
ttm_write_lock extern int ttm_write_lock ( s#ttm_lock * , t#bool ) 
ttm_vt_lock extern int ttm_vt_lock ( s#ttm_lock * , t#bool , s#ttm_object_file * ) 
ttm_vt_unlock extern int ttm_vt_unlock ( s#ttm_lock * ) 
ttm_suspend_unlock extern void ttm_suspend_unlock ( s#ttm_lock * ) 
ttm_suspend_lock extern void ttm_suspend_lock ( s#ttm_lock * ) 

/* drivers/gpu/drm/ttm/ttm_memory.o */
s##sock
s##sysfs_dirent
s##workqueue_struct
s##ttm_mem_zone
ttm_mem_global_init extern int ttm_mem_global_init ( s#ttm_mem_global * ) 
ttm_mem_global_release extern void ttm_mem_global_release ( s#ttm_mem_global * ) 
ttm_mem_global_free extern void ttm_mem_global_free ( s#ttm_mem_global * , t#uint64_t ) 
ttm_mem_global_alloc extern int ttm_mem_global_alloc ( s#ttm_mem_global * , t#uint64_t , t#bool , t#bool ) 
ttm_round_pot extern t#size_t ttm_round_pot ( t#size_t ) 

/* drivers/gpu/drm/ttm/ttm_object.o */
s##ttm_object_file
ttm_base_object_init extern int ttm_base_object_init ( s#ttm_object_file * , s#ttm_base_object * , t#bool , e#ttm_object_type , void ( * ) ( s#ttm_base_object * * ) , void ( * ) ( s#ttm_base_object * , e#ttm_ref_type ) ) 
ttm_base_object_unref extern void ttm_base_object_unref ( s#ttm_base_object * * ) 
ttm_base_object_lookup extern s#ttm_base_object * ttm_base_object_lookup ( s#ttm_object_file * , t#uint32_t ) 
ttm_ref_object_add extern int ttm_ref_object_add ( s#ttm_object_file * , s#ttm_base_object * , e#ttm_ref_type , t#bool * ) 
ttm_ref_object_base_unref extern int ttm_ref_object_base_unref ( s#ttm_object_file * , unsigned long , e#ttm_ref_type ) 
ttm_object_file_release extern void ttm_object_file_release ( s#ttm_object_file * * ) 
s##ttm_object_device
ttm_object_file_init extern s#ttm_object_file * ttm_object_file_init ( s#ttm_object_device * , unsigned int ) 
s##sock
s##sysfs_dirent
s##workqueue_struct
s##ttm_mem_zone
ttm_object_device_init extern s#ttm_object_device * ttm_object_device_init ( s#ttm_mem_global * , unsigned int ) 
ttm_object_device_release extern void ttm_object_device_release ( s#ttm_object_device * * ) 

/* drivers/gpu/drm/ttm/ttm_page_alloc.o */
s##sock
s##sysfs_dirent
s##workqueue_struct
s##ttm_mem_zone
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##tvec_base
ttm_pool_populate extern int ttm_pool_populate ( s#ttm_tt * ) 
ttm_pool_unpopulate extern void ttm_pool_unpopulate ( s#ttm_tt * ) 
ttm_page_alloc_debugfs extern int ttm_page_alloc_debugfs ( s#seq_file * , void * ) 

/* drivers/gpu/drm/ttm/ttm_tt.o */
s##sock
s##sysfs_dirent
s##workqueue_struct
s##ttm_mem_zone
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##sg_table
s##tvec_base
ttm_tt_set_placement_caching extern int ttm_tt_set_placement_caching ( s#ttm_tt * , t#uint32_t ) 
ttm_tt_init extern int ttm_tt_init ( s#ttm_tt * , s#ttm_bo_device * , unsigned long , t#uint32_t , s#page * ) 
ttm_tt_fini extern void ttm_tt_fini ( s#ttm_tt * ) 
s#ttm_dma_tt struct ttm_dma_tt { s#ttm_tt ttm ; t#dma_addr_t * dma_address ; s#list_head pages_list ; } 
ttm_dma_tt_init extern int ttm_dma_tt_init ( s#ttm_dma_tt * , s#ttm_bo_device * , unsigned long , t#uint32_t , s#page * ) 
ttm_dma_tt_fini extern void ttm_dma_tt_fini ( s#ttm_dma_tt * ) 
ttm_tt_bind extern int ttm_tt_bind ( s#ttm_tt * , s#ttm_mem_reg * ) 

/* drivers/gpu/vga/vgaarb.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
vga_default_device extern s#pci_dev * vga_default_device ( void ) 
vga_get extern int vga_get ( s#pci_dev * , unsigned int , int ) 
vga_tryget extern int vga_tryget ( s#pci_dev * , unsigned int ) 
vga_put extern void vga_put ( s#pci_dev * , unsigned int ) 
vga_set_legacy_decoding extern void vga_set_legacy_decoding ( s#pci_dev * , unsigned int ) 
vga_client_register int vga_client_register ( s#pci_dev * , void * , void ( * ) ( void * , t#bool ) , unsigned int ( * ) ( void * , t#bool ) ) 

/* drivers/hid/hid-core.o */
hid_debug extern int hid_debug 
s#hid_usage struct hid_usage { unsigned hid ; unsigned collection_index ; unsigned usage_index ; t#__u16 code ; t#__u8 type ; t#__s8 hat_min ; t#__s8 hat_max ; t#__s8 hat_dir ; } 
s#input_id struct input_id { t#__u16 bustype ; t#__u16 vendor ; t#__u16 product ; t#__u16 version ; } 
s#input_keymap_entry struct input_keymap_entry { t#__u8 flags ; t#__u8 len ; t#__u16 index ; t#__u32 keycode ; t#__u8 scancode [ 32 ] ; } 
s#ff_trigger struct ff_trigger { t#__u16 button ; t#__u16 interval ; } 
s#ff_replay struct ff_replay { t#__u16 length ; t#__u16 delay ; } 
s#ff_envelope struct ff_envelope { t#__u16 attack_length ; t#__u16 attack_level ; t#__u16 fade_length ; t#__u16 fade_level ; } 
s#ff_constant_effect struct ff_constant_effect { t#__s16 level ; s#ff_envelope envelope ; } 
s#ff_ramp_effect struct ff_ramp_effect { t#__s16 start_level ; t#__s16 end_level ; s#ff_envelope envelope ; } 
s#ff_periodic_effect struct ff_periodic_effect { t#__u16 waveform ; t#__u16 period ; t#__s16 magnitude ; t#__s16 offset ; t#__u16 phase ; s#ff_envelope envelope ; t#__u32 custom_len ; t#__s16 * custom_data ; } 
s#ff_condition_effect struct ff_condition_effect { t#__u16 right_saturation ; t#__u16 left_saturation ; t#__s16 right_coeff ; t#__s16 left_coeff ; t#__u16 deadband ; t#__s16 center ; } 
s#ff_rumble_effect struct ff_rumble_effect { t#__u16 strong_magnitude ; t#__u16 weak_magnitude ; } 
s#ff_effect struct ff_effect { t#__u16 type ; t#__s16 id ; t#__u16 direction ; s#ff_trigger trigger ; s#ff_replay replay ; union { s#ff_constant_effect constant ; s#ff_ramp_effect ramp ; s#ff_periodic_effect periodic ; s#ff_condition_effect condition [ 2 ] ; s#ff_rumble_effect rumble ; } u ; } 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#ff_device struct ff_device { int ( * upload ) ( s#input_dev * , s#ff_effect * , s#ff_effect * ) ; int ( * erase ) ( s#input_dev * , int ) ; int ( * playback ) ( s#input_dev * , int , int ) ; void ( * set_gain ) ( s#input_dev * , t#u16 ) ; void ( * set_autocenter ) ( s#input_dev * , t#u16 ) ; void ( * destroy ) ( s#ff_device * ) ; void * private ; unsigned long ffbit [ ( ( ( ( 0x7f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#mutex mutex ; int max_effects ; s#ff_effect * effects ; s#file * effect_owners [ ] ; } 
s##tvec_base
s##input_mt
s#input_absinfo struct input_absinfo { t#__s32 value ; t#__s32 minimum ; t#__s32 maximum ; t#__s32 fuzz ; t#__s32 flat ; t#__s32 resolution ; } 
s#input_value struct input_value { t#__u16 type ; t#__u16 code ; t#__s32 value ; } 
s#input_device_id struct input_device_id { t#kernel_ulong_t flags ; t#__u16 bustype ; t#__u16 vendor ; t#__u16 product ; t#__u16 version ; t#kernel_ulong_t evbit [ 0x1f / 64 + 1 ] ; t#kernel_ulong_t keybit [ 0x2ff / 64 + 1 ] ; t#kernel_ulong_t relbit [ 0x0f / 64 + 1 ] ; t#kernel_ulong_t absbit [ 0x3f / 64 + 1 ] ; t#kernel_ulong_t mscbit [ 0x07 / 64 + 1 ] ; t#kernel_ulong_t ledbit [ 0x0f / 64 + 1 ] ; t#kernel_ulong_t sndbit [ 0x07 / 64 + 1 ] ; t#kernel_ulong_t ffbit [ 0x7f / 64 + 1 ] ; t#kernel_ulong_t swbit [ 0x0f / 64 + 1 ] ; t#kernel_ulong_t driver_info ; } 
s#input_handler struct input_handler { void * private ; void ( * event ) ( s#input_handle * , unsigned int , unsigned int , int ) ; void ( * events ) ( s#input_handle * , const s#input_value * , unsigned int ) ; t#bool ( * filter ) ( s#input_handle * , unsigned int , unsigned int , int ) ; t#bool ( * match ) ( s#input_handler * , s#input_dev * ) ; int ( * connect ) ( s#input_handler * , s#input_dev * , const s#input_device_id * ) ; void ( * disconnect ) ( s#input_handle * ) ; void ( * start ) ( s#input_handle * ) ; t#bool legacy_minors ; int minor ; const char * name ; const s#input_device_id * id_table ; s#list_head h_list ; s#list_head node ; } 
s#input_handle struct input_handle { void * private ; int open ; const char * name ; s#input_dev * dev ; s#input_handler * handler ; s#list_head d_node ; s#list_head h_node ; } 
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s#input_dev struct input_dev { const char * name ; const char * phys ; const char * uniq ; s#input_id id ; unsigned long propbit [ ( ( ( ( 0x1f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long evbit [ ( ( ( ( 0x1f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long keybit [ ( ( ( ( 0x2ff + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long relbit [ ( ( ( ( 0x0f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long absbit [ ( ( ( ( 0x3f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long mscbit [ ( ( ( ( 0x07 + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long ledbit [ ( ( ( ( 0x0f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long sndbit [ ( ( ( ( 0x07 + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long ffbit [ ( ( ( ( 0x7f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long swbit [ ( ( ( ( 0x0f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned int hint_events_per_packet ; unsigned int keycodemax ; unsigned int keycodesize ; void * keycode ; int ( * setkeycode ) ( s#input_dev * , const s#input_keymap_entry * , unsigned int * ) ; int ( * getkeycode ) ( s#input_dev * , s#input_keymap_entry * ) ; s#ff_device * ff ; unsigned int repeat_key ; s#timer_list timer ; int rep [ ( 0x01 + 1 ) ] ; s#input_mt * mt ; s#input_absinfo * absinfo ; unsigned long key [ ( ( ( ( 0x2ff + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long led [ ( ( ( ( 0x0f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long snd [ ( ( ( ( 0x07 + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long sw [ ( ( ( ( 0x0f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; int ( * open ) ( s#input_dev * ) ; void ( * close ) ( s#input_dev * ) ; int ( * flush ) ( s#input_dev * , s#file * ) ; int ( * event ) ( s#input_dev * , unsigned int , unsigned int , int ) ; s#input_handle * grab ; t#spinlock_t event_lock ; s#mutex mutex ; unsigned int users ; t#bool going_away ; s#device dev ; s#list_head h_list ; s#list_head node ; unsigned int num_vals ; unsigned int max_vals ; s#input_value * vals ; t#bool devres_managed ; } 
s#hid_input struct hid_input { s#list_head list ; s#hid_report * report ; s#input_dev * input ; } 
s#hid_field struct hid_field { unsigned physical ; unsigned logical ; unsigned application ; s#hid_usage * usage ; unsigned maxusage ; unsigned flags ; unsigned report_offset ; unsigned report_size ; unsigned report_count ; unsigned report_type ; t#__s32 * value ; t#__s32 logical_minimum ; t#__s32 logical_maximum ; t#__s32 physical_minimum ; t#__s32 physical_maximum ; t#__s32 unit_exponent ; unsigned unit ; s#hid_report * report ; unsigned index ; s#hid_input * hidinput ; t#__u16 dpad ; } 
s#hid_collection struct hid_collection { unsigned type ; unsigned usage ; unsigned level ; } 
e#hid_type enum hid_type { HID_TYPE_OTHER = 0 , HID_TYPE_USBMOUSE , HID_TYPE_USBNONE } 
s#hid_report_enum struct hid_report_enum { unsigned numbered ; s#list_head report_list ; s#hid_report * report_id_hash [ 256 ] ; } 
s#semaphore struct semaphore { t#raw_spinlock_t lock ; unsigned int count ; s#list_head wait_list ; } 
s#hid_device_id struct hid_device_id { t#__u16 bus ; t#__u16 group ; t#__u32 vendor ; t#__u32 product ; t#kernel_ulong_t driver_data ; } 
s#hid_report_id struct hid_report_id { t#__u32 report_type ; } 
s#hid_usage_id struct hid_usage_id { t#__u32 usage_hid ; t#__u32 usage_type ; t#__u32 usage_code ; } 
s#hid_driver struct hid_driver { char * name ; const s#hid_device_id * id_table ; s#list_head dyn_list ; t#spinlock_t dyn_lock ; int ( * probe ) ( s#hid_device * , const s#hid_device_id * ) ; void ( * remove ) ( s#hid_device * ) ; const s#hid_report_id * report_table ; int ( * raw_event ) ( s#hid_device * , s#hid_report * , t#u8 * , int ) ; const s#hid_usage_id * usage_table ; int ( * event ) ( s#hid_device * , s#hid_field * , s#hid_usage * , t#__s32 ) ; void ( * report ) ( s#hid_device * , s#hid_report * ) ; t#__u8 * ( * report_fixup ) ( s#hid_device * , t#__u8 * , unsigned int * ) ; int ( * input_mapping ) ( s#hid_device * , s#hid_input * , s#hid_field * , s#hid_usage * , unsigned long * * , int * ) ; int ( * input_mapped ) ( s#hid_device * , s#hid_input * , s#hid_field * , s#hid_usage * , unsigned long * * , int * ) ; void ( * input_configured ) ( s#hid_device * , s#hid_input * ) ; void ( * feature_mapping ) ( s#hid_device * , s#hid_field * , s#hid_usage * ) ; int ( * suspend ) ( s#hid_device * , t#pm_message_t ) ; int ( * resume ) ( s#hid_device * ) ; int ( * reset_resume ) ( s#hid_device * ) ; s#device_driver driver ; } 
s#hid_ll_driver struct hid_ll_driver { int ( * start ) ( s#hid_device * ) ; void ( * stop ) ( s#hid_device * ) ; int ( * open ) ( s#hid_device * ) ; void ( * close ) ( s#hid_device * ) ; int ( * power ) ( s#hid_device * , int ) ; int ( * hidinput_input_event ) ( s#input_dev * , unsigned int , unsigned int , int ) ; int ( * parse ) ( s#hid_device * ) ; void ( * request ) ( s#hid_device * , s#hid_report * , int ) ; int ( * wait ) ( s#hid_device * ) ; int ( * idle ) ( s#hid_device * , int , int , int ) ; } 
s#hid_device struct hid_device { t#__u8 * dev_rdesc ; unsigned dev_rsize ; t#__u8 * rdesc ; unsigned rsize ; s#hid_collection * collection ; unsigned collection_size ; unsigned maxcollection ; unsigned maxapplication ; t#__u16 bus ; t#__u16 group ; t#__u32 vendor ; t#__u32 product ; t#__u32 version ; e#hid_type type ; unsigned country ; s#hid_report_enum report_enum [ 3 ] ; s#work_struct led_work ; s#semaphore driver_lock ; s#semaphore driver_input_lock ; s#device dev ; s#hid_driver * driver ; s#hid_ll_driver * ll_driver ; unsigned int status ; unsigned claimed ; unsigned quirks ; t#bool io_started ; s#list_head inputs ; void * hiddev ; void * hidraw ; int minor ; int open ; char name [ 128 ] ; char phys [ 64 ] ; char uniq [ 64 ] ; void * driver_data ; int ( * ff_init ) ( s#hid_device * ) ; int ( * hiddev_connect ) ( s#hid_device * , unsigned int ) ; void ( * hiddev_disconnect ) ( s#hid_device * ) ; void ( * hiddev_hid_event ) ( s#hid_device * , s#hid_field * , s#hid_usage * , t#__s32 ) ; void ( * hiddev_report_event ) ( s#hid_device * , s#hid_report * ) ; int ( * hid_get_raw_report ) ( s#hid_device * , unsigned char , t#__u8 * , t#size_t , unsigned char ) ; int ( * hid_output_raw_report ) ( s#hid_device * , t#__u8 * , t#size_t , unsigned char ) ; unsigned short debug ; s#dentry * debug_dir ; s#dentry * debug_rdesc ; s#dentry * debug_events ; s#list_head debug_list ; t#spinlock_t debug_list_lock ; t#wait_queue_head_t debug_wait ; } 
s#hid_report struct hid_report { s#list_head list ; unsigned id ; unsigned type ; s#hid_field * field [ 256 ] ; unsigned maxfield ; unsigned size ; s#hid_device * device ; } 
hid_register_report s#hid_report * hid_register_report ( s#hid_device * , unsigned , unsigned ) 
hid_parse_report int hid_parse_report ( s#hid_device * , t#__u8 * , unsigned ) 
hid_validate_values s#hid_report * hid_validate_values ( s#hid_device * , unsigned int , unsigned int , unsigned int , unsigned int ) 
hid_open_report int hid_open_report ( s#hid_device * ) 
hid_snto32 t#s32 hid_snto32 ( t#__u32 , unsigned ) 
hid_output_report void hid_output_report ( s#hid_report * , t#__u8 * ) 
hid_alloc_report_buf t#u8 * hid_alloc_report_buf ( s#hid_report * , t#gfp_t ) 
hid_set_field int hid_set_field ( s#hid_field * , unsigned , t#__s32 ) 
hid_report_raw_event int hid_report_raw_event ( s#hid_device * , int , t#u8 * , int , int ) 
hid_input_report int hid_input_report ( s#hid_device * , int , t#u8 * , int , int ) 
hid_connect int hid_connect ( s#hid_device * , unsigned int ) 
hid_disconnect void hid_disconnect ( s#hid_device * ) 
hid_ignore extern t#bool hid_ignore ( s#hid_device * ) 
hid_add_device extern int hid_add_device ( s#hid_device * ) 
hid_allocate_device s#hid_device * hid_allocate_device ( void ) 
hid_destroy_device extern void hid_destroy_device ( s#hid_device * ) 
__hid_register_driver extern int __hid_register_driver ( s#hid_driver * , s#module * , const char * ) 
hid_unregister_driver extern void hid_unregister_driver ( s#hid_driver * ) 
hid_check_keys_pressed int hid_check_keys_pressed ( s#hid_device * ) 

/* drivers/hid/hid-debug.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module
s##writeback_control
s##kstatfs
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
hid_resolv_usage char * hid_resolv_usage ( unsigned , s#seq_file * ) 
s##device_private
s##sock
s##sysfs_dirent
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##input_mt
hid_dump_field void hid_dump_field ( s#hid_field * , int , s#seq_file * ) 
hid_dump_device void hid_dump_device ( s#hid_device * , s#seq_file * ) 
hid_debug_event void hid_debug_event ( s#hid_device * , char * ) 
hid_dump_report void hid_dump_report ( s#hid_device * , int , t#u8 * , int ) 
hid_dump_input void hid_dump_input ( s#hid_device * , s#hid_usage * , t#__s32 ) 

/* drivers/hid/hid-input.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##input_mt
hidinput_calc_abs_res t#__s32 hidinput_calc_abs_res ( const s#hid_field * , t#__u16 ) 
hidinput_report_event extern void hidinput_report_event ( s#hid_device * , s#hid_report * ) 
hidinput_find_field int hidinput_find_field ( s#hid_device * , unsigned int , unsigned int , s#hid_field * * ) 
hidinput_get_led_field s#hid_field * hidinput_get_led_field ( s#hid_device * ) 
hidinput_count_leds unsigned int hidinput_count_leds ( s#hid_device * ) 
hidinput_connect extern int hidinput_connect ( s#hid_device * , unsigned int ) 
hidinput_disconnect extern void hidinput_disconnect ( s#hid_device * ) 

/* drivers/hid/hid-roccat.o */
roccat_report_event int roccat_report_event ( int , t#u8 const * ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##input_mt
roccat_connect int roccat_connect ( s#class * , s#hid_device * , int ) 
roccat_disconnect void roccat_disconnect ( int ) 

/* drivers/hid/hid-roccat-common.o */
s##usb_tt
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##mon_bus
s##ep_device
s##wusb_dev
roccat_common2_receive int roccat_common2_receive ( s#usb_device * , t#uint , void * , t#uint ) 
roccat_common2_send int roccat_common2_send ( s#usb_device * , t#uint , void const * , t#uint ) 
roccat_common2_send_with_status int roccat_common2_send_with_status ( s#usb_device * , t#uint , void const * , t#uint ) 

/* drivers/hid/hid-sensor-hub.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##tvec_base
s##input_mt
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s#hid_sensor_hub_device struct hid_sensor_hub_device { s#hid_device * hdev ; t#u32 vendor_id ; t#u32 product_id ; } 
s#mfd_cell struct mfd_cell { const char * name ; int id ; t#atomic_t * usage_count ; int ( * enable ) ( s#platform_device * ) ; int ( * disable ) ( s#platform_device * ) ; int ( * suspend ) ( s#platform_device * ) ; int ( * resume ) ( s#platform_device * ) ; void * platform_data ; t#size_t pdata_size ; const char * of_compatible ; int num_resources ; const s#resource * resources ; t#bool ignore_resource_conflicts ; t#bool pm_runtime_no_callbacks ; } 
s#hid_sensor_hub_callbacks struct hid_sensor_hub_callbacks { s#platform_device * pdev ; int ( * suspend ) ( s#hid_sensor_hub_device * , void * ) ; int ( * resume ) ( s#hid_sensor_hub_device * , void * ) ; int ( * capture_sample ) ( s#hid_sensor_hub_device * , t#u32 , t#size_t , char * , void * ) ; int ( * send_event ) ( s#hid_sensor_hub_device * , t#u32 , void * ) ; } 
sensor_hub_register_callback int sensor_hub_register_callback ( s#hid_sensor_hub_device * , t#u32 , s#hid_sensor_hub_callbacks * ) 
sensor_hub_remove_callback int sensor_hub_remove_callback ( s#hid_sensor_hub_device * , t#u32 ) 
sensor_hub_set_feature int sensor_hub_set_feature ( s#hid_sensor_hub_device * , t#u32 , t#u32 , t#s32 ) 
sensor_hub_get_feature int sensor_hub_get_feature ( s#hid_sensor_hub_device * , t#u32 , t#u32 , t#s32 * ) 
sensor_hub_input_attr_get_raw_value int sensor_hub_input_attr_get_raw_value ( s#hid_sensor_hub_device * , t#u32 , t#u32 , t#u32 ) 
s#hid_sensor_hub_attribute_info struct hid_sensor_hub_attribute_info { t#u32 usage_id ; t#u32 attrib_id ; t#s32 report_id ; t#s32 index ; t#s32 units ; t#s32 unit_expo ; t#s32 size ; } 
sensor_hub_input_get_attribute_info int sensor_hub_input_get_attribute_info ( s#hid_sensor_hub_device * , t#u8 , t#u32 , t#u32 , s#hid_sensor_hub_attribute_info * ) 

/* drivers/hid/hidraw.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##tvec_base
s##input_mt
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
hidraw_report_event int hidraw_report_event ( s#hid_device * , t#u8 * , int ) 
hidraw_connect int hidraw_connect ( s#hid_device * ) 
hidraw_disconnect void hidraw_disconnect ( s#hid_device * ) 

/* drivers/hid/usbhid/hid-quirks.o */
usbhid_lookup_quirk t#u32 usbhid_lookup_quirk ( const t#u16 , const t#u16 ) 

/* drivers/hid/usbhid/hiddev.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##tvec_base
s##input_mt
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
hiddev_hid_event void hiddev_hid_event ( s#hid_device * , s#hid_field * , s#hid_usage * , t#__s32 ) 

/* drivers/hsi/hsi.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s#hsi_config struct hsi_config { unsigned int mode ; unsigned int channels ; unsigned int speed ; union { unsigned int flow ; unsigned int arb_mode ; } ; } 
s#hsi_client struct hsi_client { s#device device ; s#hsi_config tx_cfg ; s#hsi_config rx_cfg ; void ( * ehandler ) ( s#hsi_client * , unsigned long ) ; unsigned int pclaimed : 1 ; s#notifier_block nb ; } 
s#hsi_msg struct hsi_msg { s#list_head link ; s#hsi_client * cl ; s#sg_table sgt ; void * context ; void ( * complete ) ( s#hsi_msg * ) ; void ( * destructor ) ( s#hsi_msg * ) ; int status ; unsigned int actual_len ; unsigned int channel ; unsigned int ttype : 1 ; unsigned int break_frame : 1 ; } 
s#hsi_port struct hsi_port { s#device device ; s#hsi_config tx_cfg ; s#hsi_config rx_cfg ; unsigned int num ; unsigned int shared : 1 ; int claimed ; s#mutex lock ; int ( * async ) ( s#hsi_msg * ) ; int ( * setup ) ( s#hsi_client * ) ; int ( * flush ) ( s#hsi_client * ) ; int ( * start_tx ) ( s#hsi_client * ) ; int ( * stop_tx ) ( s#hsi_client * ) ; int ( * release ) ( s#hsi_client * ) ; s#atomic_notifier_head n_head ; } 
s#hsi_controller struct hsi_controller { s#device device ; s#module * owner ; unsigned int id ; unsigned int num_ports ; s#hsi_port * * port ; } 
hsi_unregister_controller void hsi_unregister_controller ( s#hsi_controller * ) 
hsi_register_controller int hsi_register_controller ( s#hsi_controller * ) 
s#hsi_client_driver struct hsi_client_driver { s#device_driver driver ; } 
hsi_register_client_driver int hsi_register_client_driver ( s#hsi_client_driver * ) 
hsi_put_controller void hsi_put_controller ( s#hsi_controller * ) 
hsi_alloc_controller s#hsi_controller * hsi_alloc_controller ( unsigned int , t#gfp_t ) 
hsi_free_msg void hsi_free_msg ( s#hsi_msg * ) 
hsi_alloc_msg s#hsi_msg * hsi_alloc_msg ( unsigned int , t#gfp_t ) 
hsi_async int hsi_async ( s#hsi_client * , s#hsi_msg * ) 
hsi_claim_port int hsi_claim_port ( s#hsi_client * , unsigned int ) 
hsi_release_port void hsi_release_port ( s#hsi_client * ) 
hsi_register_port_event int hsi_register_port_event ( s#hsi_client * , void ( * ) ( s#hsi_client * , unsigned long ) ) 
hsi_unregister_port_event int hsi_unregister_port_event ( s#hsi_client * ) 
hsi_event int hsi_event ( s#hsi_port * , unsigned long ) 

/* drivers/hsi/hsi_boardinfo.o */
hsi_board_list extern s#list_head hsi_board_list 

/* drivers/hwmon/adt7x10.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s#adt7x10_ops struct adt7x10_ops { int ( * read_byte ) ( s#device * , t#u8 ) ; int ( * write_byte ) ( s#device * , t#u8 , t#u8 ) ; int ( * read_word ) ( s#device * , t#u8 ) ; int ( * write_word ) ( s#device * , t#u8 , t#u16 ) ; } 
adt7x10_probe int adt7x10_probe ( s#device * , const char * , int , const s#adt7x10_ops * ) 
adt7x10_remove int adt7x10_remove ( s#device * , int ) 
adt7x10_dev_pm_ops extern const s#dev_pm_ops adt7x10_dev_pm_ops 

/* drivers/hwmon/hwmon.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
hwmon_device_register_with_groups s#device * hwmon_device_register_with_groups ( s#device * , const char * , void * , const s#attribute_group * * ) 
hwmon_device_register s#device * hwmon_device_register ( s#device * ) 
hwmon_device_unregister void hwmon_device_unregister ( s#device * ) 
devm_hwmon_device_register_with_groups s#device * devm_hwmon_device_register_with_groups ( s#device * , const char * , void * , const s#attribute_group * * ) 
devm_hwmon_device_unregister void devm_hwmon_device_unregister ( s#device * ) 

/* drivers/hwmon/hwmon-vid.o */
vid_from_reg int vid_from_reg ( int , t#u8 ) 
vid_which_vrm t#u8 vid_which_vrm ( void ) 

/* drivers/hwmon/pmbus/pmbus_core.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##proc_dir_entry
s##iommu_group
pmbus_clear_cache void pmbus_clear_cache ( s#i2c_client * ) 
pmbus_set_page int pmbus_set_page ( s#i2c_client * , t#u8 ) 
pmbus_write_byte int pmbus_write_byte ( s#i2c_client * , int , t#u8 ) 
pmbus_write_word_data int pmbus_write_word_data ( s#i2c_client * , t#u8 , t#u8 , t#u16 ) 
pmbus_read_word_data int pmbus_read_word_data ( s#i2c_client * , t#u8 , t#u8 ) 
pmbus_read_byte_data int pmbus_read_byte_data ( s#i2c_client * , int , t#u8 ) 
pmbus_clear_faults void pmbus_clear_faults ( s#i2c_client * ) 
pmbus_check_byte_register t#bool pmbus_check_byte_register ( s#i2c_client * , int , int ) 
pmbus_check_word_register t#bool pmbus_check_word_register ( s#i2c_client * , int , int ) 
e#pmbus_data_format enum pmbus_data_format { linear = 0 , direct , vid } 
E#PSC_NUM_CLASSES ( 0 ) + 7 
s#pmbus_driver_info struct pmbus_driver_info { int pages ; e#pmbus_data_format format [ E#PSC_NUM_CLASSES ] ; int m [ E#PSC_NUM_CLASSES ] ; int b [ E#PSC_NUM_CLASSES ] ; int R [ E#PSC_NUM_CLASSES ] ; t#u32 func [ 32 ] ; int ( * read_byte_data ) ( s#i2c_client * , int , int ) ; int ( * read_word_data ) ( s#i2c_client * , int , int ) ; int ( * write_word_data ) ( s#i2c_client * , int , int , t#u16 ) ; int ( * write_byte ) ( s#i2c_client * , int , t#u8 ) ; int ( * identify ) ( s#i2c_client * , s#pmbus_driver_info * ) ; } 
pmbus_get_driver_info const s#pmbus_driver_info * pmbus_get_driver_info ( s#i2c_client * ) 
pmbus_do_probe int pmbus_do_probe ( s#i2c_client * , const s#i2c_device_id * , s#pmbus_driver_info * ) 
pmbus_do_remove int pmbus_do_remove ( s#i2c_client * ) 

/* drivers/i2c/algos/i2c-algo-bit.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##proc_dir_entry
s##iommu_group
i2c_bit_algo extern const s#i2c_algorithm i2c_bit_algo 
i2c_bit_add_bus int i2c_bit_add_bus ( s#i2c_adapter * ) 
i2c_bit_add_numbered_bus int i2c_bit_add_numbered_bus ( s#i2c_adapter * ) 

/* drivers/i2c/i2c-boardinfo.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
__i2c_board_lock extern s#rw_semaphore __i2c_board_lock 
__i2c_board_list extern s#list_head __i2c_board_list 
__i2c_first_dynamic_bus_num extern int __i2c_first_dynamic_bus_num 

/* drivers/i2c/i2c-core.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##proc_dir_entry
s##subsys_private
s##iommu_group
s##iommu_ops
i2c_bus_type extern s#bus_type i2c_bus_type 
i2c_verify_client extern s#i2c_client * i2c_verify_client ( s#device * ) 
i2c_lock_adapter void i2c_lock_adapter ( s#i2c_adapter * ) 
i2c_unlock_adapter void i2c_unlock_adapter ( s#i2c_adapter * ) 
i2c_new_device extern s#i2c_client * i2c_new_device ( s#i2c_adapter * , s#i2c_board_info const * ) 
i2c_unregister_device extern void i2c_unregister_device ( s#i2c_client * ) 
i2c_new_dummy extern s#i2c_client * i2c_new_dummy ( s#i2c_adapter * , t#u16 ) 
i2c_adapter_type extern s#device_type i2c_adapter_type 
i2c_verify_adapter extern s#i2c_adapter * i2c_verify_adapter ( s#device * ) 
of_find_i2c_device_by_node extern s#i2c_client * of_find_i2c_device_by_node ( s#device_node * ) 
of_find_i2c_adapter_by_node extern s#i2c_adapter * of_find_i2c_adapter_by_node ( s#device_node * ) 
i2c_add_adapter extern int i2c_add_adapter ( s#i2c_adapter * ) 
i2c_add_numbered_adapter extern int i2c_add_numbered_adapter ( s#i2c_adapter * ) 
i2c_del_adapter extern void i2c_del_adapter ( s#i2c_adapter * ) 
i2c_for_each_dev int i2c_for_each_dev ( void * , int ( * ) ( s#device * , void * ) ) 
i2c_register_driver extern int i2c_register_driver ( s#module * , s#i2c_driver * ) 
i2c_del_driver extern void i2c_del_driver ( s#i2c_driver * ) 
i2c_use_client extern s#i2c_client * i2c_use_client ( s#i2c_client * ) 
i2c_release_client extern void i2c_release_client ( s#i2c_client * ) 
i2c_clients_command extern void i2c_clients_command ( s#i2c_adapter * , unsigned int , void * ) 
__i2c_transfer extern int __i2c_transfer ( s#i2c_adapter * , s#i2c_msg * , int ) 
i2c_transfer extern int i2c_transfer ( s#i2c_adapter * , s#i2c_msg * , int ) 
i2c_master_send extern int i2c_master_send ( const s#i2c_client * , const char * , int ) 
i2c_master_recv extern int i2c_master_recv ( const s#i2c_client * , char * , int ) 
i2c_probe_func_quick_read extern int i2c_probe_func_quick_read ( s#i2c_adapter * , unsigned short ) 
i2c_new_probed_device extern s#i2c_client * i2c_new_probed_device ( s#i2c_adapter * , s#i2c_board_info * , unsigned short const * , int ( * ) ( s#i2c_adapter * , unsigned short ) ) 
i2c_get_adapter extern s#i2c_adapter * i2c_get_adapter ( int ) 
i2c_put_adapter extern void i2c_put_adapter ( s#i2c_adapter * ) 
i2c_smbus_read_byte extern t#s32 i2c_smbus_read_byte ( const s#i2c_client * ) 
i2c_smbus_write_byte extern t#s32 i2c_smbus_write_byte ( const s#i2c_client * , t#u8 ) 
i2c_smbus_read_byte_data extern t#s32 i2c_smbus_read_byte_data ( const s#i2c_client * , t#u8 ) 
i2c_smbus_write_byte_data extern t#s32 i2c_smbus_write_byte_data ( const s#i2c_client * , t#u8 , t#u8 ) 
i2c_smbus_read_word_data extern t#s32 i2c_smbus_read_word_data ( const s#i2c_client * , t#u8 ) 
i2c_smbus_write_word_data extern t#s32 i2c_smbus_write_word_data ( const s#i2c_client * , t#u8 , t#u16 ) 
i2c_smbus_read_block_data extern t#s32 i2c_smbus_read_block_data ( const s#i2c_client * , t#u8 , t#u8 * ) 
i2c_smbus_write_block_data extern t#s32 i2c_smbus_write_block_data ( const s#i2c_client * , t#u8 , t#u8 , const t#u8 * ) 
i2c_smbus_read_i2c_block_data extern t#s32 i2c_smbus_read_i2c_block_data ( const s#i2c_client * , t#u8 , t#u8 , t#u8 * ) 
i2c_smbus_write_i2c_block_data extern t#s32 i2c_smbus_write_i2c_block_data ( const s#i2c_client * , t#u8 , t#u8 , const t#u8 * ) 
i2c_smbus_xfer extern t#s32 i2c_smbus_xfer ( s#i2c_adapter * , t#u16 , unsigned short , char , t#u8 , int , u#i2c_smbus_data * ) 

/* drivers/i2c/i2c-mux.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##proc_dir_entry
s##iommu_group
i2c_add_mux_adapter s#i2c_adapter * i2c_add_mux_adapter ( s#i2c_adapter * , s#device * , void * , t#u32 , t#u32 , unsigned int , int ( * ) ( s#i2c_adapter * , void * , t#u32 ) , int ( * ) ( s#i2c_adapter * , void * , t#u32 ) ) 
i2c_del_mux_adapter void i2c_del_mux_adapter ( s#i2c_adapter * ) 

/* drivers/infiniband/core/addr.o */
rdma_addr_size int rdma_addr_size ( s#sockaddr * ) 
s#rdma_addr_client struct rdma_addr_client { t#atomic_t refcount ; s#completion comp ; } 
rdma_addr_register_client void rdma_addr_register_client ( s#rdma_addr_client * ) 
rdma_addr_unregister_client void rdma_addr_unregister_client ( s#rdma_addr_client * ) 
e#rdma_transport_type enum rdma_transport_type { RDMA_TRANSPORT_IB , RDMA_TRANSPORT_IWARP , RDMA_TRANSPORT_USNIC , RDMA_TRANSPORT_USNIC_UDP } 
s#rdma_dev_addr struct rdma_dev_addr { unsigned char src_dev_addr [ 32 ] ; unsigned char dst_dev_addr [ 32 ] ; unsigned char broadcast [ 32 ] ; unsigned short dev_type ; int bound_dev_if ; e#rdma_transport_type transport ; } 
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
E#__IPV4_DEVCONF_MAX ( 1 ) + 28 
s#ipv4_devconf struct ipv4_devconf { void * sysctl ; int data [ ( E#__IPV4_DEVCONF_MAX - 1 ) ] ; unsigned long state [ ( ( ( ( E#__IPV4_DEVCONF_MAX - 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
s##fib_rules_ops
s##fib_table
s#inetpeer_addr_base struct inetpeer_addr_base { union { t#__be32 a4 ; t#__be32 a6 [ 4 ] ; } ; } 
s#inetpeer_addr struct inetpeer_addr { s#inetpeer_addr_base addr ; t#__u16 family ; } 
E#__RTAX_MAX 16 
s#inet_peer struct inet_peer { s#inet_peer * avl_left , * avl_right ; s#inetpeer_addr daddr ; t#__u32 avl_height ; t#u32 metrics [ ( E#__RTAX_MAX - 1 ) ] ; t#u32 rate_tokens ; unsigned long rate_last ; union { s#list_head gc_list ; s#callback_head gc_rcu ; } ; union { struct { t#atomic_t rid ; t#atomic_t ip_id_count ; } ; s#callback_head rcu ; s#inet_peer * gc_next ; } ; t#__u32 dtime ; t#atomic_t refcnt ; } 
s#inet_peer_base struct inet_peer_base { s#inet_peer * root ; t#seqlock_t lock ; t#u32 flush_seq ; int total ; } 
s##tcpm_hash_bucket
s##xt_table
s#ipv6_devconf struct ipv6_devconf { t#__s32 forwarding ; t#__s32 hop_limit ; t#__s32 mtu6 ; t#__s32 accept_ra ; t#__s32 accept_redirects ; t#__s32 autoconf ; t#__s32 dad_transmits ; t#__s32 rtr_solicits ; t#__s32 rtr_solicit_interval ; t#__s32 rtr_solicit_delay ; t#__s32 force_mld_version ; t#__s32 mldv1_unsolicited_report_interval ; t#__s32 mldv2_unsolicited_report_interval ; t#__s32 use_tempaddr ; t#__s32 temp_valid_lft ; t#__s32 temp_prefered_lft ; t#__s32 regen_max_retry ; t#__s32 max_desync_factor ; t#__s32 max_addresses ; t#__s32 accept_ra_defrtr ; t#__s32 accept_ra_pinfo ; t#__s32 accept_ra_rtr_pref ; t#__s32 rtr_probe_interval ; t#__s32 accept_ra_rt_info_max_plen ; t#__s32 proxy_ndp ; t#__s32 accept_source_route ; t#__s32 disable_ipv6 ; t#__s32 accept_dad ; t#__s32 force_tllao ; t#__s32 ndisc_notify ; t#__s32 suppress_frag_ndisc ; void * sysctl ; } 
s##tvec_base
s##workqueue_struct
s##xfrm_state
s#rtable struct rtable { s#dst_entry dst ; int rt_genid ; unsigned int rt_flags ; t#__u16 rt_type ; t#__u8 rt_is_input ; t#__u8 rt_uses_gateway ; int rt_iif ; t#__be32 rt_gateway ; t#u32 rt_pmtu ; s#list_head rt_uncached ; } 
s##dn_route
s#fib6_node struct fib6_node { s#fib6_node * parent ; s#fib6_node * left ; s#fib6_node * right ; s#fib6_node * subtree ; s#rt6_info * leaf ; t#__u16 fn_bit ; t#__u16 fn_flags ; t#__u32 fn_sernum ; s#rt6_info * rr_ptr ; } 
s#fib6_table struct fib6_table { s#hlist_node tb6_hlist ; t#u32 tb6_id ; t#rwlock_t tb6_lock ; s#fib6_node tb6_root ; s#inet_peer_base tb6_peers ; } 
s#in6_addr struct in6_addr { union { t#__u8 u6_addr8 [ 16 ] ; t#__be16 u6_addr16 [ 8 ] ; t#__be32 u6_addr32 [ 4 ] ; } in6_u ; } 
s#rt6key struct rt6key { s#in6_addr addr ; int plen ; } 
s#ip6_sf_list struct ip6_sf_list { s#ip6_sf_list * sf_next ; s#in6_addr sf_addr ; unsigned long sf_count [ 2 ] ; unsigned char sf_gsresp ; unsigned char sf_oldin ; unsigned char sf_crcount ; } 
s#ifmcaddr6 struct ifmcaddr6 { s#in6_addr mca_addr ; s#inet6_dev * idev ; s#ifmcaddr6 * next ; s#ip6_sf_list * mca_sources ; s#ip6_sf_list * mca_tomb ; unsigned int mca_sfmode ; unsigned char mca_crcount ; unsigned long mca_sfcount [ 2 ] ; s#timer_list mca_timer ; unsigned int mca_flags ; int mca_users ; t#atomic_t mca_refcnt ; t#spinlock_t mca_lock ; unsigned long mca_cstamp ; unsigned long mca_tstamp ; } 
s#ifacaddr6 struct ifacaddr6 { s#in6_addr aca_addr ; s#inet6_dev * aca_idev ; s#rt6_info * aca_rt ; s#ifacaddr6 * aca_next ; int aca_users ; t#atomic_t aca_refcnt ; t#spinlock_t aca_lock ; unsigned long aca_cstamp ; unsigned long aca_tstamp ; } 
s#icmpv6_mib_device struct icmpv6_mib_device { t#atomic_long_t mibs [ E#__ICMP6_MIB_MAX ] ; } 
s#icmpv6msg_mib_device struct icmpv6msg_mib_device { t#atomic_long_t mibs [ 512 ] ; } 
s#ipv6_devstat struct ipv6_devstat { s#proc_dir_entry * proc_dir_entry ; __typeof__ ( s#ipstats_mib ) * ipv6 [ 1 ] ; __typeof__ ( s#icmpv6_mib_device ) * icmpv6dev ; __typeof__ ( s#icmpv6msg_mib_device ) * icmpv6msgdev ; } 
s#inet6_dev struct inet6_dev { s#net_device * dev ; s#list_head addr_list ; int valid_ll_addr_cnt ; s#ifmcaddr6 * mc_list ; s#ifmcaddr6 * mc_tomb ; t#spinlock_t mc_lock ; unsigned char mc_qrv ; unsigned char mc_gq_running ; unsigned char mc_ifc_count ; unsigned char mc_dad_count ; unsigned long mc_v1_seen ; unsigned long mc_qi ; unsigned long mc_qri ; unsigned long mc_maxdelay ; s#timer_list mc_gq_timer ; s#timer_list mc_ifc_timer ; s#timer_list mc_dad_timer ; s#ifacaddr6 * ac_list ; t#rwlock_t lock ; t#atomic_t refcnt ; t#__u32 if_flags ; int dead ; t#u8 rndid [ 8 ] ; s#timer_list regen_timer ; s#list_head tempaddr_list ; s#in6_addr token ; s#neigh_parms * nd_parms ; s#ipv6_devconf cnf ; s#ipv6_devstat stats ; s#timer_list rs_timer ; t#__u8 rs_probes ; unsigned long tstamp ; s#callback_head rcu ; } 
s#rt6_info struct rt6_info { s#dst_entry dst ; s#fib6_table * rt6i_table ; s#fib6_node * rt6i_node ; s#in6_addr rt6i_gateway ; s#list_head rt6i_siblings ; unsigned int rt6i_nsiblings ; t#atomic_t rt6i_ref ; s#rt6key rt6i_dst __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; t#u32 rt6i_flags ; s#rt6key rt6i_src ; s#rt6key rt6i_prefsrc ; t#u32 rt6i_metric ; s#inet6_dev * rt6i_idev ; unsigned long _rt6i_peer ; t#u32 rt6i_genid ; unsigned short rt6i_nfheader_len ; t#u8 rt6i_protocol ; } 
s#rt6_statistics struct rt6_statistics { t#__u32 fib_nodes ; t#__u32 fib_route_nodes ; t#__u32 fib_rt_alloc ; t#__u32 fib_rt_entries ; t#__u32 fib_rt_cache ; t#__u32 fib_discarded_routes ; } 
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s#request_sock struct request_sock { s#request_sock * dl_next ; t#u16 mss ; t#u8 num_retrans ; t#u8 cookie_ts : 1 ; t#u8 num_timeout : 7 ; t#u32 window_clamp ; t#u32 rcv_wnd ; t#u32 ts_recent ; unsigned long expires ; const s#request_sock_ops * rsk_ops ; s#sock * sk ; t#u32 secid ; t#u32 peer_secid ; } 
s#request_sock_ops struct request_sock_ops { int family ; int obj_size ; s#kmem_cache * slab ; char * slab_name ; int ( * rtx_syn_ack ) ( s#sock * , s#request_sock * ) ; void ( * send_ack ) ( s#sock * , s#sk_buff * , s#request_sock * ) ; void ( * send_reset ) ( s#sock * , s#sk_buff * ) ; void ( * destructor ) ( s#request_sock * ) ; void ( * syn_ack_timeout ) ( s#sock * , s#request_sock * ) ; } 
s#timewait_sock_ops struct timewait_sock_ops { s#kmem_cache * twsk_slab ; char * twsk_slab_name ; unsigned int twsk_obj_size ; int ( * twsk_unique ) ( s#sock * , s#sock * , void * ) ; void ( * twsk_destructor ) ( s#sock * ) ; } 
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s#in_ifaddr struct in_ifaddr { s#hlist_node hash ; s#in_ifaddr * ifa_next ; s#in_device * ifa_dev ; s#callback_head callback_head ; t#__be32 ifa_local ; t#__be32 ifa_address ; t#__be32 ifa_mask ; t#__be32 ifa_broadcast ; unsigned char ifa_scope ; unsigned char ifa_flags ; unsigned char ifa_prefixlen ; char ifa_label [ 16 ] ; t#__u32 ifa_valid_lft ; t#__u32 ifa_preferred_lft ; unsigned long ifa_cstamp ; unsigned long ifa_tstamp ; } 
s##ip_mc_list
s#in_device struct in_device { s#net_device * dev ; t#atomic_t refcnt ; int dead ; s#in_ifaddr * ifa_list ; s#ip_mc_list * mc_list ; s#ip_mc_list * * mc_hash ; int mc_count ; t#spinlock_t mc_tomb_lock ; s#ip_mc_list * mc_tomb ; unsigned long mr_v1_seen ; unsigned long mr_v2_seen ; unsigned long mr_maxdelay ; unsigned char mr_qrv ; unsigned char mr_gq_running ; unsigned char mr_ifc_count ; s#timer_list mr_gq_timer ; s#timer_list mr_ifc_timer ; s#neigh_parms * arp_parms ; s#ipv4_devconf cnf ; s#callback_head callback_head ; } 
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
rdma_copy_addr int rdma_copy_addr ( s#rdma_dev_addr * , s#net_device * , const unsigned char * ) 
rdma_translate_ip int rdma_translate_ip ( s#sockaddr * , s#rdma_dev_addr * , t#u16 * ) 
rdma_resolve_ip int rdma_resolve_ip ( s#rdma_addr_client * , s#sockaddr * , s#sockaddr * , s#rdma_dev_addr * , int , void ( * ) ( int , s#sockaddr * , s#rdma_dev_addr * , void * ) , void * ) 
rdma_addr_cancel void rdma_addr_cancel ( s#rdma_dev_addr * ) 
u#ib_gid union ib_gid { t#u8 raw [ 16 ] ; struct { t#__be64 subnet_prefix ; t#__be64 interface_id ; } global ; } 
rdma_addr_find_dmac_by_grh int rdma_addr_find_dmac_by_grh ( u#ib_gid * , u#ib_gid * , t#u8 * , t#u16 * ) 
rdma_addr_find_smac_by_sgid int rdma_addr_find_smac_by_sgid ( u#ib_gid * , t#u8 * , t#u16 * ) 

/* drivers/infiniband/core/cache.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s#ib_ucontext struct ib_ucontext { s#ib_device * device ; s#list_head pd_list ; s#list_head mr_list ; s#list_head mw_list ; s#list_head cq_list ; s#list_head qp_list ; s#list_head srq_list ; s#list_head ah_list ; s#list_head xrcd_list ; s#list_head rule_list ; int closing ; } 
s#ib_uobject struct ib_uobject { t#u64 user_handle ; s#ib_ucontext * context ; void * object ; s#list_head list ; int id ; s#kref ref ; s#rw_semaphore mutex ; int live ; } 
t#ib_comp_handler typedef void ( * ib_comp_handler ) ( s#ib_cq * , void * ) 
s#ib_cq struct ib_cq { s#ib_device * device ; s#ib_uobject * uobject ; t#ib_comp_handler comp_handler ; void ( * event_handler ) ( s#ib_event * , void * ) ; void * cq_context ; int cqe ; t#atomic_t usecnt ; } 
s#ib_pd struct ib_pd { s#ib_device * device ; s#ib_uobject * uobject ; t#atomic_t usecnt ; } 
e#ib_srq_type enum ib_srq_type { IB_SRQT_BASIC , IB_SRQT_XRC } 
s##inode
s#ib_xrcd struct ib_xrcd { s#ib_device * device ; t#atomic_t usecnt ; s#inode * inode ; s#mutex tgt_qp_mutex ; s#list_head tgt_qp_list ; } 
s#ib_srq struct ib_srq { s#ib_device * device ; s#ib_pd * pd ; s#ib_uobject * uobject ; void ( * event_handler ) ( s#ib_event * , void * ) ; void * srq_context ; e#ib_srq_type srq_type ; t#atomic_t usecnt ; union { struct { s#ib_xrcd * xrcd ; s#ib_cq * cq ; t#u32 srq_num ; } xrc ; } ext ; } 
e#ib_qp_type enum ib_qp_type { IB_QPT_SMI , IB_QPT_GSI , IB_QPT_RC , IB_QPT_UC , IB_QPT_UD , IB_QPT_RAW_IPV6 , IB_QPT_RAW_ETHERTYPE , IB_QPT_RAW_PACKET = 8 , IB_QPT_XRC_INI = 9 , IB_QPT_XRC_TGT , IB_QPT_MAX , IB_QPT_RESERVED1 = 0x1000 , IB_QPT_RESERVED2 , IB_QPT_RESERVED3 , IB_QPT_RESERVED4 , IB_QPT_RESERVED5 , IB_QPT_RESERVED6 , IB_QPT_RESERVED7 , IB_QPT_RESERVED8 , IB_QPT_RESERVED9 , IB_QPT_RESERVED10 , } 
s#ib_qp struct ib_qp { s#ib_device * device ; s#ib_pd * pd ; s#ib_cq * send_cq ; s#ib_cq * recv_cq ; s#ib_srq * srq ; s#ib_xrcd * xrcd ; s#list_head xrcd_list ; t#atomic_t usecnt ; s#list_head open_list ; s#ib_qp * real_qp ; s#ib_uobject * uobject ; void ( * event_handler ) ( s#ib_event * , void * ) ; void * qp_context ; t#u32 qp_num ; e#ib_qp_type qp_type ; } 
e#ib_event_type enum ib_event_type { IB_EVENT_CQ_ERR , IB_EVENT_QP_FATAL , IB_EVENT_QP_REQ_ERR , IB_EVENT_QP_ACCESS_ERR , IB_EVENT_COMM_EST , IB_EVENT_SQ_DRAINED , IB_EVENT_PATH_MIG , IB_EVENT_PATH_MIG_ERR , IB_EVENT_DEVICE_FATAL , IB_EVENT_PORT_ACTIVE , IB_EVENT_PORT_ERR , IB_EVENT_LID_CHANGE , IB_EVENT_PKEY_CHANGE , IB_EVENT_SM_CHANGE , IB_EVENT_SRQ_ERR , IB_EVENT_SRQ_LIMIT_REACHED , IB_EVENT_QP_LAST_WQE_REACHED , IB_EVENT_CLIENT_REREGISTER , IB_EVENT_GID_CHANGE , } 
s#ib_event struct ib_event { s#ib_device * device ; union { s#ib_cq * cq ; s#ib_qp * qp ; s#ib_srq * srq ; t#u8 port_num ; } element ; e#ib_event_type event ; } 
s#ib_event_handler struct ib_event_handler { s#ib_device * device ; void ( * handler ) ( s#ib_event_handler * , s#ib_event * ) ; s#list_head list ; } 
s##ib_pkey_cache
s##ib_gid_cache
s#ib_cache struct ib_cache { t#rwlock_t lock ; s#ib_event_handler event_handler ; s#ib_pkey_cache * * pkey_cache ; s#ib_gid_cache * * gid_cache ; t#u8 * lmc_cache ; } 
s##iw_cm_verbs
s#ib_protocol_stats struct ib_protocol_stats { } 
s#iw_protocol_stats struct iw_protocol_stats { t#u64 ipInReceives ; t#u64 ipInHdrErrors ; t#u64 ipInTooBigErrors ; t#u64 ipInNoRoutes ; t#u64 ipInAddrErrors ; t#u64 ipInUnknownProtos ; t#u64 ipInTruncatedPkts ; t#u64 ipInDiscards ; t#u64 ipInDelivers ; t#u64 ipOutForwDatagrams ; t#u64 ipOutRequests ; t#u64 ipOutDiscards ; t#u64 ipOutNoRoutes ; t#u64 ipReasmTimeout ; t#u64 ipReasmReqds ; t#u64 ipReasmOKs ; t#u64 ipReasmFails ; t#u64 ipFragOKs ; t#u64 ipFragFails ; t#u64 ipFragCreates ; t#u64 ipInMcastPkts ; t#u64 ipOutMcastPkts ; t#u64 ipInBcastPkts ; t#u64 ipOutBcastPkts ; t#u64 tcpRtoAlgorithm ; t#u64 tcpRtoMin ; t#u64 tcpRtoMax ; t#u64 tcpMaxConn ; t#u64 tcpActiveOpens ; t#u64 tcpPassiveOpens ; t#u64 tcpAttemptFails ; t#u64 tcpEstabResets ; t#u64 tcpCurrEstab ; t#u64 tcpInSegs ; t#u64 tcpOutSegs ; t#u64 tcpRetransSegs ; t#u64 tcpInErrs ; t#u64 tcpOutRsts ; } 
u#rdma_protocol_stats union rdma_protocol_stats { s#ib_protocol_stats ib ; s#iw_protocol_stats iw ; } 
e#ib_atomic_cap enum ib_atomic_cap { IB_ATOMIC_NONE , IB_ATOMIC_HCA , IB_ATOMIC_GLOB } 
s#ib_device_attr struct ib_device_attr { t#u64 fw_ver ; t#__be64 sys_image_guid ; t#u64 max_mr_size ; t#u64 page_size_cap ; t#u32 vendor_id ; t#u32 vendor_part_id ; t#u32 hw_ver ; int max_qp ; int max_qp_wr ; int device_cap_flags ; int max_sge ; int max_sge_rd ; int max_cq ; int max_cqe ; int max_mr ; int max_pd ; int max_qp_rd_atom ; int max_ee_rd_atom ; int max_res_rd_atom ; int max_qp_init_rd_atom ; int max_ee_init_rd_atom ; e#ib_atomic_cap atomic_cap ; e#ib_atomic_cap masked_atomic_cap ; int max_ee ; int max_rdd ; int max_mw ; int max_raw_ipv6_qp ; int max_raw_ethy_qp ; int max_mcast_grp ; int max_mcast_qp_attach ; int max_total_mcast_qp_attach ; int max_ah ; int max_fmr ; int max_map_per_fmr ; int max_srq ; int max_srq_wr ; int max_srq_sge ; unsigned int max_fast_reg_page_list_len ; t#u16 max_pkeys ; t#u8 local_ca_ack_delay ; int sig_prot_cap ; int sig_guard_cap ; } 
e#ib_port_state enum ib_port_state { IB_PORT_NOP = 0 , IB_PORT_DOWN = 1 , IB_PORT_INIT = 2 , IB_PORT_ARMED = 3 , IB_PORT_ACTIVE = 4 , IB_PORT_ACTIVE_DEFER = 5 } 
e#ib_mtu enum ib_mtu { IB_MTU_256 = 1 , IB_MTU_512 = 2 , IB_MTU_1024 = 3 , IB_MTU_2048 = 4 , IB_MTU_4096 = 5 } 
s#ib_port_attr struct ib_port_attr { e#ib_port_state state ; e#ib_mtu max_mtu ; e#ib_mtu active_mtu ; int gid_tbl_len ; t#u32 port_cap_flags ; t#u32 max_msg_sz ; t#u32 bad_pkey_cntr ; t#u32 qkey_viol_cntr ; t#u16 pkey_tbl_len ; t#u16 lid ; t#u16 sm_lid ; t#u8 lmc ; t#u8 max_vl_num ; t#u8 sm_sl ; t#u8 subnet_timeout ; t#u8 init_type_reply ; t#u8 active_width ; t#u8 active_speed ; t#u8 phys_state ; } 
e#rdma_link_layer enum rdma_link_layer { IB_LINK_LAYER_UNSPECIFIED , IB_LINK_LAYER_INFINIBAND , IB_LINK_LAYER_ETHERNET , } 
s#ib_device_modify struct ib_device_modify { t#u64 sys_image_guid ; char node_desc [ 64 ] ; } 
s#ib_port_modify struct ib_port_modify { t#u32 set_port_cap_mask ; t#u32 clr_port_cap_mask ; t#u8 init_type ; } 
s#ib_udata struct ib_udata { void * inbuf ; void * outbuf ; t#size_t inlen ; t#size_t outlen ; } 
s#ib_ah struct ib_ah { s#ib_device * device ; s#ib_pd * pd ; s#ib_uobject * uobject ; } 
s#ib_global_route struct ib_global_route { u#ib_gid dgid ; t#u32 flow_label ; t#u8 sgid_index ; t#u8 hop_limit ; t#u8 traffic_class ; } 
s#ib_ah_attr struct ib_ah_attr { s#ib_global_route grh ; t#u16 dlid ; t#u8 sl ; t#u8 src_path_bits ; t#u8 static_rate ; t#u8 ah_flags ; t#u8 port_num ; t#u8 dmac [ 6 ] ; t#u16 vlan_id ; } 
s#ib_srq_attr struct ib_srq_attr { t#u32 max_wr ; t#u32 max_sge ; t#u32 srq_limit ; } 
s#ib_srq_init_attr struct ib_srq_init_attr { void ( * event_handler ) ( s#ib_event * , void * ) ; void * srq_context ; s#ib_srq_attr attr ; e#ib_srq_type srq_type ; union { struct { s#ib_xrcd * xrcd ; s#ib_cq * cq ; } xrc ; } ext ; } 
e#ib_srq_attr_mask enum ib_srq_attr_mask { IB_SRQ_MAX_WR = 1 << 0 , IB_SRQ_LIMIT = 1 << 1 , } 
s#ib_sge struct ib_sge { t#u64 addr ; t#u32 length ; t#u32 lkey ; } 
s#ib_recv_wr struct ib_recv_wr { s#ib_recv_wr * next ; t#u64 wr_id ; s#ib_sge * sg_list ; int num_sge ; } 
s#ib_qp_cap struct ib_qp_cap { t#u32 max_send_wr ; t#u32 max_recv_wr ; t#u32 max_send_sge ; t#u32 max_recv_sge ; t#u32 max_inline_data ; } 
e#ib_sig_type enum ib_sig_type { IB_SIGNAL_ALL_WR , IB_SIGNAL_REQ_WR } 
e#ib_qp_create_flags enum ib_qp_create_flags { IB_QP_CREATE_IPOIB_UD_LSO = 1 << 0 , IB_QP_CREATE_BLOCK_MULTICAST_LOOPBACK = 1 << 1 , IB_QP_CREATE_NETIF_QP = 1 << 5 , IB_QP_CREATE_SIGNATURE_EN = 1 << 6 , IB_QP_CREATE_RESERVED_START = 1 << 26 , IB_QP_CREATE_RESERVED_END = 1 << 31 , } 
s#ib_qp_init_attr struct ib_qp_init_attr { void ( * event_handler ) ( s#ib_event * , void * ) ; void * qp_context ; s#ib_cq * send_cq ; s#ib_cq * recv_cq ; s#ib_srq * srq ; s#ib_xrcd * xrcd ; s#ib_qp_cap cap ; e#ib_sig_type sq_sig_type ; e#ib_qp_type qp_type ; e#ib_qp_create_flags create_flags ; t#u8 port_num ; } 
e#ib_qp_state enum ib_qp_state { IB_QPS_RESET , IB_QPS_INIT , IB_QPS_RTR , IB_QPS_RTS , IB_QPS_SQD , IB_QPS_SQE , IB_QPS_ERR } 
e#ib_mig_state enum ib_mig_state { IB_MIG_MIGRATED , IB_MIG_REARM , IB_MIG_ARMED } 
s#ib_qp_attr struct ib_qp_attr { e#ib_qp_state qp_state ; e#ib_qp_state cur_qp_state ; e#ib_mtu path_mtu ; e#ib_mig_state path_mig_state ; t#u32 qkey ; t#u32 rq_psn ; t#u32 sq_psn ; t#u32 dest_qp_num ; int qp_access_flags ; s#ib_qp_cap cap ; s#ib_ah_attr ah_attr ; s#ib_ah_attr alt_ah_attr ; t#u16 pkey_index ; t#u16 alt_pkey_index ; t#u8 en_sqd_async_notify ; t#u8 sq_draining ; t#u8 max_rd_atomic ; t#u8 max_dest_rd_atomic ; t#u8 min_rnr_timer ; t#u8 port_num ; t#u8 timeout ; t#u8 retry_cnt ; t#u8 rnr_retry ; t#u8 alt_port_num ; t#u8 alt_timeout ; t#u8 smac [ 6 ] ; t#u8 alt_smac [ 6 ] ; t#u16 vlan_id ; t#u16 alt_vlan_id ; } 
e#ib_wr_opcode enum ib_wr_opcode { IB_WR_RDMA_WRITE , IB_WR_RDMA_WRITE_WITH_IMM , IB_WR_SEND , IB_WR_SEND_WITH_IMM , IB_WR_RDMA_READ , IB_WR_ATOMIC_CMP_AND_SWP , IB_WR_ATOMIC_FETCH_AND_ADD , IB_WR_LSO , IB_WR_SEND_WITH_INV , IB_WR_RDMA_READ_WITH_INV , IB_WR_LOCAL_INV , IB_WR_FAST_REG_MR , IB_WR_MASKED_ATOMIC_CMP_AND_SWP , IB_WR_MASKED_ATOMIC_FETCH_AND_ADD , IB_WR_BIND_MW , IB_WR_REG_SIG_MR , IB_WR_RESERVED1 = 0xf0 , IB_WR_RESERVED2 , IB_WR_RESERVED3 , IB_WR_RESERVED4 , IB_WR_RESERVED5 , IB_WR_RESERVED6 , IB_WR_RESERVED7 , IB_WR_RESERVED8 , IB_WR_RESERVED9 , IB_WR_RESERVED10 , } 
s#ib_fast_reg_page_list struct ib_fast_reg_page_list { s#ib_device * device ; t#u64 * page_list ; unsigned int max_page_list_len ; } 
e#ib_mw_type enum ib_mw_type { IB_MW_TYPE_1 = 1 , IB_MW_TYPE_2 = 2 } 
s#ib_mw struct ib_mw { s#ib_device * device ; s#ib_pd * pd ; s#ib_uobject * uobject ; t#u32 rkey ; e#ib_mw_type type ; } 
s#ib_mr struct ib_mr { s#ib_device * device ; s#ib_pd * pd ; s#ib_uobject * uobject ; t#u32 lkey ; t#u32 rkey ; t#atomic_t usecnt ; } 
s#ib_mw_bind_info struct ib_mw_bind_info { s#ib_mr * mr ; t#u64 addr ; t#u64 length ; int mw_access_flags ; } 
e#ib_signature_type enum ib_signature_type { IB_SIG_TYPE_T10_DIF , } 
e#ib_t10_dif_type enum ib_t10_dif_type { IB_T10DIF_NONE , IB_T10DIF_TYPE1 , IB_T10DIF_TYPE2 , IB_T10DIF_TYPE3 } 
e#ib_t10_dif_bg_type enum ib_t10_dif_bg_type { IB_T10DIF_CRC , IB_T10DIF_CSUM } 
s#ib_t10_dif_domain struct ib_t10_dif_domain { e#ib_t10_dif_type type ; e#ib_t10_dif_bg_type bg_type ; t#u16 pi_interval ; t#u16 bg ; t#u16 app_tag ; t#u32 ref_tag ; t#bool type3_inc_reftag ; } 
s#ib_sig_domain struct ib_sig_domain { e#ib_signature_type sig_type ; union { s#ib_t10_dif_domain dif ; } sig ; } 
s#ib_sig_attrs struct ib_sig_attrs { t#u8 check_mask ; s#ib_sig_domain mem ; s#ib_sig_domain wire ; } 
s#ib_send_wr struct ib_send_wr { s#ib_send_wr * next ; t#u64 wr_id ; s#ib_sge * sg_list ; int num_sge ; e#ib_wr_opcode opcode ; int send_flags ; union { t#__be32 imm_data ; t#u32 invalidate_rkey ; } ex ; union { struct { t#u64 remote_addr ; t#u32 rkey ; } rdma ; struct { t#u64 remote_addr ; t#u64 compare_add ; t#u64 swap ; t#u64 compare_add_mask ; t#u64 swap_mask ; t#u32 rkey ; } atomic ; struct { s#ib_ah * ah ; void * header ; int hlen ; int mss ; t#u32 remote_qpn ; t#u32 remote_qkey ; t#u16 pkey_index ; t#u8 port_num ; } ud ; struct { t#u64 iova_start ; s#ib_fast_reg_page_list * page_list ; unsigned int page_shift ; unsigned int page_list_len ; t#u32 length ; int access_flags ; t#u32 rkey ; } fast_reg ; struct { s#ib_mw * mw ; t#u32 rkey ; s#ib_mw_bind_info bind_info ; } bind_mw ; struct { s#ib_sig_attrs * sig_attrs ; s#ib_mr * sig_mr ; int access_flags ; s#ib_sge * prot ; } sig_handover ; } wr ; t#u32 xrc_remote_srq_num ; } 
e#ib_wc_status enum ib_wc_status { IB_WC_SUCCESS , IB_WC_LOC_LEN_ERR , IB_WC_LOC_QP_OP_ERR , IB_WC_LOC_EEC_OP_ERR , IB_WC_LOC_PROT_ERR , IB_WC_WR_FLUSH_ERR , IB_WC_MW_BIND_ERR , IB_WC_BAD_RESP_ERR , IB_WC_LOC_ACCESS_ERR , IB_WC_REM_INV_REQ_ERR , IB_WC_REM_ACCESS_ERR , IB_WC_REM_OP_ERR , IB_WC_RETRY_EXC_ERR , IB_WC_RNR_RETRY_EXC_ERR , IB_WC_LOC_RDD_VIOL_ERR , IB_WC_REM_INV_RD_REQ_ERR , IB_WC_REM_ABORT_ERR , IB_WC_INV_EECN_ERR , IB_WC_INV_EEC_STATE_ERR , IB_WC_FATAL_ERR , IB_WC_RESP_TIMEOUT_ERR , IB_WC_GENERAL_ERR } 
e#ib_wc_opcode enum ib_wc_opcode { IB_WC_SEND , IB_WC_RDMA_WRITE , IB_WC_RDMA_READ , IB_WC_COMP_SWAP , IB_WC_FETCH_ADD , IB_WC_BIND_MW , IB_WC_LSO , IB_WC_LOCAL_INV , IB_WC_FAST_REG_MR , IB_WC_MASKED_COMP_SWAP , IB_WC_MASKED_FETCH_ADD , IB_WC_RECV = 1 << 7 , IB_WC_RECV_RDMA_WITH_IMM } 
s#ib_wc struct ib_wc { t#u64 wr_id ; e#ib_wc_status status ; e#ib_wc_opcode opcode ; t#u32 vendor_err ; t#u32 byte_len ; s#ib_qp * qp ; union { t#__be32 imm_data ; t#u32 invalidate_rkey ; } ex ; t#u32 src_qp ; int wc_flags ; t#u16 pkey_index ; t#u16 slid ; t#u8 sl ; t#u8 dlid_path_bits ; t#u8 port_num ; t#u8 smac [ 6 ] ; t#u16 vlan_id ; } 
E#IB_CQ_SOLICITED 1 << 0 
E#IB_CQ_NEXT_COMP 1 << 1 
e#ib_cq_notify_flags enum ib_cq_notify_flags { IB_CQ_SOLICITED = 1 << 0 , IB_CQ_NEXT_COMP = 1 << 1 , IB_CQ_SOLICITED_MASK = E#IB_CQ_SOLICITED | E#IB_CQ_NEXT_COMP , IB_CQ_REPORT_MISSED_EVENTS = 1 << 2 , } 
s#ib_phys_buf struct ib_phys_buf { t#u64 addr ; t#u64 size ; } 
s#ib_mr_attr struct ib_mr_attr { s#ib_pd * pd ; t#u64 device_virt_addr ; t#u64 size ; int mr_access_flags ; t#u32 lkey ; t#u32 rkey ; } 
s#ib_mr_init_attr struct ib_mr_init_attr { int max_reg_descriptors ; t#u32 flags ; } 
s#ib_mw_bind struct ib_mw_bind { t#u64 wr_id ; int send_flags ; s#ib_mw_bind_info bind_info ; } 
s#ib_fmr struct ib_fmr { s#ib_device * device ; s#ib_pd * pd ; s#list_head list ; t#u32 lkey ; t#u32 rkey ; } 
s#ib_fmr_attr struct ib_fmr_attr { int max_pages ; int max_maps ; t#u8 page_shift ; } 
s#ib_grh struct ib_grh { t#__be32 version_tclass_flow ; t#__be16 paylen ; t#u8 next_hdr ; t#u8 hop_limit ; u#ib_gid sgid ; u#ib_gid dgid ; } 
s##ib_mad
s#ib_flow struct ib_flow { s#ib_qp * qp ; s#ib_uobject * uobject ; } 
e#ib_flow_attr_type enum ib_flow_attr_type { IB_FLOW_ATTR_NORMAL = 0x0 , IB_FLOW_ATTR_ALL_DEFAULT = 0x1 , IB_FLOW_ATTR_MC_DEFAULT = 0x2 , IB_FLOW_ATTR_SNIFFER = 0x3 } 
s#ib_flow_attr struct ib_flow_attr { e#ib_flow_attr_type type ; t#u16 size ; t#u16 priority ; t#u32 flags ; t#u8 num_of_specs ; t#u8 port ; } 
e#ib_sig_err_type enum ib_sig_err_type { IB_SIG_BAD_GUARD , IB_SIG_BAD_REFTAG , IB_SIG_BAD_APPTAG , } 
s#ib_sig_err struct ib_sig_err { e#ib_sig_err_type err_type ; t#u32 expected ; t#u32 actual ; t#u64 sig_err_offset ; t#u32 key ; } 
s#ib_mr_status struct ib_mr_status { t#u32 fail_status ; s#ib_sig_err sig_err ; } 
s#ib_dma_mapping_ops struct ib_dma_mapping_ops { int ( * mapping_error ) ( s#ib_device * , t#u64 ) ; t#u64 ( * map_single ) ( s#ib_device * , void * , t#size_t , e#dma_data_direction ) ; void ( * unmap_single ) ( s#ib_device * , t#u64 , t#size_t , e#dma_data_direction ) ; t#u64 ( * map_page ) ( s#ib_device * , s#page * , unsigned long , t#size_t , e#dma_data_direction ) ; void ( * unmap_page ) ( s#ib_device * , t#u64 , t#size_t , e#dma_data_direction ) ; int ( * map_sg ) ( s#ib_device * , s#scatterlist * , int , e#dma_data_direction ) ; void ( * unmap_sg ) ( s#ib_device * , s#scatterlist * , int , e#dma_data_direction ) ; t#u64 ( * dma_address ) ( s#ib_device * , s#scatterlist * ) ; unsigned int ( * dma_len ) ( s#ib_device * , s#scatterlist * ) ; void ( * sync_single_for_cpu ) ( s#ib_device * , t#u64 , t#size_t , e#dma_data_direction ) ; void ( * sync_single_for_device ) ( s#ib_device * , t#u64 , t#size_t , e#dma_data_direction ) ; void * ( * alloc_coherent ) ( s#ib_device * , t#size_t , t#u64 * , t#gfp_t ) ; void ( * free_coherent ) ( s#ib_device * , t#size_t , void * , t#u64 ) ; } 
s#ib_device struct ib_device { s#device * dma_device ; char name [ 64 ] ; s#list_head event_handler_list ; t#spinlock_t event_handler_lock ; t#spinlock_t client_data_lock ; s#list_head core_list ; s#list_head client_data_list ; s#ib_cache cache ; int * pkey_tbl_len ; int * gid_tbl_len ; int num_comp_vectors ; s#iw_cm_verbs * iwcm ; int ( * get_protocol_stats ) ( s#ib_device * , u#rdma_protocol_stats * ) ; int ( * query_device ) ( s#ib_device * , s#ib_device_attr * ) ; int ( * query_port ) ( s#ib_device * , t#u8 , s#ib_port_attr * ) ; e#rdma_link_layer ( * get_link_layer ) ( s#ib_device * , t#u8 ) ; int ( * query_gid ) ( s#ib_device * , t#u8 , int , u#ib_gid * ) ; int ( * query_pkey ) ( s#ib_device * , t#u8 , t#u16 , t#u16 * ) ; int ( * modify_device ) ( s#ib_device * , int , s#ib_device_modify * ) ; int ( * modify_port ) ( s#ib_device * , t#u8 , int , s#ib_port_modify * ) ; s#ib_ucontext * ( * alloc_ucontext ) ( s#ib_device * , s#ib_udata * ) ; int ( * dealloc_ucontext ) ( s#ib_ucontext * ) ; int ( * mmap ) ( s#ib_ucontext * , s#vm_area_struct * ) ; s#ib_pd * ( * alloc_pd ) ( s#ib_device * , s#ib_ucontext * , s#ib_udata * ) ; int ( * dealloc_pd ) ( s#ib_pd * ) ; s#ib_ah * ( * create_ah ) ( s#ib_pd * , s#ib_ah_attr * ) ; int ( * modify_ah ) ( s#ib_ah * , s#ib_ah_attr * ) ; int ( * query_ah ) ( s#ib_ah * , s#ib_ah_attr * ) ; int ( * destroy_ah ) ( s#ib_ah * ) ; s#ib_srq * ( * create_srq ) ( s#ib_pd * , s#ib_srq_init_attr * , s#ib_udata * ) ; int ( * modify_srq ) ( s#ib_srq * , s#ib_srq_attr * , e#ib_srq_attr_mask , s#ib_udata * ) ; int ( * query_srq ) ( s#ib_srq * , s#ib_srq_attr * ) ; int ( * destroy_srq ) ( s#ib_srq * ) ; int ( * post_srq_recv ) ( s#ib_srq * , s#ib_recv_wr * , s#ib_recv_wr * * ) ; s#ib_qp * ( * create_qp ) ( s#ib_pd * , s#ib_qp_init_attr * , s#ib_udata * ) ; int ( * modify_qp ) ( s#ib_qp * , s#ib_qp_attr * , int , s#ib_udata * ) ; int ( * query_qp ) ( s#ib_qp * , s#ib_qp_attr * , int , s#ib_qp_init_attr * ) ; int ( * destroy_qp ) ( s#ib_qp * ) ; int ( * post_send ) ( s#ib_qp * , s#ib_send_wr * , s#ib_send_wr * * ) ; int ( * post_recv ) ( s#ib_qp * , s#ib_recv_wr * , s#ib_recv_wr * * ) ; s#ib_cq * ( * create_cq ) ( s#ib_device * , int , int , s#ib_ucontext * , s#ib_udata * ) ; int ( * modify_cq ) ( s#ib_cq * , t#u16 , t#u16 ) ; int ( * destroy_cq ) ( s#ib_cq * ) ; int ( * resize_cq ) ( s#ib_cq * , int , s#ib_udata * ) ; int ( * poll_cq ) ( s#ib_cq * , int , s#ib_wc * ) ; int ( * peek_cq ) ( s#ib_cq * , int ) ; int ( * req_notify_cq ) ( s#ib_cq * , e#ib_cq_notify_flags ) ; int ( * req_ncomp_notif ) ( s#ib_cq * , int ) ; s#ib_mr * ( * get_dma_mr ) ( s#ib_pd * , int ) ; s#ib_mr * ( * reg_phys_mr ) ( s#ib_pd * , s#ib_phys_buf * , int , int , t#u64 * ) ; s#ib_mr * ( * reg_user_mr ) ( s#ib_pd * , t#u64 , t#u64 , t#u64 , int , s#ib_udata * ) ; int ( * query_mr ) ( s#ib_mr * , s#ib_mr_attr * ) ; int ( * dereg_mr ) ( s#ib_mr * ) ; int ( * destroy_mr ) ( s#ib_mr * ) ; s#ib_mr * ( * create_mr ) ( s#ib_pd * , s#ib_mr_init_attr * ) ; s#ib_mr * ( * alloc_fast_reg_mr ) ( s#ib_pd * , int ) ; s#ib_fast_reg_page_list * ( * alloc_fast_reg_page_list ) ( s#ib_device * , int ) ; void ( * free_fast_reg_page_list ) ( s#ib_fast_reg_page_list * ) ; int ( * rereg_phys_mr ) ( s#ib_mr * , int , s#ib_pd * , s#ib_phys_buf * , int , int , t#u64 * ) ; s#ib_mw * ( * alloc_mw ) ( s#ib_pd * , e#ib_mw_type ) ; int ( * bind_mw ) ( s#ib_qp * , s#ib_mw * , s#ib_mw_bind * ) ; int ( * dealloc_mw ) ( s#ib_mw * ) ; s#ib_fmr * ( * alloc_fmr ) ( s#ib_pd * , int , s#ib_fmr_attr * ) ; int ( * map_phys_fmr ) ( s#ib_fmr * , t#u64 * , int , t#u64 ) ; int ( * unmap_fmr ) ( s#list_head * ) ; int ( * dealloc_fmr ) ( s#ib_fmr * ) ; int ( * attach_mcast ) ( s#ib_qp * , u#ib_gid * , t#u16 ) ; int ( * detach_mcast ) ( s#ib_qp * , u#ib_gid * , t#u16 ) ; int ( * process_mad ) ( s#ib_device * , int , t#u8 , s#ib_wc * , s#ib_grh * , s#ib_mad * , s#ib_mad * ) ; s#ib_xrcd * ( * alloc_xrcd ) ( s#ib_device * , s#ib_ucontext * , s#ib_udata * ) ; int ( * dealloc_xrcd ) ( s#ib_xrcd * ) ; s#ib_flow * ( * create_flow ) ( s#ib_qp * , s#ib_flow_attr * , int ) ; int ( * destroy_flow ) ( s#ib_flow * ) ; int ( * check_mr_status ) ( s#ib_mr * , t#u32 , s#ib_mr_status * ) ; s#ib_dma_mapping_ops * dma_ops ; s#module * owner ; s#device dev ; s#kobject * ports_parent ; s#list_head port_list ; enum { IB_DEV_UNINITIALIZED , IB_DEV_REGISTERED , IB_DEV_UNREGISTERED } reg_state ; int uverbs_abi_ver ; t#u64 uverbs_cmd_mask ; t#u64 uverbs_ex_cmd_mask ; char node_desc [ 64 ] ; t#__be64 node_guid ; t#u32 local_dma_lkey ; t#u8 node_type ; t#u8 phys_port_cnt ; } 
ib_get_cached_gid int ib_get_cached_gid ( s#ib_device * , t#u8 , int , u#ib_gid * ) 
ib_find_cached_gid int ib_find_cached_gid ( s#ib_device * , u#ib_gid * , t#u8 * , t#u16 * ) 
ib_get_cached_pkey int ib_get_cached_pkey ( s#ib_device * , t#u8 , int , t#u16 * ) 
ib_find_cached_pkey int ib_find_cached_pkey ( s#ib_device * , t#u8 , t#u16 , t#u16 * ) 
ib_find_exact_cached_pkey int ib_find_exact_cached_pkey ( s#ib_device * , t#u8 , t#u16 , t#u16 * ) 
ib_get_cached_lmc int ib_get_cached_lmc ( s#ib_device * , t#u8 , t#u8 * ) 

/* drivers/infiniband/core/cm.o */
e#ib_cm_event_type enum ib_cm_event_type { IB_CM_REQ_ERROR , IB_CM_REQ_RECEIVED , IB_CM_REP_ERROR , IB_CM_REP_RECEIVED , IB_CM_RTU_RECEIVED , IB_CM_USER_ESTABLISHED , IB_CM_DREQ_ERROR , IB_CM_DREQ_RECEIVED , IB_CM_DREP_RECEIVED , IB_CM_TIMEWAIT_EXIT , IB_CM_MRA_RECEIVED , IB_CM_REJ_RECEIVED , IB_CM_LAP_ERROR , IB_CM_LAP_RECEIVED , IB_CM_APR_RECEIVED , IB_CM_SIDR_REQ_ERROR , IB_CM_SIDR_REQ_RECEIVED , IB_CM_SIDR_REP_RECEIVED } 
s#ib_sa_path_rec struct ib_sa_path_rec { t#__be64 service_id ; u#ib_gid dgid ; u#ib_gid sgid ; t#__be16 dlid ; t#__be16 slid ; int raw_traffic ; t#__be32 flow_label ; t#u8 hop_limit ; t#u8 traffic_class ; int reversible ; t#u8 numb_path ; t#__be16 pkey ; t#__be16 qos_class ; t#u8 sl ; t#u8 mtu_selector ; t#u8 mtu ; t#u8 rate_selector ; t#u8 rate ; t#u8 packet_life_time_selector ; t#u8 packet_life_time ; t#u8 preference ; t#u8 smac [ 6 ] ; t#u8 dmac [ 6 ] ; t#u16 vlan_id ; } 
s#ib_cm_req_event_param struct ib_cm_req_event_param { s#ib_cm_id * listen_id ; t#u8 port ; s#ib_sa_path_rec * primary_path ; s#ib_sa_path_rec * alternate_path ; t#__be64 remote_ca_guid ; t#u32 remote_qkey ; t#u32 remote_qpn ; e#ib_qp_type qp_type ; t#u32 starting_psn ; t#u8 responder_resources ; t#u8 initiator_depth ; unsigned int local_cm_response_timeout : 5 ; unsigned int flow_control : 1 ; unsigned int remote_cm_response_timeout : 5 ; unsigned int retry_count : 3 ; unsigned int rnr_retry_count : 3 ; unsigned int srq : 1 ; } 
s#ib_cm_rep_event_param struct ib_cm_rep_event_param { t#__be64 remote_ca_guid ; t#u32 remote_qkey ; t#u32 remote_qpn ; t#u32 starting_psn ; t#u8 responder_resources ; t#u8 initiator_depth ; unsigned int target_ack_delay : 5 ; unsigned int failover_accepted : 2 ; unsigned int flow_control : 1 ; unsigned int rnr_retry_count : 3 ; unsigned int srq : 1 ; } 
e#ib_cm_rej_reason enum ib_cm_rej_reason { IB_CM_REJ_NO_QP = 1 , IB_CM_REJ_NO_EEC = 2 , IB_CM_REJ_NO_RESOURCES = 3 , IB_CM_REJ_TIMEOUT = 4 , IB_CM_REJ_UNSUPPORTED = 5 , IB_CM_REJ_INVALID_COMM_ID = 6 , IB_CM_REJ_INVALID_COMM_INSTANCE = 7 , IB_CM_REJ_INVALID_SERVICE_ID = 8 , IB_CM_REJ_INVALID_TRANSPORT_TYPE = 9 , IB_CM_REJ_STALE_CONN = 10 , IB_CM_REJ_RDC_NOT_EXIST = 11 , IB_CM_REJ_INVALID_GID = 12 , IB_CM_REJ_INVALID_LID = 13 , IB_CM_REJ_INVALID_SL = 14 , IB_CM_REJ_INVALID_TRAFFIC_CLASS = 15 , IB_CM_REJ_INVALID_HOP_LIMIT = 16 , IB_CM_REJ_INVALID_PACKET_RATE = 17 , IB_CM_REJ_INVALID_ALT_GID = 18 , IB_CM_REJ_INVALID_ALT_LID = 19 , IB_CM_REJ_INVALID_ALT_SL = 20 , IB_CM_REJ_INVALID_ALT_TRAFFIC_CLASS = 21 , IB_CM_REJ_INVALID_ALT_HOP_LIMIT = 22 , IB_CM_REJ_INVALID_ALT_PACKET_RATE = 23 , IB_CM_REJ_PORT_CM_REDIRECT = 24 , IB_CM_REJ_PORT_REDIRECT = 25 , IB_CM_REJ_INVALID_MTU = 26 , IB_CM_REJ_INSUFFICIENT_RESP_RESOURCES = 27 , IB_CM_REJ_CONSUMER_DEFINED = 28 , IB_CM_REJ_INVALID_RNR_RETRY = 29 , IB_CM_REJ_DUPLICATE_LOCAL_COMM_ID = 30 , IB_CM_REJ_INVALID_CLASS_VERSION = 31 , IB_CM_REJ_INVALID_FLOW_LABEL = 32 , IB_CM_REJ_INVALID_ALT_FLOW_LABEL = 33 } 
s#ib_cm_rej_event_param struct ib_cm_rej_event_param { e#ib_cm_rej_reason reason ; void * ari ; t#u8 ari_length ; } 
s#ib_cm_mra_event_param struct ib_cm_mra_event_param { t#u8 service_timeout ; } 
s#ib_cm_lap_event_param struct ib_cm_lap_event_param { s#ib_sa_path_rec * alternate_path ; } 
e#ib_cm_apr_status enum ib_cm_apr_status { IB_CM_APR_SUCCESS , IB_CM_APR_INVALID_COMM_ID , IB_CM_APR_UNSUPPORTED , IB_CM_APR_REJECT , IB_CM_APR_REDIRECT , IB_CM_APR_IS_CURRENT , IB_CM_APR_INVALID_QPN_EECN , IB_CM_APR_INVALID_LID , IB_CM_APR_INVALID_GID , IB_CM_APR_INVALID_FLOW_LABEL , IB_CM_APR_INVALID_TCLASS , IB_CM_APR_INVALID_HOP_LIMIT , IB_CM_APR_INVALID_PACKET_RATE , IB_CM_APR_INVALID_SL } 
s#ib_cm_apr_event_param struct ib_cm_apr_event_param { e#ib_cm_apr_status ap_status ; void * apr_info ; t#u8 info_len ; } 
s#ib_cm_sidr_req_event_param struct ib_cm_sidr_req_event_param { s#ib_cm_id * listen_id ; t#u8 port ; t#u16 pkey ; } 
e#ib_cm_sidr_status enum ib_cm_sidr_status { IB_SIDR_SUCCESS , IB_SIDR_UNSUPPORTED , IB_SIDR_REJECT , IB_SIDR_NO_QP , IB_SIDR_REDIRECT , IB_SIDR_UNSUPPORTED_VERSION } 
s#ib_cm_sidr_rep_event_param struct ib_cm_sidr_rep_event_param { e#ib_cm_sidr_status status ; t#u32 qkey ; t#u32 qpn ; void * info ; t#u8 info_len ; } 
s#ib_cm_event struct ib_cm_event { e#ib_cm_event_type event ; union { s#ib_cm_req_event_param req_rcvd ; s#ib_cm_rep_event_param rep_rcvd ; s#ib_cm_rej_event_param rej_rcvd ; s#ib_cm_mra_event_param mra_rcvd ; s#ib_cm_lap_event_param lap_rcvd ; s#ib_cm_apr_event_param apr_rcvd ; s#ib_cm_sidr_req_event_param sidr_req_rcvd ; s#ib_cm_sidr_rep_event_param sidr_rep_rcvd ; e#ib_wc_status send_status ; } param ; void * private_data ; } 
t#ib_cm_handler typedef int ( * ib_cm_handler ) ( s#ib_cm_id * , s#ib_cm_event * ) 
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s#ib_mad_hdr struct ib_mad_hdr { t#u8 base_version ; t#u8 mgmt_class ; t#u8 class_version ; t#u8 method ; t#__be16 status ; t#__be16 class_specific ; t#__be64 tid ; t#__be16 attr_id ; t#__be16 resv ; t#__be32 attr_mod ; } 
E#IB_MGMT_MAD_DATA 232 
s#ib_mad struct ib_mad { s#ib_mad_hdr mad_hdr ; t#u8 data [ E#IB_MGMT_MAD_DATA ] ; } 
e#ib_cm_state enum ib_cm_state { IB_CM_IDLE , IB_CM_LISTEN , IB_CM_REQ_SENT , IB_CM_REQ_RCVD , IB_CM_MRA_REQ_SENT , IB_CM_MRA_REQ_RCVD , IB_CM_REP_SENT , IB_CM_REP_RCVD , IB_CM_MRA_REP_SENT , IB_CM_MRA_REP_RCVD , IB_CM_ESTABLISHED , IB_CM_DREQ_SENT , IB_CM_DREQ_RCVD , IB_CM_TIMEWAIT , IB_CM_SIDR_REQ_SENT , IB_CM_SIDR_REQ_RCVD } 
e#ib_cm_lap_state enum ib_cm_lap_state { IB_CM_LAP_UNINIT , IB_CM_LAP_IDLE , IB_CM_LAP_SENT , IB_CM_LAP_RCVD , IB_CM_MRA_LAP_SENT , IB_CM_MRA_LAP_RCVD , } 
s#ib_cm_id struct ib_cm_id { t#ib_cm_handler cm_handler ; void * context ; s#ib_device * device ; t#__be64 service_id ; t#__be64 service_mask ; e#ib_cm_state state ; e#ib_cm_lap_state lap_state ; t#__be32 local_id ; t#__be32 remote_id ; t#u32 remote_cm_qpn ; } 
ib_create_cm_id s#ib_cm_id * ib_create_cm_id ( s#ib_device * , t#ib_cm_handler , void * ) 
ib_destroy_cm_id void ib_destroy_cm_id ( s#ib_cm_id * ) 
E#IB_CM_COMPARE_SIZE 64 
s#ib_cm_compare_data struct ib_cm_compare_data { t#u8 data [ E#IB_CM_COMPARE_SIZE ] ; t#u8 mask [ E#IB_CM_COMPARE_SIZE ] ; } 
ib_cm_listen int ib_cm_listen ( s#ib_cm_id * , t#__be64 , t#__be64 , s#ib_cm_compare_data * ) 
s#ib_cm_req_param struct ib_cm_req_param { s#ib_sa_path_rec * primary_path ; s#ib_sa_path_rec * alternate_path ; t#__be64 service_id ; t#u32 qp_num ; e#ib_qp_type qp_type ; t#u32 starting_psn ; const void * private_data ; t#u8 private_data_len ; t#u8 peer_to_peer ; t#u8 responder_resources ; t#u8 initiator_depth ; t#u8 remote_cm_response_timeout ; t#u8 flow_control ; t#u8 local_cm_response_timeout ; t#u8 retry_count ; t#u8 rnr_retry_count ; t#u8 max_cm_retries ; t#u8 srq ; } 
ib_send_cm_req int ib_send_cm_req ( s#ib_cm_id * , s#ib_cm_req_param * ) 
s#ib_cm_rep_param struct ib_cm_rep_param { t#u32 qp_num ; t#u32 starting_psn ; const void * private_data ; t#u8 private_data_len ; t#u8 responder_resources ; t#u8 initiator_depth ; t#u8 failover_accepted ; t#u8 flow_control ; t#u8 rnr_retry_count ; t#u8 srq ; } 
ib_send_cm_rep int ib_send_cm_rep ( s#ib_cm_id * , s#ib_cm_rep_param * ) 
ib_send_cm_rtu int ib_send_cm_rtu ( s#ib_cm_id * , const void * , t#u8 ) 
ib_send_cm_dreq int ib_send_cm_dreq ( s#ib_cm_id * , const void * , t#u8 ) 
ib_send_cm_drep int ib_send_cm_drep ( s#ib_cm_id * , const void * , t#u8 ) 
ib_send_cm_rej int ib_send_cm_rej ( s#ib_cm_id * , e#ib_cm_rej_reason , void * , t#u8 , const void * , t#u8 ) 
ib_send_cm_mra int ib_send_cm_mra ( s#ib_cm_id * , t#u8 , const void * , t#u8 ) 
ib_send_cm_lap int ib_send_cm_lap ( s#ib_cm_id * , s#ib_sa_path_rec * , const void * , t#u8 ) 
ib_send_cm_apr int ib_send_cm_apr ( s#ib_cm_id * , e#ib_cm_apr_status , void * , t#u8 , const void * , t#u8 ) 
s#ib_cm_sidr_req_param struct ib_cm_sidr_req_param { s#ib_sa_path_rec * path ; t#__be64 service_id ; int timeout_ms ; const void * private_data ; t#u8 private_data_len ; t#u8 max_cm_retries ; } 
ib_send_cm_sidr_req int ib_send_cm_sidr_req ( s#ib_cm_id * , s#ib_cm_sidr_req_param * ) 
s#ib_cm_sidr_rep_param struct ib_cm_sidr_rep_param { t#u32 qp_num ; t#u32 qkey ; e#ib_cm_sidr_status status ; const void * info ; t#u8 info_length ; const void * private_data ; t#u8 private_data_len ; } 
ib_send_cm_sidr_rep int ib_send_cm_sidr_rep ( s#ib_cm_id * , s#ib_cm_sidr_rep_param * ) 
ib_cm_notify int ib_cm_notify ( s#ib_cm_id * , e#ib_event_type ) 
ib_cm_init_qp_attr int ib_cm_init_qp_attr ( s#ib_cm_id * , s#ib_qp_attr * , int * ) 
cm_class extern s#class cm_class 

/* drivers/infiniband/core/cma.o */
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##ip_mc_list
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s#inet_ehash_bucket struct inet_ehash_bucket { s#hlist_nulls_head chain ; s#hlist_nulls_head twchain ; } 
s#inet_bind_hashbucket struct inet_bind_hashbucket { t#spinlock_t lock ; s#hlist_head chain ; } 
s#inet_listen_hashbucket struct inet_listen_hashbucket { t#spinlock_t lock ; s#hlist_nulls_head head ; } 
s#inet_hashinfo struct inet_hashinfo { s#inet_ehash_bucket * ehash ; t#spinlock_t * ehash_locks ; unsigned int ehash_mask ; unsigned int ehash_locks_mask ; s#inet_bind_hashbucket * bhash ; unsigned int bhash_size ; s#kmem_cache * bind_bucket_cachep ; s#inet_listen_hashbucket listening_hash [ 32 ] __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; t#atomic_t bsockets ; } 
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##ib_pkey_cache
s##ib_gid_cache
e#iw_cm_event_type enum iw_cm_event_type { IW_CM_EVENT_CONNECT_REQUEST = 1 , IW_CM_EVENT_CONNECT_REPLY , IW_CM_EVENT_ESTABLISHED , IW_CM_EVENT_DISCONNECT , IW_CM_EVENT_CLOSE } 
s#__kernel_sockaddr_storage struct __kernel_sockaddr_storage { t#__kernel_sa_family_t ss_family ; char __data [ 128 - sizeof ( unsigned short ) ] ; } 
s#iw_cm_event struct iw_cm_event { e#iw_cm_event_type event ; int status ; s#__kernel_sockaddr_storage local_addr ; s#__kernel_sockaddr_storage remote_addr ; void * private_data ; void * provider_data ; t#u8 private_data_len ; t#u8 ord ; t#u8 ird ; } 
t#iw_cm_handler typedef int ( * iw_cm_handler ) ( s#iw_cm_id * , s#iw_cm_event * ) 
t#iw_event_handler typedef int ( * iw_event_handler ) ( s#iw_cm_id * , s#iw_cm_event * ) 
s#iw_cm_id struct iw_cm_id { t#iw_cm_handler cm_handler ; void * context ; s#ib_device * device ; s#__kernel_sockaddr_storage local_addr ; s#__kernel_sockaddr_storage remote_addr ; void * provider_data ; t#iw_event_handler event_handler ; void ( * add_ref ) ( s#iw_cm_id * ) ; void ( * rem_ref ) ( s#iw_cm_id * ) ; } 
s#iw_cm_conn_param struct iw_cm_conn_param { const void * private_data ; t#u16 private_data_len ; t#u32 ord ; t#u32 ird ; t#u32 qpn ; } 
s#iw_cm_verbs struct iw_cm_verbs { void ( * add_ref ) ( s#ib_qp * ) ; void ( * rem_ref ) ( s#ib_qp * ) ; s#ib_qp * ( * get_qp ) ( s#ib_device * , int ) ; int ( * connect ) ( s#iw_cm_id * , s#iw_cm_conn_param * ) ; int ( * accept ) ( s#iw_cm_id * , s#iw_cm_conn_param * ) ; int ( * reject ) ( s#iw_cm_id * , const void * , t#u8 ) ; int ( * create_listen ) ( s#iw_cm_id * , int ) ; int ( * destroy_listen ) ( s#iw_cm_id * ) ; } 
e#rdma_cm_event_type enum rdma_cm_event_type { RDMA_CM_EVENT_ADDR_RESOLVED , RDMA_CM_EVENT_ADDR_ERROR , RDMA_CM_EVENT_ROUTE_RESOLVED , RDMA_CM_EVENT_ROUTE_ERROR , RDMA_CM_EVENT_CONNECT_REQUEST , RDMA_CM_EVENT_CONNECT_RESPONSE , RDMA_CM_EVENT_CONNECT_ERROR , RDMA_CM_EVENT_UNREACHABLE , RDMA_CM_EVENT_REJECTED , RDMA_CM_EVENT_ESTABLISHED , RDMA_CM_EVENT_DISCONNECTED , RDMA_CM_EVENT_DEVICE_REMOVAL , RDMA_CM_EVENT_MULTICAST_JOIN , RDMA_CM_EVENT_MULTICAST_ERROR , RDMA_CM_EVENT_ADDR_CHANGE , RDMA_CM_EVENT_TIMEWAIT_EXIT } 
s#rdma_conn_param struct rdma_conn_param { const void * private_data ; t#u8 private_data_len ; t#u8 responder_resources ; t#u8 initiator_depth ; t#u8 flow_control ; t#u8 retry_count ; t#u8 rnr_retry_count ; t#u8 srq ; t#u32 qp_num ; t#u32 qkey ; } 
s#rdma_ud_param struct rdma_ud_param { const void * private_data ; t#u8 private_data_len ; s#ib_ah_attr ah_attr ; t#u32 qp_num ; t#u32 qkey ; } 
s#rdma_cm_event struct rdma_cm_event { e#rdma_cm_event_type event ; int status ; union { s#rdma_conn_param conn ; s#rdma_ud_param ud ; } param ; } 
t#rdma_cm_event_handler typedef int ( * rdma_cm_event_handler ) ( s#rdma_cm_id * , s#rdma_cm_event * ) 
s#rdma_addr struct rdma_addr { s#__kernel_sockaddr_storage src_addr ; s#__kernel_sockaddr_storage dst_addr ; s#rdma_dev_addr dev_addr ; } 
s#rdma_route struct rdma_route { s#rdma_addr addr ; s#ib_sa_path_rec * path_rec ; int num_paths ; } 
e#rdma_port_space enum rdma_port_space { RDMA_PS_SDP = 0x0001 , RDMA_PS_IPOIB = 0x0002 , RDMA_PS_IB = 0x013F , RDMA_PS_TCP = 0x0106 , RDMA_PS_UDP = 0x0111 , } 
s#rdma_cm_id struct rdma_cm_id { s#ib_device * device ; void * context ; s#ib_qp * qp ; t#rdma_cm_event_handler event_handler ; s#rdma_route route ; e#rdma_port_space ps ; e#ib_qp_type qp_type ; t#u8 port_num ; } 
rdma_create_id s#rdma_cm_id * rdma_create_id ( t#rdma_cm_event_handler , void * , e#rdma_port_space , e#ib_qp_type ) 
rdma_create_qp int rdma_create_qp ( s#rdma_cm_id * , s#ib_pd * , s#ib_qp_init_attr * ) 
rdma_destroy_qp void rdma_destroy_qp ( s#rdma_cm_id * ) 
rdma_init_qp_attr int rdma_init_qp_attr ( s#rdma_cm_id * , s#ib_qp_attr * , int * ) 
rdma_destroy_id void rdma_destroy_id ( s#rdma_cm_id * ) 
rdma_get_service_id t#__be64 rdma_get_service_id ( s#rdma_cm_id * , s#sockaddr * ) 
rdma_set_service_type void rdma_set_service_type ( s#rdma_cm_id * , int ) 
rdma_set_ib_paths int rdma_set_ib_paths ( s#rdma_cm_id * , s#ib_sa_path_rec * , int ) 
rdma_resolve_route int rdma_resolve_route ( s#rdma_cm_id * , int ) 
rdma_resolve_addr int rdma_resolve_addr ( s#rdma_cm_id * , s#sockaddr * , s#sockaddr * , int ) 
rdma_set_reuseaddr int rdma_set_reuseaddr ( s#rdma_cm_id * , int ) 
rdma_set_afonly int rdma_set_afonly ( s#rdma_cm_id * , int ) 
rdma_listen int rdma_listen ( s#rdma_cm_id * , int ) 
rdma_bind_addr int rdma_bind_addr ( s#rdma_cm_id * , s#sockaddr * ) 
rdma_connect int rdma_connect ( s#rdma_cm_id * , s#rdma_conn_param * ) 
rdma_accept int rdma_accept ( s#rdma_cm_id * , s#rdma_conn_param * ) 
rdma_notify int rdma_notify ( s#rdma_cm_id * , e#ib_event_type ) 
rdma_reject int rdma_reject ( s#rdma_cm_id * , const void * , t#u8 ) 
rdma_disconnect int rdma_disconnect ( s#rdma_cm_id * ) 
rdma_join_multicast int rdma_join_multicast ( s#rdma_cm_id * , s#sockaddr * , void * ) 
rdma_leave_multicast void rdma_leave_multicast ( s#rdma_cm_id * , s#sockaddr * ) 

/* drivers/infiniband/core/device.o */
s##workqueue_struct
ib_wq extern s#workqueue_struct * ib_wq 
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##inode
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##ib_mad
ib_alloc_device s#ib_device * ib_alloc_device ( t#size_t ) 
ib_dealloc_device void ib_dealloc_device ( s#ib_device * ) 
ib_register_device int ib_register_device ( s#ib_device * , int ( * ) ( s#ib_device * , t#u8 , s#kobject * ) ) 
ib_unregister_device void ib_unregister_device ( s#ib_device * ) 
s#ib_client struct ib_client { char * name ; void ( * add ) ( s#ib_device * ) ; void ( * remove ) ( s#ib_device * ) ; s#list_head list ; } 
ib_register_client int ib_register_client ( s#ib_client * ) 
ib_unregister_client void ib_unregister_client ( s#ib_client * ) 
ib_get_client_data void * ib_get_client_data ( s#ib_device * , s#ib_client * ) 
ib_set_client_data void ib_set_client_data ( s#ib_device * , s#ib_client * , void * ) 
ib_register_event_handler int ib_register_event_handler ( s#ib_event_handler * ) 
ib_unregister_event_handler int ib_unregister_event_handler ( s#ib_event_handler * ) 
ib_dispatch_event void ib_dispatch_event ( s#ib_event * ) 
ib_query_device int ib_query_device ( s#ib_device * , s#ib_device_attr * ) 
ib_query_port int ib_query_port ( s#ib_device * , t#u8 , s#ib_port_attr * ) 
ib_query_gid int ib_query_gid ( s#ib_device * , t#u8 , int , u#ib_gid * ) 
ib_query_pkey int ib_query_pkey ( s#ib_device * , t#u8 , t#u16 , t#u16 * ) 
ib_modify_device int ib_modify_device ( s#ib_device * , int , s#ib_device_modify * ) 
ib_modify_port int ib_modify_port ( s#ib_device * , t#u8 , int , s#ib_port_modify * ) 
ib_find_gid int ib_find_gid ( s#ib_device * , u#ib_gid * , t#u8 * , t#u16 * ) 
ib_find_pkey int ib_find_pkey ( s#ib_device * , t#u8 , t#u16 , t#u16 * ) 

/* drivers/infiniband/core/fmr_pool.o */
s##ib_fmr_pool
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##inode
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##ib_mad
e#ib_access_flags enum ib_access_flags { IB_ACCESS_LOCAL_WRITE = 1 , IB_ACCESS_REMOTE_WRITE = ( 1 << 1 ) , IB_ACCESS_REMOTE_READ = ( 1 << 2 ) , IB_ACCESS_REMOTE_ATOMIC = ( 1 << 3 ) , IB_ACCESS_MW_BIND = ( 1 << 4 ) , IB_ZERO_BASED = ( 1 << 5 ) } 
s#ib_fmr_pool_param struct ib_fmr_pool_param { int max_pages_per_fmr ; int page_shift ; e#ib_access_flags access ; int pool_size ; int dirty_watermark ; void ( * flush_function ) ( s#ib_fmr_pool * , void * ) ; void * flush_arg ; unsigned cache : 1 ; } 
ib_create_fmr_pool s#ib_fmr_pool * ib_create_fmr_pool ( s#ib_pd * , s#ib_fmr_pool_param * ) 
ib_destroy_fmr_pool void ib_destroy_fmr_pool ( s#ib_fmr_pool * ) 
ib_flush_fmr_pool int ib_flush_fmr_pool ( s#ib_fmr_pool * ) 
s#ib_pool_fmr struct ib_pool_fmr { s#ib_fmr * fmr ; s#ib_fmr_pool * pool ; s#list_head list ; s#hlist_node cache_node ; int ref_count ; int remap_count ; t#u64 io_virtual_address ; int page_list_len ; t#u64 page_list [ 0 ] ; } 
ib_fmr_pool_map_phys s#ib_pool_fmr * ib_fmr_pool_map_phys ( s#ib_fmr_pool * , t#u64 * , int , t#u64 ) 
ib_fmr_pool_unmap int ib_fmr_pool_unmap ( s#ib_pool_fmr * ) 

/* drivers/infiniband/core/iwcm.o */
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##ip_mc_list
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##ib_pkey_cache
s##ib_gid_cache
iw_create_cm_id s#iw_cm_id * iw_create_cm_id ( s#ib_device * , t#iw_cm_handler , void * ) 
iw_cm_disconnect int iw_cm_disconnect ( s#iw_cm_id * , int ) 
iw_destroy_cm_id void iw_destroy_cm_id ( s#iw_cm_id * ) 
iw_cm_listen int iw_cm_listen ( s#iw_cm_id * , int ) 
iw_cm_reject int iw_cm_reject ( s#iw_cm_id * , const void * , t#u8 ) 
iw_cm_accept int iw_cm_accept ( s#iw_cm_id * , s#iw_cm_conn_param * ) 
iw_cm_connect int iw_cm_connect ( s#iw_cm_id * , s#iw_cm_conn_param * ) 
iw_cm_init_qp_attr int iw_cm_init_qp_attr ( s#iw_cm_id * , s#ib_qp_attr * , int * ) 

/* drivers/infiniband/core/mad.o */
ib_response_mad int ib_response_mad ( s#ib_mad * ) 
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##inode
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s#ib_mad_recv_buf struct ib_mad_recv_buf { s#list_head list ; s#ib_grh * grh ; s#ib_mad * mad ; } 
s#ib_mad_recv_wc struct ib_mad_recv_wc { s#ib_wc * wc ; s#ib_mad_recv_buf recv_buf ; s#list_head rmpp_list ; int mad_len ; } 
t#ib_mad_recv_handler typedef void ( * ib_mad_recv_handler ) ( s#ib_mad_agent * , s#ib_mad_recv_wc * ) 
s#ib_mad_send_buf struct ib_mad_send_buf { s#ib_mad_send_buf * next ; void * mad ; s#ib_mad_agent * mad_agent ; s#ib_ah * ah ; void * context [ 2 ] ; int hdr_len ; int data_len ; int seg_count ; int seg_size ; int timeout_ms ; int retries ; } 
s#ib_mad_send_wc struct ib_mad_send_wc { s#ib_mad_send_buf * send_buf ; e#ib_wc_status status ; t#u32 vendor_err ; } 
t#ib_mad_send_handler typedef void ( * ib_mad_send_handler ) ( s#ib_mad_agent * , s#ib_mad_send_wc * ) 
t#ib_mad_snoop_handler typedef void ( * ib_mad_snoop_handler ) ( s#ib_mad_agent * , s#ib_mad_send_buf * , s#ib_mad_send_wc * ) 
s#ib_mad_agent struct ib_mad_agent { s#ib_device * device ; s#ib_qp * qp ; s#ib_mr * mr ; t#ib_mad_recv_handler recv_handler ; t#ib_mad_send_handler send_handler ; t#ib_mad_snoop_handler snoop_handler ; void * context ; t#u32 hi_tid ; t#u8 port_num ; t#u8 rmpp_version ; } 
s#ib_mad_reg_req struct ib_mad_reg_req { t#u8 mgmt_class ; t#u8 mgmt_class_version ; t#u8 oui [ 3 ] ; unsigned long method_mask [ ( ( ( 128 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
ib_register_mad_agent s#ib_mad_agent * ib_register_mad_agent ( s#ib_device * , t#u8 , e#ib_qp_type , s#ib_mad_reg_req * , t#u8 , t#ib_mad_send_handler , t#ib_mad_recv_handler , void * ) 
ib_register_mad_snoop s#ib_mad_agent * ib_register_mad_snoop ( s#ib_device * , t#u8 , e#ib_qp_type , int , t#ib_mad_snoop_handler , t#ib_mad_recv_handler , void * ) 
ib_unregister_mad_agent int ib_unregister_mad_agent ( s#ib_mad_agent * ) 
ib_create_send_mad s#ib_mad_send_buf * ib_create_send_mad ( s#ib_mad_agent * , t#u32 , t#u16 , int , int , int , t#gfp_t ) 
ib_get_mad_data_offset int ib_get_mad_data_offset ( t#u8 ) 
ib_is_mad_class_rmpp int ib_is_mad_class_rmpp ( t#u8 ) 
ib_get_rmpp_segment void * ib_get_rmpp_segment ( s#ib_mad_send_buf * , int ) 
ib_free_send_mad void ib_free_send_mad ( s#ib_mad_send_buf * ) 
ib_post_send_mad int ib_post_send_mad ( s#ib_mad_send_buf * , s#ib_mad_send_buf * * ) 
ib_free_recv_mad void ib_free_recv_mad ( s#ib_mad_recv_wc * ) 
ib_redirect_mad_qp s#ib_mad_agent * ib_redirect_mad_qp ( s#ib_qp * , t#u8 , t#ib_mad_send_handler , t#ib_mad_recv_handler , void * ) 
ib_process_mad_wc int ib_process_mad_wc ( s#ib_mad_agent * , s#ib_wc * ) 
ib_modify_mad int ib_modify_mad ( s#ib_mad_agent * , s#ib_mad_send_buf * , t#u32 ) 
ib_cancel_mad void ib_cancel_mad ( s#ib_mad_agent * , s#ib_mad_send_buf * ) 

/* drivers/infiniband/core/multicast.o */
s#ib_sa_mcmember_rec struct ib_sa_mcmember_rec { u#ib_gid mgid ; u#ib_gid port_gid ; t#__be32 qkey ; t#__be16 mlid ; t#u8 mtu_selector ; t#u8 mtu ; t#u8 traffic_class ; t#__be16 pkey ; t#u8 rate_selector ; t#u8 rate ; t#u8 packet_life_time_selector ; t#u8 packet_life_time ; t#u8 sl ; t#__be32 flow_label ; t#u8 hop_limit ; t#u8 scope ; t#u8 join_state ; int proxy_join ; } 
t#ib_sa_comp_mask typedef t#u64 ib_sa_comp_mask 
s#ib_sa_multicast struct ib_sa_multicast { s#ib_sa_mcmember_rec rec ; t#ib_sa_comp_mask comp_mask ; int ( * callback ) ( int , s#ib_sa_multicast * ) ; void * context ; } 
s#ib_sa_client struct ib_sa_client { t#atomic_t users ; s#completion comp ; } 
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##inode
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
ib_sa_join_multicast s#ib_sa_multicast * ib_sa_join_multicast ( s#ib_sa_client * , s#ib_device * , t#u8 , s#ib_sa_mcmember_rec * , t#ib_sa_comp_mask , t#gfp_t , int ( * ) ( int , s#ib_sa_multicast * ) , void * ) 
ib_sa_free_multicast void ib_sa_free_multicast ( s#ib_sa_multicast * ) 
ib_sa_get_mcmember_rec int ib_sa_get_mcmember_rec ( s#ib_device * , t#u8 , u#ib_gid * , s#ib_sa_mcmember_rec * ) 
ib_init_ah_from_mcmember int ib_init_ah_from_mcmember ( s#ib_device * , t#u8 , s#ib_sa_mcmember_rec * , s#ib_ah_attr * ) 

/* drivers/infiniband/core/netlink.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s#ibnl_client_cbs struct ibnl_client_cbs { int ( * dump ) ( s#sk_buff * , s#netlink_callback * ) ; s#module * module ; } 
ibnl_add_client int ibnl_add_client ( int , int , const s#ibnl_client_cbs [ ] ) 
ibnl_remove_client int ibnl_remove_client ( int ) 
ibnl_put_msg void * ibnl_put_msg ( s#sk_buff * , s#nlmsghdr * * , int , int , int , int ) 
ibnl_put_attr int ibnl_put_attr ( s#sk_buff * , s#nlmsghdr * , int , void * , int ) 

/* drivers/infiniband/core/packer.o */
s#ib_field struct ib_field { t#size_t struct_offset_bytes ; t#size_t struct_size_bytes ; int offset_words ; int offset_bits ; int size_bits ; char * field_name ; } 
ib_pack void ib_pack ( const s#ib_field * , int , void * , void * ) 
ib_unpack void ib_unpack ( const s#ib_field * , int , void * , void * ) 

/* drivers/infiniband/core/sa_query.o */
ib_sa_register_client void ib_sa_register_client ( s#ib_sa_client * ) 
ib_sa_unregister_client void ib_sa_unregister_client ( s#ib_sa_client * ) 
s##ib_sa_query
ib_sa_cancel_query void ib_sa_cancel_query ( int , s#ib_sa_query * ) 
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##inode
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
ib_init_ah_from_path int ib_init_ah_from_path ( s#ib_device * , t#u8 , s#ib_sa_path_rec * , s#ib_ah_attr * ) 
ib_sa_unpack_path void ib_sa_unpack_path ( void * , s#ib_sa_path_rec * ) 
ib_sa_pack_path void ib_sa_pack_path ( s#ib_sa_path_rec * , void * ) 
ib_sa_path_rec_get int ib_sa_path_rec_get ( s#ib_sa_client * , s#ib_device * , t#u8 , s#ib_sa_path_rec * , t#ib_sa_comp_mask , int , t#gfp_t , void ( * ) ( int , s#ib_sa_path_rec * , void * ) , void * , s#ib_sa_query * * ) 
s#ib_sa_service_rec struct ib_sa_service_rec { t#u64 id ; u#ib_gid gid ; t#__be16 pkey ; t#u32 lease ; t#u8 key [ 16 ] ; t#u8 name [ 64 ] ; t#u8 data8 [ 16 ] ; t#u16 data16 [ 8 ] ; t#u32 data32 [ 4 ] ; t#u64 data64 [ 2 ] ; } 
ib_sa_service_rec_query int ib_sa_service_rec_query ( s#ib_sa_client * , s#ib_device * , t#u8 , t#u8 , s#ib_sa_service_rec * , t#ib_sa_comp_mask , int , t#gfp_t , void ( * ) ( int , s#ib_sa_service_rec * , void * ) , void * , s#ib_sa_query * * ) 
s#ib_sa_guidinfo_rec struct ib_sa_guidinfo_rec { t#__be16 lid ; t#u8 block_num ; t#u8 res1 ; t#__be32 res2 ; t#u8 guid_info_list [ 64 ] ; } 
ib_sa_guid_info_rec_query int ib_sa_guid_info_rec_query ( s#ib_sa_client * , s#ib_device * , t#u8 , s#ib_sa_guidinfo_rec * , t#ib_sa_comp_mask , t#u8 , int , t#gfp_t , void ( * ) ( int , s#ib_sa_guidinfo_rec * , void * ) , void * , s#ib_sa_query * * ) 

/* drivers/infiniband/core/ud_header.o */
s#ib_unpacked_lrh struct ib_unpacked_lrh { t#u8 virtual_lane ; t#u8 link_version ; t#u8 service_level ; t#u8 link_next_header ; t#__be16 destination_lid ; t#__be16 packet_length ; t#__be16 source_lid ; } 
s#ib_unpacked_eth struct ib_unpacked_eth { t#u8 dmac_h [ 4 ] ; t#u8 dmac_l [ 2 ] ; t#u8 smac_h [ 2 ] ; t#u8 smac_l [ 4 ] ; t#__be16 type ; } 
s#ib_unpacked_vlan struct ib_unpacked_vlan { t#__be16 tag ; t#__be16 type ; } 
s#ib_unpacked_grh struct ib_unpacked_grh { t#u8 ip_version ; t#u8 traffic_class ; t#__be32 flow_label ; t#__be16 payload_length ; t#u8 next_header ; t#u8 hop_limit ; u#ib_gid source_gid ; u#ib_gid destination_gid ; } 
s#ib_unpacked_bth struct ib_unpacked_bth { t#u8 opcode ; t#u8 solicited_event ; t#u8 mig_req ; t#u8 pad_count ; t#u8 transport_header_version ; t#__be16 pkey ; t#__be32 destination_qpn ; t#u8 ack_req ; t#__be32 psn ; } 
s#ib_unpacked_deth struct ib_unpacked_deth { t#__be32 qkey ; t#__be32 source_qpn ; } 
s#ib_ud_header struct ib_ud_header { int lrh_present ; s#ib_unpacked_lrh lrh ; int eth_present ; s#ib_unpacked_eth eth ; int vlan_present ; s#ib_unpacked_vlan vlan ; int grh_present ; s#ib_unpacked_grh grh ; s#ib_unpacked_bth bth ; s#ib_unpacked_deth deth ; int immediate_present ; t#__be32 immediate_data ; } 
ib_ud_header_init void ib_ud_header_init ( int , int , int , int , int , int , s#ib_ud_header * ) 
ib_ud_header_pack int ib_ud_header_pack ( s#ib_ud_header * , void * ) 
ib_ud_header_unpack int ib_ud_header_unpack ( void * , s#ib_ud_header * ) 

/* drivers/infiniband/core/umem.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##module
s##kstatfs
s##seq_file
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##ib_mad
s#ib_umem struct ib_umem { s#ib_ucontext * context ; t#size_t length ; int offset ; int page_size ; int writable ; int hugetlb ; s#list_head chunk_list ; s#work_struct work ; s#mm_struct * mm ; unsigned long diff ; } 
ib_umem_get s#ib_umem * ib_umem_get ( s#ib_ucontext * , unsigned long , t#size_t , int , int ) 
ib_umem_release void ib_umem_release ( s#ib_umem * ) 
ib_umem_page_count int ib_umem_page_count ( s#ib_umem * ) 

/* drivers/infiniband/core/uverbs_marshall.o */
s#ib_uverbs_global_route struct ib_uverbs_global_route { t#__u8 dgid [ 16 ] ; t#__u32 flow_label ; t#__u8 sgid_index ; t#__u8 hop_limit ; t#__u8 traffic_class ; t#__u8 reserved ; } 
s#ib_uverbs_ah_attr struct ib_uverbs_ah_attr { s#ib_uverbs_global_route grh ; t#__u16 dlid ; t#__u8 sl ; t#__u8 src_path_bits ; t#__u8 static_rate ; t#__u8 is_global ; t#__u8 port_num ; t#__u8 reserved ; } 
ib_copy_ah_attr_to_user void ib_copy_ah_attr_to_user ( s#ib_uverbs_ah_attr * , s#ib_ah_attr * ) 
s#ib_uverbs_qp_attr struct ib_uverbs_qp_attr { t#__u32 qp_attr_mask ; t#__u32 qp_state ; t#__u32 cur_qp_state ; t#__u32 path_mtu ; t#__u32 path_mig_state ; t#__u32 qkey ; t#__u32 rq_psn ; t#__u32 sq_psn ; t#__u32 dest_qp_num ; t#__u32 qp_access_flags ; s#ib_uverbs_ah_attr ah_attr ; s#ib_uverbs_ah_attr alt_ah_attr ; t#__u32 max_send_wr ; t#__u32 max_recv_wr ; t#__u32 max_send_sge ; t#__u32 max_recv_sge ; t#__u32 max_inline_data ; t#__u16 pkey_index ; t#__u16 alt_pkey_index ; t#__u8 en_sqd_async_notify ; t#__u8 sq_draining ; t#__u8 max_rd_atomic ; t#__u8 max_dest_rd_atomic ; t#__u8 min_rnr_timer ; t#__u8 port_num ; t#__u8 timeout ; t#__u8 retry_cnt ; t#__u8 rnr_retry ; t#__u8 alt_port_num ; t#__u8 alt_timeout ; t#__u8 reserved [ 5 ] ; } 
ib_copy_qp_attr_to_user void ib_copy_qp_attr_to_user ( s#ib_uverbs_qp_attr * , s#ib_qp_attr * ) 
s#ib_user_path_rec struct ib_user_path_rec { t#__u8 dgid [ 16 ] ; t#__u8 sgid [ 16 ] ; t#__be16 dlid ; t#__be16 slid ; t#__u32 raw_traffic ; t#__be32 flow_label ; t#__u32 reversible ; t#__u32 mtu ; t#__be16 pkey ; t#__u8 hop_limit ; t#__u8 traffic_class ; t#__u8 numb_path ; t#__u8 sl ; t#__u8 mtu_selector ; t#__u8 rate_selector ; t#__u8 rate ; t#__u8 packet_life_time_selector ; t#__u8 packet_life_time ; t#__u8 preference ; } 
ib_copy_path_rec_to_user void ib_copy_path_rec_to_user ( s#ib_user_path_rec * , s#ib_sa_path_rec * ) 
ib_copy_path_rec_from_user void ib_copy_path_rec_from_user ( s#ib_sa_path_rec * , s#ib_user_path_rec * ) 

/* drivers/infiniband/core/verbs.o */
e#ib_rate enum ib_rate { IB_RATE_PORT_CURRENT = 0 , IB_RATE_2_5_GBPS = 2 , IB_RATE_5_GBPS = 5 , IB_RATE_10_GBPS = 3 , IB_RATE_20_GBPS = 6 , IB_RATE_30_GBPS = 4 , IB_RATE_40_GBPS = 7 , IB_RATE_60_GBPS = 8 , IB_RATE_80_GBPS = 9 , IB_RATE_120_GBPS = 10 , IB_RATE_14_GBPS = 11 , IB_RATE_56_GBPS = 12 , IB_RATE_112_GBPS = 13 , IB_RATE_168_GBPS = 14 , IB_RATE_25_GBPS = 15 , IB_RATE_100_GBPS = 16 , IB_RATE_200_GBPS = 17 , IB_RATE_300_GBPS = 18 } 
ib_rate_to_mult int ib_rate_to_mult ( e#ib_rate ) 
mult_to_ib_rate e#ib_rate mult_to_ib_rate ( int ) 
ib_rate_to_mbps int ib_rate_to_mbps ( e#ib_rate ) 
e#rdma_node_type enum rdma_node_type { RDMA_NODE_IB_CA = 1 , RDMA_NODE_IB_SWITCH , RDMA_NODE_IB_ROUTER , RDMA_NODE_RNIC , RDMA_NODE_USNIC , RDMA_NODE_USNIC_UDP , } 
rdma_node_get_transport e#rdma_transport_type rdma_node_get_transport ( e#rdma_node_type ) 
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##ip_mc_list
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##ib_mad
rdma_port_get_link_layer e#rdma_link_layer rdma_port_get_link_layer ( s#ib_device * , t#u8 ) 
ib_alloc_pd s#ib_pd * ib_alloc_pd ( s#ib_device * ) 
ib_dealloc_pd int ib_dealloc_pd ( s#ib_pd * ) 
ib_create_ah s#ib_ah * ib_create_ah ( s#ib_pd * , s#ib_ah_attr * ) 
ib_init_ah_from_wc int ib_init_ah_from_wc ( s#ib_device * , t#u8 , s#ib_wc * , s#ib_grh * , s#ib_ah_attr * ) 
ib_create_ah_from_wc s#ib_ah * ib_create_ah_from_wc ( s#ib_pd * , s#ib_wc * , s#ib_grh * , t#u8 ) 
ib_modify_ah int ib_modify_ah ( s#ib_ah * , s#ib_ah_attr * ) 
ib_query_ah int ib_query_ah ( s#ib_ah * , s#ib_ah_attr * ) 
ib_destroy_ah int ib_destroy_ah ( s#ib_ah * ) 
ib_create_srq s#ib_srq * ib_create_srq ( s#ib_pd * , s#ib_srq_init_attr * ) 
ib_modify_srq int ib_modify_srq ( s#ib_srq * , s#ib_srq_attr * , e#ib_srq_attr_mask ) 
ib_query_srq int ib_query_srq ( s#ib_srq * , s#ib_srq_attr * ) 
ib_destroy_srq int ib_destroy_srq ( s#ib_srq * ) 
s#ib_qp_open_attr struct ib_qp_open_attr { void ( * event_handler ) ( s#ib_event * , void * ) ; void * qp_context ; t#u32 qp_num ; e#ib_qp_type qp_type ; } 
ib_open_qp s#ib_qp * ib_open_qp ( s#ib_xrcd * , s#ib_qp_open_attr * ) 
ib_create_qp s#ib_qp * ib_create_qp ( s#ib_pd * , s#ib_qp_init_attr * ) 
e#ib_qp_attr_mask enum ib_qp_attr_mask { IB_QP_STATE = 1 , IB_QP_CUR_STATE = ( 1 << 1 ) , IB_QP_EN_SQD_ASYNC_NOTIFY = ( 1 << 2 ) , IB_QP_ACCESS_FLAGS = ( 1 << 3 ) , IB_QP_PKEY_INDEX = ( 1 << 4 ) , IB_QP_PORT = ( 1 << 5 ) , IB_QP_QKEY = ( 1 << 6 ) , IB_QP_AV = ( 1 << 7 ) , IB_QP_PATH_MTU = ( 1 << 8 ) , IB_QP_TIMEOUT = ( 1 << 9 ) , IB_QP_RETRY_CNT = ( 1 << 10 ) , IB_QP_RNR_RETRY = ( 1 << 11 ) , IB_QP_RQ_PSN = ( 1 << 12 ) , IB_QP_MAX_QP_RD_ATOMIC = ( 1 << 13 ) , IB_QP_ALT_PATH = ( 1 << 14 ) , IB_QP_MIN_RNR_TIMER = ( 1 << 15 ) , IB_QP_SQ_PSN = ( 1 << 16 ) , IB_QP_MAX_DEST_RD_ATOMIC = ( 1 << 17 ) , IB_QP_PATH_MIG_STATE = ( 1 << 18 ) , IB_QP_CAP = ( 1 << 19 ) , IB_QP_DEST_QPN = ( 1 << 20 ) , IB_QP_SMAC = ( 1 << 21 ) , IB_QP_ALT_SMAC = ( 1 << 22 ) , IB_QP_VID = ( 1 << 23 ) , IB_QP_ALT_VID = ( 1 << 24 ) , } 
ib_modify_qp_is_ok int ib_modify_qp_is_ok ( e#ib_qp_state , e#ib_qp_state , e#ib_qp_type , e#ib_qp_attr_mask , e#rdma_link_layer ) 
ib_resolve_eth_l2_attrs int ib_resolve_eth_l2_attrs ( s#ib_qp * , s#ib_qp_attr * , int * ) 
ib_modify_qp int ib_modify_qp ( s#ib_qp * , s#ib_qp_attr * , int ) 
ib_query_qp int ib_query_qp ( s#ib_qp * , s#ib_qp_attr * , int , s#ib_qp_init_attr * ) 
ib_close_qp int ib_close_qp ( s#ib_qp * ) 
ib_destroy_qp int ib_destroy_qp ( s#ib_qp * ) 
ib_create_cq s#ib_cq * ib_create_cq ( s#ib_device * , t#ib_comp_handler , void ( * ) ( s#ib_event * , void * ) , void * , int , int ) 
ib_modify_cq int ib_modify_cq ( s#ib_cq * , t#u16 , t#u16 ) 
ib_destroy_cq int ib_destroy_cq ( s#ib_cq * ) 
ib_resize_cq int ib_resize_cq ( s#ib_cq * , int ) 
ib_get_dma_mr s#ib_mr * ib_get_dma_mr ( s#ib_pd * , int ) 
ib_reg_phys_mr s#ib_mr * ib_reg_phys_mr ( s#ib_pd * , s#ib_phys_buf * , int , int , t#u64 * ) 
ib_rereg_phys_mr int ib_rereg_phys_mr ( s#ib_mr * , int , s#ib_pd * , s#ib_phys_buf * , int , int , t#u64 * ) 
ib_query_mr int ib_query_mr ( s#ib_mr * , s#ib_mr_attr * ) 
ib_dereg_mr int ib_dereg_mr ( s#ib_mr * ) 
ib_create_mr s#ib_mr * ib_create_mr ( s#ib_pd * , s#ib_mr_init_attr * ) 
ib_destroy_mr int ib_destroy_mr ( s#ib_mr * ) 
ib_alloc_fast_reg_mr s#ib_mr * ib_alloc_fast_reg_mr ( s#ib_pd * , int ) 
ib_alloc_fast_reg_page_list s#ib_fast_reg_page_list * ib_alloc_fast_reg_page_list ( s#ib_device * , int ) 
ib_free_fast_reg_page_list void ib_free_fast_reg_page_list ( s#ib_fast_reg_page_list * ) 
ib_alloc_mw s#ib_mw * ib_alloc_mw ( s#ib_pd * , e#ib_mw_type ) 
ib_dealloc_mw int ib_dealloc_mw ( s#ib_mw * ) 
ib_alloc_fmr s#ib_fmr * ib_alloc_fmr ( s#ib_pd * , int , s#ib_fmr_attr * ) 
ib_unmap_fmr int ib_unmap_fmr ( s#list_head * ) 
ib_dealloc_fmr int ib_dealloc_fmr ( s#ib_fmr * ) 
ib_attach_mcast int ib_attach_mcast ( s#ib_qp * , u#ib_gid * , t#u16 ) 
ib_detach_mcast int ib_detach_mcast ( s#ib_qp * , u#ib_gid * , t#u16 ) 
ib_alloc_xrcd s#ib_xrcd * ib_alloc_xrcd ( s#ib_device * ) 
ib_dealloc_xrcd int ib_dealloc_xrcd ( s#ib_xrcd * ) 
ib_create_flow s#ib_flow * ib_create_flow ( s#ib_qp * , s#ib_flow_attr * , int ) 
ib_destroy_flow int ib_destroy_flow ( s#ib_flow * ) 
ib_check_mr_status int ib_check_mr_status ( s#ib_mr * , t#u32 , s#ib_mr_status * ) 

/* drivers/input/ff-core.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##tvec_base
s##input_mt
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
input_ff_upload int input_ff_upload ( s#input_dev * , s#ff_effect * , s#file * ) 
input_ff_erase int input_ff_erase ( s#input_dev * , int , s#file * ) 
input_ff_event int input_ff_event ( s#input_dev * , unsigned int , unsigned int , int ) 
input_ff_create int input_ff_create ( s#input_dev * , unsigned int ) 
input_ff_destroy void input_ff_destroy ( s#input_dev * ) 

/* drivers/input/ff-memless.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##tvec_base
s##input_mt
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
input_ff_create_memless int input_ff_create_memless ( s#input_dev * , void * , int ( * ) ( s#input_dev * , void * , s#ff_effect * ) ) 

/* drivers/input/input.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##tvec_base
s#input_mt_slot struct input_mt_slot { int abs [ 0x3d - 0x30 + 1 ] ; unsigned int frame ; unsigned int key ; } 
s#input_mt struct input_mt { int trkid ; int num_slots ; int slot ; unsigned int flags ; unsigned int frame ; int * red ; s#input_mt_slot slots [ ] ; } 
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
input_event void input_event ( s#input_dev * , unsigned int , unsigned int , int ) 
input_inject_event void input_inject_event ( s#input_handle * , unsigned int , unsigned int , int ) 
input_alloc_absinfo void input_alloc_absinfo ( s#input_dev * ) 
input_set_abs_params void input_set_abs_params ( s#input_dev * , unsigned int , int , int , int , int ) 
input_grab_device int input_grab_device ( s#input_handle * ) 
input_release_device void input_release_device ( s#input_handle * ) 
input_open_device int input_open_device ( s#input_handle * ) 
input_flush_device int input_flush_device ( s#input_handle * , s#file * ) 
input_close_device void input_close_device ( s#input_handle * ) 
input_scancode_to_scalar int input_scancode_to_scalar ( const s#input_keymap_entry * , unsigned int * ) 
input_get_keycode int input_get_keycode ( s#input_dev * , s#input_keymap_entry * ) 
input_set_keycode int input_set_keycode ( s#input_dev * , const s#input_keymap_entry * ) 
input_reset_device void input_reset_device ( s#input_dev * ) 
input_class extern s#class input_class 
input_allocate_device s#input_dev * input_allocate_device ( void ) 
devm_input_allocate_device s#input_dev * devm_input_allocate_device ( s#device * ) 
input_free_device void input_free_device ( s#input_dev * ) 
input_set_capability void input_set_capability ( s#input_dev * , unsigned int , unsigned int ) 
input_register_device int input_register_device ( s#input_dev * ) 
input_unregister_device void input_unregister_device ( s#input_dev * ) 
input_register_handler int input_register_handler ( s#input_handler * ) 
input_unregister_handler void input_unregister_handler ( s#input_handler * ) 
input_handler_for_each_handle int input_handler_for_each_handle ( s#input_handler * , void * , int ( * ) ( s#input_handle * , void * ) ) 
input_register_handle int input_register_handle ( s#input_handle * ) 
input_unregister_handle void input_unregister_handle ( s#input_handle * ) 
input_get_new_minor int input_get_new_minor ( int , unsigned int , t#bool ) 
input_free_minor void input_free_minor ( unsigned int ) 

/* drivers/input/input-compat.o */
s#input_event struct input_event { s#timeval time ; t#__u16 type ; t#__u16 code ; t#__s32 value ; } 
input_event_from_user int input_event_from_user ( const char * , s#input_event * ) 
input_event_to_user int input_event_to_user ( char * , const s#input_event * ) 
input_ff_effect_from_user int input_ff_effect_from_user ( const char * , t#size_t , s#ff_effect * ) 

/* drivers/input/input-mt.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##tvec_base
s##device_private
s##sock
s##sysfs_dirent
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
input_mt_init_slots int input_mt_init_slots ( s#input_dev * , unsigned int , unsigned int ) 
input_mt_destroy_slots void input_mt_destroy_slots ( s#input_dev * ) 
input_mt_report_slot_state void input_mt_report_slot_state ( s#input_dev * , unsigned int , t#bool ) 
input_mt_report_finger_count void input_mt_report_finger_count ( s#input_dev * , int ) 
input_mt_report_pointer_emulation void input_mt_report_pointer_emulation ( s#input_dev * , t#bool ) 
input_mt_sync_frame void input_mt_sync_frame ( s#input_dev * ) 
s#input_mt_pos struct input_mt_pos { t#s16 x , y ; } 
input_mt_assign_slots int input_mt_assign_slots ( s#input_dev * , int * , const s#input_mt_pos * , int ) 
input_mt_get_slot_by_key int input_mt_get_slot_by_key ( s#input_dev * , int ) 

/* drivers/input/input-polldev.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##tvec_base
s##input_mt
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s#input_polled_dev struct input_polled_dev { void * private ; void ( * open ) ( s#input_polled_dev * ) ; void ( * close ) ( s#input_polled_dev * ) ; void ( * poll ) ( s#input_polled_dev * ) ; unsigned int poll_interval ; unsigned int poll_interval_max ; unsigned int poll_interval_min ; s#input_dev * input ; s#delayed_work work ; } 
input_allocate_polled_device s#input_polled_dev * input_allocate_polled_device ( void ) 
input_free_polled_device void input_free_polled_device ( s#input_polled_dev * ) 
input_register_polled_device int input_register_polled_device ( s#input_polled_dev * ) 
input_unregister_polled_device void input_unregister_polled_device ( s#input_polled_dev * ) 

/* drivers/input/matrix-keymap.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##proc_dir_entry
s##iommu_group
matrix_keypad_parse_of_params int matrix_keypad_parse_of_params ( s#device * , unsigned int * , unsigned int * ) 
s#matrix_keymap_data struct matrix_keymap_data { const t#uint32_t * keymap ; unsigned int keymap_size ; } 
s##input_mt
matrix_keypad_build_keymap int matrix_keypad_build_keymap ( const s#matrix_keymap_data * , const char * , unsigned int , unsigned int , unsigned short * , s#input_dev * ) 

/* drivers/input/serio/i8042.o */
i8042_lock_chip void i8042_lock_chip ( void ) 
i8042_unlock_chip void i8042_unlock_chip ( void ) 
s#serio_device_id struct serio_device_id { t#__u8 type ; t#__u8 extra ; t#__u8 id ; t#__u8 proto ; } 
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##subsys_private
s##iommu_group
s##iommu_ops
s##driver_private
s#serio_driver struct serio_driver { const char * description ; const s#serio_device_id * id_table ; t#bool manual_bind ; void ( * write_wakeup ) ( s#serio * ) ; t#irqreturn_t ( * interrupt ) ( s#serio * , unsigned char , unsigned int ) ; int ( * connect ) ( s#serio * , s#serio_driver * ) ; int ( * reconnect ) ( s#serio * ) ; void ( * disconnect ) ( s#serio * ) ; void ( * cleanup ) ( s#serio * ) ; s#device_driver driver ; } 
s#serio struct serio { void * port_data ; char name [ 32 ] ; char phys [ 32 ] ; char firmware_id [ 128 ] ; t#bool manual_bind ; s#serio_device_id id ; t#spinlock_t lock ; int ( * write ) ( s#serio * , unsigned char ) ; int ( * open ) ( s#serio * ) ; void ( * close ) ( s#serio * ) ; int ( * start ) ( s#serio * ) ; void ( * stop ) ( s#serio * ) ; s#serio * parent ; s#list_head child_node ; s#list_head children ; unsigned int depth ; s#serio_driver * drv ; s#mutex drv_mutex ; s#device dev ; s#list_head node ; } 
i8042_install_filter int i8042_install_filter ( t#bool ( * ) ( unsigned char , unsigned char , s#serio * ) ) 
i8042_remove_filter int i8042_remove_filter ( t#bool ( * ) ( unsigned char , unsigned char , s#serio * ) ) 
i8042_command int i8042_command ( unsigned char * , int ) 
i8042_check_port_owner t#bool i8042_check_port_owner ( const s#serio * ) 

/* drivers/input/serio/libps2.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##subsys_private
s##iommu_group
s##iommu_ops
s##driver_private
s#ps2dev struct ps2dev { s#serio * serio ; s#mutex cmd_mutex ; t#wait_queue_head_t wait ; unsigned long flags ; unsigned char cmdbuf [ 8 ] ; unsigned char cmdcnt ; unsigned char nak ; } 
ps2_sendbyte int ps2_sendbyte ( s#ps2dev * , unsigned char , int ) 
ps2_begin_command void ps2_begin_command ( s#ps2dev * ) 
ps2_end_command void ps2_end_command ( s#ps2dev * ) 
ps2_drain void ps2_drain ( s#ps2dev * , int , int ) 
ps2_is_keyboard_id int ps2_is_keyboard_id ( char ) 
__ps2_command int __ps2_command ( s#ps2dev * , unsigned char * , int ) 
ps2_command int ps2_command ( s#ps2dev * , unsigned char * , int ) 
ps2_init void ps2_init ( s#ps2dev * , s#serio * ) 
ps2_handle_ack int ps2_handle_ack ( s#ps2dev * , unsigned char ) 
ps2_handle_response int ps2_handle_response ( s#ps2dev * , unsigned char ) 
ps2_cmd_aborted void ps2_cmd_aborted ( s#ps2dev * ) 

/* drivers/input/serio/serio.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##subsys_private
s##iommu_group
s##iommu_ops
s##driver_private
serio_rescan void serio_rescan ( s#serio * ) 
serio_reconnect void serio_reconnect ( s#serio * ) 
__serio_register_port void __serio_register_port ( s#serio * , s#module * ) 
serio_unregister_port void serio_unregister_port ( s#serio * ) 
serio_unregister_child_port void serio_unregister_child_port ( s#serio * ) 
__serio_register_driver int __serio_register_driver ( s#serio_driver * , s#module * , const char * ) 
serio_unregister_driver void serio_unregister_driver ( s#serio_driver * ) 
serio_open int serio_open ( s#serio * , s#serio_driver * ) 
serio_close void serio_close ( s#serio * ) 
serio_interrupt t#irqreturn_t serio_interrupt ( s#serio * , unsigned char , unsigned int ) 

/* drivers/input/sparse-keymap.o */
s#key_entry struct key_entry { int type ; t#u32 code ; union { t#u16 keycode ; struct { t#u8 code ; t#u8 value ; } sw ; } ; } 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##tvec_base
s##input_mt
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
sparse_keymap_entry_from_scancode s#key_entry * sparse_keymap_entry_from_scancode ( s#input_dev * , unsigned int ) 
sparse_keymap_entry_from_keycode s#key_entry * sparse_keymap_entry_from_keycode ( s#input_dev * , unsigned int ) 
sparse_keymap_setup int sparse_keymap_setup ( s#input_dev * , const s#key_entry * , int ( * ) ( s#input_dev * , s#key_entry * ) ) 
sparse_keymap_free void sparse_keymap_free ( s#input_dev * ) 
sparse_keymap_report_entry void sparse_keymap_report_entry ( s#input_dev * , const s#key_entry * , unsigned int , t#bool ) 
sparse_keymap_report_event t#bool sparse_keymap_report_event ( s#input_dev * , unsigned int , unsigned int , t#bool ) 

/* drivers/iommu/iommu.o */
s##iommu_group
iommu_group_alloc extern s#iommu_group * iommu_group_alloc ( void ) 
iommu_group_get_by_id extern s#iommu_group * iommu_group_get_by_id ( int ) 
iommu_group_get_iommudata extern void * iommu_group_get_iommudata ( s#iommu_group * ) 
iommu_group_set_iommudata extern void iommu_group_set_iommudata ( s#iommu_group * , void * , void ( * ) ( void * ) ) 
iommu_group_set_name extern int iommu_group_set_name ( s#iommu_group * , const char * ) 
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##of_device_id
s##acpi_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
iommu_group_add_device extern int iommu_group_add_device ( s#iommu_group * , s#device * ) 
iommu_group_remove_device extern void iommu_group_remove_device ( s#device * ) 
iommu_group_for_each_dev extern int iommu_group_for_each_dev ( s#iommu_group * , void * , int ( * ) ( s#device * , void * ) ) 
iommu_group_get extern s#iommu_group * iommu_group_get ( s#device * ) 
iommu_group_put extern void iommu_group_put ( s#iommu_group * ) 
iommu_group_register_notifier extern int iommu_group_register_notifier ( s#iommu_group * , s#notifier_block * ) 
iommu_group_unregister_notifier extern int iommu_group_unregister_notifier ( s#iommu_group * , s#notifier_block * ) 
iommu_group_id extern int iommu_group_id ( s#iommu_group * ) 
bus_set_iommu extern int bus_set_iommu ( s#bus_type * , s#iommu_ops * ) 
iommu_present extern t#bool iommu_present ( s#bus_type * ) 
iommu_set_fault_handler extern void iommu_set_fault_handler ( s#iommu_domain * , t#iommu_fault_handler_t , void * ) 
iommu_domain_alloc extern s#iommu_domain * iommu_domain_alloc ( s#bus_type * ) 
iommu_domain_free extern void iommu_domain_free ( s#iommu_domain * ) 
iommu_attach_device extern int iommu_attach_device ( s#iommu_domain * , s#device * ) 
iommu_detach_device extern void iommu_detach_device ( s#iommu_domain * , s#device * ) 
iommu_attach_group extern int iommu_attach_group ( s#iommu_domain * , s#iommu_group * ) 
iommu_detach_group extern void iommu_detach_group ( s#iommu_domain * , s#iommu_group * ) 
iommu_iova_to_phys extern t#phys_addr_t iommu_iova_to_phys ( s#iommu_domain * , t#dma_addr_t ) 
iommu_domain_has_cap extern int iommu_domain_has_cap ( s#iommu_domain * , unsigned long ) 
iommu_map extern int iommu_map ( s#iommu_domain * , unsigned long , t#phys_addr_t , t#size_t , int ) 
iommu_unmap extern t#size_t iommu_unmap ( s#iommu_domain * , unsigned long , t#size_t ) 
iommu_domain_window_enable extern int iommu_domain_window_enable ( s#iommu_domain * , t#u32 , t#phys_addr_t , t#u64 , int ) 
iommu_domain_window_disable extern void iommu_domain_window_disable ( s#iommu_domain * , t#u32 ) 
iommu_domain_get_attr extern int iommu_domain_get_attr ( s#iommu_domain * , e#iommu_attr , void * ) 
iommu_domain_set_attr extern int iommu_domain_set_attr ( s#iommu_domain * , e#iommu_attr , void * ) 

/* drivers/iommu/of_iommu.o */
s##proc_dir_entry
of_get_dma_window int of_get_dma_window ( s#device_node * , const char * , int , unsigned long * , t#dma_addr_t * , t#size_t * ) 

/* drivers/ipack/ipack.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s#ipack_region struct ipack_region { t#phys_addr_t start ; t#size_t size ; } 
E#IPACK_SPACE_COUNT ( 0 ) + 5 
s#ipack_device struct ipack_device { unsigned int slot ; s#ipack_bus_device * bus ; s#device dev ; void ( * release ) ( s#ipack_device * ) ; s#ipack_region region [ E#IPACK_SPACE_COUNT ] ; t#u8 * id ; t#size_t id_avail ; t#u32 id_vendor ; t#u32 id_device ; t#u8 id_format ; unsigned int id_crc_correct : 1 ; unsigned int speed_8mhz : 1 ; unsigned int speed_32mhz : 1 ; } 
s#ipack_bus_ops struct ipack_bus_ops { int ( * request_irq ) ( s#ipack_device * , t#irqreturn_t ( * ) ( void * ) , void * ) ; int ( * free_irq ) ( s#ipack_device * ) ; int ( * get_clockrate ) ( s#ipack_device * ) ; int ( * set_clockrate ) ( s#ipack_device * , int ) ; int ( * get_error ) ( s#ipack_device * ) ; int ( * get_timeout ) ( s#ipack_device * ) ; int ( * reset_timeout ) ( s#ipack_device * ) ; } 
s#ipack_bus_device struct ipack_bus_device { s#device * parent ; int slots ; int bus_nr ; const s#ipack_bus_ops * ops ; } 
ipack_bus_register s#ipack_bus_device * ipack_bus_register ( s#device * , int , const s#ipack_bus_ops * ) 
ipack_bus_unregister int ipack_bus_unregister ( s#ipack_bus_device * ) 
s#ipack_device_id struct ipack_device_id { t#__u8 format ; t#__u32 vendor ; t#__u32 device ; } 
s#ipack_driver_ops struct ipack_driver_ops { int ( * probe ) ( s#ipack_device * ) ; void ( * remove ) ( s#ipack_device * ) ; } 
s#ipack_driver struct ipack_driver { s#device_driver driver ; const s#ipack_device_id * id_table ; const s#ipack_driver_ops * ops ; } 
ipack_driver_register int ipack_driver_register ( s#ipack_driver * , s#module * , const char * ) 
ipack_driver_unregister void ipack_driver_unregister ( s#ipack_driver * ) 
ipack_device_init int ipack_device_init ( s#ipack_device * ) 
ipack_device_add int ipack_device_add ( s#ipack_device * ) 
ipack_device_del void ipack_device_del ( s#ipack_device * ) 
ipack_get_device void ipack_get_device ( s#ipack_device * ) 
ipack_put_device void ipack_put_device ( s#ipack_device * ) 

/* drivers/leds/led-class.o */
e#led_brightness enum led_brightness { LED_OFF = 0 , LED_HALF = 127 , LED_FULL = 255 , } 
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s#led_trigger struct led_trigger { const char * name ; void ( * activate ) ( s#led_classdev * ) ; void ( * deactivate ) ( s#led_classdev * ) ; t#rwlock_t leddev_list_lock ; s#list_head led_cdevs ; s#list_head next_trig ; } 
s#led_classdev struct led_classdev { const char * name ; int brightness ; int max_brightness ; int flags ; void ( * brightness_set ) ( s#led_classdev * , e#led_brightness ) ; e#led_brightness ( * brightness_get ) ( s#led_classdev * ) ; int ( * blink_set ) ( s#led_classdev * , unsigned long * , unsigned long * ) ; s#device * dev ; s#list_head node ; const char * default_trigger ; unsigned long blink_delay_on , blink_delay_off ; s#timer_list blink_timer ; int blink_brightness ; s#work_struct set_brightness_work ; int delayed_set_value ; s#rw_semaphore trigger_lock ; s#led_trigger * trigger ; s#list_head trig_list ; void * trigger_data ; t#bool activated ; } 
led_classdev_suspend extern void led_classdev_suspend ( s#led_classdev * ) 
led_classdev_resume extern void led_classdev_resume ( s#led_classdev * ) 
led_classdev_register extern int led_classdev_register ( s#device * , s#led_classdev * ) 
led_classdev_unregister extern void led_classdev_unregister ( s#led_classdev * ) 

/* drivers/leds/led-core.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
leds_list_lock extern s#rw_semaphore leds_list_lock 
leds_list extern s#list_head leds_list 
s##device_private
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
led_blink_set extern void led_blink_set ( s#led_classdev * , unsigned long * , unsigned long * ) 
led_blink_set_oneshot extern void led_blink_set_oneshot ( s#led_classdev * , unsigned long * , unsigned long * , int ) 
led_stop_software_blink void led_stop_software_blink ( s#led_classdev * ) 
led_set_brightness extern void led_set_brightness ( s#led_classdev * , e#led_brightness ) 

/* drivers/leds/led-triggers.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
led_trigger_store t#ssize_t led_trigger_store ( s#device * , s#device_attribute * , const char * , t#size_t ) 
led_trigger_show t#ssize_t led_trigger_show ( s#device * , s#device_attribute * , char * ) 
led_trigger_set void led_trigger_set ( s#led_classdev * , s#led_trigger * ) 
led_trigger_remove void led_trigger_remove ( s#led_classdev * ) 
led_trigger_set_default void led_trigger_set_default ( s#led_classdev * ) 
led_trigger_rename_static extern void led_trigger_rename_static ( const char * , s#led_trigger * ) 
led_trigger_register extern int led_trigger_register ( s#led_trigger * ) 
led_trigger_unregister extern void led_trigger_unregister ( s#led_trigger * ) 
led_trigger_event extern void led_trigger_event ( s#led_trigger * , e#led_brightness ) 
led_trigger_blink extern void led_trigger_blink ( s#led_trigger * , unsigned long * , unsigned long * ) 
led_trigger_blink_oneshot extern void led_trigger_blink_oneshot ( s#led_trigger * , unsigned long * , unsigned long * , int ) 
led_trigger_register_simple extern void led_trigger_register_simple ( const char * , s#led_trigger * * ) 
led_trigger_unregister_simple extern void led_trigger_unregister_simple ( s#led_trigger * ) 

/* drivers/leds/leds-lp55xx-common.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##proc_dir_entry
s##iommu_group
s##clk
s#lp55xx_led_config struct lp55xx_led_config { const char * name ; t#u8 chan_nr ; t#u8 led_current ; t#u8 max_current ; } 
s#lp55xx_predef_pattern struct lp55xx_predef_pattern { const t#u8 * r ; const t#u8 * g ; const t#u8 * b ; t#u8 size_r ; t#u8 size_g ; t#u8 size_b ; } 
e#lp8501_pwr_sel enum lp8501_pwr_sel { LP8501_ALL_VDD , LP8501_6VDD_3VOUT , LP8501_3VDD_6VOUT , LP8501_ALL_VOUT , } 
s#lp55xx_platform_data struct lp55xx_platform_data { s#lp55xx_led_config * led_config ; t#u8 num_channels ; const char * label ; t#u8 clock_mode ; int ( * setup_resources ) ( void ) ; void ( * release_resources ) ( void ) ; void ( * enable ) ( t#bool ) ; s#lp55xx_predef_pattern * patterns ; unsigned int num_patterns ; e#lp8501_pwr_sel pwr_sel ; } 
s#lp55xx_reg struct lp55xx_reg { t#u8 addr ; t#u8 val ; } 
s#lp55xx_led struct lp55xx_led { int chan_nr ; s#led_classdev cdev ; t#u8 led_current ; t#u8 max_current ; s#work_struct brightness_work ; t#u8 brightness ; s#lp55xx_chip * chip ; } 
s#lp55xx_device_config struct lp55xx_device_config { const s#lp55xx_reg reset ; const s#lp55xx_reg enable ; const int max_channel ; int ( * post_init_device ) ( s#lp55xx_chip * ) ; void ( * brightness_work_fn ) ( s#work_struct * ) ; void ( * set_led_current ) ( s#lp55xx_led * , t#u8 ) ; void ( * firmware_cb ) ( s#lp55xx_chip * ) ; void ( * run_engine ) ( s#lp55xx_chip * , t#bool ) ; const s#attribute_group * dev_attr_group ; } 
E#LP55XX_ENGINE_3 3 
e#lp55xx_engine_index enum lp55xx_engine_index { LP55XX_ENGINE_INVALID , LP55XX_ENGINE_1 , LP55XX_ENGINE_2 , LP55XX_ENGINE_3 , LP55XX_ENGINE_MAX = E#LP55XX_ENGINE_3 , } 
e#lp55xx_engine_mode enum lp55xx_engine_mode { LP55XX_ENGINE_DISABLED , LP55XX_ENGINE_LOAD , LP55XX_ENGINE_RUN , } 
s#lp55xx_engine struct lp55xx_engine { e#lp55xx_engine_mode mode ; t#u16 led_mux ; } 
E#LP55XX_ENGINE_MAX E#LP55XX_ENGINE_3 
s#lp55xx_chip struct lp55xx_chip { s#i2c_client * cl ; s#clk * clk ; s#lp55xx_platform_data * pdata ; s#mutex lock ; int num_leds ; s#lp55xx_device_config * cfg ; e#lp55xx_engine_index engine_idx ; s#lp55xx_engine engines [ E#LP55XX_ENGINE_MAX ] ; const s#firmware * fw ; } 
lp55xx_write extern int lp55xx_write ( s#lp55xx_chip * , t#u8 , t#u8 ) 
lp55xx_read extern int lp55xx_read ( s#lp55xx_chip * , t#u8 , t#u8 * ) 
lp55xx_update_bits extern int lp55xx_update_bits ( s#lp55xx_chip * , t#u8 , t#u8 , t#u8 ) 
lp55xx_is_extclk_used extern t#bool lp55xx_is_extclk_used ( s#lp55xx_chip * ) 
lp55xx_init_device extern int lp55xx_init_device ( s#lp55xx_chip * ) 
lp55xx_deinit_device extern void lp55xx_deinit_device ( s#lp55xx_chip * ) 
lp55xx_register_leds extern int lp55xx_register_leds ( s#lp55xx_led * , s#lp55xx_chip * ) 
lp55xx_unregister_leds extern void lp55xx_unregister_leds ( s#lp55xx_led * , s#lp55xx_chip * ) 
lp55xx_register_sysfs extern int lp55xx_register_sysfs ( s#lp55xx_chip * ) 
lp55xx_unregister_sysfs extern void lp55xx_unregister_sysfs ( s#lp55xx_chip * ) 
lp55xx_of_populate_pdata extern int lp55xx_of_populate_pdata ( s#device * , s#device_node * ) 

/* drivers/leds/trigger/ledtrig-camera.o */
ledtrig_flash_ctrl extern void ledtrig_flash_ctrl ( t#bool ) 
ledtrig_torch_ctrl extern void ledtrig_torch_ctrl ( t#bool ) 

/* drivers/leds/trigger/ledtrig-cpu.o */
e#cpu_led_event enum cpu_led_event { CPU_LED_IDLE_START , CPU_LED_IDLE_END , CPU_LED_START , CPU_LED_STOP , CPU_LED_HALTED , } 
ledtrig_cpu extern void ledtrig_cpu ( e#cpu_led_event ) 

/* drivers/macintosh/windfarm_core.o */
wf_critical_overtemp int wf_critical_overtemp ( void ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#wf_control_ops struct wf_control_ops { int ( * set_value ) ( s#wf_control * , t#s32 ) ; int ( * get_value ) ( s#wf_control * , t#s32 * ) ; t#s32 ( * get_min ) ( s#wf_control * ) ; t#s32 ( * get_max ) ( s#wf_control * ) ; void ( * release ) ( s#wf_control * ) ; s#module * owner ; } 
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##proc_dir_entry
s##iommu_group
s#wf_control struct wf_control { s#list_head link ; const s#wf_control_ops * ops ; const char * name ; int type ; s#kref ref ; s#device_attribute attr ; void * priv ; } 
wf_register_control extern int wf_register_control ( s#wf_control * ) 
wf_unregister_control extern void wf_unregister_control ( s#wf_control * ) 
wf_find_control extern s#wf_control * wf_find_control ( const char * ) 
wf_get_control extern int wf_get_control ( s#wf_control * ) 
wf_put_control extern void wf_put_control ( s#wf_control * ) 
s#wf_sensor_ops struct wf_sensor_ops { int ( * get_value ) ( s#wf_sensor * , t#s32 * ) ; void ( * release ) ( s#wf_sensor * ) ; s#module * owner ; } 
s#wf_sensor struct wf_sensor { s#list_head link ; const s#wf_sensor_ops * ops ; const char * name ; s#kref ref ; s#device_attribute attr ; void * priv ; } 
wf_register_sensor extern int wf_register_sensor ( s#wf_sensor * ) 
wf_unregister_sensor extern void wf_unregister_sensor ( s#wf_sensor * ) 
wf_find_sensor extern s#wf_sensor * wf_find_sensor ( const char * ) 
wf_get_sensor extern int wf_get_sensor ( s#wf_sensor * ) 
wf_put_sensor extern void wf_put_sensor ( s#wf_sensor * ) 
wf_register_client extern int wf_register_client ( s#notifier_block * ) 
wf_unregister_client extern int wf_unregister_client ( s#notifier_block * ) 
wf_set_overtemp extern void wf_set_overtemp ( void ) 
wf_clear_overtemp extern void wf_clear_overtemp ( void ) 
wf_is_overtemp extern int wf_is_overtemp ( void ) 

/* drivers/md/bcache/closure.o */
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
t#closure_fn typedef void ( closure_fn ) ( s#closure * ) 
e#closure_type enum closure_type { TYPE_closure = 0 , TYPE_closure_with_waitlist = 1 , TYPE_closure_with_timer = 2 , TYPE_closure_with_waitlist_and_timer = 3 , MAX_CLOSURE_TYPE = 3 , } 
s#closure struct closure { union { struct { s#workqueue_struct * wq ; s#task_struct * task ; s#llist_node list ; t#closure_fn * fn ; } ; s#work_struct work ; } ; s#closure * parent ; t#atomic_t remaining ; e#closure_type type ; } 
closure_queue void closure_queue ( s#closure * ) 
closure_sub void closure_sub ( s#closure * , int ) 
closure_put void closure_put ( s#closure * ) 
s#closure_waitlist struct closure_waitlist { s#llist_head list ; } 
__closure_wake_up void __closure_wake_up ( s#closure_waitlist * ) 
closure_wait t#bool closure_wait ( s#closure_waitlist * , s#closure * ) 
closure_sync void closure_sync ( s#closure * ) 
closure_trylock t#bool closure_trylock ( s#closure * , s#closure * ) 
__closure_lock void __closure_lock ( s#closure * , s#closure * , s#closure_waitlist * ) 
do_closure_timer_init void do_closure_timer_init ( s#closure * ) 
s##tvec_base
__closure_delay t#bool __closure_delay ( s#closure * , unsigned long , s#timer_list * ) 
__closure_flush void __closure_flush ( s#closure * , s#timer_list * ) 
__closure_flush_sync void __closure_flush_sync ( s#closure * , s#timer_list * ) 

/* drivers/md/bcache/trace.o */
s##static_key_mod
__tracepoint_bcache_request_start extern s#tracepoint __tracepoint_bcache_request_start 
__tracepoint_bcache_request_end extern s#tracepoint __tracepoint_bcache_request_end 
__tracepoint_bcache_bypass_sequential extern s#tracepoint __tracepoint_bcache_bypass_sequential 
__tracepoint_bcache_bypass_congested extern s#tracepoint __tracepoint_bcache_bypass_congested 
__tracepoint_bcache_read extern s#tracepoint __tracepoint_bcache_read 
__tracepoint_bcache_write extern s#tracepoint __tracepoint_bcache_write 
__tracepoint_bcache_read_retry extern s#tracepoint __tracepoint_bcache_read_retry 
__tracepoint_bcache_cache_insert extern s#tracepoint __tracepoint_bcache_cache_insert 
__tracepoint_bcache_journal_replay_key extern s#tracepoint __tracepoint_bcache_journal_replay_key 
__tracepoint_bcache_journal_write extern s#tracepoint __tracepoint_bcache_journal_write 
__tracepoint_bcache_journal_full extern s#tracepoint __tracepoint_bcache_journal_full 
__tracepoint_bcache_journal_entry_full extern s#tracepoint __tracepoint_bcache_journal_entry_full 
__tracepoint_bcache_btree_cache_cannibalize extern s#tracepoint __tracepoint_bcache_btree_cache_cannibalize 
__tracepoint_bcache_btree_read extern s#tracepoint __tracepoint_bcache_btree_read 
__tracepoint_bcache_btree_write extern s#tracepoint __tracepoint_bcache_btree_write 
__tracepoint_bcache_btree_node_alloc extern s#tracepoint __tracepoint_bcache_btree_node_alloc 
__tracepoint_bcache_btree_node_alloc_fail extern s#tracepoint __tracepoint_bcache_btree_node_alloc_fail 
__tracepoint_bcache_btree_node_free extern s#tracepoint __tracepoint_bcache_btree_node_free 
__tracepoint_bcache_btree_gc_coalesce extern s#tracepoint __tracepoint_bcache_btree_gc_coalesce 
__tracepoint_bcache_gc_start extern s#tracepoint __tracepoint_bcache_gc_start 
__tracepoint_bcache_gc_end extern s#tracepoint __tracepoint_bcache_gc_end 
__tracepoint_bcache_gc_copy extern s#tracepoint __tracepoint_bcache_gc_copy 
__tracepoint_bcache_gc_copy_collision extern s#tracepoint __tracepoint_bcache_gc_copy_collision 
__tracepoint_bcache_btree_insert_key extern s#tracepoint __tracepoint_bcache_btree_insert_key 
__tracepoint_bcache_btree_node_split extern s#tracepoint __tracepoint_bcache_btree_node_split 
__tracepoint_bcache_btree_node_compact extern s#tracepoint __tracepoint_bcache_btree_node_compact 
__tracepoint_bcache_btree_set_root extern s#tracepoint __tracepoint_bcache_btree_set_root 
__tracepoint_bcache_alloc_invalidate extern s#tracepoint __tracepoint_bcache_alloc_invalidate 
__tracepoint_bcache_alloc_fail extern s#tracepoint __tracepoint_bcache_alloc_fail 
__tracepoint_bcache_writeback extern s#tracepoint __tracepoint_bcache_writeback 
__tracepoint_bcache_writeback_collision extern s#tracepoint __tracepoint_bcache_writeback_collision 

/* drivers/md/bitmap.o */
s#bitmap_page struct bitmap_page { char * map ; unsigned int hijacked : 1 ; unsigned int pending : 1 ; unsigned int count : 30 ; } 
s#bitmap_counts struct bitmap_counts { t#spinlock_t lock ; s#bitmap_page * bp ; unsigned long pages ; unsigned long missing_pages ; unsigned long chunkshift ; unsigned long chunks ; } 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##device_private
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s#vfsmount struct vfsmount { s#dentry * mnt_root ; s#super_block * mnt_sb ; int mnt_flags ; void * suse_kabi_padding ; } 
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#badblocks struct badblocks { int count ; int unacked_exist ; int shift ; t#u64 * page ; int changed ; t#seqlock_t lock ; t#sector_t sector ; t#sector_t size ; } 
s#md_rdev struct md_rdev { s#list_head same_set ; t#sector_t sectors ; s#mddev * mddev ; int last_events ; s#block_device * meta_bdev ; s#block_device * bdev ; s#page * sb_page , * bb_page ; int sb_loaded ; t#__u64 sb_events ; t#sector_t data_offset ; t#sector_t new_data_offset ; t#sector_t sb_start ; int sb_size ; int preferred_minor ; s#kobject kobj ; unsigned long flags ; t#wait_queue_head_t blocked_wait ; int desc_nr ; int raid_disk ; int new_raid_disk ; int saved_raid_disk ; t#sector_t recovery_offset ; t#atomic_t nr_pending ; t#atomic_t read_errors ; s#timespec last_read_error ; t#atomic_t corrected_errors ; s#work_struct del_work ; s#sysfs_dirent * sysfs_state ; s#badblocks badblocks ; } 
s#md_personality struct md_personality { char * name ; int level ; s#list_head list ; s#module * owner ; void ( * make_request ) ( s#mddev * , s#bio * ) ; int ( * run ) ( s#mddev * ) ; int ( * stop ) ( s#mddev * ) ; void ( * status ) ( s#seq_file * , s#mddev * ) ; void ( * error_handler ) ( s#mddev * , s#md_rdev * ) ; int ( * hot_add_disk ) ( s#mddev * , s#md_rdev * ) ; int ( * hot_remove_disk ) ( s#mddev * , s#md_rdev * ) ; int ( * spare_active ) ( s#mddev * ) ; t#sector_t ( * sync_request ) ( s#mddev * , t#sector_t , int * , int ) ; int ( * resize ) ( s#mddev * , t#sector_t ) ; t#sector_t ( * size ) ( s#mddev * , t#sector_t , int ) ; int ( * check_reshape ) ( s#mddev * ) ; int ( * start_reshape ) ( s#mddev * ) ; void ( * finish_reshape ) ( s#mddev * ) ; void ( * quiesce ) ( s#mddev * , int ) ; void * ( * takeover ) ( s#mddev * ) ; } 
s#md_thread struct md_thread { void ( * run ) ( s#md_thread * ) ; s#mddev * mddev ; t#wait_queue_head_t wqueue ; unsigned long flags ; s#task_struct * tsk ; unsigned long timeout ; void * private ; } 
s#mddev struct mddev { void * private ; s#md_personality * pers ; t#dev_t unit ; int md_minor ; s#list_head disks ; unsigned long flags ; int suspended ; t#atomic_t active_io ; int ro ; int sysfs_active ; int ready ; s#gendisk * gendisk ; s#kobject kobj ; int hold_active ; int major_version , minor_version , patch_version ; int persistent ; int external ; char metadata_type [ 17 ] ; int chunk_sectors ; t#time_t ctime , utime ; int level , layout ; char clevel [ 16 ] ; int raid_disks ; int max_disks ; t#sector_t dev_sectors ; t#sector_t array_sectors ; int external_size ; t#__u64 events ; int can_decrease_events ; char uuid [ 16 ] ; t#sector_t reshape_position ; int delta_disks , new_level , new_layout ; int new_chunk_sectors ; int reshape_backwards ; s#md_thread * thread ; s#md_thread * sync_thread ; char * last_sync_action ; t#sector_t curr_resync ; t#sector_t curr_resync_completed ; unsigned long resync_mark ; t#sector_t resync_mark_cnt ; t#sector_t curr_mark_cnt ; t#sector_t resync_max_sectors ; t#atomic64_t resync_mismatches ; t#sector_t suspend_lo ; t#sector_t suspend_hi ; int sync_speed_min ; int sync_speed_max ; int parallel_resync ; int ok_start_degraded ; unsigned long recovery ; int recovery_disabled ; int in_sync ; s#mutex open_mutex ; s#mutex reconfig_mutex ; t#atomic_t active ; t#atomic_t openers ; int changed ; int degraded ; int merge_check_needed ; t#atomic_t recovery_active ; t#wait_queue_head_t recovery_wait ; t#sector_t recovery_cp ; t#sector_t resync_min ; t#sector_t resync_max ; s#sysfs_dirent * sysfs_state ; s#sysfs_dirent * sysfs_action ; s#work_struct del_work ; t#spinlock_t write_lock ; t#wait_queue_head_t sb_wait ; t#atomic_t pending_writes ; unsigned int safemode ; unsigned int safemode_delay ; s#timer_list safemode_timer ; t#atomic_t writes_pending ; s#request_queue * queue ; s#bitmap * bitmap ; struct { s#file * file ; t#loff_t offset ; unsigned long space ; t#loff_t default_offset ; unsigned long default_space ; s#mutex mutex ; unsigned long chunksize ; unsigned long daemon_sleep ; unsigned long max_write_behind ; int external ; } bitmap_info ; t#atomic_t max_corr_read_errors ; s#list_head all_mddevs ; s#attribute_group * to_remove ; s#bio_set * bio_set ; s#bio * flush_bio ; t#atomic_t flush_pending ; s#work_struct flush_work ; s#work_struct event_work ; void ( * sync_super ) ( s#mddev * , s#md_rdev * ) ; } 
s#bitmap_storage struct bitmap_storage { s#file * file ; s#page * sb_page ; s#page * * filemap ; unsigned long * filemap_attr ; unsigned long file_pages ; unsigned long bytes ; } 
s#bitmap struct bitmap { s#bitmap_counts counts ; s#mddev * mddev ; t#__u64 events_cleared ; int need_sync ; s#bitmap_storage storage ; unsigned long flags ; int allclean ; t#atomic_t behind_writes ; unsigned long behind_writes_used ; unsigned long daemon_lastrun ; unsigned long last_end_sync ; t#atomic_t pending_writes ; t#wait_queue_head_t write_wait ; t#wait_queue_head_t overflow_wait ; t#wait_queue_head_t behind_wait ; s#sysfs_dirent * sysfs_can_clear ; } 
bitmap_unplug void bitmap_unplug ( s#bitmap * ) 
bitmap_startwrite int bitmap_startwrite ( s#bitmap * , t#sector_t , unsigned long , int ) 
bitmap_endwrite void bitmap_endwrite ( s#bitmap * , t#sector_t , unsigned long , int , int ) 
bitmap_start_sync int bitmap_start_sync ( s#bitmap * , t#sector_t , t#sector_t * , int ) 
bitmap_end_sync void bitmap_end_sync ( s#bitmap * , t#sector_t , t#sector_t * , int ) 
bitmap_close_sync void bitmap_close_sync ( s#bitmap * ) 
bitmap_cond_end_sync void bitmap_cond_end_sync ( s#bitmap * , t#sector_t ) 
bitmap_load int bitmap_load ( s#mddev * ) 
bitmap_resize int bitmap_resize ( s#bitmap * , t#sector_t , int , int ) 

/* drivers/md/dm.o */
s#ratelimit_state struct ratelimit_state { t#raw_spinlock_t lock ; int interval ; int burst ; int printed ; int missed ; unsigned long begin ; unsigned long flags ; } 
dm_ratelimit_state extern s#ratelimit_state dm_ratelimit_state 
u#map_info union map_info { void * ptr ; unsigned long long ll ; } 
s##kmem_cache_node
s##array_cache
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##bsg_job
s##throtl_data
dm_get_rq_mapinfo u#map_info * dm_get_rq_mapinfo ( s#request * ) 
dm_get_reserved_bio_based_ios unsigned dm_get_reserved_bio_based_ios ( void ) 
dm_get_reserved_rq_based_ios unsigned dm_get_reserved_rq_based_ios ( void ) 
dm_requeue_unmapped_request void dm_requeue_unmapped_request ( s#request * ) 
dm_kill_unmapped_request void dm_kill_unmapped_request ( s#request * , int ) 
s##dm_table
t#dm_ctr_fn typedef int ( * dm_ctr_fn ) ( s#dm_target * , unsigned int , char * * ) 
t#dm_dtr_fn typedef void ( * dm_dtr_fn ) ( s#dm_target * ) 
t#dm_map_fn typedef int ( * dm_map_fn ) ( s#dm_target * , s#bio * ) 
t#dm_map_request_fn typedef int ( * dm_map_request_fn ) ( s#dm_target * , s#request * , u#map_info * ) 
t#dm_endio_fn typedef int ( * dm_endio_fn ) ( s#dm_target * , s#bio * , int ) 
t#dm_request_endio_fn typedef int ( * dm_request_endio_fn ) ( s#dm_target * , s#request * , int , u#map_info * ) 
t#dm_presuspend_fn typedef void ( * dm_presuspend_fn ) ( s#dm_target * ) 
t#dm_postsuspend_fn typedef void ( * dm_postsuspend_fn ) ( s#dm_target * ) 
t#dm_preresume_fn typedef int ( * dm_preresume_fn ) ( s#dm_target * ) 
t#dm_resume_fn typedef void ( * dm_resume_fn ) ( s#dm_target * ) 
t#status_type_t typedef enum { STATUSTYPE_INFO , STATUSTYPE_TABLE } status_type_t 
t#dm_status_fn typedef void ( * dm_status_fn ) ( s#dm_target * , t#status_type_t , unsigned , char * , unsigned ) 
t#dm_message_fn typedef int ( * dm_message_fn ) ( s#dm_target * , unsigned , char * * ) 
t#dm_ioctl_fn typedef int ( * dm_ioctl_fn ) ( s#dm_target * , unsigned int , unsigned long ) 
t#dm_merge_fn typedef int ( * dm_merge_fn ) ( s#dm_target * , s#bvec_merge_data * , s#bio_vec * , int ) 
t#dm_busy_fn typedef int ( * dm_busy_fn ) ( s#dm_target * ) 
s#dm_dev struct dm_dev { s#block_device * bdev ; t#fmode_t mode ; char name [ 16 ] ; } 
t#iterate_devices_callout_fn typedef int ( * iterate_devices_callout_fn ) ( s#dm_target * , s#dm_dev * , t#sector_t , t#sector_t , void * ) 
t#dm_iterate_devices_fn typedef int ( * dm_iterate_devices_fn ) ( s#dm_target * , t#iterate_devices_callout_fn , void * ) 
t#dm_io_hints_fn typedef void ( * dm_io_hints_fn ) ( s#dm_target * , s#queue_limits * ) 
s#target_type struct target_type { t#uint64_t features ; const char * name ; s#module * module ; unsigned version [ 3 ] ; t#dm_ctr_fn ctr ; t#dm_dtr_fn dtr ; t#dm_map_fn map ; t#dm_map_request_fn map_rq ; t#dm_endio_fn end_io ; t#dm_request_endio_fn rq_end_io ; t#dm_presuspend_fn presuspend ; t#dm_postsuspend_fn postsuspend ; t#dm_preresume_fn preresume ; t#dm_resume_fn resume ; t#dm_status_fn status ; t#dm_message_fn message ; t#dm_ioctl_fn ioctl ; t#dm_merge_fn merge ; t#dm_busy_fn busy ; t#dm_iterate_devices_fn iterate_devices ; t#dm_io_hints_fn io_hints ; s#list_head list ; } 
t#dm_num_write_bios_fn typedef unsigned ( * dm_num_write_bios_fn ) ( s#dm_target * , s#bio * ) 
s#dm_target struct dm_target { s#dm_table * table ; s#target_type * type ; t#sector_t begin ; t#sector_t len ; t#uint32_t max_io_len ; unsigned num_flush_bios ; unsigned num_discard_bios ; unsigned num_write_same_bios ; unsigned per_bio_data_size ; t#dm_num_write_bios_fn num_write_bios ; void * private ; char * error ; t#bool flush_supported : 1 ; t#bool discards_supported : 1 ; t#bool split_discard_bios : 1 ; t#bool discard_zeroes_data_unsupported : 1 ; } 
dm_set_target_max_io_len int dm_set_target_max_io_len ( s#dm_target * , t#sector_t ) 
dm_dispatch_request void dm_dispatch_request ( s#request * ) 
dm_underlying_device_busy int dm_underlying_device_busy ( s#request_queue * ) 
s##mapped_device
dm_get_queue_limits s#queue_limits * dm_get_queue_limits ( s#mapped_device * ) 
dm_get_md s#mapped_device * dm_get_md ( t#dev_t ) 
dm_device_name const char * dm_device_name ( s#mapped_device * ) 
dm_put void dm_put ( s#mapped_device * ) 
dm_suspended int dm_suspended ( s#dm_target * ) 
dm_noflush_suspending int dm_noflush_suspending ( s#dm_target * ) 
dm_get_mapinfo u#map_info * dm_get_mapinfo ( s#bio * ) 

/* drivers/md/dm-bio-prison.o */
s##dm_bio_prison
dm_bio_prison_create s#dm_bio_prison * dm_bio_prison_create ( unsigned ) 
dm_bio_prison_destroy void dm_bio_prison_destroy ( s#dm_bio_prison * ) 
t#dm_thin_id typedef t#uint64_t dm_thin_id 
t#dm_block_t typedef t#uint64_t dm_block_t 
s#dm_cell_key struct dm_cell_key { int virtual ; t#dm_thin_id dev ; t#dm_block_t block ; } 
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s#dm_bio_prison_cell struct dm_bio_prison_cell { s#hlist_node list ; s#dm_cell_key key ; s#bio * holder ; s#bio_list bios ; } 
dm_bio_prison_alloc_cell s#dm_bio_prison_cell * dm_bio_prison_alloc_cell ( s#dm_bio_prison * , t#gfp_t ) 
dm_bio_prison_free_cell void dm_bio_prison_free_cell ( s#dm_bio_prison * , s#dm_bio_prison_cell * ) 
dm_bio_detain int dm_bio_detain ( s#dm_bio_prison * , s#dm_cell_key * , s#bio * , s#dm_bio_prison_cell * , s#dm_bio_prison_cell * * ) 
dm_get_cell int dm_get_cell ( s#dm_bio_prison * , s#dm_cell_key * , s#dm_bio_prison_cell * , s#dm_bio_prison_cell * * ) 
dm_cell_release void dm_cell_release ( s#dm_bio_prison * , s#dm_bio_prison_cell * , s#bio_list * ) 
dm_cell_release_no_holder void dm_cell_release_no_holder ( s#dm_bio_prison * , s#dm_bio_prison_cell * , s#bio_list * ) 
dm_cell_error void dm_cell_error ( s#dm_bio_prison * , s#dm_bio_prison_cell * ) 
s##dm_deferred_set
dm_deferred_set_create s#dm_deferred_set * dm_deferred_set_create ( void ) 
dm_deferred_set_destroy void dm_deferred_set_destroy ( s#dm_deferred_set * ) 
s##dm_deferred_entry
dm_deferred_entry_inc s#dm_deferred_entry * dm_deferred_entry_inc ( s#dm_deferred_set * ) 
dm_deferred_entry_dec void dm_deferred_entry_dec ( s#dm_deferred_entry * , s#list_head * ) 
dm_deferred_set_add_work int dm_deferred_set_add_work ( s#dm_deferred_set * , s#list_head * ) 

/* drivers/md/dm-bufio.o */
s##dm_bufio_client
s##dm_buffer
dm_bufio_get void * dm_bufio_get ( s#dm_bufio_client * , t#sector_t , s#dm_buffer * * ) 
dm_bufio_read void * dm_bufio_read ( s#dm_bufio_client * , t#sector_t , s#dm_buffer * * ) 
dm_bufio_new void * dm_bufio_new ( s#dm_bufio_client * , t#sector_t , s#dm_buffer * * ) 
dm_bufio_prefetch void dm_bufio_prefetch ( s#dm_bufio_client * , t#sector_t , unsigned ) 
dm_bufio_release void dm_bufio_release ( s#dm_buffer * ) 
dm_bufio_mark_buffer_dirty void dm_bufio_mark_buffer_dirty ( s#dm_buffer * ) 
dm_bufio_write_dirty_buffers_async void dm_bufio_write_dirty_buffers_async ( s#dm_bufio_client * ) 
dm_bufio_write_dirty_buffers int dm_bufio_write_dirty_buffers ( s#dm_bufio_client * ) 
dm_bufio_issue_flush int dm_bufio_issue_flush ( s#dm_bufio_client * ) 
dm_bufio_release_move void dm_bufio_release_move ( s#dm_buffer * , t#sector_t ) 
dm_bufio_get_block_size unsigned dm_bufio_get_block_size ( s#dm_bufio_client * ) 
dm_bufio_get_device_size t#sector_t dm_bufio_get_device_size ( s#dm_bufio_client * ) 
dm_bufio_get_block_number t#sector_t dm_bufio_get_block_number ( s#dm_buffer * ) 
dm_bufio_get_block_data void * dm_bufio_get_block_data ( s#dm_buffer * ) 
dm_bufio_get_aux_data void * dm_bufio_get_aux_data ( s#dm_buffer * ) 
dm_bufio_get_client s#dm_bufio_client * dm_bufio_get_client ( s#dm_buffer * ) 
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
dm_bufio_client_create s#dm_bufio_client * dm_bufio_client_create ( s#block_device * , unsigned , unsigned , unsigned , void ( * ) ( s#dm_buffer * ) , void ( * ) ( s#dm_buffer * ) ) 
dm_bufio_client_destroy void dm_bufio_client_destroy ( s#dm_bufio_client * ) 

/* drivers/md/dm-builtin.o */
s##sock
s##sysfs_dirent
dm_kobject_release void dm_kobject_release ( s#kobject * ) 

/* drivers/md/dm-cache-policy.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kstatfs
s##seq_file
s##optimistic_spin_queue
s##export_operations
s##device_private
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
t#dm_oblock_t typedef t#dm_block_t dm_oblock_t 
e#policy_operation enum policy_operation { POLICY_HIT , POLICY_MISS , POLICY_NEW , POLICY_REPLACE } 
t#dm_cblock_t typedef t#uint32_t dm_cblock_t 
s#policy_result struct policy_result { e#policy_operation op ; t#dm_oblock_t old_oblock ; t#dm_cblock_t cblock ; } 
t#policy_walk_fn typedef int ( * policy_walk_fn ) ( void * , t#dm_cblock_t , t#dm_oblock_t , t#uint32_t ) 
s#dm_cache_policy struct dm_cache_policy { void ( * destroy ) ( s#dm_cache_policy * ) ; int ( * map ) ( s#dm_cache_policy * , t#dm_oblock_t , t#bool , t#bool , t#bool , s#bio * , s#policy_result * ) ; int ( * lookup ) ( s#dm_cache_policy * , t#dm_oblock_t , t#dm_cblock_t * ) ; void ( * set_dirty ) ( s#dm_cache_policy * , t#dm_oblock_t ) ; void ( * clear_dirty ) ( s#dm_cache_policy * , t#dm_oblock_t ) ; int ( * load_mapping ) ( s#dm_cache_policy * , t#dm_oblock_t , t#dm_cblock_t , t#uint32_t , t#bool ) ; int ( * walk_mappings ) ( s#dm_cache_policy * , t#policy_walk_fn , void * ) ; void ( * remove_mapping ) ( s#dm_cache_policy * , t#dm_oblock_t ) ; void ( * force_mapping ) ( s#dm_cache_policy * , t#dm_oblock_t , t#dm_oblock_t ) ; int ( * writeback_work ) ( s#dm_cache_policy * , t#dm_oblock_t * , t#dm_cblock_t * ) ; t#dm_cblock_t ( * residency ) ( s#dm_cache_policy * ) ; void ( * tick ) ( s#dm_cache_policy * ) ; int ( * emit_config_values ) ( s#dm_cache_policy * , char * , unsigned ) ; int ( * set_config_value ) ( s#dm_cache_policy * , const char * , const char * ) ; void * private ; } 
s#dm_cache_policy_type struct dm_cache_policy_type { s#list_head list ; char name [ 16 ] ; unsigned version [ 3 ] ; t#size_t hint_size ; s#module * owner ; s#dm_cache_policy * ( * create ) ( t#dm_cblock_t , t#sector_t , t#sector_t ) ; } 
dm_cache_policy_register int dm_cache_policy_register ( s#dm_cache_policy_type * ) 
dm_cache_policy_unregister void dm_cache_policy_unregister ( s#dm_cache_policy_type * ) 
dm_cache_policy_create s#dm_cache_policy * dm_cache_policy_create ( const char * , t#dm_cblock_t , t#sector_t , t#sector_t ) 
dm_cache_policy_destroy void dm_cache_policy_destroy ( s#dm_cache_policy * ) 
dm_cache_policy_get_name const char * dm_cache_policy_get_name ( s#dm_cache_policy * ) 
dm_cache_policy_get_version const unsigned * dm_cache_policy_get_version ( s#dm_cache_policy * ) 
dm_cache_policy_get_hint_size t#size_t dm_cache_policy_get_hint_size ( s#dm_cache_policy * ) 

/* drivers/md/dm-exception-store.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kstatfs
s##seq_file
s##optimistic_spin_queue
s##export_operations
s##device_private
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##dm_snapshot
s#dm_exception_store struct dm_exception_store { s#dm_exception_store_type * type ; s#dm_snapshot * snap ; unsigned chunk_size ; unsigned chunk_mask ; unsigned chunk_shift ; void * context ; } 
t#chunk_t typedef t#sector_t chunk_t 
s#dm_exception struct dm_exception { s#list_head hash_list ; t#chunk_t old_chunk ; t#chunk_t new_chunk ; } 
s#dm_exception_store_type struct dm_exception_store_type { const char * name ; s#module * module ; int ( * ctr ) ( s#dm_exception_store * , unsigned , char * * ) ; void ( * dtr ) ( s#dm_exception_store * ) ; int ( * read_metadata ) ( s#dm_exception_store * , int ( * ) ( void * , t#chunk_t , t#chunk_t ) , void * ) ; int ( * prepare_exception ) ( s#dm_exception_store * , s#dm_exception * ) ; void ( * commit_exception ) ( s#dm_exception_store * , s#dm_exception * , void ( * ) ( void * , int ) , void * ) ; int ( * prepare_merge ) ( s#dm_exception_store * , t#chunk_t * , t#chunk_t * ) ; int ( * commit_merge ) ( s#dm_exception_store * , int ) ; void ( * drop_snapshot ) ( s#dm_exception_store * ) ; unsigned ( * status ) ( s#dm_exception_store * , t#status_type_t , char * , unsigned ) ; void ( * usage ) ( s#dm_exception_store * , t#sector_t * , t#sector_t * , t#sector_t * ) ; s#list_head list ; } 
dm_exception_store_type_register int dm_exception_store_type_register ( s#dm_exception_store_type * ) 
dm_exception_store_type_unregister int dm_exception_store_type_unregister ( s#dm_exception_store_type * ) 
s##dm_table
dm_exception_store_create int dm_exception_store_create ( s#dm_target * , int , char * * , s#dm_snapshot * , unsigned * , s#dm_exception_store * * ) 
dm_exception_store_destroy void dm_exception_store_destroy ( s#dm_exception_store * ) 

/* drivers/md/dm-io.o */
s##dm_io_client
dm_io_client_create s#dm_io_client * dm_io_client_create ( void ) 
dm_io_client_destroy void dm_io_client_destroy ( s#dm_io_client * ) 
e#dm_io_mem_type enum dm_io_mem_type { DM_IO_PAGE_LIST , DM_IO_BVEC , DM_IO_VMA , DM_IO_KMEM , } 
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##workqueue_struct
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s##slab
s#page_list struct page_list { s#page_list * next ; s#page * page ; } 
s#dm_io_memory struct dm_io_memory { e#dm_io_mem_type type ; unsigned offset ; union { s#page_list * pl ; s#bio_vec * bvec ; void * vma ; void * addr ; } ptr ; } 
t#io_notify_fn typedef void ( * io_notify_fn ) ( unsigned long , void * ) 
s#dm_io_notify struct dm_io_notify { t#io_notify_fn fn ; void * context ; } 
s#dm_io_request struct dm_io_request { int bi_rw ; s#dm_io_memory mem ; s#dm_io_notify notify ; s#dm_io_client * client ; } 
s#dm_io_region struct dm_io_region { s#block_device * bdev ; t#sector_t sector ; t#sector_t count ; } 
dm_io int dm_io ( s#dm_io_request * , unsigned , s#dm_io_region * , unsigned long * ) 

/* drivers/md/dm-kcopyd.o */
s##dm_kcopyd_client
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
t#dm_kcopyd_notify_fn typedef void ( * dm_kcopyd_notify_fn ) ( int , unsigned long , void * ) 
dm_kcopyd_copy int dm_kcopyd_copy ( s#dm_kcopyd_client * , s#dm_io_region * , unsigned , s#dm_io_region * , unsigned , t#dm_kcopyd_notify_fn , void * ) 
dm_kcopyd_zero int dm_kcopyd_zero ( s#dm_kcopyd_client * , unsigned , s#dm_io_region * , unsigned , t#dm_kcopyd_notify_fn , void * ) 
dm_kcopyd_prepare_callback void * dm_kcopyd_prepare_callback ( s#dm_kcopyd_client * , t#dm_kcopyd_notify_fn , void * ) 
dm_kcopyd_do_callback void dm_kcopyd_do_callback ( void * , int , unsigned long ) 
s#dm_kcopyd_throttle struct dm_kcopyd_throttle { unsigned throttle ; unsigned num_io_jobs ; unsigned io_period ; unsigned total_period ; unsigned last_jiffies ; } 
dm_kcopyd_client_create s#dm_kcopyd_client * dm_kcopyd_client_create ( s#dm_kcopyd_throttle * ) 
dm_kcopyd_client_destroy void dm_kcopyd_client_destroy ( s#dm_kcopyd_client * ) 

/* drivers/md/dm-log.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kstatfs
s##seq_file
s##optimistic_spin_queue
s##export_operations
s##device_private
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##dm_table
s#dm_dirty_log struct dm_dirty_log { s#dm_dirty_log_type * type ; int ( * flush_callback_fn ) ( s#dm_target * ) ; void * context ; } 
t#region_t typedef t#sector_t region_t 
s#dm_dirty_log_type struct dm_dirty_log_type { const char * name ; s#module * module ; s#list_head list ; int ( * ctr ) ( s#dm_dirty_log * , s#dm_target * , unsigned , char * * ) ; void ( * dtr ) ( s#dm_dirty_log * ) ; int ( * presuspend ) ( s#dm_dirty_log * ) ; int ( * postsuspend ) ( s#dm_dirty_log * ) ; int ( * resume ) ( s#dm_dirty_log * ) ; t#uint32_t ( * get_region_size ) ( s#dm_dirty_log * ) ; int ( * is_clean ) ( s#dm_dirty_log * , t#region_t ) ; int ( * in_sync ) ( s#dm_dirty_log * , t#region_t , int ) ; int ( * flush ) ( s#dm_dirty_log * ) ; void ( * mark_region ) ( s#dm_dirty_log * , t#region_t ) ; void ( * clear_region ) ( s#dm_dirty_log * , t#region_t ) ; int ( * get_resync_work ) ( s#dm_dirty_log * , t#region_t * ) ; void ( * set_region_sync ) ( s#dm_dirty_log * , t#region_t , int ) ; t#region_t ( * get_sync_count ) ( s#dm_dirty_log * ) ; int ( * status ) ( s#dm_dirty_log * , t#status_type_t , char * , unsigned ) ; int ( * is_remote_recovering ) ( s#dm_dirty_log * , t#region_t ) ; } 
dm_dirty_log_type_register int dm_dirty_log_type_register ( s#dm_dirty_log_type * ) 
dm_dirty_log_type_unregister int dm_dirty_log_type_unregister ( s#dm_dirty_log_type * ) 
dm_dirty_log_create s#dm_dirty_log * dm_dirty_log_create ( const char * , s#dm_target * , int ( * ) ( s#dm_target * ) , unsigned , char * * ) 
dm_dirty_log_destroy void dm_dirty_log_destroy ( s#dm_dirty_log * ) 

/* drivers/md/dm-path-selector.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kstatfs
s##seq_file
s##optimistic_spin_queue
s##export_operations
s##device_private
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#path_selector struct path_selector { s#path_selector_type * type ; void * context ; } 
s#dm_path struct dm_path { char pdev [ 16 ] ; s#dm_dev * dev ; void * pscontext ; } 
s#path_selector_type struct path_selector_type { char * name ; s#module * module ; unsigned int table_args ; unsigned int info_args ; int ( * create ) ( s#path_selector * , unsigned , char * * ) ; void ( * destroy ) ( s#path_selector * ) ; int ( * add_path ) ( s#path_selector * , s#dm_path * , int , char * * , char * * ) ; s#dm_path * ( * select_path ) ( s#path_selector * , unsigned * , t#size_t ) ; void ( * fail_path ) ( s#path_selector * , s#dm_path * ) ; int ( * reinstate_path ) ( s#path_selector * , s#dm_path * ) ; int ( * status ) ( s#path_selector * , s#dm_path * , t#status_type_t , char * , unsigned int ) ; int ( * start_io ) ( s#path_selector * , s#dm_path * , t#size_t ) ; int ( * end_io ) ( s#path_selector * , s#dm_path * , t#size_t ) ; } 
dm_register_path_selector int dm_register_path_selector ( s#path_selector_type * ) 
dm_unregister_path_selector int dm_unregister_path_selector ( s#path_selector_type * ) 

/* drivers/md/dm-region-hash.o */
s##dm_region_hash
dm_rh_region_to_sector t#sector_t dm_rh_region_to_sector ( s#dm_region_hash * , t#region_t ) 
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
dm_rh_bio_to_region t#region_t dm_rh_bio_to_region ( s#dm_region_hash * , s#bio * ) 
s##dm_region
dm_rh_region_context void * dm_rh_region_context ( s#dm_region * ) 
dm_rh_get_region_key t#region_t dm_rh_get_region_key ( s#dm_region * ) 
dm_rh_get_region_size t#sector_t dm_rh_get_region_size ( s#dm_region_hash * ) 
s##dm_table
dm_region_hash_create s#dm_region_hash * dm_region_hash_create ( void * , void ( * ) ( void * , s#bio_list * ) , void ( * ) ( void * ) , void ( * ) ( void * ) , t#sector_t , unsigned , s#dm_dirty_log * , t#uint32_t , t#region_t ) 
dm_region_hash_destroy void dm_region_hash_destroy ( s#dm_region_hash * ) 
dm_rh_dirty_log s#dm_dirty_log * dm_rh_dirty_log ( s#dm_region_hash * ) 
dm_rh_get_state int dm_rh_get_state ( s#dm_region_hash * , t#region_t , int ) 
dm_rh_mark_nosync void dm_rh_mark_nosync ( s#dm_region_hash * , s#bio * ) 
dm_rh_update_states void dm_rh_update_states ( s#dm_region_hash * , int ) 
dm_rh_inc_pending void dm_rh_inc_pending ( s#dm_region_hash * , s#bio_list * ) 
dm_rh_dec void dm_rh_dec ( s#dm_region_hash * , t#region_t ) 
dm_rh_recovery_prepare void dm_rh_recovery_prepare ( s#dm_region_hash * ) 
dm_rh_recovery_start s#dm_region * dm_rh_recovery_start ( s#dm_region_hash * ) 
dm_rh_recovery_end void dm_rh_recovery_end ( s#dm_region * , int ) 
dm_rh_recovery_in_flight int dm_rh_recovery_in_flight ( s#dm_region_hash * ) 
dm_rh_flush int dm_rh_flush ( s#dm_region_hash * ) 
dm_rh_delay void dm_rh_delay ( s#dm_region_hash * , s#bio * ) 
dm_rh_stop_recovery void dm_rh_stop_recovery ( s#dm_region_hash * ) 
dm_rh_start_recovery void dm_rh_start_recovery ( s#dm_region_hash * ) 

/* drivers/md/dm-snap.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s##dm_snapshot
dm_snap_origin s#dm_dev * dm_snap_origin ( s#dm_snapshot * ) 
dm_snap_cow s#dm_dev * dm_snap_cow ( s#dm_snapshot * ) 

/* drivers/md/dm-table.o */
dm_vcalloc void * dm_vcalloc ( unsigned long , unsigned long ) 
s##dm_table
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kstatfs
s##seq_file
s##optimistic_spin_queue
s##export_operations
s##device_private
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
E#MAX_NESTED_LINKS 8 
s#nameidata struct nameidata { s#path path ; s#qstr last ; s#path root ; s#inode * inode ; unsigned int flags ; unsigned seq ; int last_type ; unsigned depth ; char * saved_names [ E#MAX_NESTED_LINKS + 1 ] ; } 
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
dm_get_device int dm_get_device ( s#dm_target * , const char * , t#fmode_t , s#dm_dev * * ) 
dm_set_device_limits int dm_set_device_limits ( s#dm_target * , s#dm_dev * , t#sector_t , t#sector_t , void * ) 
dm_put_device void dm_put_device ( s#dm_target * , s#dm_dev * ) 
s#dm_arg struct dm_arg { unsigned min ; unsigned max ; char * error ; } 
s#dm_arg_set struct dm_arg_set { unsigned argc ; char * * argv ; } 
dm_read_arg int dm_read_arg ( s#dm_arg * , s#dm_arg_set * , unsigned * , char * * ) 
dm_read_arg_group int dm_read_arg_group ( s#dm_arg * , s#dm_arg_set * , unsigned * , char * * ) 
dm_shift_arg const char * dm_shift_arg ( s#dm_arg_set * ) 
dm_consume_args void dm_consume_args ( s#dm_arg_set * , unsigned ) 
dm_table_event void dm_table_event ( s#dm_table * ) 
dm_table_get_size t#sector_t dm_table_get_size ( s#dm_table * ) 
dm_table_get_mode t#fmode_t dm_table_get_mode ( s#dm_table * ) 
s#dm_target_callbacks struct dm_target_callbacks { s#list_head list ; int ( * congested_fn ) ( s#dm_target_callbacks * , int ) ; } 
dm_table_add_target_callbacks void dm_table_add_target_callbacks ( s#dm_table * , s#dm_target_callbacks * ) 
s##mapped_device
dm_table_get_md s#mapped_device * dm_table_get_md ( s#dm_table * ) 

/* drivers/md/dm-target.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kstatfs
s##seq_file
s##optimistic_spin_queue
s##export_operations
s##device_private
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##dm_table
dm_register_target int dm_register_target ( s#target_type * ) 
dm_unregister_target void dm_unregister_target ( s#target_type * ) 

/* drivers/md/dm-uevent.o */
s##sock
s##sysfs_dirent
dm_send_uevents extern void dm_send_uevents ( s#list_head * , s#kobject * ) 
e#dm_uevent_type enum dm_uevent_type { DM_UEVENT_PATH_FAILED , DM_UEVENT_PATH_REINSTATED , } 
s##dm_table
s##module
s##posix_acl
s##vfsmount
s##kstatfs
s##seq_file
s##radix_tree_node
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##blk_mq_ctx
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##kmem_cache_node
s##array_cache
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##slab
s##export_operations
s##mtd_info
s##nameidata
s##cdev
dm_path_uevent extern void dm_path_uevent ( e#dm_uevent_type , s#dm_target * , const char * , unsigned ) 

/* drivers/md/md.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
bio_alloc_mddev extern s#bio * bio_alloc_mddev ( t#gfp_t , int , s#mddev * ) 
bio_clone_mddev extern s#bio * bio_clone_mddev ( s#bio * , t#gfp_t , s#mddev * ) 
md_trim_bio extern void md_trim_bio ( s#bio * , int , int ) 
md_new_event extern void md_new_event ( s#mddev * ) 
mddev_suspend extern void mddev_suspend ( s#mddev * ) 
mddev_resume extern void mddev_resume ( s#mddev * ) 
mddev_congested extern int mddev_congested ( s#mddev * , int ) 
md_flush_request extern void md_flush_request ( s#mddev * , s#bio * ) 
md_unplug extern void md_unplug ( s#blk_plug_cb * , t#bool ) 
mddev_init extern void mddev_init ( s#mddev * ) 
md_rdev_clear extern void md_rdev_clear ( s#md_rdev * ) 
sync_page_io extern int sync_page_io ( s#md_rdev * , t#sector_t , int , s#page * , int , t#bool ) 
md_check_no_bitmap extern int md_check_no_bitmap ( s#mddev * ) 
md_integrity_register extern int md_integrity_register ( s#mddev * ) 
md_integrity_add_rdev extern void md_integrity_add_rdev ( s#md_rdev * , s#mddev * ) 
md_rdev_init extern int md_rdev_init ( s#md_rdev * ) 
md_run extern int md_run ( s#mddev * ) 
md_stop_writes extern void md_stop_writes ( s#mddev * ) 
md_stop extern void md_stop ( s#mddev * ) 
md_set_array_sectors extern void md_set_array_sectors ( s#mddev * , t#sector_t ) 
md_allow_write extern int md_allow_write ( s#mddev * ) 
md_do_sync extern void md_do_sync ( s#md_thread * ) 
md_wait_for_blocked_rdev extern void md_wait_for_blocked_rdev ( s#md_rdev * , s#mddev * ) 
md_finish_reshape extern void md_finish_reshape ( s#mddev * ) 
md_is_badblock extern int md_is_badblock ( s#badblocks * , t#sector_t , int , t#sector_t * , int * ) 
rdev_set_badblocks extern int rdev_set_badblocks ( s#md_rdev * , t#sector_t , int , int ) 
rdev_clear_badblocks extern int rdev_clear_badblocks ( s#md_rdev * , t#sector_t , int , int ) 
md_ack_all_badblocks extern void md_ack_all_badblocks ( s#badblocks * ) 
register_md_personality extern int register_md_personality ( s#md_personality * ) 
unregister_md_personality extern int unregister_md_personality ( s#md_personality * ) 
md_error extern void md_error ( s#mddev * , s#md_rdev * ) 
md_done_sync extern void md_done_sync ( s#mddev * , int , int ) 
md_write_start extern void md_write_start ( s#mddev * , s#bio * ) 
md_write_end extern void md_write_end ( s#mddev * ) 
md_register_thread extern s#md_thread * md_register_thread ( void ( * ) ( s#md_thread * ) , s#mddev * , const char * ) 
md_unregister_thread extern void md_unregister_thread ( s#md_thread * * ) 
md_wakeup_thread extern void md_wakeup_thread ( s#md_thread * ) 
md_check_recovery extern void md_check_recovery ( s#mddev * ) 
md_reap_sync_thread extern void md_reap_sync_thread ( s#mddev * ) 

/* drivers/md/persistent-data/dm-array.o */
s##dm_transaction_manager
s#dm_btree_value_type struct dm_btree_value_type { void * context ; t#uint32_t size ; void ( * inc ) ( void * , const void * ) ; void ( * dec ) ( void * , const void * ) ; int ( * equal ) ( void * , const void * , const void * ) ; } 
s#dm_btree_info struct dm_btree_info { s#dm_transaction_manager * tm ; unsigned levels ; s#dm_btree_value_type value_type ; } 
s#dm_array_info struct dm_array_info { s#dm_transaction_manager * tm ; s#dm_btree_value_type value_type ; s#dm_btree_info btree_info ; } 
dm_array_info_init void dm_array_info_init ( s#dm_array_info * , s#dm_transaction_manager * , s#dm_btree_value_type * ) 
dm_array_empty int dm_array_empty ( s#dm_array_info * , t#dm_block_t * ) 
dm_array_resize int dm_array_resize ( s#dm_array_info * , t#dm_block_t , t#uint32_t , t#uint32_t , const void * , t#dm_block_t * ) 
dm_array_del int dm_array_del ( s#dm_array_info * , t#dm_block_t ) 
dm_array_get_value int dm_array_get_value ( s#dm_array_info * , t#dm_block_t , t#uint32_t , void * ) 
dm_array_set_value int dm_array_set_value ( s#dm_array_info * , t#dm_block_t , t#uint32_t , const void * , t#dm_block_t * ) 
dm_array_walk int dm_array_walk ( s#dm_array_info * , t#dm_block_t , int ( * ) ( void * , t#uint64_t , void * ) , void * ) 

/* drivers/md/persistent-data/dm-bitset.o */
s##dm_transaction_manager
s#dm_disk_bitset struct dm_disk_bitset { s#dm_array_info array_info ; t#uint32_t current_index ; t#uint64_t current_bits ; t#bool current_index_set : 1 ; } 
dm_disk_bitset_init void dm_disk_bitset_init ( s#dm_transaction_manager * , s#dm_disk_bitset * ) 
dm_bitset_empty int dm_bitset_empty ( s#dm_disk_bitset * , t#dm_block_t * ) 
dm_bitset_resize int dm_bitset_resize ( s#dm_disk_bitset * , t#dm_block_t , t#uint32_t , t#uint32_t , t#bool , t#dm_block_t * ) 
dm_bitset_del int dm_bitset_del ( s#dm_disk_bitset * , t#dm_block_t ) 
dm_bitset_flush int dm_bitset_flush ( s#dm_disk_bitset * , t#dm_block_t , t#dm_block_t * ) 
dm_bitset_set_bit int dm_bitset_set_bit ( s#dm_disk_bitset * , t#dm_block_t , t#uint32_t , t#dm_block_t * ) 
dm_bitset_clear_bit int dm_bitset_clear_bit ( s#dm_disk_bitset * , t#dm_block_t , t#uint32_t , t#dm_block_t * ) 
dm_bitset_test_bit int dm_bitset_test_bit ( s#dm_disk_bitset * , t#dm_block_t , t#uint32_t , t#dm_block_t * , t#bool * ) 

/* drivers/md/persistent-data/dm-block-manager.o */
s##dm_block
dm_block_location t#dm_block_t dm_block_location ( s#dm_block * ) 
dm_block_data void * dm_block_data ( s#dm_block * ) 
s##dm_block_manager
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
dm_block_manager_create s#dm_block_manager * dm_block_manager_create ( s#block_device * , unsigned , unsigned , unsigned ) 
dm_block_manager_destroy void dm_block_manager_destroy ( s#dm_block_manager * ) 
dm_bm_block_size unsigned dm_bm_block_size ( s#dm_block_manager * ) 
s#dm_block_validator struct dm_block_validator { const char * name ; void ( * prepare_for_write ) ( s#dm_block_validator * , s#dm_block * , t#size_t ) ; int ( * check ) ( s#dm_block_validator * , s#dm_block * , t#size_t ) ; } 
dm_bm_read_lock int dm_bm_read_lock ( s#dm_block_manager * , t#dm_block_t , s#dm_block_validator * , s#dm_block * * ) 
dm_bm_write_lock int dm_bm_write_lock ( s#dm_block_manager * , t#dm_block_t , s#dm_block_validator * , s#dm_block * * ) 
dm_bm_write_lock_zero int dm_bm_write_lock_zero ( s#dm_block_manager * , t#dm_block_t , s#dm_block_validator * , s#dm_block * * ) 
dm_bm_unlock int dm_bm_unlock ( s#dm_block * ) 
dm_bm_flush int dm_bm_flush ( s#dm_block_manager * ) 
dm_bm_set_read_only void dm_bm_set_read_only ( s#dm_block_manager * ) 
dm_bm_set_read_write void dm_bm_set_read_write ( s#dm_block_manager * ) 
dm_bm_checksum t#u32 dm_bm_checksum ( const void * , t#size_t , t#u32 ) 

/* drivers/md/persistent-data/dm-btree.o */
s##dm_transaction_manager
dm_btree_empty int dm_btree_empty ( s#dm_btree_info * , t#dm_block_t * ) 
dm_btree_del int dm_btree_del ( s#dm_btree_info * , t#dm_block_t ) 
dm_btree_lookup int dm_btree_lookup ( s#dm_btree_info * , t#dm_block_t , t#uint64_t * , void * ) 
dm_btree_insert int dm_btree_insert ( s#dm_btree_info * , t#dm_block_t , t#uint64_t * , void * , t#dm_block_t * ) 
dm_btree_insert_notify int dm_btree_insert_notify ( s#dm_btree_info * , t#dm_block_t , t#uint64_t * , void * , t#dm_block_t * , int * ) 
dm_btree_find_highest_key int dm_btree_find_highest_key ( s#dm_btree_info * , t#dm_block_t , t#uint64_t * ) 
dm_btree_walk int dm_btree_walk ( s#dm_btree_info * , t#dm_block_t , int ( * ) ( void * , t#uint64_t * , void * ) , void * ) 

/* drivers/md/persistent-data/dm-btree-remove.o */
s##dm_transaction_manager
dm_btree_remove int dm_btree_remove ( s#dm_btree_info * , t#dm_block_t , t#uint64_t * , t#dm_block_t * ) 

/* drivers/md/persistent-data/dm-space-map-disk.o */
t#dm_sm_threshold_fn typedef void ( * dm_sm_threshold_fn ) ( void * ) 
s#dm_space_map struct dm_space_map { void ( * destroy ) ( s#dm_space_map * ) ; int ( * extend ) ( s#dm_space_map * , t#dm_block_t ) ; int ( * get_nr_blocks ) ( s#dm_space_map * , t#dm_block_t * ) ; int ( * get_nr_free ) ( s#dm_space_map * , t#dm_block_t * ) ; int ( * get_count ) ( s#dm_space_map * , t#dm_block_t , t#uint32_t * ) ; int ( * count_is_more_than_one ) ( s#dm_space_map * , t#dm_block_t , int * ) ; int ( * set_count ) ( s#dm_space_map * , t#dm_block_t , t#uint32_t ) ; int ( * commit ) ( s#dm_space_map * ) ; int ( * inc_block ) ( s#dm_space_map * , t#dm_block_t ) ; int ( * dec_block ) ( s#dm_space_map * , t#dm_block_t ) ; int ( * new_block ) ( s#dm_space_map * , t#dm_block_t * ) ; int ( * root_size ) ( s#dm_space_map * , t#size_t * ) ; int ( * copy_root ) ( s#dm_space_map * , void * , t#size_t ) ; int ( * register_threshold_callback ) ( s#dm_space_map * , t#dm_block_t , t#dm_sm_threshold_fn , void * ) ; } 
s##dm_transaction_manager
dm_sm_disk_create s#dm_space_map * dm_sm_disk_create ( s#dm_transaction_manager * , t#dm_block_t ) 
dm_sm_disk_open s#dm_space_map * dm_sm_disk_open ( s#dm_transaction_manager * , void * , t#size_t ) 

/* drivers/md/persistent-data/dm-transaction-manager.o */
s##dm_transaction_manager
dm_tm_create_non_blocking_clone s#dm_transaction_manager * dm_tm_create_non_blocking_clone ( s#dm_transaction_manager * ) 
dm_tm_destroy void dm_tm_destroy ( s#dm_transaction_manager * ) 
dm_tm_pre_commit int dm_tm_pre_commit ( s#dm_transaction_manager * ) 
s##dm_block
dm_tm_commit int dm_tm_commit ( s#dm_transaction_manager * , s#dm_block * ) 
dm_tm_shadow_block int dm_tm_shadow_block ( s#dm_transaction_manager * , t#dm_block_t , s#dm_block_validator * , s#dm_block * * , int * ) 
dm_tm_read_lock int dm_tm_read_lock ( s#dm_transaction_manager * , t#dm_block_t , s#dm_block_validator * , s#dm_block * * ) 
dm_tm_unlock int dm_tm_unlock ( s#dm_transaction_manager * , s#dm_block * ) 
dm_tm_inc void dm_tm_inc ( s#dm_transaction_manager * , t#dm_block_t ) 
dm_tm_dec void dm_tm_dec ( s#dm_transaction_manager * , t#dm_block_t ) 
s##dm_block_manager
dm_tm_create_with_sm int dm_tm_create_with_sm ( s#dm_block_manager * , t#dm_block_t , s#dm_transaction_manager * * , s#dm_space_map * * ) 
dm_tm_open_with_sm int dm_tm_open_with_sm ( s#dm_block_manager * , t#dm_block_t , void * , t#size_t , s#dm_transaction_manager * * , s#dm_space_map * * ) 

/* drivers/md/raid1.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##device_private
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
md_raid1_congested extern int md_raid1_congested ( s#mddev * , int ) 

/* drivers/md/raid10.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##device_private
s##kiocb
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
md_raid10_congested extern int md_raid10_congested ( s#mddev * , int ) 

/* drivers/md/raid5.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##device_private
s##kiocb
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
md_raid5_congested extern int md_raid5_congested ( s#mddev * , int ) 
raid5_set_cache_size extern int raid5_set_cache_size ( s#mddev * , int ) 

/* drivers/message/fusion/mptbase.o */
mpt_fwfault_debug extern int mpt_fwfault_debug 
s#_SYSIF_REGS struct _SYSIF_REGS { t#u32 Doorbell ; t#u32 WriteSequence ; t#u32 Diagnostic ; t#u32 TestBase ; t#u32 DiagRwData ; t#u32 DiagRwAddress ; t#u32 Reserved1 [ 6 ] ; t#u32 IntStatus ; t#u32 IntMask ; t#u32 Reserved2 [ 2 ] ; t#u32 RequestFifo ; t#u32 ReplyFifo ; t#u32 RequestHiPriFifo ; t#u32 Reserved3 ; t#u32 HostIndex ; t#u32 Reserved4 [ 15 ] ; t#u32 Fubar ; t#u32 Reserved5 [ 1050 ] ; t#u32 Reset_1078 ; } 
t#SYSIF_REGS typedef s#_SYSIF_REGS SYSIF_REGS 
t#U8 typedef unsigned char U8 
t#u_int32_t typedef t#__u32 u_int32_t 
t#U32 typedef t#u_int32_t U32 
s#_MSG_REQUEST_HEADER struct _MSG_REQUEST_HEADER { t#U8 Reserved [ 2 ] ; t#U8 ChainOffset ; t#U8 Function ; t#U8 Reserved1 [ 3 ] ; t#U8 MsgFlags ; t#U32 MsgContext ; } 
t#MPIHeader_t typedef s#_MSG_REQUEST_HEADER MPIHeader_t 
s#_U64 struct _U64 { t#U32 Low ; t#U32 High ; } 
t#U64 typedef s#_U64 U64 
s#_SGE_SIMPLE_UNION struct _SGE_SIMPLE_UNION { t#U32 FlagsLength ; union { t#U32 Address32 ; t#U64 Address64 ; } u ; } 
t#SGE_SIMPLE_UNION typedef s#_SGE_SIMPLE_UNION SGE_SIMPLE_UNION 
t#U16 typedef unsigned short U16 
s#_SGE_CHAIN_UNION struct _SGE_CHAIN_UNION { t#U16 Length ; t#U8 NextChainOffset ; t#U8 Flags ; union { t#U32 Address32 ; t#U64 Address64 ; } u ; } 
t#SGE_CHAIN_UNION typedef s#_SGE_CHAIN_UNION SGE_CHAIN_UNION 
s#_SGE_IO_UNION struct _SGE_IO_UNION { union { t#SGE_SIMPLE_UNION Simple ; t#SGE_CHAIN_UNION Chain ; } u ; } 
t#SGE_IO_UNION typedef s#_SGE_IO_UNION SGE_IO_UNION 
s#_MSG_SCSI_IO_REQUEST struct _MSG_SCSI_IO_REQUEST { t#U8 TargetID ; t#U8 Bus ; t#U8 ChainOffset ; t#U8 Function ; t#U8 CDBLength ; t#U8 SenseBufferLength ; t#U8 Reserved ; t#U8 MsgFlags ; t#U32 MsgContext ; t#U8 LUN [ 8 ] ; t#U32 Control ; t#U8 CDB [ 16 ] ; t#U32 DataLength ; t#U32 SenseBufferLowAddr ; t#SGE_IO_UNION SGL ; } 
t#SCSIIORequest_t typedef s#_MSG_SCSI_IO_REQUEST SCSIIORequest_t 
s#_MSG_SCSI_IO_REPLY struct _MSG_SCSI_IO_REPLY { t#U8 TargetID ; t#U8 Bus ; t#U8 MsgLength ; t#U8 Function ; t#U8 CDBLength ; t#U8 SenseBufferLength ; t#U8 Reserved ; t#U8 MsgFlags ; t#U32 MsgContext ; t#U8 SCSIStatus ; t#U8 SCSIState ; t#U16 IOCStatus ; t#U32 IOCLogInfo ; t#U32 TransferCount ; t#U32 SenseCount ; t#U32 ResponseInfo ; t#U16 TaskTag ; t#U16 Reserved1 ; } 
t#SCSIIOReply_t typedef s#_MSG_SCSI_IO_REPLY SCSIIOReply_t 
s#_CONFIG_PAGE_HEADER struct _CONFIG_PAGE_HEADER { t#U8 PageVersion ; t#U8 PageLength ; t#U8 PageNumber ; t#U8 PageType ; } 
t#CONFIG_PAGE_HEADER typedef s#_CONFIG_PAGE_HEADER CONFIG_PAGE_HEADER 
s#_MSG_CONFIG_REPLY struct _MSG_CONFIG_REPLY { t#U8 Action ; t#U8 Reserved ; t#U8 MsgLength ; t#U8 Function ; t#U16 ExtPageLength ; t#U8 ExtPageType ; t#U8 MsgFlags ; t#U32 MsgContext ; t#U8 Reserved2 [ 2 ] ; t#U16 IOCStatus ; t#U32 IOCLogInfo ; t#CONFIG_PAGE_HEADER Header ; } 
t#ConfigReply_t typedef s#_MSG_CONFIG_REPLY ConfigReply_t 
s#_MSG_DEFAULT_REPLY struct _MSG_DEFAULT_REPLY { t#U8 Reserved [ 2 ] ; t#U8 MsgLength ; t#U8 Function ; t#U8 Reserved1 [ 3 ] ; t#U8 MsgFlags ; t#U32 MsgContext ; t#U8 Reserved2 [ 2 ] ; t#U16 IOCStatus ; t#U32 IOCLogInfo ; } 
t#MPIDefaultReply_t typedef s#_MSG_DEFAULT_REPLY MPIDefaultReply_t 
u#_MPT_FRAME_TRACKER union _MPT_FRAME_TRACKER { struct { s#list_head list ; t#u32 arg1 ; t#u32 pad ; void * argp1 ; } linkage ; struct { t#u32 __hdr [ 2 ] ; union { t#u32 MsgContext ; struct { t#u16 req_idx ; t#u8 cb_idx ; t#u8 rsvd ; } fld ; } msgctxu ; } hwhdr ; } 
t#MPT_FRAME_TRACKER typedef u#_MPT_FRAME_TRACKER MPT_FRAME_TRACKER 
s#_MPT_FRAME_HDR struct _MPT_FRAME_HDR { union { t#MPIHeader_t hdr ; t#SCSIIORequest_t scsireq ; t#SCSIIOReply_t sreply ; t#ConfigReply_t configreply ; t#MPIDefaultReply_t reply ; t#MPT_FRAME_TRACKER frame ; } u ; } 
t#MPT_FRAME_HDR typedef s#_MPT_FRAME_HDR MPT_FRAME_HDR 
t#MPT_ADD_SGE typedef void ( * MPT_ADD_SGE ) ( void * , t#u32 , t#dma_addr_t ) 
t#MPT_ADD_CHAIN typedef void ( * MPT_ADD_CHAIN ) ( void * , t#u8 , t#u16 , t#dma_addr_t ) 
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##scsi_host_cmd_pool
s##scsi_device
s##scsi_cmnd
s##scsi_target
s##scsi_transport_template
s#_IOC_4_SEP struct _IOC_4_SEP { t#U8 SEPTargetID ; t#U8 SEPBus ; t#U16 Reserved ; } 
t#IOC_4_SEP typedef s#_IOC_4_SEP IOC_4_SEP 
s#_CONFIG_PAGE_IOC_4 struct _CONFIG_PAGE_IOC_4 { t#CONFIG_PAGE_HEADER Header ; t#U8 ActiveSEP ; t#U8 MaxSEP ; t#U16 Reserved1 ; t#IOC_4_SEP SEP [ ( 1 ) ] ; } 
t#IOCPage4_t typedef s#_CONFIG_PAGE_IOC_4 IOCPage4_t 
s#_SpiCfgData struct _SpiCfgData { t#u32 PortFlags ; int * nvram ; t#IOCPage4_t * pIocPg4 ; t#dma_addr_t IocPg4_dma ; int IocPg4Sz ; t#u8 minSyncFactor ; t#u8 maxSyncOffset ; t#u8 maxBusWidth ; t#u8 busType ; t#u8 sdp1version ; t#u8 sdp1length ; t#u8 sdp0version ; t#u8 sdp0length ; t#u8 dvScheduled ; t#u8 noQas ; t#u8 Saf_Te ; t#u8 bus_reset ; t#u8 rsvd [ 1 ] ; } 
t#SpiCfgData typedef s#_SpiCfgData SpiCfgData 
s#_CONFIG_PAGE_IOC_2_RAID_VOL struct _CONFIG_PAGE_IOC_2_RAID_VOL { t#U8 VolumeID ; t#U8 VolumeBus ; t#U8 VolumeIOC ; t#U8 VolumePageNumber ; t#U8 VolumeType ; t#U8 Flags ; t#U16 Reserved3 ; } 
t#CONFIG_PAGE_IOC_2_RAID_VOL typedef s#_CONFIG_PAGE_IOC_2_RAID_VOL CONFIG_PAGE_IOC_2_RAID_VOL 
s#_CONFIG_PAGE_IOC_2 struct _CONFIG_PAGE_IOC_2 { t#CONFIG_PAGE_HEADER Header ; t#U32 CapabilitiesFlags ; t#U8 NumActiveVolumes ; t#U8 MaxVolumes ; t#U8 NumActivePhysDisks ; t#U8 MaxPhysDisks ; t#CONFIG_PAGE_IOC_2_RAID_VOL RaidVolume [ ( 1 ) ] ; } 
t#IOCPage2_t typedef s#_CONFIG_PAGE_IOC_2 IOCPage2_t 
s#_IOC_3_PHYS_DISK struct _IOC_3_PHYS_DISK { t#U8 PhysDiskID ; t#U8 PhysDiskBus ; t#U8 PhysDiskIOC ; t#U8 PhysDiskNum ; } 
t#IOC_3_PHYS_DISK typedef s#_IOC_3_PHYS_DISK IOC_3_PHYS_DISK 
s#_CONFIG_PAGE_IOC_3 struct _CONFIG_PAGE_IOC_3 { t#CONFIG_PAGE_HEADER Header ; t#U8 NumPhysDisks ; t#U8 Reserved1 ; t#U16 Reserved2 ; t#IOC_3_PHYS_DISK PhysDisk [ ( 1 ) ] ; } 
t#IOCPage3_t typedef s#_CONFIG_PAGE_IOC_3 IOCPage3_t 
s#_RaidCfgData struct _RaidCfgData { t#IOCPage2_t * pIocPg2 ; t#IOCPage3_t * pIocPg3 ; s#mutex inactive_list_mutex ; s#list_head inactive_list ; } 
t#RaidCfgData typedef s#_RaidCfgData RaidCfgData 
s#_SasCfgData struct _SasCfgData { t#u8 ptClear ; } 
t#SasCfgData typedef s#_SasCfgData SasCfgData 
s#_CONFIG_PAGE_FC_PORT_1 struct _CONFIG_PAGE_FC_PORT_1 { t#CONFIG_PAGE_HEADER Header ; t#U32 Flags ; t#U64 NoSEEPROMWWNN ; t#U64 NoSEEPROMWWPN ; t#U8 HardALPA ; t#U8 LinkConfig ; t#U8 TopologyConfig ; t#U8 AltConnector ; t#U8 NumRequestedAliases ; t#U8 RR_TOV ; t#U8 InitiatorDeviceTimeout ; t#U8 InitiatorIoPendTimeout ; } 
t#FCPortPage1_t typedef s#_CONFIG_PAGE_FC_PORT_1 FCPortPage1_t 
s#_FcCfgData struct _FcCfgData { struct { t#FCPortPage1_t * data ; t#dma_addr_t dma ; int pg_sz ; } fc_port_page1 [ 2 ] ; } 
t#FcCfgData typedef s#_FcCfgData FcCfgData 
s#_mpt_ioctl_events struct _mpt_ioctl_events { t#u32 event ; t#u32 eventContext ; t#u32 data [ 2 ] ; } 
s#_MPI_FW_VERSION_STRUCT struct _MPI_FW_VERSION_STRUCT { t#U8 Dev ; t#U8 Unit ; t#U8 Minor ; t#U8 Major ; } 
t#MPI_FW_VERSION_STRUCT typedef s#_MPI_FW_VERSION_STRUCT MPI_FW_VERSION_STRUCT 
u#_MPI_FW_VERSION union _MPI_FW_VERSION { t#MPI_FW_VERSION_STRUCT Struct ; t#U32 Word ; } 
t#MPI_FW_VERSION typedef u#_MPI_FW_VERSION MPI_FW_VERSION 
s#_MSG_IOC_FACTS_REPLY struct _MSG_IOC_FACTS_REPLY { t#U16 MsgVersion ; t#U8 MsgLength ; t#U8 Function ; t#U16 HeaderVersion ; t#U8 IOCNumber ; t#U8 MsgFlags ; t#U32 MsgContext ; t#U16 IOCExceptions ; t#U16 IOCStatus ; t#U32 IOCLogInfo ; t#U8 MaxChainDepth ; t#U8 WhoInit ; t#U8 BlockSize ; t#U8 Flags ; t#U16 ReplyQueueDepth ; t#U16 RequestFrameSize ; t#U16 Reserved_0101_FWVersion ; t#U16 ProductID ; t#U32 CurrentHostMfaHighAddr ; t#U16 GlobalCredits ; t#U8 NumberOfPorts ; t#U8 EventState ; t#U32 CurrentSenseBufferHighAddr ; t#U16 CurReplyFrameSize ; t#U8 MaxDevices ; t#U8 MaxBuses ; t#U32 FWImageSize ; t#U32 IOCCapabilities ; t#MPI_FW_VERSION FWVersion ; t#U16 HighPriorityQueueDepth ; t#U16 Reserved2 ; t#SGE_SIMPLE_UNION HostPageBufferSGE ; t#U32 ReplyFifoHostSignalingAddr ; } 
t#IOCFactsReply_t typedef s#_MSG_IOC_FACTS_REPLY IOCFactsReply_t 
s#_MSG_PORT_FACTS_REPLY struct _MSG_PORT_FACTS_REPLY { t#U16 Reserved ; t#U8 MsgLength ; t#U8 Function ; t#U16 Reserved1 ; t#U8 PortNumber ; t#U8 MsgFlags ; t#U32 MsgContext ; t#U16 Reserved2 ; t#U16 IOCStatus ; t#U32 IOCLogInfo ; t#U8 Reserved3 ; t#U8 PortType ; t#U16 MaxDevices ; t#U16 PortSCSIID ; t#U16 ProtocolFlags ; t#U16 MaxPostedCmdBuffers ; t#U16 MaxPersistentIDs ; t#U16 MaxLanBuckets ; t#U8 MaxInitiators ; t#U8 Reserved4 ; t#U32 Reserved5 ; } 
t#PortFactsReply_t typedef s#_MSG_PORT_FACTS_REPLY PortFactsReply_t 
s#_CONFIG_PAGE_FC_PORT_0 struct _CONFIG_PAGE_FC_PORT_0 { t#CONFIG_PAGE_HEADER Header ; t#U32 Flags ; t#U8 MPIPortNumber ; t#U8 LinkType ; t#U8 PortState ; t#U8 Reserved ; t#U32 PortIdentifier ; t#U64 WWNN ; t#U64 WWPN ; t#U32 SupportedServiceClass ; t#U32 SupportedSpeeds ; t#U32 CurrentSpeed ; t#U32 MaxFrameSize ; t#U64 FabricWWNN ; t#U64 FabricWWPN ; t#U32 DiscoveredPortsCount ; t#U32 MaxInitiators ; t#U8 MaxAliasesSupported ; t#U8 MaxHardAliasesSupported ; t#U8 NumCurrentAliases ; t#U8 Reserved1 ; } 
t#FCPortPage0_t typedef s#_CONFIG_PAGE_FC_PORT_0 FCPortPage0_t 
t#ConfigPageHeader_t typedef s#_CONFIG_PAGE_HEADER ConfigPageHeader_t 
s#_CONFIG_PAGE_LAN_0 struct _CONFIG_PAGE_LAN_0 { t#ConfigPageHeader_t Header ; t#U16 TxRxModes ; t#U16 Reserved ; t#U32 PacketPrePad ; } 
t#LANPage0_t typedef s#_CONFIG_PAGE_LAN_0 LANPage0_t 
s#_CONFIG_PAGE_LAN_1 struct _CONFIG_PAGE_LAN_1 { t#ConfigPageHeader_t Header ; t#U16 Reserved ; t#U8 CurrentDeviceState ; t#U8 Reserved1 ; t#U32 MinPacketSize ; t#U32 MaxPacketSize ; t#U32 HardwareAddressLow ; t#U32 HardwareAddressHigh ; t#U32 MaxWireSpeedLow ; t#U32 MaxWireSpeedHigh ; t#U32 BucketsRemaining ; t#U32 MaxReplySize ; t#U32 NegWireSpeedLow ; t#U32 NegWireSpeedHigh ; } 
t#LANPage1_t typedef s#_CONFIG_PAGE_LAN_1 LANPage1_t 
s##net_device
s##mptsas_portinfo
s#_MPT_MGMT struct _MPT_MGMT { s#mutex mutex ; s#completion done ; t#u8 reply [ 128 ] ; t#u8 sense [ 64 ] ; t#u8 status ; int completion_code ; t#u32 msg_context ; } 
t#MPT_MGMT typedef s#_MPT_MGMT MPT_MGMT 
t#MPT_SCHEDULE_TARGET_RESET typedef void ( * MPT_SCHEDULE_TARGET_RESET ) ( void * ) 
t#ushort typedef unsigned short ushort 
s#_MPT_SCSI_HOST struct _MPT_SCSI_HOST { s#_MPT_ADAPTER * ioc ; t#ushort sel_timeout [ 255 ] ; char * info_kbuf ; long last_queue_full ; t#u16 spi_pending ; s#list_head target_reset_list ; } 
t#MPT_SCSI_HOST typedef s#_MPT_SCSI_HOST MPT_SCSI_HOST 
t#MPT_FLUSH_RUNNING_CMDS typedef void ( * MPT_FLUSH_RUNNING_CMDS ) ( t#MPT_SCSI_HOST * ) 
s#_MPT_ADAPTER struct _MPT_ADAPTER { int id ; int pci_irq ; char name [ 32 ] ; char prod_name [ 32 ] ; char board_name [ 16 ] ; char board_assembly [ 16 ] ; char board_tracer [ 16 ] ; t#u16 nvdata_version_persistent ; t#u16 nvdata_version_default ; int debug_level ; t#u8 io_missing_delay ; t#u16 device_missing_delay ; t#SYSIF_REGS * chip ; t#SYSIF_REGS * pio_chip ; t#u8 bus_type ; t#u32 mem_phys ; t#u32 pio_mem_phys ; int mem_size ; int number_of_buses ; int devices_per_bus ; int alloc_total ; t#u32 last_state ; int active ; t#u8 * alloc ; t#dma_addr_t alloc_dma ; t#u32 alloc_sz ; t#MPT_FRAME_HDR * reply_frames ; t#u32 reply_frames_low_dma ; int reply_depth ; int reply_sz ; int num_chain ; t#MPT_ADD_SGE add_sge ; t#MPT_ADD_CHAIN add_chain ; int * ReqToChain ; int * RequestNB ; int * ChainToChain ; t#u8 * ChainBuffer ; t#dma_addr_t ChainBufferDMA ; s#list_head FreeChainQ ; t#spinlock_t FreeChainQlock ; t#dma_addr_t req_frames_dma ; t#MPT_FRAME_HDR * req_frames ; t#u32 req_frames_low_dma ; int req_depth ; int req_sz ; t#spinlock_t FreeQlock ; s#list_head FreeQ ; t#u8 * sense_buf_pool ; t#dma_addr_t sense_buf_pool_dma ; t#u32 sense_buf_low_dma ; t#u8 * HostPageBuffer ; t#u32 HostPageBuffer_sz ; t#dma_addr_t HostPageBuffer_dma ; int mtrr_reg ; s#pci_dev * pcidev ; int bars ; int msi_enable ; t#u8 * memmap ; s#Scsi_Host * sh ; t#SpiCfgData spi_data ; t#RaidCfgData raid_data ; t#SasCfgData sas_data ; t#FcCfgData fc_data ; s#proc_dir_entry * ioc_dentry ; s#_MPT_ADAPTER * alt_ioc ; t#u32 biosVersion ; int eventTypes ; int eventContext ; int eventLogSize ; s#_mpt_ioctl_events * events ; t#u8 * cached_fw ; t#dma_addr_t cached_fw_dma ; int hs_reply_idx ; t#u32 pad0 ; t#u32 NB_for_64_byte_frame ; t#u32 hs_req [ 128 / sizeof ( u32 ) ] ; t#u16 hs_reply [ 128 / sizeof ( u16 ) ] ; t#IOCFactsReply_t facts ; t#PortFactsReply_t pfacts [ 2 ] ; t#FCPortPage0_t fc_port_page0 [ 2 ] ; t#LANPage0_t lan_cnfg_page0 ; t#LANPage1_t lan_cnfg_page1 ; t#u8 ir_firmware ; int errata_flag_1064 ; int aen_event_read_flag ; t#u8 FirstWhoInit ; t#u8 upload_fw ; t#u8 NBShiftFactor ; t#u8 pad1 [ 4 ] ; t#u8 DoneCtx ; t#u8 TaskCtx ; t#u8 InternalCtx ; s#list_head list ; s#net_device * netdev ; s#list_head sas_topology ; s#mutex sas_topology_mutex ; s#workqueue_struct * fw_event_q ; s#list_head fw_event_list ; t#spinlock_t fw_event_lock ; t#u8 fw_events_off ; char fw_event_q_name [ 20 ] ; s#mutex sas_discovery_mutex ; t#u8 sas_discovery_runtime ; t#u8 sas_discovery_ignore_events ; s#mptsas_portinfo * hba_port_info ; t#u64 hba_port_sas_addr ; t#u16 hba_port_num_phy ; s#list_head sas_device_info_list ; s#mutex sas_device_info_mutex ; t#u8 old_sas_discovery_protocal ; t#u8 sas_discovery_quiesce_io ; int sas_index ; t#MPT_MGMT sas_mgmt ; t#MPT_MGMT mptbase_cmds ; t#MPT_MGMT internal_cmds ; t#MPT_MGMT taskmgmt_cmds ; t#MPT_MGMT ioctl_cmds ; t#spinlock_t taskmgmt_lock ; int taskmgmt_in_progress ; t#u8 taskmgmt_quiesce_io ; t#u8 ioc_reset_in_progress ; t#u8 reset_status ; t#u8 wait_on_reset_completion ; t#MPT_SCHEDULE_TARGET_RESET schedule_target_reset ; t#MPT_FLUSH_RUNNING_CMDS schedule_dead_ioc_flush_running_cmds ; s#work_struct sas_persist_task ; s#work_struct fc_setup_reset_work ; s#list_head fc_rports ; s#work_struct fc_lsc_work ; t#u8 fc_link_speed [ 2 ] ; t#spinlock_t fc_rescan_work_lock ; s#work_struct fc_rescan_work ; char fc_rescan_work_q_name [ 20 ] ; s#workqueue_struct * fc_rescan_work_q ; unsigned long hard_resets ; unsigned long soft_resets ; unsigned long timeouts ; s#scsi_cmnd * * ScsiLookup ; t#spinlock_t scsi_lookup_lock ; t#u64 dma_mask ; t#u32 broadcast_aen_busy ; char reset_work_q_name [ 20 ] ; s#workqueue_struct * reset_work_q ; s#delayed_work fault_reset_work ; t#u8 sg_addr_size ; t#u8 in_rescan ; t#u8 SGE_size ; } 
t#MPT_ADAPTER typedef s#_MPT_ADAPTER MPT_ADAPTER 
mpt_raid_phys_disk_get_num_paths extern int mpt_raid_phys_disk_get_num_paths ( t#MPT_ADAPTER * , t#u8 ) 
s#_RAID_PHYS_DISK1_PATH struct _RAID_PHYS_DISK1_PATH { t#U8 PhysDiskID ; t#U8 PhysDiskBus ; t#U16 Reserved1 ; t#U64 WWID ; t#U64 OwnerWWID ; t#U8 OwnerIdentifier ; t#U8 Reserved2 ; t#U16 Flags ; } 
t#RAID_PHYS_DISK1_PATH typedef s#_RAID_PHYS_DISK1_PATH RAID_PHYS_DISK1_PATH 
s#_CONFIG_PAGE_RAID_PHYS_DISK_1 struct _CONFIG_PAGE_RAID_PHYS_DISK_1 { t#CONFIG_PAGE_HEADER Header ; t#U8 NumPhysDiskPaths ; t#U8 PhysDiskNum ; t#U16 Reserved2 ; t#U32 Reserved1 ; t#RAID_PHYS_DISK1_PATH Path [ ( 1 ) ] ; } 
t#pRaidPhysDiskPage1_t typedef s#_CONFIG_PAGE_RAID_PHYS_DISK_1 * pRaidPhysDiskPage1_t 
mpt_raid_phys_disk_pg1 extern int mpt_raid_phys_disk_pg1 ( t#MPT_ADAPTER * , t#u8 , t#pRaidPhysDiskPage1_t ) 
mpt_set_taskmgmt_in_progress_flag extern int mpt_set_taskmgmt_in_progress_flag ( t#MPT_ADAPTER * ) 
mpt_clear_taskmgmt_in_progress_flag extern void mpt_clear_taskmgmt_in_progress_flag ( t#MPT_ADAPTER * ) 
mpt_halt_firmware extern void mpt_halt_firmware ( t#MPT_ADAPTER * ) 
mpt_Soft_Hard_ResetHandler extern int mpt_Soft_Hard_ResetHandler ( t#MPT_ADAPTER * , int ) 
mpt_attach extern int mpt_attach ( s#pci_dev * , const s#pci_device_id * ) 
mpt_detach extern void mpt_detach ( s#pci_dev * ) 
mpt_resume extern int mpt_resume ( s#pci_dev * ) 
mpt_suspend extern int mpt_suspend ( s#pci_dev * , t#pm_message_t ) 
ioc_list extern s#list_head ioc_list 
t#MPT_CALLBACK typedef int ( * MPT_CALLBACK ) ( t#MPT_ADAPTER * , t#MPT_FRAME_HDR * , t#MPT_FRAME_HDR * ) 
t#MPT_DRIVER_CLASS typedef enum { MPTBASE_DRIVER , MPTCTL_DRIVER , MPTSPI_DRIVER , MPTFC_DRIVER , MPTSAS_DRIVER , MPTLAN_DRIVER , MPTSTM_DRIVER , MPTUNKNOWN_DRIVER } MPT_DRIVER_CLASS 
mpt_register extern t#u8 mpt_register ( t#MPT_CALLBACK , t#MPT_DRIVER_CLASS , char * ) 
mpt_deregister extern void mpt_deregister ( t#u8 ) 
s#_MSG_EVENT_NOTIFY_REPLY struct _MSG_EVENT_NOTIFY_REPLY { t#U16 EventDataLength ; t#U8 MsgLength ; t#U8 Function ; t#U8 Reserved1 [ 2 ] ; t#U8 AckRequired ; t#U8 MsgFlags ; t#U32 MsgContext ; t#U8 Reserved2 [ 2 ] ; t#U16 IOCStatus ; t#U32 IOCLogInfo ; t#U32 Event ; t#U32 EventContext ; t#U32 Data [ 1 ] ; } 
t#EventNotificationReply_t typedef s#_MSG_EVENT_NOTIFY_REPLY EventNotificationReply_t 
t#MPT_EVHANDLER typedef int ( * MPT_EVHANDLER ) ( t#MPT_ADAPTER * , t#EventNotificationReply_t * ) 
mpt_event_register extern int mpt_event_register ( t#u8 , t#MPT_EVHANDLER ) 
mpt_event_deregister extern void mpt_event_deregister ( t#u8 ) 
t#MPT_RESETHANDLER typedef int ( * MPT_RESETHANDLER ) ( t#MPT_ADAPTER * , int ) 
mpt_reset_register extern int mpt_reset_register ( t#u8 , t#MPT_RESETHANDLER ) 
mpt_reset_deregister extern void mpt_reset_deregister ( t#u8 ) 
s#mpt_pci_driver struct mpt_pci_driver { int ( * probe ) ( s#pci_dev * , const s#pci_device_id * ) ; void ( * remove ) ( s#pci_dev * ) ; } 
mpt_device_driver_register extern int mpt_device_driver_register ( s#mpt_pci_driver * , t#u8 ) 
mpt_device_driver_deregister extern void mpt_device_driver_deregister ( t#u8 ) 
mpt_get_msg_frame extern t#MPT_FRAME_HDR * mpt_get_msg_frame ( t#u8 , t#MPT_ADAPTER * ) 
mpt_put_msg_frame extern void mpt_put_msg_frame ( t#u8 , t#MPT_ADAPTER * , t#MPT_FRAME_HDR * ) 
mpt_put_msg_frame_hi_pri extern void mpt_put_msg_frame_hi_pri ( t#u8 , t#MPT_ADAPTER * , t#MPT_FRAME_HDR * ) 
mpt_free_msg_frame extern void mpt_free_msg_frame ( t#MPT_ADAPTER * , t#MPT_FRAME_HDR * ) 
mpt_send_handshake_request extern int mpt_send_handshake_request ( t#u8 , t#MPT_ADAPTER * , int , t#u32 * , int ) 
mpt_verify_adapter extern int mpt_verify_adapter ( int , t#MPT_ADAPTER * * ) 
mpt_GetIocState extern t#u32 mpt_GetIocState ( t#MPT_ADAPTER * , int ) 
mpt_print_ioc_summary extern void mpt_print_ioc_summary ( t#MPT_ADAPTER * , char * , int * , int , int ) 
mpt_HardResetHandler extern int mpt_HardResetHandler ( t#MPT_ADAPTER * , int ) 
s#_CONFIG_EXTENDED_PAGE_HEADER struct _CONFIG_EXTENDED_PAGE_HEADER { t#U8 PageVersion ; t#U8 Reserved1 ; t#U8 PageNumber ; t#U8 PageType ; t#U16 ExtPageLength ; t#U8 ExtPageType ; t#U8 Reserved2 ; } 
t#ConfigExtendedPageHeader_t typedef s#_CONFIG_EXTENDED_PAGE_HEADER ConfigExtendedPageHeader_t 
s#_x_config_parms struct _x_config_parms { union { t#ConfigExtendedPageHeader_t * ehdr ; t#ConfigPageHeader_t * hdr ; } cfghdr ; t#dma_addr_t physAddr ; t#u32 pageAddr ; t#u16 status ; t#u8 action ; t#u8 dir ; t#u8 timeout ; } 
t#CONFIGPARMS typedef s#_x_config_parms CONFIGPARMS 
mpt_config extern int mpt_config ( t#MPT_ADAPTER * , t#CONFIGPARMS * ) 
mpt_findImVolumes extern int mpt_findImVolumes ( t#MPT_ADAPTER * ) 
mpt_alloc_fw_memory extern int mpt_alloc_fw_memory ( t#MPT_ADAPTER * , int ) 
mpt_free_fw_memory extern void mpt_free_fw_memory ( t#MPT_ADAPTER * ) 
mptbase_sas_persist_operation extern int mptbase_sas_persist_operation ( t#MPT_ADAPTER * , t#u8 ) 
s#_RAID_PHYS_DISK0_SETTINGS struct _RAID_PHYS_DISK0_SETTINGS { t#U8 SepID ; t#U8 SepBus ; t#U8 HotSparePool ; t#U8 PhysDiskSettings ; } 
t#RAID_PHYS_DISK0_SETTINGS typedef s#_RAID_PHYS_DISK0_SETTINGS RAID_PHYS_DISK0_SETTINGS 
s#_RAID_PHYS_DISK_INQUIRY_DATA struct _RAID_PHYS_DISK_INQUIRY_DATA { t#U8 VendorID [ 8 ] ; t#U8 ProductID [ 16 ] ; t#U8 ProductRevLevel [ 4 ] ; t#U8 Info [ 32 ] ; } 
t#RAID_PHYS_DISK0_INQUIRY_DATA typedef s#_RAID_PHYS_DISK_INQUIRY_DATA RAID_PHYS_DISK0_INQUIRY_DATA 
s#_RAID_PHYS_DISK0_STATUS struct _RAID_PHYS_DISK0_STATUS { t#U8 Flags ; t#U8 State ; t#U16 Reserved ; } 
t#RAID_PHYS_DISK0_STATUS typedef s#_RAID_PHYS_DISK0_STATUS RAID_PHYS_DISK0_STATUS 
s#_RAID_PHYS_DISK0_ERROR_DATA struct _RAID_PHYS_DISK0_ERROR_DATA { t#U8 ErrorCdbByte ; t#U8 ErrorSenseKey ; t#U16 Reserved ; t#U16 ErrorCount ; t#U8 ErrorASC ; t#U8 ErrorASCQ ; t#U16 SmartCount ; t#U8 SmartASC ; t#U8 SmartASCQ ; } 
t#RAID_PHYS_DISK0_ERROR_DATA typedef s#_RAID_PHYS_DISK0_ERROR_DATA RAID_PHYS_DISK0_ERROR_DATA 
s#_CONFIG_PAGE_RAID_PHYS_DISK_0 struct _CONFIG_PAGE_RAID_PHYS_DISK_0 { t#CONFIG_PAGE_HEADER Header ; t#U8 PhysDiskID ; t#U8 PhysDiskBus ; t#U8 PhysDiskIOC ; t#U8 PhysDiskNum ; t#RAID_PHYS_DISK0_SETTINGS PhysDiskSettings ; t#U32 Reserved1 ; t#U8 ExtDiskIdentifier [ 8 ] ; t#U8 DiskIdentifier [ 16 ] ; t#RAID_PHYS_DISK0_INQUIRY_DATA InquiryData ; t#RAID_PHYS_DISK0_STATUS PhysDiskStatus ; t#U32 MaxLBA ; t#RAID_PHYS_DISK0_ERROR_DATA ErrorData ; } 
t#pRaidPhysDiskPage0_t typedef s#_CONFIG_PAGE_RAID_PHYS_DISK_0 * pRaidPhysDiskPage0_t 
mpt_raid_phys_disk_pg0 extern int mpt_raid_phys_disk_pg0 ( t#MPT_ADAPTER * , t#u8 , t#pRaidPhysDiskPage0_t ) 

/* drivers/message/fusion/mptscsih.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s##scsi_transport_template
s##net_device
s##mptsas_portinfo
mptscsih_flush_running_cmds extern void mptscsih_flush_running_cmds ( t#MPT_SCSI_HOST * ) 
mptscsih_IssueTaskMgmt extern int mptscsih_IssueTaskMgmt ( t#MPT_SCSI_HOST * , t#u8 , t#u8 , t#u8 , int , int , t#ulong ) 
mptscsih_taskmgmt_response_code extern void mptscsih_taskmgmt_response_code ( t#MPT_ADAPTER * , t#u8 ) 
mptscsih_is_phys_disk extern int mptscsih_is_phys_disk ( t#MPT_ADAPTER * , t#u8 , t#u8 ) 
mptscsih_raid_id_to_num extern t#u8 mptscsih_raid_id_to_num ( t#MPT_ADAPTER * , t#u8 , t#u8 ) 
mptscsih_get_scsi_lookup extern s#scsi_cmnd * mptscsih_get_scsi_lookup ( t#MPT_ADAPTER * , int ) 
mptscsih_host_attrs extern s#device_attribute * mptscsih_host_attrs [ ] 
mptscsih_remove extern void mptscsih_remove ( s#pci_dev * ) 
mptscsih_shutdown extern void mptscsih_shutdown ( s#pci_dev * ) 
mptscsih_suspend extern int mptscsih_suspend ( s#pci_dev * , t#pm_message_t ) 
mptscsih_resume extern int mptscsih_resume ( s#pci_dev * ) 
mptscsih_show_info extern int mptscsih_show_info ( s#seq_file * , s#Scsi_Host * ) 
mptscsih_info extern const char * mptscsih_info ( s#Scsi_Host * ) 
mptscsih_qcmd extern int mptscsih_qcmd ( s#scsi_cmnd * , void ( * ) ( s#scsi_cmnd * ) ) 
mptscsih_slave_destroy extern void mptscsih_slave_destroy ( s#scsi_device * ) 
mptscsih_slave_configure extern int mptscsih_slave_configure ( s#scsi_device * ) 
mptscsih_abort extern int mptscsih_abort ( s#scsi_cmnd * ) 
mptscsih_dev_reset extern int mptscsih_dev_reset ( s#scsi_cmnd * ) 
mptscsih_bus_reset extern int mptscsih_bus_reset ( s#scsi_cmnd * ) 
mptscsih_host_reset extern int mptscsih_host_reset ( s#scsi_cmnd * ) 
mptscsih_bios_param extern int mptscsih_bios_param ( s#scsi_device * , s#block_device * , t#sector_t , int [ ] ) 
mptscsih_io_done extern int mptscsih_io_done ( t#MPT_ADAPTER * , t#MPT_FRAME_HDR * , t#MPT_FRAME_HDR * ) 
mptscsih_taskmgmt_complete extern int mptscsih_taskmgmt_complete ( t#MPT_ADAPTER * , t#MPT_FRAME_HDR * , t#MPT_FRAME_HDR * ) 
mptscsih_scandv_complete extern int mptscsih_scandv_complete ( t#MPT_ADAPTER * , t#MPT_FRAME_HDR * , t#MPT_FRAME_HDR * ) 
mptscsih_event_process extern int mptscsih_event_process ( t#MPT_ADAPTER * , t#EventNotificationReply_t * ) 
mptscsih_ioc_reset extern int mptscsih_ioc_reset ( t#MPT_ADAPTER * , int ) 
mptscsih_change_queue_depth extern int mptscsih_change_queue_depth ( s#scsi_device * , int , int ) 

/* drivers/mfd/htc-pasic3.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
pasic3_write_register extern void pasic3_write_register ( s#device * , t#u32 , t#u8 ) 
pasic3_read_register extern t#u8 pasic3_read_register ( s#device * , t#u32 ) 

/* drivers/mfd/mfd-core.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##proc_dir_entry
s##iommu_group
mfd_cell_enable extern int mfd_cell_enable ( s#platform_device * ) 
mfd_cell_disable extern int mfd_cell_disable ( s#platform_device * ) 
s#irq_domain_ops struct irq_domain_ops { int ( * match ) ( s#irq_domain * , s#device_node * ) ; int ( * map ) ( s#irq_domain * , unsigned int , t#irq_hw_number_t ) ; void ( * unmap ) ( s#irq_domain * , unsigned int ) ; int ( * xlate ) ( s#irq_domain * , s#device_node * , const t#u32 * , unsigned int , unsigned long * , unsigned int * ) ; } 
e#irq_gc_flags enum irq_gc_flags { IRQ_GC_INIT_MASK_CACHE = 1 << 0 , IRQ_GC_INIT_NESTED_LOCK = 1 << 1 , IRQ_GC_MASK_CACHE_PER_TYPE = 1 << 2 , IRQ_GC_NO_MASK = 1 << 3 , } 
s##msi_desc
s#irq_data struct irq_data { t#u32 mask ; unsigned int irq ; unsigned long hwirq ; unsigned int node ; unsigned int state_use_accessors ; s#irq_chip * chip ; s#irq_domain * domain ; void * handler_data ; void * chip_data ; s#msi_desc * msi_desc ; t#cpumask_var_t affinity ; } 
s##seq_file
s#irq_chip struct irq_chip { const char * name ; unsigned int ( * irq_startup ) ( s#irq_data * ) ; void ( * irq_shutdown ) ( s#irq_data * ) ; void ( * irq_enable ) ( s#irq_data * ) ; void ( * irq_disable ) ( s#irq_data * ) ; void ( * irq_ack ) ( s#irq_data * ) ; void ( * irq_mask ) ( s#irq_data * ) ; void ( * irq_mask_ack ) ( s#irq_data * ) ; void ( * irq_unmask ) ( s#irq_data * ) ; void ( * irq_eoi ) ( s#irq_data * ) ; int ( * irq_set_affinity ) ( s#irq_data * , const s#cpumask * , t#bool ) ; int ( * irq_retrigger ) ( s#irq_data * ) ; int ( * irq_set_type ) ( s#irq_data * , unsigned int ) ; int ( * irq_set_wake ) ( s#irq_data * , unsigned int ) ; void ( * irq_bus_lock ) ( s#irq_data * ) ; void ( * irq_bus_sync_unlock ) ( s#irq_data * ) ; void ( * irq_cpu_online ) ( s#irq_data * ) ; void ( * irq_cpu_offline ) ( s#irq_data * ) ; void ( * irq_suspend ) ( s#irq_data * ) ; void ( * irq_resume ) ( s#irq_data * ) ; void ( * irq_pm_shutdown ) ( s#irq_data * ) ; void ( * irq_calc_mask ) ( s#irq_data * ) ; void ( * irq_print_chip ) ( s#irq_data * , s#seq_file * ) ; unsigned long flags ; } 
s#irq_chip_regs struct irq_chip_regs { unsigned long enable ; unsigned long disable ; unsigned long mask ; unsigned long ack ; unsigned long eoi ; unsigned long type ; unsigned long polarity ; } 
s##irqaction
s##irq_affinity_notify
s#irq_desc struct irq_desc { s#irq_data irq_data ; unsigned int * kstat_irqs ; t#irq_flow_handler_t handle_irq ; s#irqaction * action ; unsigned int status_use_accessors ; unsigned int core_internal_state__do_not_mess_with_it ; unsigned int depth ; unsigned int wake_depth ; unsigned int irq_count ; unsigned long last_unhandled ; unsigned int irqs_unhandled ; t#atomic_t threads_handled ; int threads_handled_last ; t#raw_spinlock_t lock ; s#cpumask * percpu_enabled ; const s#cpumask * affinity_hint ; s#irq_affinity_notify * affinity_notify ; unsigned long threads_oneshot ; t#atomic_t threads_active ; t#wait_queue_head_t wait_for_threads ; s#proc_dir_entry * dir ; int parent_irq ; s#module * owner ; const char * name ; } 
t#irq_flow_handler_t typedef void ( * irq_flow_handler_t ) ( unsigned int , s#irq_desc * ) 
s#irq_chip_type struct irq_chip_type { s#irq_chip chip ; s#irq_chip_regs regs ; t#irq_flow_handler_t handler ; t#u32 type ; t#u32 mask_cache_priv ; t#u32 * mask_cache ; } 
s#irq_chip_generic struct irq_chip_generic { t#raw_spinlock_t lock ; void * reg_base ; unsigned int irq_base ; unsigned int irq_cnt ; t#u32 mask_cache ; t#u32 type_cache ; t#u32 polarity_cache ; t#u32 wake_enabled ; t#u32 wake_active ; unsigned int num_ct ; void * private ; unsigned long installed ; unsigned long unused ; s#irq_domain * domain ; s#list_head list ; s#irq_chip_type chip_types [ 0 ] ; } 
s#irq_domain_chip_generic struct irq_domain_chip_generic { unsigned int irqs_per_chip ; unsigned int num_chips ; unsigned int irq_flags_to_clear ; unsigned int irq_flags_to_set ; e#irq_gc_flags gc_flags ; s#irq_chip_generic * gc [ 0 ] ; } 
s##radix_tree_node
s#irq_domain struct irq_domain { s#list_head link ; const char * name ; const s#irq_domain_ops * ops ; void * host_data ; s#device_node * of_node ; s#irq_domain_chip_generic * gc ; t#irq_hw_number_t hwirq_max ; unsigned int revmap_direct_max_irq ; unsigned int revmap_size ; s#radix_tree_root revmap_tree ; unsigned int linear_revmap [ ] ; } 
mfd_add_devices extern int mfd_add_devices ( s#device * , int , s#mfd_cell * , int , s#resource * , int , s#irq_domain * ) 
mfd_remove_devices extern void mfd_remove_devices ( s#device * ) 
mfd_clone_cell extern int mfd_clone_cell ( const char * , const char * * , t#size_t ) 

/* drivers/mfd/rtsx_pcr.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s#pcr_ops struct pcr_ops { int ( * extra_init_hw ) ( s#rtsx_pcr * ) ; int ( * optimize_phy ) ( s#rtsx_pcr * ) ; int ( * turn_on_led ) ( s#rtsx_pcr * ) ; int ( * turn_off_led ) ( s#rtsx_pcr * ) ; int ( * enable_auto_blink ) ( s#rtsx_pcr * ) ; int ( * disable_auto_blink ) ( s#rtsx_pcr * ) ; int ( * card_power_on ) ( s#rtsx_pcr * , int ) ; int ( * card_power_off ) ( s#rtsx_pcr * , int ) ; int ( * switch_output_voltage ) ( s#rtsx_pcr * , t#u8 ) ; unsigned int ( * cd_deglitch ) ( s#rtsx_pcr * ) ; int ( * conv_clk_and_div_n ) ( int , int ) ; void ( * fetch_vendor_settings ) ( s#rtsx_pcr * ) ; void ( * force_power_down ) ( s#rtsx_pcr * , t#u8 ) ; } 
e#PDEV_STAT enum PDEV_STAT { PDEV_STAT_IDLE , PDEV_STAT_RUN } 
s#rtsx_slot struct rtsx_slot { s#platform_device * p_dev ; void ( * card_event ) ( s#platform_device * ) ; } 
s#rtsx_pcr struct rtsx_pcr { s#pci_dev * pci ; unsigned int id ; unsigned long addr ; void * remap_addr ; int irq ; void * rtsx_resv_buf ; t#dma_addr_t rtsx_resv_buf_addr ; void * host_cmds_ptr ; t#dma_addr_t host_cmds_addr ; int ci ; void * host_sg_tbl_ptr ; t#dma_addr_t host_sg_tbl_addr ; int sgi ; t#u32 bier ; char trans_result ; unsigned int card_inserted ; unsigned int card_removed ; unsigned int card_exist ; s#delayed_work carddet_work ; s#delayed_work idle_work ; t#spinlock_t lock ; s#mutex pcr_mutex ; s#completion * done ; s#completion * finish_me ; unsigned int cur_clock ; t#bool remove_pci ; t#bool msi_en ; t#u32 extra_caps ; t#u8 ic_version ; t#u8 sd30_drive_sel_1v8 ; t#u8 sd30_drive_sel_3v3 ; t#u8 card_drive_sel ; t#u8 aspm_en ; t#u32 flags ; t#u32 tx_initial_phase ; t#u32 rx_initial_phase ; const t#u32 * sd_pull_ctl_enable_tbl ; const t#u32 * sd_pull_ctl_disable_tbl ; const t#u32 * ms_pull_ctl_enable_tbl ; const t#u32 * ms_pull_ctl_disable_tbl ; const s#pcr_ops * ops ; e#PDEV_STAT state ; int num_slots ; s#rtsx_slot * slots ; } 
rtsx_pci_start_run void rtsx_pci_start_run ( s#rtsx_pcr * ) 
rtsx_pci_write_register int rtsx_pci_write_register ( s#rtsx_pcr * , t#u16 , t#u8 , t#u8 ) 
rtsx_pci_read_register int rtsx_pci_read_register ( s#rtsx_pcr * , t#u16 , t#u8 * ) 
rtsx_pci_write_phy_register int rtsx_pci_write_phy_register ( s#rtsx_pcr * , t#u8 , t#u16 ) 
rtsx_pci_read_phy_register int rtsx_pci_read_phy_register ( s#rtsx_pcr * , t#u8 , t#u16 * ) 
rtsx_pci_stop_cmd void rtsx_pci_stop_cmd ( s#rtsx_pcr * ) 
rtsx_pci_add_cmd void rtsx_pci_add_cmd ( s#rtsx_pcr * , t#u8 , t#u16 , t#u8 , t#u8 ) 
rtsx_pci_send_cmd_no_wait void rtsx_pci_send_cmd_no_wait ( s#rtsx_pcr * ) 
rtsx_pci_send_cmd int rtsx_pci_send_cmd ( s#rtsx_pcr * , int ) 
rtsx_pci_transfer_data int rtsx_pci_transfer_data ( s#rtsx_pcr * , s#scatterlist * , int , t#bool , int ) 
rtsx_pci_read_ppbuf int rtsx_pci_read_ppbuf ( s#rtsx_pcr * , t#u8 * , int ) 
rtsx_pci_write_ppbuf int rtsx_pci_write_ppbuf ( s#rtsx_pcr * , t#u8 * , int ) 
rtsx_pci_card_pull_ctl_enable int rtsx_pci_card_pull_ctl_enable ( s#rtsx_pcr * , int ) 
rtsx_pci_card_pull_ctl_disable int rtsx_pci_card_pull_ctl_disable ( s#rtsx_pcr * , int ) 
rtsx_pci_switch_clock int rtsx_pci_switch_clock ( s#rtsx_pcr * , unsigned int , t#u8 , t#bool , t#bool , t#bool ) 
rtsx_pci_card_power_on int rtsx_pci_card_power_on ( s#rtsx_pcr * , int ) 
rtsx_pci_card_power_off int rtsx_pci_card_power_off ( s#rtsx_pcr * , int ) 
rtsx_pci_card_exclusive_check int rtsx_pci_card_exclusive_check ( s#rtsx_pcr * , int ) 
rtsx_pci_switch_output_voltage int rtsx_pci_switch_output_voltage ( s#rtsx_pcr * , t#u8 ) 
rtsx_pci_card_exist unsigned int rtsx_pci_card_exist ( s#rtsx_pcr * ) 
rtsx_pci_complete_unfinished_transfer void rtsx_pci_complete_unfinished_transfer ( s#rtsx_pcr * ) 

/* drivers/mfd/ti_am335x_tscadc.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
s##regmap
s##titsc
s##adc_device
s#ti_tscadc_dev struct ti_tscadc_dev { s#device * dev ; s#regmap * regmap_tscadc ; void * tscadc_base ; int irq ; int used_cells ; int tsc_cell ; int adc_cell ; s#mfd_cell cells [ 2 ] ; t#u32 reg_se_cache ; t#spinlock_t reg_lock ; s#titsc * tsc ; s#adc_device * adc ; } 
am335x_tsc_se_update void am335x_tsc_se_update ( s#ti_tscadc_dev * ) 
am335x_tsc_se_set void am335x_tsc_se_set ( s#ti_tscadc_dev * , t#u32 ) 
am335x_tsc_se_clr void am335x_tsc_se_clr ( s#ti_tscadc_dev * , t#u32 ) 

/* drivers/misc/ad525x_dpot.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s#ad_dpot_bus_ops struct ad_dpot_bus_ops { int ( * read_d8 ) ( void * ) ; int ( * read_r8d8 ) ( void * , t#u8 ) ; int ( * read_r8d16 ) ( void * , t#u8 ) ; int ( * write_d8 ) ( void * , t#u8 ) ; int ( * write_r8d8 ) ( void * , t#u8 , t#u8 ) ; int ( * write_r8d16 ) ( void * , t#u8 , t#u16 ) ; } 
s#ad_dpot_bus_data struct ad_dpot_bus_data { void * client ; const s#ad_dpot_bus_ops * bops ; } 
ad_dpot_probe int ad_dpot_probe ( s#device * , s#ad_dpot_bus_data * , unsigned long , const char * ) 
ad_dpot_remove int ad_dpot_remove ( s#device * ) 

/* drivers/misc/altera-stapl/altera.o */
s#altera_config struct altera_config { void * dev ; t#u8 * action ; int ( * jtag_io ) ( void * , int , int , int ) ; } 
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
altera_init extern int altera_init ( s#altera_config * , const s#firmware * ) 

/* drivers/misc/bmp085.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##proc_dir_entry
s##iommu_group
bmp085_detect int bmp085_detect ( s#device * ) 
bmp085_regmap_config extern s#regmap_config bmp085_regmap_config 
s##regmap
bmp085_probe int bmp085_probe ( s#device * , s#regmap * ) 
bmp085_remove int bmp085_remove ( s#device * ) 

/* drivers/misc/c2port/core.o */
s#c2port_ops struct c2port_ops { unsigned short block_size ; unsigned short blocks_num ; void ( * access ) ( s#c2port_device * , int ) ; void ( * c2d_dir ) ( s#c2port_device * , int ) ; int ( * c2d_get ) ( s#c2port_device * ) ; void ( * c2d_set ) ( s#c2port_device * , int ) ; void ( * c2ck_set ) ( s#c2port_device * , int ) ; } 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s#c2port_device struct c2port_device { ; unsigned int access : 1 ; unsigned int flash_access : 1 ; ; int id ; char name [ 32 ] ; s#c2port_ops * ops ; s#mutex mutex ; s#device * dev ; void * private_data ; } 
c2port_device_register extern s#c2port_device * c2port_device_register ( char * , s#c2port_ops * , void * ) 
c2port_device_unregister extern void c2port_device_unregister ( s#c2port_device * ) 

/* drivers/misc/cb710/core.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
cb710_pci_update_config_reg void cb710_pci_update_config_reg ( s#pci_dev * , int , t#uint32_t , t#uint32_t ) 
s##mfd_cell
t#cb710_irq_handler_t typedef int ( * cb710_irq_handler_t ) ( s#cb710_slot * ) 
s#cb710_slot struct cb710_slot { s#platform_device pdev ; void * iobase ; t#cb710_irq_handler_t irq_handler ; } 
cb710_set_irq_handler void cb710_set_irq_handler ( s#cb710_slot * , t#cb710_irq_handler_t ) 

/* drivers/misc/cb710/sgbuf2.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s#sg_page_iter struct sg_page_iter { s#scatterlist * sg ; unsigned int sg_pgoffset ; unsigned int __nents ; int __pg_advance ; } 
s#sg_mapping_iter struct sg_mapping_iter { s#page * page ; void * addr ; t#size_t length ; t#size_t consumed ; s#sg_page_iter piter ; unsigned int __offset ; unsigned int __remaining ; unsigned int __flags ; } 
cb710_sg_dwiter_read_next_block t#uint32_t cb710_sg_dwiter_read_next_block ( s#sg_mapping_iter * ) 
cb710_sg_dwiter_write_next_block void cb710_sg_dwiter_write_next_block ( s#sg_mapping_iter * , t#uint32_t ) 

/* drivers/misc/eeprom/eeprom_93cx6.o */
s#eeprom_93cx6 struct eeprom_93cx6 { void * data ; void ( * register_read ) ( s#eeprom_93cx6 * ) ; void ( * register_write ) ( s#eeprom_93cx6 * ) ; int width ; char drive_data ; char reg_data_in ; char reg_data_out ; char reg_data_clock ; char reg_chip_select ; } 
eeprom_93cx6_read extern void eeprom_93cx6_read ( s#eeprom_93cx6 * , const t#u8 , t#u16 * ) 
eeprom_93cx6_multiread extern void eeprom_93cx6_multiread ( s#eeprom_93cx6 * , const t#u8 , t#__le16 * , const t#u16 ) 
eeprom_93cx6_wren extern void eeprom_93cx6_wren ( s#eeprom_93cx6 * , t#bool ) 
eeprom_93cx6_write extern void eeprom_93cx6_write ( s#eeprom_93cx6 * , t#u8 , t#u16 ) 

/* drivers/misc/enclosure.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
e#enclosure_component_type enum enclosure_component_type { ENCLOSURE_COMPONENT_DEVICE = 0x01 , ENCLOSURE_COMPONENT_ARRAY_DEVICE = 0x17 , } 
e#enclosure_status enum enclosure_status { ENCLOSURE_STATUS_UNSUPPORTED = 0 , ENCLOSURE_STATUS_OK , ENCLOSURE_STATUS_CRITICAL , ENCLOSURE_STATUS_NON_CRITICAL , ENCLOSURE_STATUS_UNRECOVERABLE , ENCLOSURE_STATUS_NOT_INSTALLED , ENCLOSURE_STATUS_UNKNOWN , ENCLOSURE_STATUS_UNAVAILABLE , ENCLOSURE_STATUS_MAX } 
s#enclosure_component struct enclosure_component { void * scratch ; s#device cdev ; s#device * dev ; e#enclosure_component_type type ; int number ; int fault ; int active ; int locate ; e#enclosure_status status ; } 
e#enclosure_component_setting enum enclosure_component_setting { ENCLOSURE_SETTING_DISABLED = 0 , ENCLOSURE_SETTING_ENABLED = 1 , ENCLOSURE_SETTING_BLINK_A_ON_OFF = 2 , ENCLOSURE_SETTING_BLINK_A_OFF_ON = 3 , ENCLOSURE_SETTING_BLINK_B_ON_OFF = 6 , ENCLOSURE_SETTING_BLINK_B_OFF_ON = 7 , } 
s#enclosure_component_callbacks struct enclosure_component_callbacks { void ( * get_status ) ( s#enclosure_device * , s#enclosure_component * ) ; int ( * set_status ) ( s#enclosure_device * , s#enclosure_component * , e#enclosure_status ) ; void ( * get_fault ) ( s#enclosure_device * , s#enclosure_component * ) ; int ( * set_fault ) ( s#enclosure_device * , s#enclosure_component * , e#enclosure_component_setting ) ; void ( * get_active ) ( s#enclosure_device * , s#enclosure_component * ) ; int ( * set_active ) ( s#enclosure_device * , s#enclosure_component * , e#enclosure_component_setting ) ; void ( * get_locate ) ( s#enclosure_device * , s#enclosure_component * ) ; int ( * set_locate ) ( s#enclosure_device * , s#enclosure_component * , e#enclosure_component_setting ) ; } 
s#enclosure_device struct enclosure_device { void * scratch ; s#list_head node ; s#device edev ; s#enclosure_component_callbacks * cb ; int components ; s#enclosure_component component [ 0 ] ; } 
enclosure_find s#enclosure_device * enclosure_find ( s#device * , s#enclosure_device * ) 
enclosure_for_each_device int enclosure_for_each_device ( int ( * ) ( s#enclosure_device * , void * ) , void * ) 
enclosure_register s#enclosure_device * enclosure_register ( s#device * , const char * , int , s#enclosure_component_callbacks * ) 
enclosure_unregister void enclosure_unregister ( s#enclosure_device * ) 
enclosure_component_register s#enclosure_component * enclosure_component_register ( s#enclosure_device * , unsigned int , e#enclosure_component_type , const char * ) 
enclosure_add_device int enclosure_add_device ( s#enclosure_device * , int , s#device * ) 
enclosure_remove_device int enclosure_remove_device ( s#enclosure_device * , s#device * ) 

/* drivers/misc/lis3lv02d/lis3lv02d.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##proc_dir_entry
s##iommu_group
s##input_mt
s##mfd_cell
s##regulator
s#regulator_bulk_data struct regulator_bulk_data { const char * supply ; s#regulator * consumer ; int ret ; } 
u#axis_conversion union axis_conversion { struct { int x , y , z ; } ; int as_array [ 3 ] ; } 
s#lis3lv02d_platform_data struct lis3lv02d_platform_data { unsigned char click_flags ; unsigned char click_thresh_x ; unsigned char click_thresh_y ; unsigned char click_thresh_z ; unsigned char click_time_limit ; unsigned char click_latency ; unsigned char click_window ; unsigned char irq_cfg ; unsigned char irq_flags1 ; unsigned char irq_flags2 ; unsigned char duration1 ; unsigned char duration2 ; unsigned char wakeup_flags ; unsigned char wakeup_thresh ; unsigned char wakeup_flags2 ; unsigned char wakeup_thresh2 ; unsigned char hipass_ctrl ; t#s8 axis_x ; t#s8 axis_y ; t#s8 axis_z ; t#u16 driver_features ; int default_rate ; int ( * setup_resources ) ( void ) ; int ( * release_resources ) ( void ) ; t#s16 st_min_limits [ 3 ] ; t#s16 st_max_limits [ 3 ] ; int irq2 ; } 
s#lis3lv02d struct lis3lv02d { void * bus_priv ; s#device * pm_dev ; int ( * init ) ( s#lis3lv02d * ) ; int ( * write ) ( s#lis3lv02d * , int , t#u8 ) ; int ( * read ) ( s#lis3lv02d * , int , t#u8 * ) ; int ( * blkread ) ( s#lis3lv02d * , int , int , t#u8 * ) ; int ( * reg_ctrl ) ( s#lis3lv02d * , t#bool ) ; int * odrs ; t#u8 * regs ; int regs_size ; t#u8 * reg_cache ; t#bool regs_stored ; t#u8 odr_mask ; t#u8 whoami ; t#s16 ( * read_data ) ( s#lis3lv02d * , int ) ; int mdps_max_val ; int pwron_delay ; int scale ; s#input_polled_dev * idev ; s#platform_device * pdev ; s#regulator_bulk_data regulators [ 2 ] ; t#atomic_t count ; u#axis_conversion ac ; int mapped_btns [ 3 ] ; t#u32 irq ; s#fasync_struct * async_queue ; t#wait_queue_head_t misc_wait ; unsigned long misc_opened ; s#miscdevice miscdev ; int data_ready_count [ 2 ] ; t#atomic_t wake_thread ; unsigned char irq_cfg ; unsigned int shift_adj ; s#lis3lv02d_platform_data * pdata ; s#mutex mutex ; s#device_node * of_node ; } 
lis3_dev extern s#lis3lv02d lis3_dev 
lis3lv02d_poweroff void lis3lv02d_poweroff ( s#lis3lv02d * ) 
lis3lv02d_poweron int lis3lv02d_poweron ( s#lis3lv02d * ) 
lis3lv02d_joystick_enable int lis3lv02d_joystick_enable ( s#lis3lv02d * ) 
lis3lv02d_joystick_disable void lis3lv02d_joystick_disable ( s#lis3lv02d * ) 
lis3lv02d_remove_fs int lis3lv02d_remove_fs ( s#lis3lv02d * ) 
lis3lv02d_init_dt int lis3lv02d_init_dt ( s#lis3lv02d * ) 
lis3lv02d_init_device int lis3lv02d_init_device ( s#lis3lv02d * ) 

/* drivers/misc/ti-st/st_core.o */
e#proto_type enum proto_type { ST_BT , ST_FM , ST_GPS , ST_MAX_CHANNELS = 16 , } 
s##sock
s##net_device
s##sec_path
s#st_proto_s struct st_proto_s { e#proto_type type ; long ( * recv ) ( void * , s#sk_buff * ) ; unsigned char ( * match_packet ) ( const unsigned char * ) ; void ( * reg_complete_cb ) ( void * , char ) ; long ( * write ) ( s#sk_buff * ) ; void * priv_data ; unsigned char chnl_id ; unsigned short max_frame_size ; unsigned char hdr_len ; unsigned char offset_len_in_hdr ; unsigned char len_size ; unsigned char reserve ; } 
st_register extern long st_register ( s#st_proto_s * ) 
st_unregister extern long st_unregister ( s#st_proto_s * ) 

/* drivers/misc/tifm_core.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s#tifm_dev struct tifm_dev { char * addr ; t#spinlock_t lock ; unsigned char type ; unsigned int socket_id ; void ( * card_event ) ( s#tifm_dev * ) ; void ( * data_event ) ( s#tifm_dev * ) ; s#device dev ; } 
s#tifm_adapter struct tifm_adapter { char * addr ; t#spinlock_t lock ; unsigned int irq_status ; unsigned int socket_change_set ; unsigned int id ; unsigned int num_sockets ; s#completion * finish_me ; s#work_struct media_switcher ; s#device dev ; void ( * eject ) ( s#tifm_adapter * , s#tifm_dev * ) ; int ( * has_ms_pif ) ( s#tifm_adapter * , s#tifm_dev * ) ; s#tifm_dev * sockets [ 0 ] ; } 
tifm_alloc_adapter s#tifm_adapter * tifm_alloc_adapter ( unsigned int , s#device * ) 
tifm_add_adapter int tifm_add_adapter ( s#tifm_adapter * ) 
tifm_remove_adapter void tifm_remove_adapter ( s#tifm_adapter * ) 
tifm_free_adapter void tifm_free_adapter ( s#tifm_adapter * ) 
tifm_free_device void tifm_free_device ( s#device * ) 
tifm_alloc_device s#tifm_dev * tifm_alloc_device ( s#tifm_adapter * , unsigned int , unsigned char ) 
tifm_eject void tifm_eject ( s#tifm_dev * ) 
tifm_has_ms_pif int tifm_has_ms_pif ( s#tifm_dev * ) 
tifm_map_sg int tifm_map_sg ( s#tifm_dev * , s#scatterlist * , int , int ) 
tifm_unmap_sg void tifm_unmap_sg ( s#tifm_dev * , s#scatterlist * , int , int ) 
tifm_queue_work void tifm_queue_work ( s#work_struct * ) 
s#tifm_device_id struct tifm_device_id { unsigned char type ; } 
s#tifm_driver struct tifm_driver { s#tifm_device_id * id_table ; int ( * probe ) ( s#tifm_dev * ) ; void ( * remove ) ( s#tifm_dev * ) ; int ( * suspend ) ( s#tifm_dev * , t#pm_message_t ) ; int ( * resume ) ( s#tifm_dev * ) ; s#device_driver driver ; } 
tifm_register_driver int tifm_register_driver ( s#tifm_driver * ) 
tifm_unregister_driver void tifm_unregister_driver ( s#tifm_driver * ) 

/* drivers/mtd/chips/chipreg.o */
t#u_char typedef unsigned char u_char 
s#nand_oobfree struct nand_oobfree { t#__u32 offset ; t#__u32 length ; } 
s#nand_ecclayout struct nand_ecclayout { t#__u32 eccbytes ; t#__u32 eccpos [ 640 ] ; t#__u32 oobavail ; s#nand_oobfree oobfree [ 32 ] ; } 
s#mtd_erase_region_info struct mtd_erase_region_info { t#uint64_t offset ; t#uint32_t erasesize ; t#uint32_t numblocks ; unsigned long * lockmap ; } 
t#u_long typedef unsigned long u_long 
s#erase_info struct erase_info { s#mtd_info * mtd ; t#uint64_t addr ; t#uint64_t len ; t#uint64_t fail_addr ; t#u_long time ; t#u_long retries ; unsigned dev ; unsigned cell ; void ( * callback ) ( s#erase_info * ) ; t#u_long priv ; t#u_char state ; s#erase_info * next ; } 
s#mtd_oob_ops struct mtd_oob_ops { unsigned int mode ; t#size_t len ; t#size_t retlen ; t#size_t ooblen ; t#size_t oobretlen ; t#uint32_t ooboffs ; t#uint8_t * datbuf ; t#uint8_t * oobbuf ; } 
s#otp_info struct otp_info { t#__u32 start ; t#__u32 length ; t#__u32 locked ; } 
s#kvec struct kvec { void * iov_base ; t#size_t iov_len ; } 
s##backing_dev_info
s#mtd_ecc_stats struct mtd_ecc_stats { t#__u32 corrected ; t#__u32 failed ; t#__u32 badblocks ; t#__u32 bbtblocks ; } 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s#mtd_info struct mtd_info { t#u_char type ; t#uint32_t flags ; t#uint64_t size ; t#uint32_t erasesize ; t#uint32_t writesize ; t#uint32_t writebufsize ; t#uint32_t oobsize ; t#uint32_t oobavail ; unsigned int erasesize_shift ; unsigned int writesize_shift ; unsigned int erasesize_mask ; unsigned int writesize_mask ; unsigned int bitflip_threshold ; const char * name ; int index ; s#nand_ecclayout * ecclayout ; unsigned int ecc_step_size ; unsigned int ecc_strength ; int numeraseregions ; s#mtd_erase_region_info * eraseregions ; int ( * _erase ) ( s#mtd_info * , s#erase_info * ) ; int ( * _point ) ( s#mtd_info * , t#loff_t , t#size_t , t#size_t * , void * * , t#resource_size_t * ) ; int ( * _unpoint ) ( s#mtd_info * , t#loff_t , t#size_t ) ; unsigned long ( * _get_unmapped_area ) ( s#mtd_info * , unsigned long , unsigned long , unsigned long ) ; int ( * _read ) ( s#mtd_info * , t#loff_t , t#size_t , t#size_t * , t#u_char * ) ; int ( * _write ) ( s#mtd_info * , t#loff_t , t#size_t , t#size_t * , const t#u_char * ) ; int ( * _panic_write ) ( s#mtd_info * , t#loff_t , t#size_t , t#size_t * , const t#u_char * ) ; int ( * _read_oob ) ( s#mtd_info * , t#loff_t , s#mtd_oob_ops * ) ; int ( * _write_oob ) ( s#mtd_info * , t#loff_t , s#mtd_oob_ops * ) ; int ( * _get_fact_prot_info ) ( s#mtd_info * , s#otp_info * , t#size_t ) ; int ( * _read_fact_prot_reg ) ( s#mtd_info * , t#loff_t , t#size_t , t#size_t * , t#u_char * ) ; int ( * _get_user_prot_info ) ( s#mtd_info * , s#otp_info * , t#size_t ) ; int ( * _read_user_prot_reg ) ( s#mtd_info * , t#loff_t , t#size_t , t#size_t * , t#u_char * ) ; int ( * _write_user_prot_reg ) ( s#mtd_info * , t#loff_t , t#size_t , t#size_t * , t#u_char * ) ; int ( * _lock_user_prot_reg ) ( s#mtd_info * , t#loff_t , t#size_t ) ; int ( * _writev ) ( s#mtd_info * , const s#kvec * , unsigned long , t#loff_t , t#size_t * ) ; void ( * _sync ) ( s#mtd_info * ) ; int ( * _lock ) ( s#mtd_info * , t#loff_t , t#uint64_t ) ; int ( * _unlock ) ( s#mtd_info * , t#loff_t , t#uint64_t ) ; int ( * _is_locked ) ( s#mtd_info * , t#loff_t , t#uint64_t ) ; int ( * _block_isbad ) ( s#mtd_info * , t#loff_t ) ; int ( * _block_markbad ) ( s#mtd_info * , t#loff_t ) ; int ( * _suspend ) ( s#mtd_info * ) ; void ( * _resume ) ( s#mtd_info * ) ; int ( * _get_device ) ( s#mtd_info * ) ; void ( * _put_device ) ( s#mtd_info * ) ; s#backing_dev_info * backing_dev_info ; s#notifier_block reboot_notifier ; s#mtd_ecc_stats ecc_stats ; int subpage_sft ; void * priv ; s#module * owner ; s#device dev ; int usecount ; } 
s#map_info struct map_info { const char * name ; unsigned long size ; t#resource_size_t phys ; void * virt ; void * cached ; int swap ; int bankwidth ; void ( * inval_cache ) ( s#map_info * , unsigned long , t#ssize_t ) ; void ( * set_vpp ) ( s#map_info * , int ) ; unsigned long pfow_base ; unsigned long map_priv_1 ; unsigned long map_priv_2 ; s#device_node * device_node ; void * fldrv_priv ; s#mtd_chip_driver * fldrv ; } 
s#mtd_chip_driver struct mtd_chip_driver { s#mtd_info * ( * probe ) ( s#map_info * ) ; void ( * destroy ) ( s#mtd_info * ) ; s#module * module ; char * name ; s#list_head list ; } 
register_mtd_chip_driver void register_mtd_chip_driver ( s#mtd_chip_driver * ) 
unregister_mtd_chip_driver void unregister_mtd_chip_driver ( s#mtd_chip_driver * ) 
do_map_probe s#mtd_info * do_map_probe ( const char * , s#map_info * ) 
map_destroy void map_destroy ( s#mtd_info * ) 

/* drivers/mtd/lpddr/lpddr_cmds.o */
s##backing_dev_info
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
lpddr_cmdset s#mtd_info * lpddr_cmdset ( s#map_info * ) 

/* drivers/mtd/mtd_blkdevs.o */
s##tvec_base
s##workqueue_struct
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s#mtd_blktrans_ops struct mtd_blktrans_ops { char * name ; int major ; int part_bits ; int blksize ; int blkshift ; int ( * readsect ) ( s#mtd_blktrans_dev * , unsigned long , char * ) ; int ( * writesect ) ( s#mtd_blktrans_dev * , unsigned long , char * ) ; int ( * discard ) ( s#mtd_blktrans_dev * , unsigned long , unsigned ) ; void ( * background ) ( s#mtd_blktrans_dev * ) ; int ( * getgeo ) ( s#mtd_blktrans_dev * , s#hd_geometry * ) ; int ( * flush ) ( s#mtd_blktrans_dev * ) ; int ( * open ) ( s#mtd_blktrans_dev * ) ; void ( * release ) ( s#mtd_blktrans_dev * ) ; void ( * add_mtd ) ( s#mtd_blktrans_ops * , s#mtd_info * ) ; void ( * remove_dev ) ( s#mtd_blktrans_dev * ) ; s#list_head devs ; s#list_head list ; s#module * owner ; } 
s#mtd_blktrans_dev struct mtd_blktrans_dev { s#mtd_blktrans_ops * tr ; s#list_head list ; s#mtd_info * mtd ; s#mutex lock ; int devnum ; t#bool bg_stop ; unsigned long size ; int readonly ; int open ; s#kref ref ; s#gendisk * disk ; s#attribute_group * disk_attributes ; s#workqueue_struct * wq ; s#work_struct work ; s#request_queue * rq ; t#spinlock_t queue_lock ; void * priv ; t#fmode_t file_mode ; } 
mtd_blktrans_cease_background extern int mtd_blktrans_cease_background ( s#mtd_blktrans_dev * ) 
register_mtd_blktrans extern int register_mtd_blktrans ( s#mtd_blktrans_ops * ) 
deregister_mtd_blktrans extern int deregister_mtd_blktrans ( s#mtd_blktrans_ops * ) 
add_mtd_blktrans_dev extern int add_mtd_blktrans_dev ( s#mtd_blktrans_dev * ) 
del_mtd_blktrans_dev extern int del_mtd_blktrans_dev ( s#mtd_blktrans_dev * ) 

/* drivers/mtd/mtdconcat.o */
s##tvec_base
s##workqueue_struct
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
mtd_concat_create s#mtd_info * mtd_concat_create ( s#mtd_info * [ ] , int , const char * ) 
mtd_concat_destroy void mtd_concat_destroy ( s#mtd_info * ) 

/* drivers/mtd/mtdcore.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##tvec_base
s##workqueue_struct
s##device_private
s##kiocb
s##poll_table_struct
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
mtd_table_mutex extern s#mutex mtd_table_mutex 
__mtd_next_device s#mtd_info * __mtd_next_device ( int ) 
s#mtd_part_parser_data struct mtd_part_parser_data { unsigned long origin ; s#device_node * of_node ; } 
s#mtd_partition struct mtd_partition { char * name ; t#uint64_t size ; t#uint64_t offset ; t#uint32_t mask_flags ; s#nand_ecclayout * ecclayout ; } 
mtd_device_parse_register extern int mtd_device_parse_register ( s#mtd_info * , const char * const * , s#mtd_part_parser_data * , const s#mtd_partition * , int ) 
mtd_device_unregister extern int mtd_device_unregister ( s#mtd_info * ) 
s#mtd_notifier struct mtd_notifier { void ( * add ) ( s#mtd_info * ) ; void ( * remove ) ( s#mtd_info * ) ; s#list_head list ; } 
register_mtd_user extern void register_mtd_user ( s#mtd_notifier * ) 
unregister_mtd_user extern int unregister_mtd_user ( s#mtd_notifier * ) 
get_mtd_device extern s#mtd_info * get_mtd_device ( s#mtd_info * , int ) 
__get_mtd_device extern int __get_mtd_device ( s#mtd_info * ) 
get_mtd_device_nm extern s#mtd_info * get_mtd_device_nm ( const char * ) 
put_mtd_device extern void put_mtd_device ( s#mtd_info * ) 
__put_mtd_device extern void __put_mtd_device ( s#mtd_info * ) 
mtd_erase int mtd_erase ( s#mtd_info * , s#erase_info * ) 
mtd_point int mtd_point ( s#mtd_info * , t#loff_t , t#size_t , t#size_t * , void * * , t#resource_size_t * ) 
mtd_unpoint int mtd_unpoint ( s#mtd_info * , t#loff_t , t#size_t ) 
mtd_get_unmapped_area unsigned long mtd_get_unmapped_area ( s#mtd_info * , unsigned long , unsigned long , unsigned long ) 
mtd_read int mtd_read ( s#mtd_info * , t#loff_t , t#size_t , t#size_t * , t#u_char * ) 
mtd_write int mtd_write ( s#mtd_info * , t#loff_t , t#size_t , t#size_t * , const t#u_char * ) 
mtd_panic_write int mtd_panic_write ( s#mtd_info * , t#loff_t , t#size_t , t#size_t * , const t#u_char * ) 
mtd_read_oob int mtd_read_oob ( s#mtd_info * , t#loff_t , s#mtd_oob_ops * ) 
mtd_get_fact_prot_info int mtd_get_fact_prot_info ( s#mtd_info * , s#otp_info * , t#size_t ) 
mtd_read_fact_prot_reg int mtd_read_fact_prot_reg ( s#mtd_info * , t#loff_t , t#size_t , t#size_t * , t#u_char * ) 
mtd_get_user_prot_info int mtd_get_user_prot_info ( s#mtd_info * , s#otp_info * , t#size_t ) 
mtd_read_user_prot_reg int mtd_read_user_prot_reg ( s#mtd_info * , t#loff_t , t#size_t , t#size_t * , t#u_char * ) 
mtd_write_user_prot_reg int mtd_write_user_prot_reg ( s#mtd_info * , t#loff_t , t#size_t , t#size_t * , t#u_char * ) 
mtd_lock_user_prot_reg int mtd_lock_user_prot_reg ( s#mtd_info * , t#loff_t , t#size_t ) 
mtd_lock int mtd_lock ( s#mtd_info * , t#loff_t , t#uint64_t ) 
mtd_unlock int mtd_unlock ( s#mtd_info * , t#loff_t , t#uint64_t ) 
mtd_is_locked int mtd_is_locked ( s#mtd_info * , t#loff_t , t#uint64_t ) 
mtd_block_isbad int mtd_block_isbad ( s#mtd_info * , t#loff_t ) 
mtd_block_markbad int mtd_block_markbad ( s#mtd_info * , t#loff_t ) 
mtd_writev int mtd_writev ( s#mtd_info * , const s#kvec * , unsigned long , t#loff_t , t#size_t * ) 
mtd_kmalloc_up_to void * mtd_kmalloc_up_to ( const s#mtd_info * , t#size_t * ) 

/* drivers/mtd/mtdpart.o */
s##backing_dev_info
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
mtd_erase_callback void mtd_erase_callback ( s#erase_info * ) 
mtd_add_partition int mtd_add_partition ( s#mtd_info * , char * , long long , long long ) 
mtd_del_partition int mtd_del_partition ( s#mtd_info * , int ) 
s#mtd_part_parser struct mtd_part_parser { s#list_head list ; s#module * owner ; const char * name ; int ( * parse_fn ) ( s#mtd_info * , s#mtd_partition * * , s#mtd_part_parser_data * ) ; } 
register_mtd_parser extern int register_mtd_parser ( s#mtd_part_parser * ) 
deregister_mtd_parser extern int deregister_mtd_parser ( s#mtd_part_parser * ) 
mtd_is_partition int mtd_is_partition ( const s#mtd_info * ) 
mtd_get_device_size t#uint64_t mtd_get_device_size ( const s#mtd_info * ) 

/* drivers/mtd/mtdsuper.o */
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##workqueue_struct
s##cdev
mount_mtd extern s#dentry * mount_mtd ( s#file_system_type * , int , const char * , void * , int ( * ) ( s#super_block * , void * , int ) ) 
kill_mtd_super extern void kill_mtd_super ( s#super_block * ) 

/* drivers/net/ethernet/broadcom/cnic.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##tvec_base
s##workqueue_struct
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s#kwqe struct kwqe { t#u32 kwqe_op_flag ; t#u32 kwqe_info0 ; t#u32 kwqe_info1 ; t#u32 kwqe_info2 ; t#u32 kwqe_info3 ; t#u32 kwqe_info4 ; t#u32 kwqe_info5 ; t#u32 kwqe_info6 ; } 
s#kwqe_16 struct kwqe_16 { t#u32 kwqe_info0 ; t#u32 kwqe_info1 ; t#u32 kwqe_info2 ; t#u32 kwqe_info3 ; } 
s#cnic_sock struct cnic_sock { s#cnic_dev * dev ; void * context ; t#u32 src_ip [ 4 ] ; t#u32 dst_ip [ 4 ] ; t#u16 src_port ; t#u16 dst_port ; t#u16 vlan_id ; unsigned char old_ha [ 6 ] ; unsigned char ha [ 6 ] ; t#u32 mtu ; t#u32 cid ; t#u32 l5_cid ; t#u32 pg_cid ; int ulp_type ; t#u32 ka_timeout ; t#u32 ka_interval ; t#u8 ka_max_probe_count ; t#u8 tos ; t#u8 ttl ; t#u8 snd_seq_scale ; t#u32 rcv_buf ; t#u32 snd_buf ; t#u32 seed ; unsigned long tcp_flags ; unsigned long flags ; t#atomic_t ref_count ; t#u32 state ; s#kwqe kwqe1 ; s#kwqe kwqe2 ; s#kwqe kwqe3 ; } 
s#in_addr struct in_addr { t#__be32 s_addr ; } 
s#sockaddr_in struct sockaddr_in { t#__kernel_sa_family_t sin_family ; t#__be16 sin_port ; s#in_addr sin_addr ; unsigned char __pad [ 16 - sizeof ( short int ) - sizeof ( unsigned short int ) - sizeof ( struct in_addr ) ] ; } 
s#sockaddr_in6 struct sockaddr_in6 { unsigned short int sin6_family ; t#__be16 sin6_port ; t#__be32 sin6_flowinfo ; s#in6_addr sin6_addr ; t#__u32 sin6_scope_id ; } 
s#cnic_sockaddr struct cnic_sockaddr { union { s#sockaddr_in v4 ; s#sockaddr_in6 v6 ; } local ; union { s#sockaddr_in v4 ; s#sockaddr_in6 v6 ; } remote ; } 
s#eth_stats_info struct eth_stats_info { t#u8 version [ 12 ] ; t#u8 mac_local [ 8 ] ; t#u8 mac_add1 [ 8 ] ; t#u8 mac_add2 [ 8 ] ; t#u32 mtu_size ; t#u32 feature_flags ; t#u32 lso_max_size ; t#u32 lso_min_seg_cnt ; t#u32 ipv4_ofld_cnt ; t#u32 ipv6_ofld_cnt ; t#u32 promiscuous_mode ; t#u32 txq_size ; t#u32 rxq_size ; t#u32 txq_avg_depth ; t#u32 rxq_avg_depth ; t#u32 iov_offload ; t#u32 netq_cnt ; t#u32 vf_cnt ; } 
s#fcoe_stats_info struct fcoe_stats_info { t#u8 version [ 12 ] ; t#u8 mac_local [ 8 ] ; t#u8 mac_add1 [ 8 ] ; t#u8 mac_add2 [ 8 ] ; t#u32 qos_priority ; t#u32 txq_size ; t#u32 rxq_size ; t#u32 txq_avg_depth ; t#u32 rxq_avg_depth ; t#u32 rx_frames_lo ; t#u32 rx_frames_hi ; t#u32 rx_bytes_lo ; t#u32 rx_bytes_hi ; t#u32 tx_frames_lo ; t#u32 tx_frames_hi ; t#u32 tx_bytes_lo ; t#u32 tx_bytes_hi ; } 
s#iscsi_stats_info struct iscsi_stats_info { t#u8 version [ 12 ] ; t#u8 mac_local [ 8 ] ; t#u8 mac_add1 [ 8 ] ; t#u32 qos_priority ; t#u8 initiator_name [ 64 ] ; t#u8 ww_port_name [ 64 ] ; t#u8 boot_target_name [ 64 ] ; t#u8 boot_target_ip [ 16 ] ; t#u32 boot_target_portal ; t#u8 boot_init_ip [ 16 ] ; t#u32 max_frame_size ; t#u32 txq_size ; t#u32 rxq_size ; t#u32 txq_avg_depth ; t#u32 rxq_avg_depth ; t#u32 rx_pdus_lo ; t#u32 rx_pdus_hi ; t#u32 rx_bytes_lo ; t#u32 rx_bytes_hi ; t#u32 tx_pdus_lo ; t#u32 tx_pdus_hi ; t#u32 tx_bytes_lo ; t#u32 tx_bytes_hi ; t#u32 pcp_prior_map_tbl ; } 
u#drv_info_to_mcp union drv_info_to_mcp { s#eth_stats_info ether_stat ; s#fcoe_stats_info fcoe_stat ; s#iscsi_stats_info iscsi_stat ; } 
s#fcoe_capabilities struct fcoe_capabilities { t#u32 capability1 ; t#u32 capability2 ; t#u32 capability3 ; t#u32 capability4 ; } 
s#cnic_dev struct cnic_dev { s#net_device * netdev ; s#pci_dev * pcidev ; void * regview ; s#list_head list ; int ( * register_device ) ( s#cnic_dev * , int , void * ) ; int ( * unregister_device ) ( s#cnic_dev * , int ) ; int ( * submit_kwqes ) ( s#cnic_dev * , s#kwqe * [ ] , t#u32 ) ; int ( * submit_kwqes_16 ) ( s#cnic_dev * , s#kwqe_16 * [ ] , t#u32 ) ; int ( * cm_create ) ( s#cnic_dev * , int , t#u32 , t#u32 , s#cnic_sock * * , void * ) ; int ( * cm_destroy ) ( s#cnic_sock * ) ; int ( * cm_connect ) ( s#cnic_sock * , s#cnic_sockaddr * ) ; int ( * cm_abort ) ( s#cnic_sock * ) ; int ( * cm_close ) ( s#cnic_sock * ) ; s#cnic_dev * ( * cm_select_dev ) ( s#sockaddr_in * , int ) ; int ( * iscsi_nl_msg_recv ) ( s#cnic_dev * , t#u32 , char * , t#u16 ) ; unsigned long flags ; t#atomic_t ref_count ; t#u8 mac_addr [ 6 ] ; int max_iscsi_conn ; int max_fcoe_conn ; int max_rdma_conn ; int max_fcoe_exchanges ; u#drv_info_to_mcp * stats_addr ; s#fcoe_capabilities * fcoe_cap ; void * cnic_priv ; } 
s#kcqe struct kcqe { t#u32 kcqe_info0 ; t#u32 kcqe_info1 ; t#u32 kcqe_info2 ; t#u32 kcqe_info3 ; t#u32 kcqe_info4 ; t#u32 kcqe_info5 ; t#u32 kcqe_info6 ; t#u32 kcqe_op_flag ; } 
s#cnic_ulp_ops struct cnic_ulp_ops { void ( * cnic_init ) ( s#cnic_dev * ) ; void ( * cnic_exit ) ( s#cnic_dev * ) ; void ( * cnic_start ) ( void * ) ; void ( * cnic_stop ) ( void * ) ; void ( * indicate_kcqes ) ( void * , s#kcqe * [ ] , t#u32 ) ; void ( * indicate_netevent ) ( void * , unsigned long , t#u16 ) ; void ( * cm_connect_complete ) ( s#cnic_sock * ) ; void ( * cm_close_complete ) ( s#cnic_sock * ) ; void ( * cm_abort_complete ) ( s#cnic_sock * ) ; void ( * cm_remote_close ) ( s#cnic_sock * ) ; void ( * cm_remote_abort ) ( s#cnic_sock * ) ; int ( * iscsi_nl_send_msg ) ( void * , t#u32 , char * , t#u16 ) ; int ( * cnic_get_stats ) ( void * ) ; s#module * owner ; t#atomic_t ref_count ; } 
cnic_register_driver int cnic_register_driver ( int , s#cnic_ulp_ops * ) 
cnic_unregister_driver int cnic_unregister_driver ( int ) 

/* drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.o */
e#t3ctype enum t3ctype { T3A = 0 , T3B , T3C , } 
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##dn_route
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##module
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s#t3cdev struct t3cdev { char name [ 16 ] ; e#t3ctype type ; s#list_head ofld_dev_list ; s#net_device * lldev ; s#proc_dir_entry * proc_dir ; int ( * send ) ( s#t3cdev * , s#sk_buff * ) ; int ( * recv ) ( s#t3cdev * , s#sk_buff * * , int ) ; int ( * ctl ) ( s#t3cdev * , unsigned int , void * ) ; void ( * neigh_update ) ( s#t3cdev * , s#neighbour * ) ; void * priv ; void * l2opt ; void * l3opt ; void * l4opt ; void * ulp ; void * ulp_iscsi ; } 
t#cxgb3_cpl_handler_func typedef int ( * cxgb3_cpl_handler_func ) ( s#t3cdev * , s#sk_buff * , void * ) 
s#l2t_entry struct l2t_entry { t#u16 state ; t#u16 idx ; t#u32 addr ; int ifindex ; t#u16 smt_idx ; t#u16 vlan ; s#neighbour * neigh ; s#l2t_entry * first ; s#l2t_entry * next ; s#sk_buff_head arpq ; t#spinlock_t lock ; t#atomic_t refcnt ; t#u8 dmac [ 6 ] ; } 
s#cxgb3_client struct cxgb3_client { char * name ; void ( * add ) ( s#t3cdev * ) ; void ( * remove ) ( s#t3cdev * ) ; t#cxgb3_cpl_handler_func * handlers ; int ( * redirect ) ( void * , s#dst_entry * , s#dst_entry * , s#l2t_entry * ) ; s#list_head client_list ; void ( * event_handler ) ( s#t3cdev * , t#u32 , t#u32 ) ; } 
cxgb3_register_client void cxgb3_register_client ( s#cxgb3_client * ) 
cxgb3_unregister_client void cxgb3_unregister_client ( s#cxgb3_client * ) 
cxgb3_free_atid void * cxgb3_free_atid ( s#t3cdev * , int ) 
cxgb3_free_stid void cxgb3_free_stid ( s#t3cdev * , int ) 
cxgb3_insert_tid void cxgb3_insert_tid ( s#t3cdev * , s#cxgb3_client * , void * , unsigned int ) 
cxgb3_queue_tid_release void cxgb3_queue_tid_release ( s#t3cdev * , unsigned int ) 
cxgb3_remove_tid void cxgb3_remove_tid ( s#t3cdev * , void * , unsigned int ) 
cxgb3_alloc_atid int cxgb3_alloc_atid ( s#t3cdev * , s#cxgb3_client * , void * ) 
cxgb3_alloc_stid int cxgb3_alloc_stid ( s#t3cdev * , s#cxgb3_client * , void * ) 
dev2t3cdev s#t3cdev * dev2t3cdev ( s#net_device * ) 
t#cpl_handler_func typedef int ( * cpl_handler_func ) ( s#t3cdev * , s#sk_buff * ) 
t3_register_cpl_handler void t3_register_cpl_handler ( unsigned int , t#cpl_handler_func ) 
cxgb3_ofld_send int cxgb3_ofld_send ( s#t3cdev * , s#sk_buff * ) 

/* drivers/net/ethernet/chelsio/cxgb3/l2t.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##dn_route
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##module
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
t3_l2t_send_slow int t3_l2t_send_slow ( s#t3cdev * , s#sk_buff * , s#l2t_entry * ) 
t3_l2t_send_event void t3_l2t_send_event ( s#t3cdev * , s#l2t_entry * ) 
s#l2t_data struct l2t_data { unsigned int nentries ; s#l2t_entry * rover ; t#atomic_t nfree ; t#rwlock_t lock ; s#l2t_entry l2tab [ 0 ] ; s#callback_head callback_head ; } 
t3_l2e_free void t3_l2e_free ( s#l2t_data * , s#l2t_entry * ) 
t3_l2t_get s#l2t_entry * t3_l2t_get ( s#t3cdev * , s#dst_entry * , s#net_device * , const void * ) 

/* drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.o */
s#serv_entry struct serv_entry { void * data ; } 
u#aopen_entry union aopen_entry { void * data ; u#aopen_entry * next ; } 
s##filter_entry
s#tid_info struct tid_info { void * * tid_tab ; unsigned int ntids ; s#serv_entry * stid_tab ; unsigned long * stid_bmap ; unsigned int nstids ; unsigned int stid_base ; u#aopen_entry * atid_tab ; unsigned int natids ; unsigned int atid_base ; s#filter_entry * ftid_tab ; unsigned int nftids ; unsigned int ftid_base ; unsigned int aftid_base ; unsigned int aftid_end ; unsigned int sftid_base ; unsigned int nsftids ; t#spinlock_t atid_lock __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; u#aopen_entry * afree ; unsigned int atids_in_use ; t#spinlock_t stid_lock ; unsigned int stids_in_use ; t#atomic_t tids_in_use ; } 
cxgb4_alloc_atid int cxgb4_alloc_atid ( s#tid_info * , void * ) 
cxgb4_free_atid void cxgb4_free_atid ( s#tid_info * , unsigned int ) 
cxgb4_alloc_stid int cxgb4_alloc_stid ( s#tid_info * , int , void * ) 
cxgb4_alloc_sftid int cxgb4_alloc_sftid ( s#tid_info * , int , void * ) 
cxgb4_free_stid void cxgb4_free_stid ( s#tid_info * , unsigned int , int ) 
cxgb4_remove_tid void cxgb4_remove_tid ( s#tid_info * , unsigned int , unsigned int ) 
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
u#inet_addr union inet_addr { t#__u32 all [ 4 ] ; t#__be32 ip ; t#__be32 ip6 [ 4 ] ; s#in_addr in ; s#in6_addr in6 ; } 
s#netpoll struct netpoll { s#net_device * dev ; char dev_name [ 16 ] ; const char * name ; void ( * rx_hook ) ( s#netpoll * , int , char * , int ) ; u#inet_addr local_ip , remote_ip ; t#bool ipv6 ; t#u16 local_port , remote_port ; t#u8 remote_mac [ 6 ] ; s#list_head rx ; s#work_struct cleanup_work ; } 
s#netpoll_info struct netpoll_info { t#atomic_t refcnt ; unsigned long rx_flags ; t#spinlock_t rx_lock ; s#semaphore dev_lock ; s#list_head rx_np ; s#sk_buff_head neigh_tx ; s#sk_buff_head txq ; s#delayed_work tx_work ; s#netpoll * netpoll ; s#callback_head rcu ; } 
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
cxgb4_create_server int cxgb4_create_server ( const s#net_device * , unsigned int , t#__be32 , t#__be16 , t#__be16 , unsigned int ) 
cxgb4_create_server6 int cxgb4_create_server6 ( const s#net_device * , unsigned int , const s#in6_addr * , t#__be16 , unsigned int ) 
cxgb4_remove_server int cxgb4_remove_server ( const s#net_device * , unsigned int , unsigned int , t#bool ) 
cxgb4_best_mtu unsigned int cxgb4_best_mtu ( const unsigned short * , unsigned short , unsigned int * ) 
cxgb4_port_chan unsigned int cxgb4_port_chan ( const s#net_device * ) 
cxgb4_dbfifo_count unsigned int cxgb4_dbfifo_count ( const s#net_device * , int ) 
cxgb4_port_viid unsigned int cxgb4_port_viid ( const s#net_device * ) 
cxgb4_port_idx unsigned int cxgb4_port_idx ( const s#net_device * ) 
s#tp_tcp_stats struct tp_tcp_stats { t#u32 tcpOutRsts ; t#u64 tcpInSegs ; t#u64 tcpOutSegs ; t#u64 tcpRetransSegs ; } 
cxgb4_get_tcp_stats void cxgb4_get_tcp_stats ( s#pci_dev * , s#tp_tcp_stats * , s#tp_tcp_stats * ) 
cxgb4_iscsi_init void cxgb4_iscsi_init ( s#net_device * , unsigned int , const unsigned int * ) 
cxgb4_flush_eq_cache int cxgb4_flush_eq_cache ( s#net_device * ) 
cxgb4_sync_txq_pidx int cxgb4_sync_txq_pidx ( s#net_device * , t#u16 , t#u16 , t#u16 ) 
cxgb4_disable_db_coalescing void cxgb4_disable_db_coalescing ( s#net_device * ) 
cxgb4_enable_db_coalescing void cxgb4_enable_db_coalescing ( s#net_device * ) 
e#cxgb4_uld enum cxgb4_uld { CXGB4_ULD_RDMA , CXGB4_ULD_ISCSI , CXGB4_ULD_MAX } 
s##l2t_data
s#cxgb4_range struct cxgb4_range { unsigned int start ; unsigned int size ; } 
s#cxgb4_virt_res struct cxgb4_virt_res { s#cxgb4_range ddp ; s#cxgb4_range iscsi ; s#cxgb4_range stag ; s#cxgb4_range rq ; s#cxgb4_range pbl ; s#cxgb4_range qp ; s#cxgb4_range cq ; s#cxgb4_range ocq ; } 
E#NCHAN 4 
s#cxgb4_lld_info struct cxgb4_lld_info { s#pci_dev * pdev ; s#l2t_data * l2t ; s#tid_info * tids ; s#net_device * * ports ; const s#cxgb4_virt_res * vr ; const unsigned short * mtus ; const unsigned short * rxq_ids ; unsigned short nrxq ; unsigned short ntxq ; unsigned char nchan : 4 ; unsigned char nports : 4 ; unsigned char wr_cred ; unsigned char adapter_type ; unsigned char fw_api_ver ; unsigned int fw_vers ; unsigned int iscsi_iolen ; unsigned short udb_density ; unsigned short ucq_density ; unsigned short filt_mode ; unsigned short tx_modq [ E#NCHAN ] ; void * gts_reg ; void * db_reg ; int dbfifo_int_thresh ; unsigned int sge_pktshift ; t#bool enable_fw_ofld_conn ; t#bool ulptx_memwrite_dsgl ; } 
s#pkt_gl struct pkt_gl { s#page_frag frags [ 16UL ] ; void * va ; unsigned int nfrags ; unsigned int tot_len ; } 
e#cxgb4_state enum cxgb4_state { CXGB4_STATE_UP , CXGB4_STATE_START_RECOVERY , CXGB4_STATE_DOWN , CXGB4_STATE_DETACH } 
e#cxgb4_control enum cxgb4_control { CXGB4_CONTROL_DB_FULL , CXGB4_CONTROL_DB_EMPTY , CXGB4_CONTROL_DB_DROP , } 
s#cxgb4_uld_info struct cxgb4_uld_info { const char * name ; void * ( * add ) ( const s#cxgb4_lld_info * ) ; int ( * rx_handler ) ( void * , const t#__be64 * , const s#pkt_gl * ) ; int ( * state_change ) ( void * , e#cxgb4_state ) ; int ( * control ) ( void * , e#cxgb4_control , ... ) ; } 
cxgb4_register_uld int cxgb4_register_uld ( e#cxgb4_uld , const s#cxgb4_uld_info * ) 
cxgb4_unregister_uld int cxgb4_unregister_uld ( e#cxgb4_uld ) 
cxgb4_create_server_filter int cxgb4_create_server_filter ( const s#net_device * , unsigned int , t#__be32 , t#__be16 , t#__be16 , unsigned int , unsigned char , unsigned char ) 
cxgb4_remove_server_filter int cxgb4_remove_server_filter ( const s#net_device * , unsigned int , unsigned int , t#bool ) 

/* drivers/net/ethernet/chelsio/cxgb4/l2t.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##prot_inuse
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s#l2t_entry struct l2t_entry { t#u16 state ; t#u16 idx ; t#u32 addr [ 4 ] ; int ifindex ; s#neighbour * neigh ; s#l2t_entry * first ; s#l2t_entry * next ; s#sk_buff * arpq_head ; s#sk_buff * arpq_tail ; t#spinlock_t lock ; t#atomic_t refcnt ; t#u16 hash ; t#u16 vlan ; t#u8 v6 ; t#u8 lport ; t#u8 dmac [ 6 ] ; } 
cxgb4_l2t_send int cxgb4_l2t_send ( s#net_device * , s#sk_buff * , s#l2t_entry * ) 
cxgb4_l2t_release void cxgb4_l2t_release ( s#l2t_entry * ) 
s##l2t_data
cxgb4_l2t_get s#l2t_entry * cxgb4_l2t_get ( s#l2t_data * , s#neighbour * , const s#net_device * , unsigned int ) 
cxgb4_select_ntuple t#u64 cxgb4_select_ntuple ( s#net_device * , const s#l2t_entry * ) 

/* drivers/net/ethernet/chelsio/cxgb4/sge.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##dn_route
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##module
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
cxgb4_ofld_send int cxgb4_ofld_send ( s#net_device * , s#sk_buff * ) 
cxgb4_pktgl_to_skb s#sk_buff * cxgb4_pktgl_to_skb ( const s#pkt_gl * , unsigned int , unsigned int ) 

/* drivers/net/ethernet/cisco/enic/enic_api.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
e#vnic_devcmd_cmd enum vnic_devcmd_cmd { CMD_NONE = ( ( ( 0U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 0U ) << ( 0 + 14 ) ) | ( ( 0 ) << 0 ) ) , CMD_MCPU_FW_INFO_OLD = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 1 ) << 0 ) ) , CMD_MCPU_FW_INFO = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 1 ) << 0 ) ) , CMD_DEV_SPEC = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 2 ) << 0 ) ) , CMD_STATS_CLEAR = ( ( ( 0U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 3 ) << 0 ) ) , CMD_STATS_DUMP = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 4 ) << 0 ) ) , CMD_PACKET_FILTER = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 7 ) << 0 ) ) , CMD_PACKET_FILTER_ALL = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 7 ) << 0 ) ) , CMD_HANG_NOTIFY = ( ( ( 0U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 8 ) << 0 ) ) , CMD_GET_MAC_ADDR = ( ( ( 2U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U | 2U ) << ( 0 + 14 ) ) | ( ( 9 ) << 0 ) ) , CMD_ADDR_ADD = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U | 2U ) << ( 0 + 14 ) ) | ( ( 12 ) << 0 ) ) , CMD_ADDR_DEL = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U | 2U ) << ( 0 + 14 ) ) | ( ( 13 ) << 0 ) ) , CMD_VLAN_ADD = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 14 ) << 0 ) ) , CMD_VLAN_DEL = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 15 ) << 0 ) ) , CMD_NIC_CFG = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 16 ) << 0 ) ) , CMD_RSS_KEY = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 17 ) << 0 ) ) , CMD_RSS_CPU = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 18 ) << 0 ) ) , CMD_SOFT_RESET = ( ( ( 0U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 19 ) << 0 ) ) , CMD_SOFT_RESET_STATUS = ( ( ( 2U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 20 ) << 0 ) ) , CMD_NOTIFY = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 21 ) << 0 ) ) , CMD_UNDI = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 22 ) << 0 ) ) , CMD_OPEN = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 23 ) << 0 ) ) , CMD_OPEN_STATUS = ( ( ( 2U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 24 ) << 0 ) ) , CMD_CLOSE = ( ( ( 0U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 25 ) << 0 ) ) , CMD_INIT_v1 = ( ( ( 2U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 26 ) << 0 ) ) , CMD_INIT_PROV_INFO = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 27 ) << 0 ) ) , CMD_ENABLE = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 28 ) << 0 ) ) , CMD_ENABLE_WAIT = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 28 ) << 0 ) ) , CMD_DISABLE = ( ( ( 0U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 29 ) << 0 ) ) , CMD_STATS_DUMP_ALL = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 30 ) << 0 ) ) , CMD_INIT_STATUS = ( ( ( 2U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 31 ) << 0 ) ) , CMD_INT13 = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 2U ) << ( 0 + 14 ) ) | ( ( 32 ) << 0 ) ) , CMD_LOGICAL_UPLINK = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 33 ) << 0 ) ) , CMD_DEINIT = ( ( ( 0U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 34 ) << 0 ) ) , CMD_INIT = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 35 ) << 0 ) ) , CMD_CAPABILITY = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 36 ) << 0 ) ) , CMD_PERBI = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 2U ) << ( 0 + 14 ) ) | ( ( 37 ) << 0 ) ) , CMD_IAR = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 38 ) << 0 ) ) , CMD_HANG_RESET = ( ( ( 0U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 39 ) << 0 ) ) , CMD_HANG_RESET_STATUS = ( ( ( 2U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 40 ) << 0 ) ) , CMD_IG_VLAN_REWRITE_MODE = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 41 ) << 0 ) ) , CMD_PROXY_BY_BDF = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 42 ) << 0 ) ) , CMD_PROXY_BY_INDEX = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 43 ) << 0 ) ) , CMD_CONFIG_INFO_GET = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 44 ) << 0 ) ) , CMD_INT13_ALL = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 45 ) << 0 ) ) , CMD_SET_DEFAULT_VLAN = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 46 ) << 0 ) ) , CMD_INIT_PROV_INFO2 = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 47 ) << 0 ) ) , CMD_ENABLE2 = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 48 ) << 0 ) ) , CMD_STATUS = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 49 ) << 0 ) ) , CMD_INTR_COAL_CONVERT = ( ( ( 2U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 50 ) << 0 ) ) , CMD_SET_MAC_ADDR = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 55 ) << 0 ) ) , CMD_PROV_INFO_UPDATE = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 56 ) << 0 ) ) , CMD_ADD_FILTER = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 58 ) << 0 ) ) , CMD_DEL_FILTER = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 59 ) << 0 ) ) , CMD_QP_ENABLE = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 60 ) << 0 ) ) , CMD_QP_DISABLE = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 61 ) << 0 ) ) , CMD_QP_STATS_DUMP = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 62 ) << 0 ) ) , CMD_QP_STATS_CLEAR = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 63 ) << 0 ) ) , } 
enic_api_devcmd_proxy_by_index int enic_api_devcmd_proxy_by_index ( s#net_device * , int , e#vnic_devcmd_cmd , t#u64 * , t#u64 * , int ) 

/* drivers/net/ethernet/cisco/enic/vnic_dev.o */
s##vnic_dev
e#vnic_res_type enum vnic_res_type { RES_TYPE_EOL , RES_TYPE_WQ , RES_TYPE_RQ , RES_TYPE_CQ , RES_TYPE_RSVD1 , RES_TYPE_NIC_CFG , RES_TYPE_RSVD2 , RES_TYPE_RSVD3 , RES_TYPE_RSVD4 , RES_TYPE_RSVD5 , RES_TYPE_INTR_CTRL , RES_TYPE_INTR_TABLE , RES_TYPE_INTR_PBA , RES_TYPE_INTR_PBA_LEGACY , RES_TYPE_RSVD6 , RES_TYPE_RSVD7 , RES_TYPE_DEVCMD , RES_TYPE_PASS_THRU_PAGE , RES_TYPE_MAX , } 
vnic_dev_get_res_count unsigned int vnic_dev_get_res_count ( s#vnic_dev * , e#vnic_res_type ) 
vnic_dev_get_res void * vnic_dev_get_res ( s#vnic_dev * , e#vnic_res_type , unsigned int ) 
vnic_dev_unregister void vnic_dev_unregister ( s#vnic_dev * ) 
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s#vnic_dev_bar struct vnic_dev_bar { void * vaddr ; t#dma_addr_t bus_addr ; unsigned long len ; } 
vnic_dev_register s#vnic_dev * vnic_dev_register ( s#vnic_dev * , void * , s#pci_dev * , s#vnic_dev_bar * , unsigned int ) 
vnic_dev_get_pdev s#pci_dev * vnic_dev_get_pdev ( s#vnic_dev * ) 

/* drivers/net/ethernet/emulex/benet/be_cmds.o */
be_roce_mcc_cmd int be_roce_mcc_cmd ( void * , void * , int , t#u16 * , t#u16 * ) 

/* drivers/net/ethernet/emulex/benet/be_roce.o */
s##ocrdma_dev
s##msi_chip
s##proc_dir_entry
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
e#be_interrupt_mode enum be_interrupt_mode { BE_INTERRUPT_MODE_MSIX = 0 , BE_INTERRUPT_MODE_INTX = 1 , BE_INTERRUPT_MODE_MSI = 2 , } 
s#be_dev_info struct be_dev_info { t#u8 * db ; t#u64 unmapped_db ; t#u32 db_page_size ; t#u32 db_total_size ; t#u64 dpp_unmapped_addr ; t#u32 dpp_unmapped_len ; s#pci_dev * pdev ; s#net_device * netdev ; t#u8 mac_addr [ 6 ] ; t#u32 dev_family ; e#be_interrupt_mode intr_mode ; struct { int num_vectors ; int start_vector ; t#u32 vector_list [ 32 ] ; } msix ; } 
s#ocrdma_driver struct ocrdma_driver { unsigned char name [ 32 ] ; s#ocrdma_dev * ( * add ) ( s#be_dev_info * ) ; void ( * remove ) ( s#ocrdma_dev * ) ; void ( * state_change_handler ) ( s#ocrdma_dev * , t#u32 ) ; } 
be_roce_register_driver int be_roce_register_driver ( s#ocrdma_driver * ) 
be_roce_unregister_driver void be_roce_unregister_driver ( s#ocrdma_driver * ) 

/* drivers/net/ethernet/mellanox/mlx4/alloc.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
E#MLX4_MAX_PORTS 2 
E#MLX4_NUM_QP_REGION ( 0 ) + 4 
e#mlx4_port_type enum mlx4_port_type { MLX4_PORT_TYPE_NONE = 0 , MLX4_PORT_TYPE_IB = 1 , MLX4_PORT_TYPE_ETH = 2 , MLX4_PORT_TYPE_AUTO = 3 } 
s#mlx4_caps struct mlx4_caps { t#u64 fw_ver ; t#u32 function ; int num_ports ; int vl_cap [ E#MLX4_MAX_PORTS + 1 ] ; int ib_mtu_cap [ E#MLX4_MAX_PORTS + 1 ] ; t#__be32 ib_port_def_cap [ E#MLX4_MAX_PORTS + 1 ] ; t#u64 def_mac [ E#MLX4_MAX_PORTS + 1 ] ; int eth_mtu_cap [ E#MLX4_MAX_PORTS + 1 ] ; int gid_table_len [ E#MLX4_MAX_PORTS + 1 ] ; int pkey_table_len [ E#MLX4_MAX_PORTS + 1 ] ; int trans_type [ E#MLX4_MAX_PORTS + 1 ] ; int vendor_oui [ E#MLX4_MAX_PORTS + 1 ] ; int wavelength [ E#MLX4_MAX_PORTS + 1 ] ; t#u64 trans_code [ E#MLX4_MAX_PORTS + 1 ] ; int local_ca_ack_delay ; int num_uars ; t#u32 uar_page_size ; int bf_reg_size ; int bf_regs_per_page ; int max_sq_sg ; int max_rq_sg ; int num_qps ; int max_wqes ; int max_sq_desc_sz ; int max_rq_desc_sz ; int max_qp_init_rdma ; int max_qp_dest_rdma ; t#u32 * qp0_proxy ; t#u32 * qp1_proxy ; t#u32 * qp0_tunnel ; t#u32 * qp1_tunnel ; int num_srqs ; int max_srq_wqes ; int max_srq_sge ; int reserved_srqs ; int num_cqs ; int max_cqes ; int reserved_cqs ; int num_eqs ; int reserved_eqs ; int num_comp_vectors ; int comp_pool ; int num_mpts ; int max_fmr_maps ; int num_mtts ; int fmr_reserved_mtts ; int reserved_mtts ; int reserved_mrws ; int reserved_uars ; int num_mgms ; int num_amgms ; int reserved_mcgs ; int num_qp_per_mgm ; int steering_mode ; int fs_log_max_ucast_qp_range_size ; int num_pds ; int reserved_pds ; int max_xrcds ; int reserved_xrcds ; int mtt_entry_sz ; t#u32 max_msg_sz ; t#u32 page_size_cap ; t#u64 flags ; t#u64 flags2 ; t#u32 bmme_flags ; t#u32 reserved_lkey ; t#u16 stat_rate_support ; t#u8 port_width_cap [ E#MLX4_MAX_PORTS + 1 ] ; int max_gso_sz ; int max_rss_tbl_sz ; int reserved_qps_cnt [ E#MLX4_NUM_QP_REGION ] ; int reserved_qps ; int reserved_qps_base [ E#MLX4_NUM_QP_REGION ] ; int log_num_macs ; int log_num_vlans ; e#mlx4_port_type port_type [ E#MLX4_MAX_PORTS + 1 ] ; t#u8 supported_type [ E#MLX4_MAX_PORTS + 1 ] ; t#u8 suggested_type [ E#MLX4_MAX_PORTS + 1 ] ; t#u8 default_sense [ E#MLX4_MAX_PORTS + 1 ] ; t#u32 port_mask [ E#MLX4_MAX_PORTS + 1 ] ; e#mlx4_port_type possible_type [ E#MLX4_MAX_PORTS + 1 ] ; t#u32 max_counters ; t#u8 port_ib_mtu [ E#MLX4_MAX_PORTS + 1 ] ; t#u16 sqp_demux ; t#u32 eqe_size ; t#u32 cqe_size ; t#u8 eqe_factor ; t#u32 userspace_caps ; t#u32 function_caps ; t#u16 hca_core_clock ; t#u64 phys_port_id [ E#MLX4_MAX_PORTS + 1 ] ; int tunnel_offload_mode ; } 
s#mlx4_phys_caps struct mlx4_phys_caps { t#u32 gid_phys_table_len [ E#MLX4_MAX_PORTS + 1 ] ; t#u32 pkey_phys_table_len [ E#MLX4_MAX_PORTS + 1 ] ; t#u32 num_phys_eqs ; t#u32 base_sqpn ; t#u32 base_proxy_sqpn ; t#u32 base_tunnel_sqpn ; } 
s#mlx4_quotas struct mlx4_quotas { int qp ; int cq ; int srq ; int mpt ; int mtt ; int counter ; int xrcd ; } 
s##radix_tree_node
E#MLX4_BOARD_ID_LEN 64 
s#mlx4_dev struct mlx4_dev { s#pci_dev * pdev ; unsigned long flags ; unsigned long num_slaves ; s#mlx4_caps caps ; s#mlx4_phys_caps phys_caps ; s#mlx4_quotas quotas ; s#radix_tree_root qp_table_tree ; t#u8 rev_id ; char board_id [ E#MLX4_BOARD_ID_LEN ] ; int num_vfs ; int numa_node ; int oper_log_mgm_entry_size ; t#u64 regid_promisc_array [ E#MLX4_MAX_PORTS + 1 ] ; t#u64 regid_allmulti_array [ E#MLX4_MAX_PORTS + 1 ] ; } 
s#mlx4_buf_list struct mlx4_buf_list { void * buf ; t#dma_addr_t map ; } 
s#mlx4_buf struct mlx4_buf { s#mlx4_buf_list direct ; s#mlx4_buf_list * page_list ; int nbufs ; int npages ; int page_shift ; } 
mlx4_buf_alloc int mlx4_buf_alloc ( s#mlx4_dev * , int , int , s#mlx4_buf * ) 
mlx4_buf_free void mlx4_buf_free ( s#mlx4_dev * , int , s#mlx4_buf * ) 
E#MLX4_DB_PER_PAGE ( 1UL << 16 ) / 4 
s#mlx4_db_pgdir struct mlx4_db_pgdir { s#list_head list ; unsigned long order0 [ ( ( ( E#MLX4_DB_PER_PAGE ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long order1 [ ( ( ( E#MLX4_DB_PER_PAGE / 2 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long * bits [ 2 ] ; t#__be32 * db_page ; t#dma_addr_t db_dma ; } 
s##mlx4_ib_user_db_page
s#mlx4_db struct mlx4_db { t#__be32 * db ; union { s#mlx4_db_pgdir * pgdir ; s#mlx4_ib_user_db_page * user_page ; } u ; t#dma_addr_t dma ; int index ; int order ; } 
mlx4_db_alloc int mlx4_db_alloc ( s#mlx4_dev * , s#mlx4_db * , int ) 
mlx4_db_free void mlx4_db_free ( s#mlx4_dev * , s#mlx4_db * ) 
s#mlx4_mtt struct mlx4_mtt { t#u32 offset ; int order ; int page_shift ; } 
s#mlx4_hwq_resources struct mlx4_hwq_resources { s#mlx4_db db ; s#mlx4_mtt mtt ; s#mlx4_buf buf ; } 
mlx4_alloc_hwq_res int mlx4_alloc_hwq_res ( s#mlx4_dev * , s#mlx4_hwq_resources * , int , int ) 
mlx4_free_hwq_res void mlx4_free_hwq_res ( s#mlx4_dev * , s#mlx4_hwq_resources * , int ) 

/* drivers/net/ethernet/mellanox/mlx4/cmd.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##radix_tree_node
__mlx4_cmd int __mlx4_cmd ( s#mlx4_dev * , t#u64 , t#u64 * , int , t#u32 , t#u8 , t#u16 , unsigned long , int ) 
s#mlx4_cmd_mailbox struct mlx4_cmd_mailbox { void * buf ; t#dma_addr_t dma ; } 
mlx4_alloc_cmd_mailbox s#mlx4_cmd_mailbox * mlx4_alloc_cmd_mailbox ( s#mlx4_dev * ) 
mlx4_free_cmd_mailbox void mlx4_free_cmd_mailbox ( s#mlx4_dev * , s#mlx4_cmd_mailbox * ) 
mlx4_set_vf_mac int mlx4_set_vf_mac ( s#mlx4_dev * , int , int , t#u64 ) 
mlx4_set_vf_vlan int mlx4_set_vf_vlan ( s#mlx4_dev * , int , int , t#u16 , t#u8 ) 
mlx4_set_vf_spoofchk int mlx4_set_vf_spoofchk ( s#mlx4_dev * , int , int , t#bool ) 
mlx4_get_vf_config int mlx4_get_vf_config ( s#mlx4_dev * , int , int , s#ifla_vf_info * ) 
mlx4_set_vf_link_state int mlx4_set_vf_link_state ( s#mlx4_dev * , int , int , int ) 

/* drivers/net/ethernet/mellanox/mlx4/cq.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##radix_tree_node
e#mlx4_event enum mlx4_event { MLX4_EVENT_TYPE_COMP = 0x00 , MLX4_EVENT_TYPE_PATH_MIG = 0x01 , MLX4_EVENT_TYPE_COMM_EST = 0x02 , MLX4_EVENT_TYPE_SQ_DRAINED = 0x03 , MLX4_EVENT_TYPE_SRQ_QP_LAST_WQE = 0x13 , MLX4_EVENT_TYPE_SRQ_LIMIT = 0x14 , MLX4_EVENT_TYPE_CQ_ERROR = 0x04 , MLX4_EVENT_TYPE_WQ_CATAS_ERROR = 0x05 , MLX4_EVENT_TYPE_EEC_CATAS_ERROR = 0x06 , MLX4_EVENT_TYPE_PATH_MIG_FAILED = 0x07 , MLX4_EVENT_TYPE_WQ_INVAL_REQ_ERROR = 0x10 , MLX4_EVENT_TYPE_WQ_ACCESS_ERROR = 0x11 , MLX4_EVENT_TYPE_SRQ_CATAS_ERROR = 0x12 , MLX4_EVENT_TYPE_LOCAL_CATAS_ERROR = 0x08 , MLX4_EVENT_TYPE_PORT_CHANGE = 0x09 , MLX4_EVENT_TYPE_EQ_OVERFLOW = 0x0f , MLX4_EVENT_TYPE_ECC_DETECT = 0x0e , MLX4_EVENT_TYPE_CMD = 0x0a , MLX4_EVENT_TYPE_VEP_UPDATE = 0x19 , MLX4_EVENT_TYPE_COMM_CHANNEL = 0x18 , MLX4_EVENT_TYPE_OP_REQUIRED = 0x1a , MLX4_EVENT_TYPE_FATAL_WARNING = 0x1b , MLX4_EVENT_TYPE_FLR_EVENT = 0x1c , MLX4_EVENT_TYPE_PORT_MNG_CHG_EVENT = 0x1d , MLX4_EVENT_TYPE_NONE = 0xff , } 
s#mlx4_uar struct mlx4_uar { unsigned long pfn ; int index ; s#list_head bf_list ; unsigned free_bf_bmap ; void * map ; void * bf_map ; } 
s#mlx4_cq struct mlx4_cq { void ( * comp ) ( s#mlx4_cq * ) ; void ( * event ) ( s#mlx4_cq * , e#mlx4_event ) ; s#mlx4_uar * uar ; t#u32 cons_index ; t#__be32 * set_ci_db ; t#__be32 * arm_db ; int arm_sn ; int cqn ; unsigned vector ; t#atomic_t refcount ; s#completion free ; } 
mlx4_cq_modify int mlx4_cq_modify ( s#mlx4_dev * , s#mlx4_cq * , t#u16 , t#u16 ) 
mlx4_cq_resize int mlx4_cq_resize ( s#mlx4_dev * , s#mlx4_cq * , int , s#mlx4_mtt * ) 
mlx4_cq_alloc int mlx4_cq_alloc ( s#mlx4_dev * , int , s#mlx4_mtt * , s#mlx4_uar * , t#u64 , s#mlx4_cq * , unsigned , int , int ) 
mlx4_cq_free void mlx4_cq_free ( s#mlx4_dev * , s#mlx4_cq * ) 

/* drivers/net/ethernet/mellanox/mlx4/eq.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##radix_tree_node
mlx4_gen_pkey_eqe int mlx4_gen_pkey_eqe ( s#mlx4_dev * , int , t#u8 ) 
mlx4_gen_guid_change_eqe int mlx4_gen_guid_change_eqe ( s#mlx4_dev * , int , t#u8 ) 
mlx4_gen_port_state_change_eqe int mlx4_gen_port_state_change_eqe ( s#mlx4_dev * , int , t#u8 , t#u8 ) 
e#slave_port_state enum slave_port_state { SLAVE_PORT_DOWN = 0 , SLAVE_PENDING_UP , SLAVE_PORT_UP , } 
mlx4_get_slave_port_state e#slave_port_state mlx4_get_slave_port_state ( s#mlx4_dev * , int , t#u8 ) 
e#slave_port_gen_event enum slave_port_gen_event { SLAVE_PORT_GEN_EVENT_DOWN = 0 , SLAVE_PORT_GEN_EVENT_UP , SLAVE_PORT_GEN_EVENT_NONE , } 
set_and_calc_slave_port_state int set_and_calc_slave_port_state ( s#mlx4_dev * , int , t#u8 , int , e#slave_port_gen_event * ) 
mlx4_gen_slaves_port_mgt_ev int mlx4_gen_slaves_port_mgt_ev ( s#mlx4_dev * , t#u8 , int ) 
mlx4_test_interrupts int mlx4_test_interrupts ( s#mlx4_dev * ) 
s#cpu_rmap struct cpu_rmap { s#kref refcount ; t#u16 size , used ; void * * obj ; struct { t#u16 index ; t#u16 dist ; } near [ 0 ] ; } 
mlx4_assign_eq int mlx4_assign_eq ( s#mlx4_dev * , char * , s#cpu_rmap * , int * ) 
mlx4_release_eq void mlx4_release_eq ( s#mlx4_dev * , int ) 

/* drivers/net/ethernet/mellanox/mlx4/fw.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
mlx4_get_slave_pkey_gid_tbl_len int mlx4_get_slave_pkey_gid_tbl_len ( s#mlx4_dev * , t#u8 , int * , int * ) 
mlx4_INIT_PORT int mlx4_INIT_PORT ( s#mlx4_dev * , int ) 
mlx4_CLOSE_PORT int mlx4_CLOSE_PORT ( s#mlx4_dev * , int ) 
mlx4_wol_read int mlx4_wol_read ( s#mlx4_dev * , t#u64 * , int ) 
mlx4_wol_write int mlx4_wol_write ( s#mlx4_dev * , t#u64 , int ) 

/* drivers/net/ethernet/mellanox/mlx4/intf.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##radix_tree_node
e#mlx4_dev_event enum mlx4_dev_event { MLX4_DEV_EVENT_CATASTROPHIC_ERROR , MLX4_DEV_EVENT_PORT_UP , MLX4_DEV_EVENT_PORT_DOWN , MLX4_DEV_EVENT_PORT_REINIT , MLX4_DEV_EVENT_PORT_MGMT_CHANGE , MLX4_DEV_EVENT_SLAVE_INIT , MLX4_DEV_EVENT_SLAVE_SHUTDOWN , } 
e#mlx4_protocol enum mlx4_protocol { MLX4_PROT_IB_IPV6 = 0 , MLX4_PROT_ETH , MLX4_PROT_IB_IPV4 , MLX4_PROT_FCOE } 
s#mlx4_interface struct mlx4_interface { void * ( * add ) ( s#mlx4_dev * ) ; void ( * remove ) ( s#mlx4_dev * , void * ) ; void ( * event ) ( s#mlx4_dev * , void * , e#mlx4_dev_event , unsigned long ) ; void * ( * get_dev ) ( s#mlx4_dev * , void * , t#u8 ) ; s#list_head list ; e#mlx4_protocol protocol ; } 
mlx4_register_interface int mlx4_register_interface ( s#mlx4_interface * ) 
mlx4_unregister_interface void mlx4_unregister_interface ( s#mlx4_interface * ) 
mlx4_get_protocol_dev void * mlx4_get_protocol_dev ( s#mlx4_dev * , e#mlx4_protocol , int ) 

/* drivers/net/ethernet/mellanox/mlx4/main.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
mlx4_get_parav_qkey int mlx4_get_parav_qkey ( s#mlx4_dev * , t#u32 , t#u32 * ) 
mlx4_sync_pkey_table void mlx4_sync_pkey_table ( s#mlx4_dev * , int , int , int , int ) 
mlx4_put_slave_node_guid void mlx4_put_slave_node_guid ( s#mlx4_dev * , int , t#__be64 ) 
mlx4_get_slave_node_guid t#__be64 mlx4_get_slave_node_guid ( s#mlx4_dev * , int ) 
mlx4_is_slave_active int mlx4_is_slave_active ( s#mlx4_dev * , int ) 
t#cycle_t typedef t#u64 cycle_t 
mlx4_read_clock t#cycle_t mlx4_read_clock ( s#mlx4_dev * ) 
mlx4_counter_alloc int mlx4_counter_alloc ( s#mlx4_dev * , t#u32 * ) 
mlx4_counter_free void mlx4_counter_free ( s#mlx4_dev * , t#u32 ) 

/* drivers/net/ethernet/mellanox/mlx4/mcg.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
e#mlx4_net_trans_promisc_mode enum mlx4_net_trans_promisc_mode { MLX4_FS_REGULAR = 1 , MLX4_FS_ALL_DEFAULT , MLX4_FS_MC_DEFAULT , MLX4_FS_UC_SNIFFER , MLX4_FS_MC_SNIFFER , MLX4_FS_MODE_NUM , } 
mlx4_map_sw_to_hw_steering_mode int mlx4_map_sw_to_hw_steering_mode ( s#mlx4_dev * , e#mlx4_net_trans_promisc_mode ) 
e#mlx4_net_trans_rule_id enum mlx4_net_trans_rule_id { MLX4_NET_TRANS_RULE_ID_ETH = 0 , MLX4_NET_TRANS_RULE_ID_IB , MLX4_NET_TRANS_RULE_ID_IPV6 , MLX4_NET_TRANS_RULE_ID_IPV4 , MLX4_NET_TRANS_RULE_ID_TCP , MLX4_NET_TRANS_RULE_ID_UDP , MLX4_NET_TRANS_RULE_ID_VXLAN , MLX4_NET_TRANS_RULE_NUM , } 
mlx4_map_sw_to_hw_steering_id int mlx4_map_sw_to_hw_steering_id ( s#mlx4_dev * , e#mlx4_net_trans_rule_id ) 
mlx4_hw_rule_sz int mlx4_hw_rule_sz ( s#mlx4_dev * , e#mlx4_net_trans_rule_id ) 
e#mlx4_net_trans_hw_rule_queue enum mlx4_net_trans_hw_rule_queue { MLX4_NET_TRANS_Q_FIFO , MLX4_NET_TRANS_Q_LIFO , } 
s#mlx4_net_trans_rule struct mlx4_net_trans_rule { s#list_head list ; e#mlx4_net_trans_hw_rule_queue queue_mode ; t#bool exclusive ; t#bool allow_loopback ; e#mlx4_net_trans_promisc_mode promisc_mode ; t#u8 port ; t#u16 priority ; t#u32 qpn ; } 
mlx4_flow_attach int mlx4_flow_attach ( s#mlx4_dev * , s#mlx4_net_trans_rule * , t#u64 * ) 
mlx4_flow_detach int mlx4_flow_detach ( s#mlx4_dev * , t#u64 ) 
mlx4_FLOW_STEERING_IB_UC_QP_RANGE int mlx4_FLOW_STEERING_IB_UC_QP_RANGE ( s#mlx4_dev * , t#u32 , t#u32 ) 
s#mlx4_qp struct mlx4_qp { void ( * event ) ( s#mlx4_qp * , e#mlx4_event ) ; int qpn ; t#atomic_t refcount ; s#completion free ; } 
mlx4_multicast_attach int mlx4_multicast_attach ( s#mlx4_dev * , s#mlx4_qp * , t#u8 [ 16 ] , t#u8 , int , e#mlx4_protocol , t#u64 * ) 
mlx4_multicast_detach int mlx4_multicast_detach ( s#mlx4_dev * , s#mlx4_qp * , t#u8 [ 16 ] , e#mlx4_protocol , t#u64 ) 
mlx4_flow_steer_promisc_add int mlx4_flow_steer_promisc_add ( s#mlx4_dev * , t#u8 , t#u32 , e#mlx4_net_trans_promisc_mode ) 
mlx4_flow_steer_promisc_remove int mlx4_flow_steer_promisc_remove ( s#mlx4_dev * , t#u8 , e#mlx4_net_trans_promisc_mode ) 
mlx4_unicast_attach int mlx4_unicast_attach ( s#mlx4_dev * , s#mlx4_qp * , t#u8 [ 16 ] , int , e#mlx4_protocol ) 
mlx4_unicast_detach int mlx4_unicast_detach ( s#mlx4_dev * , s#mlx4_qp * , t#u8 [ 16 ] , e#mlx4_protocol ) 
mlx4_multicast_promisc_add int mlx4_multicast_promisc_add ( s#mlx4_dev * , t#u32 , t#u8 ) 
mlx4_multicast_promisc_remove int mlx4_multicast_promisc_remove ( s#mlx4_dev * , t#u32 , t#u8 ) 
mlx4_unicast_promisc_add int mlx4_unicast_promisc_add ( s#mlx4_dev * , t#u32 , t#u8 ) 
mlx4_unicast_promisc_remove int mlx4_unicast_promisc_remove ( s#mlx4_dev * , t#u32 , t#u8 ) 

/* drivers/net/ethernet/mellanox/mlx4/mr.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##radix_tree_node
mlx4_mtt_init int mlx4_mtt_init ( s#mlx4_dev * , int , int , s#mlx4_mtt * ) 
mlx4_mtt_cleanup void mlx4_mtt_cleanup ( s#mlx4_dev * , s#mlx4_mtt * ) 
mlx4_mtt_addr t#u64 mlx4_mtt_addr ( s#mlx4_dev * , s#mlx4_mtt * ) 
s#mlx4_mr struct mlx4_mr { s#mlx4_mtt mtt ; t#u64 iova ; t#u64 size ; t#u32 key ; t#u32 pd ; t#u32 access ; int enabled ; } 
mlx4_mr_alloc int mlx4_mr_alloc ( s#mlx4_dev * , t#u32 , t#u64 , t#u64 , t#u32 , int , int , s#mlx4_mr * ) 
mlx4_mr_free int mlx4_mr_free ( s#mlx4_dev * , s#mlx4_mr * ) 
mlx4_mr_enable int mlx4_mr_enable ( s#mlx4_dev * , s#mlx4_mr * ) 
mlx4_write_mtt int mlx4_write_mtt ( s#mlx4_dev * , s#mlx4_mtt * , int , int , t#u64 * ) 
mlx4_buf_write_mtt int mlx4_buf_write_mtt ( s#mlx4_dev * , s#mlx4_mtt * , s#mlx4_buf * ) 
e#mlx4_mw_type enum mlx4_mw_type { MLX4_MW_TYPE_1 = 1 , MLX4_MW_TYPE_2 = 2 , } 
s#mlx4_mw struct mlx4_mw { t#u32 key ; t#u32 pd ; e#mlx4_mw_type type ; int enabled ; } 
mlx4_mw_alloc int mlx4_mw_alloc ( s#mlx4_dev * , t#u32 , e#mlx4_mw_type , s#mlx4_mw * ) 
mlx4_mw_enable int mlx4_mw_enable ( s#mlx4_dev * , s#mlx4_mw * ) 
mlx4_mw_free void mlx4_mw_free ( s#mlx4_dev * , s#mlx4_mw * ) 
s#mlx4_mpt_entry struct mlx4_mpt_entry { t#__be32 flags ; t#__be32 qpn ; t#__be32 key ; t#__be32 pd_flags ; t#__be64 start ; t#__be64 length ; t#__be32 lkey ; t#__be32 win_cnt ; t#u8 reserved1 [ 3 ] ; t#u8 mtt_rep ; t#__be64 mtt_addr ; t#__be32 mtt_sz ; t#__be32 entity_size ; t#__be32 first_byte_offset ; } 
s#mlx4_fmr struct mlx4_fmr { s#mlx4_mr mr ; s#mlx4_mpt_entry * mpt ; t#__be64 * mtts ; t#dma_addr_t dma_handle ; int max_pages ; int max_maps ; int maps ; t#u8 page_shift ; } 
mlx4_map_phys_fmr int mlx4_map_phys_fmr ( s#mlx4_dev * , s#mlx4_fmr * , t#u64 * , int , t#u64 , t#u32 * , t#u32 * ) 
mlx4_fmr_alloc int mlx4_fmr_alloc ( s#mlx4_dev * , t#u32 , t#u32 , int , int , t#u8 , s#mlx4_fmr * ) 
mlx4_fmr_enable int mlx4_fmr_enable ( s#mlx4_dev * , s#mlx4_fmr * ) 
mlx4_fmr_unmap void mlx4_fmr_unmap ( s#mlx4_dev * , s#mlx4_fmr * , t#u32 * , t#u32 * ) 
mlx4_fmr_free int mlx4_fmr_free ( s#mlx4_dev * , s#mlx4_fmr * ) 
mlx4_SYNC_TPT int mlx4_SYNC_TPT ( s#mlx4_dev * ) 

/* drivers/net/ethernet/mellanox/mlx4/pd.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##radix_tree_node
mlx4_pd_alloc int mlx4_pd_alloc ( s#mlx4_dev * , t#u32 * ) 
mlx4_pd_free void mlx4_pd_free ( s#mlx4_dev * , t#u32 ) 
mlx4_xrcd_alloc int mlx4_xrcd_alloc ( s#mlx4_dev * , t#u32 * ) 
mlx4_xrcd_free void mlx4_xrcd_free ( s#mlx4_dev * , t#u32 ) 
mlx4_uar_alloc int mlx4_uar_alloc ( s#mlx4_dev * , s#mlx4_uar * ) 
mlx4_uar_free void mlx4_uar_free ( s#mlx4_dev * , s#mlx4_uar * ) 
s#mlx4_bf struct mlx4_bf { unsigned long offset ; int buf_size ; s#mlx4_uar * uar ; void * reg ; } 
mlx4_bf_alloc int mlx4_bf_alloc ( s#mlx4_dev * , s#mlx4_bf * , int ) 
mlx4_bf_free void mlx4_bf_free ( s#mlx4_dev * , s#mlx4_bf * ) 

/* drivers/net/ethernet/mellanox/mlx4/port.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
mlx4_find_cached_mac int mlx4_find_cached_mac ( s#mlx4_dev * , t#u8 , t#u64 , int * ) 
__mlx4_register_mac int __mlx4_register_mac ( s#mlx4_dev * , t#u8 , t#u64 ) 
mlx4_register_mac int mlx4_register_mac ( s#mlx4_dev * , t#u8 , t#u64 ) 
mlx4_get_base_qpn int mlx4_get_base_qpn ( s#mlx4_dev * , t#u8 ) 
__mlx4_unregister_mac void __mlx4_unregister_mac ( s#mlx4_dev * , t#u8 , t#u64 ) 
mlx4_unregister_mac void mlx4_unregister_mac ( s#mlx4_dev * , t#u8 , t#u64 ) 
__mlx4_replace_mac int __mlx4_replace_mac ( s#mlx4_dev * , t#u8 , int , t#u64 ) 
mlx4_find_cached_vlan int mlx4_find_cached_vlan ( s#mlx4_dev * , t#u8 , t#u16 , int * ) 
mlx4_register_vlan int mlx4_register_vlan ( s#mlx4_dev * , t#u8 , t#u16 , int * ) 
mlx4_unregister_vlan void mlx4_unregister_vlan ( s#mlx4_dev * , t#u8 , t#u16 ) 
mlx4_SET_PORT_general int mlx4_SET_PORT_general ( s#mlx4_dev * , t#u8 , int , t#u8 , t#u8 , t#u8 , t#u8 ) 
mlx4_SET_PORT_qpn_calc int mlx4_SET_PORT_qpn_calc ( s#mlx4_dev * , t#u8 , t#u32 , t#u8 ) 
mlx4_SET_PORT_PRIO2TC int mlx4_SET_PORT_PRIO2TC ( s#mlx4_dev * , t#u8 , t#u8 * ) 
mlx4_SET_PORT_SCHEDULER int mlx4_SET_PORT_SCHEDULER ( s#mlx4_dev * , t#u8 , t#u8 * , t#u8 * , t#u16 * ) 
mlx4_SET_PORT_VXLAN int mlx4_SET_PORT_VXLAN ( s#mlx4_dev * , t#u8 , t#u8 ) 
mlx4_SET_MCAST_FLTR int mlx4_SET_MCAST_FLTR ( s#mlx4_dev * , t#u8 , t#u64 , t#u64 , t#u8 ) 
mlx4_set_stats_bitmap void mlx4_set_stats_bitmap ( s#mlx4_dev * , t#u64 * ) 

/* drivers/net/ethernet/mellanox/mlx4/qp.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##radix_tree_node
e#mlx4_qp_state enum mlx4_qp_state { MLX4_QP_STATE_RST = 0 , MLX4_QP_STATE_INIT = 1 , MLX4_QP_STATE_RTR = 2 , MLX4_QP_STATE_RTS = 3 , MLX4_QP_STATE_SQER = 4 , MLX4_QP_STATE_SQD = 5 , MLX4_QP_STATE_ERR = 6 , MLX4_QP_STATE_SQ_DRAINING = 7 , MLX4_QP_NUM_STATE } 
s#mlx4_qp_path struct mlx4_qp_path { t#u8 fl ; t#u8 vlan_control ; t#u8 disable_pkey_check ; t#u8 pkey_index ; t#u8 counter_index ; t#u8 grh_mylmc ; t#__be16 rlid ; t#u8 ackto ; t#u8 mgid_index ; t#u8 static_rate ; t#u8 hop_limit ; t#__be32 tclass_flowlabel ; t#u8 rgid [ 16 ] ; t#u8 sched_queue ; t#u8 vlan_index ; t#u8 feup ; t#u8 fvl_rx ; t#u8 reserved4 [ 2 ] ; t#u8 dmac [ 6 ] ; } 
s#mlx4_qp_context struct mlx4_qp_context { t#__be32 flags ; t#__be32 pd ; t#u8 mtu_msgmax ; t#u8 rq_size_stride ; t#u8 sq_size_stride ; t#u8 rlkey ; t#__be32 usr_page ; t#__be32 local_qpn ; t#__be32 remote_qpn ; s#mlx4_qp_path pri_path ; s#mlx4_qp_path alt_path ; t#__be32 params1 ; t#u32 reserved1 ; t#__be32 next_send_psn ; t#__be32 cqn_send ; t#u32 reserved2 [ 2 ] ; t#__be32 last_acked_psn ; t#__be32 ssn ; t#__be32 params2 ; t#__be32 rnr_nextrecvpsn ; t#__be32 xrcd ; t#__be32 cqn_recv ; t#__be64 db_rec_addr ; t#__be32 qkey ; t#__be32 srqn ; t#__be32 msn ; t#__be16 rq_wqe_counter ; t#__be16 sq_wqe_counter ; t#u32 reserved3 [ 2 ] ; t#__be32 param3 ; t#__be32 nummmcpeers_basemkey ; t#u8 log_page_size ; t#u8 reserved4 [ 2 ] ; t#u8 mtt_base_addr_h ; t#__be32 mtt_base_addr_l ; t#u32 reserved5 [ 10 ] ; } 
e#mlx4_qp_optpar enum mlx4_qp_optpar { MLX4_QP_OPTPAR_ALT_ADDR_PATH = 1 << 0 , MLX4_QP_OPTPAR_RRE = 1 << 1 , MLX4_QP_OPTPAR_RAE = 1 << 2 , MLX4_QP_OPTPAR_RWE = 1 << 3 , MLX4_QP_OPTPAR_PKEY_INDEX = 1 << 4 , MLX4_QP_OPTPAR_Q_KEY = 1 << 5 , MLX4_QP_OPTPAR_RNR_TIMEOUT = 1 << 6 , MLX4_QP_OPTPAR_PRIMARY_ADDR_PATH = 1 << 7 , MLX4_QP_OPTPAR_SRA_MAX = 1 << 8 , MLX4_QP_OPTPAR_RRA_MAX = 1 << 9 , MLX4_QP_OPTPAR_PM_STATE = 1 << 10 , MLX4_QP_OPTPAR_RETRY_COUNT = 1 << 12 , MLX4_QP_OPTPAR_RNR_RETRY = 1 << 13 , MLX4_QP_OPTPAR_ACK_TIMEOUT = 1 << 14 , MLX4_QP_OPTPAR_SCHED_QUEUE = 1 << 16 , MLX4_QP_OPTPAR_COUNTER_INDEX = 1 << 20 } 
mlx4_qp_modify int mlx4_qp_modify ( s#mlx4_dev * , s#mlx4_mtt * , e#mlx4_qp_state , e#mlx4_qp_state , s#mlx4_qp_context * , e#mlx4_qp_optpar , int , s#mlx4_qp * ) 
mlx4_qp_reserve_range int mlx4_qp_reserve_range ( s#mlx4_dev * , int , int , int * ) 
mlx4_qp_release_range void mlx4_qp_release_range ( s#mlx4_dev * , int , int ) 
mlx4_qp_alloc int mlx4_qp_alloc ( s#mlx4_dev * , int , s#mlx4_qp * ) 
mlx4_qp_remove void mlx4_qp_remove ( s#mlx4_dev * , s#mlx4_qp * ) 
mlx4_qp_free void mlx4_qp_free ( s#mlx4_dev * , s#mlx4_qp * ) 
mlx4_qp_query int mlx4_qp_query ( s#mlx4_dev * , s#mlx4_qp * , s#mlx4_qp_context * ) 
mlx4_qp_to_ready int mlx4_qp_to_ready ( s#mlx4_dev * , s#mlx4_mtt * , s#mlx4_qp_context * , s#mlx4_qp * , e#mlx4_qp_state * ) 

/* drivers/net/ethernet/mellanox/mlx4/srq.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##radix_tree_node
s#mlx4_srq struct mlx4_srq { void ( * event ) ( s#mlx4_srq * , e#mlx4_event ) ; int srqn ; int max ; int max_gs ; int wqe_shift ; t#atomic_t refcount ; s#completion free ; } 
mlx4_srq_alloc int mlx4_srq_alloc ( s#mlx4_dev * , t#u32 , t#u32 , t#u16 , s#mlx4_mtt * , t#u64 , s#mlx4_srq * ) 
mlx4_srq_free void mlx4_srq_free ( s#mlx4_dev * , s#mlx4_srq * ) 
mlx4_srq_arm int mlx4_srq_arm ( s#mlx4_dev * , s#mlx4_srq * , int ) 
mlx4_srq_query int mlx4_srq_query ( s#mlx4_dev * , s#mlx4_srq * , int * ) 
mlx4_srq_lookup s#mlx4_srq * mlx4_srq_lookup ( s#mlx4_dev * , t#u32 ) 

/* drivers/net/ethernet/mellanox/mlx5/core/alloc.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
E#MLX5_BOARD_ID_LEN 64 
E#MLX5_CMD_WQ_MAX_NAME 32 
s##workqueue_struct
s#cache_ent struct cache_ent { t#spinlock_t lock ; s#list_head head ; } 
s#mlx5_cmd_first struct mlx5_cmd_first { t#__be32 data [ 4 ] ; } 
s#mlx5_cmd_mailbox struct mlx5_cmd_mailbox { void * buf ; t#dma_addr_t dma ; s#mlx5_cmd_mailbox * next ; } 
s#mlx5_cmd_msg struct mlx5_cmd_msg { s#list_head list ; s#cache_ent * cache ; t#u32 len ; s#mlx5_cmd_first first ; s#mlx5_cmd_mailbox * next ; } 
t#mlx5_cmd_cbk_t typedef void ( * mlx5_cmd_cbk_t ) ( int , void * ) 
s#mlx5_cmd_layout struct mlx5_cmd_layout { t#u8 type ; t#u8 rsvd0 [ 3 ] ; t#__be32 inlen ; t#__be64 in_ptr ; t#__be32 in [ 4 ] ; t#__be32 out [ 4 ] ; t#__be64 out_ptr ; t#__be32 outlen ; t#u8 token ; t#u8 sig ; t#u8 rsvd1 ; t#u8 status_own ; } 
s#mlx5_cmd_work_ent struct mlx5_cmd_work_ent { s#mlx5_cmd_msg * in ; s#mlx5_cmd_msg * out ; void * uout ; int uout_size ; t#mlx5_cmd_cbk_t callback ; void * context ; int idx ; s#completion done ; s#mlx5_cmd * cmd ; s#work_struct work ; s#mlx5_cmd_layout * lay ; int ret ; int page_queue ; t#u8 status ; t#u8 token ; s#timespec ts1 ; s#timespec ts2 ; t#u16 op ; } 
E#MLX5_MAX_COMMANDS 32 
s##dma_pool
s##dentry
s#mlx5_cmd_debug struct mlx5_cmd_debug { s#dentry * dbg_root ; s#dentry * dbg_in ; s#dentry * dbg_out ; s#dentry * dbg_outlen ; s#dentry * dbg_status ; s#dentry * dbg_run ; void * in_msg ; void * out_msg ; t#u8 status ; t#u16 inlen ; t#u16 outlen ; } 
s#cmd_msg_cache struct cmd_msg_cache { s#cache_ent large ; s#cache_ent med ; } 
s#mlx5_cmd_stats struct mlx5_cmd_stats { t#u64 sum ; t#u64 n ; s#dentry * root ; s#dentry * avg ; s#dentry * count ; t#spinlock_t lock ; } 
E#MLX5_CMD_OP_MAX 0x810 
s#mlx5_cmd struct mlx5_cmd { void * cmd_buf ; t#dma_addr_t dma ; t#u16 cmdif_rev ; t#u8 log_sz ; t#u8 log_stride ; int max_reg_cmds ; int events ; t#u32 * vector ; t#spinlock_t alloc_lock ; t#spinlock_t token_lock ; t#u8 token ; unsigned long bitmask ; char wq_name [ E#MLX5_CMD_WQ_MAX_NAME ] ; s#workqueue_struct * wq ; s#semaphore sem ; s#semaphore pages_sem ; int mode ; s#mlx5_cmd_work_ent * ent_arr [ E#MLX5_MAX_COMMANDS ] ; s#dma_pool * pool ; s#mlx5_cmd_debug dbg ; s#cmd_msg_cache cache ; int checksum_disabled ; s#mlx5_cmd_stats stats [ E#MLX5_CMD_OP_MAX ] ; } 
s#mlx5_port_caps struct mlx5_port_caps { int gid_table_len ; int pkey_table_len ; } 
E#MLX5_MAX_PORTS 2 
s#mlx5_caps struct mlx5_caps { t#u8 log_max_eq ; t#u8 log_max_cq ; t#u8 log_max_qp ; t#u8 log_max_mkey ; t#u8 log_max_pd ; t#u8 log_max_srq ; t#u32 max_cqes ; int max_wqes ; int max_sq_desc_sz ; int max_rq_desc_sz ; t#u64 flags ; t#u16 stat_rate_support ; int log_max_msg ; int num_ports ; int max_ra_res_qp ; int max_ra_req_qp ; int max_srq_wqes ; int bf_reg_size ; int bf_regs_per_page ; s#mlx5_port_caps port [ E#MLX5_MAX_PORTS ] ; t#u8 ext_port_cap [ E#MLX5_MAX_PORTS ] ; int max_vf ; t#u32 reserved_lkey ; t#u8 local_ca_ack_delay ; t#u8 log_max_mcg ; t#u32 max_qp_mcg ; int min_page_sz ; } 
s#health_buffer struct health_buffer { t#__be32 assert_var [ 5 ] ; t#__be32 rsvd0 [ 3 ] ; t#__be32 assert_exit_ptr ; t#__be32 assert_callra ; t#__be32 rsvd1 [ 2 ] ; t#__be32 fw_ver ; t#__be32 hw_id ; t#__be32 rsvd2 ; t#u8 irisc_index ; t#u8 synd ; t#__be16 ext_sync ; } 
s#mlx5_init_seg struct mlx5_init_seg { t#__be32 fw_rev ; t#__be32 cmdif_rev_fw_sub ; t#__be32 rsvd0 [ 2 ] ; t#__be32 cmdq_addr_h ; t#__be32 cmdq_addr_l_sz ; t#__be32 cmd_dbell ; t#__be32 rsvd1 [ 121 ] ; s#health_buffer health ; t#__be32 rsvd2 [ 884 ] ; t#__be32 health_counter ; t#__be32 rsvd3 [ 1019 ] ; t#__be64 ieee1588_clk ; t#__be32 ieee1588_clk_type ; t#__be32 clr_intx ; } 
e#mlx5_dev_event enum mlx5_dev_event { MLX5_DEV_EVENT_SYS_ERROR , MLX5_DEV_EVENT_PORT_UP , MLX5_DEV_EVENT_PORT_DOWN , MLX5_DEV_EVENT_PORT_INITIALIZED , MLX5_DEV_EVENT_LID_CHANGE , MLX5_DEV_EVENT_PKEY_CHANGE , MLX5_DEV_EVENT_GUID_CHANGE , MLX5_DEV_EVENT_CLIENT_REREG , } 
E#MLX5_MAX_NAME_LEN 16 
s#mlx5_buf_list struct mlx5_buf_list { void * buf ; t#dma_addr_t map ; } 
s#mlx5_buf struct mlx5_buf { s#mlx5_buf_list direct ; s#mlx5_buf_list * page_list ; int nbufs ; int npages ; int page_shift ; int size ; } 
E#MLX5_MAX_EQ_NAME 32 
e#dbg_rsc_type enum dbg_rsc_type { MLX5_DBG_RSC_QP , MLX5_DBG_RSC_EQ , MLX5_DBG_RSC_CQ , } 
s#mlx5_field_desc struct mlx5_field_desc { s#dentry * dent ; int i ; } 
s#mlx5_rsc_debug struct mlx5_rsc_debug { s#mlx5_core_dev * dev ; void * object ; e#dbg_rsc_type type ; s#dentry * root ; s#mlx5_field_desc fields [ 0 ] ; } 
s#mlx5_eq struct mlx5_eq { s#mlx5_core_dev * dev ; t#__be32 * doorbell ; t#u32 cons_index ; s#mlx5_buf buf ; int size ; t#u8 irqn ; t#u8 eqn ; int nent ; t#u64 mask ; char name [ E#MLX5_MAX_EQ_NAME ] ; s#list_head list ; int index ; s#mlx5_rsc_debug * dbg ; } 
s#msix_entry struct msix_entry { t#u32 vector ; t#u16 entry ; } 
s#mlx5_eq_table struct mlx5_eq_table { void * update_ci ; void * update_arm_ci ; s#list_head * comp_eq_head ; s#mlx5_eq pages_eq ; s#mlx5_eq async_eq ; s#mlx5_eq cmd_eq ; s#msix_entry * msix_arr ; int num_comp_vectors ; t#spinlock_t lock ; } 
s#mlx5_uar struct mlx5_uar { t#u32 index ; s#list_head bf_list ; unsigned free_bf_bmap ; void * wc_map ; void * map ; } 
s#mlx5_bf struct mlx5_bf { void * reg ; void * regreg ; int buf_size ; s#mlx5_uar * uar ; unsigned long offset ; int need_lock ; t#spinlock_t lock ; t#spinlock_t lock32 ; int uuarn ; } 
s#mlx5_uuar_info struct mlx5_uuar_info { s#mlx5_uar * uars ; int num_uars ; int num_low_latency_uuars ; unsigned long * bitmap ; unsigned int * count ; s#mlx5_bf * bfs ; s#mutex lock ; t#u32 ver ; } 
s#mlx5_core_health struct mlx5_core_health { s#health_buffer * health ; t#__be32 * health_counter ; s#timer_list timer ; s#list_head list ; t#u32 prev ; int miss_counter ; } 
s##radix_tree_node
s#mlx5_srq_table struct mlx5_srq_table { t#spinlock_t lock ; s#radix_tree_root tree ; } 
s#mlx5_qp_table struct mlx5_qp_table { t#spinlock_t lock ; s#radix_tree_root tree ; } 
s#mlx5_cq_table struct mlx5_cq_table { t#spinlock_t lock ; s#radix_tree_root tree ; } 
s#mlx5_mr_table struct mlx5_mr_table { t#rwlock_t lock ; s#radix_tree_root tree ; } 
s#mlx5_priv struct mlx5_priv { char name [ E#MLX5_MAX_NAME_LEN ] ; s#mlx5_eq_table eq_table ; s#mlx5_uuar_info uuari ; ; s#workqueue_struct * pg_wq ; s#rb_root page_root ; int fw_pages ; int reg_pages ; s#list_head free_list ; s#mlx5_core_health health ; s#mlx5_srq_table srq_table ; s#mlx5_qp_table qp_table ; s#dentry * qp_debugfs ; s#dentry * eq_debugfs ; s#dentry * cq_debugfs ; s#dentry * cmdif_debugfs ; s#mlx5_cq_table cq_table ; s#mlx5_mr_table mr_table ; s#mutex pgdir_mutex ; s#list_head pgdir_list ; s#dentry * dbg_root ; t#spinlock_t mkey_lock ; t#u8 mkey_key ; } 
E#MAX_MR_CACHE_ENTRIES 16 
s#mlx5_profile struct mlx5_profile { t#u64 mask ; t#u32 log_max_qp ; struct { int size ; int limit ; } mr_cache [ E#MAX_MR_CACHE_ENTRIES ] ; } 
s#mlx5_core_dev struct mlx5_core_dev { s#pci_dev * pdev ; t#u8 rev_id ; char board_id [ E#MLX5_BOARD_ID_LEN ] ; s#mlx5_cmd cmd ; s#mlx5_caps caps ; t#phys_addr_t iseg_base ; s#mlx5_init_seg * iseg ; void ( * event ) ( s#mlx5_core_dev * , e#mlx5_dev_event , void * ) ; s#mlx5_priv priv ; s#mlx5_profile * profile ; t#atomic_t num_qps ; } 
mlx5_buf_alloc int mlx5_buf_alloc ( s#mlx5_core_dev * , int , int , s#mlx5_buf * ) 
mlx5_buf_free void mlx5_buf_free ( s#mlx5_core_dev * , s#mlx5_buf * ) 
E#MLX5_DB_PER_PAGE ( 1UL << 16 ) / ( 1 << 7 ) 
s#mlx5_db_pgdir struct mlx5_db_pgdir { s#list_head list ; unsigned long bitmap [ ( ( ( E#MLX5_DB_PER_PAGE ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; t#__be32 * db_page ; t#dma_addr_t db_dma ; } 
s##mlx5_ib_user_db_page
s#mlx5_db struct mlx5_db { t#__be32 * db ; union { s#mlx5_db_pgdir * pgdir ; s#mlx5_ib_user_db_page * user_page ; } u ; t#dma_addr_t dma ; int index ; } 
mlx5_db_alloc int mlx5_db_alloc ( s#mlx5_core_dev * , s#mlx5_db * ) 
mlx5_db_free void mlx5_db_free ( s#mlx5_core_dev * , s#mlx5_db * ) 
mlx5_fill_page_array void mlx5_fill_page_array ( s#mlx5_buf * , t#__be64 * ) 

/* drivers/net/ethernet/mellanox/mlx5/core/cmd.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##dma_pool
mlx5_cmd_comp_handler void mlx5_cmd_comp_handler ( s#mlx5_core_dev * , unsigned long ) 
mlx5_cmd_exec int mlx5_cmd_exec ( s#mlx5_core_dev * , void * , int , void * , int ) 
mlx5_cmd_exec_cb int mlx5_cmd_exec_cb ( s#mlx5_core_dev * , void * , int , void * , int , t#mlx5_cmd_cbk_t , void * ) 
mlx5_cmd_init int mlx5_cmd_init ( s#mlx5_core_dev * ) 
mlx5_cmd_cleanup void mlx5_cmd_cleanup ( s#mlx5_core_dev * ) 

/* drivers/net/ethernet/mellanox/mlx5/core/cq.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##workqueue_struct
s##dma_pool
s##dentry
s##radix_tree_node
e#mlx5_event enum mlx5_event { MLX5_EVENT_TYPE_COMP = 0x0 , MLX5_EVENT_TYPE_PATH_MIG = 0x01 , MLX5_EVENT_TYPE_COMM_EST = 0x02 , MLX5_EVENT_TYPE_SQ_DRAINED = 0x03 , MLX5_EVENT_TYPE_SRQ_LAST_WQE = 0x13 , MLX5_EVENT_TYPE_SRQ_RQ_LIMIT = 0x14 , MLX5_EVENT_TYPE_CQ_ERROR = 0x04 , MLX5_EVENT_TYPE_WQ_CATAS_ERROR = 0x05 , MLX5_EVENT_TYPE_PATH_MIG_FAILED = 0x07 , MLX5_EVENT_TYPE_WQ_INVAL_REQ_ERROR = 0x10 , MLX5_EVENT_TYPE_WQ_ACCESS_ERROR = 0x11 , MLX5_EVENT_TYPE_SRQ_CATAS_ERROR = 0x12 , MLX5_EVENT_TYPE_INTERNAL_ERROR = 0x08 , MLX5_EVENT_TYPE_PORT_CHANGE = 0x09 , MLX5_EVENT_TYPE_GPIO_EVENT = 0x15 , MLX5_EVENT_TYPE_REMOTE_CONFIG = 0x19 , MLX5_EVENT_TYPE_DB_BF_CONGESTION = 0x1a , MLX5_EVENT_TYPE_STALL_EVENT = 0x1b , MLX5_EVENT_TYPE_CMD = 0x0a , MLX5_EVENT_TYPE_PAGE_REQUEST = 0xb , } 
s#mlx5_core_cq struct mlx5_core_cq { t#u32 cqn ; int cqe_sz ; t#__be32 * set_ci_db ; t#__be32 * arm_db ; t#atomic_t refcount ; s#completion free ; unsigned vector ; int irqn ; void ( * comp ) ( s#mlx5_core_cq * ) ; void ( * event ) ( s#mlx5_core_cq * , e#mlx5_event ) ; s#mlx5_uar * uar ; t#u32 cons_index ; unsigned arm_sn ; s#mlx5_rsc_debug * dbg ; int pid ; } 
s#mlx5_inbox_hdr struct mlx5_inbox_hdr { t#__be16 opcode ; t#u8 rsvd [ 4 ] ; t#__be16 opmod ; } 
s#mlx5_cq_context struct mlx5_cq_context { t#u8 status ; t#u8 cqe_sz_flags ; t#u8 st ; t#u8 rsvd3 ; t#u8 rsvd4 [ 6 ] ; t#__be16 page_offset ; t#__be32 log_sz_usr_page ; t#__be16 cq_period ; t#__be16 cq_max_count ; t#__be16 rsvd20 ; t#__be16 c_eqn ; t#u8 log_pg_sz ; t#u8 rsvd25 [ 7 ] ; t#__be32 last_notified_index ; t#__be32 solicit_producer_index ; t#__be32 consumer_counter ; t#__be32 producer_counter ; t#u8 rsvd48 [ 8 ] ; t#__be64 db_record_addr ; } 
s#mlx5_create_cq_mbox_in struct mlx5_create_cq_mbox_in { s#mlx5_inbox_hdr hdr ; t#__be32 input_cqn ; t#u8 rsvdx [ 4 ] ; s#mlx5_cq_context ctx ; t#u8 rsvd6 [ 192 ] ; t#__be64 pas [ 0 ] ; } 
mlx5_core_create_cq int mlx5_core_create_cq ( s#mlx5_core_dev * , s#mlx5_core_cq * , s#mlx5_create_cq_mbox_in * , int ) 
mlx5_core_destroy_cq int mlx5_core_destroy_cq ( s#mlx5_core_dev * , s#mlx5_core_cq * ) 
s#mlx5_outbox_hdr struct mlx5_outbox_hdr { t#u8 status ; t#u8 rsvd [ 3 ] ; t#__be32 syndrome ; } 
s#mlx5_query_cq_mbox_out struct mlx5_query_cq_mbox_out { s#mlx5_outbox_hdr hdr ; t#u8 rsvd0 [ 8 ] ; s#mlx5_cq_context ctx ; t#u8 rsvd6 [ 16 ] ; t#__be64 pas [ 0 ] ; } 
mlx5_core_query_cq int mlx5_core_query_cq ( s#mlx5_core_dev * , s#mlx5_core_cq * , s#mlx5_query_cq_mbox_out * ) 
s#mlx5_modify_cq_mbox_in struct mlx5_modify_cq_mbox_in { s#mlx5_inbox_hdr hdr ; t#__be32 cqn ; t#__be32 field_select ; s#mlx5_cq_context ctx ; t#u8 rsvd [ 192 ] ; t#__be64 pas [ 0 ] ; } 
mlx5_core_modify_cq int mlx5_core_modify_cq ( s#mlx5_core_dev * , s#mlx5_core_cq * , s#mlx5_modify_cq_mbox_in * , int ) 

/* drivers/net/ethernet/mellanox/mlx5/core/debugfs.o */
s##posix_acl
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cdev
mlx5_debugfs_root extern s#dentry * mlx5_debugfs_root 

/* drivers/net/ethernet/mellanox/mlx5/core/eq.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##workqueue_struct
s##dma_pool
s##dentry
s##radix_tree_node
mlx5_create_map_eq int mlx5_create_map_eq ( s#mlx5_core_dev * , s#mlx5_eq * , t#u8 , int , t#u64 , const char * , s#mlx5_uar * ) 
mlx5_destroy_unmap_eq int mlx5_destroy_unmap_eq ( s#mlx5_core_dev * , s#mlx5_eq * ) 
s#mlx5_eq_context struct mlx5_eq_context { t#u8 status ; t#u8 ec_oi ; t#u8 st ; t#u8 rsvd2 [ 7 ] ; t#__be16 page_pffset ; t#__be32 log_sz_usr_page ; t#u8 rsvd3 [ 7 ] ; t#u8 intr ; t#u8 log_page_size ; t#u8 rsvd4 [ 15 ] ; t#__be32 consumer_counter ; t#__be32 produser_counter ; t#u8 rsvd5 [ 16 ] ; } 
s#mlx5_query_eq_mbox_out struct mlx5_query_eq_mbox_out { s#mlx5_outbox_hdr hdr ; t#u8 rsvd [ 8 ] ; s#mlx5_eq_context ctx ; } 
mlx5_core_eq_query int mlx5_core_eq_query ( s#mlx5_core_dev * , s#mlx5_eq * , s#mlx5_query_eq_mbox_out * , int ) 

/* drivers/net/ethernet/mellanox/mlx5/core/mad.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##workqueue_struct
s##dma_pool
s##dentry
s##radix_tree_node
mlx5_core_mad_ifc int mlx5_core_mad_ifc ( s#mlx5_core_dev * , void * , void * , t#u16 , int ) 

/* drivers/net/ethernet/mellanox/mlx5/core/main.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##dma_pool
mlx5_dev_init int mlx5_dev_init ( s#mlx5_core_dev * , s#pci_dev * ) 
mlx5_dev_cleanup void mlx5_dev_cleanup ( s#mlx5_core_dev * ) 

/* drivers/net/ethernet/mellanox/mlx5/core/mcg.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##workqueue_struct
s##dma_pool
s##dentry
s##radix_tree_node
mlx5_core_attach_mcg int mlx5_core_attach_mcg ( s#mlx5_core_dev * , u#ib_gid * , t#u32 ) 
mlx5_core_detach_mcg int mlx5_core_detach_mcg ( s#mlx5_core_dev * , u#ib_gid * , t#u32 ) 

/* drivers/net/ethernet/mellanox/mlx5/core/mr.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##workqueue_struct
s##dma_pool
s##dentry
s##radix_tree_node
s#mlx5_core_mr struct mlx5_core_mr { t#u64 iova ; t#u64 size ; t#u32 key ; t#u32 pd ; t#u32 access ; } 
s#mlx5_mkey_seg struct mlx5_mkey_seg { t#u8 status ; t#u8 pcie_control ; t#u8 flags ; t#u8 version ; t#__be32 qpn_mkey7_0 ; t#u8 rsvd1 [ 4 ] ; t#__be32 flags_pd ; t#__be64 start_addr ; t#__be64 len ; t#__be32 bsfs_octo_size ; t#u8 rsvd2 [ 16 ] ; t#__be32 xlt_oct_size ; t#u8 rsvd3 [ 3 ] ; t#u8 log2_page_size ; t#u8 rsvd4 [ 4 ] ; } 
s#mlx5_create_mkey_mbox_in struct mlx5_create_mkey_mbox_in { s#mlx5_inbox_hdr hdr ; t#__be32 input_mkey_index ; t#u8 rsvd0 [ 4 ] ; s#mlx5_mkey_seg seg ; t#u8 rsvd1 [ 16 ] ; t#__be32 xlat_oct_act_size ; t#__be32 rsvd2 ; t#u8 rsvd3 [ 168 ] ; t#__be64 pas [ 0 ] ; } 
s#mlx5_create_mkey_mbox_out struct mlx5_create_mkey_mbox_out { s#mlx5_outbox_hdr hdr ; t#__be32 mkey ; t#u8 rsvd [ 4 ] ; } 
mlx5_core_create_mkey int mlx5_core_create_mkey ( s#mlx5_core_dev * , s#mlx5_core_mr * , s#mlx5_create_mkey_mbox_in * , int , t#mlx5_cmd_cbk_t , void * , s#mlx5_create_mkey_mbox_out * ) 
mlx5_core_destroy_mkey int mlx5_core_destroy_mkey ( s#mlx5_core_dev * , s#mlx5_core_mr * ) 
s#mlx5_query_mkey_mbox_out struct mlx5_query_mkey_mbox_out { s#mlx5_outbox_hdr hdr ; t#__be64 pas [ 0 ] ; } 
mlx5_core_query_mkey int mlx5_core_query_mkey ( s#mlx5_core_dev * , s#mlx5_core_mr * , s#mlx5_query_mkey_mbox_out * , int ) 
mlx5_core_dump_fill_mkey int mlx5_core_dump_fill_mkey ( s#mlx5_core_dev * , s#mlx5_core_mr * , t#u32 * ) 
mlx5_core_create_psv int mlx5_core_create_psv ( s#mlx5_core_dev * , t#u32 , int , t#u32 * ) 
mlx5_core_destroy_psv int mlx5_core_destroy_psv ( s#mlx5_core_dev * , int ) 

/* drivers/net/ethernet/mellanox/mlx5/core/pd.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##workqueue_struct
s##dma_pool
s##dentry
s##radix_tree_node
mlx5_core_alloc_pd int mlx5_core_alloc_pd ( s#mlx5_core_dev * , t#u32 * ) 
mlx5_core_dealloc_pd int mlx5_core_dealloc_pd ( s#mlx5_core_dev * , t#u32 ) 

/* drivers/net/ethernet/mellanox/mlx5/core/port.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##workqueue_struct
s##dma_pool
s##dentry
s##radix_tree_node
mlx5_core_access_reg int mlx5_core_access_reg ( s#mlx5_core_dev * , void * , int , void * , int , t#u16 , int , int ) 
mlx5_set_port_caps int mlx5_set_port_caps ( s#mlx5_core_dev * , int , t#u32 ) 

/* drivers/net/ethernet/mellanox/mlx5/core/qp.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##workqueue_struct
s##dma_pool
s##dentry
s##radix_tree_node
s#mlx5_core_qp struct mlx5_core_qp { void ( * event ) ( s#mlx5_core_qp * , int ) ; int qpn ; t#atomic_t refcount ; s#completion free ; s#mlx5_rsc_debug * dbg ; int pid ; } 
s#mlx5_qp_path struct mlx5_qp_path { t#u8 fl ; t#u8 rsvd3 ; t#u8 free_ar ; t#u8 pkey_index ; t#u8 rsvd0 ; t#u8 grh_mlid ; t#__be16 rlid ; t#u8 ackto_lt ; t#u8 mgid_index ; t#u8 static_rate ; t#u8 hop_limit ; t#__be32 tclass_flowlabel ; t#u8 rgid [ 16 ] ; t#u8 rsvd1 [ 4 ] ; t#u8 sl ; t#u8 port ; t#u8 rsvd2 [ 6 ] ; } 
s#mlx5_qp_context struct mlx5_qp_context { t#__be32 flags ; t#__be32 flags_pd ; t#u8 mtu_msgmax ; t#u8 rq_size_stride ; t#__be16 sq_crq_size ; t#__be32 qp_counter_set_usr_page ; t#__be32 wire_qpn ; t#__be32 log_pg_sz_remote_qpn ; s#mlx5_qp_path pri_path ; s#mlx5_qp_path alt_path ; t#__be32 params1 ; t#u8 reserved2 [ 4 ] ; t#__be32 next_send_psn ; t#__be32 cqn_send ; t#u8 reserved3 [ 8 ] ; t#__be32 last_acked_psn ; t#__be32 ssn ; t#__be32 params2 ; t#__be32 rnr_nextrecvpsn ; t#__be32 xrcd ; t#__be32 cqn_recv ; t#__be64 db_rec_addr ; t#__be32 qkey ; t#__be32 rq_type_srqn ; t#__be32 rmsn ; t#__be16 hw_sq_wqe_counter ; t#__be16 sw_sq_wqe_counter ; t#__be16 hw_rcyclic_byte_counter ; t#__be16 hw_rq_counter ; t#__be16 sw_rcyclic_byte_counter ; t#__be16 sw_rq_counter ; t#u8 rsvd0 [ 5 ] ; t#u8 cgs ; t#u8 cs_req ; t#u8 cs_res ; t#__be64 dc_access_key ; t#u8 rsvd1 [ 24 ] ; } 
s#mlx5_create_qp_mbox_in struct mlx5_create_qp_mbox_in { s#mlx5_inbox_hdr hdr ; t#__be32 input_qpn ; t#u8 rsvd0 [ 4 ] ; t#__be32 opt_param_mask ; t#u8 rsvd1 [ 4 ] ; s#mlx5_qp_context ctx ; t#u8 rsvd3 [ 16 ] ; t#__be64 pas [ 0 ] ; } 
mlx5_core_create_qp int mlx5_core_create_qp ( s#mlx5_core_dev * , s#mlx5_core_qp * , s#mlx5_create_qp_mbox_in * , int ) 
mlx5_core_destroy_qp int mlx5_core_destroy_qp ( s#mlx5_core_dev * , s#mlx5_core_qp * ) 
e#mlx5_qp_state enum mlx5_qp_state { MLX5_QP_STATE_RST = 0 , MLX5_QP_STATE_INIT = 1 , MLX5_QP_STATE_RTR = 2 , MLX5_QP_STATE_RTS = 3 , MLX5_QP_STATE_SQER = 4 , MLX5_QP_STATE_SQD = 5 , MLX5_QP_STATE_ERR = 6 , MLX5_QP_STATE_SQ_DRAINING = 7 , MLX5_QP_STATE_SUSPENDED = 9 , MLX5_QP_NUM_STATE } 
s#mlx5_modify_qp_mbox_in struct mlx5_modify_qp_mbox_in { s#mlx5_inbox_hdr hdr ; t#__be32 qpn ; t#u8 rsvd1 [ 4 ] ; t#__be32 optparam ; t#u8 rsvd0 [ 4 ] ; s#mlx5_qp_context ctx ; } 
mlx5_core_qp_modify int mlx5_core_qp_modify ( s#mlx5_core_dev * , e#mlx5_qp_state , e#mlx5_qp_state , s#mlx5_modify_qp_mbox_in * , int , s#mlx5_core_qp * ) 
s#mlx5_query_qp_mbox_out struct mlx5_query_qp_mbox_out { s#mlx5_outbox_hdr hdr ; t#u8 rsvd1 [ 8 ] ; t#__be32 optparam ; t#u8 rsvd0 [ 4 ] ; s#mlx5_qp_context ctx ; t#u8 rsvd2 [ 16 ] ; t#__be64 pas [ 0 ] ; } 
mlx5_core_qp_query int mlx5_core_qp_query ( s#mlx5_core_dev * , s#mlx5_core_qp * , s#mlx5_query_qp_mbox_out * , int ) 
mlx5_core_xrcd_alloc int mlx5_core_xrcd_alloc ( s#mlx5_core_dev * , t#u32 * ) 
mlx5_core_xrcd_dealloc int mlx5_core_xrcd_dealloc ( s#mlx5_core_dev * , t#u32 ) 

/* drivers/net/ethernet/mellanox/mlx5/core/srq.o */
s#mlx5_core_srq struct mlx5_core_srq { t#u32 srqn ; int max ; int max_gs ; int max_avail_gather ; int wqe_shift ; void ( * event ) ( s#mlx5_core_srq * , e#mlx5_event ) ; t#atomic_t refcount ; s#completion free ; } 
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##workqueue_struct
s##dma_pool
s##dentry
s##radix_tree_node
mlx5_core_get_srq s#mlx5_core_srq * mlx5_core_get_srq ( s#mlx5_core_dev * , t#u32 ) 
s#mlx5_srq_ctx struct mlx5_srq_ctx { t#u8 state_log_sz ; t#u8 rsvd0 [ 3 ] ; t#__be32 flags_xrcd ; t#__be32 pgoff_cqn ; t#u8 rsvd1 [ 4 ] ; t#u8 log_pg_sz ; t#u8 rsvd2 [ 7 ] ; t#__be32 pd ; t#__be16 lwm ; t#__be16 wqe_cnt ; t#u8 rsvd3 [ 8 ] ; t#__be64 db_record ; } 
s#mlx5_create_srq_mbox_in struct mlx5_create_srq_mbox_in { s#mlx5_inbox_hdr hdr ; t#__be32 input_srqn ; t#u8 rsvd0 [ 4 ] ; s#mlx5_srq_ctx ctx ; t#u8 rsvd1 [ 208 ] ; t#__be64 pas [ 0 ] ; } 
mlx5_core_create_srq int mlx5_core_create_srq ( s#mlx5_core_dev * , s#mlx5_core_srq * , s#mlx5_create_srq_mbox_in * , int ) 
mlx5_core_destroy_srq int mlx5_core_destroy_srq ( s#mlx5_core_dev * , s#mlx5_core_srq * ) 
s#mlx5_query_srq_mbox_out struct mlx5_query_srq_mbox_out { s#mlx5_outbox_hdr hdr ; t#u8 rsvd0 [ 8 ] ; s#mlx5_srq_ctx ctx ; t#u8 rsvd1 [ 32 ] ; t#__be64 pas [ 0 ] ; } 
mlx5_core_query_srq int mlx5_core_query_srq ( s#mlx5_core_dev * , s#mlx5_core_srq * , s#mlx5_query_srq_mbox_out * ) 
mlx5_core_arm_srq int mlx5_core_arm_srq ( s#mlx5_core_dev * , s#mlx5_core_srq * , t#u16 , int ) 

/* drivers/net/ethernet/mellanox/mlx5/core/uar.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##workqueue_struct
s##dma_pool
s##dentry
s##radix_tree_node
mlx5_cmd_alloc_uar int mlx5_cmd_alloc_uar ( s#mlx5_core_dev * , t#u32 * ) 
mlx5_cmd_free_uar int mlx5_cmd_free_uar ( s#mlx5_core_dev * , t#u32 ) 

/* drivers/net/macvlan.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
t#xfrm_address_t typedef union { t#__be32 a4 ; t#__be32 a6 [ 4 ] ; } xfrm_address_t 
s#xfrm_id struct xfrm_id { t#xfrm_address_t daddr ; t#__be32 spi ; t#__u8 proto ; } 
s#xfrm_selector struct xfrm_selector { t#xfrm_address_t daddr ; t#xfrm_address_t saddr ; t#__be16 dport ; t#__be16 dport_mask ; t#__be16 sport ; t#__be16 sport_mask ; t#__u16 family ; t#__u8 prefixlen_d ; t#__u8 prefixlen_s ; t#__u8 proto ; int ifindex ; t#__kernel_uid32_t user ; } 
s#xfrm_mark struct xfrm_mark { t#__u32 v ; t#__u32 m ; } 
s#xfrm_state_walk struct xfrm_state_walk { s#list_head all ; t#u8 state ; union { t#u8 dying ; t#u8 proto ; } ; t#u32 seq ; } 
s#xfrm_lifetime_cfg struct xfrm_lifetime_cfg { t#__u64 soft_byte_limit ; t#__u64 hard_byte_limit ; t#__u64 soft_packet_limit ; t#__u64 hard_packet_limit ; t#__u64 soft_add_expires_seconds ; t#__u64 hard_add_expires_seconds ; t#__u64 soft_use_expires_seconds ; t#__u64 hard_use_expires_seconds ; } 
s#xfrm_algo_auth struct xfrm_algo_auth { char alg_name [ 64 ] ; unsigned int alg_key_len ; unsigned int alg_trunc_len ; char alg_key [ 0 ] ; } 
s#xfrm_algo struct xfrm_algo { char alg_name [ 64 ] ; unsigned int alg_key_len ; char alg_key [ 0 ] ; } 
s#xfrm_algo_aead struct xfrm_algo_aead { char alg_name [ 64 ] ; unsigned int alg_key_len ; unsigned int alg_icv_len ; char alg_key [ 0 ] ; } 
s#xfrm_encap_tmpl struct xfrm_encap_tmpl { t#__u16 encap_type ; t#__be16 encap_sport ; t#__be16 encap_dport ; t#xfrm_address_t encap_oa ; } 
s#xfrm_replay_state struct xfrm_replay_state { t#__u32 oseq ; t#__u32 seq ; t#__u32 bitmap ; } 
s#xfrm_replay_state_esn struct xfrm_replay_state_esn { unsigned int bmp_len ; t#__u32 oseq ; t#__u32 seq ; t#__u32 oseq_hi ; t#__u32 seq_hi ; t#__u32 replay_window ; t#__u32 bmp [ 0 ] ; } 
s#xfrm_replay struct xfrm_replay { void ( * advance ) ( s#xfrm_state * , t#__be32 ) ; int ( * check ) ( s#xfrm_state * , s#sk_buff * , t#__be32 ) ; int ( * recheck ) ( s#xfrm_state * , s#sk_buff * , t#__be32 ) ; void ( * notify ) ( s#xfrm_state * , int ) ; int ( * overflow ) ( s#xfrm_state * , s#sk_buff * ) ; } 
s#xfrm_stats struct xfrm_stats { t#__u32 replay_window ; t#__u32 replay ; t#__u32 integrity_failed ; } 
s#xfrm_lifetime_cur struct xfrm_lifetime_cur { t#__u64 bytes ; t#__u64 packets ; t#__u64 add_time ; t#__u64 use_time ; } 
s#tasklet_hrtimer struct tasklet_hrtimer { s#hrtimer timer ; s#tasklet_struct tasklet ; e#hrtimer_restart ( * function ) ( s#hrtimer * ) ; } 
s#flowi_common struct flowi_common { int flowic_oif ; int flowic_iif ; t#__u32 flowic_mark ; t#__u8 flowic_tos ; t#__u8 flowic_scope ; t#__u8 flowic_proto ; t#__u8 flowic_flags ; t#__u32 flowic_secid ; } 
u#flowi_uli union flowi_uli { struct { t#__be16 dport ; t#__be16 sport ; } ports ; struct { t#__u8 type ; t#__u8 code ; } icmpt ; struct { t#__le16 dport ; t#__le16 sport ; } dnports ; t#__be32 spi ; t#__be32 gre_key ; struct { t#__u8 type ; } mht ; } 
s#flowi4 struct flowi4 { s#flowi_common __fl_common ; t#__be32 saddr ; t#__be32 daddr ; u#flowi_uli uli ; } 
s#flowi6 struct flowi6 { s#flowi_common __fl_common ; s#in6_addr daddr ; s#in6_addr saddr ; t#__be32 flowlabel ; u#flowi_uli uli ; } 
s#flowidn struct flowidn { s#flowi_common __fl_common ; t#__le16 daddr ; t#__le16 saddr ; u#flowi_uli uli ; } 
s#flowi struct flowi { union { s#flowi_common __fl_common ; s#flowi4 ip4 ; s#flowi6 ip6 ; s#flowidn dn ; } u ; } 
s#xfrm_type struct xfrm_type { char * description ; s#module * owner ; t#u8 proto ; t#u8 flags ; int ( * init_state ) ( s#xfrm_state * ) ; void ( * destructor ) ( s#xfrm_state * ) ; int ( * input ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * output ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * reject ) ( s#xfrm_state * , s#sk_buff * , const s#flowi * ) ; int ( * hdr_offset ) ( s#xfrm_state * , s#sk_buff * , t#u8 * * ) ; t#u32 ( * get_mtu ) ( s#xfrm_state * , int ) ; } 
E#IPPROTO_MAX ( 255 ) + 1 
s#xfrm_tmpl struct xfrm_tmpl { s#xfrm_id id ; t#xfrm_address_t saddr ; unsigned short encap_family ; t#u32 reqid ; t#u8 mode ; t#u8 share ; t#u8 optional ; t#u8 allalgs ; t#u32 aalgos ; t#u32 ealgos ; t#u32 calgos ; } 
s#xfrm_state_afinfo struct xfrm_state_afinfo { unsigned int family ; unsigned int proto ; t#__be16 eth_proto ; s#module * owner ; const s#xfrm_type * type_map [ E#IPPROTO_MAX ] ; s#xfrm_mode * mode_map [ 5 ] ; int ( * init_flags ) ( s#xfrm_state * ) ; void ( * init_tempsel ) ( s#xfrm_selector * , const s#flowi * ) ; void ( * init_temprop ) ( s#xfrm_state * , const s#xfrm_tmpl * , const t#xfrm_address_t * , const t#xfrm_address_t * ) ; int ( * tmpl_sort ) ( s#xfrm_tmpl * * , s#xfrm_tmpl * * , int ) ; int ( * state_sort ) ( s#xfrm_state * * , s#xfrm_state * * , int ) ; int ( * output ) ( s#sk_buff * ) ; int ( * output_finish ) ( s#sk_buff * ) ; int ( * extract_input ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * extract_output ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * transport_finish ) ( s#sk_buff * , int ) ; void ( * local_error ) ( s#sk_buff * , t#u32 ) ; } 
s#xfrm_mode struct xfrm_mode { int ( * input2 ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * input ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * output2 ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * output ) ( s#xfrm_state * , s#sk_buff * ) ; s#xfrm_state_afinfo * afinfo ; s#module * owner ; unsigned int encap ; int flags ; } 
s#xfrm_sec_ctx struct xfrm_sec_ctx { t#__u8 ctx_doi ; t#__u8 ctx_alg ; t#__u16 ctx_len ; t#__u32 ctx_sid ; char ctx_str [ 0 ] ; } 
s#xfrm_state struct xfrm_state { s#net * xs_net ; union { s#hlist_node gclist ; s#hlist_node bydst ; } ; s#hlist_node bysrc ; s#hlist_node byspi ; t#atomic_t refcnt ; t#spinlock_t lock ; s#xfrm_id id ; s#xfrm_selector sel ; s#xfrm_mark mark ; t#u32 tfcpad ; t#u32 genid ; s#xfrm_state_walk km ; struct { t#u32 reqid ; t#u8 mode ; t#u8 replay_window ; t#u8 aalgo , ealgo , calgo ; t#u8 flags ; t#u16 family ; t#xfrm_address_t saddr ; int header_len ; int trailer_len ; t#u32 extra_flags ; } props ; s#xfrm_lifetime_cfg lft ; s#xfrm_algo_auth * aalg ; s#xfrm_algo * ealg ; s#xfrm_algo * calg ; s#xfrm_algo_aead * aead ; s#xfrm_encap_tmpl * encap ; t#xfrm_address_t * coaddr ; s#xfrm_state * tunnel ; t#atomic_t tunnel_users ; s#xfrm_replay_state replay ; s#xfrm_replay_state_esn * replay_esn ; s#xfrm_replay_state preplay ; s#xfrm_replay_state_esn * preplay_esn ; s#xfrm_replay * repl ; t#u32 xflags ; t#u32 replay_maxage ; t#u32 replay_maxdiff ; s#timer_list rtimer ; s#xfrm_stats stats ; s#xfrm_lifetime_cur curlft ; s#tasklet_hrtimer mtimer ; long saved_tmo ; unsigned long lastused ; const s#xfrm_type * type ; s#xfrm_mode * inner_mode ; s#xfrm_mode * inner_mode_iaf ; s#xfrm_mode * outer_mode ; s#xfrm_sec_ctx * security ; void * data ; } 
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s#flow_cache_ops struct flow_cache_ops { s#flow_cache_object * ( * get ) ( s#flow_cache_object * ) ; int ( * check ) ( s#flow_cache_object * ) ; void ( * delete ) ( s#flow_cache_object * ) ; } 
s#flow_cache_object struct flow_cache_object { const s#flow_cache_ops * ops ; } 
s#xfrm_policy_walk_entry struct xfrm_policy_walk_entry { s#list_head all ; t#u8 dead ; } 
s#xfrm_policy_queue struct xfrm_policy_queue { s#sk_buff_head hold_queue ; s#timer_list hold_timer ; unsigned long timeout ; } 
s#xfrm_policy struct xfrm_policy { s#net * xp_net ; s#hlist_node bydst ; s#hlist_node byidx ; t#rwlock_t lock ; t#atomic_t refcnt ; s#timer_list timer ; s#flow_cache_object flo ; t#atomic_t genid ; t#u32 priority ; t#u32 index ; s#xfrm_mark mark ; s#xfrm_selector selector ; s#xfrm_lifetime_cfg lft ; s#xfrm_lifetime_cur curlft ; s#xfrm_policy_walk_entry walk ; s#xfrm_policy_queue polq ; t#u8 type ; t#u8 action ; t#u8 flags ; t#u8 xfrm_nr ; t#u16 family ; s#xfrm_sec_ctx * security ; s#xfrm_tmpl xfrm_vec [ 6 ] ; } 
s#sec_path struct sec_path { t#atomic_t refcnt ; int len ; s#xfrm_state * xvec [ 6 ] ; } 
macvlan_start_xmit extern t#netdev_tx_t macvlan_start_xmit ( s#sk_buff * , s#net_device * ) 
macvlan_common_setup extern void macvlan_common_setup ( s#net_device * ) 
macvlan_common_newlink extern int macvlan_common_newlink ( s#net * , s#net_device * , s#nlattr * [ ] , s#nlattr * [ ] , int ( * ) ( s#sk_buff * ) , int ( * ) ( s#net_device * , s#sk_buff * ) ) 
macvlan_dellink extern void macvlan_dellink ( s#net_device * , s#list_head * ) 
macvlan_link_register extern int macvlan_link_register ( s#rtnl_link_ops * ) 

/* drivers/net/macvtap.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kioctx
s##eventfd_ctx
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##mem_cgroup
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
macvtap_get_socket s#socket * macvtap_get_socket ( s#file * ) 

/* drivers/net/mdio.o */
s##net_device
s#mdio_if_info struct mdio_if_info { int prtad ; t#u32 mmds ; unsigned mode_support ; s#net_device * dev ; int ( * mdio_read ) ( s#net_device * , int , int , t#u16 ) ; int ( * mdio_write ) ( s#net_device * , int , int , t#u16 , t#u16 ) ; } 
mdio45_probe extern int mdio45_probe ( s#mdio_if_info * , int ) 
mdio_set_flag extern int mdio_set_flag ( const s#mdio_if_info * , int , int , t#u16 , int , t#bool ) 
mdio45_links_ok extern int mdio45_links_ok ( const s#mdio_if_info * , t#u32 ) 
mdio45_nway_restart extern int mdio45_nway_restart ( const s#mdio_if_info * ) 
mdio45_ethtool_gset_npage extern void mdio45_ethtool_gset_npage ( const s#mdio_if_info * , s#ethtool_cmd * , t#u32 , t#u32 ) 
mdio45_ethtool_spauseparam_an extern void mdio45_ethtool_spauseparam_an ( const s#mdio_if_info * , const s#ethtool_pauseparam * ) 
s#mii_ioctl_data struct mii_ioctl_data { t#__u16 phy_id ; t#__u16 reg_num ; t#__u16 val_in ; t#__u16 val_out ; } 
mdio_mii_ioctl extern int mdio_mii_ioctl ( const s#mdio_if_info * , s#mii_ioctl_data * , int ) 

/* drivers/net/mii.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s#mii_if_info struct mii_if_info { int phy_id ; int advertising ; int phy_id_mask ; int reg_num_mask ; unsigned int full_duplex : 1 ; unsigned int force_media : 1 ; unsigned int supports_gmii : 1 ; s#net_device * dev ; int ( * mdio_read ) ( s#net_device * , int , int ) ; void ( * mdio_write ) ( s#net_device * , int , int , int ) ; } 
mii_link_ok extern int mii_link_ok ( s#mii_if_info * ) 
mii_nway_restart extern int mii_nway_restart ( s#mii_if_info * ) 
mii_ethtool_gset extern int mii_ethtool_gset ( s#mii_if_info * , s#ethtool_cmd * ) 
mii_ethtool_sset extern int mii_ethtool_sset ( s#mii_if_info * , s#ethtool_cmd * ) 
mii_check_link extern void mii_check_link ( s#mii_if_info * ) 
mii_check_media extern unsigned int mii_check_media ( s#mii_if_info * , unsigned int , unsigned int ) 
mii_check_gmii_support extern int mii_check_gmii_support ( s#mii_if_info * ) 
generic_mii_ioctl extern int generic_mii_ioctl ( s#mii_if_info * , s#mii_ioctl_data * , int , unsigned int * ) 

/* drivers/net/phy/mdio-bitbang.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##net_device
s##sec_path
s#phy_driver struct phy_driver { t#u32 phy_id ; char * name ; unsigned int phy_id_mask ; t#u32 features ; t#u32 flags ; int ( * config_init ) ( s#phy_device * ) ; int ( * probe ) ( s#phy_device * ) ; int ( * suspend ) ( s#phy_device * ) ; int ( * resume ) ( s#phy_device * ) ; int ( * config_aneg ) ( s#phy_device * ) ; int ( * read_status ) ( s#phy_device * ) ; int ( * ack_interrupt ) ( s#phy_device * ) ; int ( * config_intr ) ( s#phy_device * ) ; int ( * did_interrupt ) ( s#phy_device * ) ; void ( * remove ) ( s#phy_device * ) ; int ( * match_phy_device ) ( s#phy_device * ) ; int ( * ts_info ) ( s#phy_device * , s#ethtool_ts_info * ) ; int ( * hwtstamp ) ( s#phy_device * , s#ifreq * ) ; t#bool ( * rxtstamp ) ( s#phy_device * , s#sk_buff * , int ) ; void ( * txtstamp ) ( s#phy_device * , s#sk_buff * , int ) ; int ( * set_wol ) ( s#phy_device * , s#ethtool_wolinfo * ) ; void ( * get_wol ) ( s#phy_device * , s#ethtool_wolinfo * ) ; s#device_driver driver ; } 
s#phy_c45_device_ids struct phy_c45_device_ids { t#u32 devices_in_package ; t#u32 device_ids [ 8 ] ; } 
e#phy_state enum phy_state { PHY_DOWN = 0 , PHY_STARTING , PHY_READY , PHY_PENDING , PHY_UP , PHY_AN , PHY_RUNNING , PHY_NOLINK , PHY_FORCING , PHY_CHANGELINK , PHY_HALTED , PHY_RESUMING } 
t#phy_interface_t typedef enum { PHY_INTERFACE_MODE_NA , PHY_INTERFACE_MODE_MII , PHY_INTERFACE_MODE_GMII , PHY_INTERFACE_MODE_SGMII , PHY_INTERFACE_MODE_TBI , PHY_INTERFACE_MODE_REVMII , PHY_INTERFACE_MODE_RMII , PHY_INTERFACE_MODE_RGMII , PHY_INTERFACE_MODE_RGMII_ID , PHY_INTERFACE_MODE_RGMII_RXID , PHY_INTERFACE_MODE_RGMII_TXID , PHY_INTERFACE_MODE_RTBI , PHY_INTERFACE_MODE_SMII , } phy_interface_t 
s#phy_device struct phy_device { s#phy_driver * drv ; s#mii_bus * bus ; s#device dev ; t#u32 phy_id ; s#phy_c45_device_ids c45_ids ; t#bool is_c45 ; t#bool is_internal ; e#phy_state state ; t#u32 dev_flags ; t#phy_interface_t interface ; int addr ; int speed ; int duplex ; int pause ; int asym_pause ; int link ; t#u32 interrupts ; t#u32 supported ; t#u32 advertising ; int autoneg ; int link_timeout ; int irq ; void * priv ; s#work_struct phy_queue ; s#delayed_work state_queue ; t#atomic_t irq_disable ; s#mutex lock ; s#net_device * attached_dev ; void ( * adjust_link ) ( s#net_device * ) ; void ( * adjust_state ) ( s#net_device * ) ; } 
s#mii_bus struct mii_bus { const char * name ; char id [ ( 20 - 3 ) ] ; void * priv ; int ( * read ) ( s#mii_bus * , int , int ) ; int ( * write ) ( s#mii_bus * , int , int , t#u16 ) ; int ( * reset ) ( s#mii_bus * ) ; s#mutex mdio_lock ; s#device * parent ; enum { MDIOBUS_ALLOCATED = 1 , MDIOBUS_REGISTERED , MDIOBUS_UNREGISTERED , MDIOBUS_RELEASED , } state ; s#device dev ; s#phy_device * phy_map [ 32 ] ; t#u32 phy_mask ; int * irq ; } 
s#mdiobb_ops struct mdiobb_ops { s#module * owner ; void ( * set_mdc ) ( s#mdiobb_ctrl * , int ) ; void ( * set_mdio_dir ) ( s#mdiobb_ctrl * , int ) ; void ( * set_mdio_data ) ( s#mdiobb_ctrl * , int ) ; int ( * get_mdio_data ) ( s#mdiobb_ctrl * ) ; } 
s#mdiobb_ctrl struct mdiobb_ctrl { const s#mdiobb_ops * ops ; int ( * reset ) ( s#mii_bus * ) ; } 
alloc_mdio_bitbang s#mii_bus * alloc_mdio_bitbang ( s#mdiobb_ctrl * ) 
free_mdio_bitbang void free_mdio_bitbang ( s#mii_bus * ) 

/* drivers/net/phy/mdio-mux.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
mdio_mux_init int mdio_mux_init ( s#device * , int ( * ) ( int , int , void * ) , void * * , void * ) 
mdio_mux_uninit void mdio_mux_uninit ( void * ) 

/* drivers/net/phy/mdio_bus.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##pci_dev
s##iommu_group
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
mdiobus_alloc_size s#mii_bus * mdiobus_alloc_size ( t#size_t ) 
of_mdio_find_bus extern s#mii_bus * of_mdio_find_bus ( s#device_node * ) 
mdiobus_register int mdiobus_register ( s#mii_bus * ) 
mdiobus_unregister void mdiobus_unregister ( s#mii_bus * ) 
mdiobus_free void mdiobus_free ( s#mii_bus * ) 
mdiobus_scan s#phy_device * mdiobus_scan ( s#mii_bus * , int ) 
mdiobus_read int mdiobus_read ( s#mii_bus * , int , t#u32 ) 
mdiobus_write int mdiobus_write ( s#mii_bus * , int , t#u32 , t#u16 ) 
mdio_bus_type extern s#bus_type mdio_bus_type 

/* drivers/net/phy/phy.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##sec_path
phy_print_status void phy_print_status ( s#phy_device * ) 
phy_ethtool_sset int phy_ethtool_sset ( s#phy_device * , s#ethtool_cmd * ) 
phy_ethtool_gset int phy_ethtool_gset ( s#phy_device * , s#ethtool_cmd * ) 
phy_mii_ioctl int phy_mii_ioctl ( s#phy_device * , s#ifreq * , int ) 
phy_start_aneg int phy_start_aneg ( s#phy_device * ) 
phy_start_interrupts int phy_start_interrupts ( s#phy_device * ) 
phy_stop_interrupts int phy_stop_interrupts ( s#phy_device * ) 
phy_stop void phy_stop ( s#phy_device * ) 
phy_start void phy_start ( s#phy_device * ) 
phy_mac_interrupt void phy_mac_interrupt ( s#phy_device * , int ) 
phy_init_eee int phy_init_eee ( s#phy_device * , t#bool ) 
phy_get_eee_err int phy_get_eee_err ( s#phy_device * ) 
phy_ethtool_get_eee int phy_ethtool_get_eee ( s#phy_device * , s#ethtool_eee * ) 
phy_ethtool_set_eee int phy_ethtool_set_eee ( s#phy_device * , s#ethtool_eee * ) 
phy_ethtool_set_wol int phy_ethtool_set_wol ( s#phy_device * , s#ethtool_wolinfo * ) 
phy_ethtool_get_wol void phy_ethtool_get_wol ( s#phy_device * , s#ethtool_wolinfo * ) 

/* drivers/net/phy/phy_device.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##sec_path
phy_device_free void phy_device_free ( s#phy_device * ) 
phy_register_fixup int phy_register_fixup ( const char * , t#u32 , t#u32 , int ( * ) ( s#phy_device * ) ) 
phy_register_fixup_for_uid int phy_register_fixup_for_uid ( t#u32 , t#u32 , int ( * ) ( s#phy_device * ) ) 
phy_register_fixup_for_id int phy_register_fixup_for_id ( const char * , int ( * ) ( s#phy_device * ) ) 
phy_scan_fixups int phy_scan_fixups ( s#phy_device * ) 
phy_device_create s#phy_device * phy_device_create ( s#mii_bus * , int , int , t#bool , s#phy_c45_device_ids * ) 
get_phy_device s#phy_device * get_phy_device ( s#mii_bus * , int , t#bool ) 
phy_device_register int phy_device_register ( s#phy_device * ) 
phy_find_first s#phy_device * phy_find_first ( s#mii_bus * ) 
phy_connect_direct int phy_connect_direct ( s#net_device * , s#phy_device * , void ( * ) ( s#net_device * ) , t#phy_interface_t ) 
phy_connect s#phy_device * phy_connect ( s#net_device * , const char * , void ( * ) ( s#net_device * ) , t#phy_interface_t ) 
phy_disconnect void phy_disconnect ( s#phy_device * ) 
phy_attach s#phy_device * phy_attach ( s#net_device * , const char * , t#phy_interface_t ) 
phy_detach void phy_detach ( s#phy_device * ) 
genphy_restart_aneg int genphy_restart_aneg ( s#phy_device * ) 
genphy_config_aneg int genphy_config_aneg ( s#phy_device * ) 
genphy_update_link int genphy_update_link ( s#phy_device * ) 
genphy_read_status int genphy_read_status ( s#phy_device * ) 
genphy_suspend int genphy_suspend ( s#phy_device * ) 
genphy_resume int genphy_resume ( s#phy_device * ) 
phy_driver_register int phy_driver_register ( s#phy_driver * ) 
phy_drivers_register int phy_drivers_register ( s#phy_driver * , int ) 
phy_driver_unregister void phy_driver_unregister ( s#phy_driver * ) 
phy_drivers_unregister void phy_drivers_unregister ( s#phy_driver * , int ) 

/* drivers/net/ppp/ppp_generic.o */
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s#net_generic struct net_generic { unsigned int len ; s#callback_head rcu ; void * ptr [ 0 ] ; } 
s##netns_ipvs
s#ppp_channel_ops struct ppp_channel_ops { int ( * start_xmit ) ( s#ppp_channel * , s#sk_buff * ) ; int ( * ioctl ) ( s#ppp_channel * , unsigned int , unsigned long ) ; } 
s#ppp_channel struct ppp_channel { void * private ; const s#ppp_channel_ops * ops ; int mtu ; int hdrlen ; void * ppp ; int speed ; int latency ; } 
ppp_register_net_channel extern int ppp_register_net_channel ( s#net * , s#ppp_channel * ) 
ppp_register_channel extern int ppp_register_channel ( s#ppp_channel * ) 
ppp_unregister_channel extern void ppp_unregister_channel ( s#ppp_channel * ) 
ppp_channel_index extern int ppp_channel_index ( s#ppp_channel * ) 
ppp_unit_number extern int ppp_unit_number ( s#ppp_channel * ) 
ppp_dev_name extern char * ppp_dev_name ( s#ppp_channel * ) 
ppp_input extern void ppp_input ( s#ppp_channel * , s#sk_buff * ) 
ppp_input_error extern void ppp_input_error ( s#ppp_channel * , int ) 
ppp_output_wakeup extern void ppp_output_wakeup ( s#ppp_channel * ) 
s#compstat struct compstat { t#__u32 unc_bytes ; t#__u32 unc_packets ; t#__u32 comp_bytes ; t#__u32 comp_packets ; t#__u32 inc_bytes ; t#__u32 inc_packets ; t#__u32 in_count ; t#__u32 bytes_out ; double ratio ; } 
s#compressor struct compressor { int compress_proto ; void * ( * comp_alloc ) ( unsigned char * , int ) ; void ( * comp_free ) ( void * ) ; int ( * comp_init ) ( void * , unsigned char * , int , int , int , int ) ; void ( * comp_reset ) ( void * ) ; int ( * compress ) ( void * , unsigned char * , unsigned char * , int , int ) ; void ( * comp_stat ) ( void * , s#compstat * ) ; void * ( * decomp_alloc ) ( unsigned char * , int ) ; void ( * decomp_free ) ( void * ) ; int ( * decomp_init ) ( void * , unsigned char * , int , int , int , int , int ) ; void ( * decomp_reset ) ( void * ) ; int ( * decompress ) ( void * , unsigned char * , int , unsigned char * , int ) ; void ( * incomp ) ( void * , unsigned char * , int ) ; void ( * decomp_stat ) ( void * , s#compstat * ) ; s#module * owner ; unsigned int comp_extra ; } 
ppp_register_compressor extern int ppp_register_compressor ( s#compressor * ) 
ppp_unregister_compressor extern void ppp_unregister_compressor ( s#compressor * ) 

/* drivers/net/ppp/pppox.o */
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s#pppox_proto struct pppox_proto { int ( * create ) ( s#net * , s#socket * ) ; int ( * ioctl ) ( s#socket * , unsigned int , unsigned long ) ; s#module * owner ; } 
register_pppox_proto extern int register_pppox_proto ( int , const s#pppox_proto * ) 
unregister_pppox_proto extern void unregister_pppox_proto ( int ) 
pppox_unbind_sock extern void pppox_unbind_sock ( s#sock * ) 
pppox_ioctl extern int pppox_ioctl ( s#socket * , unsigned int , unsigned long ) 

/* drivers/net/slip/slhc.o */
t#byte_t typedef t#__u8 byte_t 
t#__sum16 typedef t#__u16 __sum16 
s#iphdr struct iphdr { t#__u8 ihl : 4 , version : 4 ; t#__u8 tos ; t#__be16 tot_len ; t#__be16 id ; t#__be16 frag_off ; t#__u8 ttl ; t#__u8 protocol ; t#__sum16 check ; t#__be32 saddr ; t#__be32 daddr ; } 
s#tcphdr struct tcphdr { t#__be16 source ; t#__be16 dest ; t#__be32 seq ; t#__be32 ack_seq ; t#__u16 res1 : 4 , doff : 4 , fin : 1 , syn : 1 , rst : 1 , psh : 1 , ack : 1 , urg : 1 , ece : 1 , cwr : 1 ; t#__be16 window ; t#__sum16 check ; t#__be16 urg_ptr ; } 
s#cstate struct cstate { t#byte_t cs_this ; s#cstate * next ; s#iphdr cs_ip ; s#tcphdr cs_tcp ; unsigned char cs_ipopt [ 64 ] ; unsigned char cs_tcpopt [ 64 ] ; int cs_hsize ; } 
t#int32 typedef t#__u32 int32 
s#slcompress struct slcompress { s#cstate * tstate ; s#cstate * rstate ; t#byte_t tslot_limit ; t#byte_t rslot_limit ; t#byte_t xmit_oldest ; t#byte_t xmit_current ; t#byte_t recv_current ; t#byte_t flags ; t#int32 sls_o_nontcp ; t#int32 sls_o_tcp ; t#int32 sls_o_uncompressed ; t#int32 sls_o_compressed ; t#int32 sls_o_searches ; t#int32 sls_o_misses ; t#int32 sls_i_uncompressed ; t#int32 sls_i_compressed ; t#int32 sls_i_error ; t#int32 sls_i_tossed ; t#int32 sls_i_runt ; t#int32 sls_i_badcheck ; } 
slhc_init s#slcompress * slhc_init ( int , int ) 
slhc_free void slhc_free ( s#slcompress * ) 
slhc_remember int slhc_remember ( s#slcompress * , unsigned char * , int ) 
slhc_compress int slhc_compress ( s#slcompress * , unsigned char * , int , unsigned char * , unsigned char * * , int ) 
slhc_uncompress int slhc_uncompress ( s#slcompress * , unsigned char * , int ) 
slhc_toss int slhc_toss ( s#slcompress * ) 

/* drivers/net/sungem_phy.o */
s#mii_phy_ops struct mii_phy_ops { int ( * init ) ( s#mii_phy * ) ; int ( * suspend ) ( s#mii_phy * ) ; int ( * setup_aneg ) ( s#mii_phy * , t#u32 ) ; int ( * setup_forced ) ( s#mii_phy * , int , int ) ; int ( * poll_link ) ( s#mii_phy * ) ; int ( * read_link ) ( s#mii_phy * ) ; int ( * enable_fiber ) ( s#mii_phy * , int ) ; } 
s#mii_phy_def struct mii_phy_def { t#u32 phy_id ; t#u32 phy_id_mask ; t#u32 features ; int magic_aneg ; const char * name ; const s#mii_phy_ops * ops ; } 
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s#mii_phy struct mii_phy { s#mii_phy_def * def ; t#u32 advertising ; int mii_id ; int autoneg ; int speed ; int duplex ; int pause ; s#net_device * dev ; int ( * mdio_read ) ( s#net_device * , int , int ) ; void ( * mdio_write ) ( s#net_device * , int , int , int ) ; void * platform_data ; } 
sungem_phy_probe extern int sungem_phy_probe ( s#mii_phy * , int ) 

/* drivers/net/team/team.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##tvec_base
s##workqueue_struct
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s#tcmsg struct tcmsg { unsigned char tcm_family ; unsigned char tcm__pad1 ; unsigned short tcm__pad2 ; int tcm_ifindex ; t#__u32 tcm_handle ; t#__u32 tcm_parent ; t#__u32 tcm_info ; } 
s##qdisc_walker
s#tcf_result struct tcf_result { unsigned long class ; t#u32 classid ; } 
s##tcf_walker
s#tcf_proto_ops struct tcf_proto_ops { s#tcf_proto_ops * next ; char kind [ 16 ] ; int ( * classify ) ( s#sk_buff * , const s#tcf_proto * , s#tcf_result * ) ; int ( * init ) ( s#tcf_proto * ) ; void ( * destroy ) ( s#tcf_proto * ) ; unsigned long ( * get ) ( s#tcf_proto * , t#u32 ) ; void ( * put ) ( s#tcf_proto * , unsigned long ) ; int ( * change ) ( s#net * , s#sk_buff * , s#tcf_proto * , unsigned long , t#u32 , s#nlattr * * , unsigned long * ) ; int ( * delete ) ( s#tcf_proto * , unsigned long ) ; void ( * walk ) ( s#tcf_proto * , s#tcf_walker * ) ; int ( * dump ) ( s#tcf_proto * , unsigned long , s#sk_buff * , s#tcmsg * ) ; s#module * owner ; } 
s#tcf_proto struct tcf_proto { s#tcf_proto * next ; void * root ; int ( * classify ) ( s#sk_buff * , const s#tcf_proto * , s#tcf_result * ) ; t#__be16 protocol ; t#u32 prio ; t#u32 classid ; s#Qdisc * q ; void * data ; const s#tcf_proto_ops * ops ; } 
s#tc_stats struct tc_stats { t#__u64 bytes ; t#__u32 packets ; t#__u32 drops ; t#__u32 overlimits ; t#__u32 bps ; t#__u32 pps ; t#__u32 qlen ; t#__u32 backlog ; } 
s#gnet_dump struct gnet_dump { t#spinlock_t * lock ; s#sk_buff * skb ; s#nlattr * tail ; int compat_tc_stats ; int compat_xstats ; void * xstats ; int xstats_len ; s#tc_stats tc_stats ; } 
s#Qdisc_class_ops struct Qdisc_class_ops { s#netdev_queue * ( * select_queue ) ( s#Qdisc * , s#tcmsg * ) ; int ( * graft ) ( s#Qdisc * , unsigned long , s#Qdisc * , s#Qdisc * * ) ; s#Qdisc * ( * leaf ) ( s#Qdisc * , unsigned long ) ; void ( * qlen_notify ) ( s#Qdisc * , unsigned long ) ; unsigned long ( * get ) ( s#Qdisc * , t#u32 ) ; void ( * put ) ( s#Qdisc * , unsigned long ) ; int ( * change ) ( s#Qdisc * , t#u32 , t#u32 , s#nlattr * * , unsigned long * ) ; int ( * delete ) ( s#Qdisc * , unsigned long ) ; void ( * walk ) ( s#Qdisc * , s#qdisc_walker * ) ; s#tcf_proto * * ( * tcf_chain ) ( s#Qdisc * , unsigned long ) ; unsigned long ( * bind_tcf ) ( s#Qdisc * , unsigned long , t#u32 ) ; void ( * unbind_tcf ) ( s#Qdisc * , unsigned long ) ; int ( * dump ) ( s#Qdisc * , unsigned long , s#sk_buff * , s#tcmsg * ) ; int ( * dump_stats ) ( s#Qdisc * , unsigned long , s#gnet_dump * ) ; } 
s#Qdisc_ops struct Qdisc_ops { s#Qdisc_ops * next ; const s#Qdisc_class_ops * cl_ops ; char id [ 16 ] ; int priv_size ; int ( * enqueue ) ( s#sk_buff * , s#Qdisc * ) ; s#sk_buff * ( * dequeue ) ( s#Qdisc * ) ; s#sk_buff * ( * peek ) ( s#Qdisc * ) ; unsigned int ( * drop ) ( s#Qdisc * ) ; int ( * init ) ( s#Qdisc * , s#nlattr * ) ; void ( * reset ) ( s#Qdisc * ) ; void ( * destroy ) ( s#Qdisc * ) ; int ( * change ) ( s#Qdisc * , s#nlattr * ) ; void ( * attach ) ( s#Qdisc * ) ; int ( * dump ) ( s#Qdisc * , s#sk_buff * ) ; int ( * dump_stats ) ( s#Qdisc * , s#gnet_dump * ) ; s#module * owner ; } 
s#tc_sizespec struct tc_sizespec { unsigned char cell_log ; unsigned char size_log ; short cell_align ; int overhead ; unsigned int linklayer ; unsigned int mpu ; unsigned int mtu ; unsigned int tsize ; } 
s#qdisc_size_table struct qdisc_size_table { s#callback_head rcu ; s#list_head list ; s#tc_sizespec szopts ; int refcnt ; t#u16 data [ ] ; } 
s#gnet_stats_rate_est64 struct gnet_stats_rate_est64 { t#__u64 bps ; t#__u64 pps ; } 
s#gnet_stats_basic_packed struct gnet_stats_basic_packed { t#__u64 bytes ; t#__u32 packets ; } 
s#gnet_stats_queue struct gnet_stats_queue { t#__u32 qlen ; t#__u32 backlog ; t#__u32 drops ; t#__u32 requeues ; t#__u32 overlimits ; } 
s#Qdisc struct Qdisc { int ( * enqueue ) ( s#sk_buff * , s#Qdisc * ) ; s#sk_buff * ( * dequeue ) ( s#Qdisc * ) ; unsigned int flags ; t#u32 limit ; const s#Qdisc_ops * ops ; s#qdisc_size_table * stab ; s#list_head list ; t#u32 handle ; t#u32 parent ; int ( * reshape_fail ) ( s#sk_buff * , s#Qdisc * ) ; void * u32_node ; s#Qdisc * __parent ; s#netdev_queue * dev_queue ; s#gnet_stats_rate_est64 rate_est ; s#Qdisc * next_sched ; s#sk_buff * gso_skb ; unsigned long state ; s#sk_buff_head q ; s#gnet_stats_basic_packed bstats ; unsigned int __state ; s#gnet_stats_queue qstats ; s#callback_head callback_head ; int padded ; t#atomic_t refcnt ; t#spinlock_t busylock __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; } 
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s#team_pcpu_stats struct team_pcpu_stats { t#u64 rx_packets ; t#u64 rx_bytes ; t#u64 rx_multicast ; t#u64 tx_packets ; t#u64 tx_bytes ; s#u64_stats_sync syncp ; t#u32 rx_dropped ; t#u32 tx_dropped ; } 
s#team_port struct team_port { s#net_device * dev ; s#hlist_node hlist ; s#list_head list ; s#team * team ; int index ; t#bool linkup ; struct { t#bool linkup ; t#u32 speed ; t#u8 duplex ; } state ; struct { t#bool linkup ; t#bool linkup_enabled ; } user ; t#bool changed ; t#bool removed ; struct { unsigned char dev_addr [ 32 ] ; unsigned int mtu ; } orig ; s#netpoll * np ; t#s32 priority ; t#u16 queue_id ; s#list_head qom_list ; s#callback_head rcu ; long mode_priv [ 0 ] ; } 
s#team_mode_ops struct team_mode_ops { int ( * init ) ( s#team * ) ; void ( * exit ) ( s#team * ) ; t#rx_handler_result_t ( * receive ) ( s#team * , s#team_port * , s#sk_buff * ) ; t#bool ( * transmit ) ( s#team * , s#sk_buff * ) ; int ( * port_enter ) ( s#team * , s#team_port * ) ; void ( * port_leave ) ( s#team * , s#team_port * ) ; void ( * port_change_dev_addr ) ( s#team * , s#team_port * ) ; void ( * port_enabled ) ( s#team * , s#team_port * ) ; void ( * port_disabled ) ( s#team * , s#team_port * ) ; } 
s#team_mode struct team_mode { const char * kind ; s#module * owner ; t#size_t priv_size ; t#size_t port_priv_size ; const s#team_mode_ops * ops ; } 
s#team struct team { s#net_device * dev ; s#team_pcpu_stats * pcpu_stats ; s#mutex lock ; int en_port_count ; s#hlist_head en_port_hlist [ ( 1 << 4 ) ] ; s#list_head port_list ; s#list_head option_list ; s#list_head option_inst_list ; const s#team_mode * mode ; s#team_mode_ops ops ; t#bool user_carrier_enabled ; t#bool queue_override_enabled ; s#list_head * qom_lists ; t#bool port_mtu_change_allowed ; struct { unsigned int count ; unsigned int interval ; t#atomic_t count_pending ; s#delayed_work dw ; } notify_peers ; struct { unsigned int count ; unsigned int interval ; t#atomic_t count_pending ; s#delayed_work dw ; } mcast_rejoin ; long mode_priv [ 4 ] ; } 
team_modeop_port_enter extern int team_modeop_port_enter ( s#team * , s#team_port * ) 
team_modeop_port_change_dev_addr extern void team_modeop_port_change_dev_addr ( s#team * , s#team_port * ) 
e#team_option_type enum team_option_type { TEAM_OPTION_TYPE_U32 , TEAM_OPTION_TYPE_STRING , TEAM_OPTION_TYPE_BINARY , TEAM_OPTION_TYPE_BOOL , TEAM_OPTION_TYPE_S32 , } 
s#team_option_inst_info struct team_option_inst_info { t#u32 array_index ; s#team_port * port ; } 
s#team_gsetter_ctx struct team_gsetter_ctx { union { t#u32 u32_val ; const char * str_val ; struct { const void * ptr ; t#u32 len ; } bin_val ; t#bool bool_val ; t#s32 s32_val ; } data ; s#team_option_inst_info * info ; } 
s#team_option struct team_option { s#list_head list ; const char * name ; t#bool per_port ; unsigned int array_size ; e#team_option_type type ; int ( * init ) ( s#team * , s#team_option_inst_info * ) ; int ( * getter ) ( s#team * , s#team_gsetter_ctx * ) ; int ( * setter ) ( s#team * , s#team_gsetter_ctx * ) ; } 
team_options_register extern int team_options_register ( s#team * , const s#team_option * , t#size_t ) 
team_options_unregister extern void team_options_unregister ( s#team * , const s#team_option * , t#size_t ) 
team_option_inst_set_change extern void team_option_inst_set_change ( s#team_option_inst_info * ) 
team_options_change_check extern void team_options_change_check ( s#team * ) 
team_mode_register extern int team_mode_register ( const s#team_mode * ) 
team_mode_unregister extern void team_mode_unregister ( const s#team_mode * ) 

/* drivers/net/tun.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kioctx
s##eventfd_ctx
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##mem_cgroup
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
tun_get_socket s#socket * tun_get_socket ( s#file * ) 

/* drivers/net/usb/cdc_ether.o */
s##usb_tt
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mon_bus
s##ep_device
s##wusb_dev
s#usb_anchor struct usb_anchor { s#list_head urb_list ; t#wait_queue_head_t wait ; t#spinlock_t lock ; unsigned int poisoned : 1 ; } 
t#usb_complete_t typedef void ( * usb_complete_t ) ( s#urb * ) 
s#usb_iso_packet_descriptor struct usb_iso_packet_descriptor { unsigned int offset ; unsigned int length ; unsigned int actual_length ; int status ; } 
s#urb struct urb { s#kref kref ; void * hcpriv ; t#atomic_t use_count ; t#atomic_t reject ; int unlinked ; s#list_head urb_list ; s#list_head anchor_list ; s#usb_anchor * anchor ; s#usb_device * dev ; s#usb_host_endpoint * ep ; unsigned int pipe ; unsigned int stream_id ; int status ; unsigned int transfer_flags ; void * transfer_buffer ; t#dma_addr_t transfer_dma ; s#scatterlist * sg ; int num_mapped_sgs ; int num_sgs ; t#u32 transfer_buffer_length ; t#u32 actual_length ; unsigned char * setup_packet ; t#dma_addr_t setup_dma ; int start_frame ; int number_of_packets ; int interval ; int error_count ; void * context ; t#usb_complete_t complete ; s#usb_iso_packet_descriptor iso_frame_desc [ 0 ] ; void * suse_kabi_padding ; } 
s#driver_info struct driver_info { char * description ; int flags ; int ( * bind ) ( s#usbnet * , s#usb_interface * ) ; void ( * unbind ) ( s#usbnet * , s#usb_interface * ) ; int ( * reset ) ( s#usbnet * ) ; int ( * stop ) ( s#usbnet * ) ; int ( * check_connect ) ( s#usbnet * ) ; int ( * manage_power ) ( s#usbnet * , int ) ; void ( * status ) ( s#usbnet * , s#urb * ) ; int ( * link_reset ) ( s#usbnet * ) ; int ( * rx_fixup ) ( s#usbnet * , s#sk_buff * ) ; s#sk_buff * ( * tx_fixup ) ( s#usbnet * , s#sk_buff * , t#gfp_t ) ; void ( * recover ) ( s#usbnet * ) ; int ( * early_init ) ( s#usbnet * ) ; void ( * indication ) ( s#usbnet * , void * , int ) ; int in ; int out ; unsigned long data ; void * suse_kabi_padding ; } 
s#usbnet struct usbnet { s#usb_device * udev ; s#usb_interface * intf ; s#driver_info * driver_info ; const char * driver_name ; void * driver_priv ; t#wait_queue_head_t wait ; s#mutex phy_mutex ; unsigned char suspend_count ; unsigned char pkt_cnt , pkt_err ; unsigned short rx_qlen , tx_qlen ; unsigned can_dma_sg : 1 ; unsigned in , out ; s#usb_host_endpoint * status ; unsigned maxpacket ; s#timer_list delay ; const char * padding_pkt ; s#net_device * net ; int msg_enable ; unsigned long data [ 5 ] ; t#u32 xid ; t#u32 hard_mtu ; t#size_t rx_urb_size ; s#mii_if_info mii ; s#sk_buff_head rxq ; s#sk_buff_head txq ; s#sk_buff_head done ; s#sk_buff_head rxq_pause ; s#urb * interrupt ; unsigned interrupt_count ; s#mutex interrupt_mutex ; s#usb_anchor deferred ; s#tasklet_struct bh ; s#work_struct kevent ; unsigned long flags ; void * suse_kabi_padding ; } 
usbnet_generic_cdc_bind extern int usbnet_generic_cdc_bind ( s#usbnet * , s#usb_interface * ) 
usbnet_cdc_unbind extern void usbnet_cdc_unbind ( s#usbnet * , s#usb_interface * ) 
usbnet_cdc_status extern void usbnet_cdc_status ( s#usbnet * , s#urb * ) 
usbnet_cdc_bind extern int usbnet_cdc_bind ( s#usbnet * , s#usb_interface * ) 

/* drivers/net/usb/cdc_ncm.o */
s##usb_tt
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mon_bus
s##ep_device
s##wusb_dev
cdc_ncm_bind_common extern int cdc_ncm_bind_common ( s#usbnet * , s#usb_interface * , t#u8 ) 
cdc_ncm_unbind extern void cdc_ncm_unbind ( s#usbnet * , s#usb_interface * ) 
cdc_ncm_select_altsetting extern t#u8 cdc_ncm_select_altsetting ( s#usbnet * , s#usb_interface * ) 
s#usb_cdc_ncm_ntb_parameters struct usb_cdc_ncm_ntb_parameters { t#__le16 wLength ; t#__le16 bmNtbFormatsSupported ; t#__le32 dwNtbInMaxSize ; t#__le16 wNdpInDivisor ; t#__le16 wNdpInPayloadRemainder ; t#__le16 wNdpInAlignment ; t#__le16 wPadding1 ; t#__le32 dwNtbOutMaxSize ; t#__le16 wNdpOutDivisor ; t#__le16 wNdpOutPayloadRemainder ; t#__le16 wNdpOutAlignment ; t#__le16 wNtbOutMaxDatagrams ; } 
s#usb_cdc_ncm_desc struct usb_cdc_ncm_desc { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 bDescriptorSubType ; t#__le16 bcdNcmVersion ; t#__u8 bmNetworkCapabilities ; } 
s#usb_cdc_mbim_desc struct usb_cdc_mbim_desc { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 bDescriptorSubType ; t#__le16 bcdMBIMVersion ; t#__le16 wMaxControlMessage ; t#__u8 bNumberFilters ; t#__u8 bMaxFilterSize ; t#__le16 wMaxSegmentSize ; t#__u8 bmNetworkCapabilities ; } 
s#usb_cdc_header_desc struct usb_cdc_header_desc { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 bDescriptorSubType ; t#__le16 bcdCDC ; } 
s#usb_cdc_union_desc struct usb_cdc_union_desc { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 bDescriptorSubType ; t#__u8 bMasterInterface0 ; t#__u8 bSlaveInterface0 ; } 
s#usb_cdc_ether_desc struct usb_cdc_ether_desc { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 bDescriptorSubType ; t#__u8 iMACAddress ; t#__le32 bmEthernetStatistics ; t#__le16 wMaxSegmentSize ; t#__le16 wNumberMCFilters ; t#__u8 bNumberPowerFilters ; } 
s#cdc_ncm_ctx struct cdc_ncm_ctx { s#usb_cdc_ncm_ntb_parameters ncm_parm ; s#hrtimer tx_timer ; s#tasklet_struct bh ; const s#usb_cdc_ncm_desc * func_desc ; const s#usb_cdc_mbim_desc * mbim_desc ; const s#usb_cdc_header_desc * header_desc ; const s#usb_cdc_union_desc * union_desc ; const s#usb_cdc_ether_desc * ether_desc ; s#net_device * netdev ; s#usb_device * udev ; s#usb_host_endpoint * in_ep ; s#usb_host_endpoint * out_ep ; s#usb_host_endpoint * status_ep ; s#usb_interface * intf ; s#usb_interface * control ; s#usb_interface * data ; s#sk_buff * tx_curr_skb ; s#sk_buff * tx_rem_skb ; t#__le32 tx_rem_sign ; t#spinlock_t mtx ; t#atomic_t stop ; t#u32 tx_timer_pending ; t#u32 tx_curr_frame_num ; t#u32 rx_speed ; t#u32 tx_speed ; t#u32 rx_max ; t#u32 tx_max ; t#u32 max_datagram_size ; t#u16 tx_max_datagrams ; t#u16 tx_remainder ; t#u16 tx_modulus ; t#u16 tx_ndp_modulus ; t#u16 tx_seq ; t#u16 rx_seq ; t#u16 connected ; } 
cdc_ncm_fill_tx_frame extern s#sk_buff * cdc_ncm_fill_tx_frame ( s#cdc_ncm_ctx * , s#sk_buff * , t#__le32 ) 
cdc_ncm_rx_verify_nth16 extern int cdc_ncm_rx_verify_nth16 ( s#cdc_ncm_ctx * , s#sk_buff * ) 
cdc_ncm_rx_verify_ndp16 extern int cdc_ncm_rx_verify_ndp16 ( s#sk_buff * , int ) 

/* drivers/net/usb/rndis_host.o */
s##usb_tt
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mon_bus
s##ep_device
s##wusb_dev
rndis_status extern void rndis_status ( s#usbnet * , s#urb * ) 
s#rndis_msg_hdr struct rndis_msg_hdr { t#__le32 msg_type ; t#__le32 msg_len ; t#__le32 request_id ; t#__le32 status ; } 
rndis_command extern int rndis_command ( s#usbnet * , s#rndis_msg_hdr * , int ) 
generic_rndis_bind extern int generic_rndis_bind ( s#usbnet * , s#usb_interface * , int ) 
rndis_unbind extern void rndis_unbind ( s#usbnet * , s#usb_interface * ) 
rndis_rx_fixup extern int rndis_rx_fixup ( s#usbnet * , s#sk_buff * ) 
rndis_tx_fixup extern s#sk_buff * rndis_tx_fixup ( s#usbnet * , s#sk_buff * , t#gfp_t ) 

/* drivers/net/usb/usbnet.o */
s##usb_tt
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mon_bus
s##ep_device
s##wusb_dev
usbnet_get_endpoints extern int usbnet_get_endpoints ( s#usbnet * , s#usb_interface * ) 
usbnet_get_ethernet_addr extern int usbnet_get_ethernet_addr ( s#usbnet * , int ) 
usbnet_status_start extern int usbnet_status_start ( s#usbnet * , t#gfp_t ) 
usbnet_status_stop extern void usbnet_status_stop ( s#usbnet * ) 
usbnet_skb_return extern void usbnet_skb_return ( s#usbnet * , s#sk_buff * ) 
usbnet_update_max_qlen extern void usbnet_update_max_qlen ( s#usbnet * ) 
usbnet_change_mtu extern int usbnet_change_mtu ( s#net_device * , int ) 
usbnet_defer_kevent extern void usbnet_defer_kevent ( s#usbnet * , int ) 
usbnet_pause_rx extern void usbnet_pause_rx ( s#usbnet * ) 
usbnet_resume_rx extern void usbnet_resume_rx ( s#usbnet * ) 
usbnet_purge_paused_rxq extern void usbnet_purge_paused_rxq ( s#usbnet * ) 
usbnet_unlink_rx_urbs extern void usbnet_unlink_rx_urbs ( s#usbnet * ) 
usbnet_stop extern int usbnet_stop ( s#net_device * ) 
usbnet_open extern int usbnet_open ( s#net_device * ) 
usbnet_get_settings extern int usbnet_get_settings ( s#net_device * , s#ethtool_cmd * ) 
usbnet_set_settings extern int usbnet_set_settings ( s#net_device * , s#ethtool_cmd * ) 
usbnet_get_link extern t#u32 usbnet_get_link ( s#net_device * ) 
usbnet_nway_reset extern int usbnet_nway_reset ( s#net_device * ) 
usbnet_get_drvinfo extern void usbnet_get_drvinfo ( s#net_device * , s#ethtool_drvinfo * ) 
usbnet_get_msglevel extern t#u32 usbnet_get_msglevel ( s#net_device * ) 
usbnet_set_msglevel extern void usbnet_set_msglevel ( s#net_device * , t#u32 ) 
usbnet_tx_timeout extern void usbnet_tx_timeout ( s#net_device * ) 
usbnet_start_xmit extern t#netdev_tx_t usbnet_start_xmit ( s#sk_buff * , s#net_device * ) 
usbnet_disconnect extern void usbnet_disconnect ( s#usb_interface * ) 
usbnet_probe extern int usbnet_probe ( s#usb_interface * , const s#usb_device_id * ) 
usbnet_suspend extern int usbnet_suspend ( s#usb_interface * , t#pm_message_t ) 
usbnet_resume extern int usbnet_resume ( s#usb_interface * ) 
usbnet_device_suggests_idle extern void usbnet_device_suggests_idle ( s#usbnet * ) 
usbnet_manage_power extern int usbnet_manage_power ( s#usbnet * , int ) 
usbnet_link_change extern void usbnet_link_change ( s#usbnet * , t#bool , t#bool ) 
usbnet_read_cmd extern int usbnet_read_cmd ( s#usbnet * , t#u8 , t#u8 , t#u16 , t#u16 , void * , t#u16 ) 
usbnet_write_cmd extern int usbnet_write_cmd ( s#usbnet * , t#u8 , t#u8 , t#u16 , t#u16 , const void * , t#u16 ) 
usbnet_read_cmd_nopm extern int usbnet_read_cmd_nopm ( s#usbnet * , t#u8 , t#u8 , t#u16 , t#u16 , void * , t#u16 ) 
usbnet_write_cmd_nopm extern int usbnet_write_cmd_nopm ( s#usbnet * , t#u8 , t#u8 , t#u16 , t#u16 , const void * , t#u16 ) 
usbnet_write_cmd_async extern int usbnet_write_cmd_async ( s#usbnet * , t#u8 , t#u8 , t#u16 , t#u16 , const void * , t#u16 ) 

/* drivers/net/vxlan.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##xfrm_state
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s#pcpu_tstats struct pcpu_tstats { t#u64 rx_packets ; t#u64 rx_bytes ; t#u64 tx_packets ; t#u64 tx_bytes ; s#u64_stats_sync syncp ; } 
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s#udp_hslot struct udp_hslot { s#hlist_nulls_head head ; int count ; t#spinlock_t lock ; } 
s#udp_table struct udp_table { s#udp_hslot * hash ; s#udp_hslot * hash2 ; unsigned int mask ; unsigned int log ; } 
s##raw_hashinfo
s##xfrm_policy
s##sec_path
t#vxlan_rcv_t typedef void ( vxlan_rcv_t ) ( s#vxlan_sock * , s#sk_buff * , t#__be32 ) 
s#vxlan_sock struct vxlan_sock { s#hlist_node hlist ; t#vxlan_rcv_t * rcv ; void * data ; s#work_struct del_work ; s#socket * sock ; s#callback_head rcu ; s#hlist_head vni_list [ ( 1 << 10 ) ] ; t#atomic_t refcnt ; } 
vxlan_sock_release void vxlan_sock_release ( s#vxlan_sock * ) 
vxlan_src_port t#__be16 vxlan_src_port ( t#__u16 , t#__u16 , s#sk_buff * ) 
vxlan_xmit_skb int vxlan_xmit_skb ( s#vxlan_sock * , s#rtable * , s#sk_buff * , t#__be32 , t#__be32 , t#__u8 , t#__u8 , t#__be16 , t#__be16 , t#__be16 , t#__be32 ) 
vxlan_get_rx_port void vxlan_get_rx_port ( s#net_device * ) 
vxlan_sock_add s#vxlan_sock * vxlan_sock_add ( s#net * , t#__be16 , t#vxlan_rcv_t * , void * , t#bool , t#bool ) 

/* drivers/net/wireless/ath/ath10k/core.o */
E#NL80211_BAND_2GHZ 0 
E#NL80211_BAND_5GHZ 1 
E#NL80211_BAND_60GHZ 2 
e#ieee80211_band enum ieee80211_band { IEEE80211_BAND_2GHZ = E#NL80211_BAND_2GHZ , IEEE80211_BAND_5GHZ = E#NL80211_BAND_5GHZ , IEEE80211_BAND_60GHZ = E#NL80211_BAND_60GHZ , IEEE80211_NUM_BANDS } 
e#nl80211_dfs_state enum nl80211_dfs_state { NL80211_DFS_USABLE , NL80211_DFS_UNAVAILABLE , NL80211_DFS_AVAILABLE , } 
s#ieee80211_channel struct ieee80211_channel { e#ieee80211_band band ; t#u16 center_freq ; t#u16 hw_value ; t#u32 flags ; int max_antenna_gain ; int max_power ; int max_reg_power ; t#bool beacon_found ; t#u32 orig_flags ; int orig_mag , orig_mpwr ; e#nl80211_dfs_state dfs_state ; unsigned long dfs_state_entered ; } 
e#nl80211_chan_width enum nl80211_chan_width { NL80211_CHAN_WIDTH_20_NOHT , NL80211_CHAN_WIDTH_20 , NL80211_CHAN_WIDTH_40 , NL80211_CHAN_WIDTH_80 , NL80211_CHAN_WIDTH_80P80 , NL80211_CHAN_WIDTH_160 , NL80211_CHAN_WIDTH_5 , NL80211_CHAN_WIDTH_10 , } 
s#cfg80211_chan_def struct cfg80211_chan_def { s#ieee80211_channel * chan ; e#nl80211_chan_width width ; t#u32 center_freq1 ; t#u32 center_freq2 ; } 
e#ieee80211_smps_mode enum ieee80211_smps_mode { IEEE80211_SMPS_AUTOMATIC , IEEE80211_SMPS_OFF , IEEE80211_SMPS_STATIC , IEEE80211_SMPS_DYNAMIC , IEEE80211_SMPS_NUM_MODES , } 
s#ieee80211_conf struct ieee80211_conf { t#u32 flags ; int power_level , dynamic_ps_timeout ; int max_sleep_period ; t#u16 listen_interval ; t#u8 ps_dtim_period ; t#u8 long_frame_max_tx_count , short_frame_max_tx_count ; s#cfg80211_chan_def chandef ; t#bool radar_enabled ; e#ieee80211_smps_mode smps_mode ; } 
s#mac_address struct mac_address { t#u8 addr [ 6 ] ; } 
s#ieee80211_txrx_stypes struct ieee80211_txrx_stypes { t#u16 tx , rx ; } 
s#ieee80211_iface_limit struct ieee80211_iface_limit { t#u16 max ; t#u16 types ; } 
s#ieee80211_iface_combination struct ieee80211_iface_combination { const s#ieee80211_iface_limit * limits ; t#u32 num_different_channels ; t#u16 max_interfaces ; t#u8 n_limits ; t#bool beacon_int_infra_match ; t#u8 radar_detect_widths ; } 
e#cfg80211_signal_type enum cfg80211_signal_type { CFG80211_SIGNAL_TYPE_NONE , CFG80211_SIGNAL_TYPE_MBM , CFG80211_SIGNAL_TYPE_UNSPEC , } 
s#nl80211_wowlan_tcp_data_token_feature struct nl80211_wowlan_tcp_data_token_feature { t#__u32 min_len , max_len , bufsize ; } 
s#wiphy_wowlan_tcp_support struct wiphy_wowlan_tcp_support { const s#nl80211_wowlan_tcp_data_token_feature * tok ; t#u32 data_payload_max ; t#u32 data_interval_max ; t#u32 wake_payload_max ; t#bool seq ; } 
s#wiphy_wowlan_support struct wiphy_wowlan_support { t#u32 flags ; int n_patterns ; int pattern_max_len ; int pattern_min_len ; int max_pkt_offset ; const s#wiphy_wowlan_tcp_support * tcp ; } 
s#cfg80211_pkt_pattern struct cfg80211_pkt_pattern { t#u8 * mask , * pattern ; int pattern_len ; int pkt_offset ; } 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
E#NUM_NL80211_IFTYPES 11 
e#nl80211_iftype enum nl80211_iftype { NL80211_IFTYPE_UNSPECIFIED , NL80211_IFTYPE_ADHOC , NL80211_IFTYPE_STATION , NL80211_IFTYPE_AP , NL80211_IFTYPE_AP_VLAN , NL80211_IFTYPE_WDS , NL80211_IFTYPE_MONITOR , NL80211_IFTYPE_MESH_POINT , NL80211_IFTYPE_P2P_CLIENT , NL80211_IFTYPE_P2P_GO , NL80211_IFTYPE_P2P_DEVICE , NUM_NL80211_IFTYPES , NL80211_IFTYPE_MAX = E#NUM_NL80211_IFTYPES - 1 } 
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
E#IEEE80211_NUM_BANDS ( E#NL80211_BAND_60GHZ ) + 1 
s#ieee80211_mcs_info struct ieee80211_mcs_info { t#u8 rx_mask [ 10 ] ; t#__le16 rx_highest ; t#u8 tx_params ; t#u8 reserved [ 3 ] ; } 
s#ieee80211_ht_cap struct ieee80211_ht_cap { t#__le16 cap_info ; t#u8 ampdu_params_info ; s#ieee80211_mcs_info mcs ; t#__le16 extended_ht_cap_info ; t#__le32 tx_BF_cap_info ; t#u8 antenna_selection_info ; } 
s#cfg80211_ibss_params struct cfg80211_ibss_params { t#u8 * ssid ; t#u8 * bssid ; s#cfg80211_chan_def chandef ; t#u8 * ie ; t#u8 ssid_len , ie_len ; t#u16 beacon_interval ; t#u32 basic_rates ; t#bool channel_fixed ; t#bool privacy ; t#bool control_port ; int mcast_rate [ E#IEEE80211_NUM_BANDS ] ; s#ieee80211_ht_cap ht_capa ; s#ieee80211_ht_cap ht_capa_mask ; } 
E#__NL80211_AUTHTYPE_NUM 5 
e#nl80211_auth_type enum nl80211_auth_type { NL80211_AUTHTYPE_OPEN_SYSTEM , NL80211_AUTHTYPE_SHARED_KEY , NL80211_AUTHTYPE_FT , NL80211_AUTHTYPE_NETWORK_EAP , NL80211_AUTHTYPE_SAE , __NL80211_AUTHTYPE_NUM , NL80211_AUTHTYPE_MAX = E#__NL80211_AUTHTYPE_NUM - 1 , NL80211_AUTHTYPE_AUTOMATIC } 
e#nl80211_mfp enum nl80211_mfp { NL80211_MFP_NO , NL80211_MFP_REQUIRED , } 
s#cfg80211_crypto_settings struct cfg80211_crypto_settings { t#u32 wpa_versions ; t#u32 cipher_group ; int n_ciphers_pairwise ; t#u32 ciphers_pairwise [ 5 ] ; int n_akm_suites ; t#u32 akm_suites [ 2 ] ; t#bool control_port ; t#__be16 control_port_ethertype ; t#bool control_port_no_encrypt ; } 
s#ieee80211_vht_mcs_info struct ieee80211_vht_mcs_info { t#__le16 rx_mcs_map ; t#__le16 rx_highest ; t#__le16 tx_mcs_map ; t#__le16 tx_highest ; } 
s#ieee80211_vht_cap struct ieee80211_vht_cap { t#__le32 vht_cap_info ; s#ieee80211_vht_mcs_info supp_mcs ; } 
s#cfg80211_connect_params struct cfg80211_connect_params { s#ieee80211_channel * channel ; t#u8 * bssid ; t#u8 * ssid ; t#size_t ssid_len ; e#nl80211_auth_type auth_type ; t#u8 * ie ; t#size_t ie_len ; t#bool privacy ; e#nl80211_mfp mfp ; s#cfg80211_crypto_settings crypto ; const t#u8 * key ; t#u8 key_len , key_idx ; t#u32 flags ; int bg_scan_period ; s#ieee80211_ht_cap ht_capa ; s#ieee80211_ht_cap ht_capa_mask ; s#ieee80211_vht_cap vht_capa ; s#ieee80211_vht_cap vht_capa_mask ; } 
s#wireless_dev struct wireless_dev { s#wiphy * wiphy ; e#nl80211_iftype iftype ; s#list_head list ; s#net_device * netdev ; t#u32 identifier ; s#list_head mgmt_registrations ; t#spinlock_t mgmt_registrations_lock ; s#mutex mtx ; t#bool use_4addr , p2p_started ; t#u8 address [ 6 ] __attribute__ ( ( aligned ( sizeof ( u16 ) ) ) ) ; t#u8 ssid [ 32 ] ; t#u8 ssid_len , mesh_id_len , mesh_id_up_len ; s#cfg80211_conn * conn ; s#cfg80211_cached_keys * connect_keys ; s#list_head event_list ; t#spinlock_t event_lock ; s#cfg80211_internal_bss * current_bss ; s#cfg80211_chan_def preset_chandef ; s#ieee80211_channel * channel ; t#bool ibss_fixed ; t#bool ps ; int ps_timeout ; int beacon_interval ; t#u32 ap_unexpected_nlportid ; t#bool cac_started ; unsigned long cac_start_time ; struct { s#cfg80211_ibss_params ibss ; s#cfg80211_connect_params connect ; s#cfg80211_cached_keys * keys ; t#u8 * ie ; t#size_t ie_len ; t#u8 bssid [ 6 ] , prev_bssid [ 6 ] ; t#u8 ssid [ 32 ] ; t#s8 default_key , default_mgmt_key ; t#bool prev_bssid_valid ; } wext ; } 
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s#nl80211_wowlan_tcp_data_seq struct nl80211_wowlan_tcp_data_seq { t#__u32 start , offset , len ; } 
s#nl80211_wowlan_tcp_data_token struct nl80211_wowlan_tcp_data_token { t#__u32 offset , len ; t#__u8 token_stream [ ] ; } 
s#cfg80211_wowlan_tcp struct cfg80211_wowlan_tcp { s#socket * sock ; t#__be32 src , dst ; t#u16 src_port , dst_port ; t#u8 dst_mac [ 6 ] ; int payload_len ; const t#u8 * payload ; s#nl80211_wowlan_tcp_data_seq payload_seq ; t#u32 data_interval ; t#u32 wake_len ; const t#u8 * wake_data , * wake_mask ; t#u32 tokens_size ; s#nl80211_wowlan_tcp_data_token payload_tok ; } 
s#cfg80211_wowlan struct cfg80211_wowlan { t#bool any , disconnect , magic_pkt , gtk_rekey_failure , eap_identity_req , four_way_handshake , rfkill_release ; s#cfg80211_pkt_pattern * patterns ; s#cfg80211_wowlan_tcp * tcp ; int n_patterns ; } 
s#ieee80211_rate struct ieee80211_rate { t#u32 flags ; t#u16 bitrate ; t#u16 hw_value , hw_value_short ; } 
s#ieee80211_sta_ht_cap struct ieee80211_sta_ht_cap { t#u16 cap ; t#bool ht_supported ; t#u8 ampdu_factor ; t#u8 ampdu_density ; s#ieee80211_mcs_info mcs ; } 
s#ieee80211_sta_vht_cap struct ieee80211_sta_vht_cap { t#bool vht_supported ; t#u32 cap ; s#ieee80211_vht_mcs_info vht_mcs ; } 
s#ieee80211_supported_band struct ieee80211_supported_band { s#ieee80211_channel * channels ; s#ieee80211_rate * bitrates ; e#ieee80211_band band ; int n_channels ; int n_bitrates ; s#ieee80211_sta_ht_cap ht_cap ; s#ieee80211_sta_vht_cap vht_cap ; } 
e#nl80211_reg_initiator enum nl80211_reg_initiator { NL80211_REGDOM_SET_BY_CORE , NL80211_REGDOM_SET_BY_USER , NL80211_REGDOM_SET_BY_DRIVER , NL80211_REGDOM_SET_BY_COUNTRY_IE , } 
e#nl80211_user_reg_hint_type enum nl80211_user_reg_hint_type { NL80211_USER_REG_HINT_USER = 0 , NL80211_USER_REG_HINT_CELL_BASE = 1 , } 
e#environment_cap enum environment_cap { ENVIRON_ANY , ENVIRON_INDOOR , ENVIRON_OUTDOOR , } 
s#regulatory_request struct regulatory_request { s#callback_head callback_head ; int wiphy_idx ; e#nl80211_reg_initiator initiator ; e#nl80211_user_reg_hint_type user_reg_hint_type ; char alpha2 [ 2 ] ; t#u8 dfs_region ; t#bool intersect ; t#bool processed ; e#environment_cap country_ie_env ; s#list_head list ; } 
s#ieee80211_freq_range struct ieee80211_freq_range { t#u32 start_freq_khz ; t#u32 end_freq_khz ; t#u32 max_bandwidth_khz ; } 
s#ieee80211_power_rule struct ieee80211_power_rule { t#u32 max_antenna_gain ; t#u32 max_eirp ; } 
s#ieee80211_reg_rule struct ieee80211_reg_rule { s#ieee80211_freq_range freq_range ; s#ieee80211_power_rule power_rule ; t#u32 flags ; } 
s#ieee80211_regdomain struct ieee80211_regdomain { s#callback_head callback_head ; t#u32 n_reg_rules ; char alpha2 [ 2 ] ; t#u8 dfs_region ; s#ieee80211_reg_rule reg_rules [ ] ; } 
s#wiphy_coalesce_support struct wiphy_coalesce_support { int n_rules ; int max_delay ; int n_patterns ; int pattern_max_len ; int pattern_min_len ; int max_pkt_offset ; } 
s#wiphy struct wiphy { t#u8 perm_addr [ 6 ] ; t#u8 addr_mask [ 6 ] ; s#mac_address * addresses ; const s#ieee80211_txrx_stypes * mgmt_stypes ; const s#ieee80211_iface_combination * iface_combinations ; int n_iface_combinations ; t#u16 software_iftypes ; t#u16 n_addresses ; t#u16 interface_modes ; t#u16 max_acl_mac_addrs ; t#u32 flags , features ; t#u32 ap_sme_capa ; e#cfg80211_signal_type signal_type ; int bss_priv_size ; t#u8 max_scan_ssids ; t#u8 max_sched_scan_ssids ; t#u8 max_match_sets ; t#u16 max_scan_ie_len ; t#u16 max_sched_scan_ie_len ; int n_cipher_suites ; const t#u32 * cipher_suites ; t#u8 retry_short ; t#u8 retry_long ; t#u32 frag_threshold ; t#u32 rts_threshold ; t#u8 coverage_class ; char fw_version [ 32 ] ; t#u32 hw_version ; const s#wiphy_wowlan_support * wowlan ; s#cfg80211_wowlan * wowlan_config ; t#u16 max_remain_on_channel_duration ; t#u8 max_num_pmkids ; t#u32 available_antennas_tx ; t#u32 available_antennas_rx ; t#u32 probe_resp_offload ; const t#u8 * extended_capabilities , * extended_capabilities_mask ; t#u8 extended_capabilities_len ; const void * privid ; s#ieee80211_supported_band * bands [ E#IEEE80211_NUM_BANDS ] ; void ( * reg_notifier ) ( s#wiphy * , s#regulatory_request * ) ; const s#ieee80211_regdomain * regd ; s#device dev ; t#bool registered ; s#dentry * debugfsdir ; const s#ieee80211_ht_cap * ht_capa_mod_mask ; const s#ieee80211_vht_cap * vht_capa_mod_mask ; s#net * _net ; const s#iw_handler_def * wext ; const s#wiphy_coalesce_support * coalesce ; char priv [ 0 ] __attribute__ ( ( aligned ( 32 ) ) ) ; } 
s#ieee80211_hw struct ieee80211_hw { s#ieee80211_conf conf ; s#wiphy * wiphy ; const char * rate_control_algorithm ; void * priv ; t#u32 flags ; unsigned int extra_tx_headroom ; int channel_change_time ; int vif_data_size ; int sta_data_size ; int chanctx_data_size ; int napi_weight ; t#u16 queues ; t#u16 max_listen_interval ; t#s8 max_signal ; t#u8 max_rates ; t#u8 max_report_rates ; t#u8 max_rate_tries ; t#u8 max_rx_aggregation_subframes ; t#u8 max_tx_aggregation_subframes ; t#u8 offchannel_tx_hw_queue ; t#u8 radiotap_mcs_details ; t#u16 radiotap_vht_details ; t#netdev_features_t netdev_features ; t#u8 uapsd_queues ; t#u8 uapsd_max_sp_len ; } 
e#ath_device_state enum ath_device_state { ATH_HW_UNAVAILABLE , ATH_HW_INITIALIZED , } 
s#ath_ani struct ath_ani { t#bool caldone ; unsigned int longcal_timer ; unsigned int shortcal_timer ; unsigned int resetcal_timer ; unsigned int checkani_timer ; s#timer_list timer ; } 
e#ath_crypt_caps enum ath_crypt_caps { ATH_CRYPT_CAP_CIPHER_AESCCM = ( 1UL << ( 0 ) ) , ATH_CRYPT_CAP_MIC_COMBINED = ( 1UL << ( 1 ) ) , } 
s#ath_cycle_counters struct ath_cycle_counters { t#u32 cycles ; t#u32 rx_busy ; t#u32 rx_frame ; t#u32 tx_frame ; } 
t#int16_t typedef t#__s16 int16_t 
s#reg_dmn_pair_mapping struct reg_dmn_pair_mapping { t#u16 regDmnEnum ; t#u16 reg_5ghz_ctl ; t#u16 reg_2ghz_ctl ; } 
s#ath_regulatory struct ath_regulatory { char alpha2 [ 2 ] ; t#u16 country_code ; t#u16 max_power_level ; t#u16 current_rd ; t#int16_t power_limit ; s#reg_dmn_pair_mapping * regpair ; } 
s#ath_ops struct ath_ops { unsigned int ( * read ) ( void * , t#u32 ) ; void ( * multi_read ) ( void * , t#u32 * , t#u32 * , t#u16 ) ; void ( * write ) ( void * , t#u32 , t#u32 ) ; void ( * enable_write_buffer ) ( void * ) ; void ( * write_flush ) ( void * ) ; t#u32 ( * rmw ) ( void * , t#u32 , t#u32 , t#u32 ) ; } 
s##ath_bus_ops
s#ath_common struct ath_common { void * ah ; void * priv ; s#ieee80211_hw * hw ; int debug_mask ; e#ath_device_state state ; s#ath_ani ani ; t#u16 cachelsz ; t#u16 curaid ; t#u8 macaddr [ 6 ] ; t#u8 curbssid [ 6 ] ; t#u8 bssidmask [ 6 ] ; t#u32 rx_bufsize ; t#u32 keymax ; unsigned long keymap [ ( ( ( 128 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long tkip_keymap [ ( ( ( 128 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long ccmp_keymap [ ( ( ( 128 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; e#ath_crypt_caps crypt_caps ; unsigned int clockrate ; t#spinlock_t cc_lock ; s#ath_cycle_counters cc_ani ; s#ath_cycle_counters cc_survey ; s#ath_regulatory regulatory ; s#ath_regulatory reg_world_copy ; const s#ath_ops * ops ; const s#ath_bus_ops * bus_ops ; t#bool btcoex_enabled ; t#bool disable_ani ; t#bool bt_ant_diversity ; } 
s##targetdef
s##hostdef
s#ath10k_hif_cb struct ath10k_hif_cb { int ( * tx_completion ) ( s#ath10k * , s#sk_buff * , unsigned ) ; int ( * rx_completion ) ( s#ath10k * , s#sk_buff * , t#u8 ) ; } 
s#ath10k_hif_ops struct ath10k_hif_ops { int ( * send_head ) ( s#ath10k * , t#u8 , unsigned int , unsigned int , s#sk_buff * ) ; int ( * exchange_bmi_msg ) ( s#ath10k * , void * , t#u32 , void * , t#u32 * ) ; int ( * start ) ( s#ath10k * ) ; void ( * stop ) ( s#ath10k * ) ; int ( * map_service_to_pipe ) ( s#ath10k * , t#u16 , t#u8 * , t#u8 * , int * , int * ) ; void ( * get_default_pipe ) ( s#ath10k * , t#u8 * , t#u8 * ) ; void ( * send_complete_check ) ( s#ath10k * , t#u8 , int ) ; void ( * set_callbacks ) ( s#ath10k * , s#ath10k_hif_cb * ) ; t#u16 ( * get_free_queue_number ) ( s#ath10k * , t#u8 ) ; int ( * power_up ) ( s#ath10k * ) ; void ( * power_down ) ( s#ath10k * ) ; int ( * suspend ) ( s#ath10k * ) ; int ( * resume ) ( s#ath10k * ) ; } 
s#ath10k_bmi struct ath10k_bmi { t#bool done_sent ; } 
e#ath10k_htc_ep_id enum ath10k_htc_ep_id { ATH10K_HTC_EP_UNUSED = - 1 , ATH10K_HTC_EP_0 = 0 , ATH10K_HTC_EP_1 = 1 , ATH10K_HTC_EP_2 , ATH10K_HTC_EP_3 , ATH10K_HTC_EP_4 , ATH10K_HTC_EP_5 , ATH10K_HTC_EP_6 , ATH10K_HTC_EP_7 , ATH10K_HTC_EP_8 , ATH10K_HTC_EP_COUNT , } 
s#ath10k_wmi struct ath10k_wmi { e#ath10k_htc_ep_id eid ; s#completion service_ready ; s#completion unified_ready ; t#atomic_t pending_tx_count ; t#wait_queue_head_t wq ; s#sk_buff_head wmi_event_list ; s#work_struct wmi_event_work ; } 
E#ATH10K_HTC_SVC_ID_RESERVED 0x0000 
E#ATH10K_HTC_SVC_GRP_RSVD 0 
E#ATH10K_HTC_SVC_GRP_WMI 1 
E#ATH10K_HTC_SVC_GRP_NMI 2 
E#ATH10K_HTC_SVC_GRP_HTT 3 
E#ATH10K_HTC_SVC_GRP_TEST 254 
e#ath10k_htc_svc_id enum ath10k_htc_svc_id { ATH10K_HTC_SVC_ID_RESERVED = 0x0000 , ATH10K_HTC_SVC_ID_UNUSED = E#ATH10K_HTC_SVC_ID_RESERVED , ATH10K_HTC_SVC_ID_RSVD_CTRL = ( int ) ( ( ( int ) ( E#ATH10K_HTC_SVC_GRP_RSVD ) << 8 ) | ( int ) ( 1 ) ) , ATH10K_HTC_SVC_ID_WMI_CONTROL = ( int ) ( ( ( int ) ( E#ATH10K_HTC_SVC_GRP_WMI ) << 8 ) | ( int ) ( 0 ) ) , ATH10K_HTC_SVC_ID_WMI_DATA_BE = ( int ) ( ( ( int ) ( E#ATH10K_HTC_SVC_GRP_WMI ) << 8 ) | ( int ) ( 1 ) ) , ATH10K_HTC_SVC_ID_WMI_DATA_BK = ( int ) ( ( ( int ) ( E#ATH10K_HTC_SVC_GRP_WMI ) << 8 ) | ( int ) ( 2 ) ) , ATH10K_HTC_SVC_ID_WMI_DATA_VI = ( int ) ( ( ( int ) ( E#ATH10K_HTC_SVC_GRP_WMI ) << 8 ) | ( int ) ( 3 ) ) , ATH10K_HTC_SVC_ID_WMI_DATA_VO = ( int ) ( ( ( int ) ( E#ATH10K_HTC_SVC_GRP_WMI ) << 8 ) | ( int ) ( 4 ) ) , ATH10K_HTC_SVC_ID_NMI_CONTROL = ( int ) ( ( ( int ) ( E#ATH10K_HTC_SVC_GRP_NMI ) << 8 ) | ( int ) ( 0 ) ) , ATH10K_HTC_SVC_ID_NMI_DATA = ( int ) ( ( ( int ) ( E#ATH10K_HTC_SVC_GRP_NMI ) << 8 ) | ( int ) ( 1 ) ) , ATH10K_HTC_SVC_ID_HTT_DATA_MSG = ( int ) ( ( ( int ) ( E#ATH10K_HTC_SVC_GRP_HTT ) << 8 ) | ( int ) ( 0 ) ) , ATH10K_HTC_SVC_ID_TEST_RAW_STREAMS = ( int ) ( ( ( int ) ( E#ATH10K_HTC_SVC_GRP_TEST ) << 8 ) | ( int ) ( 0 ) ) , } 
s#ath10k_htc_ep_ops struct ath10k_htc_ep_ops { void ( * ep_tx_complete ) ( s#ath10k * , s#sk_buff * ) ; void ( * ep_rx_complete ) ( s#ath10k * , s#sk_buff * ) ; } 
s#ath10k_htc_ep struct ath10k_htc_ep { s#ath10k_htc * htc ; e#ath10k_htc_ep_id eid ; e#ath10k_htc_svc_id service_id ; s#ath10k_htc_ep_ops ep_ops ; int max_tx_queue_depth ; int max_ep_message_len ; t#u8 ul_pipe_id ; t#u8 dl_pipe_id ; int ul_is_polled ; int dl_is_polled ; s#sk_buff_head tx_queue ; t#u8 seq_no ; int tx_credits ; int tx_credit_size ; int tx_credits_per_max_message ; t#bool tx_credit_flow_enabled ; s#work_struct send_work ; } 
E#ATH10K_HTC_EP_COUNT ( 1 ) + 8 
s#ath10k_htc_ops struct ath10k_htc_ops { void ( * target_send_suspend_complete ) ( s#ath10k * ) ; } 
s#ath10k_htc_svc_tx_credits struct ath10k_htc_svc_tx_credits { t#u16 service_id ; t#u8 credit_allocation ; } 
s#ath10k_htc struct ath10k_htc { s#ath10k * ar ; s#ath10k_htc_ep endpoint [ E#ATH10K_HTC_EP_COUNT ] ; t#spinlock_t tx_lock ; s#ath10k_htc_ops htc_ops ; t#u8 control_resp_buffer [ 256 ] ; int control_resp_len ; s#completion ctl_resp ; int total_transmit_credits ; s#ath10k_htc_svc_tx_credits service_tx_alloc [ E#ATH10K_HTC_EP_COUNT ] ; int target_credit_size ; t#bool stopped ; } 
s#ath10k_htt struct ath10k_htt { s#ath10k * ar ; e#ath10k_htc_ep_id eid ; int max_throughput_mbps ; t#u8 target_version_major ; t#u8 target_version_minor ; s#completion target_version_received ; struct { s#sk_buff * * netbufs_ring ; t#__le32 * paddrs_ring ; t#dma_addr_t base_paddr ; int size ; unsigned size_mask ; int fill_level ; int fill_cnt ; struct { t#__le32 * vaddr ; t#dma_addr_t paddr ; } alloc_idx ; struct { unsigned msdu_payld ; } sw_rd_idx ; s#timer_list refill_retry_timer ; t#spinlock_t lock ; } rx_ring ; unsigned int prefetch_len ; t#spinlock_t tx_lock ; int max_num_pending_tx ; int num_pending_tx ; s#sk_buff * * pending_tx ; unsigned long * used_msdu_ids ; t#wait_queue_head_t empty_tx_wq ; t#bool rx_confused ; } 
s#ath10k_hw_params_fw struct ath10k_hw_params_fw { const char * dir ; const char * fw ; const char * otp ; const char * board ; } 
s#ath10k_hw_params struct ath10k_hw_params { t#u32 id ; const char * name ; t#u32 patch_load_addr ; s#ath10k_hw_params_fw fw ; } 
s#wmi_wmm_params_arg struct wmi_wmm_params_arg { t#u32 cwmin ; t#u32 cwmax ; t#u32 aifs ; t#u32 txop ; t#u32 acm ; t#u32 no_ack ; } 
s#wmi_pdev_set_wmm_params_arg struct wmi_pdev_set_wmm_params_arg { s#wmi_wmm_params_arg ac_be ; s#wmi_wmm_params_arg ac_bk ; s#wmi_wmm_params_arg ac_vi ; s#wmi_wmm_params_arg ac_vo ; } 
e#ath10k_state enum ath10k_state { ATH10K_STATE_OFF = 0 , ATH10K_STATE_ON , ATH10K_STATE_RESTARTING , ATH10K_STATE_RESTARTED , ATH10K_STATE_WEDGED , } 
s#survey_info struct survey_info { s#ieee80211_channel * channel ; t#u64 channel_time ; t#u64 channel_time_busy ; t#u64 channel_time_ext_busy ; t#u64 channel_time_rx ; t#u64 channel_time_tx ; t#u32 filled ; t#s8 noise ; } 
s#ath10k struct ath10k { s#ath_common ath_common ; s#ieee80211_hw * hw ; s#device * dev ; t#u8 mac_addr [ 6 ] ; t#u32 target_version ; t#u8 fw_version_major ; t#u32 fw_version_minor ; t#u16 fw_version_release ; t#u16 fw_version_build ; t#u32 phy_capability ; t#u32 hw_min_tx_power ; t#u32 hw_max_tx_power ; t#u32 ht_cap_info ; t#u32 vht_cap_info ; t#u32 num_rf_chains ; s#targetdef * targetdef ; s#hostdef * hostdef ; t#bool p2p ; struct { void * priv ; const s#ath10k_hif_ops * ops ; } hif ; t#wait_queue_head_t event_queue ; t#bool is_target_paused ; s#ath10k_bmi bmi ; s#ath10k_wmi wmi ; s#ath10k_htc htc ; s#ath10k_htt htt ; s#ath10k_hw_params hw_params ; const s#firmware * board_data ; const s#firmware * otp ; const s#firmware * firmware ; struct { s#completion started ; s#completion completed ; s#completion on_channel ; s#timer_list timeout ; t#bool is_roc ; t#bool in_progress ; t#bool aborting ; int vdev_id ; int roc_freq ; } scan ; struct { s#ieee80211_supported_band sbands [ E#IEEE80211_NUM_BANDS ] ; } mac ; s#ieee80211_channel * rx_channel ; s#ieee80211_channel * scan_channel ; int free_vdev_map ; int monitor_vdev_id ; t#bool monitor_enabled ; t#bool monitor_present ; unsigned int filter_flags ; s#wmi_pdev_set_wmm_params_arg wmm_params ; s#completion install_key_done ; s#completion vdev_setup_done ; s#workqueue_struct * workqueue ; s#mutex conf_mutex ; t#spinlock_t data_lock ; s#list_head peers ; t#wait_queue_head_t peer_mapping_wq ; s#work_struct offchan_tx_work ; s#sk_buff_head offchan_tx_queue ; s#completion offchan_tx_completed ; s#sk_buff * offchan_tx_skb ; e#ath10k_state state ; s#work_struct restart_work ; t#u32 survey_last_rx_clear_count ; t#u32 survey_last_cycle_count ; s#survey_info survey [ 38 ] ; } 
ath10k_core_create s#ath10k * ath10k_core_create ( void * , s#device * , const s#ath10k_hif_ops * ) 
ath10k_core_destroy void ath10k_core_destroy ( s#ath10k * ) 
ath10k_core_start int ath10k_core_start ( s#ath10k * ) 
ath10k_core_stop void ath10k_core_stop ( s#ath10k * ) 
ath10k_core_register int ath10k_core_register ( s#ath10k * ) 
ath10k_core_unregister void ath10k_core_unregister ( s#ath10k * ) 

/* drivers/net/wireless/ath/ath10k/debug.o */
ath10k_info extern __attribute__ ( ( format ( printf , 1 , 2 ) ) ) int ath10k_info ( const char * , ... ) 
ath10k_err extern __attribute__ ( ( format ( printf , 1 , 2 ) ) ) int ath10k_err ( const char * , ... ) 
ath10k_warn extern __attribute__ ( ( format ( printf , 1 , 2 ) ) ) int ath10k_warn ( const char * , ... ) 

/* drivers/net/wireless/ath/ath6kl/cfg80211.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
e#ath6kl_state enum ath6kl_state { ATH6KL_STATE_OFF , ATH6KL_STATE_ON , ATH6KL_STATE_SUSPENDING , ATH6KL_STATE_RESUMING , ATH6KL_STATE_DEEPSLEEP , ATH6KL_STATE_CUTPOWER , ATH6KL_STATE_WOW , ATH6KL_STATE_RECOVERY , } 
s#ath6kl_bmi struct ath6kl_bmi { t#u32 cmd_credits ; t#bool done_sent ; t#u8 * cmd_buf ; t#u32 max_data_size ; t#u32 max_cmd_size ; } 
e#htc_endpoint_id enum htc_endpoint_id { ENDPOINT_UNUSED = - 1 , ENDPOINT_0 = 0 , ENDPOINT_1 = 1 , ENDPOINT_2 = 2 , ENDPOINT_3 , ENDPOINT_4 , ENDPOINT_5 , ENDPOINT_6 , ENDPOINT_7 , ENDPOINT_8 , ENDPOINT_MAX , } 
s#htc_tx_packet_info struct htc_tx_packet_info { t#u16 tag ; int cred_used ; t#u8 flags ; int seqno ; } 
s#htc_rx_packet_info struct htc_rx_packet_info { t#u32 exp_hdr ; t#u32 rx_flags ; t#u32 indicat_flags ; } 
s#htc_endpoint_credit_dist struct htc_endpoint_credit_dist { s#list_head list ; t#u16 svc_id ; e#htc_endpoint_id endpoint ; t#u32 dist_flags ; int cred_norm ; int cred_min ; int cred_assngd ; int credits ; int cred_to_dist ; int seek_cred ; int cred_sz ; int cred_per_msg ; s#htc_endpoint * htc_ep ; int txq_depth ; } 
e#htc_send_full_action enum htc_send_full_action { HTC_SEND_FULL_KEEP = 0 , HTC_SEND_FULL_DROP = 1 , } 
s#htc_ep_callbacks struct htc_ep_callbacks { void ( * tx_complete ) ( s#htc_target * , s#htc_packet * ) ; void ( * rx ) ( s#htc_target * , s#htc_packet * ) ; void ( * rx_refill ) ( s#htc_target * , e#htc_endpoint_id ) ; e#htc_send_full_action ( * tx_full ) ( s#htc_target * , s#htc_packet * ) ; s#htc_packet * ( * rx_allocthresh ) ( s#htc_target * , e#htc_endpoint_id , int ) ; void ( * tx_comp_multi ) ( s#htc_target * , s#list_head * ) ; int rx_alloc_thresh ; int rx_refill_thresh ; } 
s#htc_endpoint_stats struct htc_endpoint_stats { t#u32 cred_low_indicate ; t#u32 tx_issued ; t#u32 tx_pkt_bundled ; t#u32 tx_bundles ; t#u32 tx_dropped ; t#u32 tx_cred_rpt ; t#u32 cred_rpt_from_rx ; t#u32 cred_rpt_from_other ; t#u32 cred_rpt_ep0 ; t#u32 cred_from_rx ; t#u32 cred_from_other ; t#u32 cred_from_ep0 ; t#u32 cred_cosumd ; t#u32 cred_retnd ; t#u32 rx_pkts ; t#u32 rx_lkahds ; t#u32 rx_bundl ; t#u32 rx_bundle_lkahd ; t#u32 rx_bundle_from_hdr ; t#u32 rx_alloc_thresh_hit ; t#u32 rxalloc_thresh_byte ; } 
s#htc_endpoint struct htc_endpoint { e#htc_endpoint_id eid ; t#u16 svc_id ; s#list_head txq ; s#list_head rx_bufq ; s#htc_endpoint_credit_dist cred_dist ; s#htc_ep_callbacks ep_cb ; int max_txq_depth ; int len_max ; int tx_proc_cnt ; int rx_proc_cnt ; s#htc_target * target ; t#u8 seqno ; t#u32 conn_flags ; s#htc_endpoint_stats ep_st ; t#u16 tx_drop_packet_threshold ; struct { t#u8 pipeid_ul ; t#u8 pipeid_dl ; s#list_head tx_lookup_queue ; t#bool tx_credit_flow_enabled ; } pipe ; } 
E#ENDPOINT_MAX ( 2 ) + 7 
s#ath6kl_htc_credit_info struct ath6kl_htc_credit_info { int total_avail_credits ; int cur_free_credits ; s#list_head lowestpri_ep_dist ; } 
s#ath6kl_irq_proc_registers struct ath6kl_irq_proc_registers { t#u8 host_int_status ; t#u8 cpu_int_status ; t#u8 error_int_status ; t#u8 counter_int_status ; t#u8 mbox_frame ; t#u8 rx_lkahd_valid ; t#u8 host_int_status2 ; t#u8 gmbox_rx_avail ; t#__le32 rx_lkahd [ 2 ] ; t#__le32 rx_gmbox_lkahd_alias [ 2 ] ; } 
s#ath6kl_irq_enable_reg struct ath6kl_irq_enable_reg { t#u8 int_status_en ; t#u8 cpu_int_status_en ; t#u8 err_int_status_en ; t#u8 cntr_int_status_en ; } 
s#ath6kl_device struct ath6kl_device { t#spinlock_t lock ; s#ath6kl_irq_proc_registers irq_proc_reg ; s#ath6kl_irq_enable_reg irq_en_reg ; s#htc_target * htc_cnxt ; s#ath6kl * ar ; } 
s#htc_pipe_txcredit_alloc struct htc_pipe_txcredit_alloc { t#u16 service_id ; t#u8 credit_alloc ; } 
s#htc_target struct htc_target { s#htc_endpoint endpoint [ E#ENDPOINT_MAX ] ; s#list_head cred_dist_list ; s#list_head free_ctrl_txbuf ; s#list_head free_ctrl_rxbuf ; s#ath6kl_htc_credit_info * credit_info ; int tgt_creds ; unsigned int tgt_cred_sz ; t#spinlock_t htc_lock ; t#spinlock_t rx_lock ; t#spinlock_t tx_lock ; s#ath6kl_device * dev ; t#u32 htc_flags ; t#u32 rx_st_flags ; e#htc_endpoint_id ep_waiting ; t#u8 htc_tgt_ver ; int msg_per_bndl_max ; t#u32 tx_bndl_mask ; int rx_bndl_enable ; int max_rx_bndl_sz ; int max_tx_bndl_sz ; t#u32 block_sz ; t#u32 block_mask ; int max_scat_entries ; int max_xfer_szper_scatreq ; int chk_irq_status_cnt ; t#u32 ac_tx_count [ 4 ] ; struct { s#htc_packet * htc_packet_pool ; t#u8 ctrl_response_buf [ 256 ] ; int ctrl_response_len ; t#bool ctrl_response_valid ; s#htc_pipe_txcredit_alloc txcredit_alloc [ E#ENDPOINT_MAX ] ; } pipe ; } 
s#htc_packet struct htc_packet { s#list_head list ; void * pkt_cntxt ; t#u8 * buf_start ; t#u8 * buf ; t#u32 buf_len ; t#u32 act_len ; e#htc_endpoint_id endpoint ; int status ; union { s#htc_tx_packet_info tx ; s#htc_rx_packet_info rx ; } info ; void ( * completion ) ( s#htc_target * , s#htc_packet * ) ; s#htc_target * context ; s#sk_buff * skb ; } 
s#bus_request struct bus_request { s#list_head list ; t#u32 address ; t#u8 * buffer ; t#u32 length ; t#u32 request ; s#htc_packet * packet ; int status ; s#hif_scatter_req * scat_req ; } 
s#hif_scatter_item struct hif_scatter_item { t#u8 * buf ; int len ; s#htc_packet * packet ; } 
s#hif_scatter_req struct hif_scatter_req { s#list_head list ; t#u32 addr ; t#u32 req ; t#u32 len ; t#bool virt_scat ; void ( * complete ) ( s#htc_target * , s#hif_scatter_req * ) ; int status ; int scat_entries ; s#bus_request * busrequest ; s#scatterlist * sgentries ; t#u8 * virt_dma_buf ; s#hif_scatter_item scat_list [ 1 ] ; t#u32 scat_q_depth ; } 
s#ath6kl_hif_ops struct ath6kl_hif_ops { int ( * read_write_sync ) ( s#ath6kl * , t#u32 , t#u8 * , t#u32 , t#u32 ) ; int ( * write_async ) ( s#ath6kl * , t#u32 , t#u8 * , t#u32 , t#u32 , s#htc_packet * ) ; void ( * irq_enable ) ( s#ath6kl * ) ; void ( * irq_disable ) ( s#ath6kl * ) ; s#hif_scatter_req * ( * scatter_req_get ) ( s#ath6kl * ) ; void ( * scatter_req_add ) ( s#ath6kl * , s#hif_scatter_req * ) ; int ( * enable_scatter ) ( s#ath6kl * ) ; int ( * scat_req_rw ) ( s#ath6kl * , s#hif_scatter_req * ) ; void ( * cleanup_scatter ) ( s#ath6kl * ) ; int ( * suspend ) ( s#ath6kl * , s#cfg80211_wowlan * ) ; int ( * resume ) ( s#ath6kl * ) ; int ( * diag_read32 ) ( s#ath6kl * , t#u32 , t#u32 * ) ; int ( * diag_write32 ) ( s#ath6kl * , t#u32 , t#__le32 ) ; int ( * bmi_read ) ( s#ath6kl * , t#u8 * , t#u32 ) ; int ( * bmi_write ) ( s#ath6kl * , t#u8 * , t#u32 ) ; int ( * power_on ) ( s#ath6kl * ) ; int ( * power_off ) ( s#ath6kl * ) ; void ( * stop ) ( s#ath6kl * ) ; int ( * pipe_send ) ( s#ath6kl * , t#u8 , s#sk_buff * , s#sk_buff * ) ; void ( * pipe_get_default ) ( s#ath6kl * , t#u8 * , t#u8 * ) ; int ( * pipe_map_service ) ( s#ath6kl * , t#u16 , t#u8 * , t#u8 * ) ; t#u16 ( * pipe_get_free_queue_number ) ( s#ath6kl * , t#u8 ) ; } 
s#htc_service_connect_req struct htc_service_connect_req { t#u16 svc_id ; t#u16 conn_flags ; s#htc_ep_callbacks ep_cb ; int max_txq_depth ; t#u32 flags ; unsigned int max_rxmsg_sz ; } 
s#htc_service_connect_resp struct htc_service_connect_resp { t#u8 buf_len ; t#u8 act_len ; e#htc_endpoint_id endpoint ; unsigned int len_max ; t#u8 resp_code ; } 
s#ath6kl_htc_ops struct ath6kl_htc_ops { void * ( * create ) ( s#ath6kl * ) ; int ( * wait_target ) ( s#htc_target * ) ; int ( * start ) ( s#htc_target * ) ; int ( * conn_service ) ( s#htc_target * , s#htc_service_connect_req * , s#htc_service_connect_resp * ) ; int ( * tx ) ( s#htc_target * , s#htc_packet * ) ; void ( * stop ) ( s#htc_target * ) ; void ( * cleanup ) ( s#htc_target * ) ; void ( * flush_txep ) ( s#htc_target * , e#htc_endpoint_id , t#u16 ) ; void ( * flush_rx_buf ) ( s#htc_target * ) ; void ( * activity_changed ) ( s#htc_target * , e#htc_endpoint_id , t#bool ) ; int ( * get_rxbuf_num ) ( s#htc_target * , e#htc_endpoint_id ) ; int ( * add_rxbuf_multiple ) ( s#htc_target * , s#list_head * ) ; int ( * credit_setup ) ( s#htc_target * , s#ath6kl_htc_credit_info * ) ; int ( * tx_complete ) ( s#ath6kl * , s#sk_buff * ) ; int ( * rx_complete ) ( s#ath6kl * , s#sk_buff * , t#u8 ) ; } 
s#sq_threshold_params struct sq_threshold_params { t#s16 upper_threshold [ 6 ] ; t#s16 lower_threshold [ 6 ] ; t#u32 upper_threshold_valid_count ; t#u32 lower_threshold_valid_count ; t#u32 polling_interval ; t#u8 weight ; t#u8 last_rssi ; t#u8 last_rssi_poll_event ; } 
s#wmi struct wmi { t#u16 stream_exist_for_ac [ 4 ] ; t#u8 fat_pipe_exist ; s#ath6kl * parent_dev ; t#u8 pwr_mode ; t#spinlock_t lock ; e#htc_endpoint_id ep_id ; s#sq_threshold_params sq_threshld [ 2 ] ; t#bool is_wmm_enabled ; t#u8 traffic_class ; t#bool is_probe_ssid ; t#u8 * last_mgmt_tx_frame ; t#size_t last_mgmt_tx_frame_len ; t#u8 saved_pwr_mode ; } 
e#ath6kl_hif_type enum ath6kl_hif_type { ATH6KL_HIF_TYPE_SDIO , ATH6KL_HIF_TYPE_USB , } 
s#ath6kl_version struct ath6kl_version { t#u32 target_ver ; t#u32 wlan_ver ; t#u32 abi_ver ; } 
s#ath6kl_node_mapping struct ath6kl_node_mapping { t#u8 mac_addr [ 6 ] ; t#u8 ep_id ; t#u8 tx_pend ; } 
s#ath6kl_cookie struct ath6kl_cookie { s#sk_buff * skb ; t#u32 map_no ; s#htc_packet htc_pkt ; s#ath6kl_cookie * arc_list_next ; } 
s#skb_hold_q struct skb_hold_q { s#sk_buff * skb ; t#bool is_amsdu ; t#u16 seq_no ; } 
s#rxtid struct rxtid { t#bool aggr ; t#bool timer_mon ; t#u16 win_sz ; t#u16 seq_next ; t#u32 hold_q_sz ; s#skb_hold_q * hold_q ; s#sk_buff_head q ; t#spinlock_t lock ; } 
s#rxtid_stats struct rxtid_stats { t#u32 num_into_aggr ; t#u32 num_dups ; t#u32 num_oow ; t#u32 num_mpdu ; t#u32 num_amsdu ; t#u32 num_delivered ; t#u32 num_timeouts ; t#u32 num_hole ; t#u32 num_bar ; } 
s#aggr_info struct aggr_info { s#aggr_info_conn * aggr_conn ; s#sk_buff_head rx_amsdu_freeq ; } 
s#aggr_info_conn struct aggr_info_conn { t#u8 aggr_sz ; t#u8 timer_scheduled ; s#timer_list timer ; s#net_device * dev ; s#rxtid rx_tid [ 8 ] ; s#rxtid_stats stat [ 8 ] ; s#aggr_info * aggr_info ; } 
s#ath6kl_sta struct ath6kl_sta { t#u16 sta_flags ; t#u8 mac [ 6 ] ; t#u8 aid ; t#u8 keymgmt ; t#u8 ucipher ; t#u8 auth ; t#u8 wpa_ie [ 256 ] ; s#sk_buff_head psq ; t#spinlock_t psq_lock ; s#list_head mgmt_psq ; t#size_t mgmt_psq_len ; t#u8 apsd_info ; s#sk_buff_head apsdq ; s#aggr_info_conn * aggr_conn ; } 
s#ath6kl_req_key struct ath6kl_req_key { t#bool valid ; t#u8 key_index ; int key_type ; t#u8 key [ 32 ] ; t#u8 key_len ; } 
s#wmi_per_sta_stat struct wmi_per_sta_stat { t#__le32 tx_bytes ; t#__le32 tx_pkts ; t#__le32 tx_error ; t#__le32 tx_discard ; t#__le32 rx_bytes ; t#__le32 rx_pkts ; t#__le32 rx_error ; t#__le32 rx_discard ; t#__le32 aid ; } 
s#wmi_ap_mode_stat struct wmi_ap_mode_stat { t#__le32 action ; s#wmi_per_sta_stat sta [ 10 + 1 ] ; } 
e#wlan_low_pwr_state enum wlan_low_pwr_state { WLAN_POWER_STATE_ON , WLAN_POWER_STATE_CUT_PWR , WLAN_POWER_STATE_DEEP_SLEEP , WLAN_POWER_STATE_WOW } 
e#wmi_phy_cap enum wmi_phy_cap { WMI_11A_CAP = 0x01 , WMI_11G_CAP = 0x02 , WMI_11AG_CAP = 0x03 , WMI_11AN_CAP = 0x04 , WMI_11GN_CAP = 0x05 , WMI_11AGN_CAP = 0x06 , } 
s#ath6kl_hw_fw struct ath6kl_hw_fw { const char * dir ; const char * otp ; const char * fw ; const char * tcmd ; const char * patch ; const char * utf ; const char * testscript ; } 
s#ath6kl_hw struct ath6kl_hw { t#u32 id ; const char * name ; t#u32 dataset_patch_addr ; t#u32 app_load_addr ; t#u32 app_start_override_addr ; t#u32 board_ext_data_addr ; t#u32 reserved_ram_size ; t#u32 board_addr ; t#u32 refclk_hz ; t#u32 uarttx_pin ; t#u32 testscript_addr ; e#wmi_phy_cap cap ; t#u32 flags ; s#ath6kl_hw_fw fw ; const char * fw_board ; const char * fw_default_board ; } 
s#ath6kl_mbox_info struct ath6kl_mbox_info { t#u32 htc_addr ; t#u32 htc_ext_addr ; t#u32 htc_ext_sz ; t#u32 block_size ; t#u32 gmbox_addr ; t#u32 gmbox_sz ; } 
E#ATH6KL_FW_CAPABILITY_MAX ( 1 ) + 13 
s#ath6kl_fw_recovery struct ath6kl_fw_recovery { s#work_struct recovery_work ; unsigned long err_reason ; unsigned long hb_poll ; s#timer_list hb_timer ; t#u32 seq_num ; t#bool hb_pending ; t#u8 hb_misscnt ; t#bool enable ; } 
s#ath6kl struct ath6kl { s#device * dev ; s#wiphy * wiphy ; e#ath6kl_state state ; unsigned int testmode ; s#ath6kl_bmi bmi ; const s#ath6kl_hif_ops * hif_ops ; const s#ath6kl_htc_ops * htc_ops ; s#wmi * wmi ; int tx_pending [ E#ENDPOINT_MAX ] ; int total_tx_data_pend ; s#htc_target * htc_target ; e#ath6kl_hif_type hif_type ; void * hif_priv ; s#list_head vif_list ; t#spinlock_t list_lock ; t#u8 num_vif ; unsigned int vif_max ; t#u8 max_norm_iface ; t#u8 avail_idx_map ; t#spinlock_t lock ; s#semaphore sem ; t#u8 lrssi_roam_threshold ; s#ath6kl_version version ; t#u32 target_type ; t#u8 tx_pwr ; s#ath6kl_node_mapping node_map [ 15 ] ; t#u8 ibss_ps_enable ; t#bool ibss_if_active ; t#u8 node_num ; t#u8 next_ep_id ; s#ath6kl_cookie * cookie_list ; t#u32 cookie_count ; e#htc_endpoint_id ac2ep_map [ 4 ] ; t#bool ac_stream_active [ 4 ] ; t#u8 ac_stream_pri_map [ 4 ] ; t#u8 hiac_stream_active_pri ; t#u8 ep2ac_map [ E#ENDPOINT_MAX ] ; e#htc_endpoint_id ctrl_ep ; s#ath6kl_htc_credit_info credit_state_info ; t#u32 connect_ctrl_flags ; t#u32 user_key_ctrl ; t#u8 usr_bss_filter ; s#ath6kl_sta sta_list [ 10 ] ; t#u8 sta_list_index ; s#ath6kl_req_key ap_mode_bkey ; s#sk_buff_head mcastpsq ; t#u32 want_ch_switch ; t#u16 last_ch ; t#spinlock_t mcastpsq_lock ; t#u8 intra_bss ; s#wmi_ap_mode_stat ap_stats ; t#u8 ap_country_code [ 3 ] ; s#list_head amsdu_rx_buffer_queue ; t#u8 rx_meta_ver ; e#wlan_low_pwr_state wlan_pwr_state ; t#u8 mac_addr [ 6 ] ; struct { void * rx_report ; t#size_t rx_report_len ; } tm ; s#ath6kl_hw hw ; t#u16 conf_flags ; t#u16 suspend_mode ; t#u16 wow_suspend_mode ; t#wait_queue_head_t event_wq ; s#ath6kl_mbox_info mbox_info ; s#ath6kl_cookie cookie_mem [ ( 180 + 18 ) ] ; unsigned long flag ; t#u8 * fw_board ; t#size_t fw_board_len ; t#u8 * fw_otp ; t#size_t fw_otp_len ; t#u8 * fw ; t#size_t fw_len ; t#u8 * fw_patch ; t#size_t fw_patch_len ; t#u8 * fw_testscript ; t#size_t fw_testscript_len ; unsigned int fw_api ; unsigned long fw_capabilities [ ( ( ( ( ( E#ATH6KL_FW_CAPABILITY_MAX ) ) + ( ( typeof ( ( E#ATH6KL_FW_CAPABILITY_MAX ) ) ) ( ( 32 ) ) - 1 ) ) & ~ ( ( typeof ( ( E#ATH6KL_FW_CAPABILITY_MAX ) ) ) ( ( 32 ) ) - 1 ) ) / 32 ) ] ; s#workqueue_struct * ath6kl_wq ; s#dentry * debugfs_phy ; t#bool p2p ; t#bool wiphy_registered ; s#ath6kl_fw_recovery fw_recovery ; } 
e#ath6kl_cfg_suspend_mode enum ath6kl_cfg_suspend_mode { ATH6KL_CFG_SUSPEND_DEEPSLEEP , ATH6KL_CFG_SUSPEND_CUTPOWER , ATH6KL_CFG_SUSPEND_WOW , } 
ath6kl_cfg80211_suspend int ath6kl_cfg80211_suspend ( s#ath6kl * , e#ath6kl_cfg_suspend_mode , s#cfg80211_wowlan * ) 
ath6kl_cfg80211_resume int ath6kl_cfg80211_resume ( s#ath6kl * ) 

/* drivers/net/wireless/ath/ath6kl/core.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
ath6kl_core_tx_complete void ath6kl_core_tx_complete ( s#ath6kl * , s#sk_buff * ) 
ath6kl_core_rx_complete void ath6kl_core_rx_complete ( s#ath6kl * , s#sk_buff * , t#u8 ) 
e#ath6kl_htc_type enum ath6kl_htc_type { ATH6KL_HTC_TYPE_MBOX , ATH6KL_HTC_TYPE_PIPE , } 
ath6kl_core_init int ath6kl_core_init ( s#ath6kl * , e#ath6kl_htc_type ) 
ath6kl_core_create s#ath6kl * ath6kl_core_create ( s#device * ) 
ath6kl_core_cleanup void ath6kl_core_cleanup ( s#ath6kl * ) 
ath6kl_core_destroy void ath6kl_core_destroy ( s#ath6kl * ) 

/* drivers/net/wireless/ath/ath6kl/debug.o */
ath6kl_printk extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int ath6kl_printk ( const char * , const char * , ... ) 
ath6kl_info extern __attribute__ ( ( format ( printf , 1 , 2 ) ) ) int ath6kl_info ( const char * , ... ) 
ath6kl_err extern __attribute__ ( ( format ( printf , 1 , 2 ) ) ) int ath6kl_err ( const char * , ... ) 
ath6kl_warn extern __attribute__ ( ( format ( printf , 1 , 2 ) ) ) int ath6kl_warn ( const char * , ... ) 

/* drivers/net/wireless/ath/ath6kl/hif.o */
ath6kl_hif_rw_comp_handler int ath6kl_hif_rw_comp_handler ( void * , int ) 
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
ath6kl_hif_intr_bh_handler int ath6kl_hif_intr_bh_handler ( s#ath6kl * ) 

/* drivers/net/wireless/ath/ath6kl/init.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##pci_dev
s##iommu_group
ath6kl_stop_txrx void ath6kl_stop_txrx ( s#ath6kl * ) 

/* drivers/net/wireless/ath/ath9k/ani.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
e#ath_bus_type enum ath_bus_type { ATH_PCI , ATH_AHB , ATH_USB , } 
s#ath_bus_ops struct ath_bus_ops { e#ath_bus_type ath_bus_type ; void ( * read_cachesize ) ( s#ath_common * , int * ) ; t#bool ( * eeprom_read ) ( s#ath_common * , t#u32 , t#u16 * ) ; void ( * bt_coex_prep ) ( s#ath_common * ) ; void ( * aspm_init ) ( s#ath_common * ) ; } 
e#ath_usb_dev enum ath_usb_dev { AR9280_USB = 1 , AR9287_USB = 2 , STORAGE_DEVICE = 3 , } 
s#ath9k_hw_version struct ath9k_hw_version { t#u32 magic ; t#u16 devid ; t#u16 subvendorid ; t#u32 macVersion ; t#u16 macRev ; t#u16 phyRev ; t#u16 analog5GhzRev ; t#u16 analog2GhzRev ; e#ath_usb_dev usbdev ; } 
s#ath9k_ops_config struct ath9k_ops_config { int dma_beacon_response_time ; int sw_beacon_response_time ; int additional_swba_backoff ; int ack_6mb ; t#u32 cwm_ignore_extcca ; t#bool pcieSerDesWrite ; t#u8 pcie_clock_req ; t#u32 pcie_waen ; t#u8 analog_shiftreg ; t#u32 ofdm_trig_low ; t#u32 ofdm_trig_high ; t#u32 cck_trig_high ; t#u32 cck_trig_low ; t#u32 enable_paprd ; int serialize_regmode ; t#bool rx_intr_mitigation ; t#bool tx_intr_mitigation ; int spurmode ; t#u16 spurchans [ 5 ] [ 2 ] ; t#u8 max_txtrig_level ; t#u16 ani_poll_interval ; t#u32 aspm_l1_fix ; t#u32 xlna_gpio ; t#u32 ant_ctrl_comm2g_switch_enable ; t#bool xatten_margin_cfg ; t#bool alt_mingainidx ; } 
s#ath9k_hw_capabilities struct ath9k_hw_capabilities { t#u32 hw_caps ; t#u16 rts_aggr_limit ; t#u8 tx_chainmask ; t#u8 rx_chainmask ; t#u8 max_txchains ; t#u8 max_rxchains ; t#u8 num_gpio_pins ; t#u8 rx_hp_qdepth ; t#u8 rx_lp_qdepth ; t#u8 rx_status_len ; t#u8 tx_desc_len ; t#u8 txs_len ; } 
s#ath9k_channel struct ath9k_channel { s#ieee80211_channel * chan ; t#u16 channel ; t#u32 channelFlags ; t#u32 chanmode ; t#s16 noisefloor ; } 
s#base_eep_header struct base_eep_header { t#u16 length ; t#u16 checksum ; t#u16 version ; t#u8 opCapFlags ; t#u8 eepMisc ; t#u16 regDmn [ 2 ] ; t#u8 macAddr [ 6 ] ; t#u8 rxMask ; t#u8 txMask ; t#u16 rfSilent ; t#u16 blueToothOptions ; t#u16 deviceCap ; t#u32 binBuildNumber ; t#u8 deviceType ; t#u8 pwdclkind ; t#u8 fastClk5g ; t#u8 divChain ; t#u8 rxGainType ; t#u8 dacHiPwrMode_5G ; t#u8 openLoopPwrCntl ; t#u8 dacLpMode ; t#u8 txGainType ; t#u8 rcChainMask ; t#u8 desiredScaleCCK ; t#u8 pwr_table_offset ; t#u8 frac_n_5g ; t#u8 futureBase_3 [ 21 ] ; } 
s#spur_chan struct spur_chan { t#u16 spurChan ; t#u8 spurRangeLow ; t#u8 spurRangeHigh ; } 
s#modal_eep_header struct modal_eep_header { t#u32 antCtrlChain [ 3 ] ; t#u32 antCtrlCommon ; t#u8 antennaGainCh [ 3 ] ; t#u8 switchSettling ; t#u8 txRxAttenCh [ 3 ] ; t#u8 rxTxMarginCh [ 3 ] ; t#u8 adcDesiredSize ; t#u8 pgaDesiredSize ; t#u8 xlnaGainCh [ 3 ] ; t#u8 txEndToXpaOff ; t#u8 txEndToRxOn ; t#u8 txFrameToXpaOn ; t#u8 thresh62 ; t#u8 noiseFloorThreshCh [ 3 ] ; t#u8 xpdGain ; t#u8 xpd ; t#u8 iqCalICh [ 3 ] ; t#u8 iqCalQCh [ 3 ] ; t#u8 pdGainOverlap ; t#u8 ob ; t#u8 db ; t#u8 xpaBiasLvl ; t#u8 pwrDecreaseFor2Chain ; t#u8 pwrDecreaseFor3Chain ; t#u8 txFrameToDataStart ; t#u8 txFrameToPaOn ; t#u8 ht40PowerIncForPdadc ; t#u8 bswAtten [ 3 ] ; t#u8 bswMargin [ 3 ] ; t#u8 swSettleHt40 ; t#u8 xatten2Db [ 3 ] ; t#u8 xatten2Margin [ 3 ] ; t#u8 ob_ch1 ; t#u8 db_ch1 ; t#u8 lna_ctl ; t#u8 miscBits ; t#u16 xpaBiasLvlFreq [ 3 ] ; t#u8 futureModal [ 6 ] ; s#spur_chan spurChans [ 5 ] ; } 
s#cal_data_per_freq struct cal_data_per_freq { t#u8 pwrPdg [ 4 ] [ 5 ] ; t#u8 vpdPdg [ 4 ] [ 5 ] ; } 
s#cal_target_power_leg struct cal_target_power_leg { t#u8 bChannel ; t#u8 tPow2x [ 4 ] ; } 
s#cal_target_power_ht struct cal_target_power_ht { t#u8 bChannel ; t#u8 tPow2x [ 8 ] ; } 
s#cal_ctl_edges struct cal_ctl_edges { t#u8 bChannel ; t#u8 ctl ; } 
s#cal_ctl_data struct cal_ctl_data { s#cal_ctl_edges ctlEdges [ 3 ] [ 8 ] ; } 
s#ar5416_eeprom_def struct ar5416_eeprom_def { s#base_eep_header baseEepHeader ; t#u8 custData [ 64 ] ; s#modal_eep_header modalHeader [ 2 ] ; t#u8 calFreqPier5G [ 8 ] ; t#u8 calFreqPier2G [ 4 ] ; s#cal_data_per_freq calPierData5G [ 3 ] [ 8 ] ; s#cal_data_per_freq calPierData2G [ 3 ] [ 4 ] ; s#cal_target_power_leg calTargetPower5G [ 8 ] ; s#cal_target_power_ht calTargetPower5GHT20 [ 8 ] ; s#cal_target_power_ht calTargetPower5GHT40 [ 8 ] ; s#cal_target_power_leg calTargetPowerCck [ 3 ] ; s#cal_target_power_leg calTargetPower2G [ 4 ] ; s#cal_target_power_ht calTargetPower2GHT20 [ 4 ] ; s#cal_target_power_ht calTargetPower2GHT40 [ 4 ] ; t#u8 ctlIndex [ 24 ] ; s#cal_ctl_data ctlData [ 24 ] ; t#u8 padding ; } 
s#base_eep_header_4k struct base_eep_header_4k { t#u16 length ; t#u16 checksum ; t#u16 version ; t#u8 opCapFlags ; t#u8 eepMisc ; t#u16 regDmn [ 2 ] ; t#u8 macAddr [ 6 ] ; t#u8 rxMask ; t#u8 txMask ; t#u16 rfSilent ; t#u16 blueToothOptions ; t#u16 deviceCap ; t#u32 binBuildNumber ; t#u8 deviceType ; t#u8 txGainType ; } 
s#modal_eep_4k_header struct modal_eep_4k_header { t#u32 antCtrlChain [ 1 ] ; t#u32 antCtrlCommon ; t#u8 antennaGainCh [ 1 ] ; t#u8 switchSettling ; t#u8 txRxAttenCh [ 1 ] ; t#u8 rxTxMarginCh [ 1 ] ; t#u8 adcDesiredSize ; t#u8 pgaDesiredSize ; t#u8 xlnaGainCh [ 1 ] ; t#u8 txEndToXpaOff ; t#u8 txEndToRxOn ; t#u8 txFrameToXpaOn ; t#u8 thresh62 ; t#u8 noiseFloorThreshCh [ 1 ] ; t#u8 xpdGain ; t#u8 xpd ; t#u8 iqCalICh [ 1 ] ; t#u8 iqCalQCh [ 1 ] ; t#u8 pdGainOverlap ; t#u8 ob_0 : 4 , ob_1 : 4 ; t#u8 db1_0 : 4 , db1_1 : 4 ; t#u8 xpaBiasLvl ; t#u8 txFrameToDataStart ; t#u8 txFrameToPaOn ; t#u8 ht40PowerIncForPdadc ; t#u8 bswAtten [ 1 ] ; t#u8 bswMargin [ 1 ] ; t#u8 swSettleHt40 ; t#u8 xatten2Db [ 1 ] ; t#u8 xatten2Margin [ 1 ] ; t#u8 db2_0 : 4 , db2_1 : 4 ; t#u8 version ; t#u8 ob_2 : 4 , ob_3 : 4 ; t#u8 ob_4 : 4 , antdiv_ctl1 : 4 ; t#u8 db1_2 : 4 , db1_3 : 4 ; t#u8 db1_4 : 4 , antdiv_ctl2 : 4 ; t#u8 db2_2 : 4 , db2_3 : 4 ; t#u8 db2_4 : 4 , reserved : 4 ; t#u8 tx_diversity ; t#u8 flc_pwr_thresh ; t#u8 bb_scale_smrt_antenna ; t#u8 futureModal [ 1 ] ; s#spur_chan spurChans [ 5 ] ; } 
s#cal_data_per_freq_4k struct cal_data_per_freq_4k { t#u8 pwrPdg [ 2 ] [ 5 ] ; t#u8 vpdPdg [ 2 ] [ 5 ] ; } 
s#cal_ctl_data_4k struct cal_ctl_data_4k { s#cal_ctl_edges ctlEdges [ 1 ] [ 4 ] ; } 
s#ar5416_eeprom_4k struct ar5416_eeprom_4k { s#base_eep_header_4k baseEepHeader ; t#u8 custData [ 20 ] ; s#modal_eep_4k_header modalHeader ; t#u8 calFreqPier2G [ 3 ] ; s#cal_data_per_freq_4k calPierData2G [ 1 ] [ 3 ] ; s#cal_target_power_leg calTargetPowerCck [ 3 ] ; s#cal_target_power_leg calTargetPower2G [ 3 ] ; s#cal_target_power_ht calTargetPower2GHT20 [ 3 ] ; s#cal_target_power_ht calTargetPower2GHT40 [ 3 ] ; t#u8 ctlIndex [ 12 ] ; s#cal_ctl_data_4k ctlData [ 12 ] ; t#u8 padding ; } 
t#int8_t typedef t#__s8 int8_t 
s#base_eep_ar9287_header struct base_eep_ar9287_header { t#u16 length ; t#u16 checksum ; t#u16 version ; t#u8 opCapFlags ; t#u8 eepMisc ; t#u16 regDmn [ 2 ] ; t#u8 macAddr [ 6 ] ; t#u8 rxMask ; t#u8 txMask ; t#u16 rfSilent ; t#u16 blueToothOptions ; t#u16 deviceCap ; t#u32 binBuildNumber ; t#u8 deviceType ; t#u8 openLoopPwrCntl ; t#int8_t pwrTableOffset ; t#int8_t tempSensSlope ; t#int8_t tempSensSlopePalOn ; t#u8 futureBase [ 29 ] ; } 
s#modal_eep_ar9287_header struct modal_eep_ar9287_header { t#u32 antCtrlChain [ 2 ] ; t#u32 antCtrlCommon ; t#int8_t antennaGainCh [ 2 ] ; t#u8 switchSettling ; t#u8 txRxAttenCh [ 2 ] ; t#u8 rxTxMarginCh [ 2 ] ; t#int8_t adcDesiredSize ; t#u8 txEndToXpaOff ; t#u8 txEndToRxOn ; t#u8 txFrameToXpaOn ; t#u8 thresh62 ; t#int8_t noiseFloorThreshCh [ 2 ] ; t#u8 xpdGain ; t#u8 xpd ; t#int8_t iqCalICh [ 2 ] ; t#int8_t iqCalQCh [ 2 ] ; t#u8 pdGainOverlap ; t#u8 xpaBiasLvl ; t#u8 txFrameToDataStart ; t#u8 txFrameToPaOn ; t#u8 ht40PowerIncForPdadc ; t#u8 bswAtten [ 2 ] ; t#u8 bswMargin [ 2 ] ; t#u8 swSettleHt40 ; t#u8 version ; t#u8 db1 ; t#u8 db2 ; t#u8 ob_cck ; t#u8 ob_psk ; t#u8 ob_qam ; t#u8 ob_pal_off ; t#u8 futureModal [ 30 ] ; s#spur_chan spurChans [ 5 ] ; } 
s#cal_data_op_loop_ar9287 struct cal_data_op_loop_ar9287 { t#u8 pwrPdg [ 2 ] [ 5 ] ; t#u8 vpdPdg [ 2 ] [ 5 ] ; t#u8 pcdac [ 2 ] [ 5 ] ; t#u8 empty [ 2 ] [ 5 ] ; } 
s#cal_data_per_freq_ar9287 struct cal_data_per_freq_ar9287 { t#u8 pwrPdg [ 4 ] [ 1 ] ; t#u8 vpdPdg [ 4 ] [ 1 ] ; } 
u#cal_data_per_freq_ar9287_u union cal_data_per_freq_ar9287_u { s#cal_data_op_loop_ar9287 calDataOpen ; s#cal_data_per_freq_ar9287 calDataClose ; } 
s#cal_ctl_data_ar9287 struct cal_ctl_data_ar9287 { s#cal_ctl_edges ctlEdges [ 2 ] [ 4 ] ; } 
s#ar9287_eeprom struct ar9287_eeprom { s#base_eep_ar9287_header baseEepHeader ; t#u8 custData [ 32 ] ; s#modal_eep_ar9287_header modalHeader ; t#u8 calFreqPier2G [ 3 ] ; u#cal_data_per_freq_ar9287_u calPierData2G [ 2 ] [ 3 ] ; s#cal_target_power_leg calTargetPowerCck [ 3 ] ; s#cal_target_power_leg calTargetPower2G [ 3 ] ; s#cal_target_power_ht calTargetPower2GHT20 [ 3 ] ; s#cal_target_power_ht calTargetPower2GHT40 [ 3 ] ; t#u8 ctlIndex [ 12 ] ; s#cal_ctl_data_ar9287 ctlData [ 12 ] ; t#u8 padding ; } 
s#eepFlags struct eepFlags { t#u8 opFlags ; t#u8 eepMisc ; } 
s#ar9300_base_eep_hdr struct ar9300_base_eep_hdr { t#__le16 regDmn [ 2 ] ; t#u8 txrxMask ; s#eepFlags opCapFlags ; t#u8 rfSilent ; t#u8 blueToothOptions ; t#u8 deviceCap ; t#u8 deviceType ; t#int8_t pwrTableOffset ; t#u8 params_for_tuning_caps [ 2 ] ; t#u8 featureEnable ; t#u8 miscConfiguration ; t#u8 eepromWriteEnableGpio ; t#u8 wlanDisableGpio ; t#u8 wlanLedGpio ; t#u8 rxBandSelectGpio ; t#u8 txrxgain ; t#__le32 swreg ; } 
s#ar9300_modal_eep_header struct ar9300_modal_eep_header { t#__le32 antCtrlCommon ; t#__le32 antCtrlCommon2 ; t#__le16 antCtrlChain [ 3 ] ; t#u8 xatten1DB [ 3 ] ; t#u8 xatten1Margin [ 3 ] ; t#int8_t tempSlope ; t#int8_t voltSlope ; t#u8 spurChans [ 5 ] ; t#int8_t noiseFloorThreshCh [ 3 ] ; t#u8 reserved [ 11 ] ; t#int8_t quick_drop ; t#u8 xpaBiasLvl ; t#u8 txFrameToDataStart ; t#u8 txFrameToPaOn ; t#u8 txClip ; t#int8_t antennaGain ; t#u8 switchSettling ; t#int8_t adcDesiredSize ; t#u8 txEndToXpaOff ; t#u8 txEndToRxOn ; t#u8 txFrameToXpaOn ; t#u8 thresh62 ; t#__le32 papdRateMaskHt20 ; t#__le32 papdRateMaskHt40 ; t#__le16 switchcomspdt ; t#u8 xlna_bias_strength ; t#u8 futureModal [ 7 ] ; } 
s#ar9300_BaseExtension_1 struct ar9300_BaseExtension_1 { t#u8 ant_div_control ; t#u8 future [ 3 ] ; t#u8 tempslopextension [ 8 ] ; t#int8_t quick_drop_low ; t#int8_t quick_drop_high ; } 
s#ar9300_cal_data_per_freq_op_loop struct ar9300_cal_data_per_freq_op_loop { t#int8_t refPower ; t#u8 voltMeas ; t#u8 tempMeas ; t#int8_t rxNoisefloorCal ; t#int8_t rxNoisefloorPower ; t#u8 rxTempMeas ; } 
s#cal_tgt_pow_legacy struct cal_tgt_pow_legacy { t#u8 tPow2x [ 4 ] ; } 
s#cal_tgt_pow_ht struct cal_tgt_pow_ht { t#u8 tPow2x [ 14 ] ; } 
s#cal_ctl_data_2g struct cal_ctl_data_2g { t#u8 ctlEdges [ 4 ] ; } 
s#ar9300_BaseExtension_2 struct ar9300_BaseExtension_2 { t#int8_t tempSlopeLow ; t#int8_t tempSlopeHigh ; t#u8 xatten1DBLow [ 3 ] ; t#u8 xatten1MarginLow [ 3 ] ; t#u8 xatten1DBHigh [ 3 ] ; t#u8 xatten1MarginHigh [ 3 ] ; } 
s#cal_ctl_data_5g struct cal_ctl_data_5g { t#u8 ctlEdges [ 8 ] ; } 
s#ar9300_eeprom struct ar9300_eeprom { t#u8 eepromVersion ; t#u8 templateVersion ; t#u8 macAddr [ 6 ] ; t#u8 custData [ 20 ] ; s#ar9300_base_eep_hdr baseEepHeader ; s#ar9300_modal_eep_header modalHeader2G ; s#ar9300_BaseExtension_1 base_ext1 ; t#u8 calFreqPier2G [ 3 ] ; s#ar9300_cal_data_per_freq_op_loop calPierData2G [ 3 ] [ 3 ] ; t#u8 calTarget_freqbin_Cck [ 2 ] ; t#u8 calTarget_freqbin_2G [ 3 ] ; t#u8 calTarget_freqbin_2GHT20 [ 3 ] ; t#u8 calTarget_freqbin_2GHT40 [ 3 ] ; s#cal_tgt_pow_legacy calTargetPowerCck [ 2 ] ; s#cal_tgt_pow_legacy calTargetPower2G [ 3 ] ; s#cal_tgt_pow_ht calTargetPower2GHT20 [ 3 ] ; s#cal_tgt_pow_ht calTargetPower2GHT40 [ 3 ] ; t#u8 ctlIndex_2G [ 12 ] ; t#u8 ctl_freqbin_2G [ 12 ] [ 4 ] ; s#cal_ctl_data_2g ctlPowerData_2G [ 12 ] ; s#ar9300_modal_eep_header modalHeader5G ; s#ar9300_BaseExtension_2 base_ext2 ; t#u8 calFreqPier5G [ 8 ] ; s#ar9300_cal_data_per_freq_op_loop calPierData5G [ 3 ] [ 8 ] ; t#u8 calTarget_freqbin_5G [ 8 ] ; t#u8 calTarget_freqbin_5GHT20 [ 8 ] ; t#u8 calTarget_freqbin_5GHT40 [ 8 ] ; s#cal_tgt_pow_legacy calTargetPower5G [ 8 ] ; s#cal_tgt_pow_ht calTargetPower5GHT20 [ 8 ] ; s#cal_tgt_pow_ht calTargetPower5GHT40 [ 8 ] ; t#u8 ctlIndex_5G [ 9 ] ; t#u8 ctl_freqbin_5G [ 9 ] [ 8 ] ; s#cal_ctl_data_5g ctlPowerData_5G [ 9 ] ; } 
e#eeprom_param enum eeprom_param { EEP_NFTHRESH_5 , EEP_NFTHRESH_2 , EEP_MAC_MSW , EEP_MAC_MID , EEP_MAC_LSW , EEP_REG_0 , EEP_OP_CAP , EEP_OP_MODE , EEP_RF_SILENT , EEP_OB_5 , EEP_DB_5 , EEP_OB_2 , EEP_DB_2 , EEP_MINOR_REV , EEP_TX_MASK , EEP_RX_MASK , EEP_FSTCLK_5G , EEP_RXGAIN_TYPE , EEP_OL_PWRCTRL , EEP_TXGAIN_TYPE , EEP_RC_CHAIN_MASK , EEP_DAC_HPWR_5G , EEP_FRAC_N_5G , EEP_DEV_TYPE , EEP_TEMPSENSE_SLOPE , EEP_TEMPSENSE_SLOPE_PAL_ON , EEP_PWR_TABLE_OFFSET , EEP_PAPRD , EEP_MODAL_VER , EEP_ANT_DIV_CTL1 , EEP_CHAIN_MASK_REDUCE , EEP_ANTENNA_GAIN_2G , EEP_ANTENNA_GAIN_5G , } 
s#eeprom_ops struct eeprom_ops { int ( * check_eeprom ) ( s#ath_hw * ) ; t#u32 ( * get_eeprom ) ( s#ath_hw * , e#eeprom_param ) ; t#bool ( * fill_eeprom ) ( s#ath_hw * ) ; t#u32 ( * dump_eeprom ) ( s#ath_hw * , t#bool , t#u8 * , t#u32 , t#u32 ) ; int ( * get_eeprom_ver ) ( s#ath_hw * ) ; int ( * get_eeprom_rev ) ( s#ath_hw * ) ; void ( * set_board_values ) ( s#ath_hw * , s#ath9k_channel * ) ; void ( * set_addac ) ( s#ath_hw * , s#ath9k_channel * ) ; void ( * set_txpower ) ( s#ath_hw * , s#ath9k_channel * , t#u16 , t#u8 , t#u8 , t#bool ) ; t#u16 ( * get_spur_channel ) ( s#ath_hw * , t#u16 , t#bool ) ; } 
s#ath_nf_limits struct ath_nf_limits { t#s16 max ; t#s16 min ; t#s16 nominal ; } 
e#ath9k_power_mode enum ath9k_power_mode { ATH9K_PM_AWAKE = 0 , ATH9K_PM_FULL_SLEEP , ATH9K_PM_NETWORK_SLEEP , ATH9K_PM_UNDEFINED } 
s#ath9k_nfcal_hist struct ath9k_nfcal_hist { t#int16_t nfCalBuffer [ 5 ] ; t#u8 currIndex ; t#int16_t privNF ; t#u8 invalidNFcount ; } 
s#ath9k_hw_cal_data struct ath9k_hw_cal_data { t#u16 channel ; t#u32 channelFlags ; t#u32 chanmode ; t#int32_t CalValid ; t#int8_t iCoff ; t#int8_t qCoff ; t#bool rtt_done ; t#bool paprd_packet_sent ; t#bool paprd_done ; t#bool nfcal_pending ; t#bool nfcal_interference ; t#bool done_txiqcal_once ; t#bool done_txclcal_once ; t#u16 small_signal_gain [ 3 ] ; t#u32 pa_table [ 3 ] [ 24 ] ; t#u32 num_measures [ 3 ] ; int tx_corr_coeff [ 8 ] [ 3 ] ; t#u32 tx_clcal [ 3 ] [ 16 ] ; t#u32 rtt_table [ 3 ] [ 6 ] ; s#ath9k_nfcal_hist nfCalHist [ 6 ] ; } 
s#ath9k_pacal_info struct ath9k_pacal_info { t#int32_t prev_offset ; t#int8_t max_skipcount ; t#int8_t skipcount ; } 
s#ath9k_mib_stats struct ath9k_mib_stats { t#u32 ackrcv_bad ; t#u32 rts_bad ; t#u32 rts_good ; t#u32 fcs_bad ; t#u32 beacons ; } 
s#ar5416Stats struct ar5416Stats { t#u32 ast_ani_spurup ; t#u32 ast_ani_spurdown ; t#u32 ast_ani_ofdmon ; t#u32 ast_ani_ofdmoff ; t#u32 ast_ani_cckhigh ; t#u32 ast_ani_ccklow ; t#u32 ast_ani_stepup ; t#u32 ast_ani_stepdown ; t#u32 ast_ani_ofdmerrs ; t#u32 ast_ani_cckerrs ; t#u32 ast_ani_reset ; t#u32 ast_ani_lneg_or_lzero ; t#u32 avgbrssi ; s#ath9k_mib_stats ast_mibstats ; } 
e#ath9k_tx_queue enum ath9k_tx_queue { ATH9K_TX_QUEUE_INACTIVE = 0 , ATH9K_TX_QUEUE_DATA , ATH9K_TX_QUEUE_BEACON , ATH9K_TX_QUEUE_CAB , ATH9K_TX_QUEUE_UAPSD , ATH9K_TX_QUEUE_PSPOLL } 
e#ath9k_tx_queue_flags enum ath9k_tx_queue_flags { TXQ_FLAG_TXINT_ENABLE = 0x0001 , TXQ_FLAG_TXDESCINT_ENABLE = 0x0002 , TXQ_FLAG_TXEOLINT_ENABLE = 0x0004 , TXQ_FLAG_TXURNINT_ENABLE = 0x0008 , TXQ_FLAG_BACKOFF_DISABLE = 0x0010 , TXQ_FLAG_COMPRESSION_ENABLE = 0x0020 , TXQ_FLAG_RDYTIME_EXP_POLICY_ENABLE = 0x0040 , TXQ_FLAG_FRAG_BURST_BACKOFF_ENABLE = 0x0080 , } 
s#ath9k_tx_queue_info struct ath9k_tx_queue_info { t#u32 tqi_ver ; e#ath9k_tx_queue tqi_type ; int tqi_subtype ; e#ath9k_tx_queue_flags tqi_qflags ; t#u32 tqi_priority ; t#u32 tqi_aifs ; t#u32 tqi_cwmin ; t#u32 tqi_cwmax ; t#u16 tqi_shretry ; t#u16 tqi_lgretry ; t#u32 tqi_cbrPeriod ; t#u32 tqi_cbrOverflowLimit ; t#u32 tqi_burstTime ; t#u32 tqi_readyTime ; t#u32 tqi_physCompBuf ; t#u32 tqi_intFlags ; } 
E#ATH9K_INT_TIM 0x00200000 
E#ATH9K_INT_DTIM 0x00400000 
E#ATH9K_INT_DTIMSYNC 0x00800000 
E#ATH9K_INT_TSFOOR 0x04000000 
E#ATH9K_INT_CABEND 0x02000000 
E#ATH9K_INT_RXNOFRM 0x00000008 
E#ATH9K_INT_RXDESC 0x00000002 
E#ATH9K_INT_RXEOL 0x00000010 
E#ATH9K_INT_RXORN 0x00000020 
E#ATH9K_INT_TXURN 0x00000800 
E#ATH9K_INT_TXDESC 0x00000080 
E#ATH9K_INT_MIB 0x00001000 
E#ATH9K_INT_RXPHY 0x00004000 
E#ATH9K_INT_RXKCM 0x00008000 
E#ATH9K_INT_SWBA 0x00010000 
E#ATH9K_INT_BMISS 0x00040000 
E#ATH9K_INT_GPIO 0x01000000 
e#ath9k_int enum ath9k_int { ATH9K_INT_RX = 0x00000001 , ATH9K_INT_RXDESC = 0x00000002 , ATH9K_INT_RXHP = 0x00000001 , ATH9K_INT_RXLP = 0x00000002 , ATH9K_INT_RXNOFRM = 0x00000008 , ATH9K_INT_RXEOL = 0x00000010 , ATH9K_INT_RXORN = 0x00000020 , ATH9K_INT_TX = 0x00000040 , ATH9K_INT_TXDESC = 0x00000080 , ATH9K_INT_TIM_TIMER = 0x00000100 , ATH9K_INT_MCI = 0x00000200 , ATH9K_INT_BB_WATCHDOG = 0x00000400 , ATH9K_INT_TXURN = 0x00000800 , ATH9K_INT_MIB = 0x00001000 , ATH9K_INT_RXPHY = 0x00004000 , ATH9K_INT_RXKCM = 0x00008000 , ATH9K_INT_SWBA = 0x00010000 , ATH9K_INT_BMISS = 0x00040000 , ATH9K_INT_BNR = 0x00100000 , ATH9K_INT_TIM = 0x00200000 , ATH9K_INT_DTIM = 0x00400000 , ATH9K_INT_DTIMSYNC = 0x00800000 , ATH9K_INT_GPIO = 0x01000000 , ATH9K_INT_CABEND = 0x02000000 , ATH9K_INT_TSFOOR = 0x04000000 , ATH9K_INT_GENTIMER = 0x08000000 , ATH9K_INT_CST = 0x10000000 , ATH9K_INT_GTT = 0x20000000 , ATH9K_INT_FATAL = 0x40000000 , ATH9K_INT_GLOBAL = 0x80000000 , ATH9K_INT_BMISC = E#ATH9K_INT_TIM | E#ATH9K_INT_DTIM | E#ATH9K_INT_DTIMSYNC | E#ATH9K_INT_TSFOOR | E#ATH9K_INT_CABEND , ATH9K_INT_COMMON = E#ATH9K_INT_RXNOFRM | E#ATH9K_INT_RXDESC | E#ATH9K_INT_RXEOL | E#ATH9K_INT_RXORN | E#ATH9K_INT_TXURN | E#ATH9K_INT_TXDESC | E#ATH9K_INT_MIB | E#ATH9K_INT_RXPHY | E#ATH9K_INT_RXKCM | E#ATH9K_INT_SWBA | E#ATH9K_INT_BMISS | E#ATH9K_INT_GPIO , ATH9K_INT_NOCARD = 0xffffffff } 
s#ath9k_percal_data struct ath9k_percal_data { t#u32 calType ; t#u32 calNumSamples ; t#u32 calCountMax ; void ( * calCollect ) ( s#ath_hw * ) ; void ( * calPostProc ) ( s#ath_hw * , t#u8 ) ; } 
e#ath9k_cal_state enum ath9k_cal_state { CAL_INACTIVE , CAL_WAITING , CAL_RUNNING , CAL_DONE } 
s#ath9k_cal_list struct ath9k_cal_list { const s#ath9k_percal_data * calData ; e#ath9k_cal_state calState ; s#ath9k_cal_list * calNext ; } 
e#ath9k_ani_cmd enum ath9k_ani_cmd { ATH9K_ANI_OFDM_WEAK_SIGNAL_DETECTION = 0x1 , ATH9K_ANI_FIRSTEP_LEVEL = 0x2 , ATH9K_ANI_SPUR_IMMUNITY_LEVEL = 0x4 , ATH9K_ANI_MRC_CCK = 0x8 , ATH9K_ANI_ALL = 0xfff } 
s#ath_hw_radar_conf struct ath_hw_radar_conf { unsigned int pulse_inband ; unsigned int pulse_inband_step ; unsigned int pulse_height ; unsigned int pulse_rssi ; unsigned int pulse_maxlen ; unsigned int radar_rssi ; unsigned int radar_inband ; int fir_power ; t#bool ext_channel ; } 
s#ath_hw_private_ops struct ath_hw_private_ops { void ( * init_cal_settings ) ( s#ath_hw * ) ; t#bool ( * init_cal ) ( s#ath_hw * , s#ath9k_channel * ) ; void ( * init_mode_gain_regs ) ( s#ath_hw * ) ; void ( * setup_calibration ) ( s#ath_hw * , s#ath9k_cal_list * ) ; int ( * rf_set_freq ) ( s#ath_hw * , s#ath9k_channel * ) ; void ( * spur_mitigate_freq ) ( s#ath_hw * , s#ath9k_channel * ) ; t#bool ( * set_rf_regs ) ( s#ath_hw * , s#ath9k_channel * , t#u16 ) ; void ( * set_channel_regs ) ( s#ath_hw * , s#ath9k_channel * ) ; void ( * init_bb ) ( s#ath_hw * , s#ath9k_channel * ) ; int ( * process_ini ) ( s#ath_hw * , s#ath9k_channel * ) ; void ( * olc_init ) ( s#ath_hw * ) ; void ( * set_rfmode ) ( s#ath_hw * , s#ath9k_channel * ) ; void ( * mark_phy_inactive ) ( s#ath_hw * ) ; void ( * set_delta_slope ) ( s#ath_hw * , s#ath9k_channel * ) ; t#bool ( * rfbus_req ) ( s#ath_hw * ) ; void ( * rfbus_done ) ( s#ath_hw * ) ; void ( * restore_chainmask ) ( s#ath_hw * ) ; t#u32 ( * compute_pll_control ) ( s#ath_hw * , s#ath9k_channel * ) ; t#bool ( * ani_control ) ( s#ath_hw * , e#ath9k_ani_cmd , int ) ; void ( * do_getnf ) ( s#ath_hw * , t#int16_t [ 6 ] ) ; void ( * set_radar_params ) ( s#ath_hw * , s#ath_hw_radar_conf * ) ; int ( * fast_chan_change ) ( s#ath_hw * , s#ath9k_channel * , t#u8 * ) ; void ( * ani_cache_ini_regs ) ( s#ath_hw * ) ; } 
e#aggr_type enum aggr_type { AGGR_BUF_NONE , AGGR_BUF_FIRST , AGGR_BUF_MIDDLE , AGGR_BUF_LAST , } 
s#ath9k_11n_rate_series struct ath9k_11n_rate_series { t#u32 Tries ; t#u32 Rate ; t#u32 PktDuration ; t#u32 ChSel ; t#u32 RateFlags ; } 
e#ath9k_pkt_type enum ath9k_pkt_type { ATH9K_PKT_TYPE_NORMAL = 0 , ATH9K_PKT_TYPE_ATIM , ATH9K_PKT_TYPE_PSPOLL , ATH9K_PKT_TYPE_BEACON , ATH9K_PKT_TYPE_PROBE_RESP , ATH9K_PKT_TYPE_CHIRP , ATH9K_PKT_TYPE_GRP_POLL , } 
e#ath9k_key_type enum ath9k_key_type { ATH9K_KEY_TYPE_CLEAR , ATH9K_KEY_TYPE_WEP , ATH9K_KEY_TYPE_AES , ATH9K_KEY_TYPE_TKIP , } 
s#ath_tx_info struct ath_tx_info { t#u8 qcu ; t#bool is_first ; t#bool is_last ; e#aggr_type aggr ; t#u8 ndelim ; t#u16 aggr_len ; t#dma_addr_t link ; int pkt_len ; t#u32 flags ; t#dma_addr_t buf_addr [ 4 ] ; int buf_len [ 4 ] ; s#ath9k_11n_rate_series rates [ 4 ] ; t#u8 rtscts_rate ; t#bool dur_update ; e#ath9k_pkt_type type ; e#ath9k_key_type keytype ; t#u8 keyix ; t#u8 txpower ; } 
s#ath_tx_status struct ath_tx_status { t#u32 ts_tstamp ; t#u16 ts_seqnum ; t#u8 ts_status ; t#u8 ts_rateindex ; t#int8_t ts_rssi ; t#u8 ts_shortretry ; t#u8 ts_longretry ; t#u8 ts_virtcol ; t#u8 ts_flags ; t#int8_t ts_rssi_ctl0 ; t#int8_t ts_rssi_ctl1 ; t#int8_t ts_rssi_ctl2 ; t#int8_t ts_rssi_ext0 ; t#int8_t ts_rssi_ext1 ; t#int8_t ts_rssi_ext2 ; t#u8 qid ; t#u16 desc_id ; t#u8 tid ; t#u32 ba_low ; t#u32 ba_high ; t#u32 evm0 ; t#u32 evm1 ; t#u32 evm2 ; } 
s#ath_hw_antcomb_conf struct ath_hw_antcomb_conf { t#u8 main_lna_conf ; t#u8 alt_lna_conf ; t#u8 fast_div_bias ; t#u8 main_gaintb ; t#u8 alt_gaintb ; int lna1_lna2_delta ; t#u8 div_group ; } 
s#ath_spec_scan struct ath_spec_scan { t#bool enabled ; t#bool short_repeat ; t#bool endless ; t#u8 count ; t#u8 period ; t#u8 fft_period ; } 
s#ath_hw_ops struct ath_hw_ops { void ( * config_pci_powersave ) ( s#ath_hw * , t#bool ) ; void ( * rx_enable ) ( s#ath_hw * ) ; void ( * set_desc_link ) ( void * , t#u32 ) ; t#bool ( * calibrate ) ( s#ath_hw * , s#ath9k_channel * , t#u8 , t#bool ) ; t#bool ( * get_isr ) ( s#ath_hw * , e#ath9k_int * ) ; void ( * set_txdesc ) ( s#ath_hw * , void * , s#ath_tx_info * ) ; int ( * proc_txdesc ) ( s#ath_hw * , void * , s#ath_tx_status * ) ; void ( * antdiv_comb_conf_get ) ( s#ath_hw * , s#ath_hw_antcomb_conf * ) ; void ( * antdiv_comb_conf_set ) ( s#ath_hw * , s#ath_hw_antcomb_conf * ) ; void ( * spectral_scan_config ) ( s#ath_hw * , s#ath_spec_scan * ) ; void ( * spectral_scan_trigger ) ( s#ath_hw * ) ; void ( * spectral_scan_wait ) ( s#ath_hw * ) ; void ( * set_bt_ant_diversity ) ( s#ath_hw * , t#bool ) ; } 
s#ath9k_ani_default struct ath9k_ani_default { t#u16 m1ThreshLow ; t#u16 m2ThreshLow ; t#u16 m1Thresh ; t#u16 m2Thresh ; t#u16 m2CountThr ; t#u16 m2CountThrLow ; t#u16 m1ThreshLowExt ; t#u16 m2ThreshLowExt ; t#u16 m1ThreshExt ; t#u16 m2ThreshExt ; t#u16 firstep ; t#u16 firstepLow ; t#u16 cycpwrThr1 ; t#u16 cycpwrThr1Ext ; } 
s#ar5416AniState struct ar5416AniState { t#u8 noiseImmunityLevel ; t#u8 ofdmNoiseImmunityLevel ; t#u8 cckNoiseImmunityLevel ; t#bool ofdmsTurn ; t#u8 mrcCCK ; t#u8 spurImmunityLevel ; t#u8 firstepLevel ; t#bool ofdmWeakSigDetect ; t#u32 listenTime ; t#u32 ofdmPhyErrCount ; t#u32 cckPhyErrCount ; s#ath9k_ani_default iniDef ; } 
e#ath_btcoex_scheme enum ath_btcoex_scheme { ATH_BTCOEX_CFG_NONE , ATH_BTCOEX_CFG_2WIRE , ATH_BTCOEX_CFG_3WIRE , } 
s#ath9k_hw_mci struct ath9k_hw_mci { t#u32 raw_intr ; t#u32 rx_msg_intr ; t#u32 cont_status ; t#u32 gpm_addr ; t#u32 gpm_len ; t#u32 gpm_idx ; t#u32 sched_addr ; t#u32 wlan_channels [ 4 ] ; t#u32 wlan_cal_seq ; t#u32 wlan_cal_done ; t#u32 config ; t#u8 * gpm_buf ; t#bool ready ; t#bool update_2g5g ; t#bool is_2g ; t#bool query_bt ; t#bool unhalt_bt_gpm ; t#bool halted_bt_gpm ; t#bool need_flush_btinfo ; t#bool bt_version_known ; t#bool wlan_channels_update ; t#u8 wlan_ver_major ; t#u8 wlan_ver_minor ; t#u8 bt_ver_major ; t#u8 bt_ver_minor ; t#u8 bt_state ; t#u8 stomp_ftp ; t#bool concur_tx ; t#u32 last_recovery ; } 
E#ATH_BTCOEX_STOMP_MAX 5 
s#ath_btcoex_hw struct ath_btcoex_hw { e#ath_btcoex_scheme scheme ; s#ath9k_hw_mci mci ; t#bool enabled ; t#u8 wlanactive_gpio ; t#u8 btactive_gpio ; t#u8 btpriority_gpio ; t#u32 bt_coex_mode ; t#u32 bt_coex_weights ; t#u32 bt_coex_mode2 ; t#u32 bt_weight [ 4 ] ; t#u32 wlan_weight [ 4 ] ; t#u8 tx_prio [ E#ATH_BTCOEX_STOMP_MAX ] ; } 
s#ar5416IniArray struct ar5416IniArray { t#u32 * ia_array ; t#u32 ia_rows ; t#u32 ia_columns ; } 
E#ATH_INI_NUM_SPLIT ( 0 ) + 3 
s#ath_gen_timer struct ath_gen_timer { void ( * trigger ) ( void * ) ; void ( * overflow ) ( void * ) ; void * arg ; t#u8 index ; } 
s#ath_gen_timer_table struct ath_gen_timer_table { t#u32 gen_timer_index [ 32 ] ; s#ath_gen_timer * timers [ 16 ] ; union { unsigned long timer_bits ; t#u16 val ; } timer_mask ; } 
s##ar9003_txs
s#ath_hw struct ath_hw { s#ath_ops reg_ops ; s#device * dev ; s#ieee80211_hw * hw ; s#ath_common common ; s#ath9k_hw_version hw_version ; s#ath9k_ops_config config ; s#ath9k_hw_capabilities caps ; s#ath9k_channel channels [ 38 ] ; s#ath9k_channel * curchan ; union { s#ar5416_eeprom_def def ; s#ar5416_eeprom_4k map4k ; s#ar9287_eeprom map9287 ; s#ar9300_eeprom ar9300_eep ; } eeprom ; const s#eeprom_ops * eep_ops ; t#bool sw_mgmt_crypto ; t#bool is_pciexpress ; t#bool aspm_enabled ; t#bool is_monitoring ; t#bool need_an_top2_fixup ; t#u16 tx_trig_level ; t#u32 nf_regs [ 6 ] ; s#ath_nf_limits nf_2g ; s#ath_nf_limits nf_5g ; t#u16 rfsilent ; t#u32 rfkill_gpio ; t#u32 rfkill_polarity ; t#u32 ah_flags ; t#bool reset_power_on ; t#bool htc_reset_init ; e#nl80211_iftype opmode ; e#ath9k_power_mode power_mode ; t#s8 noise ; s#ath9k_hw_cal_data * caldata ; s#ath9k_pacal_info pacal_info ; s#ar5416Stats stats ; s#ath9k_tx_queue_info txq [ 10 ] ; e#ath9k_int imask ; t#u32 imrs2_reg ; t#u32 txok_interrupt_mask ; t#u32 txerr_interrupt_mask ; t#u32 txdesc_interrupt_mask ; t#u32 txeol_interrupt_mask ; t#u32 txurn_interrupt_mask ; t#atomic_t intr_ref_cnt ; t#bool chip_fullsleep ; t#u32 atim_window ; t#u32 modes_index ; t#u32 supp_cals ; s#ath9k_cal_list iq_caldata ; s#ath9k_cal_list adcgain_caldata ; s#ath9k_cal_list adcdc_caldata ; s#ath9k_cal_list * cal_list ; s#ath9k_cal_list * cal_list_last ; s#ath9k_cal_list * cal_list_curr ; union { t#u32 unsign [ 3 ] ; t#int32_t sign [ 3 ] ; } meas0 ; union { t#u32 unsign [ 3 ] ; t#int32_t sign [ 3 ] ; } meas1 ; union { t#u32 unsign [ 3 ] ; t#int32_t sign [ 3 ] ; } meas2 ; union { t#u32 unsign [ 3 ] ; t#int32_t sign [ 3 ] ; } meas3 ; t#u16 cal_samples ; t#u8 enabled_cals ; t#u32 sta_id1_defaults ; t#u32 misc_mode ; s#ath_hw_private_ops private_ops ; s#ath_hw_ops ops ; t#u32 * analogBank6Data ; int coverage_class ; t#u32 slottime ; t#u32 globaltxtimeout ; t#u32 aniperiod ; e#ath9k_ani_cmd ani_function ; t#u32 ani_skip_count ; s#ar5416AniState ani ; s#ath_btcoex_hw btcoex_hw ; t#u32 intr_txqs ; t#u8 txchainmask ; t#u8 rxchainmask ; s#ath_hw_radar_conf radar_conf ; t#u32 originalGain [ 22 ] ; int initPDADC ; int PDADCdelta ; int led_pin ; t#u32 gpio_mask ; t#u32 gpio_val ; s#ar5416IniArray iniModes ; s#ar5416IniArray iniCommon ; s#ar5416IniArray iniBB_RfGain ; s#ar5416IniArray iniBank6 ; s#ar5416IniArray iniAddac ; s#ar5416IniArray iniPcieSerdes ; s#ar5416IniArray iniPcieSerdesLowPower ; s#ar5416IniArray iniModesFastClock ; s#ar5416IniArray iniAdditional ; s#ar5416IniArray iniModesRxGain ; s#ar5416IniArray ini_modes_rx_gain_bounds ; s#ar5416IniArray iniModesTxGain ; s#ar5416IniArray iniCckfirNormal ; s#ar5416IniArray iniCckfirJapan2484 ; s#ar5416IniArray iniModes_9271_ANI_reg ; s#ar5416IniArray ini_radio_post_sys2ant ; s#ar5416IniArray ini_modes_rxgain_5g_xlna ; s#ar5416IniArray ini_modes_rxgain_bb_core ; s#ar5416IniArray ini_modes_rxgain_bb_postamble ; s#ar5416IniArray iniMac [ E#ATH_INI_NUM_SPLIT ] ; s#ar5416IniArray iniBB [ E#ATH_INI_NUM_SPLIT ] ; s#ar5416IniArray iniRadio [ E#ATH_INI_NUM_SPLIT ] ; s#ar5416IniArray iniSOC [ E#ATH_INI_NUM_SPLIT ] ; t#u32 intr_gen_timer_trigger ; t#u32 intr_gen_timer_thresh ; s#ath_gen_timer_table hw_gen_timers ; s#ar9003_txs * ts_ring ; t#u32 ts_paddr_start ; t#u32 ts_paddr_end ; t#u16 ts_tail ; t#u16 ts_size ; t#u32 bb_watchdog_last_status ; t#u32 bb_watchdog_timeout_ms ; t#u8 bb_hang_rx_ofdm ; unsigned int paprd_target_power ; unsigned int paprd_training_power ; unsigned int paprd_ratemask ; unsigned int paprd_ratemask_ht40 ; t#bool paprd_table_write_done ; t#u32 paprd_gain_table_entries [ 32 ] ; t#u8 paprd_gain_table_index [ 32 ] ; t#u32 WARegVal ; t#u32 ent_mode ; t#u32 wow_event_mask ; t#bool is_clk_25mhz ; int ( * get_mac_revision ) ( void ) ; int ( * external_reset ) ( void ) ; const s#firmware * eeprom_blob ; } 
ath9k_hw_ani_monitor void ath9k_hw_ani_monitor ( s#ath_hw * , s#ath9k_channel * ) 
ath9k_hw_disable_mib_counters void ath9k_hw_disable_mib_counters ( s#ath_hw * ) 

/* drivers/net/wireless/ath/ath9k/ar9002_mac.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##ar9003_txs
s#ath_desc struct ath_desc { t#u32 ds_link ; t#u32 ds_data ; t#u32 ds_ctl0 ; t#u32 ds_ctl1 ; t#u32 ds_hw [ 20 ] ; void * ds_vdata ; } 
ath9k_hw_setuprxdesc void ath9k_hw_setuprxdesc ( s#ath_hw * , s#ath_desc * , t#u32 , t#u32 ) 

/* drivers/net/wireless/ath/ath9k/ar9003_mac.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s#ar9003_txs struct ar9003_txs { t#u32 ds_info ; t#u32 status1 ; t#u32 status2 ; t#u32 status3 ; t#u32 status4 ; t#u32 status5 ; t#u32 status6 ; t#u32 status7 ; t#u32 status8 ; } 
ath9k_hw_set_rx_bufsize void ath9k_hw_set_rx_bufsize ( s#ath_hw * , t#u16 ) 
e#ath9k_rx_qtype enum ath9k_rx_qtype { ATH9K_RX_QUEUE_HP , ATH9K_RX_QUEUE_LP , ATH9K_RX_QUEUE_MAX , } 
ath9k_hw_addrxbuf_edma void ath9k_hw_addrxbuf_edma ( s#ath_hw * , t#u32 , e#ath9k_rx_qtype ) 
s#ath_rx_status struct ath_rx_status { t#u32 rs_tstamp ; t#u16 rs_datalen ; t#u8 rs_status ; t#u8 rs_phyerr ; t#int8_t rs_rssi ; t#u8 rs_keyix ; t#u8 rs_rate ; t#u8 rs_antenna ; t#u8 rs_more ; t#int8_t rs_rssi_ctl0 ; t#int8_t rs_rssi_ctl1 ; t#int8_t rs_rssi_ctl2 ; t#int8_t rs_rssi_ext0 ; t#int8_t rs_rssi_ext1 ; t#int8_t rs_rssi_ext2 ; t#u8 rs_isaggr ; t#u8 rs_firstaggr ; t#u8 rs_moreaggr ; t#u8 rs_num_delims ; t#u8 rs_flags ; t#bool is_mybeacon ; t#u32 evm0 ; t#u32 evm1 ; t#u32 evm2 ; t#u32 evm3 ; t#u32 evm4 ; t#u32 flag ; } 
ath9k_hw_process_rxdesc_edma int ath9k_hw_process_rxdesc_edma ( s#ath_hw * , s#ath_rx_status * , void * ) 
ath9k_hw_setup_statusring void ath9k_hw_setup_statusring ( s#ath_hw * , void * , t#u32 , t#u16 ) 

/* drivers/net/wireless/ath/ath9k/ar9003_mci.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##ar9003_txs
ar9003_mci_get_interrupt void ar9003_mci_get_interrupt ( s#ath_hw * , t#u32 * , t#u32 * ) 
ar9003_mci_send_message t#bool ar9003_mci_send_message ( s#ath_hw * , t#u8 , t#u32 , t#u32 * , t#u8 , t#bool , t#bool ) 
ar9003_mci_setup int ar9003_mci_setup ( s#ath_hw * , t#u32 , void * , t#u16 , t#u32 ) 
ar9003_mci_cleanup void ar9003_mci_cleanup ( s#ath_hw * ) 
ar9003_mci_state t#u32 ar9003_mci_state ( s#ath_hw * , t#u32 ) 
ar9003_mci_get_next_gpm_offset t#u32 ar9003_mci_get_next_gpm_offset ( s#ath_hw * , t#bool , t#u32 * ) 
ar9003_mci_set_bt_version void ar9003_mci_set_bt_version ( s#ath_hw * , t#u8 , t#u8 ) 
ar9003_mci_send_wlan_channels void ar9003_mci_send_wlan_channels ( s#ath_hw * ) 

/* drivers/net/wireless/ath/ath9k/ar9003_paprd.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##ar9003_txs
ar9003_paprd_enable void ar9003_paprd_enable ( s#ath_hw * , t#bool ) 
ar9003_paprd_populate_single_table void ar9003_paprd_populate_single_table ( s#ath_hw * , s#ath9k_hw_cal_data * , int ) 
ar9003_paprd_setup_gain_table void ar9003_paprd_setup_gain_table ( s#ath_hw * , int ) 
ar9003_paprd_create_curve int ar9003_paprd_create_curve ( s#ath_hw * , s#ath9k_hw_cal_data * , int ) 
ar9003_paprd_init_table int ar9003_paprd_init_table ( s#ath_hw * ) 
ar9003_paprd_is_done t#bool ar9003_paprd_is_done ( s#ath_hw * ) 
ar9003_is_paprd_enabled t#bool ar9003_is_paprd_enabled ( s#ath_hw * ) 

/* drivers/net/wireless/ath/ath9k/ar9003_phy.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##ar9003_txs
ar9003_hw_bb_watchdog_dbg_info void ar9003_hw_bb_watchdog_dbg_info ( s#ath_hw * ) 
ar9003_hw_disable_phy_restart void ar9003_hw_disable_phy_restart ( s#ath_hw * ) 

/* drivers/net/wireless/ath/ath9k/btcoex.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##ar9003_txs
ath9k_hw_init_btcoex_hw void ath9k_hw_init_btcoex_hw ( s#ath_hw * , int ) 
ath9k_hw_btcoex_init_scheme void ath9k_hw_btcoex_init_scheme ( s#ath_hw * ) 
ath9k_hw_btcoex_init_2wire void ath9k_hw_btcoex_init_2wire ( s#ath_hw * ) 
ath9k_hw_btcoex_init_3wire void ath9k_hw_btcoex_init_3wire ( s#ath_hw * ) 
ath9k_hw_btcoex_init_mci void ath9k_hw_btcoex_init_mci ( s#ath_hw * ) 
e#ath_stomp_type enum ath_stomp_type { ATH_BTCOEX_STOMP_ALL , ATH_BTCOEX_STOMP_LOW , ATH_BTCOEX_STOMP_NONE , ATH_BTCOEX_STOMP_LOW_FTP , ATH_BTCOEX_STOMP_AUDIO , ATH_BTCOEX_STOMP_MAX } 
ath9k_hw_btcoex_set_weight void ath9k_hw_btcoex_set_weight ( s#ath_hw * , t#u32 , t#u32 , e#ath_stomp_type ) 
ath9k_hw_btcoex_enable void ath9k_hw_btcoex_enable ( s#ath_hw * ) 
ath9k_hw_btcoex_disable void ath9k_hw_btcoex_disable ( s#ath_hw * ) 
ath9k_hw_btcoex_bt_stomp void ath9k_hw_btcoex_bt_stomp ( s#ath_hw * , e#ath_stomp_type ) 
ath9k_hw_btcoex_set_concur_txprio void ath9k_hw_btcoex_set_concur_txprio ( s#ath_hw * , t#u8 * ) 

/* drivers/net/wireless/ath/ath9k/calib.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##ar9003_txs
ath9k_hw_getchan_noise t#s16 ath9k_hw_getchan_noise ( s#ath_hw * , s#ath9k_channel * ) 
ath9k_hw_reset_calvalid t#bool ath9k_hw_reset_calvalid ( s#ath_hw * ) 
ath9k_hw_getnf t#bool ath9k_hw_getnf ( s#ath_hw * , s#ath9k_channel * ) 
ath9k_hw_bstuck_nfcal void ath9k_hw_bstuck_nfcal ( s#ath_hw * ) 

/* drivers/net/wireless/ath/ath9k/common.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
ath9k_cmn_get_hw_crypto_keytype int ath9k_cmn_get_hw_crypto_keytype ( s#sk_buff * ) 
ath9k_cmn_update_ichannel void ath9k_cmn_update_ichannel ( s#ath9k_channel * , s#cfg80211_chan_def * ) 
s##ar9003_txs
ath9k_cmn_get_curchannel s#ath9k_channel * ath9k_cmn_get_curchannel ( s#ieee80211_hw * , s#ath_hw * ) 
ath9k_cmn_count_streams int ath9k_cmn_count_streams ( unsigned int , int ) 
ath9k_cmn_update_txpow void ath9k_cmn_update_txpow ( s#ath_hw * , t#u16 , t#u16 , t#u16 * ) 
ath9k_cmn_init_crypto void ath9k_cmn_init_crypto ( s#ath_hw * ) 

/* drivers/net/wireless/ath/ath9k/hw.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
ath9k_hw_wait t#bool ath9k_hw_wait ( s#ath_hw * , t#u32 , t#u32 , t#u32 , t#u32 ) 
ath9k_hw_computetxtime t#u16 ath9k_hw_computetxtime ( s#ath_hw * , t#u8 , int , t#u32 , t#u16 , t#bool ) 
ath9k_hw_init int ath9k_hw_init ( s#ath_hw * ) 
ar9003_get_pll_sqsum_dvc t#u32 ar9003_get_pll_sqsum_dvc ( s#ath_hw * ) 
ath9k_hw_init_global_settings void ath9k_hw_init_global_settings ( s#ath_hw * ) 
ath9k_hw_deinit void ath9k_hw_deinit ( s#ath_hw * ) 
ath9k_hw_check_alive t#bool ath9k_hw_check_alive ( s#ath_hw * ) 
ath9k_hw_reset int ath9k_hw_reset ( s#ath_hw * , s#ath9k_channel * , s#ath9k_hw_cal_data * , t#bool ) 
ath9k_hw_setpower t#bool ath9k_hw_setpower ( s#ath_hw * , e#ath9k_power_mode ) 
ath9k_hw_beaconinit void ath9k_hw_beaconinit ( s#ath_hw * , t#u32 , t#u32 ) 
s#ath9k_beacon_state struct ath9k_beacon_state { t#u32 bs_nexttbtt ; t#u32 bs_nextdtim ; t#u32 bs_intval ; t#u32 bs_dtimperiod ; t#u16 bs_cfpperiod ; t#u16 bs_cfpmaxduration ; t#u32 bs_cfpnext ; t#u16 bs_timoffset ; t#u16 bs_bmissthreshold ; t#u32 bs_sleepduration ; t#u32 bs_tsfoor_threshold ; } 
ath9k_hw_set_sta_beacon_timers void ath9k_hw_set_sta_beacon_timers ( s#ath_hw * , const s#ath9k_beacon_state * ) 
ath9k_hw_cfg_gpio_input void ath9k_hw_cfg_gpio_input ( s#ath_hw * , t#u32 ) 
ath9k_hw_gpio_get t#u32 ath9k_hw_gpio_get ( s#ath_hw * , t#u32 ) 
ath9k_hw_cfg_output void ath9k_hw_cfg_output ( s#ath_hw * , t#u32 , t#u32 ) 
ath9k_hw_set_gpio void ath9k_hw_set_gpio ( s#ath_hw * , t#u32 , t#u32 ) 
ath9k_hw_setantenna void ath9k_hw_setantenna ( s#ath_hw * , t#u32 ) 
ath9k_hw_getrxfilter t#u32 ath9k_hw_getrxfilter ( s#ath_hw * ) 
ath9k_hw_setrxfilter void ath9k_hw_setrxfilter ( s#ath_hw * , t#u32 ) 
ath9k_hw_phy_disable t#bool ath9k_hw_phy_disable ( s#ath_hw * ) 
ath9k_hw_disable t#bool ath9k_hw_disable ( s#ath_hw * ) 
ath9k_hw_set_txpowerlimit void ath9k_hw_set_txpowerlimit ( s#ath_hw * , t#u32 , t#bool ) 
ath9k_hw_setopmode void ath9k_hw_setopmode ( s#ath_hw * ) 
ath9k_hw_setmcastfilter void ath9k_hw_setmcastfilter ( s#ath_hw * , t#u32 , t#u32 ) 
ath9k_hw_write_associd void ath9k_hw_write_associd ( s#ath_hw * ) 
ath9k_hw_gettsf64 t#u64 ath9k_hw_gettsf64 ( s#ath_hw * ) 
ath9k_hw_settsf64 void ath9k_hw_settsf64 ( s#ath_hw * , t#u64 ) 
ath9k_hw_reset_tsf void ath9k_hw_reset_tsf ( s#ath_hw * ) 
ath9k_hw_set_tsfadjust void ath9k_hw_set_tsfadjust ( s#ath_hw * , t#bool ) 
ath9k_hw_gettsf32 t#u32 ath9k_hw_gettsf32 ( s#ath_hw * ) 
ath_gen_timer_alloc s#ath_gen_timer * ath_gen_timer_alloc ( s#ath_hw * , void ( * ) ( void * ) , void ( * ) ( void * ) , void * , t#u8 ) 
ath9k_hw_gen_timer_start void ath9k_hw_gen_timer_start ( s#ath_hw * , s#ath_gen_timer * , t#u32 , t#u32 ) 
ath9k_hw_gen_timer_stop void ath9k_hw_gen_timer_stop ( s#ath_hw * , s#ath_gen_timer * ) 
ath_gen_timer_free void ath_gen_timer_free ( s#ath_hw * , s#ath_gen_timer * ) 
ath_gen_timer_isr void ath_gen_timer_isr ( s#ath_hw * ) 
ath9k_hw_name void ath9k_hw_name ( s#ath_hw * , char * , t#size_t ) 

/* drivers/net/wireless/ath/ath9k/mac.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##ar9003_txs
ath9k_hw_gettxbuf t#u32 ath9k_hw_gettxbuf ( s#ath_hw * , t#u32 ) 
ath9k_hw_puttxbuf void ath9k_hw_puttxbuf ( s#ath_hw * , t#u32 , t#u32 ) 
ath9k_hw_txstart void ath9k_hw_txstart ( s#ath_hw * , t#u32 ) 
ath9k_hw_numtxpending t#u32 ath9k_hw_numtxpending ( s#ath_hw * , t#u32 ) 
ath9k_hw_updatetxtriglevel t#bool ath9k_hw_updatetxtriglevel ( s#ath_hw * , t#bool ) 
ath9k_hw_abort_tx_dma void ath9k_hw_abort_tx_dma ( s#ath_hw * ) 
ath9k_hw_stop_dma_queue t#bool ath9k_hw_stop_dma_queue ( s#ath_hw * , t#u32 ) 
ath9k_hw_set_txq_props t#bool ath9k_hw_set_txq_props ( s#ath_hw * , int , const s#ath9k_tx_queue_info * ) 
ath9k_hw_get_txq_props t#bool ath9k_hw_get_txq_props ( s#ath_hw * , int , s#ath9k_tx_queue_info * ) 
ath9k_hw_setuptxqueue int ath9k_hw_setuptxqueue ( s#ath_hw * , e#ath9k_tx_queue , const s#ath9k_tx_queue_info * ) 
ath9k_hw_releasetxqueue t#bool ath9k_hw_releasetxqueue ( s#ath_hw * , t#u32 ) 
ath9k_hw_resettxqueue t#bool ath9k_hw_resettxqueue ( s#ath_hw * , t#u32 ) 
ath9k_hw_rxprocdesc int ath9k_hw_rxprocdesc ( s#ath_hw * , s#ath_desc * , s#ath_rx_status * ) 
ath9k_hw_setrxabort t#bool ath9k_hw_setrxabort ( s#ath_hw * , t#bool ) 
ath9k_hw_putrxbuf void ath9k_hw_putrxbuf ( s#ath_hw * , t#u32 ) 
ath9k_hw_startpcureceive void ath9k_hw_startpcureceive ( s#ath_hw * , t#bool ) 
ath9k_hw_abortpcurecv void ath9k_hw_abortpcurecv ( s#ath_hw * ) 
ath9k_hw_stopdmarecv t#bool ath9k_hw_stopdmarecv ( s#ath_hw * , t#bool * ) 
ath9k_hw_beaconq_setup int ath9k_hw_beaconq_setup ( s#ath_hw * ) 
ath9k_hw_intrpend t#bool ath9k_hw_intrpend ( s#ath_hw * ) 
ath9k_hw_kill_interrupts void ath9k_hw_kill_interrupts ( s#ath_hw * ) 
ath9k_hw_disable_interrupts void ath9k_hw_disable_interrupts ( s#ath_hw * ) 
ath9k_hw_enable_interrupts void ath9k_hw_enable_interrupts ( s#ath_hw * ) 
ath9k_hw_set_interrupts void ath9k_hw_set_interrupts ( s#ath_hw * ) 

/* drivers/net/wireless/ath/ath9k/wow.o */
ath9k_hw_wow_event_to_string const char * ath9k_hw_wow_event_to_string ( t#u32 ) 
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##ar9003_txs
ath9k_hw_wow_apply_pattern void ath9k_hw_wow_apply_pattern ( s#ath_hw * , t#u8 * , t#u8 * , int , int ) 
ath9k_hw_wow_wakeup t#u32 ath9k_hw_wow_wakeup ( s#ath_hw * ) 
ath9k_hw_wow_enable void ath9k_hw_wow_enable ( s#ath_hw * , t#u32 ) 

/* drivers/net/wireless/ath/hw.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##ath_bus_ops
ath_hw_setbssidmask void ath_hw_setbssidmask ( s#ath_common * ) 
ath_hw_cycle_counters_update void ath_hw_cycle_counters_update ( s#ath_common * ) 
ath_hw_get_listen_time t#int32_t ath_hw_get_listen_time ( s#ath_common * ) 

/* drivers/net/wireless/ath/key.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##ath_bus_ops
ath_hw_keyreset t#bool ath_hw_keyreset ( s#ath_common * , t#u16 ) 
s#ieee80211_p2p_noa_desc struct ieee80211_p2p_noa_desc { t#u8 count ; t#__le32 duration ; t#__le32 interval ; t#__le32 start_time ; } 
s#ieee80211_p2p_noa_attr struct ieee80211_p2p_noa_attr { t#u8 index ; t#u8 oppps_ctwindow ; s#ieee80211_p2p_noa_desc desc [ 4 ] ; } 
s#ieee80211_bss_conf struct ieee80211_bss_conf { const t#u8 * bssid ; t#bool assoc , ibss_joined ; t#bool ibss_creator ; t#u16 aid ; t#bool use_cts_prot ; t#bool use_short_preamble ; t#bool use_short_slot ; t#bool enable_beacon ; t#u8 dtim_period ; t#u16 beacon_int ; t#u16 assoc_capability ; t#u64 sync_tsf ; t#u32 sync_device_ts ; t#u8 sync_dtim_count ; t#u32 basic_rates ; s#ieee80211_rate * beacon_rate ; int mcast_rate [ E#IEEE80211_NUM_BANDS ] ; t#u16 ht_operation_mode ; t#s32 cqm_rssi_thold ; t#u32 cqm_rssi_hyst ; s#cfg80211_chan_def chandef ; t#__be32 arp_addr_list [ 4 ] ; int arp_addr_cnt ; t#bool qos ; t#bool idle ; t#bool ps ; t#u8 ssid [ 32 ] ; t#size_t ssid_len ; t#bool hidden_ssid ; int txpower ; s#ieee80211_p2p_noa_attr p2p_noa_attr ; } 
s#ieee80211_chanctx_conf struct ieee80211_chanctx_conf { s#cfg80211_chan_def def ; t#u8 rx_chains_static , rx_chains_dynamic ; t#bool radar_enabled ; t#u8 drv_priv [ 0 ] __attribute__ ( ( aligned ( sizeof ( void * ) ) ) ) ; } 
s#ieee80211_vif struct ieee80211_vif { e#nl80211_iftype type ; s#ieee80211_bss_conf bss_conf ; t#u8 addr [ 6 ] ; t#bool p2p ; t#bool csa_active ; t#u8 cab_queue ; t#u8 hw_queue [ 4 ] ; s#ieee80211_chanctx_conf * chanctx_conf ; t#u32 driver_flags ; s#dentry * debugfs_dir ; t#u8 drv_priv [ 0 ] __attribute__ ( ( aligned ( sizeof ( void * ) ) ) ) ; } 
e#ieee80211_sta_rx_bandwidth enum ieee80211_sta_rx_bandwidth { IEEE80211_STA_RX_BW_20 = 0 , IEEE80211_STA_RX_BW_40 , IEEE80211_STA_RX_BW_80 , IEEE80211_STA_RX_BW_160 , } 
s#ieee80211_sta_rates struct ieee80211_sta_rates { s#callback_head callback_head ; struct { t#s8 idx ; t#u8 count ; t#u8 count_cts ; t#u8 count_rts ; t#u16 flags ; } rate [ 4 ] ; } 
s#ieee80211_sta struct ieee80211_sta { t#u32 supp_rates [ E#IEEE80211_NUM_BANDS ] ; t#u8 addr [ 6 ] ; t#u16 aid ; s#ieee80211_sta_ht_cap ht_cap ; s#ieee80211_sta_vht_cap vht_cap ; t#bool wme ; t#u8 uapsd_queues ; t#u8 max_sp ; t#u8 rx_nss ; e#ieee80211_sta_rx_bandwidth bandwidth ; e#ieee80211_smps_mode smps_mode ; s#ieee80211_sta_rates * rates ; t#u8 drv_priv [ 0 ] __attribute__ ( ( aligned ( sizeof ( void * ) ) ) ) ; } 
s#ieee80211_key_conf struct ieee80211_key_conf { t#u32 cipher ; t#u8 icv_len ; t#u8 iv_len ; t#u8 hw_key_idx ; t#u8 flags ; t#s8 keyidx ; t#u8 keylen ; t#u8 key [ 0 ] ; } 
ath_key_config int ath_key_config ( s#ath_common * , s#ieee80211_vif * , s#ieee80211_sta * , s#ieee80211_key_conf * ) 
ath_key_delete void ath_key_delete ( s#ath_common * , s#ieee80211_key_conf * ) 

/* drivers/net/wireless/ath/main.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
s##ath_bus_ops
ath_rxbuf_alloc s#sk_buff * ath_rxbuf_alloc ( s#ath_common * , t#u32 , t#gfp_t ) 
ath_printk __attribute__ ( ( format ( printf , 3 , 4 ) ) ) void ath_printk ( const char * , const s#ath_common * , const char * , ... ) 

/* drivers/net/wireless/ath/regd.o */
ath_is_world_regd t#bool ath_is_world_regd ( s#ath_regulatory * ) 
ath_is_49ghz_allowed t#bool ath_is_49ghz_allowed ( t#u16 ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
ath_reg_notifier_apply void ath_reg_notifier_apply ( s#wiphy * , s#regulatory_request * , s#ath_regulatory * ) 
ath_regd_init int ath_regd_init ( s#ath_regulatory * , s#wiphy * , void ( * ) ( s#wiphy * , s#regulatory_request * ) ) 
ath_regd_get_band_ctl t#u32 ath_regd_get_band_ctl ( s#ath_regulatory * , e#ieee80211_band ) 

/* drivers/net/wireless/brcm80211/brcmutil/d11.o */
e#brcmu_chan_bw enum brcmu_chan_bw { BRCMU_CHAN_BW_20 , BRCMU_CHAN_BW_40 , BRCMU_CHAN_BW_80 , BRCMU_CHAN_BW_80P80 , BRCMU_CHAN_BW_160 , } 
e#brcmu_chan_sb enum brcmu_chan_sb { BRCMU_CHAN_SB_NONE = 0 , BRCMU_CHAN_SB_L , BRCMU_CHAN_SB_U , BRCMU_CHAN_SB_LL , BRCMU_CHAN_SB_LU , BRCMU_CHAN_SB_UL , BRCMU_CHAN_SB_UU , BRCMU_CHAN_SB_LLL , BRCMU_CHAN_SB_LLU , BRCMU_CHAN_SB_LUL , BRCMU_CHAN_SB_LUU , BRCMU_CHAN_SB_ULL , BRCMU_CHAN_SB_ULU , BRCMU_CHAN_SB_UUL , BRCMU_CHAN_SB_UUU , } 
s#brcmu_chan struct brcmu_chan { t#u16 chspec ; t#u8 chnum ; t#u8 band ; e#brcmu_chan_bw bw ; e#brcmu_chan_sb sb ; } 
s#brcmu_d11inf struct brcmu_d11inf { t#u8 io_type ; void ( * encchspec ) ( s#brcmu_chan * ) ; void ( * decchspec ) ( s#brcmu_chan * ) ; } 
brcmu_d11_attach extern void brcmu_d11_attach ( s#brcmu_d11inf * ) 

/* drivers/net/wireless/brcm80211/brcmutil/utils.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
brcmu_pkt_buf_get_skb extern s#sk_buff * brcmu_pkt_buf_get_skb ( t#uint ) 
brcmu_pkt_buf_free_skb extern void brcmu_pkt_buf_free_skb ( s#sk_buff * ) 
s#pktq_prec struct pktq_prec { s#sk_buff_head skblist ; t#u16 max ; } 
s#pktq struct pktq { t#u16 num_prec ; t#u16 hi_prec ; t#u16 max ; t#u16 len ; s#pktq_prec q [ 16 ] ; } 
brcmu_pktq_penq extern s#sk_buff * brcmu_pktq_penq ( s#pktq * , int , s#sk_buff * ) 
brcmu_pktq_penq_head extern s#sk_buff * brcmu_pktq_penq_head ( s#pktq * , int , s#sk_buff * ) 
brcmu_pktq_pdeq extern s#sk_buff * brcmu_pktq_pdeq ( s#pktq * , int ) 
brcmu_pktq_pdeq_match extern s#sk_buff * brcmu_pktq_pdeq_match ( s#pktq * , int , t#bool ( * ) ( s#sk_buff * , void * ) , void * ) 
brcmu_pktq_pdeq_tail extern s#sk_buff * brcmu_pktq_pdeq_tail ( s#pktq * , int ) 
brcmu_pktq_pflush extern void brcmu_pktq_pflush ( s#pktq * , int , t#bool , t#bool ( * ) ( s#sk_buff * , void * ) , void * ) 
brcmu_pktq_flush extern void brcmu_pktq_flush ( s#pktq * , t#bool , t#bool ( * ) ( s#sk_buff * , void * ) , void * ) 
brcmu_pktq_init extern void brcmu_pktq_init ( s#pktq * , int , int ) 
brcmu_pktq_peek_tail extern s#sk_buff * brcmu_pktq_peek_tail ( s#pktq * , int * ) 
brcmu_pktq_mlen extern int brcmu_pktq_mlen ( s#pktq * , t#uint ) 
brcmu_pktq_mdeq extern s#sk_buff * brcmu_pktq_mdeq ( s#pktq * , t#uint , int * ) 

/* drivers/net/wireless/cw1200/bh.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s#ieee80211_low_level_stats struct ieee80211_low_level_stats { unsigned int dot11ACKFailureCount ; unsigned int dot11RTSFailureCount ; unsigned int dot11FCSErrorCount ; unsigned int dot11RTSSuccessCount ; } 
s##hwbus_priv
s#hwbus_ops struct hwbus_ops { int ( * hwbus_memcpy_fromio ) ( s#hwbus_priv * , unsigned int , void * , int ) ; int ( * hwbus_memcpy_toio ) ( s#hwbus_priv * , unsigned int , const void * , int ) ; void ( * lock ) ( s#hwbus_priv * ) ; void ( * unlock ) ( s#hwbus_priv * ) ; t#size_t ( * align_size ) ( s#hwbus_priv * , t#size_t ) ; int ( * power_mgmt ) ( s#hwbus_priv * , t#bool ) ; } 
s##firmware
s#cw1200_debug_priv struct cw1200_debug_priv { s#dentry * debugfs_phy ; int tx ; int tx_agg ; int rx ; int rx_agg ; int tx_multi ; int tx_multi_frames ; int tx_cache_miss ; int tx_align ; int tx_ttl ; int tx_burst ; int ba_cnt ; int ba_acc ; int ba_cnt_rx ; int ba_acc_rx ; } 
s#cw1200_txpriv struct cw1200_txpriv { t#u8 link_id ; t#u8 raw_link_id ; t#u8 tid ; t#u8 rate_id ; t#u8 offset ; } 
t#cw1200_queue_skb_dtor_t typedef void ( * cw1200_queue_skb_dtor_t ) ( s#cw1200_common * , s#sk_buff * , const s#cw1200_txpriv * ) 
s#cw1200_queue_stats struct cw1200_queue_stats { t#spinlock_t lock ; int * link_map_cache ; int num_queued ; t#size_t map_capacity ; t#wait_queue_head_t wait_link_id_empty ; t#cw1200_queue_skb_dtor_t skb_dtor ; s#cw1200_common * priv ; } 
s##cw1200_queue_item
s#cw1200_queue struct cw1200_queue { s#cw1200_queue_stats * stats ; t#size_t capacity ; t#size_t num_queued ; t#size_t num_pending ; t#size_t num_sent ; s#cw1200_queue_item * pool ; s#list_head queue ; s#list_head free_pool ; s#list_head pending ; int tx_locked_cnt ; int * link_map_cache ; t#bool overfull ; t#spinlock_t lock ; t#u8 queue_id ; t#u8 generation ; s#timer_list gc ; unsigned long ttl ; } 
s#wsm_edca_queue_params struct wsm_edca_queue_params { t#u16 cwmin ; t#u16 cwmax ; t#u16 aifns ; t#u16 txop_limit ; t#u32 max_rx_lifetime ; } 
s#wsm_edca_params struct wsm_edca_params { s#wsm_edca_queue_params params [ 4 ] ; t#bool uapsd_enable [ 4 ] ; } 
s#wsm_set_tx_queue_params struct wsm_set_tx_queue_params { t#u8 ackPolicy ; t#u16 allowedMediumTime ; t#u32 maxTransmitLifetime ; } 
s#wsm_tx_queue_params struct wsm_tx_queue_params { s#wsm_set_tx_queue_params params [ 4 ] ; } 
s#wsm_mib_association_mode struct wsm_mib_association_mode { t#u8 flags ; t#u8 preamble ; t#u8 greenfield ; t#u8 mpdu_start_spacing ; t#__le32 basic_rate_set ; } 
s#wsm_set_bss_params struct wsm_set_bss_params { t#u8 reset_beacon_loss ; t#u8 beacon_lost_count ; t#u16 aid ; t#u32 operational_rate_set ; } 
e#nl80211_channel_type enum nl80211_channel_type { NL80211_CHAN_NO_HT , NL80211_CHAN_HT20 , NL80211_CHAN_HT40MINUS , NL80211_CHAN_HT40PLUS } 
s#cw1200_ht_info struct cw1200_ht_info { s#ieee80211_sta_ht_cap ht_cap ; e#nl80211_channel_type channel_type ; t#u16 operation_mode ; } 
s#wsm_set_pm struct wsm_set_pm { t#u8 mode ; t#u8 fast_psm_idle_period ; t#u8 ap_psm_change_period ; t#u8 min_auto_pspoll_period ; } 
s#wsm_rx_filter struct wsm_rx_filter { t#bool promiscuous ; t#bool bssid ; t#bool fcs ; t#bool probeResponder ; } 
s#wsm_mib_multicast_filter struct wsm_mib_multicast_filter { t#__le32 enable ; t#__le32 num_addrs ; t#u8 macaddrs [ 8 ] [ 6 ] ; } 
s##cw1200_suspend_state
s##platform_device
s#cw1200_pm_state struct cw1200_pm_state { s#cw1200_suspend_state * suspend_state ; s#timer_list stay_awake ; s#platform_device * pm_dev ; t#spinlock_t lock ; } 
s#wsm_p2p_ps_modeinfo struct wsm_p2p_ps_modeinfo { t#u8 opp_ps_ct_window ; t#u8 count ; t#u8 reserved ; t#u8 dtim_count ; t#__le32 duration ; t#__le32 interval ; t#__le32 start_time ; } 
s#wsm_uapsd_info struct wsm_uapsd_info { t#__le16 uapsd_flags ; t#__le16 min_auto_trigger_interval ; t#__le16 max_auto_trigger_interval ; t#__le16 auto_trigger_step ; } 
s#cfg80211_ssid struct cfg80211_ssid { t#u8 ssid [ 32 ] ; t#u8 ssid_len ; } 
e#nl80211_bss_scan_width enum nl80211_bss_scan_width { NL80211_BSS_CHAN_WIDTH_20 , NL80211_BSS_CHAN_WIDTH_10 , NL80211_BSS_CHAN_WIDTH_5 , } 
s#cfg80211_scan_request struct cfg80211_scan_request { s#cfg80211_ssid * ssids ; int n_ssids ; t#u32 n_channels ; e#nl80211_bss_scan_width scan_width ; const t#u8 * ie ; t#size_t ie_len ; t#u32 flags ; t#u32 rates [ E#IEEE80211_NUM_BANDS ] ; s#wireless_dev * wdev ; s#wiphy * wiphy ; unsigned long scan_start ; t#bool aborted , notified ; t#bool no_cck ; s#ieee80211_channel * channels [ 0 ] ; } 
s#wsm_ssid struct wsm_ssid { t#u8 ssid [ 32 ] ; t#u32 length ; } 
s#cw1200_scan struct cw1200_scan { s#semaphore lock ; s#work_struct work ; s#delayed_work timeout ; s#cfg80211_scan_request * req ; s#ieee80211_channel * * begin ; s#ieee80211_channel * * curr ; s#ieee80211_channel * * end ; s#wsm_ssid ssids [ ( 2 ) ] ; int output_power ; int n_ssids ; int status ; t#atomic_t in_progress ; s#delayed_work probe_work ; int direct_probe ; } 
s#wsm_startup_ind struct wsm_startup_ind { t#u16 input_buffers ; t#u16 input_buffer_size ; t#u16 status ; t#u16 hw_id ; t#u16 hw_subid ; t#u16 fw_cap ; t#u16 fw_type ; t#u16 fw_api ; t#u16 fw_build ; t#u16 fw_ver ; char fw_label [ 128 ] ; t#u32 config [ 4 ] ; } 
s#wsm_buf struct wsm_buf { t#u8 * begin ; t#u8 * data ; t#u8 * end ; } 
s#wsm_cmd struct wsm_cmd { t#spinlock_t lock ; int done ; t#u8 * ptr ; t#size_t len ; void * arg ; int ret ; t#u16 cmd ; } 
e#cw1200_join_status enum cw1200_join_status { CW1200_JOIN_STATUS_PASSIVE = 0 , CW1200_JOIN_STATUS_MONITOR , CW1200_JOIN_STATUS_JOINING , CW1200_JOIN_STATUS_PRE_STA , CW1200_JOIN_STATUS_STA , CW1200_JOIN_STATUS_IBSS , CW1200_JOIN_STATUS_AP , } 
s#wsm_add_key struct wsm_add_key { t#u8 type ; t#u8 index ; t#u16 reserved ; union { struct { t#u8 peer [ 6 ] ; t#u8 reserved ; t#u8 keylen ; t#u8 keydata [ 16 ] ; } __attribute__ ( ( packed ) ) wep_pairwise ; struct { t#u8 keyid ; t#u8 keylen ; t#u16 reserved ; t#u8 keydata [ 16 ] ; } __attribute__ ( ( packed ) ) wep_group ; struct { t#u8 peer [ 6 ] ; t#u16 reserved ; t#u8 keydata [ 16 ] ; t#u8 rx_mic_key [ 8 ] ; t#u8 tx_mic_key [ 8 ] ; } __attribute__ ( ( packed ) ) tkip_pairwise ; struct { t#u8 keydata [ 16 ] ; t#u8 rx_mic_key [ 8 ] ; t#u8 keyid ; t#u8 reserved [ 3 ] ; t#u8 rx_seqnum [ 8 ] ; } __attribute__ ( ( packed ) ) tkip_group ; struct { t#u8 peer [ 6 ] ; t#u16 reserved ; t#u8 keydata [ 16 ] ; } __attribute__ ( ( packed ) ) aes_pairwise ; struct { t#u8 keydata [ 16 ] ; t#u8 keyid ; t#u8 reserved [ 3 ] ; t#u8 rx_seqnum [ 8 ] ; } __attribute__ ( ( packed ) ) aes_group ; struct { t#u8 peer [ 6 ] ; t#u8 keyid ; t#u8 reserved ; t#u8 keydata [ 16 ] ; t#u8 mic_key [ 16 ] ; } __attribute__ ( ( packed ) ) wapi_pairwise ; struct { t#u8 keydata [ 16 ] ; t#u8 mic_key [ 16 ] ; t#u8 keyid ; t#u8 reserved [ 3 ] ; } __attribute__ ( ( packed ) ) wapi_group ; } __attribute__ ( ( packed ) ) ; } 
e#cw1200_link_status enum cw1200_link_status { CW1200_LINK_OFF , CW1200_LINK_RESERVE , CW1200_LINK_SOFT , CW1200_LINK_HARD , CW1200_LINK_RESET , CW1200_LINK_RESET_REMAP , } 
s#cw1200_link_entry struct cw1200_link_entry { unsigned long timestamp ; e#cw1200_link_status status ; e#cw1200_link_status prev_status ; t#u8 mac [ 6 ] ; t#u8 buffered [ ( 8 ) ] ; s#sk_buff_head rx_queue ; } 
s#tx_policy struct tx_policy { union { t#__le32 tbl [ 3 ] ; t#u8 raw [ 12 ] ; } ; t#u8 defined ; t#u8 usage_count ; t#u8 retry_count ; t#u8 uploaded ; } 
s#tx_policy_cache_entry struct tx_policy_cache_entry { s#tx_policy policy ; s#list_head link ; } 
s#tx_policy_cache struct tx_policy_cache { s#tx_policy_cache_entry cache [ ( 8 ) ] ; s#list_head used ; s#list_head free ; t#spinlock_t lock ; } 
s#cw1200_common struct cw1200_common { s#ieee80211_hw * hw ; s#ieee80211_vif * vif ; s#device * pdev ; s#ieee80211_low_level_stats stats ; t#u8 mac_addr [ 6 ] ; const s#hwbus_ops * hwbus_ops ; s#hwbus_priv * hwbus_priv ; enum { HIF_9000_SILICON_VERSATILE = 0 , HIF_8601_VERSATILE , HIF_8601_SILICON , } hw_type ; enum { CW1200_HW_REV_CUT10 = 10 , CW1200_HW_REV_CUT11 = 11 , CW1200_HW_REV_CUT20 = 20 , CW1200_HW_REV_CUT22 = 22 , CW1X60_HW_REV = 40 , } hw_revision ; int hw_refclk ; t#bool hw_have_5ghz ; const s#firmware * sdd ; char * sdd_path ; s#cw1200_debug_priv * debug ; s#workqueue_struct * workqueue ; s#mutex conf_mutex ; s#cw1200_queue tx_queue [ 4 ] ; s#cw1200_queue_stats tx_queue_stats ; int tx_burst_idx ; unsigned int tx_hdr_len ; int output_power ; s#ieee80211_rate * rates ; s#ieee80211_rate * mcs_rates ; s#ieee80211_channel * channel ; s#wsm_edca_params edca ; s#wsm_tx_queue_params tx_queue_params ; s#wsm_mib_association_mode association_mode ; s#wsm_set_bss_params bss_params ; s#cw1200_ht_info ht_info ; s#wsm_set_pm powersave_mode ; s#wsm_set_pm firmware_ps_mode ; int cqm_rssi_thold ; unsigned cqm_rssi_hyst ; t#bool cqm_use_rssi ; int cqm_beacon_loss_count ; int channel_switch_in_progress ; t#wait_queue_head_t channel_switch_done ; t#u8 long_frame_max_tx_count ; t#u8 short_frame_max_tx_count ; int mode ; t#bool enable_beacon ; int beacon_int ; t#bool listening ; s#wsm_rx_filter rx_filter ; s#wsm_mib_multicast_filter multicast_filter ; t#bool has_multicast_subscription ; t#bool disable_beacon_filter ; s#work_struct update_filtering_work ; s#work_struct set_beacon_wakeup_period_work ; t#u8 ba_rx_tid_mask ; t#u8 ba_tx_tid_mask ; s#cw1200_pm_state pm_state ; s#wsm_p2p_ps_modeinfo p2p_ps_modeinfo ; s#wsm_uapsd_info uapsd_info ; t#bool setbssparams_done ; t#bool bt_present ; t#u8 conf_listen_interval ; t#u32 listen_interval ; t#u32 erp_info ; t#u32 rts_threshold ; t#atomic_t bh_rx ; t#atomic_t bh_tx ; t#atomic_t bh_term ; t#atomic_t bh_suspend ; s#workqueue_struct * bh_workqueue ; s#work_struct bh_work ; int bh_error ; t#wait_queue_head_t bh_wq ; t#wait_queue_head_t bh_evt_wq ; t#u8 buf_id_tx ; t#u8 buf_id_rx ; t#u8 wsm_rx_seq ; t#u8 wsm_tx_seq ; int hw_bufs_used ; t#bool powersave_enabled ; t#bool device_can_sleep ; s#cw1200_scan scan ; t#atomic_t recent_scan ; s#delayed_work clear_recent_scan_work ; s#wsm_startup_ind wsm_caps ; s#mutex wsm_cmd_mux ; s#wsm_buf wsm_cmd_buf ; s#wsm_cmd wsm_cmd ; t#wait_queue_head_t wsm_cmd_wq ; t#wait_queue_head_t wsm_startup_done ; int firmware_ready ; t#atomic_t tx_lock ; int wsm_enable_wsm_dumps ; e#cw1200_join_status join_status ; t#u32 pending_frame_id ; t#bool join_pending ; s#delayed_work join_timeout ; s#work_struct unjoin_work ; s#work_struct join_complete_work ; int join_complete_status ; int join_dtim_period ; t#bool delayed_unjoin ; t#s8 wep_default_key_id ; s#work_struct wep_key_work ; t#u32 key_map ; s#wsm_add_key keys [ ( 10 ) + 1 ] ; t#u32 link_id_map ; s#cw1200_link_entry link_id_db [ ( 5 ) ] ; s#work_struct link_id_work ; s#delayed_work link_id_gc_work ; t#u32 sta_asleep_mask ; t#u32 pspoll_mask ; t#bool aid0_bit_set ; t#spinlock_t ps_state_lock ; t#bool buffered_multicasts ; t#bool tx_multicast ; s#work_struct set_tim_work ; s#work_struct set_cts_work ; s#work_struct multicast_start_work ; s#work_struct multicast_stop_work ; s#timer_list mcast_timeout ; t#spinlock_t event_queue_lock ; s#list_head event_queue ; s#work_struct event_handler ; s#delayed_work bss_loss_work ; t#spinlock_t bss_loss_lock ; int bss_loss_state ; t#u32 bss_loss_confirm_id ; int delayed_link_loss ; s#work_struct bss_params_work ; s#tx_policy_cache tx_policy_cache ; s#work_struct tx_policy_upload_work ; int ps_mode_switch_in_progress ; t#wait_queue_head_t ps_mode_switch_done ; s#work_struct linkid_reset_work ; t#u8 action_frame_sa [ 6 ] ; t#u8 action_linkid ; } 
cw1200_irq_handler void cw1200_irq_handler ( s#cw1200_common * ) 

/* drivers/net/wireless/cw1200/main.o */
s##hwbus_priv
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##cw1200_queue_item
s##cw1200_suspend_state
s##platform_device
cw1200_core_probe int cw1200_core_probe ( const s#hwbus_ops * , s#hwbus_priv * , s#device * , s#cw1200_common * * , int , const t#u8 * , const char * , t#bool ) 
cw1200_core_release void cw1200_core_release ( s#cw1200_common * ) 

/* drivers/net/wireless/cw1200/pm.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##hwbus_priv
s##firmware
s##cw1200_debug_priv
s##cw1200_queue_item
s##cw1200_suspend_state
s##platform_device
cw1200_can_suspend int cw1200_can_suspend ( s#cw1200_common * ) 

/* drivers/net/wireless/hostap/hostap_80211_rx.o */
s#iw_request_info struct iw_request_info { t#__u16 cmd ; t#__u16 flags ; } 
s#iw_point struct iw_point { void * pointer ; t#__u16 length ; t#__u16 flags ; } 
s#iw_param struct iw_param { t#__s32 value ; t#__u8 fixed ; t#__u8 disabled ; t#__u16 flags ; } 
s#iw_freq struct iw_freq { t#__s32 m ; t#__s16 e ; t#__u8 i ; t#__u8 flags ; } 
s#iw_quality struct iw_quality { t#__u8 qual ; t#__u8 level ; t#__u8 noise ; t#__u8 updated ; } 
u#iwreq_data union iwreq_data { char name [ 16 ] ; s#iw_point essid ; s#iw_param nwid ; s#iw_freq freq ; s#iw_param sens ; s#iw_param bitrate ; s#iw_param txpower ; s#iw_param rts ; s#iw_param frag ; t#__u32 mode ; s#iw_param retry ; s#iw_point encoding ; s#iw_param power ; s#iw_quality qual ; s#sockaddr ap_addr ; s#sockaddr addr ; s#iw_param param ; s#iw_point data ; } 
t#iw_handler typedef int ( * iw_handler ) ( s#net_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
s#iw_priv_args struct iw_priv_args { t#__u32 cmd ; t#__u16 set_args ; t#__u16 get_args ; char name [ 16 ] ; } 
s#iw_discarded struct iw_discarded { t#__u32 nwid ; t#__u32 code ; t#__u32 fragment ; t#__u32 retries ; t#__u32 misc ; } 
s#iw_missed struct iw_missed { t#__u32 beacon ; } 
s#iw_statistics struct iw_statistics { t#__u16 status ; s#iw_quality qual ; s#iw_discarded discard ; s#iw_missed miss ; } 
s#iw_handler_def struct iw_handler_def { const t#iw_handler * standard ; t#__u16 num_standard ; t#__u16 num_private ; t#__u16 num_private_args ; const t#iw_handler * private ; const s#iw_priv_args * private_args ; s#iw_statistics * ( * get_wireless_stats ) ( s#net_device * ) ; } 
s#iw_spy_data struct iw_spy_data { int spy_number ; t#u_char spy_address [ 8 ] [ 6 ] ; s#iw_quality spy_stat [ 8 ] ; s#iw_quality spy_thr_low ; s#iw_quality spy_thr_high ; t#u_char spy_thr_under [ 8 ] ; } 
s##libipw_device
s#iw_public_data struct iw_public_data { s#iw_spy_data * spy_data ; s#libipw_device * libipw ; } 
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s#hostap_80211_rx_status struct hostap_80211_rx_status { t#u32 mac_time ; t#u8 signal ; t#u8 noise ; t#u16 rate ; } 
hostap_80211_rx void hostap_80211_rx ( s#net_device * , s#sk_buff * , s#hostap_80211_rx_status * ) 

/* drivers/net/wireless/hostap/hostap_80211_tx.o */
s##sock
s##libipw_device
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
hostap_master_start_xmit t#netdev_tx_t hostap_master_start_xmit ( s#sk_buff * , s#net_device * ) 

/* drivers/net/wireless/hostap/hostap_ap.o */
s##module
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s#lib80211_crypto_ops struct lib80211_crypto_ops { const char * name ; s#list_head list ; void * ( * init ) ( int ) ; void ( * deinit ) ( void * ) ; int ( * encrypt_mpdu ) ( s#sk_buff * , int , void * ) ; int ( * decrypt_mpdu ) ( s#sk_buff * , int , void * ) ; int ( * encrypt_msdu ) ( s#sk_buff * , int , void * ) ; int ( * decrypt_msdu ) ( s#sk_buff * , int , int , void * ) ; int ( * set_key ) ( void * , int , t#u8 * , void * ) ; int ( * get_key ) ( void * , int , t#u8 * , void * ) ; void ( * print_stats ) ( s#seq_file * , void * ) ; unsigned long ( * get_flags ) ( void * ) ; unsigned long ( * set_flags ) ( unsigned long , void * ) ; int extra_mpdu_prefix_len , extra_mpdu_postfix_len ; int extra_msdu_prefix_len , extra_msdu_postfix_len ; s#module * owner ; } 
s#lib80211_crypt_data struct lib80211_crypt_data { s#list_head list ; s#lib80211_crypto_ops * ops ; void * priv ; t#atomic_t refcnt ; } 
s#sta_info struct sta_info { s#list_head list ; s#sta_info * hnext ; t#atomic_t users ; s#proc_dir_entry * proc ; t#u8 addr [ 6 ] ; t#u16 aid ; t#u32 flags ; t#u16 capability ; t#u16 listen_interval ; t#u8 supported_rates [ 32 ] ; unsigned long last_auth ; unsigned long last_assoc ; unsigned long last_rx ; unsigned long last_tx ; unsigned long rx_packets , tx_packets ; unsigned long rx_bytes , tx_bytes ; s#sk_buff_head tx_buf ; t#s8 last_rx_silence ; t#s8 last_rx_signal ; t#u8 last_rx_rate ; t#u8 last_rx_updated ; t#u8 tx_supp_rates ; t#u8 tx_rate ; t#u8 tx_rate_idx ; t#u8 tx_max_rate ; t#u32 tx_count [ 4 ] ; t#u32 rx_count [ 4 ] ; t#u32 tx_since_last_failure ; t#u32 tx_consecutive_exc ; s#lib80211_crypt_data * crypt ; int ap ; t#local_info_t * local ; union { struct { char * challenge ; } sta ; struct { int ssid_len ; unsigned char ssid [ 32 + 1 ] ; int channel ; unsigned long last_beacon ; } ap ; } u ; s#timer_list timer ; enum { STA_NULLFUNC = 0 , STA_DISASSOC , STA_DEAUTH } timeout_next ; } 
t#ap_policy_enum typedef enum { AP_OTHER_AP_SKIP_ALL = 0 , AP_OTHER_AP_SAME_SSID = 1 , AP_OTHER_AP_ALL = 2 , AP_OTHER_AP_EVEN_IBSS = 3 } ap_policy_enum 
s#mac_restrictions struct mac_restrictions { enum { MAC_POLICY_OPEN = 0 , MAC_POLICY_ALLOW , MAC_POLICY_DENY } policy ; unsigned int entries ; s#list_head mac_list ; t#spinlock_t lock ; } 
s#add_sta_proc_data struct add_sta_proc_data { t#u8 addr [ 6 ] ; s#add_sta_proc_data * next ; } 
t#wds_oper_type typedef enum { WDS_ADD , WDS_DEL } wds_oper_type 
s#wds_oper_data struct wds_oper_data { t#wds_oper_type type ; t#u8 addr [ 6 ] ; s#wds_oper_data * next ; } 
s#ap_data struct ap_data { int initialized ; t#local_info_t * local ; int bridge_packets ; unsigned int bridged_unicast ; unsigned int bridged_multicast ; unsigned int tx_drop_nonassoc ; int nullfunc_ack ; t#spinlock_t sta_table_lock ; int num_sta ; s#list_head sta_list ; s#sta_info * sta_hash [ 256 ] ; s#proc_dir_entry * proc ; t#ap_policy_enum ap_policy ; unsigned int max_inactivity ; int autom_ap_wds ; s#mac_restrictions mac_restrictions ; int last_tx_rate ; s#work_struct add_sta_proc_queue ; s#add_sta_proc_data * add_sta_proc_entries ; s#work_struct wds_oper_queue ; s#wds_oper_data * wds_oper_entries ; t#u16 tx_callback_idx ; s#sta_info * sta_aid [ 128 ] ; t#u16 tx_callback_auth , tx_callback_assoc , tx_callback_poll ; s#lib80211_crypto_ops * crypt ; void * crypt_priv ; } 
s#comm_tallies_sums struct comm_tallies_sums { unsigned int tx_unicast_frames ; unsigned int tx_multicast_frames ; unsigned int tx_fragments ; unsigned int tx_unicast_octets ; unsigned int tx_multicast_octets ; unsigned int tx_deferred_transmissions ; unsigned int tx_single_retry_frames ; unsigned int tx_multiple_retry_frames ; unsigned int tx_retry_limit_exceeded ; unsigned int tx_discards ; unsigned int rx_unicast_frames ; unsigned int rx_multicast_frames ; unsigned int rx_fragments ; unsigned int rx_unicast_octets ; unsigned int rx_multicast_octets ; unsigned int rx_fcs_errors ; unsigned int rx_discards_no_buffer ; unsigned int tx_discards_wrong_sa ; unsigned int rx_discards_wep_undecryptable ; unsigned int rx_message_in_msg_fragments ; unsigned int rx_message_in_bad_msg_fragments ; } 
s#lib80211_crypt_info struct lib80211_crypt_info { char * name ; t#spinlock_t * lock ; s#lib80211_crypt_data * crypt [ 4 ] ; int tx_keyidx ; s#list_head crypt_deinit_list ; s#timer_list crypt_deinit_timer ; int crypt_quiesced ; } 
s#prism2_frag_entry struct prism2_frag_entry { unsigned long first_frag_time ; unsigned int seq ; unsigned int last_frag ; s#sk_buff * skb ; t#u8 src_addr [ 6 ] ; t#u8 dst_addr [ 6 ] ; } 
s#hfa384x_regs struct hfa384x_regs { t#u16 cmd ; t#u16 evstat ; t#u16 offset0 ; t#u16 offset1 ; t#u16 swsupport0 ; } 
s#prism2_download_area struct prism2_download_area { t#u32 addr ; t#u32 len ; void * ptr ; } 
s#prism2_download_param struct prism2_download_param { t#u32 dl_cmd ; t#u32 start_addr ; t#u32 num_areas ; s#prism2_download_area data [ 0 ] ; } 
s#prism2_helper_functions struct prism2_helper_functions { int ( * card_present ) ( t#local_info_t * ) ; void ( * cor_sreset ) ( t#local_info_t * ) ; void ( * genesis_reset ) ( t#local_info_t * , int ) ; int ( * cmd ) ( s#net_device * , t#u16 , t#u16 , t#u16 * , t#u16 * ) ; void ( * read_regs ) ( s#net_device * , s#hfa384x_regs * ) ; int ( * get_rid ) ( s#net_device * , t#u16 , void * , int , int ) ; int ( * set_rid ) ( s#net_device * , t#u16 , void * , int ) ; int ( * hw_enable ) ( s#net_device * , int ) ; int ( * hw_config ) ( s#net_device * , int ) ; void ( * hw_reset ) ( s#net_device * ) ; void ( * hw_shutdown ) ( s#net_device * , int ) ; int ( * reset_port ) ( s#net_device * ) ; void ( * schedule_reset ) ( t#local_info_t * ) ; int ( * download ) ( t#local_info_t * , s#prism2_download_param * ) ; int ( * tx ) ( s#sk_buff * , s#net_device * ) ; int ( * set_tim ) ( s#net_device * , int , int ) ; const s#file_operations * read_aux_fops ; int need_tx_headroom ; enum { HOSTAP_HW_PCCARD , HOSTAP_HW_PLX , HOSTAP_HW_PCI } hw_type ; } 
s#hostap_tx_callback_info struct hostap_tx_callback_info { t#u16 idx ; void ( * func ) ( s#sk_buff * , int , void * ) ; void * data ; s#hostap_tx_callback_info * next ; } 
s#hfa384x_hostscan_result struct hfa384x_hostscan_result { t#__le16 chid ; t#__le16 anl ; t#__le16 sl ; t#u8 bssid [ 6 ] ; t#__le16 beacon_interval ; t#__le16 capability ; t#__le16 ssid_len ; t#u8 ssid [ 32 ] ; t#u8 sup_rates [ 10 ] ; t#__le16 rate ; t#__le16 atim ; } 
s#prism2_download_data_area struct prism2_download_data_area { t#u32 addr ; t#u32 len ; t#u8 * data ; } 
s#prism2_download_data struct prism2_download_data { t#u32 dl_cmd ; t#u32 start_addr ; t#u32 num_areas ; s#prism2_download_data_area data [ 0 ] ; } 
s#local_info struct local_info { s#module * hw_module ; int card_idx ; int dev_enabled ; int master_dev_auto_open ; int num_dev_open ; s#net_device * dev ; s#net_device * ddev ; s#list_head hostap_interfaces ; t#rwlock_t iface_lock ; t#spinlock_t cmdlock , baplock , lock , irq_init_lock ; s#mutex rid_bap_mtx ; t#u16 infofid ; t#spinlock_t txfidlock ; int txfid_len ; t#u16 txfid [ 8 ] ; t#u16 intransmitfid [ 8 ] ; int next_txfid ; int next_alloc ; unsigned long bits ; s#ap_data * ap ; char essid [ 32 + 1 ] ; char name [ 32 + 1 ] ; int name_set ; t#u16 channel_mask ; t#u16 scan_channel_mask ; s#comm_tallies_sums comm_tallies ; s#proc_dir_entry * proc ; int iw_mode ; int pseudo_adhoc ; char bssid [ 6 ] ; int channel ; int beacon_int ; int dtim_period ; int mtu ; int frame_dump ; int fw_tx_rate_control ; t#u16 tx_rate_control ; t#u16 basic_rates ; int hw_resetting ; int hw_ready ; int hw_reset_tries ; int hw_downloading ; int shutdown ; int pri_only ; int no_pri ; int sram_type ; enum { PRISM2_TXPOWER_AUTO = 0 , PRISM2_TXPOWER_OFF , PRISM2_TXPOWER_FIXED , PRISM2_TXPOWER_UNKNOWN } txpower_type ; int txpower ; s#list_head cmd_queue ; int cmd_queue_len ; s#work_struct reset_queue ; int is_promisc ; s#work_struct set_multicast_list_queue ; s#work_struct set_tim_queue ; s#list_head set_tim_list ; t#spinlock_t set_tim_lock ; int wds_max_connections ; int wds_connections ; t#u32 wds_type ; t#u16 tx_control ; int manual_retry_count ; s#iw_statistics wstats ; unsigned long scan_timestamp ; enum { PRISM2_MONITOR_80211 = 0 , PRISM2_MONITOR_PRISM = 1 , PRISM2_MONITOR_CAPHDR = 2 , PRISM2_MONITOR_RADIOTAP = 3 } monitor_type ; int monitor_allow_fcserr ; int hostapd ; int hostapd_sta ; s#net_device * apdev ; s#net_device_stats apdevstats ; char assoc_ap_addr [ 6 ] ; s#net_device * stadev ; s#net_device_stats stadevstats ; s#lib80211_crypt_info crypt_info ; int open_wep ; int host_encrypt ; int host_decrypt ; int privacy_invoked ; int fw_encrypt_ok ; int bcrx_sta_key ; s#prism2_frag_entry frag_cache [ 4 ] ; unsigned int frag_next_idx ; int ieee_802_1x ; int antsel_tx , antsel_rx ; int rts_threshold ; int fragm_threshold ; int auth_algs ; int enh_sec ; int tallies32 ; s#prism2_helper_functions * func ; t#u8 * pda ; int fw_ap ; t#u32 sta_fw_ver ; s#tasklet_struct bap_tasklet ; s#tasklet_struct info_tasklet ; s#sk_buff_head info_list ; s#hostap_tx_callback_info * tx_callback ; s#tasklet_struct rx_tasklet ; s#sk_buff_head rx_list ; s#tasklet_struct sta_tx_exc_tasklet ; s#sk_buff_head sta_tx_exc_list ; int host_roaming ; unsigned long last_join_time ; s#hfa384x_hostscan_result * last_scan_results ; int last_scan_results_count ; enum { PRISM2_SCAN , PRISM2_HOSTSCAN } last_scan_type ; s#work_struct info_queue ; unsigned long pending_info ; int prev_link_status ; int prev_linkstatus_connected ; t#u8 preferred_ap [ 6 ] ; t#wait_queue_head_t hostscan_wq ; s#timer_list passive_scan_timer ; int passive_scan_interval ; int passive_scan_channel ; enum { PASSIVE_SCAN_WAIT , PASSIVE_SCAN_LISTEN } passive_scan_state ; s#timer_list tick_timer ; unsigned long last_tick_timer ; unsigned int sw_tick_stuck ; unsigned long last_comms_qual_update ; int comms_qual ; int avg_signal ; int avg_noise ; s#work_struct comms_qual_update ; int rssi_to_dBm ; s#list_head bss_list ; int num_bss_info ; int wpa ; int tkip_countermeasures ; int drop_unencrypted ; t#u8 * generic_elem ; t#size_t generic_elem_len ; s#prism2_download_data * dl_pri ; s#prism2_download_data * dl_sec ; void * hw_priv ; } 
t#local_info_t typedef s#local_info local_info_t 
hostap_init_data void hostap_init_data ( t#local_info_t * ) 
hostap_init_ap_proc void hostap_init_ap_proc ( t#local_info_t * ) 
hostap_free_data void hostap_free_data ( s#ap_data * ) 
hostap_check_sta_fw_version void hostap_check_sta_fw_version ( s#ap_data * , int ) 
hostap_handle_sta_tx_exc void hostap_handle_sta_tx_exc ( t#local_info_t * , s#sk_buff * ) 

/* drivers/net/wireless/hostap/hostap_info.o */
s##module
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
hostap_info_init void hostap_info_init ( t#local_info_t * ) 
hostap_info_process void hostap_info_process ( t#local_info_t * , s#sk_buff * ) 

/* drivers/net/wireless/hostap/hostap_main.o */
s##sock
s##libipw_device
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
hostap_80211_ops extern const s#header_ops hostap_80211_ops 
hostap_set_word int hostap_set_word ( s#net_device * , int , t#u16 ) 
hostap_set_string int hostap_set_string ( s#net_device * , int , const char * ) 
hostap_get_porttype t#u16 hostap_get_porttype ( t#local_info_t * ) 
hostap_set_encryption int hostap_set_encryption ( t#local_info_t * ) 
hostap_set_antsel int hostap_set_antsel ( t#local_info_t * ) 
hostap_set_roaming int hostap_set_roaming ( t#local_info_t * ) 
hostap_set_auth_algs int hostap_set_auth_algs ( t#local_info_t * ) 
s#hfa384x_rx_frame struct hfa384x_rx_frame { t#__le16 status ; t#__le32 time ; t#u8 silence ; t#u8 signal ; t#u8 rate ; t#u8 rxflow ; t#__le32 reserved ; t#__le16 frame_control ; t#__le16 duration_id ; t#u8 addr1 [ 6 ] ; t#u8 addr2 [ 6 ] ; t#u8 addr3 [ 6 ] ; t#__le16 seq_ctrl ; t#u8 addr4 [ 6 ] ; t#__le16 data_len ; t#u8 dst_addr [ 6 ] ; t#u8 src_addr [ 6 ] ; t#__be16 len ; } 
hostap_dump_rx_header void hostap_dump_rx_header ( const char * , const s#hfa384x_rx_frame * ) 
s#hfa384x_tx_frame struct hfa384x_tx_frame { t#__le16 status ; t#__le16 reserved1 ; t#__le16 reserved2 ; t#__le32 sw_support ; t#u8 retry_count ; t#u8 tx_rate ; t#__le16 tx_control ; t#__le16 frame_control ; t#__le16 duration_id ; t#u8 addr1 [ 6 ] ; t#u8 addr2 [ 6 ] ; t#u8 addr3 [ 6 ] ; t#__le16 seq_ctrl ; t#u8 addr4 [ 6 ] ; t#__le16 data_len ; t#u8 dst_addr [ 6 ] ; t#u8 src_addr [ 6 ] ; t#__be16 len ; } 
hostap_dump_tx_header void hostap_dump_tx_header ( const char * , const s#hfa384x_tx_frame * ) 
hostap_80211_get_hdrlen int hostap_80211_get_hdrlen ( t#__le16 ) 
hostap_setup_dev void hostap_setup_dev ( s#net_device * , t#local_info_t * , int ) 
hostap_set_multicast_list_queue void hostap_set_multicast_list_queue ( s#work_struct * ) 
hostap_set_hostapd int hostap_set_hostapd ( t#local_info_t * , int , int ) 
hostap_set_hostapd_sta int hostap_set_hostapd_sta ( t#local_info_t * , int , int ) 
hostap_add_interface s#net_device * hostap_add_interface ( s#local_info * , int , int , const char * , const char * ) 
hostap_remove_interface void hostap_remove_interface ( s#net_device * , int , int ) 
prism2_update_comms_qual int prism2_update_comms_qual ( s#net_device * ) 

/* drivers/net/wireless/hostap/hostap_proc.o */
s##module
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
hostap_init_proc void hostap_init_proc ( t#local_info_t * ) 
hostap_remove_proc void hostap_remove_proc ( t#local_info_t * ) 

/* drivers/net/wireless/ipw2x00/libipw_geo.o */
s#libipw_channel struct libipw_channel { t#u32 freq ; t#u8 channel ; t#u8 flags ; t#u8 max_power ; } 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s#libipw_security struct libipw_security { t#u16 active_key : 2 , enabled : 1 , unicast_uses_group : 1 , encrypt : 1 ; t#u8 auth_mode ; t#u8 encode_alg [ 4 ] ; t#u8 key_sizes [ 4 ] ; t#u8 keys [ 4 ] [ 32 ] ; t#u8 level ; t#u16 flags ; } 
s#libipw_stats struct libipw_stats { unsigned int tx_unicast_frames ; unsigned int tx_multicast_frames ; unsigned int tx_fragments ; unsigned int tx_unicast_octets ; unsigned int tx_multicast_octets ; unsigned int tx_deferred_transmissions ; unsigned int tx_single_retry_frames ; unsigned int tx_multiple_retry_frames ; unsigned int tx_retry_limit_exceeded ; unsigned int tx_discards ; unsigned int rx_unicast_frames ; unsigned int rx_multicast_frames ; unsigned int rx_fragments ; unsigned int rx_unicast_octets ; unsigned int rx_multicast_octets ; unsigned int rx_fcs_errors ; unsigned int rx_discards_no_buffer ; unsigned int tx_discards_wrong_sa ; unsigned int rx_discards_undecryptable ; unsigned int rx_message_in_msg_fragments ; unsigned int rx_message_in_bad_msg_fragments ; } 
s#libipw_geo struct libipw_geo { t#u8 name [ 4 ] ; t#u8 bg_channels ; t#u8 a_channels ; s#libipw_channel bg [ ( 14 - 1 + 1 ) ] ; s#libipw_channel a [ ( 165 - 34 + 1 ) ] ; } 
s#libipw_qos_parameters struct libipw_qos_parameters { t#__le16 cw_min [ 4 ] ; t#__le16 cw_max [ 4 ] ; t#u8 aifs [ 4 ] ; t#u8 flag [ 4 ] ; t#__le16 tx_op_limit [ 4 ] ; } 
s#libipw_qos_data struct libipw_qos_data { s#libipw_qos_parameters parameters ; int active ; int supported ; t#u8 param_count ; t#u8 old_param_count ; } 
s#libipw_rx_stats struct libipw_rx_stats { t#u32 mac_time ; t#s8 rssi ; t#u8 signal ; t#u8 noise ; t#u16 rate ; t#u8 received_channel ; t#u8 control ; t#u8 mask ; t#u8 freq ; t#u16 len ; t#u64 tsf ; t#u32 beacon_time ; } 
s#libipw_tim_parameters struct libipw_tim_parameters { t#u8 tim_count ; t#u8 tim_period ; } 
s#libipw_tpc_report struct libipw_tpc_report { t#u8 transmit_power ; t#u8 link_margin ; } 
s#libipw_info_element struct libipw_info_element { t#u8 id ; t#u8 len ; t#u8 data [ 0 ] ; } 
s#libipw_channel_map struct libipw_channel_map { t#u8 channel ; t#u8 map ; } 
s#libipw_ibss_dfs struct libipw_ibss_dfs { s#libipw_info_element ie ; t#u8 owner [ 6 ] ; t#u8 recovery_interval ; s#libipw_channel_map channel_map [ 0 ] ; } 
s#libipw_csa struct libipw_csa { t#u8 mode ; t#u8 channel ; t#u8 count ; } 
s#libipw_quiet struct libipw_quiet { t#u8 count ; t#u8 period ; t#u8 duration ; t#u8 offset ; } 
s#libipw_network struct libipw_network { t#u8 bssid [ 6 ] ; t#u8 channel ; t#u8 ssid [ 32 + 1 ] ; t#u8 ssid_len ; s#libipw_qos_data qos_data ; s#libipw_rx_stats stats ; t#u16 capability ; t#u8 rates [ ( ( u8 ) 12 ) ] ; t#u8 rates_len ; t#u8 rates_ex [ ( ( u8 ) 16 ) ] ; t#u8 rates_ex_len ; unsigned long last_scanned ; t#u8 mode ; t#u32 flags ; t#u32 last_associate ; t#u32 time_stamp [ 2 ] ; t#u16 beacon_interval ; t#u16 listen_interval ; t#u16 atim_window ; t#u8 erp_value ; t#u8 wpa_ie [ 64 ] ; t#size_t wpa_ie_len ; t#u8 rsn_ie [ 64 ] ; t#size_t rsn_ie_len ; s#libipw_tim_parameters tim ; t#u8 power_constraint ; s#libipw_tpc_report tpc_report ; s#libipw_ibss_dfs * ibss_dfs ; s#libipw_csa csa ; s#libipw_quiet quiet ; s#list_head list ; } 
s#libipw_frag_entry struct libipw_frag_entry { unsigned long first_frag_time ; unsigned int seq ; unsigned int last_frag ; s#sk_buff * skb ; t#u8 src_addr [ 6 ] ; t#u8 dst_addr [ 6 ] ; } 
e#libipw_state enum libipw_state { LIBIPW_UNINITIALIZED = 0 , LIBIPW_INITIALIZED , LIBIPW_ASSOCIATING , LIBIPW_ASSOCIATED , LIBIPW_AUTHENTICATING , LIBIPW_AUTHENTICATED , LIBIPW_SHUTDOWN } 
s#libipw_txb struct libipw_txb { t#u8 nr_frags ; t#u8 encrypted ; t#u8 rts_included ; t#u8 reserved ; t#u16 frag_size ; t#u16 payload_size ; s#sk_buff * fragments [ 0 ] ; } 
s#libipw_hdr_3addr struct libipw_hdr_3addr { t#__le16 frame_ctl ; t#__le16 duration_id ; t#u8 addr1 [ 6 ] ; t#u8 addr2 [ 6 ] ; t#u8 addr3 [ 6 ] ; t#__le16 seq_ctl ; t#u8 payload [ 0 ] ; } 
s#libipw_auth struct libipw_auth { s#libipw_hdr_3addr header ; t#__le16 algorithm ; t#__le16 transaction ; t#__le16 status ; s#libipw_info_element info_element [ 0 ] ; } 
s#libipw_disassoc struct libipw_disassoc { s#libipw_hdr_3addr header ; t#__le16 reason ; } 
s#libipw_action_exchange struct libipw_action_exchange { t#u8 token ; s#libipw_info_element info_element [ 0 ] ; } 
s#libipw_channel_switch struct libipw_channel_switch { t#u8 id ; t#u8 len ; t#u8 mode ; t#u8 channel ; t#u8 count ; } 
s#libipw_action struct libipw_action { s#libipw_hdr_3addr header ; t#u8 category ; t#u8 action ; union { s#libipw_action_exchange exchange ; s#libipw_channel_switch channel_switch ; } format ; } 
s#libipw_probe_response struct libipw_probe_response { s#libipw_hdr_3addr header ; t#__le32 time_stamp [ 2 ] ; t#__le16 beacon_interval ; t#__le16 capability ; s#libipw_info_element info_element [ 0 ] ; } 
s#libipw_probe_request struct libipw_probe_request { s#libipw_hdr_3addr header ; s#libipw_info_element info_element [ 0 ] ; } 
s#libipw_assoc_response struct libipw_assoc_response { s#libipw_hdr_3addr header ; t#__le16 capability ; t#__le16 status ; t#__le16 aid ; s#libipw_info_element info_element [ 0 ] ; } 
s#libipw_reassoc_request struct libipw_reassoc_request { s#libipw_hdr_3addr header ; t#__le16 capability ; t#__le16 listen_interval ; t#u8 current_ap [ 6 ] ; s#libipw_info_element info_element [ 0 ] ; } 
s#libipw_device struct libipw_device { s#net_device * dev ; s#wireless_dev wdev ; s#libipw_security sec ; s#libipw_stats ieee_stats ; s#libipw_geo geo ; s#ieee80211_supported_band bg_band ; s#ieee80211_supported_band a_band ; s#list_head network_free_list ; s#list_head network_list ; s#libipw_network * networks [ 128 ] ; int scans ; int scan_age ; int iw_mode ; s#iw_spy_data spy_data ; t#spinlock_t lock ; int tx_headroom ; t#u32 config ; int open_wep ; int host_encrypt ; int host_encrypt_msdu ; int host_decrypt ; int host_mc_decrypt ; int host_strip_iv_icv ; int host_open_frag ; int ieee802_1x ; int wpa_enabled ; int drop_unencrypted ; int privacy_invoked ; t#size_t wpa_ie_len ; t#u8 * wpa_ie ; s#lib80211_crypt_info crypt_info ; int bcrx_sta_key ; s#libipw_frag_entry frag_cache [ 4 ] ; unsigned int frag_next_idx ; t#u16 fts ; t#u16 rts ; t#u8 bssid [ 6 ] ; e#libipw_state state ; int mode ; int modulation ; int freq_band ; int abg_true ; int perfect_rssi ; int worst_rssi ; t#u16 prev_seq_ctl ; void ( * set_security ) ( s#net_device * , s#libipw_security * ) ; t#netdev_tx_t ( * hard_start_xmit ) ( s#libipw_txb * , s#net_device * , int ) ; int ( * is_queue_full ) ( s#net_device * , int ) ; int ( * handle_management ) ( s#net_device * , s#libipw_network * , t#u16 ) ; int ( * is_qos_active ) ( s#net_device * , s#sk_buff * ) ; int ( * handle_auth ) ( s#net_device * , s#libipw_auth * ) ; int ( * handle_deauth ) ( s#net_device * , s#libipw_disassoc * ) ; int ( * handle_action ) ( s#net_device * , s#libipw_action * , s#libipw_rx_stats * ) ; int ( * handle_disassoc ) ( s#net_device * , s#libipw_disassoc * ) ; int ( * handle_beacon ) ( s#net_device * , s#libipw_probe_response * , s#libipw_network * ) ; int ( * handle_probe_response ) ( s#net_device * , s#libipw_probe_response * , s#libipw_network * ) ; int ( * handle_probe_request ) ( s#net_device * , s#libipw_probe_request * , s#libipw_rx_stats * ) ; int ( * handle_assoc_response ) ( s#net_device * , s#libipw_assoc_response * , s#libipw_network * ) ; int ( * handle_assoc_request ) ( s#net_device * ) ; int ( * handle_reassoc_request ) ( s#net_device * , s#libipw_reassoc_request * ) ; t#u8 priv [ 0 ] ; } 
libipw_get_channel extern const s#libipw_channel * libipw_get_channel ( s#libipw_device * , t#u8 ) 
libipw_get_channel_flags extern t#u8 libipw_get_channel_flags ( s#libipw_device * , t#u8 ) 
libipw_is_valid_channel extern int libipw_is_valid_channel ( s#libipw_device * , t#u8 ) 
libipw_freq_to_channel extern t#u8 libipw_freq_to_channel ( s#libipw_device * , t#u32 ) 
libipw_channel_to_freq extern t#u32 libipw_channel_to_freq ( s#libipw_device * , t#u8 ) 
libipw_channel_to_index extern int libipw_channel_to_index ( s#libipw_device * , t#u8 ) 
libipw_set_geo extern void libipw_set_geo ( s#libipw_device * , const s#libipw_geo * ) 
libipw_get_geo extern const s#libipw_geo * libipw_get_geo ( s#libipw_device * ) 

/* drivers/net/wireless/ipw2x00/libipw_module.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
libipw_networks_age extern void libipw_networks_age ( s#libipw_device * , unsigned long ) 
libipw_change_mtu extern int libipw_change_mtu ( s#net_device * , int ) 
alloc_libipw extern s#net_device * alloc_libipw ( int , int ) 
free_libipw extern void free_libipw ( s#net_device * , int ) 
libipw_debug_level extern t#u32 libipw_debug_level 

/* drivers/net/wireless/ipw2x00/libipw_rx.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
libipw_rx_any extern void libipw_rx_any ( s#libipw_device * , s#sk_buff * , s#libipw_rx_stats * ) 
s#libipw_hdr_4addr struct libipw_hdr_4addr { t#__le16 frame_ctl ; t#__le16 duration_id ; t#u8 addr1 [ 6 ] ; t#u8 addr2 [ 6 ] ; t#u8 addr3 [ 6 ] ; t#__le16 seq_ctl ; t#u8 addr4 [ 6 ] ; t#u8 payload [ 0 ] ; } 
libipw_rx_mgt extern void libipw_rx_mgt ( s#libipw_device * , s#libipw_hdr_4addr * , s#libipw_rx_stats * ) 
libipw_rx extern int libipw_rx ( s#libipw_device * , s#sk_buff * , s#libipw_rx_stats * ) 

/* drivers/net/wireless/ipw2x00/libipw_tx.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##pipe_inode_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
libipw_xmit extern t#netdev_tx_t libipw_xmit ( s#sk_buff * , s#net_device * ) 
libipw_txb_free extern void libipw_txb_free ( s#libipw_txb * ) 

/* drivers/net/wireless/ipw2x00/libipw_wx.o */
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
libipw_wx_set_encodeext extern int libipw_wx_set_encodeext ( s#libipw_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
libipw_wx_get_encodeext extern int libipw_wx_get_encodeext ( s#libipw_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
libipw_wx_get_scan extern int libipw_wx_get_scan ( s#libipw_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
libipw_wx_set_encode extern int libipw_wx_set_encode ( s#libipw_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
libipw_wx_get_encode extern int libipw_wx_get_encode ( s#libipw_device * , s#iw_request_info * , u#iwreq_data * , char * ) 

/* drivers/net/wireless/iwlegacy/common.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s#il_mod_params struct il_mod_params { int sw_crypto ; int disable_hw_scan ; int num_of_queues ; int disable_11n ; int amsdu_size_8K ; int antenna ; int restart_fw ; } 
s##il_base_params
e#il_led_mode enum il_led_mode { IL_LED_DEFAULT , IL_LED_RF_STATE , IL_LED_BLINK , } 
s#il_cfg struct il_cfg { const char * name ; const char * fw_name_pre ; const unsigned int ucode_api_max ; const unsigned int ucode_api_min ; t#u8 valid_tx_ant ; t#u8 valid_rx_ant ; unsigned int sku ; t#u16 eeprom_ver ; t#u16 eeprom_calib_ver ; const s#il_mod_params * mod_params ; s#il_base_params * base_params ; t#u8 scan_rx_antennas [ E#IEEE80211_NUM_BANDS ] ; e#il_led_mode led_mode ; int eeprom_size ; int num_of_queues ; int num_of_ampdu_queues ; t#u32 pll_cfg_val ; t#bool set_l0s ; t#bool use_bsm ; t#u16 led_compensation ; int chain_noise_num_beacons ; unsigned int wd_timeout ; t#bool temperature_kelvin ; const t#bool ucode_tracing ; const t#bool sensitivity_calib_by_driver ; const t#bool chain_noise_calib_by_driver ; const t#u32 regulatory_bands [ 7 ] ; } 
s#il_queue struct il_queue { int n_bd ; int write_ptr ; int read_ptr ; t#dma_addr_t dma_addr ; int n_win ; t#u32 id ; int low_mark ; int high_mark ; } 
s#il_cmd_header struct il_cmd_header { t#u8 cmd ; t#u8 flags ; t#__le16 sequence ; t#u8 data [ 0 ] ; } 
s#il_dram_scratch struct il_dram_scratch { t#u8 try_cnt ; t#u8 bt_kill_cnt ; t#__le16 reserved ; } 
s#ieee80211_hdr struct ieee80211_hdr { t#__le16 frame_control ; t#__le16 duration_id ; t#u8 addr1 [ 6 ] ; t#u8 addr2 [ 6 ] ; t#u8 addr3 [ 6 ] ; t#__le16 seq_ctrl ; t#u8 addr4 [ 6 ] ; } 
s#il_tx_cmd struct il_tx_cmd { t#__le16 len ; t#__le16 next_frame_len ; t#__le32 tx_flags ; s#il_dram_scratch scratch ; t#__le32 rate_n_flags ; t#u8 sta_id ; t#u8 sec_ctl ; t#u8 initial_rate_idx ; t#u8 reserved ; t#u8 key [ 16 ] ; t#__le16 next_frame_flags ; t#__le16 reserved2 ; union { t#__le32 life_time ; t#__le32 attempt ; } stop_time ; t#__le32 dram_lsb_ptr ; t#u8 dram_msb_ptr ; t#u8 rts_retry_limit ; t#u8 data_retry_limit ; t#u8 tid_tspec ; union { t#__le16 pm_frame_timeout ; t#__le16 attempt_duration ; } timeout ; t#__le16 driver_txop ; t#u8 payload [ 0 ] ; s#ieee80211_hdr hdr [ 0 ] ; } 
s#il_device_cmd struct il_device_cmd { s#il_cmd_header hdr ; union { t#u32 flags ; t#u8 val8 ; t#u16 val16 ; t#u32 val32 ; s#il_tx_cmd tx ; t#u8 payload [ 320 ] ; } __attribute__ ( ( packed ) ) cmd ; } 
s#il3945_rx_frame_stats struct il3945_rx_frame_stats { t#u8 phy_count ; t#u8 id ; t#u8 rssi ; t#u8 agc ; t#__le16 sig_avg ; t#__le16 noise_diff ; t#u8 payload [ 0 ] ; } 
s#il3945_rx_frame_hdr struct il3945_rx_frame_hdr { t#__le16 channel ; t#__le16 phy_flags ; t#u8 reserved1 ; t#u8 rate ; t#__le16 len ; t#u8 payload [ 0 ] ; } 
t#__le64 typedef t#__u64 __le64 
s#il3945_rx_frame_end struct il3945_rx_frame_end { t#__le32 status ; t#__le64 timestamp ; t#__le32 beacon_timestamp ; } 
s#il3945_rx_frame struct il3945_rx_frame { s#il3945_rx_frame_stats stats ; s#il3945_rx_frame_hdr hdr ; s#il3945_rx_frame_end end ; } 
s#il3945_tx_resp struct il3945_tx_resp { t#u8 failure_rts ; t#u8 failure_frame ; t#u8 bt_kill_count ; t#u8 rate ; t#__le32 wireless_media_time ; t#__le32 status ; } 
s#il3945_beacon_notif struct il3945_beacon_notif { s#il3945_tx_resp beacon_notify_hdr ; t#__le32 low_tsf ; t#__le32 high_tsf ; t#__le32 ibss_mgr_status ; } 
s#il_alive_resp struct il_alive_resp { t#u8 ucode_minor ; t#u8 ucode_major ; t#__le16 reserved1 ; t#u8 sw_rev [ 8 ] ; t#u8 ver_type ; t#u8 ver_subtype ; t#__le16 reserved2 ; t#__le32 log_event_table_ptr ; t#__le32 error_event_table_ptr ; t#__le32 timestamp ; t#__le32 is_valid ; } 
s#il_measurement_histogram struct il_measurement_histogram { t#__le32 ofdm [ 8 ] ; t#__le32 cck [ 8 ] ; } 
s#il_spectrum_notification struct il_spectrum_notification { t#u8 id ; t#u8 token ; t#u8 channel_idx ; t#u8 state ; t#__le32 start_time ; t#u8 band ; t#u8 channel ; t#u8 type ; t#u8 reserved1 ; t#__le32 cca_ofdm ; t#__le32 cca_cck ; t#__le32 cca_time ; t#u8 basic_type ; t#u8 reserved2 [ 3 ] ; s#il_measurement_histogram histogram ; t#__le32 stop_time ; t#__le32 status ; } 
s#il_csa_notification struct il_csa_notification { t#__le16 band ; t#__le16 channel ; t#__le32 status ; } 
s#il_error_resp struct il_error_resp { t#__le32 error_type ; t#u8 cmd_id ; t#u8 reserved1 ; t#__le16 bad_cmd_seq_num ; t#__le32 error_info ; t#__le64 timestamp ; } 
s#il_card_state_notif struct il_card_state_notif { t#__le32 flags ; } 
s#il_add_sta_resp struct il_add_sta_resp { t#u8 status ; } 
s#il_rem_sta_resp struct il_rem_sta_resp { t#u8 status ; } 
s#il_sleep_notification struct il_sleep_notification { t#u8 pm_sleep_mode ; t#u8 pm_wakeup_src ; t#__le16 reserved ; t#__le32 sleep_time ; t#__le32 tsf_low ; t#__le32 bcon_timer ; } 
s#il_spectrum_resp struct il_spectrum_resp { t#u8 token ; t#u8 id ; t#__le16 status ; } 
s#stats_rx_phy struct stats_rx_phy { t#__le32 ina_cnt ; t#__le32 fina_cnt ; t#__le32 plcp_err ; t#__le32 crc32_err ; t#__le32 overrun_err ; t#__le32 early_overrun_err ; t#__le32 crc32_good ; t#__le32 false_alarm_cnt ; t#__le32 fina_sync_err_cnt ; t#__le32 sfd_timeout ; t#__le32 fina_timeout ; t#__le32 unresponded_rts ; t#__le32 rxe_frame_limit_overrun ; t#__le32 sent_ack_cnt ; t#__le32 sent_cts_cnt ; t#__le32 sent_ba_rsp_cnt ; t#__le32 dsp_self_kill ; t#__le32 mh_format_err ; t#__le32 re_acq_main_rssi_sum ; t#__le32 reserved3 ; } 
s#stats_rx_non_phy struct stats_rx_non_phy { t#__le32 bogus_cts ; t#__le32 bogus_ack ; t#__le32 non_bssid_frames ; t#__le32 filtered_frames ; t#__le32 non_channel_beacons ; t#__le32 channel_beacons ; t#__le32 num_missed_bcon ; t#__le32 adc_rx_saturation_time ; t#__le32 ina_detection_search_time ; t#__le32 beacon_silence_rssi_a ; t#__le32 beacon_silence_rssi_b ; t#__le32 beacon_silence_rssi_c ; t#__le32 interference_data_flag ; t#__le32 channel_load ; t#__le32 dsp_false_alarms ; t#__le32 beacon_rssi_a ; t#__le32 beacon_rssi_b ; t#__le32 beacon_rssi_c ; t#__le32 beacon_energy_a ; t#__le32 beacon_energy_b ; t#__le32 beacon_energy_c ; } 
s#stats_rx_ht_phy struct stats_rx_ht_phy { t#__le32 plcp_err ; t#__le32 overrun_err ; t#__le32 early_overrun_err ; t#__le32 crc32_good ; t#__le32 crc32_err ; t#__le32 mh_format_err ; t#__le32 agg_crc32_good ; t#__le32 agg_mpdu_cnt ; t#__le32 agg_cnt ; t#__le32 unsupport_mcs ; } 
s#stats_rx struct stats_rx { s#stats_rx_phy ofdm ; s#stats_rx_phy cck ; s#stats_rx_non_phy general ; s#stats_rx_ht_phy ofdm_ht ; } 
s#stats_tx_non_phy_agg struct stats_tx_non_phy_agg { t#__le32 ba_timeout ; t#__le32 ba_reschedule_frames ; t#__le32 scd_query_agg_frame_cnt ; t#__le32 scd_query_no_agg ; t#__le32 scd_query_agg ; t#__le32 scd_query_mismatch ; t#__le32 frame_not_ready ; t#__le32 underrun ; t#__le32 bt_prio_kill ; t#__le32 rx_ba_rsp_cnt ; } 
s#stats_tx struct stats_tx { t#__le32 preamble_cnt ; t#__le32 rx_detected_cnt ; t#__le32 bt_prio_defer_cnt ; t#__le32 bt_prio_kill_cnt ; t#__le32 few_bytes_cnt ; t#__le32 cts_timeout ; t#__le32 ack_timeout ; t#__le32 expected_ack_cnt ; t#__le32 actual_ack_cnt ; t#__le32 dump_msdu_cnt ; t#__le32 burst_abort_next_frame_mismatch_cnt ; t#__le32 burst_abort_missing_next_frame_cnt ; t#__le32 cts_timeout_collision ; t#__le32 ack_or_ba_timeout_collision ; s#stats_tx_non_phy_agg agg ; t#__le32 reserved1 ; } 
s#stats_dbg struct stats_dbg { t#__le32 burst_check ; t#__le32 burst_count ; t#__le32 wait_for_silence_timeout_cnt ; t#__le32 reserved [ 3 ] ; } 
s#stats_div struct stats_div { t#__le32 tx_on_a ; t#__le32 tx_on_b ; t#__le32 exec_time ; t#__le32 probe_time ; t#__le32 reserved1 ; t#__le32 reserved2 ; } 
s#stats_general_common struct stats_general_common { t#__le32 temperature ; s#stats_dbg dbg ; t#__le32 sleep_time ; t#__le32 slots_out ; t#__le32 slots_idle ; t#__le32 ttl_timestamp ; s#stats_div div ; t#__le32 rx_enable_counter ; t#__le32 num_of_sos_states ; } 
s#stats_general struct stats_general { s#stats_general_common common ; t#__le32 reserved2 ; t#__le32 reserved3 ; } 
s#il_notif_stats struct il_notif_stats { t#__le32 flag ; s#stats_rx rx ; s#stats_tx tx ; s#stats_general general ; } 
s#il_compressed_ba_resp struct il_compressed_ba_resp { t#__le32 sta_addr_lo32 ; t#__le16 sta_addr_hi16 ; t#__le16 reserved ; t#u8 sta_id ; t#u8 tid ; t#__le16 seq_ctl ; t#__le64 bitmap ; t#__le16 scd_flow ; t#__le16 scd_ssn ; } 
s#il_missed_beacon_notif struct il_missed_beacon_notif { t#__le32 consecutive_missed_beacons ; t#__le32 total_missed_becons ; t#__le32 num_expected_beacons ; t#__le32 num_recvd_beacons ; } 
s#il_rx_pkt struct il_rx_pkt { t#__le32 len_n_flags ; s#il_cmd_header hdr ; union { s#il3945_rx_frame rx_frame ; s#il3945_tx_resp tx_resp ; s#il3945_beacon_notif beacon_status ; s#il_alive_resp alive_frame ; s#il_spectrum_notification spectrum_notif ; s#il_csa_notification csa_notif ; s#il_error_resp err_resp ; s#il_card_state_notif card_state_notif ; s#il_add_sta_resp add_sta ; s#il_rem_sta_resp rem_sta ; s#il_sleep_notification sleep_notif ; s#il_spectrum_resp spectrum ; s#il_notif_stats stats ; s#il_compressed_ba_resp compressed_ba ; s#il_missed_beacon_notif missed_beacon ; t#__le32 status ; t#u8 raw [ 0 ] ; } u ; } 
s#il_host_cmd struct il_host_cmd { const void * data ; unsigned long reply_page ; void ( * callback ) ( s#il_priv * , s#il_device_cmd * , s#il_rx_pkt * ) ; t#u32 flags ; t#u16 len ; t#u8 id ; } 
s#il_cmd_meta struct il_cmd_meta { s#il_host_cmd * source ; void ( * callback ) ( s#il_priv * , s#il_device_cmd * , s#il_rx_pkt * ) ; t#u32 flags ; t#dma_addr_t mapping ; t#__u32 len ; } 
s#il_tx_queue struct il_tx_queue { s#il_queue q ; void * tfds ; s#il_device_cmd * * cmd ; s#il_cmd_meta * meta ; s#sk_buff * * skbs ; unsigned long time_stamp ; t#u8 need_update ; t#u8 sched_retry ; t#u8 active ; t#u8 swq_id ; } 
s#ieee80211_channel_switch struct ieee80211_channel_switch { t#u64 timestamp ; t#bool block_tx ; s#cfg80211_chan_def chandef ; t#u8 count ; } 
s#sta_id_modify struct sta_id_modify { t#u8 addr [ 6 ] ; t#__le16 reserved1 ; t#u8 sta_id ; t#u8 modify_mask ; t#__le16 reserved2 ; } 
s#il4965_keyinfo struct il4965_keyinfo { t#__le16 key_flags ; t#u8 tkip_rx_tsc_byte2 ; t#u8 reserved1 ; t#__le16 tkip_rx_ttak [ 5 ] ; t#u8 key_offset ; t#u8 reserved2 ; t#u8 key [ 16 ] ; } 
s#il_addsta_cmd struct il_addsta_cmd { t#u8 mode ; t#u8 reserved [ 3 ] ; s#sta_id_modify sta ; s#il4965_keyinfo key ; t#__le32 station_flags ; t#__le32 station_flags_msk ; t#__le16 tid_disable_tx ; t#__le16 rate_n_flags ; t#u8 add_immediate_ba_tid ; t#u8 remove_immediate_ba_tid ; t#__le16 add_immediate_ba_ssn ; t#__le16 sleep_tx_count ; t#__le16 reserved2 ; } 
s#il_led_cmd struct il_led_cmd { t#__le32 interval ; t#u8 id ; t#u8 off ; t#u8 on ; t#u8 reserved ; } 
s#il_ops struct il_ops { void ( * txq_update_byte_cnt_tbl ) ( s#il_priv * , s#il_tx_queue * , t#u16 ) ; int ( * txq_attach_buf_to_tfd ) ( s#il_priv * , s#il_tx_queue * , t#dma_addr_t , t#u16 , t#u8 , t#u8 ) ; void ( * txq_free_tfd ) ( s#il_priv * , s#il_tx_queue * ) ; int ( * txq_init ) ( s#il_priv * , s#il_tx_queue * ) ; void ( * init_alive_start ) ( s#il_priv * ) ; int ( * is_valid_rtc_data_addr ) ( t#u32 ) ; int ( * load_ucode ) ( s#il_priv * ) ; void ( * dump_nic_error_log ) ( s#il_priv * ) ; int ( * dump_fh ) ( s#il_priv * , char * * , t#bool ) ; int ( * set_channel_switch ) ( s#il_priv * , s#ieee80211_channel_switch * ) ; int ( * apm_init ) ( s#il_priv * ) ; int ( * send_tx_power ) ( s#il_priv * ) ; void ( * update_chain_flags ) ( s#il_priv * ) ; int ( * eeprom_acquire_semaphore ) ( s#il_priv * ) ; void ( * eeprom_release_semaphore ) ( s#il_priv * ) ; int ( * rxon_assoc ) ( s#il_priv * ) ; int ( * commit_rxon ) ( s#il_priv * ) ; void ( * set_rxon_chain ) ( s#il_priv * ) ; t#u16 ( * get_hcmd_size ) ( t#u8 , t#u16 ) ; t#u16 ( * build_addsta_hcmd ) ( const s#il_addsta_cmd * , t#u8 * ) ; int ( * request_scan ) ( s#il_priv * , s#ieee80211_vif * ) ; void ( * post_scan ) ( s#il_priv * ) ; void ( * post_associate ) ( s#il_priv * ) ; void ( * config_ap ) ( s#il_priv * ) ; int ( * update_bcast_stations ) ( s#il_priv * ) ; int ( * manage_ibss_station ) ( s#il_priv * , s#ieee80211_vif * , t#bool ) ; int ( * send_led_cmd ) ( s#il_priv * , s#il_led_cmd * ) ; } 
E#IL_CN_MAX 0xff 
s#il_rx_buf struct il_rx_buf { t#dma_addr_t page_dma ; s#page * page ; s#list_head list ; } 
s#il_force_reset struct il_force_reset { int reset_request_count ; int reset_success_count ; int reset_reject_count ; unsigned long reset_duration ; unsigned long last_force_reset_jiffies ; } 
s#il4965_channel_tgd_info struct il4965_channel_tgd_info { t#u8 type ; t#s8 max_power ; } 
s#il4965_channel_tgh_info struct il4965_channel_tgh_info { t#s64 last_radar_time ; } 
s#il_eeprom_channel struct il_eeprom_channel { t#u8 flags ; t#s8 max_power_avg ; } 
s#il3945_tx_power struct il3945_tx_power { t#u8 tx_gain ; t#u8 dsp_atten ; } 
s#il3945_channel_power_info struct il3945_channel_power_info { s#il3945_tx_power tpc ; t#s8 power_table_idx ; t#s8 base_power_idx ; t#s8 requested_power ; } 
s#il3945_scan_power_info struct il3945_scan_power_info { s#il3945_tx_power tpc ; t#s8 power_table_idx ; t#s8 requested_power ; } 
s#il_channel_info struct il_channel_info { s#il4965_channel_tgd_info tgd ; s#il4965_channel_tgh_info tgh ; s#il_eeprom_channel eeprom ; s#il_eeprom_channel ht40_eeprom ; t#u8 channel ; t#u8 flags ; t#s8 max_power_avg ; t#s8 curr_txpow ; t#s8 min_power ; t#s8 scan_power ; t#u8 group_idx ; t#u8 band_idx ; e#ieee80211_band band ; t#s8 ht40_max_power_avg ; t#u8 ht40_flags ; t#u8 ht40_extension_channel ; s#il3945_channel_power_info power_info [ ( 33 ) ] ; s#il3945_scan_power_info scan_pwr_info [ ( 2 ) ] ; } 
s#fw_desc struct fw_desc { void * v_addr ; t#dma_addr_t p_addr ; t#u32 len ; } 
e#ucode_type enum ucode_type { UCODE_NONE = 0 , UCODE_INIT , UCODE_RT } 
s#il_ac_qos struct il_ac_qos { t#__le16 cw_min ; t#__le16 cw_max ; t#u8 aifsn ; t#u8 reserved1 ; t#__le16 edca_txop ; } 
s#il_qosparam_cmd struct il_qosparam_cmd { t#__le32 qos_flags ; s#il_ac_qos ac [ 4 ] ; } 
s#il_qos_info struct il_qos_info { int qos_active ; s#il_qosparam_cmd def_qos_parm ; } 
s#il_rxon_cmd struct il_rxon_cmd { t#u8 node_addr [ 6 ] ; t#__le16 reserved1 ; t#u8 bssid_addr [ 6 ] ; t#__le16 reserved2 ; t#u8 wlap_bssid_addr [ 6 ] ; t#__le16 reserved3 ; t#u8 dev_type ; t#u8 air_propagation ; t#__le16 rx_chain ; t#u8 ofdm_basic_rates ; t#u8 cck_basic_rates ; t#__le16 assoc_id ; t#__le32 flags ; t#__le32 filter_flags ; t#__le16 channel ; t#u8 ofdm_ht_single_stream_basic_rates ; t#u8 ofdm_ht_dual_stream_basic_rates ; t#u8 reserved4 ; t#u8 reserved5 ; } 
s#il_rxon_time_cmd struct il_rxon_time_cmd { t#__le64 timestamp ; t#__le16 beacon_interval ; t#__le16 atim_win ; t#__le32 beacon_init_val ; t#__le16 listen_interval ; t#u8 dtim_period ; t#u8 delta_cp_bss_tbtts ; } 
s#il_init_alive_resp struct il_init_alive_resp { t#u8 ucode_minor ; t#u8 ucode_major ; t#__le16 reserved1 ; t#u8 sw_rev [ 8 ] ; t#u8 ver_type ; t#u8 ver_subtype ; t#__le16 reserved2 ; t#__le32 log_event_table_ptr ; t#__le32 error_event_table_ptr ; t#__le32 timestamp ; t#__le32 is_valid ; t#__le32 voltage ; t#__le32 therm_r1 [ 2 ] ; t#__le32 therm_r2 [ 2 ] ; t#__le32 therm_r3 [ 2 ] ; t#__le32 therm_r4 [ 2 ] ; t#__le32 tx_atten [ 5 ] [ 2 ] ; } 
s#il_sensitivity_data struct il_sensitivity_data { t#u32 auto_corr_ofdm ; t#u32 auto_corr_ofdm_mrc ; t#u32 auto_corr_ofdm_x1 ; t#u32 auto_corr_ofdm_mrc_x1 ; t#u32 auto_corr_cck ; t#u32 auto_corr_cck_mrc ; t#u32 last_bad_plcp_cnt_ofdm ; t#u32 last_fa_cnt_ofdm ; t#u32 last_bad_plcp_cnt_cck ; t#u32 last_fa_cnt_cck ; t#u32 nrg_curr_state ; t#u32 nrg_prev_state ; t#u32 nrg_value [ 10 ] ; t#u8 nrg_silence_rssi [ 20 ] ; t#u32 nrg_silence_ref ; t#u32 nrg_energy_idx ; t#u32 nrg_silence_idx ; t#u32 nrg_th_cck ; t#s32 nrg_auto_corr_silence_diff ; t#u32 num_in_cck_no_fa ; t#u32 nrg_th_ofdm ; t#u16 barker_corr_th_min ; t#u16 barker_corr_th_min_mrc ; t#u16 nrg_th_cca ; } 
s#il_chain_noise_data struct il_chain_noise_data { t#u32 active_chains ; t#u32 chain_noise_a ; t#u32 chain_noise_b ; t#u32 chain_noise_c ; t#u32 chain_signal_a ; t#u32 chain_signal_b ; t#u32 chain_signal_c ; t#u16 beacon_count ; t#u8 disconn_array [ 3 ] ; t#u8 delta_gain_code [ 3 ] ; t#u8 radio_write ; t#u8 state ; } 
s#il_ht_config struct il_ht_config { t#bool single_chain_sufficient ; e#ieee80211_smps_mode smps ; } 
s#il_rb_status struct il_rb_status { t#__le16 closed_rb_num ; t#__le16 closed_fr_num ; t#__le16 finished_rb_num ; t#__le16 finished_fr_nam ; t#__le32 __unused ; } 
s#il_rx_queue struct il_rx_queue { t#__le32 * bd ; t#dma_addr_t bd_dma ; s#il_rx_buf pool [ 256 + 64 ] ; s#il_rx_buf * queue [ 256 ] ; t#u32 read ; t#u32 write ; t#u32 free_count ; t#u32 write_actual ; s#list_head rx_free ; s#list_head rx_used ; int need_update ; s#il_rb_status * rb_stts ; t#dma_addr_t rb_stts_dma ; t#spinlock_t lock ; } 
s#il_dma_ptr struct il_dma_ptr { t#dma_addr_t dma ; void * addr ; t#size_t size ; } 
s#traffic_stats struct traffic_stats { } 
s#isr_stats struct isr_stats { t#u32 hw ; t#u32 sw ; t#u32 err_code ; t#u32 sch ; t#u32 alive ; t#u32 rfkill ; t#u32 ctkill ; t#u32 wakeup ; t#u32 rx ; t#u32 handlers [ E#IL_CN_MAX ] ; t#u32 tx ; t#u32 unhandled ; } 
s#il_powertable_cmd struct il_powertable_cmd { t#__le16 flags ; t#u8 keep_alive_seconds ; t#u8 debug_flags ; t#__le32 rx_data_timeout ; t#__le32 tx_data_timeout ; t#__le32 sleep_interval [ 5 ] ; t#__le32 keep_alive_beacons ; } 
s#il_power_mgr struct il_power_mgr { s#il_powertable_cmd sleep_cmd ; s#il_powertable_cmd sleep_cmd_next ; int debug_sleep_level_override ; t#bool pci_pm ; } 
s#il_ht_agg struct il_ht_agg { t#u16 txq_id ; t#u16 frame_count ; t#u16 wait_for_ba ; t#u16 start_idx ; t#u64 bitmap ; t#u32 rate_n_flags ; t#u8 state ; } 
s#il_tid_data struct il_tid_data { t#u16 seq_number ; t#u16 tfds_in_queue ; s#il_ht_agg agg ; } 
s#il_hw_key struct il_hw_key { t#u32 cipher ; int keylen ; t#u8 keyidx ; t#u8 key [ 32 ] ; } 
s#il_link_qual_general_params struct il_link_qual_general_params { t#u8 flags ; t#u8 mimo_delimiter ; t#u8 single_stream_ant_msk ; t#u8 dual_stream_ant_msk ; t#u8 start_rate_idx [ 4 ] ; } 
s#il_link_qual_agg_params struct il_link_qual_agg_params { t#__le16 agg_time_limit ; t#u8 agg_dis_start_th ; t#u8 agg_frame_cnt_limit ; t#__le32 reserved ; } 
s#il_link_quality_cmd struct il_link_quality_cmd { t#u8 sta_id ; t#u8 reserved1 ; t#__le16 control ; s#il_link_qual_general_params general_params ; s#il_link_qual_agg_params agg_params ; struct { t#__le32 rate_n_flags ; } rs_table [ 16 ] ; t#__le32 reserved2 ; } 
s#il_station_entry struct il_station_entry { s#il_addsta_cmd sta ; s#il_tid_data tid [ 9 ] ; t#u8 used ; s#il_hw_key keyinfo ; s#il_link_quality_cmd * lq ; } 
s#il_eeprom_calib_measure struct il_eeprom_calib_measure { t#u8 temperature ; t#u8 gain_idx ; t#u8 actual_pow ; t#s8 pa_det ; } 
s#il_eeprom_calib_ch_info struct il_eeprom_calib_ch_info { t#u8 ch_num ; s#il_eeprom_calib_measure measurements [ ( 2 ) ] [ ( 3 ) ] ; } 
s#il_eeprom_calib_subband_info struct il_eeprom_calib_subband_info { t#u8 ch_from ; t#u8 ch_to ; s#il_eeprom_calib_ch_info ch1 ; s#il_eeprom_calib_ch_info ch2 ; } 
s#il_eeprom_calib_info struct il_eeprom_calib_info { t#u8 saturation_power24 ; t#u8 saturation_power52 ; t#__le16 voltage ; s#il_eeprom_calib_subband_info band_info [ ( 8 ) ] ; } 
s#iwl39_stats_rx_phy struct iwl39_stats_rx_phy { t#__le32 ina_cnt ; t#__le32 fina_cnt ; t#__le32 plcp_err ; t#__le32 crc32_err ; t#__le32 overrun_err ; t#__le32 early_overrun_err ; t#__le32 crc32_good ; t#__le32 false_alarm_cnt ; t#__le32 fina_sync_err_cnt ; t#__le32 sfd_timeout ; t#__le32 fina_timeout ; t#__le32 unresponded_rts ; t#__le32 rxe_frame_limit_overrun ; t#__le32 sent_ack_cnt ; t#__le32 sent_cts_cnt ; } 
s#iwl39_stats_rx_non_phy struct iwl39_stats_rx_non_phy { t#__le32 bogus_cts ; t#__le32 bogus_ack ; t#__le32 non_bssid_frames ; t#__le32 filtered_frames ; t#__le32 non_channel_beacons ; } 
s#iwl39_stats_rx struct iwl39_stats_rx { s#iwl39_stats_rx_phy ofdm ; s#iwl39_stats_rx_phy cck ; s#iwl39_stats_rx_non_phy general ; } 
s#iwl39_stats_tx struct iwl39_stats_tx { t#__le32 preamble_cnt ; t#__le32 rx_detected_cnt ; t#__le32 bt_prio_defer_cnt ; t#__le32 bt_prio_kill_cnt ; t#__le32 few_bytes_cnt ; t#__le32 cts_timeout ; t#__le32 ack_timeout ; t#__le32 expected_ack_cnt ; t#__le32 actual_ack_cnt ; } 
s#iwl39_stats_div struct iwl39_stats_div { t#__le32 tx_on_a ; t#__le32 tx_on_b ; t#__le32 exec_time ; t#__le32 probe_time ; } 
s#iwl39_stats_general struct iwl39_stats_general { t#__le32 temperature ; s#stats_dbg dbg ; t#__le32 sleep_time ; t#__le32 slots_out ; t#__le32 slots_idle ; t#__le32 ttl_timestamp ; s#iwl39_stats_div div ; } 
s#il3945_notif_stats struct il3945_notif_stats { t#__le32 flag ; s#iwl39_stats_rx rx ; s#iwl39_stats_tx tx ; s#iwl39_stats_general general ; } 
s#il3945_clip_group struct il3945_clip_group { const t#s8 clip_powers [ ( 4 + 8 ) ] ; } 
s#il_rx_phy_res struct il_rx_phy_res { t#u8 non_cfg_phy_cnt ; t#u8 cfg_phy_cnt ; t#u8 stat_id ; t#u8 reserved1 ; t#__le64 timestamp ; t#__le32 beacon_time_stamp ; t#__le16 phy_flags ; t#__le16 channel ; t#u8 non_cfg_phy_buf [ 32 ] ; t#__le32 rate_n_flags ; t#__le16 byte_count ; t#__le16 frame_time ; } 
s#il_wep_key struct il_wep_key { t#u8 key_idx ; t#u8 key_offset ; t#u8 reserved1 [ 2 ] ; t#u8 key_size ; t#u8 reserved2 [ 3 ] ; t#u8 key [ 16 ] ; } 
s#il_sensitivity_ranges struct il_sensitivity_ranges { t#u16 min_nrg_cck ; t#u16 max_nrg_cck ; t#u16 nrg_th_cck ; t#u16 nrg_th_ofdm ; t#u16 auto_corr_min_ofdm ; t#u16 auto_corr_min_ofdm_mrc ; t#u16 auto_corr_min_ofdm_x1 ; t#u16 auto_corr_min_ofdm_mrc_x1 ; t#u16 auto_corr_max_ofdm ; t#u16 auto_corr_max_ofdm_mrc ; t#u16 auto_corr_max_ofdm_x1 ; t#u16 auto_corr_max_ofdm_mrc_x1 ; t#u16 auto_corr_max_cck ; t#u16 auto_corr_max_cck_mrc ; t#u16 auto_corr_min_cck ; t#u16 auto_corr_min_cck_mrc ; t#u16 barker_corr_th_min ; t#u16 barker_corr_th_min_mrc ; t#u16 nrg_th_cca ; } 
s#il_hw_params struct il_hw_params { t#u8 bcast_id ; t#u8 max_txq_num ; t#u8 dma_chnl_num ; t#u16 scd_bc_tbls_size ; t#u32 tfd_size ; t#u8 tx_chains_num ; t#u8 rx_chains_num ; t#u8 valid_tx_ant ; t#u8 valid_rx_ant ; t#u16 max_rxq_size ; t#u16 max_rxq_log ; t#u32 rx_page_order ; t#u32 rx_wrt_ptr_reg ; t#u8 max_stations ; t#u8 ht40_channel ; t#u8 max_beacon_itrvl ; t#u32 max_inst_size ; t#u32 max_data_size ; t#u32 max_bsm_size ; t#u32 ct_kill_threshold ; t#u16 beacon_time_tsf_bits ; const s#il_sensitivity_ranges * sens ; } 
s#il_priv struct il_priv { s#ieee80211_hw * hw ; s#ieee80211_channel * ieee_channels ; s#ieee80211_rate * ieee_rates ; s#il_cfg * cfg ; const s#il_ops * ops ; s#list_head free_frames ; int frames_count ; e#ieee80211_band band ; int alloc_rxb_page ; void ( * handlers [ E#IL_CN_MAX ] ) ( s#il_priv * , s#il_rx_buf * ) ; s#ieee80211_supported_band bands [ E#IEEE80211_NUM_BANDS ] ; s#il_spectrum_notification measure_report ; t#u8 measurement_status ; t#u32 ucode_beacon_time ; int missed_beacon_threshold ; t#u32 ibss_manager ; s#il_force_reset force_reset ; s#il_channel_info * channel_info ; t#u8 channel_count ; t#s32 temperature ; t#s32 last_temperature ; unsigned long scan_start ; unsigned long scan_start_tsf ; void * scan_cmd ; e#ieee80211_band scan_band ; s#cfg80211_scan_request * scan_request ; s#ieee80211_vif * scan_vif ; t#u8 scan_tx_ant [ E#IEEE80211_NUM_BANDS ] ; t#u8 mgmt_tx_ant ; t#spinlock_t lock ; t#spinlock_t hcmd_lock ; t#spinlock_t reg_lock ; s#mutex mutex ; s#pci_dev * pci_dev ; void * hw_base ; t#u32 hw_rev ; t#u32 hw_wa_rev ; t#u8 rev_id ; t#u8 cmd_queue ; t#u8 sta_key_max_num ; s#mac_address addresses [ 1 ] ; int fw_idx ; t#u32 ucode_ver ; s#fw_desc ucode_code ; s#fw_desc ucode_data ; s#fw_desc ucode_data_backup ; s#fw_desc ucode_init ; s#fw_desc ucode_init_data ; s#fw_desc ucode_boot ; e#ucode_type ucode_type ; t#u8 ucode_write_complete ; char firmware_name [ 25 ] ; s#ieee80211_vif * vif ; s#il_qos_info qos_data ; struct { t#bool enabled ; t#bool is_40mhz ; t#bool non_gf_sta_present ; t#u8 protection ; t#u8 extension_chan_offset ; } ht ; const s#il_rxon_cmd active ; s#il_rxon_cmd staging ; s#il_rxon_time_cmd timing ; t#__le16 switch_channel ; s#il_init_alive_resp card_alive_init ; s#il_alive_resp card_alive ; t#u16 active_rate ; t#u8 start_calib ; s#il_sensitivity_data sensitivity_data ; s#il_chain_noise_data chain_noise_data ; t#__le16 sensitivity_tbl [ ( 11 ) ] ; s#il_ht_config current_ht_config ; t#u8 retry_rate ; t#wait_queue_head_t wait_command_queue ; int activity_timer_active ; s#il_rx_queue rxq ; s#il_tx_queue * txq ; unsigned long txq_ctx_active_msk ; s#il_dma_ptr kw ; s#il_dma_ptr scd_bc_tbls ; t#u32 scd_base_addr ; unsigned long status ; s#traffic_stats tx_stats ; s#traffic_stats rx_stats ; s#isr_stats isr_stats ; s#il_power_mgr power_data ; t#u8 bssid [ 6 ] ; t#spinlock_t sta_lock ; int num_stations ; s#il_station_entry stations [ 32 ] ; unsigned long ucode_key_table ; unsigned long queue_stopped [ ( ( ( 32 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long stop_reason ; t#atomic_t queue_stop_count [ 4 ] ; t#u8 is_open ; t#u8 mac80211_registered ; t#u8 * eeprom ; s#il_eeprom_calib_info * calib_info ; e#nl80211_iftype iw_mode ; t#u64 timestamp ; union { struct { void * shared_virt ; t#dma_addr_t shared_phys ; s#delayed_work thermal_periodic ; s#delayed_work rfkill_poll ; s#il3945_notif_stats stats ; t#u32 sta_supp_rates ; int last_rx_rssi ; t#u32 last_beacon_time ; t#u64 last_tsf ; const s#il3945_clip_group clip_groups [ 5 ] ; } _3945 ; struct { s#il_rx_phy_res last_phy_res ; t#bool last_phy_res_valid ; t#u32 ampdu_ref ; s#completion firmware_loading_complete ; t#u8 phy_calib_chain_noise_reset_cmd ; t#u8 phy_calib_chain_noise_gain_cmd ; t#u8 key_mapping_keys ; s#il_wep_key wep_keys [ 4 ] ; s#il_notif_stats stats ; } _4965 ; } ; s#il_hw_params hw_params ; t#u32 inta_mask ; s#workqueue_struct * workqueue ; s#work_struct restart ; s#work_struct scan_completed ; s#work_struct rx_replenish ; s#work_struct abort_scan ; t#bool beacon_enabled ; s#sk_buff * beacon_skb ; s#work_struct tx_flush ; s#tasklet_struct irq_tasklet ; s#delayed_work init_alive_start ; s#delayed_work alive_start ; s#delayed_work scan_check ; t#s8 tx_power_user_lmt ; t#s8 tx_power_device_lmt ; t#s8 tx_power_next ; s#work_struct txpower_work ; t#u32 disable_sens_cal ; t#u32 disable_chain_noise_cal ; t#u32 disable_tx_power_cal ; s#work_struct run_time_calib_work ; s#timer_list stats_periodic ; s#timer_list watchdog ; t#bool hw_ready ; s#led_classdev led ; unsigned long blink_on , blink_off ; t#bool led_registered ; } 
_il_poll_bit extern int _il_poll_bit ( s#il_priv * , t#u32 , t#u32 , t#u32 , int ) 
il_set_bit extern void il_set_bit ( s#il_priv * , t#u32 , t#u32 ) 
il_clear_bit extern void il_clear_bit ( s#il_priv * , t#u32 , t#u32 ) 
_il_grab_nic_access extern t#bool _il_grab_nic_access ( s#il_priv * ) 
il_poll_bit extern int il_poll_bit ( s#il_priv * , t#u32 , t#u32 , int ) 
il_rd_prph extern t#u32 il_rd_prph ( s#il_priv * , t#u32 ) 
il_wr_prph extern void il_wr_prph ( s#il_priv * , t#u32 , t#u32 ) 
il_read_targ_mem extern t#u32 il_read_targ_mem ( s#il_priv * , t#u32 ) 
il_write_targ_mem extern void il_write_targ_mem ( s#il_priv * , t#u32 , t#u32 ) 
il_get_cmd_string const char * il_get_cmd_string ( t#u8 ) 
il_send_cmd_sync int il_send_cmd_sync ( s#il_priv * , s#il_host_cmd * ) 
il_send_cmd int il_send_cmd ( s#il_priv * , s#il_host_cmd * ) 
il_send_cmd_pdu int il_send_cmd_pdu ( s#il_priv * , t#u8 , t#u16 , const void * ) 
il_send_cmd_pdu_async int il_send_cmd_pdu_async ( s#il_priv * , t#u8 , t#u16 , const void * , void ( * ) ( s#il_priv * , s#il_device_cmd * , s#il_rx_pkt * ) ) 
il_leds_init void il_leds_init ( s#il_priv * ) 
il_leds_exit void il_leds_exit ( s#il_priv * ) 
il_eeprom_query_addr const t#u8 * il_eeprom_query_addr ( const s#il_priv * , t#size_t ) 
il_eeprom_query16 t#u16 il_eeprom_query16 ( const s#il_priv * , t#size_t ) 
il_eeprom_init int il_eeprom_init ( s#il_priv * ) 
il_eeprom_free void il_eeprom_free ( s#il_priv * ) 
il_init_channel_map int il_init_channel_map ( s#il_priv * ) 
il_free_channel_map void il_free_channel_map ( s#il_priv * ) 
il_get_channel_info const s#il_channel_info * il_get_channel_info ( const s#il_priv * , e#ieee80211_band , t#u16 ) 
il_power_update_mode extern int il_power_update_mode ( s#il_priv * , t#bool ) 
il_power_initialize extern void il_power_initialize ( s#il_priv * ) 
il_scan_cancel int il_scan_cancel ( s#il_priv * ) 
il_scan_cancel_timeout int il_scan_cancel_timeout ( s#il_priv * , unsigned long ) 
il_setup_rx_scan_handlers void il_setup_rx_scan_handlers ( s#il_priv * ) 
il_get_active_dwell_time t#u16 il_get_active_dwell_time ( s#il_priv * , e#ieee80211_band , t#u8 ) 
il_get_passive_dwell_time t#u16 il_get_passive_dwell_time ( s#il_priv * , e#ieee80211_band , s#ieee80211_vif * ) 
il_init_scan_params void il_init_scan_params ( s#il_priv * ) 
il_mac_hw_scan int il_mac_hw_scan ( s#ieee80211_hw * , s#ieee80211_vif * , s#cfg80211_scan_request * ) 
s#ieee80211_ext_chansw_ie struct ieee80211_ext_chansw_ie { t#u8 mode ; t#u8 new_operating_class ; t#u8 new_ch_num ; t#u8 count ; } 
s#ieee80211_msrment_ie struct ieee80211_msrment_ie { t#u8 token ; t#u8 mode ; t#u8 type ; t#u8 request [ 0 ] ; } 
s#ieee80211_mgmt struct ieee80211_mgmt { t#__le16 frame_control ; t#__le16 duration ; t#u8 da [ 6 ] ; t#u8 sa [ 6 ] ; t#u8 bssid [ 6 ] ; t#__le16 seq_ctrl ; union { struct { t#__le16 auth_alg ; t#__le16 auth_transaction ; t#__le16 status_code ; t#u8 variable [ 0 ] ; } __attribute__ ( ( packed ) ) auth ; struct { t#__le16 reason_code ; } __attribute__ ( ( packed ) ) deauth ; struct { t#__le16 capab_info ; t#__le16 listen_interval ; t#u8 variable [ 0 ] ; } __attribute__ ( ( packed ) ) assoc_req ; struct { t#__le16 capab_info ; t#__le16 status_code ; t#__le16 aid ; t#u8 variable [ 0 ] ; } __attribute__ ( ( packed ) ) assoc_resp , reassoc_resp ; struct { t#__le16 capab_info ; t#__le16 listen_interval ; t#u8 current_ap [ 6 ] ; t#u8 variable [ 0 ] ; } __attribute__ ( ( packed ) ) reassoc_req ; struct { t#__le16 reason_code ; } __attribute__ ( ( packed ) ) disassoc ; struct { t#__le64 timestamp ; t#__le16 beacon_int ; t#__le16 capab_info ; t#u8 variable [ 0 ] ; } __attribute__ ( ( packed ) ) beacon ; struct { t#u8 variable [ 0 ] ; } __attribute__ ( ( packed ) ) probe_req ; struct { t#__le64 timestamp ; t#__le16 beacon_int ; t#__le16 capab_info ; t#u8 variable [ 0 ] ; } __attribute__ ( ( packed ) ) probe_resp ; struct { t#u8 category ; union { struct { t#u8 action_code ; t#u8 dialog_token ; t#u8 status_code ; t#u8 variable [ 0 ] ; } __attribute__ ( ( packed ) ) wme_action ; struct { t#u8 action_code ; t#u8 variable [ 0 ] ; } __attribute__ ( ( packed ) ) chan_switch ; struct { t#u8 action_code ; s#ieee80211_ext_chansw_ie data ; t#u8 variable [ 0 ] ; } __attribute__ ( ( packed ) ) ext_chan_switch ; struct { t#u8 action_code ; t#u8 dialog_token ; t#u8 element_id ; t#u8 length ; s#ieee80211_msrment_ie msr_elem ; } __attribute__ ( ( packed ) ) measurement ; struct { t#u8 action_code ; t#u8 dialog_token ; t#__le16 capab ; t#__le16 timeout ; t#__le16 start_seq_num ; } __attribute__ ( ( packed ) ) addba_req ; struct { t#u8 action_code ; t#u8 dialog_token ; t#__le16 status ; t#__le16 capab ; t#__le16 timeout ; } __attribute__ ( ( packed ) ) addba_resp ; struct { t#u8 action_code ; t#__le16 params ; t#__le16 reason_code ; } __attribute__ ( ( packed ) ) delba ; struct { t#u8 action_code ; t#u8 variable [ 0 ] ; } __attribute__ ( ( packed ) ) self_prot ; struct { t#u8 action_code ; t#u8 variable [ 0 ] ; } __attribute__ ( ( packed ) ) mesh_action ; struct { t#u8 action ; t#u8 trans_id [ 2 ] ; } __attribute__ ( ( packed ) ) sa_query ; struct { t#u8 action ; t#u8 smps_control ; } __attribute__ ( ( packed ) ) ht_smps ; struct { t#u8 action_code ; t#u8 chanwidth ; } __attribute__ ( ( packed ) ) ht_notify_cw ; struct { t#u8 action_code ; t#u8 dialog_token ; t#__le16 capability ; t#u8 variable [ 0 ] ; } __attribute__ ( ( packed ) ) tdls_discover_resp ; struct { t#u8 action_code ; t#u8 operating_mode ; } __attribute__ ( ( packed ) ) vht_opmode_notif ; } u ; } __attribute__ ( ( packed ) ) action ; } u ; } 
il_fill_probe_req t#u16 il_fill_probe_req ( s#il_priv * , s#ieee80211_mgmt * , const t#u8 * , const t#u8 * , int , int ) 
il_setup_scan_deferred_work void il_setup_scan_deferred_work ( s#il_priv * ) 
il_cancel_scan_deferred_work void il_cancel_scan_deferred_work ( s#il_priv * ) 
il_send_add_sta int il_send_add_sta ( s#il_priv * , s#il_addsta_cmd * , t#u8 ) 
il_prep_station t#u8 il_prep_station ( s#il_priv * , const t#u8 * , t#bool , s#ieee80211_sta * ) 
il_add_station_common int il_add_station_common ( s#il_priv * , const t#u8 * , t#bool , s#ieee80211_sta * , t#u8 * ) 
il_remove_station int il_remove_station ( s#il_priv * , const t#u8 , const t#u8 * ) 
il_clear_ucode_stations void il_clear_ucode_stations ( s#il_priv * ) 
il_restore_stations void il_restore_stations ( s#il_priv * ) 
il_get_free_ucode_key_idx int il_get_free_ucode_key_idx ( s#il_priv * ) 
il_dealloc_bcast_stations void il_dealloc_bcast_stations ( s#il_priv * ) 
il_send_lq_cmd int il_send_lq_cmd ( s#il_priv * , s#il_link_quality_cmd * , t#u8 , t#bool ) 
il_mac_sta_remove int il_mac_sta_remove ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_sta * ) 
il_rx_queue_space int il_rx_queue_space ( const s#il_rx_queue * ) 
il_rx_queue_update_write_ptr void il_rx_queue_update_write_ptr ( s#il_priv * , s#il_rx_queue * ) 
il_rx_queue_alloc int il_rx_queue_alloc ( s#il_priv * ) 
il_hdl_spectrum_measurement void il_hdl_spectrum_measurement ( s#il_priv * , s#il_rx_buf * ) 
s#ieee80211_rx_status struct ieee80211_rx_status { t#u64 mactime ; t#u32 device_timestamp ; t#u32 ampdu_reference ; t#u32 flag ; t#u32 vendor_radiotap_bitmap ; t#u16 vendor_radiotap_len ; t#u16 freq ; t#u8 rate_idx ; t#u8 vht_nss ; t#u8 rx_flags ; t#u8 band ; t#u8 antenna ; t#s8 signal ; t#u8 chains ; t#s8 chain_signal [ 4 ] ; t#u8 ampdu_delimiter_crc ; t#u8 vendor_radiotap_align ; t#u8 vendor_radiotap_oui [ 3 ] ; t#u8 vendor_radiotap_subns ; } 
il_set_decrypted_flag int il_set_decrypted_flag ( s#il_priv * , s#ieee80211_hdr * , t#u32 , s#ieee80211_rx_status * ) 
il_txq_update_write_ptr extern void il_txq_update_write_ptr ( s#il_priv * , s#il_tx_queue * ) 
il_tx_queue_unmap extern void il_tx_queue_unmap ( s#il_priv * , int ) 
il_tx_queue_free extern void il_tx_queue_free ( s#il_priv * , int ) 
il_cmd_queue_unmap void il_cmd_queue_unmap ( s#il_priv * ) 
il_cmd_queue_free void il_cmd_queue_free ( s#il_priv * ) 
il_queue_space extern int il_queue_space ( const s#il_queue * ) 
il_tx_queue_init extern int il_tx_queue_init ( s#il_priv * , t#u32 ) 
il_tx_queue_reset extern void il_tx_queue_reset ( s#il_priv * , t#u32 ) 
il_tx_cmd_complete void il_tx_cmd_complete ( s#il_priv * , s#il_rx_buf * ) 
il_debug_level extern t#u32 il_debug_level 
il_bcast_addr extern const t#u8 il_bcast_addr [ 6 ] 
il_init_geos int il_init_geos ( s#il_priv * ) 
il_free_geos void il_free_geos ( s#il_priv * ) 
il_is_ht40_tx_allowed t#bool il_is_ht40_tx_allowed ( s#il_priv * , s#ieee80211_sta_ht_cap * ) 
il_send_rxon_timing int il_send_rxon_timing ( s#il_priv * ) 
il_set_rxon_hwcrypto void il_set_rxon_hwcrypto ( s#il_priv * , int ) 
il_check_rxon_cmd int il_check_rxon_cmd ( s#il_priv * ) 
il_full_rxon_required int il_full_rxon_required ( s#il_priv * ) 
il_get_lowest_plcp t#u8 il_get_lowest_plcp ( s#il_priv * ) 
il_set_rxon_ht void il_set_rxon_ht ( s#il_priv * , s#il_ht_config * ) 
il_get_single_channel_number t#u8 il_get_single_channel_number ( s#il_priv * , e#ieee80211_band ) 
il_set_rxon_channel int il_set_rxon_channel ( s#il_priv * , s#ieee80211_channel * ) 
il_set_flags_for_band void il_set_flags_for_band ( s#il_priv * , e#ieee80211_band , s#ieee80211_vif * ) 
il_connection_init_rx_config void il_connection_init_rx_config ( s#il_priv * ) 
il_set_rate void il_set_rate ( s#il_priv * ) 
il_chswitch_done void il_chswitch_done ( s#il_priv * , t#bool ) 
il_hdl_csa void il_hdl_csa ( s#il_priv * , s#il_rx_buf * ) 
il_irq_handle_error void il_irq_handle_error ( s#il_priv * ) 
_il_apm_stop extern void _il_apm_stop ( s#il_priv * ) 
il_apm_stop extern void il_apm_stop ( s#il_priv * ) 
il_apm_init int il_apm_init ( s#il_priv * ) 
il_set_tx_power int il_set_tx_power ( s#il_priv * , t#s8 , t#bool ) 
il_send_bt_config extern void il_send_bt_config ( s#il_priv * ) 
il_send_stats_request extern int il_send_stats_request ( s#il_priv * , t#u8 , t#bool ) 
il_hdl_pm_sleep void il_hdl_pm_sleep ( s#il_priv * , s#il_rx_buf * ) 
il_hdl_pm_debug_stats void il_hdl_pm_debug_stats ( s#il_priv * , s#il_rx_buf * ) 
il_hdl_error void il_hdl_error ( s#il_priv * , s#il_rx_buf * ) 
s#ieee80211_tx_queue_params struct ieee80211_tx_queue_params { t#u16 txop ; t#u16 cw_min ; t#u16 cw_max ; t#u8 aifs ; t#bool acm ; t#bool uapsd ; } 
il_mac_conf_tx int il_mac_conf_tx ( s#ieee80211_hw * , s#ieee80211_vif * , t#u16 , const s#ieee80211_tx_queue_params * ) 
il_mac_tx_last_beacon int il_mac_tx_last_beacon ( s#ieee80211_hw * ) 
il_mac_add_interface int il_mac_add_interface ( s#ieee80211_hw * , s#ieee80211_vif * ) 
il_mac_remove_interface void il_mac_remove_interface ( s#ieee80211_hw * , s#ieee80211_vif * ) 
il_alloc_txq_mem int il_alloc_txq_mem ( s#il_priv * ) 
il_free_txq_mem void il_free_txq_mem ( s#il_priv * ) 
il_force_reset int il_force_reset ( s#il_priv * , t#bool ) 
il_mac_change_interface int il_mac_change_interface ( s#ieee80211_hw * , s#ieee80211_vif * , e#nl80211_iftype , t#bool ) 
il_mac_flush void il_mac_flush ( s#ieee80211_hw * , t#u32 , t#bool ) 
il_bg_watchdog void il_bg_watchdog ( unsigned long ) 
il_setup_watchdog extern void il_setup_watchdog ( s#il_priv * ) 
il_usecs_to_beacons t#u32 il_usecs_to_beacons ( s#il_priv * , t#u32 , t#u32 ) 
il_add_beacon_time t#__le32 il_add_beacon_time ( s#il_priv * , t#u32 , t#u32 , t#u32 ) 
il_pm_ops extern const s#dev_pm_ops il_pm_ops 
il_mac_config int il_mac_config ( s#ieee80211_hw * , t#u32 ) 
il_mac_reset_tsf void il_mac_reset_tsf ( s#ieee80211_hw * , s#ieee80211_vif * ) 
il_mac_bss_info_changed void il_mac_bss_info_changed ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_bss_conf * , t#u32 ) 
il_isr t#irqreturn_t il_isr ( int , void * ) 
s#ieee80211_tx_rate struct ieee80211_tx_rate { t#s8 idx ; t#u16 count : 5 , flags : 11 ; } 
s#ieee80211_tx_info struct ieee80211_tx_info { t#u32 flags ; t#u8 band ; t#u8 hw_queue ; t#u16 ack_frame_id ; union { struct { union { struct { s#ieee80211_tx_rate rates [ 4 ] ; t#s8 rts_cts_rate_idx ; t#u8 use_rts : 1 ; t#u8 use_cts_prot : 1 ; t#u8 short_preamble : 1 ; t#u8 skip_table : 1 ; } ; unsigned long jiffies ; } ; s#ieee80211_vif * vif ; s#ieee80211_key_conf * hw_key ; t#u32 flags ; } control ; struct { s#ieee80211_tx_rate rates [ 4 ] ; int ack_signal ; t#u8 ampdu_ack_len ; t#u8 ampdu_len ; t#u8 antenna ; } status ; struct { s#ieee80211_tx_rate driver_rates [ 4 ] ; t#u8 pad [ 4 ] ; void * rate_driver_data [ 24 / sizeof ( void * ) ] ; } ; void * driver_data [ 40 / sizeof ( void * ) ] ; } ; } 
il_tx_cmd_protection void il_tx_cmd_protection ( s#il_priv * , s#ieee80211_tx_info * , t#__le16 , t#__le32 * ) 

/* drivers/net/wireless/iwlwifi/iwl-debug.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
__iwl_warn void __iwl_warn ( s#device * , const char * , ... ) 
__iwl_info void __iwl_info ( s#device * , const char * , ... ) 
__iwl_crit void __iwl_crit ( s#device * , const char * , ... ) 
__iwl_err void __iwl_err ( s#device * , t#bool , t#bool , const char * , ... ) 
__iwl_dbg void __iwl_dbg ( s#device * , t#u32 , t#bool , const char * , const char * , ... ) 

/* drivers/net/wireless/iwlwifi/iwl-drv.o */
s#iwl_mod_params struct iwl_mod_params { int sw_crypto ; unsigned int disable_11n ; int amsdu_size_8K ; t#bool restart_fw ; int wd_disable ; t#bool bt_coex_active ; int led_mode ; t#bool power_save ; int power_level ; t#u32 debug_level ; int ant_coupling ; char * nvm_file ; } 
iwlwifi_mod_params extern s#iwl_mod_params iwlwifi_mod_params 
s#fw_desc struct fw_desc { const void * data ; t#u32 len ; t#u32 offset ; } 
s#fw_img struct fw_img { s#fw_desc sec [ 6 ] ; t#bool is_secure ; t#bool is_dual_cpus ; } 
e#iwl_d3_status enum iwl_d3_status { IWL_D3_STATUS_ALIVE , IWL_D3_STATUS_RESET , } 
s#iwl_cmd_header struct iwl_cmd_header { t#u8 cmd ; t#u8 flags ; t#__le16 sequence ; } 
s#iwl_rx_packet struct iwl_rx_packet { t#__le32 len_n_flags ; s#iwl_cmd_header hdr ; t#u8 data [ ] ; } 
s#iwl_host_cmd struct iwl_host_cmd { const void * data [ 2 ] ; s#iwl_rx_packet * resp_pkt ; unsigned long _rx_page_addr ; t#u32 _rx_page_order ; int handler_status ; t#u32 flags ; t#u16 len [ 2 ] ; t#u8 dataflags [ 2 ] ; t#u8 id ; } 
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
s#iwl_device_cmd struct iwl_device_cmd { s#iwl_cmd_header hdr ; t#u8 payload [ 320 ] ; } 
s#iwl_trans_config struct iwl_trans_config { s#iwl_op_mode * op_mode ; t#u8 cmd_queue ; t#u8 cmd_fifo ; const t#u8 * no_reclaim_cmds ; unsigned int n_no_reclaim_cmds ; t#bool rx_buf_size_8k ; t#bool bc_table_dword ; unsigned int queue_watchdog_timeout ; const char * * command_names ; } 
s#iwl_trans_ops struct iwl_trans_ops { int ( * start_hw ) ( s#iwl_trans * ) ; void ( * stop_hw ) ( s#iwl_trans * , t#bool ) ; int ( * start_fw ) ( s#iwl_trans * , const s#fw_img * , t#bool ) ; void ( * fw_alive ) ( s#iwl_trans * , t#u32 ) ; void ( * stop_device ) ( s#iwl_trans * ) ; void ( * d3_suspend ) ( s#iwl_trans * , t#bool ) ; int ( * d3_resume ) ( s#iwl_trans * , e#iwl_d3_status * , t#bool ) ; int ( * send_cmd ) ( s#iwl_trans * , s#iwl_host_cmd * ) ; int ( * tx ) ( s#iwl_trans * , s#sk_buff * , s#iwl_device_cmd * , int ) ; void ( * reclaim ) ( s#iwl_trans * , int , int , s#sk_buff_head * ) ; void ( * txq_enable ) ( s#iwl_trans * , int , int , int , int , int , t#u16 ) ; void ( * txq_disable ) ( s#iwl_trans * , int ) ; int ( * dbgfs_register ) ( s#iwl_trans * , s#dentry * ) ; int ( * wait_tx_queue_empty ) ( s#iwl_trans * ) ; void ( * write8 ) ( s#iwl_trans * , t#u32 , t#u8 ) ; void ( * write32 ) ( s#iwl_trans * , t#u32 , t#u32 ) ; t#u32 ( * read32 ) ( s#iwl_trans * , t#u32 ) ; t#u32 ( * read_prph ) ( s#iwl_trans * , t#u32 ) ; void ( * write_prph ) ( s#iwl_trans * , t#u32 , t#u32 ) ; int ( * read_mem ) ( s#iwl_trans * , t#u32 , void * , int ) ; int ( * write_mem ) ( s#iwl_trans * , t#u32 , const void * , int ) ; void ( * configure ) ( s#iwl_trans * , const s#iwl_trans_config * ) ; void ( * set_pmi ) ( s#iwl_trans * , t#bool ) ; t#bool ( * grab_nic_access ) ( s#iwl_trans * , t#bool , unsigned long * ) ; void ( * release_nic_access ) ( s#iwl_trans * , unsigned long * ) ; void ( * set_bits_mask ) ( s#iwl_trans * , t#u32 , t#u32 , t#u32 ) ; } 
e#iwl_device_family enum iwl_device_family { IWL_DEVICE_FAMILY_UNDEFINED , IWL_DEVICE_FAMILY_1000 , IWL_DEVICE_FAMILY_100 , IWL_DEVICE_FAMILY_2000 , IWL_DEVICE_FAMILY_2030 , IWL_DEVICE_FAMILY_105 , IWL_DEVICE_FAMILY_135 , IWL_DEVICE_FAMILY_5000 , IWL_DEVICE_FAMILY_5150 , IWL_DEVICE_FAMILY_6000 , IWL_DEVICE_FAMILY_6000i , IWL_DEVICE_FAMILY_6005 , IWL_DEVICE_FAMILY_6030 , IWL_DEVICE_FAMILY_6050 , IWL_DEVICE_FAMILY_6150 , IWL_DEVICE_FAMILY_7000 , } 
s#iwl_base_params struct iwl_base_params { int eeprom_size ; int num_of_queues ; t#u32 pll_cfg_val ; const t#u16 max_ll_items ; const t#bool shadow_ram_support ; t#u16 led_compensation ; unsigned int wd_timeout ; t#u32 max_event_log_size ; const t#bool shadow_reg_enable ; const t#bool pcie_l1_allowed ; } 
s#iwl_ht_params struct iwl_ht_params { e#ieee80211_smps_mode smps_mode ; const t#bool ht_greenfield_support ; t#bool use_rts_for_aggregation ; t#u8 ht40_bands ; } 
s#iwl_eeprom_params struct iwl_eeprom_params { const t#u8 regulatory_bands [ 7 ] ; t#bool enhanced_txpower ; } 
e#iwl_led_mode enum iwl_led_mode { IWL_LED_DEFAULT , IWL_LED_RF_STATE , IWL_LED_BLINK , IWL_LED_DISABLE , } 
s#iwl_cfg struct iwl_cfg { const char * name ; const char * fw_name_pre ; const unsigned int ucode_api_max ; const unsigned int ucode_api_ok ; const unsigned int ucode_api_min ; const e#iwl_device_family device_family ; const t#u32 max_data_size ; const t#u32 max_inst_size ; t#u8 valid_tx_ant ; t#u8 valid_rx_ant ; t#bool bt_shared_single_ant ; t#u16 nvm_ver ; t#u16 nvm_calib_ver ; const s#iwl_base_params * base_params ; const s#iwl_ht_params * ht_params ; const s#iwl_eeprom_params * eeprom_params ; e#iwl_led_mode led_mode ; const t#bool rx_with_siso_diversity ; const t#bool internal_wimax_coex ; const t#bool host_interrupt_operation_mode ; t#bool high_temp ; } 
e#iwl_trans_state enum iwl_trans_state { IWL_TRANS_NO_FW = 0 , IWL_TRANS_FW_ALIVE = 1 , } 
s#iwl_trans struct iwl_trans { const s#iwl_trans_ops * ops ; s#iwl_op_mode * op_mode ; const s#iwl_cfg * cfg ; e#iwl_trans_state state ; s#device * dev ; t#u32 hw_rev ; t#u32 hw_id ; char hw_id_str [ 52 ] ; t#u8 rx_mpdu_cmd , rx_mpdu_cmd_hdr_size ; t#bool pm_support ; s#kmem_cache * dev_cmd_pool ; t#size_t dev_cmd_headroom ; char dev_cmd_pool_name [ 50 ] ; s#dentry * dbgfs_dir ; char trans_specific [ 0 ] __attribute__ ( ( aligned ( sizeof ( void * ) ) ) ) ; } 
s#iwl_op_mode struct iwl_op_mode { const s#iwl_op_mode_ops * ops ; const s#iwl_trans * trans ; char op_mode_specific [ 0 ] __attribute__ ( ( aligned ( sizeof ( void * ) ) ) ) ; } 
E#IWL_UCODE_TYPE_MAX 3 
s#iwl_ucode_capabilities struct iwl_ucode_capabilities { t#u32 max_probe_length ; t#u32 standard_phy_calibration_size ; t#u32 flags ; } 
s#iwl_tlv_calib_ctrl struct iwl_tlv_calib_ctrl { t#__le32 flow_trigger ; t#__le32 event_trigger ; } 
s#iwl_fw struct iwl_fw { t#u32 ucode_ver ; char fw_version [ 32 ] ; s#fw_img img [ E#IWL_UCODE_TYPE_MAX ] ; s#iwl_ucode_capabilities ucode_capa ; t#bool enhance_sensitivity_table ; t#u32 init_evtlog_ptr , init_evtlog_size , init_errlog_ptr ; t#u32 inst_evtlog_ptr , inst_evtlog_size , inst_errlog_ptr ; s#iwl_tlv_calib_ctrl default_calib [ E#IWL_UCODE_TYPE_MAX ] ; t#u32 phy_config ; t#bool mvm_fw ; } 
s#iwl_rx_cmd_buffer struct iwl_rx_cmd_buffer { s#page * _page ; int _offset ; t#bool _page_stolen ; t#u32 _rx_page_order ; unsigned int truesize ; } 
s#iwl_op_mode_ops struct iwl_op_mode_ops { s#iwl_op_mode * ( * start ) ( s#iwl_trans * , const s#iwl_cfg * , const s#iwl_fw * , s#dentry * ) ; void ( * stop ) ( s#iwl_op_mode * ) ; int ( * rx ) ( s#iwl_op_mode * , s#iwl_rx_cmd_buffer * , s#iwl_device_cmd * ) ; void ( * queue_full ) ( s#iwl_op_mode * , int ) ; void ( * queue_not_full ) ( s#iwl_op_mode * , int ) ; void ( * hw_rf_kill ) ( s#iwl_op_mode * , t#bool ) ; void ( * free_skb ) ( s#iwl_op_mode * , s#sk_buff * ) ; void ( * nic_error ) ( s#iwl_op_mode * ) ; void ( * cmd_queue_full ) ( s#iwl_op_mode * ) ; void ( * nic_config ) ( s#iwl_op_mode * ) ; void ( * wimax_active ) ( s#iwl_op_mode * ) ; } 
iwl_opmode_register int iwl_opmode_register ( const char * , const s#iwl_op_mode_ops * ) 
iwl_opmode_deregister void iwl_opmode_deregister ( const char * ) 

/* drivers/net/wireless/iwlwifi/iwl-eeprom-parse.o */
s#iwl_nvm_data struct iwl_nvm_data { int n_hw_addrs ; t#u8 hw_addr [ 6 ] ; t#u8 calib_version ; t#__le16 calib_voltage ; t#__le16 raw_temperature ; t#__le16 kelvin_temperature ; t#__le16 kelvin_voltage ; t#__le16 xtal_calib [ 2 ] ; t#bool sku_cap_band_24GHz_enable ; t#bool sku_cap_band_52GHz_enable ; t#bool sku_cap_11n_enable ; t#bool sku_cap_amt_enable ; t#bool sku_cap_ipan_enable ; t#u8 radio_cfg_type ; t#u8 radio_cfg_step ; t#u8 radio_cfg_dash ; t#u8 radio_cfg_pnum ; t#u8 valid_tx_ant , valid_rx_ant ; t#u16 nvm_version ; t#s8 max_tx_pwr_half_dbm ; s#ieee80211_supported_band bands [ E#IEEE80211_NUM_BANDS ] ; s#ieee80211_channel channels [ ] ; } 
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
iwl_parse_eeprom_data s#iwl_nvm_data * iwl_parse_eeprom_data ( s#device * , const s#iwl_cfg * , const t#u8 * , t#size_t ) 
s##iwl_op_mode
iwl_nvm_check_version int iwl_nvm_check_version ( s#iwl_nvm_data * , s#iwl_trans * ) 

/* drivers/net/wireless/iwlwifi/iwl-eeprom-read.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
s##iwl_op_mode
iwl_read_eeprom int iwl_read_eeprom ( s#iwl_trans * , t#u8 * * , t#size_t * ) 

/* drivers/net/wireless/iwlwifi/iwl-io.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
s##iwl_op_mode
iwl_poll_bit int iwl_poll_bit ( s#iwl_trans * , t#u32 , t#u32 , t#u32 , int ) 
iwl_read_direct32 t#u32 iwl_read_direct32 ( s#iwl_trans * , t#u32 ) 
iwl_write_direct32 void iwl_write_direct32 ( s#iwl_trans * , t#u32 , t#u32 ) 
iwl_poll_direct_bit int iwl_poll_direct_bit ( s#iwl_trans * , t#u32 , t#u32 , int ) 
iwl_read_prph t#u32 iwl_read_prph ( s#iwl_trans * , t#u32 ) 
iwl_write_prph void iwl_write_prph ( s#iwl_trans * , t#u32 , t#u32 ) 
iwl_set_bits_prph void iwl_set_bits_prph ( s#iwl_trans * , t#u32 , t#u32 ) 
iwl_set_bits_mask_prph void iwl_set_bits_mask_prph ( s#iwl_trans * , t#u32 , t#u32 , t#u32 ) 
iwl_clear_bits_prph void iwl_clear_bits_prph ( s#iwl_trans * , t#u32 , t#u32 ) 

/* drivers/net/wireless/iwlwifi/iwl-notif-wait.o */
s#iwl_notif_wait_data struct iwl_notif_wait_data { s#list_head notif_waits ; t#spinlock_t notif_wait_lock ; t#wait_queue_head_t notif_waitq ; } 
iwl_notification_wait_init void iwl_notification_wait_init ( s#iwl_notif_wait_data * ) 
iwl_notification_wait_notify void iwl_notification_wait_notify ( s#iwl_notif_wait_data * , s#iwl_rx_packet * ) 
iwl_abort_notification_waits void iwl_abort_notification_waits ( s#iwl_notif_wait_data * ) 
s#iwl_notification_wait struct iwl_notification_wait { s#list_head list ; t#bool ( * fn ) ( s#iwl_notif_wait_data * , s#iwl_rx_packet * , void * ) ; void * fn_data ; t#u8 cmds [ 5 ] ; t#u8 n_cmds ; t#bool triggered , aborted ; } 
iwl_init_notification_wait void iwl_init_notification_wait ( s#iwl_notif_wait_data * , s#iwl_notification_wait * , const t#u8 * , int , t#bool ( * ) ( s#iwl_notif_wait_data * , s#iwl_rx_packet * , void * ) , void * ) 
iwl_wait_notification int iwl_wait_notification ( s#iwl_notif_wait_data * , s#iwl_notification_wait * , unsigned long ) 
iwl_remove_notification void iwl_remove_notification ( s#iwl_notif_wait_data * , s#iwl_notification_wait * ) 

/* drivers/net/wireless/iwlwifi/iwl-nvm-parse.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
iwl_parse_nvm_data s#iwl_nvm_data * iwl_parse_nvm_data ( s#device * , const s#iwl_cfg * , const t#__le16 * , const t#__le16 * , const t#__le16 * , t#u8 , t#u8 ) 

/* drivers/net/wireless/iwlwifi/iwl-phy-db.o */
s##iwl_phy_db
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
iwl_phy_db_init s#iwl_phy_db * iwl_phy_db_init ( s#iwl_trans * ) 
iwl_phy_db_free void iwl_phy_db_free ( s#iwl_phy_db * ) 
iwl_phy_db_set_section int iwl_phy_db_set_section ( s#iwl_phy_db * , s#iwl_rx_packet * , t#gfp_t ) 
iwl_send_phy_db_data int iwl_send_phy_db_data ( s#iwl_phy_db * ) 

/* drivers/net/wireless/libertas/cmd.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s#lbs_mesh_stats struct lbs_mesh_stats { t#u32 fwd_bcast_cnt ; t#u32 fwd_unicast_cnt ; t#u32 fwd_drop_ttl ; t#u32 fwd_drop_rbt ; t#u32 fwd_drop_noroute ; t#u32 fwd_drop_nobuf ; t#u32 drop_blind ; t#u32 tx_failed_cnt ; } 
s#cmd_header struct cmd_header { t#__le16 command ; t#__le16 size ; t#__le16 seqnum ; t#__le16 result ; } 
s#cmd_ctrl_node struct cmd_ctrl_node { s#list_head list ; int result ; int ( * callback ) ( s#lbs_private * , unsigned long , s#cmd_header * ) ; unsigned long callback_arg ; s#cmd_header * cmdbuf ; t#u16 cmdwaitqwoken ; t#wait_queue_head_t cmdwait_q ; } 
s#kfifo struct kfifo { union { s#__kfifo kfifo ; unsigned char * type ; char ( * rectype ) [ 0 ] ; void * ptr ; const void * ptr_const ; } ; unsigned char buf [ 0 ] ; } 
E#WLAN_KEY_LEN_WEP104 13 
s#lbs_fw_table struct lbs_fw_table { int model ; const char * helper ; const char * fwname ; } 
t#lbs_fw_cb typedef void ( * lbs_fw_cb ) ( s#lbs_private * , int , const s#firmware * , const s#firmware * ) 
s#lbs_private struct lbs_private { s#net_device * dev ; t#u32 connect_status ; s#work_struct mcast_work ; t#u32 nr_of_multicastmacaddr ; t#u8 multicastlist [ 32 ] [ 6 ] ; s#wireless_dev * wdev ; t#bool wiphy_registered ; s#cfg80211_scan_request * scan_req ; t#u8 assoc_bss [ 6 ] ; t#u8 country_code [ 3 ] ; t#u8 disassoc_reason ; s#net_device * mesh_dev ; s#lbs_mesh_stats mstats ; t#uint16_t mesh_tlv ; t#u8 mesh_ssid [ 32 + 1 ] ; t#u8 mesh_ssid_len ; t#u8 mesh_channel ; s#dentry * debugfs_dir ; s#dentry * debugfs_debug ; s#dentry * debugfs_files [ 6 ] ; s#dentry * events_dir ; s#dentry * debugfs_events_files [ 6 ] ; s#dentry * regs_dir ; s#dentry * debugfs_regs_files [ 6 ] ; t#u32 mac_offset ; t#u32 bbp_offset ; t#u32 rf_offset ; t#u16 psmode ; t#u32 psstate ; t#u8 needtowakeup ; int is_deep_sleep ; int deep_sleep_required ; int is_auto_deep_sleep_enabled ; int wakeup_dev_required ; int is_activity_detected ; int auto_deep_sleep_timeout ; t#wait_queue_head_t ds_awake_q ; s#timer_list auto_deepsleep_timer ; int is_host_sleep_configured ; int is_host_sleep_activated ; t#wait_queue_head_t host_sleep_q ; void * card ; t#bool iface_running ; t#u8 fw_ready ; t#u8 surpriseremoved ; t#u8 setup_fw_on_resume ; int ( * hw_host_to_card ) ( s#lbs_private * , t#u8 , t#u8 * , t#u16 ) ; void ( * reset_card ) ( s#lbs_private * ) ; int ( * power_save ) ( s#lbs_private * ) ; int ( * power_restore ) ( s#lbs_private * ) ; int ( * enter_deep_sleep ) ( s#lbs_private * ) ; int ( * exit_deep_sleep ) ( s#lbs_private * ) ; int ( * reset_deep_sleep_wakeup ) ( s#lbs_private * ) ; t#u32 fwrelease ; t#u32 fwcapinfo ; t#u16 regioncode ; t#u8 current_addr [ 6 ] ; t#u8 copied_hwaddr ; t#u8 dnld_sent ; t#u16 seqnum ; s#cmd_ctrl_node * cmd_array ; s#cmd_ctrl_node * cur_cmd ; s#list_head cmdfreeq ; s#list_head cmdpendingq ; s#timer_list command_timer ; int cmd_timed_out ; t#u8 resp_idx ; t#u8 resp_buf [ 2 ] [ 2312 ] ; t#u32 resp_len [ 2 ] ; s#kfifo event_fifo ; s#task_struct * main_thread ; t#wait_queue_head_t waitq ; s#workqueue_struct * work_thread ; t#u8 authtype_auto ; t#u8 wep_tx_key ; t#u8 wep_key [ 4 ] [ E#WLAN_KEY_LEN_WEP104 ] ; t#u8 wep_key_len [ 4 ] ; t#uint32_t wol_criteria ; t#uint8_t wol_gpio ; t#uint8_t wol_gap ; t#bool ehs_remove_supported ; int tx_pending_len ; t#u8 tx_pending_buf [ 2312 ] ; t#u8 txretrycount ; s#sk_buff * currenttxskb ; s#timer_list tx_lockup_timer ; s#mutex lock ; t#spinlock_t driver_lock ; t#u16 mac_control ; t#u8 radio_on ; t#u8 cur_rate ; t#u8 channel ; t#s16 txpower_cur ; t#s16 txpower_min ; t#s16 txpower_max ; s#delayed_work scan_work ; int scan_channel ; t#wait_queue_head_t scan_q ; t#bool internal_scan ; t#u32 fw_model ; t#wait_queue_head_t fw_waitq ; s#device * fw_device ; const s#firmware * helper_fw ; const s#lbs_fw_table * fw_table ; const s#lbs_fw_table * fw_iter ; t#lbs_fw_cb fw_callback ; } 
lbs_cmd_copyback int lbs_cmd_copyback ( s#lbs_private * , unsigned long , s#cmd_header * ) 
s#host_wol_rule struct host_wol_rule { t#uint8_t rule_no ; t#uint8_t rule_ops ; t#__le16 sig_offset ; t#__le16 sig_length ; t#__le16 reserve ; t#__be32 sig_mask ; t#__be32 signature ; } 
s#wol_config struct wol_config { t#uint8_t action ; t#uint8_t pattern ; t#uint8_t no_rules_in_cmd ; t#uint8_t result ; s#host_wol_rule rule [ 16 ] ; } 
lbs_host_sleep_cfg int lbs_host_sleep_cfg ( s#lbs_private * , t#uint32_t , s#wol_config * ) 
__lbs_cmd int __lbs_cmd ( s#lbs_private * , t#uint16_t , s#cmd_header * , int , int ( * ) ( s#lbs_private * , unsigned long , s#cmd_header * ) , unsigned long ) 

/* drivers/net/wireless/libertas/firmware.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##cfg80211_scan_request
s##cmd_ctrl_node
lbs_get_firmware_async int lbs_get_firmware_async ( s#lbs_private * , s#device * , t#u32 , const s#lbs_fw_table * , t#lbs_fw_cb ) 
lbs_get_firmware int lbs_get_firmware ( s#device * , t#u32 , const s#lbs_fw_table * , const s#firmware * * , const s#firmware * * ) 

/* drivers/net/wireless/libertas/main.o */
lbs_debug extern unsigned int lbs_debug 
lbs_disablemesh unsigned int lbs_disablemesh 
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
lbs_host_to_card_done void lbs_host_to_card_done ( s#lbs_private * ) 
lbs_suspend int lbs_suspend ( s#lbs_private * ) 
lbs_resume int lbs_resume ( s#lbs_private * ) 
lbs_add_card s#lbs_private * lbs_add_card ( void * , s#device * ) 
lbs_remove_card void lbs_remove_card ( s#lbs_private * ) 
lbs_start_card int lbs_start_card ( s#lbs_private * ) 
lbs_stop_card void lbs_stop_card ( s#lbs_private * ) 
lbs_queue_event void lbs_queue_event ( s#lbs_private * , t#u32 ) 
lbs_notify_command_response void lbs_notify_command_response ( s#lbs_private * , t#u8 ) 

/* drivers/net/wireless/libertas/rx.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##cmd_ctrl_node
lbs_process_rxed_packet int lbs_process_rxed_packet ( s#lbs_private * , s#sk_buff * ) 

/* drivers/net/wireless/libertas/tx.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##cmd_ctrl_node
lbs_send_tx_feedback void lbs_send_tx_feedback ( s#lbs_private * , t#u32 ) 

/* drivers/net/wireless/libertas_tf/cmd.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##if_usb_card
s#cmd_ctrl_node struct cmd_ctrl_node { s#list_head list ; int result ; int ( * callback ) ( s#lbtf_private * , unsigned long , s#cmd_header * ) ; unsigned long callback_arg ; s#cmd_header * cmdbuf ; t#u16 cmdwaitqwoken ; t#wait_queue_head_t cmdwait_q ; } 
s#channel_range struct channel_range { t#u8 regdomain ; t#u8 start ; t#u8 end ; } 
s#lbtf_offset_value struct lbtf_offset_value { t#u32 offset ; t#u32 value ; } 
s#lbtf_private struct lbtf_private { void * card ; s#ieee80211_hw * hw ; t#u8 cmd_resp_buff [ 2312 ] ; s#ieee80211_vif * vif ; s#work_struct cmd_work ; s#work_struct tx_work ; int ( * hw_host_to_card ) ( s#lbtf_private * , t#u8 , t#u8 * , t#u16 ) ; int ( * hw_prog_firmware ) ( s#if_usb_card * ) ; int ( * hw_reset_device ) ( s#if_usb_card * ) ; t#u32 fwrelease ; t#u32 fwcapinfo ; s#mutex lock ; t#u16 seqnum ; s#cmd_ctrl_node * cmd_array ; s#cmd_ctrl_node * cur_cmd ; s#list_head cmdfreeq ; s#list_head cmdpendingq ; t#spinlock_t driver_lock ; s#timer_list command_timer ; int nr_retries ; int cmd_timed_out ; t#u8 cmd_response_rxed ; t#u16 capability ; t#u8 current_addr [ 6 ] ; t#u8 multicastlist [ 32 ] [ 6 ] ; t#u32 nr_of_multicastmacaddr ; int cur_freq ; s#sk_buff * skb_to_tx ; s#sk_buff * tx_skb ; t#u16 mac_control ; t#u16 regioncode ; s#channel_range range ; t#u8 radioon ; t#u32 preamble ; s#ieee80211_channel channels [ 14 ] ; s#ieee80211_rate rates [ 12 ] ; s#ieee80211_supported_band band ; s#lbtf_offset_value offsetvalue ; t#u8 fw_ready ; t#u8 surpriseremoved ; s#sk_buff_head bc_ps_buf ; t#s8 noise ; } 
lbtf_cmd_copyback int lbtf_cmd_copyback ( s#lbtf_private * , unsigned long , s#cmd_header * ) 
__lbtf_cmd int __lbtf_cmd ( s#lbtf_private * , t#uint16_t , s#cmd_header * , int , int ( * ) ( s#lbtf_private * , unsigned long , s#cmd_header * ) , unsigned long ) 
lbtf_cmd_response_rx void lbtf_cmd_response_rx ( s#lbtf_private * ) 

/* drivers/net/wireless/libertas_tf/if_usb.o */
s##usb_tt
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mon_bus
s##ep_device
s##wusb_dev
s#if_usb_card struct if_usb_card { s#usb_device * udev ; s#urb * rx_urb , * tx_urb , * cmd_urb ; s#lbtf_private * priv ; s#sk_buff * rx_skb ; t#uint8_t ep_in ; t#uint8_t ep_out ; t#int8_t bootcmdresp ; int ep_in_size ; void * ep_out_buf ; int ep_out_size ; const s#firmware * fw ; s#timer_list fw_timeout ; t#wait_queue_head_t fw_wq ; t#uint32_t fwseqnum ; t#uint32_t totalbytes ; t#uint32_t fwlastblksent ; t#uint8_t CRC_OK ; t#uint8_t fwdnldover ; t#uint8_t fwfinalblk ; t#__le16 boot2_version ; } 
if_usb_reset_device int if_usb_reset_device ( s#if_usb_card * ) 
if_usb_prog_firmware int if_usb_prog_firmware ( s#if_usb_card * ) 

/* drivers/net/wireless/libertas_tf/main.o */
lbtf_debug extern unsigned int lbtf_debug 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##if_usb_card
lbtf_rx int lbtf_rx ( s#lbtf_private * , s#sk_buff * ) 
lbtf_add_card s#lbtf_private * lbtf_add_card ( void * , s#device * ) 
lbtf_remove_card int lbtf_remove_card ( s#lbtf_private * ) 
lbtf_send_tx_feedback void lbtf_send_tx_feedback ( s#lbtf_private * , t#u8 , t#u8 ) 
lbtf_bcn_sent void lbtf_bcn_sent ( s#lbtf_private * ) 

/* drivers/net/wireless/mwifiex/cfg80211.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kioctx
s##eventfd_ctx
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##mem_cgroup
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s#vif_params struct vif_params { int use_4addr ; t#u8 macaddr [ 6 ] ; } 
mwifiex_add_virtual_intf s#wireless_dev * mwifiex_add_virtual_intf ( s#wiphy * , const char * , e#nl80211_iftype , t#u32 * , s#vif_params * ) 
mwifiex_del_virtual_intf int mwifiex_del_virtual_intf ( s#wiphy * , s#wireless_dev * ) 

/* drivers/net/wireless/mwifiex/cmdevt.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s#ieee_types_fh_param_set struct ieee_types_fh_param_set { t#u8 element_id ; t#u8 len ; t#__le16 dwell_time ; t#u8 hop_set ; t#u8 hop_pattern ; t#u8 hop_index ; } 
s#ieee_types_ds_param_set struct ieee_types_ds_param_set { t#u8 element_id ; t#u8 len ; t#u8 current_chan ; } 
u#ieee_types_phy_param_set union ieee_types_phy_param_set { s#ieee_types_fh_param_set fh_param_set ; s#ieee_types_ds_param_set ds_param_set ; } 
s#ieee_types_cf_param_set struct ieee_types_cf_param_set { t#u8 element_id ; t#u8 len ; t#u8 cfp_cnt ; t#u8 cfp_period ; t#u16 cfp_max_duration ; t#u16 cfp_duration_remaining ; } 
s#ieee_types_ibss_param_set struct ieee_types_ibss_param_set { t#u8 element_id ; t#u8 len ; t#__le16 atim_window ; } 
u#ieee_types_ss_param_set union ieee_types_ss_param_set { s#ieee_types_cf_param_set cf_param_set ; s#ieee_types_ibss_param_set ibss_param_set ; } 
s#ieee_types_vendor_header struct ieee_types_vendor_header { t#u8 element_id ; t#u8 len ; t#u8 oui [ 4 ] ; t#u8 oui_subtype ; t#u8 version ; } 
s#ieee_types_wmm_ac_parameters struct ieee_types_wmm_ac_parameters { t#u8 aci_aifsn_bitmap ; t#u8 ecw_bitmap ; t#__le16 tx_op_limit ; } 
s#ieee_types_wmm_parameter struct ieee_types_wmm_parameter { s#ieee_types_vendor_header vend_hdr ; t#u8 qos_info_bitmap ; t#u8 reserved ; s#ieee_types_wmm_ac_parameters ac_params [ 4 ] ; } 
s#ieee80211_ht_operation struct ieee80211_ht_operation { t#u8 primary_chan ; t#u8 ht_param ; t#__le16 operation_mode ; t#__le16 stbc_param ; t#u8 basic_set [ 16 ] ; } 
s#ieee80211_vht_operation struct ieee80211_vht_operation { t#u8 chan_width ; t#u8 center_freq_seg1_idx ; t#u8 center_freq_seg2_idx ; t#__le16 basic_mcs_set ; } 
s#ieee_types_oper_mode_ntf struct ieee_types_oper_mode_ntf { t#u8 element_id ; t#u8 len ; t#u8 oper_mode ; } 
s#ieee_types_vendor_specific struct ieee_types_vendor_specific { s#ieee_types_vendor_header vend_hdr ; t#u8 data [ 256 - sizeof ( struct ieee_types_vendor_header ) ] ; } 
s#ieee_types_header struct ieee_types_header { t#u8 element_id ; t#u8 len ; } 
s#ieee_types_generic struct ieee_types_generic { s#ieee_types_header ieee_hdr ; t#u8 data [ 256 - sizeof ( struct ieee_types_header ) ] ; } 
s#mwifiex_bssdescriptor struct mwifiex_bssdescriptor { t#u8 mac_address [ 6 ] ; s#cfg80211_ssid ssid ; t#u32 privacy ; t#s32 rssi ; t#u32 channel ; t#u32 freq ; t#u16 beacon_period ; t#u8 erp_flags ; t#u32 bss_mode ; t#u8 supported_rates [ 14 ] ; t#u8 data_rates [ 14 ] ; t#u16 bss_band ; t#u64 fw_tsf ; t#u64 timestamp ; u#ieee_types_phy_param_set phy_param_set ; u#ieee_types_ss_param_set ss_param_set ; t#u16 cap_info_bitmap ; s#ieee_types_wmm_parameter wmm_ie ; t#u8 disable_11n ; s#ieee80211_ht_cap * bcn_ht_cap ; t#u16 ht_cap_offset ; s#ieee80211_ht_operation * bcn_ht_oper ; t#u16 ht_info_offset ; t#u8 * bcn_bss_co_2040 ; t#u16 bss_co_2040_offset ; t#u8 * bcn_ext_cap ; t#u16 ext_cap_offset ; s#ieee80211_vht_cap * bcn_vht_cap ; t#u16 vht_cap_offset ; s#ieee80211_vht_operation * bcn_vht_oper ; t#u16 vht_info_offset ; s#ieee_types_oper_mode_ntf * oper_mode ; t#u16 oper_mode_offset ; t#u8 disable_11ac ; s#ieee_types_vendor_specific * bcn_wpa_ie ; t#u16 wpa_offset ; s#ieee_types_generic * bcn_rsn_ie ; t#u16 rsn_offset ; s#ieee_types_generic * bcn_wapi_ie ; t#u16 wapi_offset ; t#u8 * beacon_buf ; t#u32 beacon_buf_size ; t#u8 sensed_11h ; t#u8 local_constraint ; t#u8 chan_sw_ie_present ; } 
s#mwifiex_current_bss_params struct mwifiex_current_bss_params { s#mwifiex_bssdescriptor bss_descriptor ; t#u8 wmm_enabled ; t#u8 wmm_uapsd_enabled ; t#u8 band ; t#u32 num_of_rates ; t#u8 data_rates [ 14 ] ; } 
s#mwifiex_802_11_security struct mwifiex_802_11_security { t#u8 wpa_enabled ; t#u8 wpa2_enabled ; t#u8 wapi_enabled ; t#u8 wapi_key_on ; t#u8 wep_enabled ; t#u32 authentication_mode ; t#u8 is_authtype_auto ; t#u32 encryption_mode ; } 
s#mwifiex_wep_key struct mwifiex_wep_key { t#u32 length ; t#u32 key_index ; t#u32 key_length ; t#u8 key_material [ 16 ] ; } 
s#mwifiex_ie_type_key_param_set struct mwifiex_ie_type_key_param_set { t#__le16 type ; t#__le16 length ; t#__le16 key_type_id ; t#__le16 key_info ; t#__le16 key_len ; t#u8 key [ 50 ] ; } 
s#host_cmd_ds_802_11_key_material struct host_cmd_ds_802_11_key_material { t#__le16 action ; s#mwifiex_ie_type_key_param_set key_param_set ; } 
s#mwifiex_tid_tbl struct mwifiex_tid_tbl { s#list_head ra_list ; } 
s#mwifiex_wmm_ac_status struct mwifiex_wmm_ac_status { t#u8 disabled ; t#u8 flow_required ; t#u8 flow_created ; } 
e#mwifiex_wmm_ac_e enum mwifiex_wmm_ac_e { WMM_AC_BK , WMM_AC_BE , WMM_AC_VI , WMM_AC_VO } 
s#mwifiex_wmm_desc struct mwifiex_wmm_desc { s#mwifiex_tid_tbl tid_tbl_ptr [ 8 ] ; t#u32 packets_out [ 8 ] ; t#spinlock_t ra_list_spinlock ; s#mwifiex_wmm_ac_status ac_status [ 4 ] ; e#mwifiex_wmm_ac_e ac_down_graded_vals [ 4 ] ; t#u32 drv_pkt_delay_max ; t#u8 queue_priority [ 4 ] ; t#u32 user_pri_pkt_tx_ctrl [ 7 + 1 ] ; t#atomic_t tx_pkts_queued ; t#atomic_t highest_queued_prio ; } 
s#mwifiex_tx_aggr struct mwifiex_tx_aggr { t#u8 ampdu_user ; t#u8 ampdu_ap ; t#u8 amsdu ; } 
s#mwifiex_add_ba_param struct mwifiex_add_ba_param { t#u32 tx_win_size ; t#u32 rx_win_size ; t#u32 timeout ; } 
s#mwifiex_vendor_spec_cfg_ie struct mwifiex_vendor_spec_cfg_ie { t#u16 mask ; t#u16 flag ; t#u8 ie [ ( 256 ) ] ; } 
s#mwifiex_chan_freq_power struct mwifiex_chan_freq_power { t#u16 channel ; t#u32 freq ; t#u16 max_tx_power ; t#u8 unsupported ; } 
s#wps struct wps { t#u8 session_enable ; } 
s#subsc_evt_cfg struct subsc_evt_cfg { t#u8 abs_value ; t#u8 evt_freq ; } 
s#mwifiex_ds_misc_subsc_evt struct mwifiex_ds_misc_subsc_evt { t#u16 action ; t#u16 events ; s#subsc_evt_cfg bcn_l_rssi_cfg ; s#subsc_evt_cfg bcn_h_rssi_cfg ; } 
s#mwifiex_ie struct mwifiex_ie { t#__le16 ie_index ; t#__le16 mgmt_subtype_mask ; t#__le16 ie_length ; t#u8 ie_buffer [ 256 ] ; } 
s#mwifiex_roc_cfg struct mwifiex_roc_cfg { t#u64 cookie ; s#ieee80211_channel chan ; } 
s#mwifiex_private struct mwifiex_private { s#mwifiex_adapter * adapter ; t#u8 bss_type ; t#u8 bss_role ; t#u8 bss_priority ; t#u8 bss_num ; t#u8 bss_started ; t#u8 frame_type ; t#u8 curr_addr [ 6 ] ; t#u8 media_connected ; t#u32 num_tx_timeout ; t#u8 tx_timeout_cnt ; s#net_device * netdev ; s#net_device_stats stats ; t#u16 curr_pkt_filter ; t#u32 bss_mode ; t#u32 pkt_tx_ctrl ; t#u16 tx_power_level ; t#u8 max_tx_power_level ; t#u8 min_tx_power_level ; t#u8 tx_rate ; t#u8 tx_htinfo ; t#u8 rxpd_htinfo ; t#u8 rxpd_rate ; t#u16 rate_bitmap ; t#u16 bitmap_rates [ 10 ] ; t#u32 data_rate ; t#u8 is_data_rate_auto ; t#u16 bcn_avg_factor ; t#u16 data_avg_factor ; t#s16 data_rssi_last ; t#s16 data_nf_last ; t#s16 data_rssi_avg ; t#s16 data_nf_avg ; t#s16 bcn_rssi_last ; t#s16 bcn_nf_last ; t#s16 bcn_rssi_avg ; t#s16 bcn_nf_avg ; s#mwifiex_bssdescriptor * attempted_bss_desc ; s#cfg80211_ssid prev_ssid ; t#u8 prev_bssid [ 6 ] ; s#mwifiex_current_bss_params curr_bss_params ; t#u16 beacon_period ; t#u8 dtim_period ; t#u16 listen_interval ; t#u16 atim_window ; t#u8 adhoc_channel ; t#u8 adhoc_is_link_sensed ; t#u8 adhoc_state ; s#mwifiex_802_11_security sec_info ; s#mwifiex_wep_key wep_key [ 4 ] ; t#u16 wep_key_curr_index ; t#u8 wpa_ie [ 256 ] ; t#u8 wpa_ie_len ; t#u8 wpa_is_gtk_set ; s#host_cmd_ds_802_11_key_material aes_key ; t#u8 wapi_ie [ 256 ] ; t#u8 wapi_ie_len ; t#u8 * wps_ie ; t#u8 wps_ie_len ; t#u8 wmm_required ; t#u8 wmm_enabled ; t#u8 wmm_qosinfo ; s#mwifiex_wmm_desc wmm ; t#atomic_t wmm_tx_pending [ 4 ] ; s#list_head sta_list ; t#spinlock_t sta_list_spinlock ; s#list_head tx_ba_stream_tbl_ptr ; t#spinlock_t tx_ba_stream_tbl_lock ; s#mwifiex_tx_aggr aggr_prio_tbl [ 8 ] ; s#mwifiex_add_ba_param add_ba_param ; t#u16 rx_seq [ 8 ] ; s#list_head rx_reorder_tbl_ptr ; t#spinlock_t rx_reorder_tbl_lock ; t#spinlock_t rx_pkt_lock ; t#u8 assoc_rsp_buf [ 500 ] ; t#u32 assoc_rsp_size ; t#u8 gen_ie_buf [ 256 ] ; t#u8 gen_ie_buf_len ; s#mwifiex_vendor_spec_cfg_ie vs_ie [ ( 8 ) ] ; t#u8 assoc_tlv_buf [ 256 ] ; t#u8 assoc_tlv_buf_len ; t#u8 * curr_bcn_buf ; t#u32 curr_bcn_size ; t#spinlock_t curr_bcn_buf_lock ; s#wireless_dev * wdev ; s#mwifiex_chan_freq_power cfp ; char version_str [ 128 ] ; s#dentry * dfs_dev_dir ; t#u8 nick_name [ 16 ] ; t#u16 current_key_index ; s#semaphore async_sem ; t#u8 report_scan_result ; s#cfg80211_scan_request * scan_request ; t#u8 cfg_bssid [ 6 ] ; s#wps wps ; t#u8 scan_block ; t#s32 cqm_rssi_thold ; t#u32 cqm_rssi_hyst ; t#u8 subsc_evt_rssi_state ; s#mwifiex_ds_misc_subsc_evt async_subsc_evt_storage ; s#mwifiex_ie mgmt_ie [ 16 ] ; t#u16 beacon_idx ; t#u16 proberesp_idx ; t#u16 assocresp_idx ; t#u16 rsn_idx ; s#timer_list scan_delay_timer ; t#u8 ap_11n_enabled ; t#u8 ap_11ac_enabled ; t#u32 mgmt_frame_mask ; s#mwifiex_roc_cfg roc_cfg ; t#bool scan_aborting ; t#u8 csa_chan ; unsigned long csa_expire_time ; t#u8 del_list_idx ; t#bool hs2_enabled ; } 
s#mwifiex_fw_image struct mwifiex_fw_image { t#u8 * helper_buf ; t#u32 helper_len ; t#u8 * fw_buf ; t#u32 fw_len ; } 
s#mwifiex_tx_param struct mwifiex_tx_param { t#u32 next_pkt_len ; } 
s#mwifiex_if_ops struct mwifiex_if_ops { int ( * init_if ) ( s#mwifiex_adapter * ) ; void ( * cleanup_if ) ( s#mwifiex_adapter * ) ; int ( * check_fw_status ) ( s#mwifiex_adapter * , t#u32 ) ; int ( * prog_fw ) ( s#mwifiex_adapter * , s#mwifiex_fw_image * ) ; int ( * register_dev ) ( s#mwifiex_adapter * ) ; void ( * unregister_dev ) ( s#mwifiex_adapter * ) ; int ( * enable_int ) ( s#mwifiex_adapter * ) ; void ( * disable_int ) ( s#mwifiex_adapter * ) ; int ( * process_int_status ) ( s#mwifiex_adapter * ) ; int ( * host_to_card ) ( s#mwifiex_adapter * , t#u8 , s#sk_buff * , s#mwifiex_tx_param * ) ; int ( * wakeup ) ( s#mwifiex_adapter * ) ; int ( * wakeup_complete ) ( s#mwifiex_adapter * ) ; void ( * update_mp_end_port ) ( s#mwifiex_adapter * , t#u16 ) ; void ( * cleanup_mpa_buf ) ( s#mwifiex_adapter * ) ; int ( * cmdrsp_complete ) ( s#mwifiex_adapter * , s#sk_buff * ) ; int ( * event_complete ) ( s#mwifiex_adapter * , s#sk_buff * ) ; int ( * data_complete ) ( s#mwifiex_adapter * , s#sk_buff * ) ; int ( * init_fw_port ) ( s#mwifiex_adapter * ) ; int ( * dnld_fw ) ( s#mwifiex_adapter * , s#mwifiex_fw_image * ) ; void ( * card_reset ) ( s#mwifiex_adapter * ) ; int ( * clean_pcie_ring ) ( s#mwifiex_adapter * ) ; } 
s#mwifiex_bss_prio_node struct mwifiex_bss_prio_node { s#list_head list ; s#mwifiex_private * priv ; } 
s#mwifiex_bss_prio_tbl struct mwifiex_bss_prio_tbl { s#list_head bss_prio_head ; t#spinlock_t bss_prio_lock ; s#mwifiex_bss_prio_node * bss_prio_cur ; } 
e#MWIFIEX_HARDWARE_STATUS enum MWIFIEX_HARDWARE_STATUS { MWIFIEX_HW_STATUS_READY , MWIFIEX_HW_STATUS_INITIALIZING , MWIFIEX_HW_STATUS_FW_READY , MWIFIEX_HW_STATUS_INIT_DONE , MWIFIEX_HW_STATUS_RESET , MWIFIEX_HW_STATUS_CLOSING , MWIFIEX_HW_STATUS_NOT_READY } 
s#cmd_ctrl_node struct cmd_ctrl_node { s#list_head list ; s#mwifiex_private * priv ; t#u32 cmd_oid ; t#u32 cmd_flag ; s#sk_buff * cmd_skb ; s#sk_buff * resp_skb ; void * data_buf ; t#u32 wait_q_enabled ; s#sk_buff * skb ; t#u8 * condition ; t#u8 cmd_wait_q_woken ; } 
s#ieee80211_country_ie_triplet struct ieee80211_country_ie_triplet { union { struct { t#u8 first_channel ; t#u8 num_channels ; t#s8 max_power ; } __attribute__ ( ( packed ) ) chans ; struct { t#u8 reg_extension_id ; t#u8 reg_class ; t#u8 coverage_class ; } __attribute__ ( ( packed ) ) ext ; } ; } 
s#mwifiex_802_11d_domain_reg struct mwifiex_802_11d_domain_reg { t#u8 country_code [ 3 ] ; t#u8 no_of_triplet ; s#ieee80211_country_ie_triplet triplet [ 83 ] ; } 
s#mwifiex_chan_scan_param_set struct mwifiex_chan_scan_param_set { t#u8 radio_type ; t#u8 chan_number ; t#u8 chan_scan_mode_bitmap ; t#__le16 min_scan_time ; t#__le16 max_scan_time ; } 
s#mwifiex_sleep_params struct mwifiex_sleep_params { t#u16 sp_error ; t#u16 sp_offset ; t#u16 sp_stable_time ; t#u8 sp_cal_control ; t#u8 sp_ext_sleep_clk ; t#u16 sp_reserved ; } 
s#mwifiex_sleep_period struct mwifiex_sleep_period { t#u16 period ; t#u16 reserved ; } 
s#mwifiex_hs_config_param struct mwifiex_hs_config_param { t#__le32 conditions ; t#u8 gpio ; t#u8 gap ; } 
s#mwifiex_dbg struct mwifiex_dbg { t#u32 num_cmd_host_to_card_failure ; t#u32 num_cmd_sleep_cfm_host_to_card_failure ; t#u32 num_tx_host_to_card_failure ; t#u32 num_event_deauth ; t#u32 num_event_disassoc ; t#u32 num_event_link_lost ; t#u32 num_cmd_deauth ; t#u32 num_cmd_assoc_success ; t#u32 num_cmd_assoc_failure ; t#u32 num_tx_timeout ; t#u32 num_cmd_timeout ; t#u16 timeout_cmd_id ; t#u16 timeout_cmd_act ; t#u16 last_cmd_id [ 5 ] ; t#u16 last_cmd_act [ 5 ] ; t#u16 last_cmd_index ; t#u16 last_cmd_resp_id [ 5 ] ; t#u16 last_cmd_resp_index ; t#u16 last_event [ 5 ] ; t#u16 last_event_index ; } 
s#mwifiex_wait_queue struct mwifiex_wait_queue { t#wait_queue_head_t wait ; int status ; } 
s#mwifiex_adapter struct mwifiex_adapter { t#u8 iface_type ; s#mwifiex_private * priv [ ( 3 ) ] ; t#u8 priv_num ; const s#firmware * firmware ; char fw_name [ 32 ] ; int winner ; s#device * dev ; s#wiphy * wiphy ; t#bool surprise_removed ; t#u32 fw_release_number ; t#u16 init_wait_q_woken ; t#wait_queue_head_t init_wait_q ; void * card ; s#mwifiex_if_ops if_ops ; t#atomic_t rx_pending ; t#atomic_t tx_pending ; t#atomic_t cmd_pending ; s#workqueue_struct * workqueue ; s#work_struct main_work ; s#mwifiex_bss_prio_tbl bss_prio_tbl [ ( 3 ) ] ; t#spinlock_t mwifiex_lock ; t#spinlock_t main_proc_lock ; t#u32 mwifiex_processing ; t#u16 tx_buf_size ; t#u16 curr_tx_buf_size ; t#u32 ioport ; e#MWIFIEX_HARDWARE_STATUS hw_status ; t#u16 number_of_antenna ; t#u32 fw_cap_info ; t#spinlock_t int_lock ; t#u8 int_status ; t#u32 event_cause ; s#sk_buff * event_skb ; t#u8 upld_buf [ ( 2312 ) ] ; t#u8 data_sent ; t#u8 cmd_sent ; t#u8 cmd_resp_received ; t#u8 event_received ; t#u8 data_received ; t#u16 seq_num ; s#cmd_ctrl_node * cmd_pool ; s#cmd_ctrl_node * curr_cmd ; t#spinlock_t mwifiex_cmd_lock ; t#u32 num_cmd_timeout ; t#u16 last_init_cmd ; s#timer_list cmd_timer ; s#list_head cmd_free_q ; t#spinlock_t cmd_free_q_lock ; s#list_head cmd_pending_q ; t#spinlock_t cmd_pending_q_lock ; s#list_head scan_pending_q ; t#spinlock_t scan_pending_q_lock ; s#sk_buff_head usb_rx_data_q ; t#u32 scan_processing ; t#u16 region_code ; s#mwifiex_802_11d_domain_reg domain_reg ; t#u16 scan_probes ; t#u32 scan_mode ; t#u16 specific_scan_time ; t#u16 active_scan_time ; t#u16 passive_scan_time ; t#u8 fw_bands ; t#u8 adhoc_start_band ; t#u8 config_bands ; s#mwifiex_chan_scan_param_set * scan_channels ; t#u8 tx_lock_flag ; s#mwifiex_sleep_params sleep_params ; s#mwifiex_sleep_period sleep_period ; t#u16 ps_mode ; t#u32 ps_state ; t#u8 need_to_wakeup ; t#u16 multiple_dtim ; t#u16 local_listen_interval ; t#u16 null_pkt_interval ; s#sk_buff * sleep_cfm ; t#u16 bcn_miss_time_out ; t#u16 adhoc_awake_period ; t#u8 is_deep_sleep ; t#u8 delay_null_pkt ; t#u16 delay_to_ps ; t#u16 enhanced_ps_mode ; t#u8 pm_wakeup_card_req ; t#u16 gen_null_pkt ; t#u16 pps_uapsd_mode ; t#u32 pm_wakeup_fw_try ; t#u8 is_hs_configured ; s#mwifiex_hs_config_param hs_cfg ; t#u8 hs_activated ; t#u16 hs_activate_wait_q_woken ; t#wait_queue_head_t hs_activate_wait_q ; t#bool is_suspended ; t#u8 event_body [ 1024 ] ; t#u32 hw_dot_11n_dev_cap ; t#u8 hw_dev_mcs_support ; t#u8 adhoc_11n_enabled ; t#u8 sec_chan_offset ; s#mwifiex_dbg dbg ; t#u8 arp_filter [ 68 ] ; t#u32 arp_filter_size ; t#u16 cmd_wait_q_required ; s#mwifiex_wait_queue cmd_wait_q ; t#u8 scan_wait_q_woken ; t#spinlock_t queue_lock ; s#completion fw_load ; t#u8 country_code [ 3 ] ; t#u16 max_mgmt_ie_index ; t#u8 scan_delay_cnt ; t#u8 empty_tx_q_cnt ; const s#firmware * cal_data ; t#u32 is_hw_11ac_capable ; t#u32 hw_dot_11ac_dev_cap ; t#u32 hw_dot_11ac_mcs_support ; t#u32 usr_dot_11ac_dev_cap_bg ; t#u32 usr_dot_11ac_dev_cap_a ; t#u32 usr_dot_11ac_mcs_support ; t#atomic_t is_tx_received ; t#atomic_t pending_bridged_pkts ; s#semaphore * card_sem ; } 
mwifiex_process_hs_config void mwifiex_process_hs_config ( s#mwifiex_adapter * ) 
mwifiex_process_sleep_confirm_resp void mwifiex_process_sleep_confirm_resp ( s#mwifiex_adapter * , t#u8 * , t#u32 ) 

/* drivers/net/wireless/mwifiex/join.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
mwifiex_deauthenticate int mwifiex_deauthenticate ( s#mwifiex_private * , t#u8 * ) 

/* drivers/net/wireless/mwifiex/main.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
mwifiex_main_process int mwifiex_main_process ( s#mwifiex_adapter * ) 
mwifiex_add_card int mwifiex_add_card ( void * , s#semaphore * , s#mwifiex_if_ops * , t#u8 ) 
mwifiex_remove_card int mwifiex_remove_card ( s#mwifiex_adapter * , s#semaphore * ) 

/* drivers/net/wireless/mwifiex/sta_ioctl.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
mwifiex_cancel_hs int mwifiex_cancel_hs ( s#mwifiex_private * , int ) 
mwifiex_enable_hs int mwifiex_enable_hs ( s#mwifiex_adapter * ) 
mwifiex_disable_auto_ds int mwifiex_disable_auto_ds ( s#mwifiex_private * ) 

/* drivers/net/wireless/mwifiex/txrx.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
mwifiex_handle_rx_packet int mwifiex_handle_rx_packet ( s#mwifiex_adapter * , s#sk_buff * ) 
mwifiex_write_data_complete int mwifiex_write_data_complete ( s#mwifiex_adapter * , s#sk_buff * , int , int ) 

/* drivers/net/wireless/mwifiex/util.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
mwifiex_init_shutdown_fw int mwifiex_init_shutdown_fw ( s#mwifiex_private * , t#u32 ) 

/* drivers/net/wireless/orinoco/hermes.o */
s#hermes_response struct hermes_response { t#u16 status , resp0 , resp1 , resp2 ; } 
s#hermes_ops struct hermes_ops { int ( * init ) ( s#hermes * ) ; int ( * cmd_wait ) ( s#hermes * , t#u16 , t#u16 , s#hermes_response * ) ; int ( * init_cmd_wait ) ( s#hermes * , t#u16 , t#u16 , t#u16 , t#u16 , s#hermes_response * ) ; int ( * allocate ) ( s#hermes * , t#u16 , t#u16 * ) ; int ( * read_ltv ) ( s#hermes * , int , t#u16 , unsigned , t#u16 * , void * ) ; int ( * write_ltv ) ( s#hermes * , int , t#u16 , t#u16 , const void * ) ; int ( * bap_pread ) ( s#hermes * , int , void * , int , t#u16 , t#u16 ) ; int ( * bap_pwrite ) ( s#hermes * , int , const void * , int , t#u16 , t#u16 ) ; int ( * read_pda ) ( s#hermes * , t#__le16 * , t#u32 , t#u16 ) ; int ( * program_init ) ( s#hermes * , t#u32 ) ; int ( * program_end ) ( s#hermes * ) ; int ( * program ) ( s#hermes * , const char * , t#u32 , t#u32 ) ; void ( * lock_irqsave ) ( t#spinlock_t * , unsigned long * ) ; void ( * unlock_irqrestore ) ( t#spinlock_t * , unsigned long * ) ; void ( * lock_irq ) ( t#spinlock_t * ) ; void ( * unlock_irq ) ( t#spinlock_t * ) ; } 
s#hermes struct hermes { void * iobase ; int reg_spacing ; t#u16 inten ; t#bool eeprom_pda ; const s#hermes_ops * ops ; void * priv ; } 
hermes_struct_init void hermes_struct_init ( s#hermes * , void * , int ) 

/* drivers/net/wireless/orinoco/main.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
orinoco_open int orinoco_open ( s#net_device * ) 
orinoco_stop int orinoco_stop ( s#net_device * ) 
orinoco_get_stats s#net_device_stats * orinoco_get_stats ( s#net_device * ) 
orinoco_set_multicast_list void orinoco_set_multicast_list ( s#net_device * ) 
orinoco_change_mtu int orinoco_change_mtu ( s#net_device * , int ) 
e#fwtype enum fwtype { FIRMWARE_TYPE_AGERE , FIRMWARE_TYPE_INTERSIL , FIRMWARE_TYPE_SYMBOL } 
e#orinoco_alg enum orinoco_alg { ORINOCO_ALG_NONE , ORINOCO_ALG_WEP , ORINOCO_ALG_TKIP } 
s#key_params struct key_params { t#u8 * key ; t#u8 * seq ; int key_len ; int seq_len ; t#u32 cipher ; } 
s##crypto_hash
s##firmware
s#orinoco_private struct orinoco_private { void * card ; s#device * dev ; int ( * hard_reset ) ( s#orinoco_private * ) ; int ( * stop_fw ) ( s#orinoco_private * , int ) ; s#ieee80211_supported_band band ; s#ieee80211_channel channels [ 14 ] ; t#u32 cipher_suites [ 3 ] ; t#spinlock_t lock ; int hw_unavailable ; s#work_struct reset_work ; s#tasklet_struct rx_tasklet ; s#list_head rx_list ; int open ; t#u16 last_linkstatus ; s#work_struct join_work ; s#work_struct wevent_work ; s#net_device * ndev ; s#net_device_stats stats ; s#iw_statistics wstats ; s#hermes hw ; t#u16 txfid ; e#fwtype firmware_type ; int ibss_port ; int nicbuf_size ; t#u16 channel_mask ; unsigned int has_ibss : 1 ; unsigned int has_port3 : 1 ; unsigned int has_wep : 1 ; unsigned int has_big_wep : 1 ; unsigned int has_mwo : 1 ; unsigned int has_pm : 1 ; unsigned int has_preamble : 1 ; unsigned int has_sensitivity : 1 ; unsigned int has_hostscan : 1 ; unsigned int has_alt_txcntl : 1 ; unsigned int has_ext_scan : 1 ; unsigned int has_wpa : 1 ; unsigned int do_fw_download : 1 ; unsigned int broken_disableport : 1 ; unsigned int broken_monitor : 1 ; unsigned int prefer_port3 : 1 ; e#nl80211_iftype iw_mode ; e#orinoco_alg encode_alg ; t#u16 wep_restrict , tx_key ; s#key_params keys [ 4 ] ; int bitratemode ; char nick [ 32 + 1 ] ; char desired_essid [ 32 + 1 ] ; char desired_bssid [ 6 ] ; int bssid_fixed ; t#u16 frag_thresh , mwo_robust ; t#u16 channel ; t#u16 ap_density , rts_thresh ; t#u16 pm_on , pm_mcast , pm_period , pm_timeout ; t#u16 preamble ; t#u16 short_retry_limit , long_retry_limit ; t#u16 retry_lifetime ; s#iw_spy_data spy_data ; s#iw_public_data wireless_data ; int port_type , createibss ; int promiscuous , mc_count ; s#cfg80211_scan_request * scan_request ; s#work_struct process_scan ; s#list_head scan_list ; t#spinlock_t scan_lock ; t#u8 * wpa_ie ; int wpa_ie_len ; s#crypto_hash * rx_tfm_mic ; s#crypto_hash * tx_tfm_mic ; unsigned int wpa_enabled : 1 ; unsigned int tkip_cm_active : 1 ; unsigned int key_mgmt : 3 ; const s#firmware * cached_pri_fw ; const s#firmware * cached_fw ; s#notifier_block pm_notifier ; } 
orinoco_process_xmit_skb int orinoco_process_xmit_skb ( s#sk_buff * , s#net_device * , s#orinoco_private * , int * , t#u8 * ) 
orinoco_tx_timeout void orinoco_tx_timeout ( s#net_device * ) 
__orinoco_ev_rx extern void __orinoco_ev_rx ( s#net_device * , s#hermes * ) 
__orinoco_ev_info extern void __orinoco_ev_info ( s#net_device * , s#hermes * ) 
orinoco_interrupt extern t#irqreturn_t orinoco_interrupt ( int , void * ) 
orinoco_init extern int orinoco_init ( s#orinoco_private * ) 
alloc_orinocodev extern s#orinoco_private * alloc_orinocodev ( int , s#device * , int ( * ) ( s#orinoco_private * ) , int ( * ) ( s#orinoco_private * , int ) ) 
orinoco_if_add extern int orinoco_if_add ( s#orinoco_private * , unsigned long , unsigned int , const s#net_device_ops * ) 
orinoco_if_del extern void orinoco_if_del ( s#orinoco_private * ) 
free_orinocodev extern void free_orinocodev ( s#orinoco_private * ) 
orinoco_up extern int orinoco_up ( s#orinoco_private * ) 
orinoco_down extern void orinoco_down ( s#orinoco_private * ) 

/* drivers/net/wireless/p54/eeprom.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
p54_parse_eeprom int p54_parse_eeprom ( s#ieee80211_hw * , void * , int ) 
p54_read_eeprom int p54_read_eeprom ( s#ieee80211_hw * ) 

/* drivers/net/wireless/p54/fwio.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
p54_parse_firmware int p54_parse_firmware ( s#ieee80211_hw * , const s#firmware * ) 

/* drivers/net/wireless/p54/main.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
p54_init_common s#ieee80211_hw * p54_init_common ( t#size_t ) 
p54_register_common int p54_register_common ( s#ieee80211_hw * , s#device * ) 
p54_free_common void p54_free_common ( s#ieee80211_hw * ) 
p54_unregister_common void p54_unregister_common ( s#ieee80211_hw * ) 

/* drivers/net/wireless/p54/txrx.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
p54_free_skb void p54_free_skb ( s#ieee80211_hw * , s#sk_buff * ) 
p54_rx int p54_rx ( s#ieee80211_hw * , s#sk_buff * ) 

/* drivers/net/wireless/rt2x00/rt2800lib.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s#queue_entry struct queue_entry { unsigned long flags ; unsigned long last_action ; s#data_queue * queue ; s#sk_buff * skb ; unsigned int entry_idx ; t#u32 status ; void * priv_data ; } 
e#data_queue_qid enum data_queue_qid { QID_AC_VO = 0 , QID_AC_VI = 1 , QID_AC_BE = 2 , QID_AC_BK = 3 , QID_HCCA = 4 , QID_MGMT = 13 , QID_RX = 14 , QID_OTHER = 15 , QID_BEACON , QID_ATIM , } 
E#Q_INDEX_MAX 3 
s#data_queue struct data_queue { s#rt2x00_dev * rt2x00dev ; s#queue_entry * entries ; e#data_queue_qid qid ; unsigned long flags ; s#mutex status_lock ; t#spinlock_t tx_lock ; t#spinlock_t index_lock ; unsigned int count ; unsigned short limit ; unsigned short threshold ; unsigned short length ; unsigned short index [ E#Q_INDEX_MAX ] ; unsigned short txop ; unsigned short aifs ; unsigned short cw_min ; unsigned short cw_max ; unsigned short data_size ; unsigned char desc_size ; unsigned char winfo_size ; unsigned short priv_size ; unsigned short usb_endpoint ; unsigned short usb_maxpacket ; } 
e#dev_state enum dev_state { STATE_DEEP_SLEEP = 0 , STATE_SLEEP = 1 , STATE_STANDBY = 2 , STATE_AWAKE = 3 , STATE_RADIO_ON , STATE_RADIO_OFF , STATE_RADIO_IRQ_ON , STATE_RADIO_IRQ_OFF , } 
s#link_qual struct link_qual { int rssi ; int false_cca ; t#u8 vgc_level ; t#u8 vgc_level_reg ; int rx_success ; int rx_failed ; int tx_success ; int tx_failed ; } 
e#ifs enum ifs { IFS_BACKOFF = 0 , IFS_SIFS = 1 , IFS_NEW_BACKOFF = 2 , IFS_NONE = 3 , } 
e#txop enum txop { TXOP_HTTXOP = 0 , TXOP_PIFS = 1 , TXOP_SIFS = 2 , TXOP_BACKOFF = 3 , } 
e#rate_modulation enum rate_modulation { RATE_MODE_CCK = 0 , RATE_MODE_OFDM = 1 , RATE_MODE_HT_MIX = 2 , RATE_MODE_HT_GREENFIELD = 3 , } 
e#cipher enum cipher { CIPHER_NONE = 0 , CIPHER_WEP64 = 1 , CIPHER_WEP128 = 2 , CIPHER_TKIP = 3 , CIPHER_AES = 4 , CIPHER_CKIP64 = 5 , CIPHER_CKIP128 = 6 , CIPHER_TKIP_NO_MIC = 7 , CIPHER_MAX = 4 , } 
s#txentry_desc struct txentry_desc { unsigned long flags ; t#u16 length ; t#u16 header_length ; union { struct { t#u16 length_high ; t#u16 length_low ; t#u16 signal ; t#u16 service ; e#ifs ifs ; } plcp ; struct { t#u16 mcs ; t#u8 stbc ; t#u8 ba_size ; t#u8 mpdu_density ; e#txop txop ; int wcid ; } ht ; } u ; e#rate_modulation rate_mode ; short retry_limit ; e#cipher cipher ; t#u16 key_idx ; t#u16 iv_offset ; t#u16 iv_len ; } 
s#rxdone_entry_desc struct rxdone_entry_desc { t#u64 timestamp ; int signal ; int rssi ; int size ; int flags ; int dev_flags ; t#u16 rate_mode ; t#u8 cipher ; t#u8 cipher_status ; t#__le32 iv [ 2 ] ; t#__le32 icv ; } 
e#set_key_cmd enum set_key_cmd { SET_KEY , DISABLE_KEY , } 
s#rt2x00lib_crypto struct rt2x00lib_crypto { e#cipher cipher ; e#set_key_cmd cmd ; const t#u8 * address ; t#u32 bssidx ; t#u8 key [ 16 ] ; t#u8 tx_mic [ 8 ] ; t#u8 rx_mic [ 8 ] ; int wcid ; } 
s#rt2x00_intf struct rt2x00_intf { s#mutex beacon_skb_mutex ; s#queue_entry * beacon ; t#bool enable_beacon ; unsigned long delayed_flags ; t#atomic_t seqno ; } 
e#tsf_sync enum tsf_sync { TSF_SYNC_NONE = 0 , TSF_SYNC_INFRA = 1 , TSF_SYNC_ADHOC = 2 , TSF_SYNC_AP_NONE = 3 , } 
s#rt2x00intf_conf struct rt2x00intf_conf { e#nl80211_iftype type ; e#tsf_sync sync ; t#__le32 mac [ 2 ] ; t#__le32 bssid [ 2 ] ; } 
s#rt2x00lib_erp struct rt2x00lib_erp { int short_preamble ; int cts_protection ; t#u32 basic_rates ; int slot_time ; short sifs ; short pifs ; short difs ; short eifs ; t#u16 beacon_int ; t#u16 ht_opmode ; } 
e#antenna enum antenna { ANTENNA_SW_DIVERSITY = 0 , ANTENNA_A = 1 , ANTENNA_B = 2 , ANTENNA_HW_DIVERSITY = 3 , } 
s#antenna_setup struct antenna_setup { e#antenna rx ; e#antenna tx ; t#u8 rx_chain_num ; t#u8 tx_chain_num ; } 
s#rf_channel struct rf_channel { int channel ; t#u32 rf1 ; t#u32 rf2 ; t#u32 rf3 ; t#u32 rf4 ; } 
s#channel_info struct channel_info { unsigned int flags ; short max_power ; short default_power1 ; short default_power2 ; short default_power3 ; } 
s#rt2x00lib_conf struct rt2x00lib_conf { s#ieee80211_conf * conf ; s#rf_channel rf ; s#channel_info channel ; } 
s#rt2x00lib_ops struct rt2x00lib_ops { t#irq_handler_t irq_handler ; void ( * txstatus_tasklet ) ( unsigned long ) ; void ( * pretbtt_tasklet ) ( unsigned long ) ; void ( * tbtt_tasklet ) ( unsigned long ) ; void ( * rxdone_tasklet ) ( unsigned long ) ; void ( * autowake_tasklet ) ( unsigned long ) ; int ( * probe_hw ) ( s#rt2x00_dev * ) ; char * ( * get_firmware_name ) ( s#rt2x00_dev * ) ; int ( * check_firmware ) ( s#rt2x00_dev * , const t#u8 * , const t#size_t ) ; int ( * load_firmware ) ( s#rt2x00_dev * , const t#u8 * , const t#size_t ) ; int ( * initialize ) ( s#rt2x00_dev * ) ; void ( * uninitialize ) ( s#rt2x00_dev * ) ; t#bool ( * get_entry_state ) ( s#queue_entry * ) ; void ( * clear_entry ) ( s#queue_entry * ) ; int ( * set_device_state ) ( s#rt2x00_dev * , e#dev_state ) ; int ( * rfkill_poll ) ( s#rt2x00_dev * ) ; void ( * link_stats ) ( s#rt2x00_dev * , s#link_qual * ) ; void ( * reset_tuner ) ( s#rt2x00_dev * , s#link_qual * ) ; void ( * link_tuner ) ( s#rt2x00_dev * , s#link_qual * , const t#u32 ) ; void ( * gain_calibration ) ( s#rt2x00_dev * ) ; void ( * vco_calibration ) ( s#rt2x00_dev * ) ; void ( * watchdog ) ( s#rt2x00_dev * ) ; void ( * start_queue ) ( s#data_queue * ) ; void ( * kick_queue ) ( s#data_queue * ) ; void ( * stop_queue ) ( s#data_queue * ) ; void ( * flush_queue ) ( s#data_queue * , t#bool ) ; void ( * tx_dma_done ) ( s#queue_entry * ) ; void ( * write_tx_desc ) ( s#queue_entry * , s#txentry_desc * ) ; void ( * write_tx_data ) ( s#queue_entry * , s#txentry_desc * ) ; void ( * write_beacon ) ( s#queue_entry * , s#txentry_desc * ) ; void ( * clear_beacon ) ( s#queue_entry * ) ; int ( * get_tx_data_len ) ( s#queue_entry * ) ; void ( * fill_rxdone ) ( s#queue_entry * , s#rxdone_entry_desc * ) ; int ( * config_shared_key ) ( s#rt2x00_dev * , s#rt2x00lib_crypto * , s#ieee80211_key_conf * ) ; int ( * config_pairwise_key ) ( s#rt2x00_dev * , s#rt2x00lib_crypto * , s#ieee80211_key_conf * ) ; void ( * config_filter ) ( s#rt2x00_dev * , const unsigned int ) ; void ( * config_intf ) ( s#rt2x00_dev * , s#rt2x00_intf * , s#rt2x00intf_conf * , const unsigned int ) ; void ( * config_erp ) ( s#rt2x00_dev * , s#rt2x00lib_erp * , t#u32 ) ; void ( * config_ant ) ( s#rt2x00_dev * , s#antenna_setup * ) ; void ( * config ) ( s#rt2x00_dev * , s#rt2x00lib_conf * , const unsigned int ) ; int ( * sta_add ) ( s#rt2x00_dev * , s#ieee80211_vif * , s#ieee80211_sta * ) ; int ( * sta_remove ) ( s#rt2x00_dev * , int ) ; } 
s#ieee80211_tx_control struct ieee80211_tx_control { s#ieee80211_sta * sta ; } 
s#cfg80211_gtk_rekey_data struct cfg80211_gtk_rekey_data { t#u8 kek [ 16 ] ; t#u8 kck [ 16 ] ; t#u8 replay_ctr [ 8 ] ; } 
s#cfg80211_match_set struct cfg80211_match_set { s#cfg80211_ssid ssid ; } 
s#cfg80211_sched_scan_request struct cfg80211_sched_scan_request { s#cfg80211_ssid * ssids ; int n_ssids ; t#u32 n_channels ; e#nl80211_bss_scan_width scan_width ; t#u32 interval ; const t#u8 * ie ; t#size_t ie_len ; t#u32 flags ; s#cfg80211_match_set * match_sets ; int n_match_sets ; t#s32 rssi_thold ; s#wiphy * wiphy ; s#net_device * dev ; unsigned long scan_start ; s#ieee80211_channel * channels [ 0 ] ; } 
s#ieee80211_sched_scan_ies struct ieee80211_sched_scan_ies { t#u8 * ie [ E#IEEE80211_NUM_BANDS ] ; t#size_t len [ E#IEEE80211_NUM_BANDS ] ; } 
e#sta_notify_cmd enum sta_notify_cmd { STA_NOTIFY_SLEEP , STA_NOTIFY_AWAKE , } 
e#ieee80211_sta_state enum ieee80211_sta_state { IEEE80211_STA_NOTEXIST , IEEE80211_STA_NONE , IEEE80211_STA_AUTH , IEEE80211_STA_ASSOC , IEEE80211_STA_AUTHORIZED , } 
e#ieee80211_ampdu_mlme_action enum ieee80211_ampdu_mlme_action { IEEE80211_AMPDU_RX_START , IEEE80211_AMPDU_RX_STOP , IEEE80211_AMPDU_TX_START , IEEE80211_AMPDU_TX_STOP_CONT , IEEE80211_AMPDU_TX_STOP_FLUSH , IEEE80211_AMPDU_TX_STOP_FLUSH_CONT , IEEE80211_AMPDU_TX_OPERATIONAL , } 
e#ieee80211_roc_type enum ieee80211_roc_type { IEEE80211_ROC_TYPE_NORMAL = 0 , IEEE80211_ROC_TYPE_MGMT_TX , } 
s#cfg80211_bitrate_mask struct cfg80211_bitrate_mask { struct { t#u32 legacy ; t#u8 mcs [ 10 ] ; } control [ E#IEEE80211_NUM_BANDS ] ; } 
e#ieee80211_rssi_event enum ieee80211_rssi_event { RSSI_EVENT_HIGH , RSSI_EVENT_LOW , } 
e#ieee80211_frame_release_type enum ieee80211_frame_release_type { IEEE80211_FRAME_RELEASE_PSPOLL , IEEE80211_FRAME_RELEASE_UAPSD , } 
s#ieee80211_ops struct ieee80211_ops { void ( * tx ) ( s#ieee80211_hw * , s#ieee80211_tx_control * , s#sk_buff * ) ; int ( * start ) ( s#ieee80211_hw * ) ; void ( * stop ) ( s#ieee80211_hw * ) ; int ( * suspend ) ( s#ieee80211_hw * , s#cfg80211_wowlan * ) ; int ( * resume ) ( s#ieee80211_hw * ) ; void ( * set_wakeup ) ( s#ieee80211_hw * , t#bool ) ; int ( * add_interface ) ( s#ieee80211_hw * , s#ieee80211_vif * ) ; int ( * change_interface ) ( s#ieee80211_hw * , s#ieee80211_vif * , e#nl80211_iftype , t#bool ) ; void ( * remove_interface ) ( s#ieee80211_hw * , s#ieee80211_vif * ) ; int ( * config ) ( s#ieee80211_hw * , t#u32 ) ; void ( * bss_info_changed ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_bss_conf * , t#u32 ) ; int ( * start_ap ) ( s#ieee80211_hw * , s#ieee80211_vif * ) ; void ( * stop_ap ) ( s#ieee80211_hw * , s#ieee80211_vif * ) ; t#u64 ( * prepare_multicast ) ( s#ieee80211_hw * , s#netdev_hw_addr_list * ) ; void ( * configure_filter ) ( s#ieee80211_hw * , unsigned int , unsigned int * , t#u64 ) ; void ( * set_multicast_list ) ( s#ieee80211_hw * , s#ieee80211_vif * , t#bool , s#netdev_hw_addr_list * ) ; int ( * set_tim ) ( s#ieee80211_hw * , s#ieee80211_sta * , t#bool ) ; int ( * set_key ) ( s#ieee80211_hw * , e#set_key_cmd , s#ieee80211_vif * , s#ieee80211_sta * , s#ieee80211_key_conf * ) ; void ( * update_tkip_key ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_key_conf * , s#ieee80211_sta * , t#u32 , t#u16 * ) ; void ( * set_rekey_data ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#cfg80211_gtk_rekey_data * ) ; void ( * set_default_unicast_key ) ( s#ieee80211_hw * , s#ieee80211_vif * , int ) ; int ( * hw_scan ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#cfg80211_scan_request * ) ; void ( * cancel_hw_scan ) ( s#ieee80211_hw * , s#ieee80211_vif * ) ; int ( * sched_scan_start ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#cfg80211_sched_scan_request * , s#ieee80211_sched_scan_ies * ) ; void ( * sched_scan_stop ) ( s#ieee80211_hw * , s#ieee80211_vif * ) ; void ( * sw_scan_start ) ( s#ieee80211_hw * ) ; void ( * sw_scan_complete ) ( s#ieee80211_hw * ) ; int ( * get_stats ) ( s#ieee80211_hw * , s#ieee80211_low_level_stats * ) ; void ( * get_tkip_seq ) ( s#ieee80211_hw * , t#u8 , t#u32 * , t#u16 * ) ; int ( * set_frag_threshold ) ( s#ieee80211_hw * , t#u32 ) ; int ( * set_rts_threshold ) ( s#ieee80211_hw * , t#u32 ) ; int ( * sta_add ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_sta * ) ; int ( * sta_remove ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_sta * ) ; void ( * sta_add_debugfs ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_sta * , s#dentry * ) ; void ( * sta_remove_debugfs ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_sta * , s#dentry * ) ; void ( * sta_notify ) ( s#ieee80211_hw * , s#ieee80211_vif * , e#sta_notify_cmd , s#ieee80211_sta * ) ; int ( * sta_state ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_sta * , e#ieee80211_sta_state , e#ieee80211_sta_state ) ; void ( * sta_rc_update ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_sta * , t#u32 ) ; int ( * conf_tx ) ( s#ieee80211_hw * , s#ieee80211_vif * , t#u16 , const s#ieee80211_tx_queue_params * ) ; t#u64 ( * get_tsf ) ( s#ieee80211_hw * , s#ieee80211_vif * ) ; void ( * set_tsf ) ( s#ieee80211_hw * , s#ieee80211_vif * , t#u64 ) ; void ( * reset_tsf ) ( s#ieee80211_hw * , s#ieee80211_vif * ) ; int ( * tx_last_beacon ) ( s#ieee80211_hw * ) ; int ( * ampdu_action ) ( s#ieee80211_hw * , s#ieee80211_vif * , e#ieee80211_ampdu_mlme_action , s#ieee80211_sta * , t#u16 , t#u16 * , t#u8 ) ; int ( * get_survey ) ( s#ieee80211_hw * , int , s#survey_info * ) ; void ( * rfkill_poll ) ( s#ieee80211_hw * ) ; void ( * set_coverage_class ) ( s#ieee80211_hw * , t#u8 ) ; void ( * flush ) ( s#ieee80211_hw * , t#u32 , t#bool ) ; void ( * channel_switch ) ( s#ieee80211_hw * , s#ieee80211_channel_switch * ) ; int ( * napi_poll ) ( s#ieee80211_hw * , int ) ; int ( * set_antenna ) ( s#ieee80211_hw * , t#u32 , t#u32 ) ; int ( * get_antenna ) ( s#ieee80211_hw * , t#u32 * , t#u32 * ) ; int ( * remain_on_channel ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_channel * , int , e#ieee80211_roc_type ) ; int ( * cancel_remain_on_channel ) ( s#ieee80211_hw * ) ; int ( * set_ringparam ) ( s#ieee80211_hw * , t#u32 , t#u32 ) ; void ( * get_ringparam ) ( s#ieee80211_hw * , t#u32 * , t#u32 * , t#u32 * , t#u32 * ) ; t#bool ( * tx_frames_pending ) ( s#ieee80211_hw * ) ; int ( * set_bitrate_mask ) ( s#ieee80211_hw * , s#ieee80211_vif * , const s#cfg80211_bitrate_mask * ) ; void ( * rssi_callback ) ( s#ieee80211_hw * , s#ieee80211_vif * , e#ieee80211_rssi_event ) ; void ( * allow_buffered_frames ) ( s#ieee80211_hw * , s#ieee80211_sta * , t#u16 , int , e#ieee80211_frame_release_type , t#bool ) ; void ( * release_buffered_frames ) ( s#ieee80211_hw * , s#ieee80211_sta * , t#u16 , int , e#ieee80211_frame_release_type , t#bool ) ; int ( * get_et_sset_count ) ( s#ieee80211_hw * , s#ieee80211_vif * , int ) ; void ( * get_et_stats ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#ethtool_stats * , t#u64 * ) ; void ( * get_et_strings ) ( s#ieee80211_hw * , s#ieee80211_vif * , t#u32 , t#u8 * ) ; int ( * get_rssi ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_sta * , t#s8 * ) ; void ( * mgd_prepare_tx ) ( s#ieee80211_hw * , s#ieee80211_vif * ) ; int ( * add_chanctx ) ( s#ieee80211_hw * , s#ieee80211_chanctx_conf * ) ; void ( * remove_chanctx ) ( s#ieee80211_hw * , s#ieee80211_chanctx_conf * ) ; void ( * change_chanctx ) ( s#ieee80211_hw * , s#ieee80211_chanctx_conf * , t#u32 ) ; int ( * assign_vif_chanctx ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_chanctx_conf * ) ; void ( * unassign_vif_chanctx ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_chanctx_conf * ) ; void ( * restart_complete ) ( s#ieee80211_hw * ) ; void ( * ipv6_addr_change ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#inet6_dev * ) ; void ( * channel_switch_beacon ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#cfg80211_chan_def * ) ; } 
s#rt2x00_ops struct rt2x00_ops { const char * name ; const unsigned int drv_data_size ; const unsigned int max_ap_intf ; const unsigned int eeprom_size ; const unsigned int rf_size ; const unsigned int tx_queues ; void ( * queue_init ) ( s#data_queue * ) ; const s#rt2x00lib_ops * lib ; const void * drv ; const s#ieee80211_ops * hw ; } 
e#led_type enum led_type { LED_TYPE_RADIO , LED_TYPE_ASSOC , LED_TYPE_ACTIVITY , LED_TYPE_QUALITY , } 
s#rt2x00_led struct rt2x00_led { s#rt2x00_dev * rt2x00dev ; s#led_classdev led_dev ; e#led_type type ; unsigned int flags ; } 
e#rt2x00_chip_intf enum rt2x00_chip_intf { RT2X00_CHIP_INTF_PCI , RT2X00_CHIP_INTF_PCIE , RT2X00_CHIP_INTF_USB , RT2X00_CHIP_INTF_SOC , } 
s#rt2x00_chip struct rt2x00_chip { t#u16 rt ; t#u16 rf ; t#u16 rev ; e#rt2x00_chip_intf intf ; } 
s#hw_mode_spec struct hw_mode_spec { unsigned int supported_bands ; unsigned int supported_rates ; unsigned int num_channels ; const s#rf_channel * channels ; const s#channel_info * channels_info ; s#ieee80211_sta_ht_cap ht ; } 
u#csr union csr { void * base ; void * cache ; } 
E#NUM_IF_COMB ( 0 ) + 1 
s#avg_val struct avg_val { int avg ; int avg_weight ; } 
s#link_ant struct link_ant { unsigned int flags ; s#antenna_setup active ; int rssi_history ; s#avg_val rssi_ant ; } 
s#link struct link { t#u32 count ; s#link_qual qual ; s#link_ant ant ; s#avg_val avg_rssi ; s#delayed_work work ; s#delayed_work watchdog_work ; s#delayed_work agc_work ; s#delayed_work vco_work ; } 
s#rt2x00_dev struct rt2x00_dev { s#device * dev ; const s#rt2x00_ops * ops ; void * drv_data ; s#ieee80211_hw * hw ; s#ieee80211_supported_band bands [ E#IEEE80211_NUM_BANDS ] ; e#ieee80211_band curr_band ; int curr_freq ; s#rt2x00_led led_radio ; s#rt2x00_led led_assoc ; s#rt2x00_led led_qual ; t#u16 led_mcu_reg ; unsigned long flags ; unsigned long cap_flags ; int irq ; const char * name ; s#rt2x00_chip chip ; s#hw_mode_spec spec ; s#antenna_setup default_ant ; u#csr csr ; s#mutex csr_mutex ; unsigned int packet_filter ; unsigned int intf_ap_count ; unsigned int intf_sta_count ; unsigned int intf_associated ; unsigned int intf_beaconing ; s#ieee80211_iface_limit if_limits_ap ; s#ieee80211_iface_combination if_combinations [ E#NUM_IF_COMB ] ; s#link link ; t#__le16 * eeprom ; t#u32 * rf ; short lna_gain ; t#u16 tx_power ; t#u8 short_retry ; t#u8 long_retry ; t#u8 rssi_offset ; t#u8 freq_offset ; t#u16 aid ; t#u16 beacon_int ; unsigned long last_beacon ; s#ieee80211_low_level_stats low_level_stats ; s#workqueue_struct * workqueue ; s#work_struct intf_work ; s#work_struct rxdone_work ; s#work_struct txdone_work ; s#delayed_work autowakeup_work ; s#work_struct sleep_work ; unsigned int data_queues ; s#data_queue * rx ; s#data_queue * tx ; s#data_queue * bcn ; s#data_queue * atim ; const s#firmware * fw ; struct { union { s#__kfifo kfifo ; t#u32 * type ; char ( * rectype ) [ 0 ] ; t#u32 * ptr ; const t#u32 * ptr_const ; } ; t#u32 buf [ 0 ] ; } txstatus_fifo ; s#hrtimer txstatus_timer ; s#tasklet_struct txstatus_tasklet ; s#tasklet_struct pretbtt_tasklet ; s#tasklet_struct tbtt_tasklet ; s#tasklet_struct rxdone_tasklet ; s#tasklet_struct autowake_tasklet ; int rf_channel ; t#spinlock_t irqmask_lock ; s#list_head bar_list ; t#spinlock_t bar_list_lock ; unsigned int extra_tx_headroom ; } 
rt2800_mcu_request void rt2800_mcu_request ( s#rt2x00_dev * , const t#u8 , const t#u8 , const t#u8 , const t#u8 ) 
rt2800_wait_csr_ready int rt2800_wait_csr_ready ( s#rt2x00_dev * ) 
rt2800_wait_wpdma_ready int rt2800_wait_wpdma_ready ( s#rt2x00_dev * ) 
rt2800_disable_wpdma void rt2800_disable_wpdma ( s#rt2x00_dev * ) 
rt2800_get_txwi_rxwi_size void rt2800_get_txwi_rxwi_size ( s#rt2x00_dev * , unsigned short * , unsigned short * ) 
rt2800_check_firmware int rt2800_check_firmware ( s#rt2x00_dev * , const t#u8 * , const t#size_t ) 
rt2800_load_firmware int rt2800_load_firmware ( s#rt2x00_dev * , const t#u8 * , const t#size_t ) 
rt2800_write_tx_data void rt2800_write_tx_data ( s#queue_entry * , s#txentry_desc * ) 
rt2800_process_rxwi void rt2800_process_rxwi ( s#queue_entry * , s#rxdone_entry_desc * ) 
rt2800_txdone_entry void rt2800_txdone_entry ( s#queue_entry * , t#u32 , t#__le32 * ) 
rt2800_write_beacon void rt2800_write_beacon ( s#queue_entry * , s#txentry_desc * ) 
rt2800_clear_beacon void rt2800_clear_beacon ( s#queue_entry * ) 
rt2800_rfkill_poll int rt2800_rfkill_poll ( s#rt2x00_dev * ) 
rt2800_config_shared_key int rt2800_config_shared_key ( s#rt2x00_dev * , s#rt2x00lib_crypto * , s#ieee80211_key_conf * ) 
rt2800_config_pairwise_key int rt2800_config_pairwise_key ( s#rt2x00_dev * , s#rt2x00lib_crypto * , s#ieee80211_key_conf * ) 
rt2800_sta_add int rt2800_sta_add ( s#rt2x00_dev * , s#ieee80211_vif * , s#ieee80211_sta * ) 
rt2800_sta_remove int rt2800_sta_remove ( s#rt2x00_dev * , int ) 
rt2800_config_filter void rt2800_config_filter ( s#rt2x00_dev * , const unsigned int ) 
rt2800_config_intf void rt2800_config_intf ( s#rt2x00_dev * , s#rt2x00_intf * , s#rt2x00intf_conf * , const unsigned int ) 
rt2800_config_erp void rt2800_config_erp ( s#rt2x00_dev * , s#rt2x00lib_erp * , t#u32 ) 
rt2800_config_ant void rt2800_config_ant ( s#rt2x00_dev * , s#antenna_setup * ) 
rt2800_gain_calibration void rt2800_gain_calibration ( s#rt2x00_dev * ) 
rt2800_vco_calibration void rt2800_vco_calibration ( s#rt2x00_dev * ) 
rt2800_config void rt2800_config ( s#rt2x00_dev * , s#rt2x00lib_conf * , const unsigned int ) 
rt2800_link_stats void rt2800_link_stats ( s#rt2x00_dev * , s#link_qual * ) 
rt2800_reset_tuner void rt2800_reset_tuner ( s#rt2x00_dev * , s#link_qual * ) 
rt2800_link_tuner void rt2800_link_tuner ( s#rt2x00_dev * , s#link_qual * , const t#u32 ) 
rt2800_enable_radio int rt2800_enable_radio ( s#rt2x00_dev * ) 
rt2800_disable_radio void rt2800_disable_radio ( s#rt2x00_dev * ) 
rt2800_efuse_detect int rt2800_efuse_detect ( s#rt2x00_dev * ) 
rt2800_read_eeprom_efuse int rt2800_read_eeprom_efuse ( s#rt2x00_dev * ) 
rt2800_probe_hw int rt2800_probe_hw ( s#rt2x00_dev * ) 
rt2800_get_tkip_seq void rt2800_get_tkip_seq ( s#ieee80211_hw * , t#u8 , t#u32 * , t#u16 * ) 
rt2800_set_rts_threshold int rt2800_set_rts_threshold ( s#ieee80211_hw * , t#u32 ) 
rt2800_conf_tx int rt2800_conf_tx ( s#ieee80211_hw * , s#ieee80211_vif * , t#u16 , const s#ieee80211_tx_queue_params * ) 
rt2800_get_tsf t#u64 rt2800_get_tsf ( s#ieee80211_hw * , s#ieee80211_vif * ) 
rt2800_ampdu_action int rt2800_ampdu_action ( s#ieee80211_hw * , s#ieee80211_vif * , e#ieee80211_ampdu_mlme_action , s#ieee80211_sta * , t#u16 , t#u16 * , t#u8 ) 
rt2800_get_survey int rt2800_get_survey ( s#ieee80211_hw * , int , s#survey_info * ) 

/* drivers/net/wireless/rt2x00/rt2x00dev.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
rt2x00lib_get_bssidx t#u32 rt2x00lib_get_bssidx ( s#rt2x00_dev * , s#ieee80211_vif * ) 
rt2x00lib_beacondone void rt2x00lib_beacondone ( s#rt2x00_dev * ) 
rt2x00lib_pretbtt void rt2x00lib_pretbtt ( s#rt2x00_dev * ) 
rt2x00lib_dmastart void rt2x00lib_dmastart ( s#queue_entry * ) 
rt2x00lib_dmadone void rt2x00lib_dmadone ( s#queue_entry * ) 
s#txdone_entry_desc struct txdone_entry_desc { unsigned long flags ; int retry ; } 
rt2x00lib_txdone void rt2x00lib_txdone ( s#queue_entry * , s#txdone_entry_desc * ) 
rt2x00lib_txdone_noinfo void rt2x00lib_txdone_noinfo ( s#queue_entry * , t#u32 ) 
rt2x00lib_rxdone void rt2x00lib_rxdone ( s#queue_entry * , t#gfp_t ) 
rt2x00lib_probe_dev int rt2x00lib_probe_dev ( s#rt2x00_dev * ) 
rt2x00lib_remove_dev void rt2x00lib_remove_dev ( s#rt2x00_dev * ) 
rt2x00lib_suspend int rt2x00lib_suspend ( s#rt2x00_dev * , t#pm_message_t ) 
rt2x00lib_resume int rt2x00lib_resume ( s#rt2x00_dev * ) 

/* drivers/net/wireless/rt2x00/rt2x00mac.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
rt2x00mac_tx void rt2x00mac_tx ( s#ieee80211_hw * , s#ieee80211_tx_control * , s#sk_buff * ) 
rt2x00mac_start int rt2x00mac_start ( s#ieee80211_hw * ) 
rt2x00mac_stop void rt2x00mac_stop ( s#ieee80211_hw * ) 
rt2x00mac_add_interface int rt2x00mac_add_interface ( s#ieee80211_hw * , s#ieee80211_vif * ) 
rt2x00mac_remove_interface void rt2x00mac_remove_interface ( s#ieee80211_hw * , s#ieee80211_vif * ) 
rt2x00mac_config int rt2x00mac_config ( s#ieee80211_hw * , t#u32 ) 
rt2x00mac_configure_filter void rt2x00mac_configure_filter ( s#ieee80211_hw * , unsigned int , unsigned int * , t#u64 ) 
rt2x00mac_set_tim int rt2x00mac_set_tim ( s#ieee80211_hw * , s#ieee80211_sta * , t#bool ) 
rt2x00mac_set_key int rt2x00mac_set_key ( s#ieee80211_hw * , e#set_key_cmd , s#ieee80211_vif * , s#ieee80211_sta * , s#ieee80211_key_conf * ) 
rt2x00mac_sta_add int rt2x00mac_sta_add ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_sta * ) 
rt2x00mac_sta_remove int rt2x00mac_sta_remove ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_sta * ) 
rt2x00mac_sw_scan_start void rt2x00mac_sw_scan_start ( s#ieee80211_hw * ) 
rt2x00mac_sw_scan_complete void rt2x00mac_sw_scan_complete ( s#ieee80211_hw * ) 
rt2x00mac_get_stats int rt2x00mac_get_stats ( s#ieee80211_hw * , s#ieee80211_low_level_stats * ) 
rt2x00mac_bss_info_changed void rt2x00mac_bss_info_changed ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_bss_conf * , t#u32 ) 
rt2x00mac_conf_tx int rt2x00mac_conf_tx ( s#ieee80211_hw * , s#ieee80211_vif * , t#u16 , const s#ieee80211_tx_queue_params * ) 
rt2x00mac_rfkill_poll void rt2x00mac_rfkill_poll ( s#ieee80211_hw * ) 
rt2x00mac_flush void rt2x00mac_flush ( s#ieee80211_hw * , t#u32 , t#bool ) 
rt2x00mac_set_antenna int rt2x00mac_set_antenna ( s#ieee80211_hw * , t#u32 , t#u32 ) 
rt2x00mac_get_antenna int rt2x00mac_get_antenna ( s#ieee80211_hw * , t#u32 * , t#u32 * ) 
rt2x00mac_get_ringparam void rt2x00mac_get_ringparam ( s#ieee80211_hw * , t#u32 * , t#u32 * , t#u32 * , t#u32 * ) 
rt2x00mac_tx_frames_pending t#bool rt2x00mac_tx_frames_pending ( s#ieee80211_hw * ) 

/* drivers/net/wireless/rt2x00/rt2x00mmio.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s#rt2x00_field32 struct rt2x00_field32 { t#u32 bit_offset ; t#u32 bit_mask ; } 
rt2x00mmio_regbusy_read int rt2x00mmio_regbusy_read ( s#rt2x00_dev * , const unsigned int , const s#rt2x00_field32 , t#u32 * ) 
rt2x00mmio_rxdone t#bool rt2x00mmio_rxdone ( s#rt2x00_dev * ) 
rt2x00mmio_flush_queue void rt2x00mmio_flush_queue ( s#data_queue * , t#bool ) 
rt2x00mmio_initialize int rt2x00mmio_initialize ( s#rt2x00_dev * ) 
rt2x00mmio_uninitialize void rt2x00mmio_uninitialize ( s#rt2x00_dev * ) 

/* drivers/net/wireless/rt2x00/rt2x00pci.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
rt2x00pci_probe int rt2x00pci_probe ( s#pci_dev * , const s#rt2x00_ops * ) 
rt2x00pci_remove void rt2x00pci_remove ( s#pci_dev * ) 
rt2x00pci_suspend int rt2x00pci_suspend ( s#pci_dev * , t#pm_message_t ) 
rt2x00pci_resume int rt2x00pci_resume ( s#pci_dev * ) 

/* drivers/net/wireless/rt2x00/rt2x00queue.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
rt2x00queue_map_txskb int rt2x00queue_map_txskb ( s#queue_entry * ) 
rt2x00queue_unmap_skb void rt2x00queue_unmap_skb ( s#queue_entry * ) 
e#queue_index enum queue_index { Q_INDEX , Q_INDEX_DMA_DONE , Q_INDEX_DONE , Q_INDEX_MAX , } 
rt2x00queue_for_each_entry t#bool rt2x00queue_for_each_entry ( s#data_queue * , e#queue_index , e#queue_index , void * , t#bool ( * ) ( s#queue_entry * , void * ) ) 
rt2x00queue_get_entry s#queue_entry * rt2x00queue_get_entry ( s#data_queue * , e#queue_index ) 
rt2x00queue_pause_queue void rt2x00queue_pause_queue ( s#data_queue * ) 
rt2x00queue_unpause_queue void rt2x00queue_unpause_queue ( s#data_queue * ) 
rt2x00queue_start_queue void rt2x00queue_start_queue ( s#data_queue * ) 
rt2x00queue_stop_queue void rt2x00queue_stop_queue ( s#data_queue * ) 
rt2x00queue_flush_queue void rt2x00queue_flush_queue ( s#data_queue * , t#bool ) 
rt2x00queue_start_queues void rt2x00queue_start_queues ( s#rt2x00_dev * ) 
rt2x00queue_stop_queues void rt2x00queue_stop_queues ( s#rt2x00_dev * ) 
rt2x00queue_flush_queues void rt2x00queue_flush_queues ( s#rt2x00_dev * , t#bool ) 

/* drivers/net/wireless/rt2x00/rt2x00usb.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
rt2x00usb_vendor_request int rt2x00usb_vendor_request ( s#rt2x00_dev * , const t#u8 , const t#u8 , const t#u16 , const t#u16 , void * , const t#u16 , const int ) 
rt2x00usb_vendor_req_buff_lock int rt2x00usb_vendor_req_buff_lock ( s#rt2x00_dev * , const t#u8 , const t#u8 , const t#u16 , void * , const t#u16 , const int ) 
rt2x00usb_vendor_request_buff int rt2x00usb_vendor_request_buff ( s#rt2x00_dev * , const t#u8 , const t#u8 , const t#u16 , void * , const t#u16 , const int ) 
rt2x00usb_regbusy_read int rt2x00usb_regbusy_read ( s#rt2x00_dev * , const unsigned int , const s#rt2x00_field32 , t#u32 * ) 
rt2x00usb_register_read_async void rt2x00usb_register_read_async ( s#rt2x00_dev * , const unsigned int , t#bool ( * ) ( s#rt2x00_dev * , int , t#u32 ) ) 
rt2x00usb_kick_queue void rt2x00usb_kick_queue ( s#data_queue * ) 
rt2x00usb_flush_queue void rt2x00usb_flush_queue ( s#data_queue * , t#bool ) 
rt2x00usb_watchdog void rt2x00usb_watchdog ( s#rt2x00_dev * ) 
rt2x00usb_disable_radio void rt2x00usb_disable_radio ( s#rt2x00_dev * ) 
rt2x00usb_clear_entry void rt2x00usb_clear_entry ( s#queue_entry * ) 
rt2x00usb_initialize int rt2x00usb_initialize ( s#rt2x00_dev * ) 
rt2x00usb_uninitialize void rt2x00usb_uninitialize ( s#rt2x00_dev * ) 
s##ep_device
rt2x00usb_probe int rt2x00usb_probe ( s#usb_interface * , const s#rt2x00_ops * ) 
rt2x00usb_disconnect void rt2x00usb_disconnect ( s#usb_interface * ) 
rt2x00usb_suspend int rt2x00usb_suspend ( s#usb_interface * , t#pm_message_t ) 
rt2x00usb_resume int rt2x00usb_resume ( s#usb_interface * ) 

/* drivers/net/wireless/rtlwifi/base.o */
rtl_tid_to_ac t#u8 rtl_tid_to_ac ( t#u8 ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kioctx
s##eventfd_ctx
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##mem_cgroup
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
rtl_deinit_deferred_work void rtl_deinit_deferred_work ( s#ieee80211_hw * ) 
rtl_init_rfkill void rtl_init_rfkill ( s#ieee80211_hw * ) 
rtl_deinit_rfkill void rtl_deinit_rfkill ( s#ieee80211_hw * ) 
rtl_init_core int rtl_init_core ( s#ieee80211_hw * ) 
rtl_deinit_core void rtl_deinit_core ( s#ieee80211_hw * ) 
rtl_init_rx_config void rtl_init_rx_config ( s#ieee80211_hw * ) 
rtlwifi_rate_mapping int rtlwifi_rate_mapping ( s#ieee80211_hw * , t#bool , t#u8 , t#bool ) 
rtl_tx_mgmt_proc t#bool rtl_tx_mgmt_proc ( s#ieee80211_hw * , s#sk_buff * ) 
s#rtl_tcb_desc struct rtl_tcb_desc { t#u8 packet_bw : 1 ; t#u8 multicast : 1 ; t#u8 broadcast : 1 ; t#u8 rts_stbc : 1 ; t#u8 rts_enable : 1 ; t#u8 cts_enable : 1 ; t#u8 rts_use_shortpreamble : 1 ; t#u8 rts_use_shortgi : 1 ; t#u8 rts_sc : 1 ; t#u8 rts_bw : 1 ; t#u8 rts_rate ; t#u8 use_shortgi : 1 ; t#u8 use_shortpreamble : 1 ; t#u8 use_driver_rate : 1 ; t#u8 disable_ratefallback : 1 ; t#u8 ratr_index ; t#u8 mac_id ; t#u8 hw_rate ; t#u8 last_inipkt : 1 ; t#u8 cmd_or_init : 1 ; t#u8 queue_index ; t#u8 empkt_num ; t#u32 empkt_len [ 10 ] ; t#bool btx_enable_sw_calc_duration ; } 
rtl_get_tcb_desc void rtl_get_tcb_desc ( s#ieee80211_hw * , s#ieee80211_tx_info * , s#ieee80211_sta * , s#sk_buff * , s#rtl_tcb_desc * ) 
rtl_action_proc t#bool rtl_action_proc ( s#ieee80211_hw * , s#sk_buff * , t#u8 ) 
rtl_is_special_data t#u8 rtl_is_special_data ( s#ieee80211_hw * , s#sk_buff * , t#u8 ) 
rtl_beacon_statistic void rtl_beacon_statistic ( s#ieee80211_hw * , s#sk_buff * ) 
rtl_send_smps_action int rtl_send_smps_action ( s#ieee80211_hw * , s#ieee80211_sta * , e#ieee80211_smps_mode ) 
rtl_recognize_peer void rtl_recognize_peer ( s#ieee80211_hw * , t#u8 * , unsigned int ) 
rtl_attribute_group extern s#attribute_group rtl_attribute_group 
s#rtl_global_var struct rtl_global_var { s#list_head glb_priv_list ; t#spinlock_t glb_list_lock ; } 
rtl_global_var extern s#rtl_global_var rtl_global_var 

/* drivers/net/wireless/rtlwifi/cam.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
rtl_cam_add_one_entry extern t#u8 rtl_cam_add_one_entry ( s#ieee80211_hw * , t#u8 * , t#u32 , t#u32 , t#u32 , t#u32 , t#u8 * ) 
rtl_cam_delete_one_entry int rtl_cam_delete_one_entry ( s#ieee80211_hw * , t#u8 * , t#u32 ) 
rtl_cam_reset_all_entry extern void rtl_cam_reset_all_entry ( s#ieee80211_hw * ) 
rtl_cam_mark_invalid void rtl_cam_mark_invalid ( s#ieee80211_hw * , t#u8 ) 
rtl_cam_empty_entry void rtl_cam_empty_entry ( s#ieee80211_hw * , t#u8 ) 
rtl_cam_get_free_entry t#u8 rtl_cam_get_free_entry ( s#ieee80211_hw * , t#u8 * ) 
rtl_cam_del_entry void rtl_cam_del_entry ( s#ieee80211_hw * , t#u8 * ) 

/* drivers/net/wireless/rtlwifi/core.o */
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
rtl_fw_cb void rtl_fw_cb ( const s#firmware * , void * ) 
rtl_ops extern const s#ieee80211_ops rtl_ops 

/* drivers/net/wireless/rtlwifi/debug.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
rtl_dbgp_flag_init void rtl_dbgp_flag_init ( s#ieee80211_hw * ) 

/* drivers/net/wireless/rtlwifi/efuse.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
efuse_read_1byte extern t#u8 efuse_read_1byte ( s#ieee80211_hw * , t#u16 ) 
read_efuse_byte extern void read_efuse_byte ( s#ieee80211_hw * , t#u16 , t#u8 * ) 
rtl_efuse_shadow_map_update extern void rtl_efuse_shadow_map_update ( s#ieee80211_hw * ) 

/* drivers/net/wireless/rtlwifi/pci.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
rtl_pci_probe int rtl_pci_probe ( s#pci_dev * , const s#pci_device_id * ) 
rtl_pci_disconnect void rtl_pci_disconnect ( s#pci_dev * ) 
rtl_pci_suspend int rtl_pci_suspend ( s#device * ) 
rtl_pci_resume int rtl_pci_resume ( s#device * ) 

/* drivers/net/wireless/rtlwifi/ps.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
rtl_ps_enable_nic t#bool rtl_ps_enable_nic ( s#ieee80211_hw * ) 
rtl_ps_disable_nic t#bool rtl_ps_disable_nic ( s#ieee80211_hw * ) 
e#rf_pwrstate enum rf_pwrstate { ERFON , ERFSLEEP , ERFOFF } 
rtl_ps_set_rf_state t#bool rtl_ps_set_rf_state ( s#ieee80211_hw * , e#rf_pwrstate , t#u32 ) 
rtl_ips_nic_on void rtl_ips_nic_on ( s#ieee80211_hw * ) 
rtl_swlps_beacon void rtl_swlps_beacon ( s#ieee80211_hw * , void * , unsigned int ) 
rtl_lps_change_work_callback void rtl_lps_change_work_callback ( s#work_struct * ) 
rtl_p2p_info void rtl_p2p_info ( s#ieee80211_hw * , void * , unsigned int ) 

/* drivers/net/wireless/rtlwifi/rtl8192c/dm_common.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
dm_restorepowerindex void dm_restorepowerindex ( s#ieee80211_hw * ) 
dm_writepowerindex void dm_writepowerindex ( s#ieee80211_hw * , t#u8 ) 
dm_savepowerindex void dm_savepowerindex ( s#ieee80211_hw * ) 
rtl92c_dm_write_dig void rtl92c_dm_write_dig ( s#ieee80211_hw * ) 
rtl92c_dm_init_edca_turbo void rtl92c_dm_init_edca_turbo ( s#ieee80211_hw * ) 
rtl92c_dm_check_txpower_tracking void rtl92c_dm_check_txpower_tracking ( s#ieee80211_hw * ) 
rtl92c_dm_init_rate_adaptive_mask void rtl92c_dm_init_rate_adaptive_mask ( s#ieee80211_hw * ) 
rtl92c_dm_rf_saving void rtl92c_dm_rf_saving ( s#ieee80211_hw * , t#u8 ) 
rtl92c_dm_init void rtl92c_dm_init ( s#ieee80211_hw * ) 
rtl92c_dm_watchdog void rtl92c_dm_watchdog ( s#ieee80211_hw * ) 
rtl92c_bt_rssi_state_change t#u8 rtl92c_bt_rssi_state_change ( s#ieee80211_hw * ) 
rtl92c_dm_bt_coexist void rtl92c_dm_bt_coexist ( s#ieee80211_hw * ) 

/* drivers/net/wireless/rtlwifi/rtl8192c/fw_common.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
rtl92c_download_fw int rtl92c_download_fw ( s#ieee80211_hw * ) 
rtl92c_fill_h2c_cmd void rtl92c_fill_h2c_cmd ( s#ieee80211_hw * , t#u8 , t#u32 , t#u8 * ) 
rtl92c_firmware_selfreset void rtl92c_firmware_selfreset ( s#ieee80211_hw * ) 
rtl92c_set_fw_pwrmode_cmd void rtl92c_set_fw_pwrmode_cmd ( s#ieee80211_hw * , t#u8 ) 
rtl92c_set_fw_rsvdpagepkt void rtl92c_set_fw_rsvdpagepkt ( s#ieee80211_hw * , t#bool ) 
rtl92c_set_fw_joinbss_report_cmd void rtl92c_set_fw_joinbss_report_cmd ( s#ieee80211_hw * , t#u8 ) 
rtl92c_set_p2p_ps_offload_cmd void rtl92c_set_p2p_ps_offload_cmd ( s#ieee80211_hw * , t#u8 ) 

/* drivers/net/wireless/rtlwifi/rtl8192c/phy_common.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
rtl92c_phy_query_bb_reg t#u32 rtl92c_phy_query_bb_reg ( s#ieee80211_hw * , t#u32 , t#u32 ) 
rtl92c_phy_set_bb_reg void rtl92c_phy_set_bb_reg ( s#ieee80211_hw * , t#u32 , t#u32 , t#u32 ) 
e#radio_path enum radio_path { RF90_PATH_A = 0 , RF90_PATH_B = 1 , RF90_PATH_C = 2 , RF90_PATH_D = 3 , } 
_rtl92c_phy_fw_rf_serial_read t#u32 _rtl92c_phy_fw_rf_serial_read ( s#ieee80211_hw * , e#radio_path , t#u32 ) 
_rtl92c_phy_fw_rf_serial_write void _rtl92c_phy_fw_rf_serial_write ( s#ieee80211_hw * , e#radio_path , t#u32 , t#u32 ) 
_rtl92c_phy_rf_serial_read t#u32 _rtl92c_phy_rf_serial_read ( s#ieee80211_hw * , e#radio_path , t#u32 ) 
_rtl92c_phy_rf_serial_write void _rtl92c_phy_rf_serial_write ( s#ieee80211_hw * , e#radio_path , t#u32 , t#u32 ) 
_rtl92c_phy_calculate_bit_shift t#u32 _rtl92c_phy_calculate_bit_shift ( t#u32 ) 
rtl92c_phy_rf_config t#bool rtl92c_phy_rf_config ( s#ieee80211_hw * ) 
_rtl92c_phy_bb8192c_config_parafile t#bool _rtl92c_phy_bb8192c_config_parafile ( s#ieee80211_hw * ) 
_rtl92c_store_pwrIndex_diffrate_offset void _rtl92c_store_pwrIndex_diffrate_offset ( s#ieee80211_hw * , t#u32 , t#u32 , t#u32 ) 
_rtl92c_phy_init_bb_rf_register_definition void _rtl92c_phy_init_bb_rf_register_definition ( s#ieee80211_hw * ) 
rtl92c_phy_set_txpower_level void rtl92c_phy_set_txpower_level ( s#ieee80211_hw * , t#u8 ) 
rtl92c_phy_update_txpower_dbm t#bool rtl92c_phy_update_txpower_dbm ( s#ieee80211_hw * , long ) 
e#wireless_mode enum wireless_mode { WIRELESS_MODE_UNKNOWN = 0x00 , WIRELESS_MODE_A = 0x01 , WIRELESS_MODE_B = 0x02 , WIRELESS_MODE_G = 0x04 , WIRELESS_MODE_AUTO = 0x08 , WIRELESS_MODE_N_24G = 0x10 , WIRELESS_MODE_N_5G = 0x20 } 
_rtl92c_phy_dbm_to_txpwr_Idx t#u8 _rtl92c_phy_dbm_to_txpwr_Idx ( s#ieee80211_hw * , e#wireless_mode , long ) 
_rtl92c_phy_txpwr_idx_to_dbm long _rtl92c_phy_txpwr_idx_to_dbm ( s#ieee80211_hw * , e#wireless_mode , t#u8 ) 
rtl92c_phy_scan_operation_backup void rtl92c_phy_scan_operation_backup ( s#ieee80211_hw * , t#u8 ) 
rtl92c_phy_set_bw_mode void rtl92c_phy_set_bw_mode ( s#ieee80211_hw * , e#nl80211_channel_type ) 
rtl92c_phy_sw_chnl_callback void rtl92c_phy_sw_chnl_callback ( s#ieee80211_hw * ) 
rtl92c_phy_sw_chnl t#u8 rtl92c_phy_sw_chnl ( s#ieee80211_hw * ) 
rtl8192_phy_check_is_legal_rfpath t#bool rtl8192_phy_check_is_legal_rfpath ( s#ieee80211_hw * , t#u32 ) 
rtl92c_phy_iq_calibrate void rtl92c_phy_iq_calibrate ( s#ieee80211_hw * , t#bool ) 
rtl92c_phy_lc_calibrate void rtl92c_phy_lc_calibrate ( s#ieee80211_hw * ) 
rtl92c_phy_ap_calibrate void rtl92c_phy_ap_calibrate ( s#ieee80211_hw * , char ) 
rtl92c_phy_set_rfpath_switch void rtl92c_phy_set_rfpath_switch ( s#ieee80211_hw * , t#bool ) 
e#io_type enum io_type { IO_CMD_PAUSE_DM_BY_SCAN = 0 , IO_CMD_RESUME_DM_BY_SCAN = 1 , } 
rtl92c_phy_set_io_cmd t#bool rtl92c_phy_set_io_cmd ( s#ieee80211_hw * , e#io_type ) 
rtl92c_phy_set_io void rtl92c_phy_set_io ( s#ieee80211_hw * ) 
rtl92ce_phy_set_rf_on void rtl92ce_phy_set_rf_on ( s#ieee80211_hw * ) 
_rtl92c_phy_set_rf_sleep void _rtl92c_phy_set_rf_sleep ( s#ieee80211_hw * ) 

/* drivers/net/wireless/rtlwifi/stats.o */
rtl_query_rxpwrpercentage t#u8 rtl_query_rxpwrpercentage ( char ) 
rtl_evm_db_to_percentage t#u8 rtl_evm_db_to_percentage ( char ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
rtl_signal_scale_mapping long rtl_signal_scale_mapping ( s#ieee80211_hw * , long ) 
s#rtl_stats struct rtl_stats { t#u8 psaddr [ 6 ] ; t#u32 mac_time [ 2 ] ; t#s8 rssi ; t#u8 signal ; t#u8 noise ; t#u8 rate ; t#u8 received_channel ; t#u8 control ; t#u8 mask ; t#u8 freq ; t#u16 len ; t#u64 tsf ; t#u32 beacon_time ; t#u8 nic_type ; t#u16 length ; t#u8 signalquality ; t#s32 recvsignalpower ; t#s8 rxpower ; t#u8 signalstrength ; t#u16 hwerror : 1 ; t#u16 crc : 1 ; t#u16 icv : 1 ; t#u16 shortpreamble : 1 ; t#u16 antenna : 1 ; t#u16 decrypted : 1 ; t#u16 wakeup : 1 ; t#u32 timestamp_low ; t#u32 timestamp_high ; t#u8 rx_drvinfo_size ; t#u8 rx_bufshift ; t#bool isampdu ; t#bool isfirst_ampdu ; t#bool rx_is40Mhzpacket ; t#u32 rx_pwdb_all ; t#u8 rx_mimo_signalstrength [ 4 ] ; t#s8 rx_mimo_sig_qual [ 2 ] ; t#bool packet_matchbssid ; t#bool is_cck ; t#bool is_ht ; t#bool packet_toself ; t#bool packet_beacon ; char cck_adc_pwdb [ 4 ] ; t#u8 packet_report_type ; t#u32 macid ; t#u8 wake_match ; t#u32 bt_rx_rssi_percentage ; t#u32 macid_valid_entry [ 2 ] ; } 
rtl_process_phyinfo void rtl_process_phyinfo ( s#ieee80211_hw * , t#u8 * , s#rtl_stats * ) 

/* drivers/net/wireless/rtlwifi/usb.o */
s##ep_device
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##poll_table_struct
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
e#led_ctl_mode enum led_ctl_mode { LED_CTL_POWER_ON = 1 , LED_CTL_LINK = 2 , LED_CTL_NO_LINK = 3 , LED_CTL_TX = 4 , LED_CTL_RX = 5 , LED_CTL_SITE_SURVEY = 6 , LED_CTL_POWER_OFF = 7 , LED_CTL_START_TO_LINK = 8 , LED_CTL_START_WPS = 9 , LED_CTL_STOP_WPS = 10 , } 
s#rtl_hal_ops struct rtl_hal_ops { int ( * init_sw_vars ) ( s#ieee80211_hw * ) ; void ( * deinit_sw_vars ) ( s#ieee80211_hw * ) ; void ( * read_chip_version ) ( s#ieee80211_hw * ) ; void ( * read_eeprom_info ) ( s#ieee80211_hw * ) ; void ( * interrupt_recognized ) ( s#ieee80211_hw * , t#u32 * , t#u32 * ) ; int ( * hw_init ) ( s#ieee80211_hw * ) ; void ( * hw_disable ) ( s#ieee80211_hw * ) ; void ( * hw_suspend ) ( s#ieee80211_hw * ) ; void ( * hw_resume ) ( s#ieee80211_hw * ) ; void ( * enable_interrupt ) ( s#ieee80211_hw * ) ; void ( * disable_interrupt ) ( s#ieee80211_hw * ) ; int ( * set_network_type ) ( s#ieee80211_hw * , e#nl80211_iftype ) ; void ( * set_chk_bssid ) ( s#ieee80211_hw * , t#bool ) ; void ( * set_bw_mode ) ( s#ieee80211_hw * , e#nl80211_channel_type ) ; t#u8 ( * switch_channel ) ( s#ieee80211_hw * ) ; void ( * set_qos ) ( s#ieee80211_hw * , int ) ; void ( * set_bcn_reg ) ( s#ieee80211_hw * ) ; void ( * set_bcn_intv ) ( s#ieee80211_hw * ) ; void ( * update_interrupt_mask ) ( s#ieee80211_hw * , t#u32 , t#u32 ) ; void ( * get_hw_reg ) ( s#ieee80211_hw * , t#u8 , t#u8 * ) ; void ( * set_hw_reg ) ( s#ieee80211_hw * , t#u8 , t#u8 * ) ; void ( * update_rate_tbl ) ( s#ieee80211_hw * , s#ieee80211_sta * , t#u8 ) ; void ( * update_rate_mask ) ( s#ieee80211_hw * , t#u8 ) ; void ( * fill_tx_desc ) ( s#ieee80211_hw * , s#ieee80211_hdr * , t#u8 * , s#ieee80211_tx_info * , s#ieee80211_sta * , s#sk_buff * , t#u8 , s#rtl_tcb_desc * ) ; void ( * fill_fake_txdesc ) ( s#ieee80211_hw * , t#u8 * , t#u32 , t#bool ) ; void ( * fill_tx_cmddesc ) ( s#ieee80211_hw * , t#u8 * , t#bool , t#bool , s#sk_buff * ) ; t#bool ( * cmd_send_packet ) ( s#ieee80211_hw * , s#sk_buff * ) ; t#bool ( * query_rx_desc ) ( s#ieee80211_hw * , s#rtl_stats * , s#ieee80211_rx_status * , t#u8 * , s#sk_buff * ) ; void ( * set_channel_access ) ( s#ieee80211_hw * ) ; t#bool ( * radio_onoff_checking ) ( s#ieee80211_hw * , t#u8 * ) ; void ( * dm_watchdog ) ( s#ieee80211_hw * ) ; void ( * scan_operation_backup ) ( s#ieee80211_hw * , t#u8 ) ; t#bool ( * set_rf_power_state ) ( s#ieee80211_hw * , e#rf_pwrstate ) ; void ( * led_control ) ( s#ieee80211_hw * , e#led_ctl_mode ) ; void ( * set_desc ) ( t#u8 * , t#bool , t#u8 , t#u8 * ) ; t#u32 ( * get_desc ) ( t#u8 * , t#bool , t#u8 ) ; void ( * tx_polling ) ( s#ieee80211_hw * , t#u8 ) ; void ( * enable_hw_sec ) ( s#ieee80211_hw * ) ; void ( * set_key ) ( s#ieee80211_hw * , t#u32 , t#u8 * , t#bool , t#u8 , t#bool , t#bool ) ; void ( * init_sw_leds ) ( s#ieee80211_hw * ) ; void ( * deinit_sw_leds ) ( s#ieee80211_hw * ) ; t#u32 ( * get_bbreg ) ( s#ieee80211_hw * , t#u32 , t#u32 ) ; void ( * set_bbreg ) ( s#ieee80211_hw * , t#u32 , t#u32 , t#u32 ) ; t#u32 ( * get_rfreg ) ( s#ieee80211_hw * , e#radio_path , t#u32 , t#u32 ) ; void ( * set_rfreg ) ( s#ieee80211_hw * , e#radio_path , t#u32 , t#u32 , t#u32 ) ; void ( * allow_all_destaddr ) ( s#ieee80211_hw * , t#bool , t#bool ) ; void ( * linked_set_reg ) ( s#ieee80211_hw * ) ; void ( * chk_switch_dmdp ) ( s#ieee80211_hw * ) ; void ( * dualmac_easy_concurrent ) ( s#ieee80211_hw * ) ; void ( * dualmac_switch_to_dmdp ) ( s#ieee80211_hw * ) ; t#bool ( * phy_rf6052_config ) ( s#ieee80211_hw * ) ; void ( * phy_rf6052_set_cck_txpower ) ( s#ieee80211_hw * , t#u8 * ) ; void ( * phy_rf6052_set_ofdm_txpower ) ( s#ieee80211_hw * , t#u8 * , t#u8 ) ; t#bool ( * config_bb_with_headerfile ) ( s#ieee80211_hw * , t#u8 ) ; t#bool ( * config_bb_with_pgheaderfile ) ( s#ieee80211_hw * , t#u8 ) ; void ( * phy_lc_calibrate ) ( s#ieee80211_hw * , t#bool ) ; void ( * phy_set_bw_mode_callback ) ( s#ieee80211_hw * ) ; void ( * dm_dynamic_txpower ) ( s#ieee80211_hw * ) ; void ( * c2h_command_handle ) ( s#ieee80211_hw * ) ; void ( * bt_wifi_media_status_notify ) ( s#ieee80211_hw * , t#bool ) ; void ( * bt_coex_off_before_lps ) ( s#ieee80211_hw * ) ; void ( * fill_h2c_cmd ) ( s#ieee80211_hw * , t#u8 , t#u32 , t#u8 * ) ; } 
s#rtl_mod_params struct rtl_mod_params { t#bool sw_crypto ; int debug ; t#bool inactiveps ; t#bool swctrl_lps ; t#bool fwctrl_lps ; } 
s##usb_tt
s##mon_bus
s##wusb_dev
s#rtl_hal_usbint_cfg struct rtl_hal_usbint_cfg { t#u32 in_ep_num ; t#u32 rx_urb_num ; t#u32 rx_max_size ; void ( * usb_rx_hdl ) ( s#ieee80211_hw * , s#sk_buff * ) ; void ( * usb_rx_segregate_hdl ) ( s#ieee80211_hw * , s#sk_buff * , s#sk_buff_head * ) ; void ( * usb_tx_cleanup ) ( s#ieee80211_hw * , s#sk_buff * ) ; int ( * usb_tx_post_hdl ) ( s#ieee80211_hw * , s#urb * , s#sk_buff * ) ; s#sk_buff * ( * usb_tx_aggregate_hdl ) ( s#ieee80211_hw * , s#sk_buff_head * ) ; int ( * usb_endpoint_mapping ) ( s#ieee80211_hw * ) ; t#u16 ( * usb_mq_to_hwq ) ( t#__le16 , t#u16 ) ; } 
E#RTL_VAR_MAP_MAX ( 0 ) + 80 
s#rtl_hal_cfg struct rtl_hal_cfg { t#u8 bar_id ; t#bool write_readback ; char * name ; char * fw_name ; char * alt_fw_name ; s#rtl_hal_ops * ops ; s#rtl_mod_params * mod_params ; s#rtl_hal_usbint_cfg * usb_interface_cfg ; t#u32 maps [ E#RTL_VAR_MAP_MAX ] ; } 
rtl_usb_probe int rtl_usb_probe ( s#usb_interface * , const s#usb_device_id * , s#rtl_hal_cfg * ) 
rtl_usb_disconnect void rtl_usb_disconnect ( s#usb_interface * ) 
rtl_usb_suspend int rtl_usb_suspend ( s#usb_interface * , t#pm_message_t ) 
rtl_usb_resume int rtl_usb_resume ( s#usb_interface * ) 

/* drivers/net/wireless/ti/wl1251/main.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s#wl1251_if_operations struct wl1251_if_operations { void ( * read ) ( s#wl1251 * , int , void * , t#size_t ) ; void ( * write ) ( s#wl1251 * , int , void * , t#size_t ) ; void ( * read_elp ) ( s#wl1251 * , int , t#u32 * ) ; void ( * write_elp ) ( s#wl1251 * , int , t#u32 ) ; int ( * power ) ( s#wl1251 * , t#bool ) ; void ( * reset ) ( s#wl1251 * ) ; void ( * enable_irq ) ( s#wl1251 * ) ; void ( * disable_irq ) ( s#wl1251 * ) ; } 
e#wl1251_state enum wl1251_state { WL1251_STATE_OFF , WL1251_STATE_ON , WL1251_STATE_PLT , } 
s#boot_attr struct boot_attr { t#u32 radio_type ; t#u8 mac_clock ; t#u8 arm_clock ; int firmware_debug ; t#u32 minor ; t#u32 major ; t#u32 bugfix ; } 
s#wl1251_cmd_header struct wl1251_cmd_header { t#u16 id ; t#u16 status ; t#u8 data [ 0 ] ; } 
s#acx_header struct acx_header { s#wl1251_cmd_header cmd ; t#u16 id ; t#u16 len ; } 
s#acx_data_path_params_resp struct acx_data_path_params_resp { s#acx_header header ; t#u16 rx_packet_ring_chunk_size ; t#u16 tx_packet_ring_chunk_size ; t#u8 rx_packet_ring_chunk_num ; t#u8 tx_packet_ring_chunk_num ; t#u8 pad [ 2 ] ; t#u32 rx_packet_ring_addr ; t#u32 tx_packet_ring_addr ; t#u32 rx_control_addr ; t#u32 tx_control_addr ; t#u32 tx_complete_addr ; } 
e#wl1251_station_mode enum wl1251_station_mode { STATION_ACTIVE_MODE , STATION_POWER_SAVE_MODE , STATION_IDLE , } 
s#acx_tx_statistics struct acx_tx_statistics { t#u32 internal_desc_overflow ; } 
s#acx_rx_statistics struct acx_rx_statistics { t#u32 out_of_mem ; t#u32 hdr_overflow ; t#u32 hw_stuck ; t#u32 dropped ; t#u32 fcs_err ; t#u32 xfr_hint_trig ; t#u32 path_reset ; t#u32 reset_counter ; } 
s#acx_dma_statistics struct acx_dma_statistics { t#u32 rx_requested ; t#u32 rx_errors ; t#u32 tx_requested ; t#u32 tx_errors ; } 
s#acx_isr_statistics struct acx_isr_statistics { t#u32 cmd_cmplt ; t#u32 fiqs ; t#u32 rx_headers ; t#u32 rx_completes ; t#u32 rx_mem_overflow ; t#u32 rx_rdys ; t#u32 irqs ; t#u32 tx_procs ; t#u32 decrypt_done ; t#u32 dma0_done ; t#u32 dma1_done ; t#u32 tx_exch_complete ; t#u32 commands ; t#u32 rx_procs ; t#u32 hw_pm_mode_changes ; t#u32 host_acknowledges ; t#u32 pci_pm ; t#u32 wakeups ; t#u32 low_rssi ; } 
s#acx_wep_statistics struct acx_wep_statistics { t#u32 addr_key_count ; t#u32 default_key_count ; t#u32 reserved ; t#u32 key_not_found ; t#u32 decrypt_fail ; t#u32 packets ; t#u32 interrupt ; } 
s#acx_pwr_statistics struct acx_pwr_statistics { t#u32 ps_enter ; t#u32 elp_enter ; t#u32 missing_bcns ; t#u32 wake_on_host ; t#u32 wake_on_timer_exp ; t#u32 tx_with_ps ; t#u32 tx_without_ps ; t#u32 rcvd_beacons ; t#u32 power_save_off ; t#u16 enable_ps ; t#u16 disable_ps ; t#u32 fix_tsf_ps ; t#u32 cont_miss_bcns_spread [ 10 ] ; t#u32 rcvd_awake_beacons ; } 
s#acx_aes_statistics struct acx_aes_statistics { t#u32 encrypt_fail ; t#u32 decrypt_fail ; t#u32 encrypt_packets ; t#u32 decrypt_packets ; t#u32 encrypt_interrupt ; t#u32 decrypt_interrupt ; } 
s#acx_mic_statistics struct acx_mic_statistics { t#u32 rx_pkts ; t#u32 calc_failure ; } 
s#acx_event_statistics struct acx_event_statistics { t#u32 heart_beat ; t#u32 calibration ; t#u32 rx_mismatch ; t#u32 rx_mem_empty ; t#u32 rx_pool ; t#u32 oom_late ; t#u32 phy_transmit_error ; t#u32 tx_stuck ; } 
s#acx_ps_statistics struct acx_ps_statistics { t#u32 pspoll_timeouts ; t#u32 upsd_timeouts ; t#u32 upsd_max_sptime ; t#u32 upsd_max_apturn ; t#u32 pspoll_max_apturn ; t#u32 pspoll_utilization ; t#u32 upsd_utilization ; } 
s#acx_rxpipe_statistics struct acx_rxpipe_statistics { t#u32 rx_prep_beacon_drop ; t#u32 descr_host_int_trig_rx_data ; t#u32 beacon_buffer_thres_host_int_trig_rx_data ; t#u32 missed_beacon_host_int_trig_rx_data ; t#u32 tx_xfr_host_int_trig_rx_data ; } 
s#acx_statistics struct acx_statistics { s#acx_header header ; s#acx_tx_statistics tx ; s#acx_rx_statistics rx ; s#acx_dma_statistics dma ; s#acx_isr_statistics isr ; s#acx_wep_statistics wep ; s#acx_pwr_statistics pwr ; s#acx_aes_statistics aes ; s#acx_mic_statistics mic ; s#acx_event_statistics event ; s#acx_ps_statistics ps ; s#acx_rxpipe_statistics rxpipe ; } 
s#wl1251_stats struct wl1251_stats { s#acx_statistics * fw_stats ; unsigned long fw_stats_update ; unsigned int retry_count ; unsigned int excessive_retries ; } 
s#wl1251_debugfs struct wl1251_debugfs { s#dentry * rootdir ; s#dentry * fw_statistics ; s#dentry * tx_internal_desc_overflow ; s#dentry * rx_out_of_mem ; s#dentry * rx_hdr_overflow ; s#dentry * rx_hw_stuck ; s#dentry * rx_dropped ; s#dentry * rx_fcs_err ; s#dentry * rx_xfr_hint_trig ; s#dentry * rx_path_reset ; s#dentry * rx_reset_counter ; s#dentry * dma_rx_requested ; s#dentry * dma_rx_errors ; s#dentry * dma_tx_requested ; s#dentry * dma_tx_errors ; s#dentry * isr_cmd_cmplt ; s#dentry * isr_fiqs ; s#dentry * isr_rx_headers ; s#dentry * isr_rx_mem_overflow ; s#dentry * isr_rx_rdys ; s#dentry * isr_irqs ; s#dentry * isr_tx_procs ; s#dentry * isr_decrypt_done ; s#dentry * isr_dma0_done ; s#dentry * isr_dma1_done ; s#dentry * isr_tx_exch_complete ; s#dentry * isr_commands ; s#dentry * isr_rx_procs ; s#dentry * isr_hw_pm_mode_changes ; s#dentry * isr_host_acknowledges ; s#dentry * isr_pci_pm ; s#dentry * isr_wakeups ; s#dentry * isr_low_rssi ; s#dentry * wep_addr_key_count ; s#dentry * wep_default_key_count ; s#dentry * wep_key_not_found ; s#dentry * wep_decrypt_fail ; s#dentry * wep_packets ; s#dentry * wep_interrupt ; s#dentry * pwr_ps_enter ; s#dentry * pwr_elp_enter ; s#dentry * pwr_missing_bcns ; s#dentry * pwr_wake_on_host ; s#dentry * pwr_wake_on_timer_exp ; s#dentry * pwr_tx_with_ps ; s#dentry * pwr_tx_without_ps ; s#dentry * pwr_rcvd_beacons ; s#dentry * pwr_power_save_off ; s#dentry * pwr_enable_ps ; s#dentry * pwr_disable_ps ; s#dentry * pwr_fix_tsf_ps ; s#dentry * pwr_rcvd_awake_beacons ; s#dentry * mic_rx_pkts ; s#dentry * mic_calc_failure ; s#dentry * aes_encrypt_fail ; s#dentry * aes_decrypt_fail ; s#dentry * aes_encrypt_packets ; s#dentry * aes_decrypt_packets ; s#dentry * aes_encrypt_interrupt ; s#dentry * aes_decrypt_interrupt ; s#dentry * event_heart_beat ; s#dentry * event_calibration ; s#dentry * event_rx_mismatch ; s#dentry * event_rx_mem_empty ; s#dentry * event_rx_pool ; s#dentry * event_oom_late ; s#dentry * event_phy_transmit_error ; s#dentry * event_tx_stuck ; s#dentry * ps_pspoll_timeouts ; s#dentry * ps_upsd_timeouts ; s#dentry * ps_upsd_max_sptime ; s#dentry * ps_upsd_max_apturn ; s#dentry * ps_pspoll_max_apturn ; s#dentry * ps_pspoll_utilization ; s#dentry * ps_upsd_utilization ; s#dentry * rxpipe_rx_prep_beacon_drop ; s#dentry * rxpipe_descr_host_int_trig_rx_data ; s#dentry * rxpipe_beacon_buffer_thres_host_int_trig_rx_data ; s#dentry * rxpipe_missed_beacon_host_int_trig_rx_data ; s#dentry * rxpipe_tx_xfr_host_int_trig_rx_data ; s#dentry * tx_queue_len ; s#dentry * tx_queue_status ; s#dentry * retry_count ; s#dentry * excessive_retries ; } 
s#wl1251_rx_descriptor struct wl1251_rx_descriptor { t#u32 timestamp ; t#u16 length ; t#u16 flags ; t#u8 type ; t#u8 rate ; t#u8 mod_pre ; t#u8 channel ; t#u8 band ; t#s8 rssi ; t#u8 rcpi ; t#u8 snr ; } 
s#wl1251 struct wl1251 { s#ieee80211_hw * hw ; t#bool mac80211_registered ; void * if_priv ; const s#wl1251_if_operations * if_ops ; void ( * set_power ) ( t#bool ) ; int irq ; t#bool use_eeprom ; t#spinlock_t wl_lock ; e#wl1251_state state ; s#mutex mutex ; int physical_mem_addr ; int physical_reg_addr ; int virtual_mem_addr ; int virtual_reg_addr ; int cmd_box_addr ; int event_box_addr ; s#boot_attr boot_attr ; t#u8 * fw ; t#size_t fw_len ; t#u8 * nvs ; t#size_t nvs_len ; t#u8 bssid [ 6 ] ; t#u8 mac_addr [ 6 ] ; t#u8 bss_type ; t#u8 listen_int ; int channel ; void * target_mem_map ; s#acx_data_path_params_resp * data_path ; t#u32 data_in_count ; s#sk_buff_head tx_queue ; t#bool tx_queue_stopped ; s#work_struct tx_work ; s#sk_buff * tx_frames [ 16 ] ; t#u32 next_tx_complete ; t#u32 rx_counter ; t#u32 rx_handled ; t#u32 rx_current_buffer ; t#u32 rx_last_id ; t#u32 intr_mask ; s#work_struct irq_work ; t#u32 event_mask ; t#u32 mbox_ptr [ 2 ] ; t#bool scanning ; t#u32 default_key ; unsigned int tx_mgmt_frm_rate ; unsigned int tx_mgmt_frm_mod ; unsigned int rx_config ; unsigned int rx_filter ; t#bool elp ; s#delayed_work elp_work ; e#wl1251_station_mode station_mode ; t#bool psm_requested ; t#u16 beacon_int ; t#u8 dtim_period ; int power_level ; int rssi_thold ; s#wl1251_stats stats ; s#wl1251_debugfs debugfs ; t#__le32 buffer_32 ; t#u32 buffer_cmd ; t#u8 buffer_busyword [ 8 ] ; s#wl1251_rx_descriptor * rx_descriptor ; s#ieee80211_vif * vif ; t#u32 chip_id ; char fw_ver [ 21 ] ; t#s8 noise ; } 
wl1251_init_ieee80211 int wl1251_init_ieee80211 ( s#wl1251 * ) 
wl1251_alloc_hw s#ieee80211_hw * wl1251_alloc_hw ( void ) 
wl1251_free_hw int wl1251_free_hw ( s#wl1251 * ) 

/* drivers/net/wireless/ti/wlcore/acx.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##mfd_cell
s#wl1271_if_operations struct wl1271_if_operations { int ( * read ) ( s#device * , int , void * , t#size_t , t#bool ) ; int ( * write ) ( s#device * , int , void * , t#size_t , t#bool ) ; void ( * reset ) ( s#device * ) ; void ( * init ) ( s#device * ) ; int ( * power ) ( s#device * , t#bool ) ; void ( * set_block_size ) ( s#device * , unsigned int ) ; } 
e#wlcore_state enum wlcore_state { WLCORE_STATE_OFF , WLCORE_STATE_RESTARTING , WLCORE_STATE_ON , } 
e#wl12xx_fw_type enum wl12xx_fw_type { WL12XX_FW_TYPE_NONE , WL12XX_FW_TYPE_NORMAL , WL12XX_FW_TYPE_MULTI , WL12XX_FW_TYPE_PLT , } 
e#plt_mode enum plt_mode { PLT_OFF = 0 , PLT_ON = 1 , PLT_FEM_DETECT = 2 , } 
s#wlcore_partition struct wlcore_partition { t#u32 size ; t#u32 start ; } 
s#wlcore_partition_set struct wlcore_partition_set { s#wlcore_partition mem ; s#wlcore_partition reg ; s#wlcore_partition mem2 ; s#wlcore_partition mem3 ; } 
E#NUM_FW_VER 5 
s#wl1271_chip struct wl1271_chip { t#u32 id ; char fw_ver_str [ 32 ] ; unsigned int fw_ver [ E#NUM_FW_VER ] ; char phy_fw_ver_str [ 32 ] ; } 
s#wl1271_cmd_header struct wl1271_cmd_header { t#__le16 id ; t#__le16 status ; t#u8 data [ 0 ] ; } 
s#acx_header struct acx_header { s#wl1271_cmd_header cmd ; t#__le16 id ; t#__le16 len ; } 
s#wl1271_acx_mem_map struct wl1271_acx_mem_map { s#acx_header header ; t#__le32 code_start ; t#__le32 code_end ; t#__le32 wep_defkey_start ; t#__le32 wep_defkey_end ; t#__le32 sta_table_start ; t#__le32 sta_table_end ; t#__le32 packet_template_start ; t#__le32 packet_template_end ; t#__le32 tx_result ; t#__le32 tx_result_queue_start ; t#__le32 queue_memory_start ; t#__le32 queue_memory_end ; t#__le32 packet_memory_pool_start ; t#__le32 packet_memory_pool_end ; t#__le32 debug_buffer1_start ; t#__le32 debug_buffer1_end ; t#__le32 debug_buffer2_start ; t#__le32 debug_buffer2_end ; t#__le32 num_tx_mem_blocks ; t#__le32 num_rx_mem_blocks ; t#u8 * tx_cbuf ; t#u8 * rx_cbuf ; t#__le32 rx_ctrl ; t#__le32 tx_ctrl ; } 
s#wl1271_ap_key struct wl1271_ap_key { t#u8 id ; t#u8 key_type ; t#u8 key_size ; t#u8 key [ 32 ] ; t#u8 hlid ; t#u32 tx_seq_32 ; t#u16 tx_seq_16 ; } 
s#wl12xx_vif struct wl12xx_vif { s#wl1271 * wl ; s#list_head list ; unsigned long flags ; t#u8 bss_type ; t#u8 p2p ; t#u8 role_id ; t#u8 dev_role_id ; t#u8 dev_hlid ; union { struct { t#u8 hlid ; t#u8 basic_rate_idx ; t#u8 ap_rate_idx ; t#u8 p2p_rate_idx ; t#u8 klv_template_id ; t#bool qos ; e#nl80211_channel_type role_chan_type ; } sta ; struct { t#u8 global_hlid ; t#u8 bcast_hlid ; unsigned long sta_hlid_map [ ( ( ( 12 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#wl1271_ap_key * recorded_keys [ 14 ] ; t#u8 mgmt_rate_idx ; t#u8 bcast_rate_idx ; t#u8 ucast_rate_idx [ 4 ] ; } ap ; } ; int last_tx_hlid ; int tx_queue_count [ 4 ] ; unsigned long links_map [ ( ( ( 12 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; t#u8 ssid [ 32 + 1 ] ; t#u8 ssid_len ; e#ieee80211_band band ; int channel ; e#nl80211_channel_type channel_type ; t#u32 bitrate_masks [ 2 ] ; t#u32 basic_rate_set ; t#u32 basic_rate ; t#u32 rate_set ; s#sk_buff * probereq ; t#u32 beacon_int ; t#u32 default_key ; t#u16 aid ; t#u8 psm_entry_retry ; int power_level ; int rssi_thold ; int last_rssi_event ; t#u8 encryption_type ; t#__be32 ip_addr ; t#bool ba_support ; t#bool ba_allowed ; t#bool wmm_enabled ; s#work_struct rx_streaming_enable_work ; s#work_struct rx_streaming_disable_work ; s#timer_list rx_streaming_timer ; s#delayed_work channel_switch_work ; s#delayed_work connection_loss_work ; int inconn_count ; int hw_queue_base ; struct { t#u8 persistent [ 0 ] ; t#u64 total_freed_pkts ; } ; } 
s#wl1271_scan struct wl1271_scan { s#cfg80211_scan_request * req ; unsigned long scanned_ch [ ( ( ( 64 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; t#bool failed ; t#u8 state ; t#u8 ssid [ 32 + 1 ] ; t#size_t ssid_len ; } 
s#wl1271_stats struct wl1271_stats { void * fw_stats ; unsigned long fw_stats_update ; t#size_t fw_stats_len ; unsigned int retry_count ; unsigned int excessive_retries ; } 
s#wl_fw_status_1 struct wl_fw_status_1 { t#__le32 intr ; t#u8 fw_rx_counter ; t#u8 drv_rx_counter ; t#u8 reserved ; t#u8 tx_results_counter ; t#__le32 rx_pkt_descs [ 0 ] ; } 
s#wl_fw_packet_counters struct wl_fw_packet_counters { t#u8 tx_released_pkts [ 4 ] ; t#u8 tx_lnk_free_pkts [ 12 ] ; t#u8 tx_voice_released_blks ; t#u8 tx_last_rate ; t#u8 padding [ 2 ] ; } 
s#wl_fw_status_2 struct wl_fw_status_2 { t#__le32 fw_localtime ; t#__le32 link_ps_bitmap ; t#__le32 link_fast_bitmap ; t#__le32 total_released_blks ; t#__le32 tx_total ; s#wl_fw_packet_counters counters ; t#__le32 log_start_addr ; t#u8 priv [ 0 ] ; } 
s##wl1271_tx_hw_res_if
E#CONF_SG_PARAMS_MAX ( 0 ) + 67 
s#conf_sg_settings struct conf_sg_settings { t#u32 params [ E#CONF_SG_PARAMS_MAX ] ; t#u8 state ; } 
s#conf_rx_settings struct conf_rx_settings { t#u32 rx_msdu_life_time ; t#u32 packet_detection_threshold ; t#u16 ps_poll_timeout ; t#u16 upsd_timeout ; t#u16 rts_threshold ; t#u16 rx_cca_threshold ; t#u16 irq_blk_threshold ; t#u16 irq_pkt_threshold ; t#u16 irq_timeout ; t#u8 queue_type ; } 
s#conf_tx_rate_class struct conf_tx_rate_class { t#u32 enabled_rates ; t#u8 short_retry_limit ; t#u8 long_retry_limit ; t#u8 aflags ; } 
s#conf_tx_ac_category struct conf_tx_ac_category { t#u8 ac ; t#u8 cw_min ; t#u16 cw_max ; t#u8 aifsn ; t#u16 tx_op_limit ; } 
s#conf_tx_tid struct conf_tx_tid { t#u8 queue_id ; t#u8 channel_type ; t#u8 tsid ; t#u8 ps_scheme ; t#u8 ack_policy ; t#u32 apsd_conf [ 2 ] ; } 
s#conf_tx_settings struct conf_tx_settings { t#u8 tx_energy_detection ; s#conf_tx_rate_class sta_rc_conf ; t#u8 ac_conf_count ; s#conf_tx_ac_category ac_conf [ 4 ] ; t#u8 max_tx_retries ; t#u16 ap_aging_period ; t#u8 tid_conf_count ; s#conf_tx_tid tid_conf [ 8 ] ; t#u16 frag_threshold ; t#u16 tx_compl_timeout ; t#u16 tx_compl_threshold ; t#u32 basic_rate ; t#u32 basic_rate_5 ; t#u8 tmpl_short_retry_limit ; t#u8 tmpl_long_retry_limit ; t#u32 tx_watchdog_timeout ; t#u8 slow_link_thold ; t#u8 fast_link_thold ; } 
s#conf_bcn_filt_rule struct conf_bcn_filt_rule { t#u8 ie ; t#u8 rule ; t#u8 oui [ 3 ] ; t#u8 type ; t#u8 version [ 2 ] ; } 
s#conf_sig_weights struct conf_sig_weights { t#u8 rssi_bcn_avg_weight ; t#u8 rssi_pkt_avg_weight ; t#u8 snr_bcn_avg_weight ; t#u8 snr_pkt_avg_weight ; } 
s#conf_conn_settings struct conf_conn_settings { t#u8 wake_up_event ; t#u8 listen_interval ; t#u8 suspend_wake_up_event ; t#u8 suspend_listen_interval ; t#u8 bcn_filt_mode ; t#u8 bcn_filt_ie_count ; s#conf_bcn_filt_rule bcn_filt_ie [ 32 ] ; t#u32 synch_fail_thold ; t#u32 bss_lose_timeout ; t#u32 beacon_rx_timeout ; t#u32 broadcast_timeout ; t#u8 rx_broadcast_in_ps ; t#u8 ps_poll_threshold ; s#conf_sig_weights sig_weights ; t#u8 bet_enable ; t#u8 bet_max_consecutive ; t#u8 psm_entry_retries ; t#u8 psm_exit_retries ; t#u8 psm_entry_nullfunc_retries ; t#u16 dynamic_ps_timeout ; t#u8 forced_ps ; t#u32 keep_alive_interval ; t#u8 max_listen_interval ; t#u8 sta_sleep_auth ; } 
s#conf_itrim_settings struct conf_itrim_settings { t#u8 enable ; t#u32 timeout ; } 
s#conf_pm_config_settings struct conf_pm_config_settings { t#u32 host_clk_settling_time ; t#u8 host_fast_wakeup_support ; } 
s#conf_roam_trigger_settings struct conf_roam_trigger_settings { t#u16 trigger_pacing ; t#u8 avg_weight_rssi_beacon ; t#u8 avg_weight_rssi_data ; t#u8 avg_weight_snr_beacon ; t#u8 avg_weight_snr_data ; } 
s#conf_scan_settings struct conf_scan_settings { t#u32 min_dwell_time_active ; t#u32 max_dwell_time_active ; t#u32 min_dwell_time_active_long ; t#u32 max_dwell_time_active_long ; t#u32 dwell_time_passive ; t#u32 dwell_time_dfs ; t#u16 num_probe_reqs ; t#u32 split_scan_timeout ; } 
s#conf_sched_scan_settings struct conf_sched_scan_settings { t#u32 base_dwell_time ; t#u32 max_dwell_time_delta ; t#u32 dwell_time_delta_per_probe ; t#u32 dwell_time_delta_per_probe_5 ; t#u32 dwell_time_passive ; t#u32 dwell_time_dfs ; t#u8 num_probe_reqs ; t#s8 rssi_threshold ; t#s8 snr_threshold ; } 
s#conf_ht_setting struct conf_ht_setting { t#u8 rx_ba_win_size ; t#u8 tx_ba_win_size ; t#u16 inactivity_timeout ; t#u8 tx_ba_tid_bitmap ; } 
s#conf_memory_settings struct conf_memory_settings { t#u8 num_stations ; t#u8 ssid_profiles ; t#u8 rx_block_num ; t#u8 tx_min_block_num ; t#u8 dynamic_memory ; t#u8 min_req_tx_blocks ; t#u8 min_req_rx_blocks ; t#u8 tx_min ; } 
s#conf_fm_coex struct conf_fm_coex { t#u8 enable ; t#u8 swallow_period ; t#u8 n_divider_fref_set_1 ; t#u8 n_divider_fref_set_2 ; t#u16 m_divider_fref_set_1 ; t#u16 m_divider_fref_set_2 ; t#u32 coex_pll_stabilization_time ; t#u16 ldo_stabilization_time ; t#u8 fm_disturbed_band_margin ; t#u8 swallow_clk_diff ; } 
s#conf_rx_streaming_settings struct conf_rx_streaming_settings { t#u32 duration ; t#u8 queues ; t#u8 interval ; t#u8 always ; } 
s#conf_fwlog struct conf_fwlog { t#u8 mode ; t#u8 mem_blocks ; t#u8 severity ; t#u8 timestamp ; t#u8 output ; t#u8 threshold ; } 
s#conf_rate_policy_settings struct conf_rate_policy_settings { t#u16 rate_retry_score ; t#u16 per_add ; t#u16 per_th1 ; t#u16 per_th2 ; t#u16 max_per ; t#u8 inverse_curiosity_factor ; t#u8 tx_fail_low_th ; t#u8 tx_fail_high_th ; t#u8 per_alpha_shift ; t#u8 per_add_shift ; t#u8 per_beta1_shift ; t#u8 per_beta2_shift ; t#u8 rate_check_up ; t#u8 rate_check_down ; t#u8 rate_retry_policy [ 13 ] ; } 
s#conf_hangover_settings struct conf_hangover_settings { t#u32 recover_time ; t#u8 hangover_period ; t#u8 dynamic_mode ; t#u8 early_termination_mode ; t#u8 max_period ; t#u8 min_period ; t#u8 increase_delta ; t#u8 decrease_delta ; t#u8 quiet_time ; t#u8 increase_time ; t#u8 window_size ; } 
s#conf_recovery_settings struct conf_recovery_settings { t#u8 bug_on_recovery ; t#u8 no_recovery ; } 
s#wlcore_conf struct wlcore_conf { s#conf_sg_settings sg ; s#conf_rx_settings rx ; s#conf_tx_settings tx ; s#conf_conn_settings conn ; s#conf_itrim_settings itrim ; s#conf_pm_config_settings pm_config ; s#conf_roam_trigger_settings roam_trigger ; s#conf_scan_settings scan ; s#conf_sched_scan_settings sched_scan ; s#conf_ht_setting ht ; s#conf_memory_settings mem ; s#conf_fm_coex fm_coex ; s#conf_rx_streaming_settings rx_streaming ; s#conf_fwlog fwlog ; s#conf_rate_policy_settings rate ; s#conf_hangover_settings hangover ; s#conf_recovery_settings recovery ; } 
s#wl1271_link struct wl1271_link { s#sk_buff_head tx_queue [ 4 ] ; t#u8 allocated_pkts ; t#u8 prev_freed_pkts ; t#u8 addr [ 6 ] ; t#u8 ba_bitmap ; s#wl12xx_vif * wlvif ; t#u64 total_freed_pkts ; } 
e#wlcore_wait_event enum wlcore_wait_event { WLCORE_EVENT_ROLE_STOP_COMPLETE , WLCORE_EVENT_PEER_REMOVE_COMPLETE , WLCORE_EVENT_DFS_CONFIG_COMPLETE } 
s##wl1271_tx_hw_descr
e#wl_rx_buf_align enum wl_rx_buf_align { WLCORE_RX_BUF_ALIGNED , WLCORE_RX_BUF_UNALIGNED , WLCORE_RX_BUF_PADDED , } 
s#wl1271_rx_descriptor struct wl1271_rx_descriptor { t#__le16 length ; t#u8 status ; t#u8 flags ; t#u8 rate ; t#u8 channel ; t#s8 rssi ; t#u8 snr ; t#__le32 timestamp ; t#u8 packet_class ; t#u8 hlid ; t#u8 pad_len ; t#u8 reserved ; } 
s#wl1271_static_data struct wl1271_static_data { t#u8 mac_address [ 6 ] ; t#u8 padding [ 2 ] ; t#u8 fw_version [ 20 ] ; t#u32 hw_version ; t#u8 tx_power_table [ 8 ] [ 4 ] ; t#u8 priv [ 0 ] ; } 
s#wlcore_ops struct wlcore_ops { int ( * setup ) ( s#wl1271 * ) ; int ( * identify_chip ) ( s#wl1271 * ) ; int ( * identify_fw ) ( s#wl1271 * ) ; int ( * boot ) ( s#wl1271 * ) ; int ( * plt_init ) ( s#wl1271 * ) ; int ( * trigger_cmd ) ( s#wl1271 * , int , void * , t#size_t ) ; int ( * ack_event ) ( s#wl1271 * ) ; int ( * wait_for_event ) ( s#wl1271 * , e#wlcore_wait_event , t#bool * ) ; int ( * process_mailbox_events ) ( s#wl1271 * ) ; t#u32 ( * calc_tx_blocks ) ( s#wl1271 * , t#u32 , t#u32 ) ; void ( * set_tx_desc_blocks ) ( s#wl1271 * , s#wl1271_tx_hw_descr * , t#u32 , t#u32 ) ; void ( * set_tx_desc_data_len ) ( s#wl1271 * , s#wl1271_tx_hw_descr * , s#sk_buff * ) ; e#wl_rx_buf_align ( * get_rx_buf_align ) ( s#wl1271 * , t#u32 ) ; int ( * prepare_read ) ( s#wl1271 * , t#u32 , t#u32 ) ; t#u32 ( * get_rx_packet_len ) ( s#wl1271 * , void * , t#u32 ) ; int ( * tx_delayed_compl ) ( s#wl1271 * ) ; void ( * tx_immediate_compl ) ( s#wl1271 * ) ; int ( * hw_init ) ( s#wl1271 * ) ; int ( * init_vif ) ( s#wl1271 * , s#wl12xx_vif * ) ; t#u32 ( * sta_get_ap_rate_mask ) ( s#wl1271 * , s#wl12xx_vif * ) ; int ( * get_pg_ver ) ( s#wl1271 * , t#s8 * ) ; int ( * get_mac ) ( s#wl1271 * ) ; void ( * set_tx_desc_csum ) ( s#wl1271 * , s#wl1271_tx_hw_descr * , s#sk_buff * ) ; void ( * set_rx_csum ) ( s#wl1271 * , s#wl1271_rx_descriptor * , s#sk_buff * ) ; t#u32 ( * ap_get_mimo_wide_rate_mask ) ( s#wl1271 * , s#wl12xx_vif * ) ; int ( * debugfs_init ) ( s#wl1271 * , s#dentry * ) ; int ( * handle_static_data ) ( s#wl1271 * , s#wl1271_static_data * ) ; int ( * scan_start ) ( s#wl1271 * , s#wl12xx_vif * , s#cfg80211_scan_request * ) ; int ( * scan_stop ) ( s#wl1271 * , s#wl12xx_vif * ) ; int ( * sched_scan_start ) ( s#wl1271 * , s#wl12xx_vif * , s#cfg80211_sched_scan_request * , s#ieee80211_sched_scan_ies * ) ; void ( * sched_scan_stop ) ( s#wl1271 * , s#wl12xx_vif * ) ; int ( * get_spare_blocks ) ( s#wl1271 * , t#bool ) ; int ( * set_key ) ( s#wl1271 * , e#set_key_cmd , s#ieee80211_vif * , s#ieee80211_sta * , s#ieee80211_key_conf * ) ; int ( * channel_switch ) ( s#wl1271 * , s#wl12xx_vif * , s#ieee80211_channel_switch * ) ; t#u32 ( * pre_pkt_send ) ( s#wl1271 * , t#u32 , t#u32 ) ; void ( * sta_rc_update ) ( s#wl1271 * , s#wl12xx_vif * , s#ieee80211_sta * , t#u32 ) ; int ( * set_peer_cap ) ( s#wl1271 * , s#ieee80211_sta_ht_cap * , t#bool , t#u32 , t#u8 ) ; t#bool ( * lnk_high_prio ) ( s#wl1271 * , t#u8 , s#wl1271_link * ) ; t#bool ( * lnk_low_prio ) ( s#wl1271 * , t#u8 , s#wl1271_link * ) ; } 
s#wl1271 struct wl1271 { t#bool initialized ; s#ieee80211_hw * hw ; t#bool mac80211_registered ; s#device * dev ; s#platform_device * pdev ; void * if_priv ; s#wl1271_if_operations * if_ops ; int irq ; t#spinlock_t wl_lock ; e#wlcore_state state ; e#wl12xx_fw_type fw_type ; t#bool plt ; e#plt_mode plt_mode ; t#u8 fem_manuf ; t#u8 last_vif_count ; s#mutex mutex ; unsigned long flags ; s#wlcore_partition_set curr_part ; s#wl1271_chip chip ; int cmd_box_addr ; t#u8 * fw ; t#size_t fw_len ; void * nvs ; t#size_t nvs_len ; t#s8 hw_pg_ver ; t#u32 fuse_oui_addr ; t#u32 fuse_nic_addr ; s#mac_address addresses [ 3 ] ; int channel ; t#u8 system_hlid ; unsigned long links_map [ ( ( ( 12 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long roles_map [ ( ( ( 4 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long roc_map [ ( ( ( 4 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long rate_policies_map [ ( ( ( 16 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long klv_templates_map [ ( ( ( 4 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; t#u8 session_ids [ 12 ] ; s#list_head wlvif_list ; t#u8 sta_count ; t#u8 ap_count ; s#wl1271_acx_mem_map * target_mem_map ; t#u32 tx_blocks_freed ; t#u32 tx_blocks_available ; t#u32 tx_allocated_blocks ; t#u32 tx_results_count ; t#u32 tx_pkts_freed [ 4 ] ; t#u32 tx_allocated_pkts [ 4 ] ; t#u32 tx_packets_count ; t#s64 time_offset ; int tx_queue_count [ 4 ] ; unsigned long queue_stop_reasons [ 4 * 3 ] ; s#sk_buff_head deferred_rx_queue ; s#sk_buff_head deferred_tx_queue ; s#work_struct tx_work ; s#workqueue_struct * freezable_wq ; unsigned long tx_frames_map [ ( ( ( 32 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#sk_buff * tx_frames [ 32 ] ; int tx_frames_cnt ; t#u32 rx_counter ; t#u8 * aggr_buf ; t#u32 aggr_buf_size ; s#sk_buff * dummy_packet ; s#work_struct netstack_work ; t#u8 * fwlog ; t#ssize_t fwlog_size ; t#wait_queue_head_t fwlog_waitq ; s#work_struct recovery_work ; t#bool watchdog_recovery ; t#u32 reg_ch_conf_last [ 2 ] ; t#u32 reg_ch_conf_pending [ 2 ] ; void * mbox ; t#u32 event_mask ; t#u32 mbox_size ; t#u32 mbox_ptr [ 2 ] ; s#wl12xx_vif * scan_wlvif ; s#wl1271_scan scan ; s#delayed_work scan_complete_work ; s#ieee80211_vif * roc_vif ; s#delayed_work roc_complete_work ; s#wl12xx_vif * sched_vif ; e#ieee80211_band band ; s#completion * elp_compl ; s#delayed_work elp_work ; int power_level ; s#wl1271_stats stats ; t#__le32 * buffer_32 ; t#u32 buffer_cmd ; t#u32 buffer_busyword [ 1 ] ; s#wl_fw_status_1 * fw_status_1 ; s#wl_fw_status_2 * fw_status_2 ; s#wl1271_tx_hw_res_if * tx_res_if ; s#wlcore_conf conf ; t#bool sg_enabled ; t#bool enable_11a ; int recovery_count ; t#s8 noise ; s#ieee80211_supported_band bands [ 2 ] ; t#bool wow_enabled ; t#bool irq_wake_enabled ; s#wl1271_link links [ 12 ] ; int active_link_count ; t#u32 fw_fast_lnk_map ; t#u32 ap_fw_ps_map ; unsigned long ap_ps_map ; unsigned int quirks ; unsigned int platform_quirks ; int ba_rx_session_count ; int ba_rx_session_count_max ; int active_sta_count ; s#wl12xx_vif * last_wlvif ; s#delayed_work tx_watchdog_work ; s#wlcore_ops * ops ; const s#wlcore_partition_set * ptable ; const int * rtable ; const char * plt_fw_name ; const char * sr_fw_name ; const char * mr_fw_name ; t#u8 scan_templ_id_2_4 ; t#u8 scan_templ_id_5 ; t#u8 sched_scan_templ_id_2_4 ; t#u8 sched_scan_templ_id_5 ; t#u8 max_channels_5 ; void * priv ; t#u32 num_tx_desc ; t#u32 num_rx_desc ; const t#u8 * * band_rate_to_idx ; t#u8 hw_tx_rate_tbl_size ; t#u8 hw_min_ht_rate ; s#ieee80211_sta_ht_cap ht_cap [ 2 ] ; t#size_t fw_status_priv_len ; t#bool rx_filter_enabled [ 5 ] ; t#size_t static_data_priv_len ; e#nl80211_channel_type channel_type ; s#mutex flush_mutex ; int sleep_auth ; int num_mac_addr ; unsigned int min_sr_fw_ver [ E#NUM_FW_VER ] ; unsigned int min_mr_fw_ver [ E#NUM_FW_VER ] ; s#completion nvs_loading_complete ; t#u32 num_channels ; } 
wl1271_acx_sleep_auth int wl1271_acx_sleep_auth ( s#wl1271 * , t#u8 ) 
wl12xx_acx_mem_cfg int wl12xx_acx_mem_cfg ( s#wl1271 * ) 
wl1271_acx_init_mem_config int wl1271_acx_init_mem_config ( s#wl1271 * ) 
wl1271_acx_pm_config int wl1271_acx_pm_config ( s#wl1271 * ) 
wl1271_acx_set_ht_capabilities int wl1271_acx_set_ht_capabilities ( s#wl1271 * , s#ieee80211_sta_ht_cap * , t#bool , t#u8 ) 

/* drivers/net/wireless/ti/wlcore/boot.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##mfd_cell
s##wl1271_tx_hw_res_if
s##wl1271_tx_hw_descr
wlcore_boot_upload_firmware int wlcore_boot_upload_firmware ( s#wl1271 * ) 
wlcore_boot_upload_nvs int wlcore_boot_upload_nvs ( s#wl1271 * ) 
wlcore_boot_run_firmware int wlcore_boot_run_firmware ( s#wl1271 * ) 

/* drivers/net/wireless/ti/wlcore/cmd.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##mfd_cell
s#wl1271_tx_hw_res_descr struct wl1271_tx_hw_res_descr { t#u8 id ; t#u8 status ; t#__le16 medium_usage ; t#__le32 fw_handling_time ; t#__le32 medium_delay ; t#u8 tx_security_sequence_number_lsb ; t#u8 ack_failures ; t#u8 rate_class_index ; t#u8 spare ; } 
s#wl1271_tx_hw_res_if struct wl1271_tx_hw_res_if { t#__le32 tx_result_fw_counter ; t#__le32 tx_result_host_counter ; s#wl1271_tx_hw_res_descr tx_results_queue [ 16 ] ; } 
s#wl127x_tx_mem struct wl127x_tx_mem { t#u8 extra_blocks ; t#u8 total_mem_blocks ; } 
s#wl128x_tx_mem struct wl128x_tx_mem { t#u8 total_mem_blocks ; t#u8 extra_bytes ; } 
s#wl18xx_tx_mem struct wl18xx_tx_mem { t#u8 total_mem_blocks ; t#u8 ctrl ; } 
s#wl1271_tx_hw_descr struct wl1271_tx_hw_descr { t#__le16 length ; union { s#wl127x_tx_mem wl127x_mem ; s#wl128x_tx_mem wl128x_mem ; s#wl18xx_tx_mem wl18xx_mem ; } __attribute__ ( ( packed ) ) ; t#__le32 start_time ; t#__le16 life_time ; t#__le16 tx_attr ; t#u8 id ; t#u8 tid ; t#u8 hlid ; union { t#u8 wl12xx_reserved ; t#u8 wl18xx_checksum_data ; } __attribute__ ( ( packed ) ) ; } 
wl1271_cmd_send int wl1271_cmd_send ( s#wl1271 * , t#u16 , void * , t#size_t , t#size_t ) 
wlcore_cmd_wait_for_event_or_timeout int wlcore_cmd_wait_for_event_or_timeout ( s#wl1271 * , t#u32 , t#bool * ) 
wl1271_cmd_test int wl1271_cmd_test ( s#wl1271 * , void * , t#size_t , t#u8 ) 
wl1271_cmd_configure int wl1271_cmd_configure ( s#wl1271 * , t#u16 , void * , t#size_t ) 
wl1271_cmd_data_path int wl1271_cmd_data_path ( s#wl1271 * , t#bool ) 
wl12xx_cmd_build_probe_req int wl12xx_cmd_build_probe_req ( s#wl1271 * , s#wl12xx_vif * , t#u8 , t#u8 , const t#u8 * , t#size_t , const t#u8 * , t#size_t , t#bool ) 

/* drivers/net/wireless/ti/wlcore/debugfs.o */
wl1271_format_buffer int wl1271_format_buffer ( char * , t#size_t , t#loff_t * , char * , ... ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##mfd_cell
wl1271_debugfs_update_stats void wl1271_debugfs_update_stats ( s#wl1271 * ) 

/* drivers/net/wireless/ti/wlcore/event.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##mfd_cell
s##wl1271_tx_hw_res_if
s##wl1271_tx_hw_descr
e##wl_rx_buf_align
s##wl1271_rx_descriptor
wlcore_event_rssi_trigger void wlcore_event_rssi_trigger ( s#wl1271 * , t#s8 * ) 
wlcore_event_soft_gemini_sense void wlcore_event_soft_gemini_sense ( s#wl1271 * , t#u8 ) 
wlcore_event_sched_scan_completed void wlcore_event_sched_scan_completed ( s#wl1271 * , t#u8 ) 
wlcore_event_ba_rx_constraint void wlcore_event_ba_rx_constraint ( s#wl1271 * , unsigned long , unsigned long ) 
wlcore_event_channel_switch void wlcore_event_channel_switch ( s#wl1271 * , unsigned long , t#bool ) 
wlcore_event_dummy_packet void wlcore_event_dummy_packet ( s#wl1271 * ) 
wlcore_event_max_tx_failure void wlcore_event_max_tx_failure ( s#wl1271 * , unsigned long ) 
wlcore_event_inactive_sta void wlcore_event_inactive_sta ( s#wl1271 * , unsigned long ) 
wlcore_event_roc_complete void wlcore_event_roc_complete ( s#wl1271 * ) 
wlcore_event_beacon_loss void wlcore_event_beacon_loss ( s#wl1271 * , unsigned long ) 

/* drivers/net/wireless/ti/wlcore/io.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##mfd_cell
s##wl1271_acx_mem_map
e##wl_rx_buf_align
s##wl1271_rx_descriptor
wlcore_disable_interrupts void wlcore_disable_interrupts ( s#wl1271 * ) 
wlcore_disable_interrupts_nosync void wlcore_disable_interrupts_nosync ( s#wl1271 * ) 
wlcore_enable_interrupts void wlcore_enable_interrupts ( s#wl1271 * ) 
wlcore_synchronize_interrupts void wlcore_synchronize_interrupts ( s#wl1271 * ) 
wlcore_translate_addr int wlcore_translate_addr ( s#wl1271 * , int ) 
wlcore_set_partition int wlcore_set_partition ( s#wl1271 * , const s#wlcore_partition_set * ) 

/* drivers/net/wireless/ti/wlcore/main.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##mfd_cell
wlcore_set_key int wlcore_set_key ( s#wl1271 * , e#set_key_cmd , s#ieee80211_vif * , s#ieee80211_sta * , s#ieee80211_key_conf * ) 
wlcore_alloc_hw s#ieee80211_hw * wlcore_alloc_hw ( t#size_t , t#u32 , t#u32 ) 
wlcore_free_hw int wlcore_free_hw ( s#wl1271 * ) 
wlcore_probe int wlcore_probe ( s#wl1271 * , s#platform_device * ) 
wlcore_remove int wlcore_remove ( s#platform_device * ) 
wl12xx_debug_level extern t#u32 wl12xx_debug_level 

/* drivers/net/wireless/ti/wlcore/scan.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##mfd_cell
e##wl_rx_buf_align
s##wl1271_rx_descriptor
s#conn_scan_ch_params struct conn_scan_ch_params { t#__le16 min_duration ; t#__le16 max_duration ; t#__le16 passive_duration ; t#u8 channel ; t#u8 tx_power_att ; t#u8 flags ; t#u8 padding [ 3 ] ; } 
s#wlcore_scan_channels struct wlcore_scan_channels { t#u8 passive [ 3 ] ; t#u8 active [ 3 ] ; t#u8 dfs ; t#u8 passive_active ; s#conn_scan_ch_params channels_2 [ 14 ] ; s#conn_scan_ch_params channels_5 [ 42 ] ; s#conn_scan_ch_params channels_4 [ 4 ] ; } 
wlcore_set_scan_chan_params t#bool wlcore_set_scan_chan_params ( s#wl1271 * , s#wlcore_scan_channels * , s#ieee80211_channel * [ ] , t#u32 , t#u32 , int ) 
wlcore_scan_sched_scan_ssid_list int wlcore_scan_sched_scan_ssid_list ( s#wl1271 * , s#wl12xx_vif * , s#cfg80211_sched_scan_request * ) 
wlcore_scan_sched_scan_results void wlcore_scan_sched_scan_results ( s#wl1271 * ) 

/* drivers/net/wireless/ti/wlcore/tx.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##mfd_cell
wl1271_free_tx_id void wl1271_free_tx_id ( s#wl1271 * , int ) 
wl12xx_is_dummy_packet t#bool wl12xx_is_dummy_packet ( s#wl1271 * , s#sk_buff * ) 
wlcore_calc_packet_alignment unsigned int wlcore_calc_packet_alignment ( s#wl1271 * , unsigned int ) 
wlcore_tx_complete int wlcore_tx_complete ( s#wl1271 * ) 
wl1271_tx_flush void wl1271_tx_flush ( s#wl1271 * ) 
wl1271_tx_min_rate_get t#u32 wl1271_tx_min_rate_get ( s#wl1271 * , t#u32 ) 

/* drivers/of/address.o */
s##proc_dir_entry
of_get_pci_address extern const t#__be32 * of_get_pci_address ( s#device_node * , int , t#u64 * , unsigned int * ) 
of_pci_address_to_resource extern int of_pci_address_to_resource ( s#device_node * , int , s#resource * ) 
s#of_pci_range_parser struct of_pci_range_parser { s#device_node * node ; const t#__be32 * range ; const t#__be32 * end ; int np ; int pna ; } 
of_pci_range_parser_init extern int of_pci_range_parser_init ( s#of_pci_range_parser * , s#device_node * ) 
s#of_pci_range struct of_pci_range { t#u32 pci_space ; t#u64 pci_addr ; t#u64 cpu_addr ; t#u64 size ; t#u32 flags ; } 
of_pci_range_parser_one extern s#of_pci_range * of_pci_range_parser_one ( s#of_pci_range_parser * , s#of_pci_range * ) 
of_translate_address extern t#u64 of_translate_address ( s#device_node * , const t#__be32 * ) 
of_translate_dma_address extern t#u64 of_translate_dma_address ( s#device_node * , const t#__be32 * ) 
of_can_translate_address extern t#bool of_can_translate_address ( s#device_node * ) 
of_get_address extern const t#__be32 * of_get_address ( s#device_node * , int , t#u64 * , unsigned int * ) 
of_address_to_resource extern int of_address_to_resource ( s#device_node * , int , s#resource * ) 
of_iomap extern void * of_iomap ( s#device_node * , int ) 

/* drivers/of/base.o */
s##proc_dir_entry
of_allnodes extern s#device_node * of_allnodes 
of_n_addr_cells extern int of_n_addr_cells ( s#device_node * ) 
of_n_size_cells extern int of_n_size_cells ( s#device_node * ) 
of_node_get extern s#device_node * of_node_get ( s#device_node * ) 
of_node_put extern void of_node_put ( s#device_node * ) 
of_find_property extern s#property * of_find_property ( const s#device_node * , const char * , int * ) 
of_find_all_nodes extern s#device_node * of_find_all_nodes ( s#device_node * ) 
of_get_property extern const void * of_get_property ( const s#device_node * , const char * , int * ) 
of_get_cpu_node extern s#device_node * of_get_cpu_node ( int , unsigned int * ) 
of_device_is_compatible extern int of_device_is_compatible ( const s#device_node * , const char * ) 
of_machine_is_compatible extern int of_machine_is_compatible ( const char * ) 
of_device_is_available extern int of_device_is_available ( const s#device_node * ) 
of_get_parent extern s#device_node * of_get_parent ( const s#device_node * ) 
of_get_next_parent extern s#device_node * of_get_next_parent ( s#device_node * ) 
of_get_next_child extern s#device_node * of_get_next_child ( const s#device_node * , s#device_node * ) 
of_get_next_available_child extern s#device_node * of_get_next_available_child ( const s#device_node * , s#device_node * ) 
of_get_child_by_name extern s#device_node * of_get_child_by_name ( const s#device_node * , const char * ) 
of_find_node_by_path extern s#device_node * of_find_node_by_path ( const char * ) 
of_find_node_by_name extern s#device_node * of_find_node_by_name ( s#device_node * , const char * ) 
of_find_node_by_type extern s#device_node * of_find_node_by_type ( s#device_node * , const char * ) 
of_find_compatible_node extern s#device_node * of_find_compatible_node ( s#device_node * , const char * , const char * ) 
of_find_node_with_property extern s#device_node * of_find_node_with_property ( s#device_node * , const char * ) 
of_match_node extern const s#of_device_id * of_match_node ( const s#of_device_id * , const s#device_node * ) 
of_find_matching_node_and_match extern s#device_node * of_find_matching_node_and_match ( s#device_node * , const s#of_device_id * , const s#of_device_id * * ) 
of_modalias_node extern int of_modalias_node ( s#device_node * , char * , int ) 
of_find_node_by_phandle extern s#device_node * of_find_node_by_phandle ( t#phandle ) 
of_property_read_u32_index extern int of_property_read_u32_index ( const s#device_node * , const char * , t#u32 , t#u32 * ) 
of_property_read_u8_array extern int of_property_read_u8_array ( const s#device_node * , const char * , t#u8 * , t#size_t ) 
of_property_read_u16_array extern int of_property_read_u16_array ( const s#device_node * , const char * , t#u16 * , t#size_t ) 
of_property_read_u32_array extern int of_property_read_u32_array ( const s#device_node * , const char * , t#u32 * , t#size_t ) 
of_property_read_u64 extern int of_property_read_u64 ( const s#device_node * , const char * , t#u64 * ) 
of_property_read_string extern int of_property_read_string ( s#device_node * , const char * , const char * * ) 
of_property_match_string extern int of_property_match_string ( s#device_node * , const char * , const char * ) 
of_property_read_string_helper extern int of_property_read_string_helper ( s#device_node * , const char * , const char * * , t#size_t , int ) 
of_property_count_strings extern int of_property_count_strings ( s#device_node * , const char * ) 
of_property_read_string_index extern int of_property_read_string_index ( s#device_node * , const char * , int , const char * * ) 
of_parse_phandle extern s#device_node * of_parse_phandle ( const s#device_node * , const char * , int ) 
of_parse_phandle_with_args extern int of_parse_phandle_with_args ( const s#device_node * , const char * , const char * , int , s#of_phandle_args * ) 
of_parse_phandle_with_fixed_args extern int of_parse_phandle_with_fixed_args ( const s#device_node * , const char * , int , int , s#of_phandle_args * ) 
of_count_phandle_with_args extern int of_count_phandle_with_args ( const s#device_node * , const char * , const char * ) 
of_reconfig_notifier_register extern int of_reconfig_notifier_register ( s#notifier_block * ) 
of_reconfig_notifier_unregister extern int of_reconfig_notifier_unregister ( s#notifier_block * ) 
of_alias_get_id extern int of_alias_get_id ( s#device_node * , const char * ) 
of_prop_next_u32 const t#__be32 * of_prop_next_u32 ( s#property * , const t#__be32 * , t#u32 * ) 
of_prop_next_string const char * of_prop_next_string ( s#property * , const char * ) 
of_device_is_stdout_path int of_device_is_stdout_path ( s#device_node * ) 

/* drivers/of/device.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##proc_dir_entry
s##iommu_group
of_match_device extern const s#of_device_id * of_match_device ( const s#of_device_id * , const s#device * ) 
s##mfd_cell
of_dev_get extern s#platform_device * of_dev_get ( s#platform_device * ) 
of_dev_put extern void of_dev_put ( s#platform_device * ) 
of_device_register extern int of_device_register ( s#platform_device * ) 
of_device_unregister extern void of_device_unregister ( s#platform_device * ) 

/* drivers/of/fdt.o */
s##proc_dir_entry
of_fdt_unflatten_tree extern void of_fdt_unflatten_tree ( unsigned long * , s#device_node * * ) 

/* drivers/of/irq.o */
s##proc_dir_entry
irq_of_parse_and_map extern unsigned int irq_of_parse_and_map ( s#device_node * , int ) 
s#of_irq struct of_irq { s#device_node * controller ; t#u32 size ; t#u32 specifier [ 4 ] ; } 
of_irq_map_raw extern int of_irq_map_raw ( s#device_node * , const t#__be32 * , t#u32 , const t#__be32 * , s#of_irq * ) 
of_irq_map_one extern int of_irq_map_one ( s#device_node * , int , s#of_irq * ) 
of_irq_to_resource extern int of_irq_to_resource ( s#device_node * , int , s#resource * ) 
of_irq_to_resource_table extern int of_irq_to_resource_table ( s#device_node * , s#resource * , int ) 

/* drivers/of/of_mdio.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##pci_dev
s##iommu_group
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
of_mdiobus_register extern int of_mdiobus_register ( s#mii_bus * , s#device_node * ) 
of_phy_find_device extern s#phy_device * of_phy_find_device ( s#device_node * ) 
of_phy_connect extern s#phy_device * of_phy_connect ( s#net_device * , s#device_node * , void ( * ) ( s#net_device * ) , t#u32 , t#phy_interface_t ) 
of_phy_connect_fixed_link extern s#phy_device * of_phy_connect_fixed_link ( s#net_device * , void ( * ) ( s#net_device * ) , t#phy_interface_t ) 

/* drivers/of/of_mtd.o */
s##proc_dir_entry
of_get_nand_ecc_mode int of_get_nand_ecc_mode ( s#device_node * ) 
of_get_nand_bus_width int of_get_nand_bus_width ( s#device_node * ) 
of_get_nand_on_flash_bbt t#bool of_get_nand_on_flash_bbt ( s#device_node * ) 

/* drivers/of/of_net.o */
s##proc_dir_entry
of_get_phy_mode extern int of_get_phy_mode ( s#device_node * ) 
of_get_mac_address extern const void * of_get_mac_address ( s#device_node * ) 

/* drivers/of/of_pci.o */
s##proc_dir_entry
of_pci_find_child_device s#device_node * of_pci_find_child_device ( s#device_node * , unsigned int ) 
of_pci_get_devfn int of_pci_get_devfn ( s#device_node * ) 
of_pci_parse_bus_range int of_pci_parse_bus_range ( s#device_node * , s#resource * ) 
s##module
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##iommu_group
of_pci_msi_chip_add int of_pci_msi_chip_add ( s#msi_chip * ) 
of_pci_msi_chip_remove void of_pci_msi_chip_remove ( s#msi_chip * ) 
of_pci_find_msi_chip_by_node s#msi_chip * of_pci_find_msi_chip_by_node ( s#device_node * ) 

/* drivers/of/of_pci_irq.o */
s##module
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
of_irq_map_pci int of_irq_map_pci ( const s#pci_dev * , s#of_irq * ) 

/* drivers/of/platform.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
s##mfd_cell
of_find_device_by_node extern s#platform_device * of_find_device_by_node ( s#device_node * ) 
of_device_alloc extern s#platform_device * of_device_alloc ( s#device_node * , const char * , s#device * ) 
of_platform_device_create extern s#platform_device * of_platform_device_create ( s#device_node * , const char * , s#device * ) 
of_platform_bus_probe extern int of_platform_bus_probe ( s#device_node * , const s#of_device_id * , s#device * ) 
s#of_dev_auxdata struct of_dev_auxdata { char * compatible ; t#resource_size_t phys_addr ; char * name ; void * platform_data ; } 
of_platform_populate extern int of_platform_populate ( s#device_node * , const s#of_device_id * , const s#of_dev_auxdata * , s#device * ) 

/* drivers/parport/ieee1284.o */
s##device
s#pc_parport_state struct pc_parport_state { unsigned int ctr ; unsigned int ecr ; } 
s#ax_parport_state struct ax_parport_state { unsigned int ctr ; unsigned int ecr ; unsigned int dcsr ; } 
s#amiga_parport_state struct amiga_parport_state { unsigned char data ; unsigned char datadir ; unsigned char status ; unsigned char statusdir ; } 
s#ax88796_parport_state struct ax88796_parport_state { unsigned char cpr ; } 
s#ip32_parport_state struct ip32_parport_state { unsigned int dcr ; unsigned int ecr ; } 
s#parport_state struct parport_state { union { s#pc_parport_state pc ; s#ax_parport_state ax ; s#amiga_parport_state amiga ; s#ax88796_parport_state ax88796 ; s#ip32_parport_state ip32 ; void * misc ; } u ; } 
s#pardevice struct pardevice { const char * name ; s#parport * port ; int daisy ; int ( * preempt ) ( void * ) ; void ( * wakeup ) ( void * ) ; void * private ; void ( * irq_func ) ( void * ) ; unsigned int flags ; s#pardevice * next ; s#pardevice * prev ; s#parport_state * state ; t#wait_queue_head_t wait_q ; unsigned long int time ; unsigned long int timeslice ; volatile long int timeout ; unsigned long waiting ; s#pardevice * waitprev ; s#pardevice * waitnext ; void * sysctl_table ; } 
t#parport_device_class typedef enum { PARPORT_CLASS_LEGACY = 0 , PARPORT_CLASS_PRINTER , PARPORT_CLASS_MODEM , PARPORT_CLASS_NET , PARPORT_CLASS_HDC , PARPORT_CLASS_PCMCIA , PARPORT_CLASS_MEDIA , PARPORT_CLASS_FDC , PARPORT_CLASS_PORTS , PARPORT_CLASS_SCANNER , PARPORT_CLASS_DIGCAM , PARPORT_CLASS_OTHER , PARPORT_CLASS_UNSPEC , PARPORT_CLASS_SCSIADAPTER } parport_device_class 
s#parport_device_info struct parport_device_info { t#parport_device_class class ; const char * class_name ; const char * mfr ; const char * model ; const char * cmdset ; const char * description ; } 
e#ieee1284_phase enum ieee1284_phase { IEEE1284_PH_FWD_DATA , IEEE1284_PH_FWD_IDLE , IEEE1284_PH_TERMINATE , IEEE1284_PH_NEGOTIATION , IEEE1284_PH_HBUSY_DNA , IEEE1284_PH_REV_IDLE , IEEE1284_PH_HBUSY_DAVAIL , IEEE1284_PH_REV_DATA , IEEE1284_PH_ECP_SETUP , IEEE1284_PH_ECP_FWD_TO_REV , IEEE1284_PH_ECP_REV_TO_FWD , IEEE1284_PH_ECP_DIR_UNKNOWN , } 
s#ieee1284_info struct ieee1284_info { int mode ; volatile e#ieee1284_phase phase ; s#semaphore irq ; } 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#parport_operations struct parport_operations { void ( * write_data ) ( s#parport * , unsigned char ) ; unsigned char ( * read_data ) ( s#parport * ) ; void ( * write_control ) ( s#parport * , unsigned char ) ; unsigned char ( * read_control ) ( s#parport * ) ; unsigned char ( * frob_control ) ( s#parport * , unsigned char , unsigned char ) ; unsigned char ( * read_status ) ( s#parport * ) ; void ( * enable_irq ) ( s#parport * ) ; void ( * disable_irq ) ( s#parport * ) ; void ( * data_forward ) ( s#parport * ) ; void ( * data_reverse ) ( s#parport * ) ; void ( * init_state ) ( s#pardevice * , s#parport_state * ) ; void ( * save_state ) ( s#parport * , s#parport_state * ) ; void ( * restore_state ) ( s#parport * , s#parport_state * ) ; t#size_t ( * epp_write_data ) ( s#parport * , const void * , t#size_t , int ) ; t#size_t ( * epp_read_data ) ( s#parport * , void * , t#size_t , int ) ; t#size_t ( * epp_write_addr ) ( s#parport * , const void * , t#size_t , int ) ; t#size_t ( * epp_read_addr ) ( s#parport * , void * , t#size_t , int ) ; t#size_t ( * ecp_write_data ) ( s#parport * , const void * , t#size_t , int ) ; t#size_t ( * ecp_read_data ) ( s#parport * , void * , t#size_t , int ) ; t#size_t ( * ecp_write_addr ) ( s#parport * , const void * , t#size_t , int ) ; t#size_t ( * compat_write_data ) ( s#parport * , const void * , t#size_t , int ) ; t#size_t ( * nibble_read_data ) ( s#parport * , void * , t#size_t , int ) ; t#size_t ( * byte_read_data ) ( s#parport * , void * , t#size_t , int ) ; s#module * owner ; } 
s#parport struct parport { unsigned long base ; unsigned long base_hi ; unsigned int size ; const char * name ; unsigned int modes ; int irq ; int dma ; int muxport ; int portnum ; s#device * dev ; s#parport * physport ; s#pardevice * devices ; s#pardevice * cad ; int daisy ; int muxsel ; s#pardevice * waithead ; s#pardevice * waittail ; s#list_head list ; unsigned int flags ; void * sysctl_table ; s#parport_device_info probe_info [ 5 ] ; s#ieee1284_info ieee1284 ; s#parport_operations * ops ; void * private_data ; int number ; t#spinlock_t pardevice_lock ; t#spinlock_t waitlist_lock ; t#rwlock_t cad_lock ; int spintime ; t#atomic_t ref_count ; unsigned long devflags ; s#pardevice * proc_device ; s#list_head full_list ; s#parport * slaves [ 3 ] ; } 
parport_negotiate extern int parport_negotiate ( s#parport * , int ) 
parport_write extern t#ssize_t parport_write ( s#parport * , const void * , t#size_t ) 
parport_read extern t#ssize_t parport_read ( s#parport * , void * , t#size_t ) 
parport_wait_peripheral extern int parport_wait_peripheral ( s#parport * , unsigned char , unsigned char ) 
parport_wait_event extern int parport_wait_event ( s#parport * , long ) 
parport_set_timeout extern long parport_set_timeout ( s#pardevice * , long ) 
parport_ieee1284_interrupt extern void parport_ieee1284_interrupt ( void * ) 

/* drivers/parport/ieee1284_ops.o */
s##device
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
parport_ieee1284_ecp_write_data extern t#size_t parport_ieee1284_ecp_write_data ( s#parport * , const void * , t#size_t , int ) 
parport_ieee1284_ecp_read_data extern t#size_t parport_ieee1284_ecp_read_data ( s#parport * , void * , t#size_t , int ) 
parport_ieee1284_ecp_write_addr extern t#size_t parport_ieee1284_ecp_write_addr ( s#parport * , const void * , t#size_t , int ) 
parport_ieee1284_write_compat extern t#size_t parport_ieee1284_write_compat ( s#parport * , const void * , t#size_t , int ) 
parport_ieee1284_read_nibble extern t#size_t parport_ieee1284_read_nibble ( s#parport * , void * , t#size_t , int ) 
parport_ieee1284_read_byte extern t#size_t parport_ieee1284_read_byte ( s#parport * , void * , t#size_t , int ) 
parport_ieee1284_epp_write_data extern t#size_t parport_ieee1284_epp_write_data ( s#parport * , const void * , t#size_t , int ) 
parport_ieee1284_epp_read_data extern t#size_t parport_ieee1284_epp_read_data ( s#parport * , void * , t#size_t , int ) 
parport_ieee1284_epp_write_addr extern t#size_t parport_ieee1284_epp_write_addr ( s#parport * , const void * , t#size_t , int ) 
parport_ieee1284_epp_read_addr extern t#size_t parport_ieee1284_epp_read_addr ( s#parport * , void * , t#size_t , int ) 

/* drivers/parport/parport_pc.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
parport_pc_probe_port extern s#parport * parport_pc_probe_port ( unsigned long , unsigned long , int , int , s#device * , int ) 
parport_pc_unregister_port extern void parport_pc_unregister_port ( s#parport * ) 

/* drivers/parport/share.o */
s##device
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
parport_claim extern int parport_claim ( s#pardevice * ) 
parport_claim_or_block extern int parport_claim_or_block ( s#pardevice * ) 
parport_release extern void parport_release ( s#pardevice * ) 
parport_register_port s#parport * parport_register_port ( unsigned long , int , int , s#parport_operations * ) 
parport_announce_port void parport_announce_port ( s#parport * ) 
parport_remove_port extern void parport_remove_port ( s#parport * ) 
s#parport_driver struct parport_driver { const char * name ; void ( * attach ) ( s#parport * ) ; void ( * detach ) ( s#parport * ) ; s#list_head list ; } 
parport_register_driver extern int parport_register_driver ( s#parport_driver * ) 
parport_unregister_driver extern void parport_unregister_driver ( s#parport_driver * ) 
parport_register_device s#pardevice * parport_register_device ( s#parport * , const char * , int ( * ) ( void * ) , void ( * ) ( void * ) , void ( * ) ( void * ) , int , void * ) 
parport_unregister_device extern void parport_unregister_device ( s#pardevice * ) 
parport_get_port extern s#parport * parport_get_port ( s#parport * ) 
parport_put_port extern void parport_put_port ( s#parport * ) 
parport_find_number extern s#parport * parport_find_number ( int ) 
parport_find_base extern s#parport * parport_find_base ( unsigned long ) 
parport_irq_handler extern t#irqreturn_t parport_irq_handler ( int , void * ) 

/* drivers/pci/access.o */
s##proc_dir_entry
s##hotplug_slot
s##sock
s##sysfs_dirent
s##device_private
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##subsys_private
s##iommu_group
s##iommu_ops
s##driver_private
s##pcie_link_state
s#pci_vpd_ops struct pci_vpd_ops { t#ssize_t ( * read ) ( s#pci_dev * , t#loff_t , t#size_t , void * ) ; t#ssize_t ( * write ) ( s#pci_dev * , t#loff_t , t#size_t , const void * ) ; void ( * release ) ( s#pci_dev * ) ; } 
s#pci_vpd struct pci_vpd { unsigned int len ; const s#pci_vpd_ops * ops ; s#bin_attribute * attr ; } 
s#pci_sriov struct pci_sriov { int pos ; int nres ; t#u32 cap ; t#u16 ctrl ; t#u16 total_VFs ; t#u16 initial_VFs ; t#u16 num_VFs ; t#u16 offset ; t#u16 stride ; t#u32 pgsz ; t#u8 link ; t#u16 driver_max_VFs ; s#pci_dev * dev ; s#pci_dev * self ; s#mutex lock ; s#work_struct mtask ; t#u8 * mstate ; } 
s##pci_ats
s##msi_chip
pci_bus_read_config_byte int pci_bus_read_config_byte ( s#pci_bus * , unsigned int , int , t#u8 * ) 
pci_bus_read_config_word int pci_bus_read_config_word ( s#pci_bus * , unsigned int , int , t#u16 * ) 
pci_bus_read_config_dword int pci_bus_read_config_dword ( s#pci_bus * , unsigned int , int , t#u32 * ) 
pci_bus_write_config_byte int pci_bus_write_config_byte ( s#pci_bus * , unsigned int , int , t#u8 ) 
pci_bus_write_config_word int pci_bus_write_config_word ( s#pci_bus * , unsigned int , int , t#u16 ) 
pci_bus_write_config_dword int pci_bus_write_config_dword ( s#pci_bus * , unsigned int , int , t#u32 ) 
pci_bus_set_ops s#pci_ops * pci_bus_set_ops ( s#pci_bus * , s#pci_ops * ) 
pci_read_vpd t#ssize_t pci_read_vpd ( s#pci_dev * , t#loff_t , t#size_t , void * ) 
pci_write_vpd t#ssize_t pci_write_vpd ( s#pci_dev * , t#loff_t , t#size_t , const void * ) 
pci_user_read_config_byte int pci_user_read_config_byte ( s#pci_dev * , int , t#u8 * ) 
pci_user_read_config_word int pci_user_read_config_word ( s#pci_dev * , int , t#u16 * ) 
pci_user_read_config_dword int pci_user_read_config_dword ( s#pci_dev * , int , t#u32 * ) 
pci_user_write_config_byte int pci_user_write_config_byte ( s#pci_dev * , int , t#u8 ) 
pci_user_write_config_word int pci_user_write_config_word ( s#pci_dev * , int , t#u16 ) 
pci_user_write_config_dword int pci_user_write_config_dword ( s#pci_dev * , int , t#u32 ) 
pci_vpd_truncate int pci_vpd_truncate ( s#pci_dev * , t#size_t ) 
pci_cfg_access_lock void pci_cfg_access_lock ( s#pci_dev * ) 
pci_cfg_access_trylock t#bool pci_cfg_access_trylock ( s#pci_dev * ) 
pci_cfg_access_unlock void pci_cfg_access_unlock ( s#pci_dev * ) 
pcie_capability_read_word int pcie_capability_read_word ( s#pci_dev * , int , t#u16 * ) 
pcie_capability_read_dword int pcie_capability_read_dword ( s#pci_dev * , int , t#u32 * ) 
pcie_capability_write_word int pcie_capability_write_word ( s#pci_dev * , int , t#u16 ) 
pcie_capability_write_dword int pcie_capability_write_dword ( s#pci_dev * , int , t#u32 ) 
pcie_capability_clear_and_set_word int pcie_capability_clear_and_set_word ( s#pci_dev * , int , t#u16 , t#u16 ) 
pcie_capability_clear_and_set_dword int pcie_capability_clear_and_set_dword ( s#pci_dev * , int , t#u32 , t#u32 ) 

/* drivers/pci/ats.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s#pci_ats struct pci_ats { int pos ; int stu ; int qdep ; int ref_cnt ; unsigned int is_enabled : 1 ; } 
pci_enable_ats int pci_enable_ats ( s#pci_dev * , int ) 
pci_disable_ats void pci_disable_ats ( s#pci_dev * ) 
pci_restore_ats_state void pci_restore_ats_state ( s#pci_dev * ) 
pci_ats_queue_depth int pci_ats_queue_depth ( s#pci_dev * ) 
pci_enable_pri int pci_enable_pri ( s#pci_dev * , t#u32 ) 
pci_disable_pri void pci_disable_pri ( s#pci_dev * ) 
pci_pri_enabled t#bool pci_pri_enabled ( s#pci_dev * ) 
pci_reset_pri int pci_reset_pri ( s#pci_dev * ) 
pci_pri_stopped t#bool pci_pri_stopped ( s#pci_dev * ) 
pci_pri_status int pci_pri_status ( s#pci_dev * ) 
pci_enable_pasid int pci_enable_pasid ( s#pci_dev * , int ) 
pci_disable_pasid void pci_disable_pasid ( s#pci_dev * ) 
pci_pasid_features int pci_pasid_features ( s#pci_dev * ) 
pci_max_pasids int pci_max_pasids ( s#pci_dev * ) 

/* drivers/pci/bus.o */
pci_add_resource_offset void pci_add_resource_offset ( s#list_head * , s#resource * , t#resource_size_t ) 
pci_add_resource void pci_add_resource ( s#list_head * , s#resource * ) 
pci_free_resource_list void pci_free_resource_list ( s#list_head * ) 
s##proc_dir_entry
s##hotplug_slot
s##sock
s##sysfs_dirent
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##subsys_private
s##iommu_group
s##iommu_ops
s##driver_private
s##pcie_link_state
s##pci_ats
s##msi_chip
pci_bus_resource_n s#resource * pci_bus_resource_n ( const s#pci_bus * , int ) 
pci_walk_bus void pci_walk_bus ( s#pci_bus * , int ( * ) ( s#pci_dev * , void * ) , void * ) 
pci_bus_get s#pci_bus * pci_bus_get ( s#pci_bus * ) 
pci_bus_put void pci_bus_put ( s#pci_bus * ) 
pci_bus_alloc_resource int pci_bus_alloc_resource ( s#pci_bus * , s#resource * , t#resource_size_t , t#resource_size_t , t#resource_size_t , unsigned int , t#resource_size_t ( * ) ( void * , const s#resource * , t#resource_size_t , t#resource_size_t ) , void * ) 
pci_bus_add_device int pci_bus_add_device ( s#pci_dev * ) 
pci_bus_add_devices void pci_bus_add_devices ( const s#pci_bus * ) 

/* drivers/pci/host-bridge.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_ats
s#pci_bus_region struct pci_bus_region { t#resource_size_t start ; t#resource_size_t end ; } 
pcibios_resource_to_bus void pcibios_resource_to_bus ( s#pci_dev * , s#pci_bus_region * , s#resource * ) 
pcibios_bus_to_resource void pcibios_bus_to_resource ( s#pci_dev * , s#resource * , s#pci_bus_region * ) 

/* drivers/pci/hotplug-pci.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_ats
pci_hp_add_bridge int pci_hp_add_bridge ( s#pci_dev * ) 

/* drivers/pci/hotplug/pci_hotplug_core.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#hotplug_slot_ops struct hotplug_slot_ops { s#module * owner ; const char * mod_name ; int ( * enable_slot ) ( s#hotplug_slot * ) ; int ( * disable_slot ) ( s#hotplug_slot * ) ; int ( * set_attention_status ) ( s#hotplug_slot * , t#u8 ) ; int ( * hardware_test ) ( s#hotplug_slot * , t#u32 ) ; int ( * get_power_status ) ( s#hotplug_slot * , t#u8 * ) ; int ( * get_attention_status ) ( s#hotplug_slot * , t#u8 * ) ; int ( * get_latch_status ) ( s#hotplug_slot * , t#u8 * ) ; int ( * get_adapter_status ) ( s#hotplug_slot * , t#u8 * ) ; int ( * reset_slot ) ( s#hotplug_slot * , int ) ; } 
s#hotplug_slot_info struct hotplug_slot_info { t#u8 power_status ; t#u8 attention_status ; t#u8 latch_status ; t#u8 adapter_status ; } 
s##proc_dir_entry
s##device_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##subsys_private
s##iommu_group
s##iommu_ops
s##driver_private
s##pcie_link_state
s##pci_ats
s##msi_chip
s#hotplug_slot struct hotplug_slot { s#hotplug_slot_ops * ops ; s#hotplug_slot_info * info ; void ( * release ) ( s#hotplug_slot * ) ; void * private ; s#list_head slot_list ; s#pci_slot * pci_slot ; } 
__pci_hp_register int __pci_hp_register ( s#hotplug_slot * , s#pci_bus * , int , const char * , s#module * , const char * ) 
pci_hp_deregister int pci_hp_deregister ( s#hotplug_slot * ) 
pci_hp_change_slot_info int pci_hp_change_slot_info ( s#hotplug_slot * , s#hotplug_slot_info * ) 

/* drivers/pci/hotplug/pcihp_slot.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
pci_configure_slot void pci_configure_slot ( s#pci_dev * ) 

/* drivers/pci/hotplug/rpaphp_core.o */
s##proc_dir_entry
rpaphp_add_slot int rpaphp_add_slot ( s#device_node * ) 
rpaphp_slot_head extern s#list_head rpaphp_slot_head 
rpaphp_get_drc_props int rpaphp_get_drc_props ( s#device_node * , int * , char * * , char * * , int * ) 

/* drivers/pci/hotplug/rpaphp_slot.o */
s##proc_dir_entry
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##subsys_private
s##iommu_group
s##iommu_ops
s##driver_private
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s#slot struct slot { s#list_head rpaphp_slot_list ; int state ; t#u32 index ; t#u32 type ; t#u32 power_domain ; char * name ; s#device_node * dn ; s#pci_bus * bus ; s#list_head * pci_devs ; s#hotplug_slot * hotplug_slot ; } 
rpaphp_deregister_slot int rpaphp_deregister_slot ( s#slot * ) 

/* drivers/pci/iov.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
pci_enable_sriov int pci_enable_sriov ( s#pci_dev * , int ) 
pci_disable_sriov void pci_disable_sriov ( s#pci_dev * ) 
pci_sriov_migration t#irqreturn_t pci_sriov_migration ( s#pci_dev * ) 
pci_num_vf int pci_num_vf ( s#pci_dev * ) 
pci_vfs_assigned int pci_vfs_assigned ( s#pci_dev * ) 
pci_sriov_set_totalvfs int pci_sriov_set_totalvfs ( s#pci_dev * , t#u16 ) 
pci_sriov_get_totalvfs int pci_sriov_get_totalvfs ( s#pci_dev * ) 

/* drivers/pci/irq.o */
e#pci_lost_interrupt_reason enum pci_lost_interrupt_reason { PCI_LOST_IRQ_NO_INFORMATION = 0 , PCI_LOST_IRQ_DISABLE_MSI , PCI_LOST_IRQ_DISABLE_MSIX , PCI_LOST_IRQ_DISABLE_ACPI , } 
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
pci_lost_interrupt e#pci_lost_interrupt_reason pci_lost_interrupt ( s#pci_dev * ) 

/* drivers/pci/msi.o */
s##module
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_ats
pci_restore_msi_state void pci_restore_msi_state ( s#pci_dev * ) 
pci_enable_msi_block int pci_enable_msi_block ( s#pci_dev * , unsigned int ) 
pci_enable_msi_block_auto int pci_enable_msi_block_auto ( s#pci_dev * , unsigned int * ) 
pci_disable_msi void pci_disable_msi ( s#pci_dev * ) 
pci_enable_msix int pci_enable_msix ( s#pci_dev * , s#msix_entry * , int ) 
pci_disable_msix void pci_disable_msix ( s#pci_dev * ) 
pci_msi_enabled int pci_msi_enabled ( void ) 
pci_enable_msi_range int pci_enable_msi_range ( s#pci_dev * , int , int ) 
pci_enable_msix_range int pci_enable_msix_range ( s#pci_dev * , s#msix_entry * , int , int ) 

/* drivers/pci/pci.o */
pci_power_names extern const char * pci_power_names [ ] 
isa_dma_bridge_buggy extern int isa_dma_bridge_buggy 
pci_pci_problems extern int pci_pci_problems 
s##proc_dir_entry
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##subsys_private
s##iommu_group
s##iommu_ops
s##driver_private
s##pcie_link_state
s##pci_ats
s##msi_chip
pci_bus_max_busnr unsigned char pci_bus_max_busnr ( s#pci_bus * ) 
pci_ioremap_bar void * pci_ioremap_bar ( s#pci_dev * , int ) 
pci_find_next_capability int pci_find_next_capability ( s#pci_dev * , t#u8 , int ) 
pci_find_next_ext_capability int pci_find_next_ext_capability ( s#pci_dev * , int , int ) 
pci_find_ext_capability int pci_find_ext_capability ( s#pci_dev * , int ) 
pci_find_next_ht_capability int pci_find_next_ht_capability ( s#pci_dev * , int , int ) 
pci_find_ht_capability int pci_find_ht_capability ( s#pci_dev * , int ) 
__pci_complete_power_transition int __pci_complete_power_transition ( s#pci_dev * , t#pci_power_t ) 
pci_choose_state t#pci_power_t pci_choose_state ( s#pci_dev * , t#pm_message_t ) 
s##pci_saved_state
pci_store_saved_state s#pci_saved_state * pci_store_saved_state ( s#pci_dev * ) 
pci_load_saved_state int pci_load_saved_state ( s#pci_dev * , s#pci_saved_state * ) 
pci_load_and_free_saved_state int pci_load_and_free_saved_state ( s#pci_dev * , s#pci_saved_state * * ) 
__pci_enable_wake int __pci_enable_wake ( s#pci_dev * , t#pci_power_t , t#bool , t#bool ) 
pci_dev_run_wake t#bool pci_dev_run_wake ( s#pci_dev * ) 
pci_enable_ido void pci_enable_ido ( s#pci_dev * , unsigned long ) 
pci_disable_ido void pci_disable_ido ( s#pci_dev * , unsigned long ) 
e#pci_obff_signal_type enum pci_obff_signal_type { PCI_EXP_OBFF_SIGNAL_L0 = 0 , PCI_EXP_OBFF_SIGNAL_ALWAYS = 1 , } 
pci_enable_obff int pci_enable_obff ( s#pci_dev * , e#pci_obff_signal_type ) 
pci_disable_obff void pci_disable_obff ( s#pci_dev * ) 
pci_enable_ltr int pci_enable_ltr ( s#pci_dev * ) 
pci_disable_ltr void pci_disable_ltr ( s#pci_dev * ) 
pci_set_ltr int pci_set_ltr ( s#pci_dev * , int , int ) 
pci_set_cacheline_size int pci_set_cacheline_size ( s#pci_dev * ) 
pci_intx_mask_supported t#bool pci_intx_mask_supported ( s#pci_dev * ) 
pci_check_and_mask_intx t#bool pci_check_and_mask_intx ( s#pci_dev * ) 
pci_check_and_unmask_intx t#bool pci_check_and_unmask_intx ( s#pci_dev * ) 
pci_msi_off void pci_msi_off ( s#pci_dev * ) 
pci_set_dma_max_seg_size int pci_set_dma_max_seg_size ( s#pci_dev * , unsigned int ) 
pci_set_dma_seg_boundary int pci_set_dma_seg_boundary ( s#pci_dev * , unsigned long ) 
pci_wait_for_pending_transaction int pci_wait_for_pending_transaction ( s#pci_dev * ) 
pci_reset_bridge_secondary_bus void pci_reset_bridge_secondary_bus ( s#pci_dev * ) 
__pci_reset_function int __pci_reset_function ( s#pci_dev * ) 
__pci_reset_function_locked int __pci_reset_function_locked ( s#pci_dev * ) 
pci_reset_function int pci_reset_function ( s#pci_dev * ) 
pci_probe_reset_slot int pci_probe_reset_slot ( s#pci_slot * ) 
pci_reset_slot int pci_reset_slot ( s#pci_slot * ) 
pci_probe_reset_bus int pci_probe_reset_bus ( s#pci_bus * ) 
pci_reset_bus int pci_reset_bus ( s#pci_bus * ) 
pcix_get_max_mmrbc int pcix_get_max_mmrbc ( s#pci_dev * ) 
pcix_get_mmrbc int pcix_get_mmrbc ( s#pci_dev * ) 
pcix_set_mmrbc int pcix_set_mmrbc ( s#pci_dev * , int ) 
pcie_get_readrq int pcie_get_readrq ( s#pci_dev * ) 
pcie_set_readrq int pcie_set_readrq ( s#pci_dev * , int ) 
e#pci_bus_speed enum pci_bus_speed { PCI_SPEED_33MHz = 0x00 , PCI_SPEED_66MHz = 0x01 , PCI_SPEED_66MHz_PCIX = 0x02 , PCI_SPEED_100MHz_PCIX = 0x03 , PCI_SPEED_133MHz_PCIX = 0x04 , PCI_SPEED_66MHz_PCIX_ECC = 0x05 , PCI_SPEED_100MHz_PCIX_ECC = 0x06 , PCI_SPEED_133MHz_PCIX_ECC = 0x07 , PCI_SPEED_66MHz_PCIX_266 = 0x09 , PCI_SPEED_100MHz_PCIX_266 = 0x0a , PCI_SPEED_133MHz_PCIX_266 = 0x0b , AGP_UNKNOWN = 0x0c , AGP_1X = 0x0d , AGP_2X = 0x0e , AGP_4X = 0x0f , AGP_8X = 0x10 , PCI_SPEED_66MHz_PCIX_533 = 0x11 , PCI_SPEED_100MHz_PCIX_533 = 0x12 , PCI_SPEED_133MHz_PCIX_533 = 0x13 , PCIE_SPEED_2_5GT = 0x14 , PCIE_SPEED_5_0GT = 0x15 , PCIE_SPEED_8_0GT = 0x16 , PCI_SPEED_UNKNOWN = 0xff , } 
e#pcie_link_width enum pcie_link_width { PCIE_LNK_WIDTH_RESRV = 0x00 , PCIE_LNK_X1 = 0x01 , PCIE_LNK_X2 = 0x02 , PCIE_LNK_X4 = 0x04 , PCIE_LNK_X8 = 0x08 , PCIE_LNK_X12 = 0x0C , PCIE_LNK_X16 = 0x10 , PCIE_LNK_X32 = 0x20 , PCIE_LNK_WIDTH_UNKNOWN = 0xFF , } 
pcie_get_minimum_link int pcie_get_minimum_link ( s#pci_dev * , e#pci_bus_speed * , e#pcie_link_width * ) 
pci_device_is_present t#bool pci_device_is_present ( s#pci_dev * ) 
pci_fixup_cardbus void pci_fixup_cardbus ( s#pci_bus * ) 
pci_reenable_device int pci_reenable_device ( s#pci_dev * ) 
pci_enable_device_io int pci_enable_device_io ( s#pci_dev * ) 
pci_enable_device_mem int pci_enable_device_mem ( s#pci_dev * ) 
pci_enable_device int pci_enable_device ( s#pci_dev * ) 
pcim_enable_device int pcim_enable_device ( s#pci_dev * ) 
pcim_pin_device void pcim_pin_device ( s#pci_dev * ) 
pci_disable_device void pci_disable_device ( s#pci_dev * ) 
pci_find_capability int pci_find_capability ( s#pci_dev * , int ) 
pci_bus_find_capability int pci_bus_find_capability ( s#pci_bus * , unsigned int , int ) 
pci_release_regions void pci_release_regions ( s#pci_dev * ) 
pci_request_regions int pci_request_regions ( s#pci_dev * , const char * ) 
pci_request_regions_exclusive int pci_request_regions_exclusive ( s#pci_dev * , const char * ) 
pci_release_region void pci_release_region ( s#pci_dev * , int ) 
pci_request_region int pci_request_region ( s#pci_dev * , int , const char * ) 
pci_request_region_exclusive int pci_request_region_exclusive ( s#pci_dev * , int , const char * ) 
pci_release_selected_regions void pci_release_selected_regions ( s#pci_dev * , int ) 
pci_request_selected_regions int pci_request_selected_regions ( s#pci_dev * , int , const char * ) 
pci_request_selected_regions_exclusive int pci_request_selected_regions_exclusive ( s#pci_dev * , int , const char * ) 
pci_set_master void pci_set_master ( s#pci_dev * ) 
pci_clear_master void pci_clear_master ( s#pci_dev * ) 
pci_set_mwi int pci_set_mwi ( s#pci_dev * ) 
pci_try_set_mwi int pci_try_set_mwi ( s#pci_dev * ) 
pci_clear_mwi void pci_clear_mwi ( s#pci_dev * ) 
pci_intx void pci_intx ( s#pci_dev * , int ) 
pci_assign_resource int pci_assign_resource ( s#pci_dev * , int ) 
pci_find_parent_resource s#resource * pci_find_parent_resource ( const s#pci_dev * , s#resource * ) 
pci_select_bars int pci_select_bars ( s#pci_dev * , unsigned long ) 
pci_set_power_state int pci_set_power_state ( s#pci_dev * , t#pci_power_t ) 
pci_save_state int pci_save_state ( s#pci_dev * ) 
pci_restore_state void pci_restore_state ( s#pci_dev * ) 
pci_pme_capable t#bool pci_pme_capable ( s#pci_dev * , t#pci_power_t ) 
pci_pme_active void pci_pme_active ( s#pci_dev * , t#bool ) 
pci_wake_from_d3 int pci_wake_from_d3 ( s#pci_dev * , t#bool ) 
pci_target_state t#pci_power_t pci_target_state ( s#pci_dev * ) 
pci_prepare_to_sleep int pci_prepare_to_sleep ( s#pci_dev * ) 
pci_back_from_sleep int pci_back_from_sleep ( s#pci_dev * ) 
e#pcie_reset_state enum pcie_reset_state { pcie_deassert_reset = ( pcie_reset_state_t ) 1 , pcie_warm_reset = ( pcie_reset_state_t ) 2 , pcie_hot_reset = ( pcie_reset_state_t ) 3 } 
pci_set_pcie_reset_state int pci_set_pcie_reset_state ( s#pci_dev * , e#pcie_reset_state ) 

/* drivers/pci/pci-driver.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_ats
pci_add_dynid int pci_add_dynid ( s#pci_driver * , unsigned int , unsigned int , unsigned int , unsigned int , unsigned int , unsigned int , unsigned long ) 
pci_match_id const s#pci_device_id * pci_match_id ( const s#pci_device_id * , s#pci_dev * ) 
__pci_register_driver int __pci_register_driver ( s#pci_driver * , s#module * , const char * ) 
pci_unregister_driver void pci_unregister_driver ( s#pci_driver * ) 
pci_dev_driver s#pci_driver * pci_dev_driver ( const s#pci_dev * ) 
pci_bus_type extern s#bus_type pci_bus_type 
pci_dev_get s#pci_dev * pci_dev_get ( s#pci_dev * ) 
pci_dev_put void pci_dev_put ( s#pci_dev * ) 

/* drivers/pci/pcie/aer/aerdrv.o */
aer_irq t#irqreturn_t aer_irq ( int , void * ) 

/* drivers/pci/pcie/aer/aerdrv_core.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
pci_enable_pcie_error_reporting int pci_enable_pcie_error_reporting ( s#pci_dev * ) 
pci_disable_pcie_error_reporting int pci_disable_pcie_error_reporting ( s#pci_dev * ) 
pci_cleanup_aer_uncorrect_error_status int pci_cleanup_aer_uncorrect_error_status ( s#pci_dev * ) 

/* drivers/pci/pcie/aspm.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_ats
pci_disable_link_state_locked void pci_disable_link_state_locked ( s#pci_dev * , int ) 
pci_disable_link_state void pci_disable_link_state ( s#pci_dev * , int ) 
pcie_aspm_enabled int pcie_aspm_enabled ( void ) 
pcie_aspm_support_enabled t#bool pcie_aspm_support_enabled ( void ) 

/* drivers/pci/pcie/portdrv_bus.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##subsys_private
s##iommu_group
s##iommu_ops
pcie_port_bus_type extern s#bus_type pcie_port_bus_type 

/* drivers/pci/pcie/portdrv_core.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_ats
s#pcie_device struct pcie_device { int irq ; s#pci_dev * port ; t#u32 service ; void * priv_data ; s#device device ; } 
s#pcie_port_service_driver struct pcie_port_service_driver { const char * name ; int ( * probe ) ( s#pcie_device * ) ; void ( * remove ) ( s#pcie_device * ) ; int ( * suspend ) ( s#pcie_device * ) ; int ( * resume ) ( s#pcie_device * ) ; const s#pci_error_handlers * err_handler ; t#pci_ers_result_t ( * reset_link ) ( s#pci_dev * ) ; int port_type ; t#u32 service ; s#device_driver driver ; } 
pcie_port_service_register int pcie_port_service_register ( s#pcie_port_service_driver * ) 
pcie_port_service_unregister void pcie_port_service_unregister ( s#pcie_port_service_driver * ) 

/* drivers/pci/probe.o */
pci_root_buses extern s#list_head pci_root_buses 
no_pci_devices int no_pci_devices ( void ) 
s##proc_dir_entry
s##hotplug_slot
s##sock
s##sysfs_dirent
s##device_private
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##subsys_private
s##iommu_group
s##iommu_ops
s##driver_private
s##pcie_link_state
s##pci_ats
s##msi_chip
pcie_update_link_speed void pcie_update_link_speed ( s#pci_bus * , t#u16 ) 
pci_alloc_dev s#pci_dev * pci_alloc_dev ( s#pci_bus * ) 
alloc_pci_dev s#pci_dev * __attribute__ ( ( deprecated ) ) alloc_pci_dev ( void ) 
pci_bus_read_dev_vendor_id t#bool pci_bus_read_dev_vendor_id ( s#pci_bus * , int , t#u32 * , int ) 
pci_scan_single_device s#pci_dev * pci_scan_single_device ( s#pci_bus * , int ) 
pcie_bus_configure_settings void pcie_bus_configure_settings ( s#pci_bus * ) 
pci_scan_root_bus s#pci_bus * pci_scan_root_bus ( s#device * , int , s#pci_ops * , void * , s#list_head * ) 
pci_scan_bus_parented s#pci_bus * pci_scan_bus_parented ( s#device * , int , s#pci_ops * , void * ) 
pci_scan_bus s#pci_bus * pci_scan_bus ( int , s#pci_ops * , void * ) 
pci_rescan_bus unsigned int pci_rescan_bus ( s#pci_bus * ) 
pci_add_new_bus s#pci_bus * pci_add_new_bus ( s#pci_bus * , s#pci_dev * , int ) 
pci_scan_slot int pci_scan_slot ( s#pci_bus * , int ) 
pci_scan_bridge int pci_scan_bridge ( s#pci_bus * , s#pci_dev * , int , int ) 
pci_scan_child_bus unsigned int pci_scan_child_bus ( s#pci_bus * ) 

/* drivers/pci/quirks.o */
xen_pvonhvm_unplug extern int xen_pvonhvm_unplug 
e#pci_fixup_pass enum pci_fixup_pass { pci_fixup_early , pci_fixup_header , pci_fixup_final , pci_fixup_enable , pci_fixup_resume , pci_fixup_suspend , pci_fixup_resume_early , } 
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_ats
pci_fixup_device void pci_fixup_device ( e#pci_fixup_pass , s#pci_dev * ) 

/* drivers/pci/remove.o */
s##proc_dir_entry
s##hotplug_slot
s##sock
s##sysfs_dirent
s##device_private
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##subsys_private
s##iommu_group
s##iommu_ops
s##driver_private
s##pcie_link_state
s##pci_ats
s##msi_chip
pci_remove_bus void pci_remove_bus ( s#pci_bus * ) 
pci_stop_and_remove_bus_device void pci_stop_and_remove_bus_device ( s#pci_dev * ) 

/* drivers/pci/rom.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_ats
pci_map_rom void * pci_map_rom ( s#pci_dev * , t#size_t * ) 
pci_unmap_rom void pci_unmap_rom ( s#pci_dev * , void * ) 
pci_enable_rom int pci_enable_rom ( s#pci_dev * ) 
pci_disable_rom void pci_disable_rom ( s#pci_dev * ) 
pci_platform_rom void * pci_platform_rom ( s#pci_dev * , t#size_t * ) 

/* drivers/pci/search.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
pci_bus_sem extern s#rw_semaphore pci_bus_sem 
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_ats
pci_get_domain_bus_and_slot s#pci_dev * pci_get_domain_bus_and_slot ( int , unsigned int , unsigned int ) 
pci_dev_present int pci_dev_present ( const s#pci_device_id * ) 
pci_find_bus s#pci_bus * pci_find_bus ( int , int ) 
pci_find_next_bus s#pci_bus * pci_find_next_bus ( const s#pci_bus * ) 
pci_get_device s#pci_dev * pci_get_device ( unsigned int , unsigned int , s#pci_dev * ) 
pci_get_subsys s#pci_dev * pci_get_subsys ( unsigned int , unsigned int , unsigned int , unsigned int , s#pci_dev * ) 
pci_get_slot s#pci_dev * pci_get_slot ( s#pci_bus * , unsigned int ) 
pci_get_class s#pci_dev * pci_get_class ( unsigned int , s#pci_dev * ) 

/* drivers/pci/setup-bus.o */
s##proc_dir_entry
s##hotplug_slot
s##sock
s##sysfs_dirent
s##device_private
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##subsys_private
s##iommu_group
s##iommu_ops
s##driver_private
s##pcie_link_state
s##pci_ats
s##msi_chip
pci_setup_cardbus void pci_setup_cardbus ( s#pci_bus * ) 
pci_bus_size_bridges void pci_bus_size_bridges ( s#pci_bus * ) 
pci_bus_assign_resources void pci_bus_assign_resources ( const s#pci_bus * ) 
pci_assign_unassigned_bridge_resources void pci_assign_unassigned_bridge_resources ( s#pci_dev * ) 

/* drivers/pci/setup-res.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_ats
pci_claim_resource int pci_claim_resource ( s#pci_dev * , int ) 

/* drivers/pci/slot.o */
s##sock
s##sysfs_dirent
pci_slots_kset extern s#kset * pci_slots_kset 
s##proc_dir_entry
s##device_private
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##subsys_private
s##iommu_group
s##iommu_ops
s##driver_private
s##pcie_link_state
s##pci_ats
s##msi_chip
s##hotplug_slot
pci_create_slot s#pci_slot * pci_create_slot ( s#pci_bus * , int , const char * , s#hotplug_slot * ) 
pci_renumber_slot void pci_renumber_slot ( s#pci_slot * , int ) 
pci_destroy_slot void pci_destroy_slot ( s#pci_slot * ) 
pci_hp_create_module_link void pci_hp_create_module_link ( s#pci_slot * ) 
pci_hp_remove_module_link void pci_hp_remove_module_link ( s#pci_slot * ) 

/* drivers/pci/vpd.o */
pci_vpd_find_tag int pci_vpd_find_tag ( const t#u8 * , unsigned int , unsigned int , t#u8 ) 
pci_vpd_find_info_keyword int pci_vpd_find_info_keyword ( const t#u8 * , unsigned int , unsigned int , const char * ) 

/* drivers/power/power_supply_core.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
power_supply_class extern s#class * power_supply_class 
e#power_supply_type enum power_supply_type { POWER_SUPPLY_TYPE_UNKNOWN = 0 , POWER_SUPPLY_TYPE_BATTERY , POWER_SUPPLY_TYPE_UPS , POWER_SUPPLY_TYPE_MAINS , POWER_SUPPLY_TYPE_USB , POWER_SUPPLY_TYPE_USB_DCP , POWER_SUPPLY_TYPE_USB_CDP , POWER_SUPPLY_TYPE_USB_ACA , } 
e#power_supply_property enum power_supply_property { POWER_SUPPLY_PROP_STATUS = 0 , POWER_SUPPLY_PROP_CHARGE_TYPE , POWER_SUPPLY_PROP_HEALTH , POWER_SUPPLY_PROP_PRESENT , POWER_SUPPLY_PROP_ONLINE , POWER_SUPPLY_PROP_AUTHENTIC , POWER_SUPPLY_PROP_TECHNOLOGY , POWER_SUPPLY_PROP_CYCLE_COUNT , POWER_SUPPLY_PROP_VOLTAGE_MAX , POWER_SUPPLY_PROP_VOLTAGE_MIN , POWER_SUPPLY_PROP_VOLTAGE_MAX_DESIGN , POWER_SUPPLY_PROP_VOLTAGE_MIN_DESIGN , POWER_SUPPLY_PROP_VOLTAGE_NOW , POWER_SUPPLY_PROP_VOLTAGE_AVG , POWER_SUPPLY_PROP_VOLTAGE_OCV , POWER_SUPPLY_PROP_CURRENT_MAX , POWER_SUPPLY_PROP_CURRENT_NOW , POWER_SUPPLY_PROP_CURRENT_AVG , POWER_SUPPLY_PROP_POWER_NOW , POWER_SUPPLY_PROP_POWER_AVG , POWER_SUPPLY_PROP_CHARGE_FULL_DESIGN , POWER_SUPPLY_PROP_CHARGE_EMPTY_DESIGN , POWER_SUPPLY_PROP_CHARGE_FULL , POWER_SUPPLY_PROP_CHARGE_EMPTY , POWER_SUPPLY_PROP_CHARGE_NOW , POWER_SUPPLY_PROP_CHARGE_AVG , POWER_SUPPLY_PROP_CHARGE_COUNTER , POWER_SUPPLY_PROP_CONSTANT_CHARGE_CURRENT , POWER_SUPPLY_PROP_CONSTANT_CHARGE_CURRENT_MAX , POWER_SUPPLY_PROP_CONSTANT_CHARGE_VOLTAGE , POWER_SUPPLY_PROP_CONSTANT_CHARGE_VOLTAGE_MAX , POWER_SUPPLY_PROP_CHARGE_CONTROL_LIMIT , POWER_SUPPLY_PROP_CHARGE_CONTROL_LIMIT_MAX , POWER_SUPPLY_PROP_ENERGY_FULL_DESIGN , POWER_SUPPLY_PROP_ENERGY_EMPTY_DESIGN , POWER_SUPPLY_PROP_ENERGY_FULL , POWER_SUPPLY_PROP_ENERGY_EMPTY , POWER_SUPPLY_PROP_ENERGY_NOW , POWER_SUPPLY_PROP_ENERGY_AVG , POWER_SUPPLY_PROP_CAPACITY , POWER_SUPPLY_PROP_CAPACITY_ALERT_MIN , POWER_SUPPLY_PROP_CAPACITY_ALERT_MAX , POWER_SUPPLY_PROP_CAPACITY_LEVEL , POWER_SUPPLY_PROP_TEMP , POWER_SUPPLY_PROP_TEMP_ALERT_MIN , POWER_SUPPLY_PROP_TEMP_ALERT_MAX , POWER_SUPPLY_PROP_TEMP_AMBIENT , POWER_SUPPLY_PROP_TEMP_AMBIENT_ALERT_MIN , POWER_SUPPLY_PROP_TEMP_AMBIENT_ALERT_MAX , POWER_SUPPLY_PROP_TIME_TO_EMPTY_NOW , POWER_SUPPLY_PROP_TIME_TO_EMPTY_AVG , POWER_SUPPLY_PROP_TIME_TO_FULL_NOW , POWER_SUPPLY_PROP_TIME_TO_FULL_AVG , POWER_SUPPLY_PROP_TYPE , POWER_SUPPLY_PROP_SCOPE , POWER_SUPPLY_PROP_MODEL_NAME , POWER_SUPPLY_PROP_MANUFACTURER , POWER_SUPPLY_PROP_SERIAL_NUMBER , } 
u#power_supply_propval union power_supply_propval { int intval ; const char * strval ; } 
s#thermal_attr struct thermal_attr { s#device_attribute attr ; char name [ 20 ] ; } 
s#thermal_cooling_device_ops struct thermal_cooling_device_ops { int ( * get_max_state ) ( s#thermal_cooling_device * , unsigned long * ) ; int ( * get_cur_state ) ( s#thermal_cooling_device * , unsigned long * ) ; int ( * set_cur_state ) ( s#thermal_cooling_device * , unsigned long ) ; } 
s#thermal_cooling_device struct thermal_cooling_device { int id ; char type [ 20 ] ; s#device device ; void * devdata ; const s#thermal_cooling_device_ops * ops ; t#bool updated ; s#mutex lock ; s#list_head thermal_instances ; s#list_head node ; } 
e#thermal_device_mode enum thermal_device_mode { THERMAL_DEVICE_DISABLED = 0 , THERMAL_DEVICE_ENABLED , } 
e#thermal_trip_type enum thermal_trip_type { THERMAL_TRIP_ACTIVE = 0 , THERMAL_TRIP_PASSIVE , THERMAL_TRIP_HOT , THERMAL_TRIP_CRITICAL , } 
e#thermal_trend enum thermal_trend { THERMAL_TREND_STABLE , THERMAL_TREND_RAISING , THERMAL_TREND_DROPPING , THERMAL_TREND_RAISE_FULL , THERMAL_TREND_DROP_FULL , } 
s#thermal_zone_device_ops struct thermal_zone_device_ops { int ( * bind ) ( s#thermal_zone_device * , s#thermal_cooling_device * ) ; int ( * unbind ) ( s#thermal_zone_device * , s#thermal_cooling_device * ) ; int ( * get_temp ) ( s#thermal_zone_device * , unsigned long * ) ; int ( * get_mode ) ( s#thermal_zone_device * , e#thermal_device_mode * ) ; int ( * set_mode ) ( s#thermal_zone_device * , e#thermal_device_mode ) ; int ( * get_trip_type ) ( s#thermal_zone_device * , int , e#thermal_trip_type * ) ; int ( * get_trip_temp ) ( s#thermal_zone_device * , int , unsigned long * ) ; int ( * set_trip_temp ) ( s#thermal_zone_device * , int , unsigned long ) ; int ( * get_trip_hyst ) ( s#thermal_zone_device * , int , unsigned long * ) ; int ( * set_trip_hyst ) ( s#thermal_zone_device * , int , unsigned long ) ; int ( * get_crit_temp ) ( s#thermal_zone_device * , unsigned long * ) ; int ( * set_emul_temp ) ( s#thermal_zone_device * , unsigned long ) ; int ( * get_trend ) ( s#thermal_zone_device * , int , e#thermal_trend * ) ; int ( * notify ) ( s#thermal_zone_device * , int , e#thermal_trip_type ) ; } 
s#thermal_bind_params struct thermal_bind_params { s#thermal_cooling_device * cdev ; int weight ; int trip_mask ; unsigned long * binding_limits ; int ( * match ) ( s#thermal_zone_device * , s#thermal_cooling_device * ) ; } 
s#thermal_zone_params struct thermal_zone_params { char governor_name [ 20 ] ; t#bool no_hwmon ; int num_tbps ; s#thermal_bind_params * tbp ; } 
s#thermal_governor struct thermal_governor { char name [ 20 ] ; int ( * throttle ) ( s#thermal_zone_device * , int ) ; s#list_head governor_list ; } 
s##workqueue_struct
s#thermal_zone_device struct thermal_zone_device { int id ; char type [ 20 ] ; s#device device ; s#thermal_attr * trip_temp_attrs ; s#thermal_attr * trip_type_attrs ; s#thermal_attr * trip_hyst_attrs ; void * devdata ; int trips ; int passive_delay ; int polling_delay ; int temperature ; int last_temperature ; int emul_temperature ; int passive ; unsigned int forced_passive ; const s#thermal_zone_device_ops * ops ; const s#thermal_zone_params * tzp ; s#thermal_governor * governor ; s#list_head thermal_instances ; s#idr idr ; s#mutex lock ; s#list_head node ; s#delayed_work poll_queue ; } 
s#power_supply struct power_supply { const char * name ; e#power_supply_type type ; e#power_supply_property * properties ; t#size_t num_properties ; char * * supplied_to ; t#size_t num_supplicants ; char * * supplied_from ; t#size_t num_supplies ; s#device_node * of_node ; int ( * get_property ) ( s#power_supply * , e#power_supply_property , u#power_supply_propval * ) ; int ( * set_property ) ( s#power_supply * , e#power_supply_property , const u#power_supply_propval * ) ; int ( * property_is_writeable ) ( s#power_supply * , e#power_supply_property ) ; void ( * external_power_changed ) ( s#power_supply * ) ; void ( * set_charged ) ( s#power_supply * ) ; int use_for_apm ; s#device * dev ; s#work_struct changed_work ; t#spinlock_t changed_lock ; t#bool changed ; s#thermal_zone_device * tzd ; s#thermal_cooling_device * tcd ; s#led_trigger * charging_full_trig ; char * charging_full_trig_name ; s#led_trigger * charging_trig ; char * charging_trig_name ; s#led_trigger * full_trig ; char * full_trig_name ; s#led_trigger * online_trig ; char * online_trig_name ; s#led_trigger * charging_blink_full_solid_trig ; char * charging_blink_full_solid_trig_name ; } 
power_supply_changed extern void power_supply_changed ( s#power_supply * ) 
power_supply_am_i_supplied extern int power_supply_am_i_supplied ( s#power_supply * ) 
power_supply_is_system_supplied extern int power_supply_is_system_supplied ( void ) 
power_supply_set_battery_charged extern int power_supply_set_battery_charged ( s#power_supply * ) 
power_supply_get_by_name extern s#power_supply * power_supply_get_by_name ( const char * ) 
power_supply_powers extern int power_supply_powers ( s#power_supply * , s#device * ) 
power_supply_register extern int power_supply_register ( s#device * , s#power_supply * ) 
power_supply_unregister extern void power_supply_unregister ( s#power_supply * ) 

/* drivers/pps/kapi.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s#pps_source_info struct pps_source_info { char name [ 32 ] ; char path [ 32 ] ; int mode ; void ( * echo ) ( s#pps_device * , int , void * ) ; s#module * owner ; s#device * dev ; } 
s#pps_ktime struct pps_ktime { t#__s64 sec ; t#__s32 nsec ; t#__u32 flags ; } 
s#pps_kparams struct pps_kparams { int api_version ; int mode ; s#pps_ktime assert_off_tu ; s#pps_ktime clear_off_tu ; } 
s#pps_device struct pps_device { s#pps_source_info info ; s#pps_kparams params ; t#__u32 assert_sequence ; t#__u32 clear_sequence ; s#pps_ktime assert_tu ; s#pps_ktime clear_tu ; int current_mode ; unsigned int last_ev ; t#wait_queue_head_t queue ; unsigned int id ; void const * lookup_cookie ; s#cdev cdev ; s#device * dev ; s#fasync_struct * async_queue ; t#spinlock_t lock ; } 
pps_register_source extern s#pps_device * pps_register_source ( s#pps_source_info * , int ) 
pps_unregister_source extern void pps_unregister_source ( s#pps_device * ) 
s#pps_event_time struct pps_event_time { s#timespec ts_real ; } 
pps_event extern void pps_event ( s#pps_device * , s#pps_event_time * , int , void * ) 

/* drivers/pps/pps.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
pps_lookup_dev s#pps_device * pps_lookup_dev ( void const * ) 

/* drivers/ptp/ptp_clock.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##ring_buffer_iter
s#timex struct timex { unsigned int modes ; long offset ; long freq ; long maxerror ; long esterror ; int status ; long constant ; long precision ; long tolerance ; s#timeval time ; long tick ; long ppsfreq ; long jitter ; int shift ; long stabil ; long jitcnt ; long calcnt ; long errcnt ; long stbcnt ; int tai ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; } 
t#timer_t typedef t#__kernel_timer_t timer_t 
s#sigqueue struct sigqueue { s#list_head list ; int flags ; t#siginfo_t info ; s#user_struct * user ; } 
s#cpu_timer_list struct cpu_timer_list { s#list_head entry ; unsigned long long expires , incr ; s#task_struct * task ; int firing ; } 
e#alarmtimer_restart enum alarmtimer_restart { ALARMTIMER_NORESTART , ALARMTIMER_RESTART , } 
e#alarmtimer_type enum alarmtimer_type { ALARM_REALTIME , ALARM_BOOTTIME , ALARM_NUMTYPE , } 
s#alarm struct alarm { s#timerqueue_node node ; s#hrtimer timer ; e#alarmtimer_restart ( * function ) ( s#alarm * , t#ktime_t ) ; e#alarmtimer_type type ; int state ; void * data ; } 
s#k_itimer struct k_itimer { s#list_head list ; s#hlist_node t_hash ; t#spinlock_t it_lock ; t#clockid_t it_clock ; t#timer_t it_id ; int it_overrun ; int it_overrun_last ; int it_requeue_pending ; int it_sigev_notify ; s#signal_struct * it_signal ; union { s#pid * it_pid ; s#task_struct * it_process ; } ; s#sigqueue * sigq ; union { struct { s#hrtimer timer ; t#ktime_t interval ; } real ; s#cpu_timer_list cpu ; struct { unsigned int clock ; unsigned int node ; unsigned long incr ; unsigned long expires ; } mmtimer ; struct { s#alarm alarmtimer ; t#ktime_t interval ; } alarm ; s#callback_head rcu ; } it ; } 
s#itimerspec struct itimerspec { s#timespec it_interval ; s#timespec it_value ; } 
t#poll_table typedef s#poll_table_struct poll_table 
s#posix_clock_operations struct posix_clock_operations { s#module * owner ; int ( * clock_adjtime ) ( s#posix_clock * , s#timex * ) ; int ( * clock_gettime ) ( s#posix_clock * , s#timespec * ) ; int ( * clock_getres ) ( s#posix_clock * , s#timespec * ) ; int ( * clock_settime ) ( s#posix_clock * , const s#timespec * ) ; int ( * timer_create ) ( s#posix_clock * , s#k_itimer * ) ; int ( * timer_delete ) ( s#posix_clock * , s#k_itimer * ) ; void ( * timer_gettime ) ( s#posix_clock * , s#k_itimer * , s#itimerspec * ) ; int ( * timer_settime ) ( s#posix_clock * , s#k_itimer * , int , s#itimerspec * , s#itimerspec * ) ; int ( * fasync ) ( s#posix_clock * , int , s#file * , int ) ; long ( * ioctl ) ( s#posix_clock * , unsigned int , unsigned long ) ; int ( * mmap ) ( s#posix_clock * , s#vm_area_struct * ) ; int ( * open ) ( s#posix_clock * , t#fmode_t ) ; t#uint ( * poll ) ( s#posix_clock * , s#file * , t#poll_table * ) ; int ( * release ) ( s#posix_clock * ) ; t#ssize_t ( * read ) ( s#posix_clock * , t#uint , char * , t#size_t ) ; } 
s#posix_clock struct posix_clock { s#posix_clock_operations ops ; s#cdev cdev ; s#kref kref ; s#rw_semaphore rwsem ; t#bool zombie ; void ( * release ) ( s#posix_clock * ) ; } 
s#ptp_extts_request struct ptp_extts_request { unsigned int index ; unsigned int flags ; unsigned int rsv [ 2 ] ; } 
s#ptp_clock_time struct ptp_clock_time { t#__s64 sec ; t#__u32 nsec ; t#__u32 reserved ; } 
s#ptp_perout_request struct ptp_perout_request { s#ptp_clock_time start ; s#ptp_clock_time period ; unsigned int index ; unsigned int flags ; unsigned int rsv [ 4 ] ; } 
s#ptp_clock_request struct ptp_clock_request { enum { PTP_CLK_REQ_EXTTS , PTP_CLK_REQ_PEROUT , PTP_CLK_REQ_PPS , } type ; union { s#ptp_extts_request extts ; s#ptp_perout_request perout ; } ; } 
s#ptp_clock_info struct ptp_clock_info { s#module * owner ; char name [ 16 ] ; t#s32 max_adj ; int n_alarm ; int n_ext_ts ; int n_per_out ; int pps ; int ( * adjfreq ) ( s#ptp_clock_info * , t#s32 ) ; int ( * adjtime ) ( s#ptp_clock_info * , t#s64 ) ; int ( * gettime ) ( s#ptp_clock_info * , s#timespec * ) ; int ( * settime ) ( s#ptp_clock_info * , const s#timespec * ) ; int ( * enable ) ( s#ptp_clock_info * , s#ptp_clock_request * , int ) ; } 
s#ptp_extts_event struct ptp_extts_event { s#ptp_clock_time t ; unsigned int index ; unsigned int flags ; unsigned int rsv [ 2 ] ; } 
s#timestamp_event_queue struct timestamp_event_queue { s#ptp_extts_event buf [ 128 ] ; int head ; int tail ; t#spinlock_t lock ; } 
s#ptp_clock struct ptp_clock { s#posix_clock clock ; s#device * dev ; s#ptp_clock_info * info ; t#dev_t devid ; int index ; s#pps_device * pps_source ; long dialed_frequency ; s#timestamp_event_queue tsevq ; s#mutex tsevq_mux ; t#wait_queue_head_t tsev_wq ; int defunct ; } 
ptp_clock_register extern s#ptp_clock * ptp_clock_register ( s#ptp_clock_info * , s#device * ) 
ptp_clock_unregister extern int ptp_clock_unregister ( s#ptp_clock * ) 
s#ptp_clock_event struct ptp_clock_event { int type ; int index ; union { t#u64 timestamp ; s#pps_event_time pps_times ; } ; } 
ptp_clock_event extern void ptp_clock_event ( s#ptp_clock * , s#ptp_clock_event * ) 
ptp_clock_index extern int ptp_clock_index ( s#ptp_clock * ) 

/* drivers/pwm/core.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##proc_dir_entry
s##iommu_group
e#pwm_polarity enum pwm_polarity { PWM_POLARITY_NORMAL , PWM_POLARITY_INVERSED , } 
s#pwm_ops struct pwm_ops { int ( * request ) ( s#pwm_chip * , s#pwm_device * ) ; void ( * free ) ( s#pwm_chip * , s#pwm_device * ) ; int ( * config ) ( s#pwm_chip * , s#pwm_device * , int , int ) ; int ( * set_polarity ) ( s#pwm_chip * , s#pwm_device * , e#pwm_polarity ) ; int ( * enable ) ( s#pwm_chip * , s#pwm_device * ) ; void ( * disable ) ( s#pwm_chip * , s#pwm_device * ) ; void ( * dbg_show ) ( s#pwm_chip * , s#seq_file * ) ; s#module * owner ; } 
s#pwm_chip struct pwm_chip { s#device * dev ; s#list_head list ; const s#pwm_ops * ops ; int base ; unsigned int npwm ; s#pwm_device * pwms ; s#pwm_device * ( * of_xlate ) ( s#pwm_chip * , const s#of_phandle_args * ) ; unsigned int of_pwm_n_cells ; t#bool can_sleep ; } 
s#pwm_device struct pwm_device { const char * label ; unsigned long flags ; unsigned int hwpwm ; unsigned int pwm ; s#pwm_chip * chip ; void * chip_data ; unsigned int period ; unsigned int duty_cycle ; e#pwm_polarity polarity ; } 
of_pwm_xlate_with_flags s#pwm_device * of_pwm_xlate_with_flags ( s#pwm_chip * , const s#of_phandle_args * ) 
pwm_set_chip_data int pwm_set_chip_data ( s#pwm_device * , void * ) 
pwm_get_chip_data void * pwm_get_chip_data ( s#pwm_device * ) 
pwmchip_add int pwmchip_add ( s#pwm_chip * ) 
pwmchip_remove int pwmchip_remove ( s#pwm_chip * ) 
pwm_request s#pwm_device * pwm_request ( int , const char * ) 
pwm_request_from_chip s#pwm_device * pwm_request_from_chip ( s#pwm_chip * , unsigned int , const char * ) 
pwm_free void pwm_free ( s#pwm_device * ) 
pwm_config int pwm_config ( s#pwm_device * , int , int ) 
pwm_set_polarity int pwm_set_polarity ( s#pwm_device * , e#pwm_polarity ) 
pwm_enable int pwm_enable ( s#pwm_device * ) 
pwm_disable void pwm_disable ( s#pwm_device * ) 
of_pwm_get s#pwm_device * of_pwm_get ( s#device_node * , const char * ) 
pwm_get s#pwm_device * pwm_get ( s#device * , const char * ) 
pwm_put void pwm_put ( s#pwm_device * ) 
devm_pwm_get s#pwm_device * devm_pwm_get ( s#device * , const char * ) 
devm_of_pwm_get s#pwm_device * devm_of_pwm_get ( s#device * , s#device_node * , const char * ) 
devm_pwm_put void devm_pwm_put ( s#device * , s#pwm_device * ) 
pwm_can_sleep t#bool pwm_can_sleep ( s#pwm_device * ) 

/* drivers/rapidio/rio.o */
s#rio_msg struct rio_msg { s#resource * res ; void ( * mcback ) ( s#rio_mport * , void * , int , int ) ; } 
s#rio_ops struct rio_ops { int ( * lcread ) ( s#rio_mport * , int , t#u32 , int , t#u32 * ) ; int ( * lcwrite ) ( s#rio_mport * , int , t#u32 , int , t#u32 ) ; int ( * cread ) ( s#rio_mport * , int , t#u16 , t#u8 , t#u32 , int , t#u32 * ) ; int ( * cwrite ) ( s#rio_mport * , int , t#u16 , t#u8 , t#u32 , int , t#u32 ) ; int ( * dsend ) ( s#rio_mport * , int , t#u16 , t#u16 ) ; int ( * pwenable ) ( s#rio_mport * , int ) ; int ( * open_outb_mbox ) ( s#rio_mport * , void * , int , int ) ; void ( * close_outb_mbox ) ( s#rio_mport * , int ) ; int ( * open_inb_mbox ) ( s#rio_mport * , void * , int , int ) ; void ( * close_inb_mbox ) ( s#rio_mport * , int ) ; int ( * add_outb_message ) ( s#rio_mport * , s#rio_dev * , int , void * , t#size_t ) ; int ( * add_inb_buffer ) ( s#rio_mport * , int , void * ) ; void * ( * get_inb_message ) ( s#rio_mport * , int ) ; int ( * map_inb ) ( s#rio_mport * , t#dma_addr_t , t#u64 , t#u32 , t#u32 ) ; void ( * unmap_inb ) ( s#rio_mport * , t#dma_addr_t ) ; } 
e#rio_phy_type enum rio_phy_type { RIO_PHY_PARALLEL , RIO_PHY_SERIAL , } 
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s#rio_scan struct rio_scan { s#module * owner ; int ( * enumerate ) ( s#rio_mport * , t#u32 ) ; int ( * discover ) ( s#rio_mport * , t#u32 ) ; } 
s#rio_mport struct rio_mport { s#list_head dbells ; s#list_head node ; s#list_head nnode ; s#resource iores ; s#resource riores [ 16 ] ; s#rio_msg inb_msg [ 4 ] ; s#rio_msg outb_msg [ 4 ] ; int host_deviceid ; s#rio_ops * ops ; unsigned char id ; unsigned char index ; unsigned int sys_size ; e#rio_phy_type phy_type ; t#u32 phys_efptr ; unsigned char name [ 40 ] ; void * priv ; s#dma_device dma ; s#rio_scan * nscan ; } 
s#rio_id_table struct rio_id_table { t#u16 start ; t#u32 max ; t#spinlock_t lock ; unsigned long * table ; } 
s#rio_net struct rio_net { s#list_head node ; s#list_head devices ; s#list_head switches ; s#list_head mports ; s#rio_mport * hport ; unsigned char id ; s#rio_id_table destid_table ; } 
s#rio_device_id struct rio_device_id { t#__u16 did , vid ; t#__u16 asm_did , asm_vid ; } 
s#rio_driver struct rio_driver { s#list_head node ; char * name ; const s#rio_device_id * id_table ; int ( * probe ) ( s#rio_dev * , const s#rio_device_id * ) ; void ( * remove ) ( s#rio_dev * ) ; int ( * suspend ) ( s#rio_dev * , t#u32 ) ; int ( * resume ) ( s#rio_dev * ) ; int ( * enable_wake ) ( s#rio_dev * , t#u32 , int ) ; s#device_driver driver ; } 
u#rio_pw_msg union rio_pw_msg { struct { t#u32 comptag ; t#u32 errdetect ; t#u32 is_port ; t#u32 ltlerrdet ; t#u32 padding [ 12 ] ; } em ; t#u32 raw [ 64 / sizeof ( u32 ) ] ; } 
s#rio_switch_ops struct rio_switch_ops { s#module * owner ; int ( * add_entry ) ( s#rio_mport * , t#u16 , t#u8 , t#u16 , t#u16 , t#u8 ) ; int ( * get_entry ) ( s#rio_mport * , t#u16 , t#u8 , t#u16 , t#u16 , t#u8 * ) ; int ( * clr_table ) ( s#rio_mport * , t#u16 , t#u8 , t#u16 ) ; int ( * set_domain ) ( s#rio_mport * , t#u16 , t#u8 , t#u8 ) ; int ( * get_domain ) ( s#rio_mport * , t#u16 , t#u8 , t#u8 * ) ; int ( * em_init ) ( s#rio_dev * ) ; int ( * em_handle ) ( s#rio_dev * , t#u8 ) ; } 
s#rio_switch struct rio_switch { s#list_head node ; t#u8 * route_table ; t#u32 port_ok ; s#rio_switch_ops * ops ; t#spinlock_t lock ; s#rio_dev * nextdev [ 0 ] ; } 
s#rio_dev struct rio_dev { s#list_head global_list ; s#list_head net_list ; s#rio_net * net ; t#bool do_enum ; t#u16 did ; t#u16 vid ; t#u32 device_rev ; t#u16 asm_did ; t#u16 asm_vid ; t#u16 asm_rev ; t#u16 efptr ; t#u32 pef ; t#u32 swpinfo ; t#u32 src_ops ; t#u32 dst_ops ; t#u32 comp_tag ; t#u32 phys_efptr ; t#u32 em_efptr ; t#u64 dma_mask ; s#rio_driver * driver ; s#device dev ; s#resource riores [ 16 ] ; int ( * pwcback ) ( s#rio_dev * , u#rio_pw_msg * , int ) ; t#u16 destid ; t#u8 hopcount ; s#rio_dev * prev ; s#rio_switch rswitch [ 0 ] ; } 
rio_add_device extern int rio_add_device ( s#rio_dev * ) 
rio_request_inb_pwrite extern int rio_request_inb_pwrite ( s#rio_dev * , int ( * ) ( s#rio_dev * , u#rio_pw_msg * , int ) ) 
rio_release_inb_pwrite extern int rio_release_inb_pwrite ( s#rio_dev * ) 
rio_map_inb_region extern int rio_map_inb_region ( s#rio_mport * , t#dma_addr_t , t#u64 , t#u32 , t#u32 ) 
rio_unmap_inb_region extern void rio_unmap_inb_region ( s#rio_mport * , t#dma_addr_t ) 
rio_mport_get_physefb extern t#u32 rio_mport_get_physefb ( s#rio_mport * , int , t#u16 , t#u8 ) 
rio_get_comptag extern s#rio_dev * rio_get_comptag ( t#u32 , s#rio_dev * ) 
rio_set_port_lockout extern int rio_set_port_lockout ( s#rio_dev * , t#u32 , int ) 
rio_enable_rx_tx_port extern int rio_enable_rx_tx_port ( s#rio_mport * , int , t#u16 , t#u8 , t#u8 ) 
rio_mport_chk_dev_access extern int rio_mport_chk_dev_access ( s#rio_mport * , t#u16 , t#u8 ) 
rio_inb_pwrite_handler extern int rio_inb_pwrite_handler ( u#rio_pw_msg * ) 
rio_mport_get_efb extern t#u32 rio_mport_get_efb ( s#rio_mport * , int , t#u16 , t#u8 , t#u32 ) 
rio_mport_get_feature extern t#u32 rio_mport_get_feature ( s#rio_mport * , int , t#u16 , t#u8 , int ) 
rio_lock_device extern int rio_lock_device ( s#rio_mport * , t#u16 , t#u8 , int ) 
rio_unlock_device extern int rio_unlock_device ( s#rio_mport * , t#u16 , t#u8 ) 
rio_route_add_entry extern int rio_route_add_entry ( s#rio_dev * , t#u16 , t#u16 , t#u8 , int ) 
rio_route_get_entry extern int rio_route_get_entry ( s#rio_dev * , t#u16 , t#u16 , t#u8 * , int ) 
rio_route_clr_table extern int rio_route_clr_table ( s#rio_dev * , t#u16 , int ) 
rio_request_dma extern s#dma_chan * rio_request_dma ( s#rio_dev * ) 
rio_release_dma extern void rio_release_dma ( s#dma_chan * ) 
e#rio_write_type enum rio_write_type { RDW_DEFAULT , RDW_ALL_NWRITE , RDW_ALL_NWRITE_R , RDW_LAST_NWRITE_R , } 
s#rio_dma_data struct rio_dma_data { s#scatterlist * sg ; unsigned int sg_len ; t#u64 rio_addr ; t#u8 rio_addr_u ; e#rio_write_type wr_type ; } 
rio_dma_prep_slave_sg extern s#dma_async_tx_descriptor * rio_dma_prep_slave_sg ( s#rio_dev * , s#dma_chan * , s#rio_dma_data * , e#dma_transfer_direction , unsigned long ) 
rio_register_scan extern int rio_register_scan ( int , s#rio_scan * ) 
rio_unregister_scan extern int rio_unregister_scan ( int , s#rio_scan * ) 
rio_register_mport extern int rio_register_mport ( s#rio_mport * ) 
rio_local_get_device_id extern t#u16 rio_local_get_device_id ( s#rio_mport * ) 
rio_get_device extern s#rio_dev * rio_get_device ( t#u16 , t#u16 , s#rio_dev * ) 
rio_get_asm extern s#rio_dev * rio_get_asm ( t#u16 , t#u16 , t#u16 , t#u16 , s#rio_dev * ) 
rio_request_inb_dbell extern int rio_request_inb_dbell ( s#rio_mport * , void * , t#u16 , t#u16 , void ( * ) ( s#rio_mport * , void * , t#u16 , t#u16 , t#u16 ) ) 
rio_release_inb_dbell extern int rio_release_inb_dbell ( s#rio_mport * , t#u16 , t#u16 ) 
rio_request_outb_dbell extern s#resource * rio_request_outb_dbell ( s#rio_dev * , t#u16 , t#u16 ) 
rio_release_outb_dbell extern int rio_release_outb_dbell ( s#rio_dev * , s#resource * ) 
rio_request_inb_mbox extern int rio_request_inb_mbox ( s#rio_mport * , void * , int , int , void ( * ) ( s#rio_mport * , void * , int , int ) ) 
rio_release_inb_mbox extern int rio_release_inb_mbox ( s#rio_mport * , int ) 
rio_request_outb_mbox extern int rio_request_outb_mbox ( s#rio_mport * , void * , int , int , void ( * ) ( s#rio_mport * , void * , int , int ) ) 
rio_release_outb_mbox extern int rio_release_outb_mbox ( s#rio_mport * , int ) 
rio_init_mports extern int rio_init_mports ( void ) 

/* drivers/rapidio/rio-access.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##subsys_private
s##iommu_group
s##iommu_ops
s##driver_private
__rio_local_read_config_8 int __rio_local_read_config_8 ( s#rio_mport * , t#u32 , t#u8 * ) 
__rio_local_read_config_16 int __rio_local_read_config_16 ( s#rio_mport * , t#u32 , t#u16 * ) 
__rio_local_read_config_32 int __rio_local_read_config_32 ( s#rio_mport * , t#u32 , t#u32 * ) 
__rio_local_write_config_8 int __rio_local_write_config_8 ( s#rio_mport * , t#u32 , t#u8 ) 
__rio_local_write_config_16 int __rio_local_write_config_16 ( s#rio_mport * , t#u32 , t#u16 ) 
__rio_local_write_config_32 int __rio_local_write_config_32 ( s#rio_mport * , t#u32 , t#u32 ) 
rio_mport_read_config_8 int rio_mport_read_config_8 ( s#rio_mport * , t#u16 , t#u8 , t#u32 , t#u8 * ) 
rio_mport_read_config_16 int rio_mport_read_config_16 ( s#rio_mport * , t#u16 , t#u8 , t#u32 , t#u16 * ) 
rio_mport_read_config_32 int rio_mport_read_config_32 ( s#rio_mport * , t#u16 , t#u8 , t#u32 , t#u32 * ) 
rio_mport_write_config_8 int rio_mport_write_config_8 ( s#rio_mport * , t#u16 , t#u8 , t#u32 , t#u8 ) 
rio_mport_write_config_16 int rio_mport_write_config_16 ( s#rio_mport * , t#u16 , t#u8 , t#u32 , t#u16 ) 
rio_mport_write_config_32 int rio_mport_write_config_32 ( s#rio_mport * , t#u16 , t#u8 , t#u32 , t#u32 ) 
rio_mport_send_doorbell int rio_mport_send_doorbell ( s#rio_mport * , t#u16 , t#u16 ) 

/* drivers/rapidio/rio-driver.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
rio_attach_device extern void rio_attach_device ( s#rio_dev * ) 
rio_register_driver int rio_register_driver ( s#rio_driver * ) 
rio_unregister_driver void rio_unregister_driver ( s#rio_driver * ) 
rio_bus_type extern s#bus_type rio_bus_type 
rio_dev_get s#rio_dev * rio_dev_get ( s#rio_dev * ) 
rio_dev_put void rio_dev_put ( s#rio_dev * ) 

/* drivers/rtc/class.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s#rtc_time struct rtc_time { int tm_sec ; int tm_min ; int tm_hour ; int tm_mday ; int tm_mon ; int tm_year ; int tm_wday ; int tm_yday ; int tm_isdst ; } 
s#rtc_wkalrm struct rtc_wkalrm { unsigned char enabled ; unsigned char pending ; s#rtc_time time ; } 
s#rtc_class_ops struct rtc_class_ops { int ( * open ) ( s#device * ) ; void ( * release ) ( s#device * ) ; int ( * ioctl ) ( s#device * , unsigned int , unsigned long ) ; int ( * read_time ) ( s#device * , s#rtc_time * ) ; int ( * set_time ) ( s#device * , s#rtc_time * ) ; int ( * read_alarm ) ( s#device * , s#rtc_wkalrm * ) ; int ( * set_alarm ) ( s#device * , s#rtc_wkalrm * ) ; int ( * proc ) ( s#device * , s#seq_file * ) ; int ( * set_mmss ) ( s#device * , unsigned long ) ; int ( * read_callback ) ( s#device * , int ) ; int ( * alarm_irq_enable ) ( s#device * , unsigned int ) ; } 
s#rtc_task struct rtc_task { void ( * func ) ( void * ) ; void * private_data ; } 
s#rtc_timer struct rtc_timer { s#rtc_task task ; s#timerqueue_node node ; t#ktime_t period ; int enabled ; } 
s#rtc_device struct rtc_device { s#device dev ; s#module * owner ; int id ; char name [ 20 ] ; const s#rtc_class_ops * ops ; s#mutex ops_lock ; s#cdev char_dev ; unsigned long flags ; unsigned long irq_data ; t#spinlock_t irq_lock ; t#wait_queue_head_t irq_queue ; s#fasync_struct * async_queue ; s#rtc_task * irq_task ; t#spinlock_t irq_task_lock ; int irq_freq ; int max_user_freq ; s#timerqueue_head timerqueue ; s#rtc_timer aie_timer ; s#rtc_timer uie_rtctimer ; s#hrtimer pie_timer ; int pie_enabled ; s#work_struct irqwork ; int uie_unsupported ; } 
rtc_device_register extern s#rtc_device * rtc_device_register ( const char * , s#device * , const s#rtc_class_ops * , s#module * ) 
rtc_device_unregister extern void rtc_device_unregister ( s#rtc_device * ) 
devm_rtc_device_register extern s#rtc_device * devm_rtc_device_register ( s#device * , const char * , const s#rtc_class_ops * , s#module * ) 
devm_rtc_device_unregister extern void devm_rtc_device_unregister ( s#device * , s#rtc_device * ) 

/* drivers/rtc/interface.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
rtc_read_time extern int rtc_read_time ( s#rtc_device * , s#rtc_time * ) 
rtc_set_time extern int rtc_set_time ( s#rtc_device * , s#rtc_time * ) 
rtc_set_mmss extern int rtc_set_mmss ( s#rtc_device * , unsigned long ) 
rtc_read_alarm extern int rtc_read_alarm ( s#rtc_device * , s#rtc_wkalrm * ) 
rtc_set_alarm extern int rtc_set_alarm ( s#rtc_device * , s#rtc_wkalrm * ) 
rtc_initialize_alarm extern int rtc_initialize_alarm ( s#rtc_device * , s#rtc_wkalrm * ) 
rtc_alarm_irq_enable extern int rtc_alarm_irq_enable ( s#rtc_device * , unsigned int ) 
rtc_update_irq_enable extern int rtc_update_irq_enable ( s#rtc_device * , unsigned int ) 
rtc_update_irq extern void rtc_update_irq ( s#rtc_device * , unsigned long , unsigned long ) 
rtc_class_open extern s#rtc_device * rtc_class_open ( const char * ) 
rtc_class_close extern void rtc_class_close ( s#rtc_device * ) 
rtc_irq_register extern int rtc_irq_register ( s#rtc_device * , s#rtc_task * ) 
rtc_irq_unregister extern void rtc_irq_unregister ( s#rtc_device * , s#rtc_task * ) 
rtc_irq_set_state extern int rtc_irq_set_state ( s#rtc_device * , s#rtc_task * , int ) 
rtc_irq_set_freq extern int rtc_irq_set_freq ( s#rtc_device * , s#rtc_task * , int ) 

/* drivers/rtc/rtc-lib.o */
rtc_month_days extern int rtc_month_days ( unsigned int , unsigned int ) 
rtc_year_days extern int rtc_year_days ( unsigned int , unsigned int , unsigned int ) 
rtc_time_to_tm extern void rtc_time_to_tm ( unsigned long , s#rtc_time * ) 
rtc_valid_tm extern int rtc_valid_tm ( s#rtc_time * ) 
rtc_tm_to_time extern int rtc_tm_to_time ( s#rtc_time * , unsigned long * ) 
rtc_tm_to_ktime t#ktime_t rtc_tm_to_ktime ( s#rtc_time ) 
rtc_ktime_to_tm s#rtc_time rtc_ktime_to_tm ( t#ktime_t ) 

/* drivers/scsi/constants.o */
__scsi_print_command extern void __scsi_print_command ( unsigned char * ) 
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##proc_dir_entry
s##scsi_transport_template
scsi_print_command extern void scsi_print_command ( s#scsi_cmnd * ) 
scsi_print_status extern void scsi_print_status ( unsigned char ) 
scsi_sense_key_string extern const char * scsi_sense_key_string ( unsigned char ) 
scsi_extd_sense_format extern const char * scsi_extd_sense_format ( unsigned char , unsigned char ) 
scsi_show_extd_sense extern void scsi_show_extd_sense ( unsigned char , unsigned char ) 
scsi_show_sense_hdr extern void scsi_show_sense_hdr ( s#scsi_sense_hdr * ) 
scsi_print_sense_hdr extern void scsi_print_sense_hdr ( const char * , s#scsi_sense_hdr * ) 
scsi_cmd_print_sense_hdr extern void scsi_cmd_print_sense_hdr ( s#scsi_cmnd * , const char * , s#scsi_sense_hdr * ) 
__scsi_print_sense extern void __scsi_print_sense ( const char * , const unsigned char * , int ) 
scsi_print_sense extern void scsi_print_sense ( char * , s#scsi_cmnd * ) 
scsi_show_result extern void scsi_show_result ( int ) 
scsi_print_result extern void scsi_print_result ( s#scsi_cmnd * ) 

/* drivers/scsi/cxgbi/libcxgbi.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s##scsi_transport_template
s#cxgbi_hba struct cxgbi_hba { s#net_device * ndev ; s#net_device * vdev ; s#Scsi_Host * shost ; s#cxgbi_device * cdev ; t#__be32 ipv4addr ; unsigned char port_id ; } 
s#iscsi_cls_session struct iscsi_cls_session { s#list_head sess_list ; s#iscsi_transport * transport ; t#spinlock_t lock ; s#work_struct block_work ; s#work_struct unblock_work ; s#work_struct scan_work ; s#work_struct unbind_work ; int recovery_tmo ; s#delayed_work recovery_work ; unsigned int target_id ; t#bool ida_used ; t#pid_t creator ; int state ; int sid ; void * dd_data ; s#device dev ; } 
s#iscsi_cls_conn struct iscsi_cls_conn { s#list_head conn_list ; void * dd_data ; s#iscsi_transport * transport ; t#uint32_t cid ; s#mutex ep_mutex ; s#iscsi_endpoint * ep ; s#device dev ; } 
s#iscsi_endpoint struct iscsi_endpoint { void * dd_data ; s#device dev ; t#uint64_t id ; s#iscsi_cls_conn * conn ; } 
e#iscsi_param enum iscsi_param { ISCSI_PARAM_MAX_RECV_DLENGTH , ISCSI_PARAM_MAX_XMIT_DLENGTH , ISCSI_PARAM_HDRDGST_EN , ISCSI_PARAM_DATADGST_EN , ISCSI_PARAM_INITIAL_R2T_EN , ISCSI_PARAM_MAX_R2T , ISCSI_PARAM_IMM_DATA_EN , ISCSI_PARAM_FIRST_BURST , ISCSI_PARAM_MAX_BURST , ISCSI_PARAM_PDU_INORDER_EN , ISCSI_PARAM_DATASEQ_INORDER_EN , ISCSI_PARAM_ERL , ISCSI_PARAM_IFMARKER_EN , ISCSI_PARAM_OFMARKER_EN , ISCSI_PARAM_EXP_STATSN , ISCSI_PARAM_TARGET_NAME , ISCSI_PARAM_TPGT , ISCSI_PARAM_PERSISTENT_ADDRESS , ISCSI_PARAM_PERSISTENT_PORT , ISCSI_PARAM_SESS_RECOVERY_TMO , ISCSI_PARAM_CONN_PORT , ISCSI_PARAM_CONN_ADDRESS , ISCSI_PARAM_USERNAME , ISCSI_PARAM_USERNAME_IN , ISCSI_PARAM_PASSWORD , ISCSI_PARAM_PASSWORD_IN , ISCSI_PARAM_FAST_ABORT , ISCSI_PARAM_ABORT_TMO , ISCSI_PARAM_LU_RESET_TMO , ISCSI_PARAM_HOST_RESET_TMO , ISCSI_PARAM_PING_TMO , ISCSI_PARAM_RECV_TMO , ISCSI_PARAM_IFACE_NAME , ISCSI_PARAM_ISID , ISCSI_PARAM_INITIATOR_NAME , ISCSI_PARAM_TGT_RESET_TMO , ISCSI_PARAM_TARGET_ALIAS , ISCSI_PARAM_CHAP_IN_IDX , ISCSI_PARAM_CHAP_OUT_IDX , ISCSI_PARAM_BOOT_ROOT , ISCSI_PARAM_BOOT_NIC , ISCSI_PARAM_BOOT_TARGET , ISCSI_PARAM_AUTO_SND_TGT_DISABLE , ISCSI_PARAM_DISCOVERY_SESS , ISCSI_PARAM_PORTAL_TYPE , ISCSI_PARAM_CHAP_AUTH_EN , ISCSI_PARAM_DISCOVERY_LOGOUT_EN , ISCSI_PARAM_BIDI_CHAP_EN , ISCSI_PARAM_DISCOVERY_AUTH_OPTIONAL , ISCSI_PARAM_DEF_TIME2WAIT , ISCSI_PARAM_DEF_TIME2RETAIN , ISCSI_PARAM_MAX_SEGMENT_SIZE , ISCSI_PARAM_STATSN , ISCSI_PARAM_KEEPALIVE_TMO , ISCSI_PARAM_LOCAL_PORT , ISCSI_PARAM_TSID , ISCSI_PARAM_DEF_TASKMGMT_TMO , ISCSI_PARAM_TCP_TIMESTAMP_STAT , ISCSI_PARAM_TCP_WSF_DISABLE , ISCSI_PARAM_TCP_NAGLE_DISABLE , ISCSI_PARAM_TCP_TIMER_SCALE , ISCSI_PARAM_TCP_TIMESTAMP_EN , ISCSI_PARAM_TCP_XMIT_WSF , ISCSI_PARAM_TCP_RECV_WSF , ISCSI_PARAM_IP_FRAGMENT_DISABLE , ISCSI_PARAM_IPV4_TOS , ISCSI_PARAM_IPV6_TC , ISCSI_PARAM_IPV6_FLOW_LABEL , ISCSI_PARAM_IS_FW_ASSIGNED_IPV6 , ISCSI_PARAM_DISCOVERY_PARENT_IDX , ISCSI_PARAM_DISCOVERY_PARENT_TYPE , ISCSI_PARAM_LOCAL_IPADDR , ISCSI_PARAM_MAX , } 
e#iscsi_host_param enum iscsi_host_param { ISCSI_HOST_PARAM_HWADDRESS , ISCSI_HOST_PARAM_INITIATOR_NAME , ISCSI_HOST_PARAM_NETDEV_NAME , ISCSI_HOST_PARAM_IPADDRESS , ISCSI_HOST_PARAM_PORT_STATE , ISCSI_HOST_PARAM_PORT_SPEED , ISCSI_HOST_PARAM_MAX , } 
s#scsi_lun struct scsi_lun { t#__u8 scsi_lun [ 8 ] ; } 
t#itt_t typedef t#uint32_t itt_t 
s#iscsi_hdr struct iscsi_hdr { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t rsvd2 [ 2 ] ; t#uint8_t hlength ; t#uint8_t dlength [ 3 ] ; s#scsi_lun lun ; t#itt_t itt ; t#__be32 ttt ; t#__be32 statsn ; t#__be32 exp_statsn ; t#__be32 max_statsn ; t#uint8_t other [ 12 ] ; } 
s#iscsi_stats_custom struct iscsi_stats_custom { char desc [ 64 ] ; t#uint64_t value ; } 
s#iscsi_stats struct iscsi_stats { t#uint64_t txdata_octets ; t#uint64_t rxdata_octets ; t#uint32_t noptx_pdus ; t#uint32_t scsicmd_pdus ; t#uint32_t tmfcmd_pdus ; t#uint32_t login_pdus ; t#uint32_t text_pdus ; t#uint32_t dataout_pdus ; t#uint32_t logout_pdus ; t#uint32_t snack_pdus ; t#uint32_t noprx_pdus ; t#uint32_t scsirsp_pdus ; t#uint32_t tmfrsp_pdus ; t#uint32_t textrsp_pdus ; t#uint32_t datain_pdus ; t#uint32_t logoutrsp_pdus ; t#uint32_t r2t_pdus ; t#uint32_t async_pdus ; t#uint32_t rjt_pdus ; t#uint32_t digest_err ; t#uint32_t timeout_err ; t#uint32_t custom_length ; s#iscsi_stats_custom custom [ 0 ] __attribute__ ( ( aligned ( sizeof ( uint64_t ) ) ) ) ; } 
s#iscsi_r2t_info struct iscsi_r2t_info { t#__be32 ttt ; t#__be32 exp_statsn ; t#uint32_t data_length ; t#uint32_t data_offset ; int data_count ; int datasn ; int sent ; } 
s#iscsi_pool struct iscsi_pool { s#kfifo queue ; void * * pool ; int max ; } 
s#iscsi_session struct iscsi_session { s#iscsi_cls_session * cls_session ; s#mutex eh_mutex ; t#uint32_t cmdsn ; t#uint32_t exp_cmdsn ; t#uint32_t max_cmdsn ; t#uint32_t queued_cmdsn ; int abort_timeout ; int lu_reset_timeout ; int tgt_reset_timeout ; int initial_r2t_en ; unsigned short max_r2t ; int imm_data_en ; unsigned first_burst ; unsigned max_burst ; int time2wait ; int time2retain ; int pdu_inorder_en ; int dataseq_inorder_en ; int erl ; int fast_abort ; int tpgt ; char * username ; char * username_in ; char * password ; char * password_in ; char * targetname ; char * targetalias ; char * ifacename ; char * initiatorname ; char * boot_root ; char * boot_nic ; char * boot_target ; char * portal_type ; char * discovery_parent_type ; t#uint16_t discovery_parent_idx ; t#uint16_t def_taskmgmt_tmo ; t#uint16_t tsid ; t#uint8_t auto_snd_tgt_disable ; t#uint8_t discovery_sess ; t#uint8_t chap_auth_en ; t#uint8_t discovery_logout_en ; t#uint8_t bidi_chap_en ; t#uint8_t discovery_auth_optional ; t#uint8_t isid [ 6 ] ; s#iscsi_transport * tt ; s#Scsi_Host * host ; s#iscsi_conn * leadconn ; t#spinlock_t frwd_lock ; t#spinlock_t back_lock ; int state ; int age ; int scsi_cmds_max ; int cmds_max ; s#iscsi_task * * cmds ; s#iscsi_pool cmdpool ; void * dd_data ; } 
s#iscsi_tm struct iscsi_tm { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t rsvd1 [ 2 ] ; t#uint8_t hlength ; t#uint8_t dlength [ 3 ] ; s#scsi_lun lun ; t#itt_t itt ; t#itt_t rtt ; t#__be32 cmdsn ; t#__be32 exp_statsn ; t#__be32 refcmdsn ; t#__be32 exp_datasn ; t#uint8_t rsvd2 [ 8 ] ; } 
s#iscsi_conn struct iscsi_conn { s#iscsi_cls_conn * cls_conn ; void * dd_data ; s#iscsi_session * session ; int stop_stage ; s#timer_list transport_timer ; unsigned long last_recv ; unsigned long last_ping ; int ping_timeout ; int recv_timeout ; s#iscsi_task * ping_task ; t#uint32_t exp_statsn ; t#uint32_t statsn ; int id ; int c_stage ; char * data ; s#iscsi_task * login_task ; s#iscsi_task * task ; s#list_head mgmtqueue ; s#list_head cmdqueue ; s#list_head requeue ; s#work_struct xmitwork ; unsigned long suspend_tx ; unsigned long suspend_rx ; t#wait_queue_head_t ehwait ; s#iscsi_tm tmhdr ; s#timer_list tmf_timer ; int tmf_state ; unsigned max_recv_dlength ; unsigned max_xmit_dlength ; int hdrdgst_en ; int datadgst_en ; int ifmarker_en ; int ofmarker_en ; int persistent_port ; char * persistent_address ; unsigned max_segment_size ; unsigned tcp_xmit_wsf ; unsigned tcp_recv_wsf ; t#uint16_t keepalive_tmo ; t#uint16_t local_port ; t#uint8_t tcp_timestamp_stat ; t#uint8_t tcp_nagle_disable ; t#uint8_t tcp_wsf_disable ; t#uint8_t tcp_timer_scale ; t#uint8_t tcp_timestamp_en ; t#uint8_t fragment_disable ; t#uint8_t ipv4_tos ; t#uint8_t ipv6_traffic_class ; t#uint8_t ipv6_flow_label ; t#uint8_t is_fw_assigned_ipv6 ; char * local_ipaddr ; t#uint64_t txdata_octets ; t#uint64_t rxdata_octets ; t#uint32_t scsicmd_pdus_cnt ; t#uint32_t dataout_pdus_cnt ; t#uint32_t scsirsp_pdus_cnt ; t#uint32_t datain_pdus_cnt ; t#uint32_t r2t_pdus_cnt ; t#uint32_t tmfcmd_pdus_cnt ; t#int32_t tmfrsp_pdus_cnt ; t#uint32_t eh_abort_cnt ; t#uint32_t fmr_unalign_cnt ; } 
s#iscsi_task struct iscsi_task { s#iscsi_hdr * hdr ; unsigned short hdr_max ; unsigned short hdr_len ; t#itt_t hdr_itt ; t#__be32 cmdsn ; s#scsi_lun lun ; int itt ; unsigned imm_count ; s#iscsi_r2t_info unsol_r2t ; char * data ; unsigned data_count ; s#scsi_cmnd * sc ; s#iscsi_conn * conn ; unsigned long last_xfer ; unsigned long last_timeout ; t#bool have_checked_conn ; t#bool protected ; int state ; t#atomic_t refcount ; s#list_head running ; void * dd_data ; } 
e#iscsi_tgt_dscvr enum iscsi_tgt_dscvr { ISCSI_TGT_DSCVR_SEND_TARGETS = 1 , ISCSI_TGT_DSCVR_ISNS = 2 , ISCSI_TGT_DSCVR_SLP = 3 , } 
s#iscsi_path struct iscsi_path { t#uint64_t handle ; t#uint8_t mac_addr [ 6 ] ; t#uint8_t mac_addr_old [ 6 ] ; t#uint32_t ip_addr_len ; union { s#in_addr v4_addr ; s#in6_addr v6_addr ; } src ; union { s#in_addr v4_addr ; s#in6_addr v6_addr ; } dst ; t#uint16_t vlan_id ; t#uint16_t pmtu ; } 
s#iscsi_iface struct iscsi_iface { s#device dev ; s#iscsi_transport * transport ; t#uint32_t iface_type ; t#uint32_t iface_num ; void * dd_data ; } 
e#iscsi_param_type enum iscsi_param_type { ISCSI_PARAM , ISCSI_HOST_PARAM , ISCSI_NET_PARAM , ISCSI_FLASHNODE_PARAM , ISCSI_CHAP_PARAM , ISCSI_IFACE_PARAM , } 
s#iscsi_bus_flash_session struct iscsi_bus_flash_session { s#list_head sess_list ; s#iscsi_transport * transport ; unsigned int target_id ; int flash_state ; void * dd_data ; s#device dev ; unsigned first_burst ; unsigned max_burst ; unsigned short max_r2t ; int default_taskmgmt_timeout ; int initial_r2t_en ; int imm_data_en ; int time2wait ; int time2retain ; int pdu_inorder_en ; int dataseq_inorder_en ; int erl ; int tpgt ; char * username ; char * username_in ; char * password ; char * password_in ; char * targetname ; char * targetalias ; char * portal_type ; t#uint16_t tsid ; t#uint16_t chap_in_idx ; t#uint16_t chap_out_idx ; t#uint16_t discovery_parent_idx ; t#uint16_t discovery_parent_type ; t#uint8_t auto_snd_tgt_disable ; t#uint8_t discovery_sess ; t#uint8_t entry_state ; t#uint8_t chap_auth_en ; t#uint8_t discovery_logout_en ; t#uint8_t bidi_chap_en ; t#uint8_t discovery_auth_optional ; t#uint8_t isid [ 6 ] ; t#uint8_t is_boot_target ; } 
s#iscsi_bus_flash_conn struct iscsi_bus_flash_conn { s#list_head conn_list ; void * dd_data ; s#iscsi_transport * transport ; s#device dev ; t#uint32_t exp_statsn ; t#uint32_t statsn ; unsigned max_recv_dlength ; unsigned max_xmit_dlength ; unsigned max_segment_size ; unsigned tcp_xmit_wsf ; unsigned tcp_recv_wsf ; int hdrdgst_en ; int datadgst_en ; int port ; char * ipaddress ; char * link_local_ipv6_addr ; char * redirect_ipaddr ; t#uint16_t keepalive_timeout ; t#uint16_t local_port ; t#uint8_t snack_req_en ; t#uint8_t tcp_timestamp_stat ; t#uint8_t tcp_nagle_disable ; t#uint8_t tcp_wsf_disable ; t#uint8_t tcp_timer_scale ; t#uint8_t tcp_timestamp_en ; t#uint8_t ipv4_tos ; t#uint8_t ipv6_traffic_class ; t#uint8_t ipv6_flow_label ; t#uint8_t fragment_disable ; t#uint8_t is_fw_assigned_ipv6 ; } 
s#iscsi_transport struct iscsi_transport { s#module * owner ; char * name ; unsigned int caps ; s#iscsi_cls_session * ( * create_session ) ( s#iscsi_endpoint * , t#uint16_t , t#uint16_t , t#uint32_t ) ; void ( * destroy_session ) ( s#iscsi_cls_session * ) ; s#iscsi_cls_conn * ( * create_conn ) ( s#iscsi_cls_session * , t#uint32_t ) ; int ( * bind_conn ) ( s#iscsi_cls_session * , s#iscsi_cls_conn * , t#uint64_t , int ) ; int ( * start_conn ) ( s#iscsi_cls_conn * ) ; void ( * stop_conn ) ( s#iscsi_cls_conn * , int ) ; void ( * destroy_conn ) ( s#iscsi_cls_conn * ) ; int ( * set_param ) ( s#iscsi_cls_conn * , e#iscsi_param , char * , int ) ; int ( * get_ep_param ) ( s#iscsi_endpoint * , e#iscsi_param , char * ) ; int ( * get_conn_param ) ( s#iscsi_cls_conn * , e#iscsi_param , char * ) ; int ( * get_session_param ) ( s#iscsi_cls_session * , e#iscsi_param , char * ) ; int ( * get_host_param ) ( s#Scsi_Host * , e#iscsi_host_param , char * ) ; int ( * set_host_param ) ( s#Scsi_Host * , e#iscsi_host_param , char * , int ) ; int ( * send_pdu ) ( s#iscsi_cls_conn * , s#iscsi_hdr * , char * , t#uint32_t ) ; void ( * get_stats ) ( s#iscsi_cls_conn * , s#iscsi_stats * ) ; int ( * init_task ) ( s#iscsi_task * ) ; int ( * xmit_task ) ( s#iscsi_task * ) ; void ( * cleanup_task ) ( s#iscsi_task * ) ; int ( * alloc_pdu ) ( s#iscsi_task * , t#uint8_t ) ; int ( * xmit_pdu ) ( s#iscsi_task * ) ; int ( * init_pdu ) ( s#iscsi_task * , unsigned int , unsigned int ) ; void ( * parse_pdu_itt ) ( s#iscsi_conn * , t#itt_t , int * , int * ) ; void ( * session_recovery_timedout ) ( s#iscsi_cls_session * ) ; s#iscsi_endpoint * ( * ep_connect ) ( s#Scsi_Host * , s#sockaddr * , int ) ; int ( * ep_poll ) ( s#iscsi_endpoint * , int ) ; void ( * ep_disconnect ) ( s#iscsi_endpoint * ) ; int ( * tgt_dscvr ) ( s#Scsi_Host * , e#iscsi_tgt_dscvr , t#uint32_t , s#sockaddr * ) ; int ( * set_path ) ( s#Scsi_Host * , s#iscsi_path * ) ; int ( * set_iface_param ) ( s#Scsi_Host * , void * , t#uint32_t ) ; int ( * get_iface_param ) ( s#iscsi_iface * , e#iscsi_param_type , int , char * ) ; t#umode_t ( * attr_is_visible ) ( int , int ) ; int ( * bsg_request ) ( s#bsg_job * ) ; int ( * send_ping ) ( s#Scsi_Host * , t#uint32_t , t#uint32_t , t#uint32_t , t#uint32_t , s#sockaddr * ) ; int ( * get_chap ) ( s#Scsi_Host * , t#uint16_t , t#uint32_t * , char * ) ; int ( * delete_chap ) ( s#Scsi_Host * , t#uint16_t ) ; int ( * set_chap ) ( s#Scsi_Host * , void * , int ) ; int ( * get_flashnode_param ) ( s#iscsi_bus_flash_session * , int , char * ) ; int ( * set_flashnode_param ) ( s#iscsi_bus_flash_session * , s#iscsi_bus_flash_conn * , void * , int ) ; int ( * new_flashnode ) ( s#Scsi_Host * , const char * , int ) ; int ( * del_flashnode ) ( s#iscsi_bus_flash_session * ) ; int ( * login_flashnode ) ( s#iscsi_bus_flash_session * , s#iscsi_bus_flash_conn * ) ; int ( * logout_flashnode ) ( s#iscsi_bus_flash_session * , s#iscsi_bus_flash_conn * ) ; int ( * logout_flashnode_sid ) ( s#iscsi_cls_session * ) ; int ( * get_host_stats ) ( s#Scsi_Host * , char * , int ) ; t#u8 ( * check_protection ) ( s#iscsi_task * , t#sector_t * ) ; } 
s#cxgbi_sock struct cxgbi_sock { s#cxgbi_device * cdev ; int tid ; int atid ; unsigned long flags ; unsigned int mtu ; unsigned short rss_qid ; unsigned short txq_idx ; unsigned short advmss ; unsigned int tx_chan ; unsigned int rx_chan ; unsigned int mss_idx ; unsigned int smac_idx ; unsigned char port_id ; int wr_max_cred ; int wr_cred ; int wr_una_cred ; unsigned char hcrc_len ; unsigned char dcrc_len ; void * l2t ; s#sk_buff * wr_pending_head ; s#sk_buff * wr_pending_tail ; s#sk_buff * cpl_close ; s#sk_buff * cpl_abort_req ; s#sk_buff * cpl_abort_rpl ; s#sk_buff * skb_ulp_lhdr ; t#spinlock_t lock ; s#kref refcnt ; unsigned int state ; s#sockaddr_in saddr ; s#sockaddr_in daddr ; s#dst_entry * dst ; s#sk_buff_head receive_queue ; s#sk_buff_head write_queue ; s#timer_list retry_timer ; int err ; t#rwlock_t callback_lock ; void * user_data ; t#u32 rcv_nxt ; t#u32 copied_seq ; t#u32 rcv_wup ; t#u32 snd_nxt ; t#u32 snd_una ; t#u32 write_seq ; } 
s#cxgbi_ports_map struct cxgbi_ports_map { unsigned int max_connect ; unsigned int used ; unsigned short sport_base ; t#spinlock_t lock ; unsigned int next ; s#cxgbi_sock * * port_csk ; } 
s#cxgbi_tag_format struct cxgbi_tag_format { unsigned char sw_bits ; unsigned char rsvd_bits ; unsigned char rsvd_shift ; unsigned char filler [ 1 ] ; t#u32 rsvd_mask ; } 
s#cxgbi_gather_list struct cxgbi_gather_list { unsigned int tag ; unsigned int length ; unsigned int offset ; unsigned int nelem ; s#page * * pages ; t#dma_addr_t phys_addr [ 0 ] ; } 
s#cxgbi_ddp_info struct cxgbi_ddp_info { s#kref refcnt ; s#cxgbi_device * cdev ; s#pci_dev * pdev ; unsigned int max_txsz ; unsigned int max_rxsz ; unsigned int llimit ; unsigned int ulimit ; unsigned int nppods ; unsigned int idx_last ; unsigned char idx_bits ; unsigned char filler [ 3 ] ; unsigned int idx_mask ; unsigned int rsvd_tag_mask ; t#spinlock_t map_lock ; s#cxgbi_gather_list * * gl_map ; } 
s#cxgbi_pagepod_hdr struct cxgbi_pagepod_hdr { t#u32 vld_tid ; t#u32 pgsz_tag_clr ; t#u32 max_offset ; t#u32 page_offset ; t#u64 rsvd ; } 
s#cxgbi_device struct cxgbi_device { s#list_head list_head ; unsigned int flags ; s#net_device * * ports ; void * lldev ; s#cxgbi_hba * * hbas ; const unsigned short * mtus ; unsigned char nmtus ; unsigned char nports ; s#pci_dev * pdev ; s#dentry * debugfs_root ; s#iscsi_transport * itp ; unsigned int pfvf ; unsigned int snd_win ; unsigned int rcv_win ; unsigned int rx_credit_thres ; unsigned int skb_tx_rsvd ; unsigned int skb_rx_extra ; unsigned int tx_max_size ; unsigned int rx_max_size ; s#cxgbi_ports_map pmap ; s#cxgbi_tag_format tag_format ; s#cxgbi_ddp_info * ddp ; void ( * dev_ddp_cleanup ) ( s#cxgbi_device * ) ; int ( * csk_ddp_set ) ( s#cxgbi_sock * , s#cxgbi_pagepod_hdr * , unsigned int , unsigned int , s#cxgbi_gather_list * ) ; void ( * csk_ddp_clear ) ( s#cxgbi_hba * , unsigned int , unsigned int , unsigned int ) ; int ( * csk_ddp_setup_digest ) ( s#cxgbi_sock * , unsigned int , int , int , int ) ; int ( * csk_ddp_setup_pgidx ) ( s#cxgbi_sock * , unsigned int , int , t#bool ) ; void ( * csk_release_offload_resources ) ( s#cxgbi_sock * ) ; int ( * csk_rx_pdu_ready ) ( s#cxgbi_sock * , s#sk_buff * ) ; t#u32 ( * csk_send_rx_credits ) ( s#cxgbi_sock * , t#u32 ) ; int ( * csk_push_tx_frames ) ( s#cxgbi_sock * , int ) ; void ( * csk_send_abort_req ) ( s#cxgbi_sock * ) ; void ( * csk_send_close_req ) ( s#cxgbi_sock * ) ; int ( * csk_alloc_cpls ) ( s#cxgbi_sock * ) ; int ( * csk_init_act_open ) ( s#cxgbi_sock * ) ; void * dd_data ; } 
cxgbi_device_portmap_create int cxgbi_device_portmap_create ( s#cxgbi_device * , unsigned int , unsigned int ) 
cxgbi_device_portmap_cleanup void cxgbi_device_portmap_cleanup ( s#cxgbi_device * ) 
cxgbi_device_register s#cxgbi_device * cxgbi_device_register ( unsigned int , unsigned int ) 
cxgbi_device_unregister void cxgbi_device_unregister ( s#cxgbi_device * ) 
cxgbi_device_unregister_all void cxgbi_device_unregister_all ( unsigned int ) 
cxgbi_device_find_by_lldev s#cxgbi_device * cxgbi_device_find_by_lldev ( void * ) 
cxgbi_hbas_remove void cxgbi_hbas_remove ( s#cxgbi_device * ) 
cxgbi_hbas_add int cxgbi_hbas_add ( s#cxgbi_device * , unsigned int , unsigned int , s#scsi_host_template * , s#scsi_transport_template * ) 
cxgbi_sock_free_cpl_skbs void cxgbi_sock_free_cpl_skbs ( s#cxgbi_sock * ) 
cxgbi_sock_established void cxgbi_sock_established ( s#cxgbi_sock * , unsigned int , unsigned int ) 
cxgbi_sock_closed void cxgbi_sock_closed ( s#cxgbi_sock * ) 
cxgbi_sock_fail_act_open void cxgbi_sock_fail_act_open ( s#cxgbi_sock * , int ) 
cxgbi_sock_act_open_req_arp_failure void cxgbi_sock_act_open_req_arp_failure ( void * , s#sk_buff * ) 
cxgbi_sock_rcv_abort_rpl void cxgbi_sock_rcv_abort_rpl ( s#cxgbi_sock * ) 
cxgbi_sock_rcv_peer_close void cxgbi_sock_rcv_peer_close ( s#cxgbi_sock * ) 
cxgbi_sock_rcv_close_conn_rpl void cxgbi_sock_rcv_close_conn_rpl ( s#cxgbi_sock * , t#u32 ) 
cxgbi_sock_rcv_wr_ack void cxgbi_sock_rcv_wr_ack ( s#cxgbi_sock * , unsigned int , unsigned int , int ) 
cxgbi_sock_select_mss unsigned int cxgbi_sock_select_mss ( s#cxgbi_sock * , unsigned int ) 
cxgbi_sock_skb_entail void cxgbi_sock_skb_entail ( s#cxgbi_sock * , s#sk_buff * ) 
cxgbi_sock_purge_wr_queue void cxgbi_sock_purge_wr_queue ( s#cxgbi_sock * ) 
cxgbi_sock_check_wr_invariants void cxgbi_sock_check_wr_invariants ( const s#cxgbi_sock * ) 
cxgbi_ddp_page_size_factor void cxgbi_ddp_page_size_factor ( int * ) 
s#cxgbi_pagepod struct cxgbi_pagepod { s#cxgbi_pagepod_hdr hdr ; t#u64 addr [ 4 + 1 ] ; } 
cxgbi_ddp_ppod_set void cxgbi_ddp_ppod_set ( s#cxgbi_pagepod * , s#cxgbi_pagepod_hdr * , s#cxgbi_gather_list * , unsigned int ) 
cxgbi_ddp_ppod_clear void cxgbi_ddp_ppod_clear ( s#cxgbi_pagepod * ) 
cxgbi_ddp_cleanup int cxgbi_ddp_cleanup ( s#cxgbi_device * ) 
cxgbi_ddp_init int cxgbi_ddp_init ( s#cxgbi_device * , unsigned int , unsigned int , unsigned int , unsigned int ) 
cxgbi_parse_pdu_itt void cxgbi_parse_pdu_itt ( s#iscsi_conn * , t#itt_t , int * , int * ) 
cxgbi_conn_tx_open void cxgbi_conn_tx_open ( s#cxgbi_sock * ) 
cxgbi_conn_pdu_ready void cxgbi_conn_pdu_ready ( s#cxgbi_sock * ) 
cxgbi_conn_alloc_pdu int cxgbi_conn_alloc_pdu ( s#iscsi_task * , t#u8 ) 
cxgbi_conn_init_pdu int cxgbi_conn_init_pdu ( s#iscsi_task * , unsigned int , unsigned int ) 
cxgbi_conn_xmit_pdu int cxgbi_conn_xmit_pdu ( s#iscsi_task * ) 
cxgbi_cleanup_task void cxgbi_cleanup_task ( s#iscsi_task * ) 
cxgbi_get_conn_stats void cxgbi_get_conn_stats ( s#iscsi_cls_conn * , s#iscsi_stats * ) 
cxgbi_set_conn_param int cxgbi_set_conn_param ( s#iscsi_cls_conn * , e#iscsi_param , char * , int ) 
cxgbi_get_ep_param int cxgbi_get_ep_param ( s#iscsi_endpoint * , e#iscsi_param , char * ) 
cxgbi_create_conn s#iscsi_cls_conn * cxgbi_create_conn ( s#iscsi_cls_session * , t#u32 ) 
cxgbi_bind_conn int cxgbi_bind_conn ( s#iscsi_cls_session * , s#iscsi_cls_conn * , t#u64 , int ) 
cxgbi_create_session s#iscsi_cls_session * cxgbi_create_session ( s#iscsi_endpoint * , t#u16 , t#u16 , t#u32 ) 
cxgbi_destroy_session void cxgbi_destroy_session ( s#iscsi_cls_session * ) 
cxgbi_set_host_param int cxgbi_set_host_param ( s#Scsi_Host * , e#iscsi_host_param , char * , int ) 
cxgbi_get_host_param int cxgbi_get_host_param ( s#Scsi_Host * , e#iscsi_host_param , char * ) 
cxgbi_ep_connect s#iscsi_endpoint * cxgbi_ep_connect ( s#Scsi_Host * , s#sockaddr * , int ) 
cxgbi_ep_poll int cxgbi_ep_poll ( s#iscsi_endpoint * , int ) 
cxgbi_ep_disconnect void cxgbi_ep_disconnect ( s#iscsi_endpoint * ) 
cxgbi_iscsi_init int cxgbi_iscsi_init ( s#iscsi_transport * , s#scsi_transport_template * * ) 
cxgbi_iscsi_cleanup void cxgbi_iscsi_cleanup ( s#iscsi_transport * , s#scsi_transport_template * * ) 
cxgbi_attr_is_visible t#umode_t cxgbi_attr_is_visible ( int , int ) 

/* drivers/scsi/device_handler/scsi_dh.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kstatfs
s##seq_file
s##optimistic_spin_queue
s##export_operations
s##device_private
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##Scsi_Host
s##scsi_cmnd
s##scsi_sense_hdr
scsi_register_device_handler extern int scsi_register_device_handler ( s#scsi_device_handler * ) 
scsi_unregister_device_handler extern int scsi_unregister_device_handler ( s#scsi_device_handler * ) 
scsi_dh_activate extern int scsi_dh_activate ( s#request_queue * , t#activate_complete , void * ) 
scsi_dh_set_params extern int scsi_dh_set_params ( s#request_queue * , const char * ) 
scsi_dh_handler_exist extern int scsi_dh_handler_exist ( const char * ) 
scsi_dh_attach extern int scsi_dh_attach ( s#request_queue * , const char * ) 
scsi_dh_detach extern void scsi_dh_detach ( s#request_queue * ) 
scsi_dh_attached_handler_name extern const char * scsi_dh_attached_handler_name ( s#request_queue * , t#gfp_t ) 

/* drivers/scsi/fcoe/fcoe_ctlr.o */
e#fip_state enum fip_state { FIP_ST_DISABLED , FIP_ST_LINK_WAIT , FIP_ST_AUTO , FIP_ST_NON_FIP , FIP_ST_ENABLED , FIP_ST_VNMP_START , FIP_ST_VNMP_PROBE1 , FIP_ST_VNMP_PROBE2 , FIP_ST_VNMP_CLAIM , FIP_ST_VNMP_UP , } 
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##scsi_sense_hdr
e#fc_port_state enum fc_port_state { FC_PORTSTATE_UNKNOWN , FC_PORTSTATE_NOTPRESENT , FC_PORTSTATE_ONLINE , FC_PORTSTATE_OFFLINE , FC_PORTSTATE_BLOCKED , FC_PORTSTATE_BYPASSED , FC_PORTSTATE_DIAGNOSTICS , FC_PORTSTATE_LINKDOWN , FC_PORTSTATE_ERROR , FC_PORTSTATE_LOOPBACK , FC_PORTSTATE_DELETED , } 
s#fc_rport struct fc_rport { t#u32 maxframe_size ; t#u32 supported_classes ; t#u32 dev_loss_tmo ; t#u64 node_name ; t#u64 port_name ; t#u32 port_id ; t#u32 roles ; e#fc_port_state port_state ; t#u32 scsi_target_id ; t#u32 fast_io_fail_tmo ; void * dd_data ; unsigned int channel ; t#u32 number ; t#u8 flags ; s#list_head peers ; s#device dev ; s#delayed_work dev_loss_work ; s#work_struct scan_work ; s#delayed_work fail_io_work ; s#work_struct stgt_delete_work ; s#work_struct rport_delete_work ; s#request_queue * rqst_q ; } 
e#fc_rport_state enum fc_rport_state { RPORT_ST_INIT , RPORT_ST_FLOGI , RPORT_ST_PLOGI_WAIT , RPORT_ST_PLOGI , RPORT_ST_PRLI , RPORT_ST_RTV , RPORT_ST_READY , RPORT_ST_ADISC , RPORT_ST_DELETE , } 
s#fc_rport_identifiers struct fc_rport_identifiers { t#u64 node_name ; t#u64 port_name ; t#u32 port_id ; t#u32 roles ; } 
e#fc_rport_event enum fc_rport_event { RPORT_EV_NONE = 0 , RPORT_EV_READY , RPORT_EV_FAILED , RPORT_EV_STOP , RPORT_EV_LOGO } 
s#fc_rport_operations struct fc_rport_operations { void ( * event_callback ) ( s#fc_lport * , s#fc_rport_priv * , e#fc_rport_event ) ; } 
s#fc_rport_priv struct fc_rport_priv { s#fc_lport * local_port ; s#fc_rport * rport ; s#kref kref ; e#fc_rport_state rp_state ; s#fc_rport_identifiers ids ; t#u16 flags ; t#u16 max_seq ; t#u16 disc_id ; t#u16 maxframe_size ; unsigned int retries ; unsigned int major_retries ; unsigned int e_d_tov ; unsigned int r_a_tov ; s#mutex rp_mutex ; s#delayed_work retry_work ; e#fc_rport_event event ; s#fc_rport_operations * ops ; s#list_head peers ; s#work_struct event_work ; t#u32 supported_classes ; t#u16 prli_count ; s#callback_head rcu ; t#u16 sp_features ; t#u8 spp_type ; void ( * lld_event_callback ) ( s#fc_lport * , s#fc_rport_priv * , e#fc_rport_event ) ; } 
s#fc_gpn_ft_resp struct fc_gpn_ft_resp { t#__u8 fp_flags ; t#__u8 fp_fid [ 3 ] ; t#__be32 fp_resvd ; t#__be64 fp_wwpn ; } 
e#fc_disc_event enum fc_disc_event { DISC_EV_NONE = 0 , DISC_EV_SUCCESS , DISC_EV_FAILED } 
s#fc_disc struct fc_disc { unsigned char retry_count ; unsigned char pending ; unsigned char requested ; unsigned short seq_count ; unsigned char buf_len ; t#u16 disc_id ; s#list_head rports ; void * priv ; s#mutex disc_mutex ; s#fc_gpn_ft_resp partial_buf ; s#delayed_work disc_work ; void ( * disc_callback ) ( s#fc_lport * , e#fc_disc_event ) ; } 
e#fc_vport_state enum fc_vport_state { FC_VPORT_UNKNOWN , FC_VPORT_ACTIVE , FC_VPORT_DISABLED , FC_VPORT_LINKDOWN , FC_VPORT_INITIALIZING , FC_VPORT_NO_FABRIC_SUPP , FC_VPORT_NO_FABRIC_RSCS , FC_VPORT_FABRIC_LOGOUT , FC_VPORT_FABRIC_REJ_WWN , FC_VPORT_FAILED , } 
e#fc_port_type enum fc_port_type { FC_PORTTYPE_UNKNOWN , FC_PORTTYPE_OTHER , FC_PORTTYPE_NOTPRESENT , FC_PORTTYPE_NPORT , FC_PORTTYPE_NLPORT , FC_PORTTYPE_LPORT , FC_PORTTYPE_PTP , FC_PORTTYPE_NPIV , } 
s#fc_vport struct fc_vport { e#fc_vport_state vport_state ; e#fc_vport_state vport_last_state ; t#u64 node_name ; t#u64 port_name ; t#u32 roles ; t#u32 vport_id ; e#fc_port_type vport_type ; char symbolic_name [ 64 ] ; void * dd_data ; s#Scsi_Host * shost ; unsigned int channel ; t#u32 number ; t#u8 flags ; s#list_head peers ; s#device dev ; s#work_struct vport_delete_work ; } 
s#fc_frame struct fc_frame { s#sk_buff skb ; } 
s#fc_seq struct fc_seq { t#u8 id ; t#u16 ssb_stat ; t#u16 cnt ; t#u32 rec_data ; } 
s#fc_els_lesb struct fc_els_lesb { t#__be32 lesb_link_fail ; t#__be32 lesb_sync_loss ; t#__be32 lesb_sig_loss ; t#__be32 lesb_prim_err ; t#__be32 lesb_inv_word ; t#__be32 lesb_inv_crc ; } 
e#fc_els_cmd enum fc_els_cmd { ELS_LS_RJT = 0x01 , ELS_LS_ACC = 0x02 , ELS_PLOGI = 0x03 , ELS_FLOGI = 0x04 , ELS_LOGO = 0x05 , ELS_ABTX = 0x06 , ELS_RCS = 0x07 , ELS_RES = 0x08 , ELS_RSS = 0x09 , ELS_RSI = 0x0a , ELS_ESTS = 0x0b , ELS_ESTC = 0x0c , ELS_ADVC = 0x0d , ELS_RTV = 0x0e , ELS_RLS = 0x0f , ELS_ECHO = 0x10 , ELS_TEST = 0x11 , ELS_RRQ = 0x12 , ELS_REC = 0x13 , ELS_SRR = 0x14 , ELS_PRLI = 0x20 , ELS_PRLO = 0x21 , ELS_SCN = 0x22 , ELS_TPLS = 0x23 , ELS_TPRLO = 0x24 , ELS_LCLM = 0x25 , ELS_GAID = 0x30 , ELS_FACT = 0x31 , ELS_FDACDT = 0x32 , ELS_NACT = 0x33 , ELS_NDACT = 0x34 , ELS_QOSR = 0x40 , ELS_RVCS = 0x41 , ELS_PDISC = 0x50 , ELS_FDISC = 0x51 , ELS_ADISC = 0x52 , ELS_RNC = 0x53 , ELS_FARP_REQ = 0x54 , ELS_FARP_REPL = 0x55 , ELS_RPS = 0x56 , ELS_RPL = 0x57 , ELS_RPBC = 0x58 , ELS_FAN = 0x60 , ELS_RSCN = 0x61 , ELS_SCR = 0x62 , ELS_RNFT = 0x63 , ELS_CSR = 0x68 , ELS_CSU = 0x69 , ELS_LINIT = 0x70 , ELS_LSTS = 0x72 , ELS_RNID = 0x78 , ELS_RLIR = 0x79 , ELS_LIRR = 0x7a , ELS_SRL = 0x7b , ELS_SBRP = 0x7c , ELS_RPSC = 0x7d , ELS_QSA = 0x7e , ELS_EVFP = 0x7f , ELS_LKA = 0x80 , ELS_AUTH_ELS = 0x90 , } 
e#fc_els_rjt_reason enum fc_els_rjt_reason { ELS_RJT_NONE = 0 , ELS_RJT_INVAL = 0x01 , ELS_RJT_LOGIC = 0x03 , ELS_RJT_BUSY = 0x05 , ELS_RJT_PROT = 0x07 , ELS_RJT_UNAB = 0x09 , ELS_RJT_UNSUP = 0x0b , ELS_RJT_INPROG = 0x0e , ELS_RJT_FIP = 0x20 , ELS_RJT_VENDOR = 0xff , } 
e#fc_els_rjt_explan enum fc_els_rjt_explan { ELS_EXPL_NONE = 0x00 , ELS_EXPL_SPP_OPT_ERR = 0x01 , ELS_EXPL_SPP_ICTL_ERR = 0x03 , ELS_EXPL_AH = 0x11 , ELS_EXPL_AH_REQ = 0x13 , ELS_EXPL_SID = 0x15 , ELS_EXPL_OXID_RXID = 0x17 , ELS_EXPL_INPROG = 0x19 , ELS_EXPL_PLOGI_REQD = 0x1e , ELS_EXPL_INSUF_RES = 0x29 , ELS_EXPL_UNAB_DATA = 0x2a , ELS_EXPL_UNSUPR = 0x2c , ELS_EXPL_INV_LEN = 0x2d , ELS_EXPL_NOT_NEIGHBOR = 0x62 , } 
s#fc_seq_els_data struct fc_seq_els_data { e#fc_els_rjt_reason reason ; e#fc_els_rjt_explan explan ; } 
s#fcp_cmnd struct fcp_cmnd { s#scsi_lun fc_lun ; t#__u8 fc_cmdref ; t#__u8 fc_pri_ta ; t#__u8 fc_tm_flags ; t#__u8 fc_flags ; t#__u8 fc_cdb [ 16 ] ; t#__be32 fc_dl ; } 
s#fc_fcp_pkt struct fc_fcp_pkt { t#spinlock_t scsi_pkt_lock ; t#atomic_t ref_cnt ; t#u32 data_len ; s#scsi_cmnd * cmd ; s#list_head list ; s#fc_lport * lp ; t#u8 state ; t#u8 cdb_status ; t#u8 status_code ; t#u8 scsi_comp_flags ; t#u32 io_status ; t#u32 req_flags ; t#u32 scsi_resid ; t#size_t xfer_len ; s#fcp_cmnd cdb_cmd ; t#u32 xfer_contig_end ; t#u16 max_payload ; t#u16 xfer_ddp ; s#fc_rport * rport ; s#fc_seq * seq_ptr ; s#timer_list timer ; int wait_for_comp ; t#u32 recov_retry ; s#fc_seq * recov_seq ; s#completion tm_done ; } 
s#libfc_function_template struct libfc_function_template { int ( * frame_send ) ( s#fc_lport * , s#fc_frame * ) ; s#fc_seq * ( * elsct_send ) ( s#fc_lport * , t#u32 , s#fc_frame * , unsigned int , void ( * ) ( s#fc_seq * , s#fc_frame * , void * ) , void * , t#u32 ) ; s#fc_seq * ( * exch_seq_send ) ( s#fc_lport * , s#fc_frame * , void ( * ) ( s#fc_seq * , s#fc_frame * , void * ) , void ( * ) ( s#fc_seq * , void * ) , void * , unsigned int ) ; int ( * ddp_setup ) ( s#fc_lport * , t#u16 , s#scatterlist * , unsigned int ) ; int ( * ddp_done ) ( s#fc_lport * , t#u16 ) ; int ( * ddp_target ) ( s#fc_lport * , t#u16 , s#scatterlist * , unsigned int ) ; void ( * get_lesb ) ( s#fc_lport * , s#fc_els_lesb * ) ; int ( * seq_send ) ( s#fc_lport * , s#fc_seq * , s#fc_frame * ) ; void ( * seq_els_rsp_send ) ( s#fc_frame * , e#fc_els_cmd , s#fc_seq_els_data * ) ; int ( * seq_exch_abort ) ( const s#fc_seq * , unsigned int ) ; void ( * exch_done ) ( s#fc_seq * ) ; s#fc_seq * ( * seq_start_next ) ( s#fc_seq * ) ; void ( * seq_set_resp ) ( s#fc_seq * , void ( * ) ( s#fc_seq * , s#fc_frame * , void * ) , void * ) ; s#fc_seq * ( * seq_assign ) ( s#fc_lport * , s#fc_frame * ) ; void ( * seq_release ) ( s#fc_seq * ) ; void ( * exch_mgr_reset ) ( s#fc_lport * , t#u32 , t#u32 ) ; void ( * rport_flush_queue ) ( void ) ; void ( * lport_recv ) ( s#fc_lport * , s#fc_frame * ) ; int ( * lport_reset ) ( s#fc_lport * ) ; void ( * lport_set_port_id ) ( s#fc_lport * , t#u32 , s#fc_frame * ) ; s#fc_rport_priv * ( * rport_create ) ( s#fc_lport * , t#u32 ) ; int ( * rport_login ) ( s#fc_rport_priv * ) ; int ( * rport_logoff ) ( s#fc_rport_priv * ) ; void ( * rport_recv_req ) ( s#fc_lport * , s#fc_frame * ) ; s#fc_rport_priv * ( * rport_lookup ) ( const s#fc_lport * , t#u32 ) ; void ( * rport_destroy ) ( s#kref * ) ; void ( * rport_event_callback ) ( s#fc_lport * , s#fc_rport_priv * , e#fc_rport_event ) ; int ( * fcp_cmd_send ) ( s#fc_lport * , s#fc_fcp_pkt * , void ( * ) ( s#fc_seq * , s#fc_frame * , void * ) ) ; void ( * fcp_cleanup ) ( s#fc_lport * ) ; void ( * fcp_abort_io ) ( s#fc_lport * ) ; void ( * disc_recv_req ) ( s#fc_lport * , s#fc_frame * ) ; void ( * disc_start ) ( void ( * ) ( s#fc_lport * , e#fc_disc_event ) , s#fc_lport * ) ; void ( * disc_stop ) ( s#fc_lport * ) ; void ( * disc_stop_final ) ( s#fc_lport * ) ; } 
e#fc_lport_state enum fc_lport_state { LPORT_ST_DISABLED = 0 , LPORT_ST_FLOGI , LPORT_ST_DNS , LPORT_ST_RNN_ID , LPORT_ST_RSNN_NN , LPORT_ST_RSPN_ID , LPORT_ST_RFT_ID , LPORT_ST_RFF_ID , LPORT_ST_FDMI , LPORT_ST_RHBA , LPORT_ST_RPA , LPORT_ST_DHBA , LPORT_ST_DPRT , LPORT_ST_SCR , LPORT_ST_READY , LPORT_ST_LOGO , LPORT_ST_RESET } 
s#fc_host_statistics struct fc_host_statistics { t#u64 seconds_since_last_reset ; t#u64 tx_frames ; t#u64 tx_words ; t#u64 rx_frames ; t#u64 rx_words ; t#u64 lip_count ; t#u64 nos_count ; t#u64 error_frames ; t#u64 dumped_frames ; t#u64 link_failure_count ; t#u64 loss_of_sync_count ; t#u64 loss_of_signal_count ; t#u64 prim_seq_protocol_err_count ; t#u64 invalid_tx_word_count ; t#u64 invalid_crc_count ; t#u64 fcp_input_requests ; t#u64 fcp_output_requests ; t#u64 fcp_control_requests ; t#u64 fcp_input_megabytes ; t#u64 fcp_output_megabytes ; t#u64 fcp_packet_alloc_failures ; t#u64 fcp_packet_aborts ; t#u64 fcp_frame_alloc_failures ; t#u64 fc_no_free_exch ; t#u64 fc_no_free_exch_xid ; t#u64 fc_xid_not_found ; t#u64 fc_xid_busy ; t#u64 fc_seq_not_found ; t#u64 fc_non_bls_resp ; } 
s#fc_stats struct fc_stats { t#u64 SecondsSinceLastReset ; t#u64 TxFrames ; t#u64 TxWords ; t#u64 RxFrames ; t#u64 RxWords ; t#u64 ErrorFrames ; t#u64 DumpedFrames ; t#u64 FcpPktAllocFails ; t#u64 FcpPktAborts ; t#u64 FcpFrameAllocFails ; t#u64 LinkFailureCount ; t#u64 LossOfSignalCount ; t#u64 InvalidTxWordCount ; t#u64 InvalidCRCCount ; t#u64 InputRequests ; t#u64 OutputRequests ; t#u64 ControlRequests ; t#u64 InputBytes ; t#u64 OutputBytes ; t#u64 VLinkFailureCount ; t#u64 MissDiscAdvCount ; } 
s#fc_els_rnid_gen struct fc_els_rnid_gen { t#__u8 rnid_vend_id [ 16 ] ; t#__be32 rnid_atype ; t#__be32 rnid_phys_port ; t#__be32 rnid_att_nodes ; t#__u8 rnid_node_mgmt ; t#__u8 rnid_ip_ver ; t#__be16 rnid_prot_port ; t#__be32 rnid_ip_addr [ 4 ] ; t#__u8 rnid_resvd [ 2 ] ; t#__be16 rnid_vend_spec ; } 
s#fc_ns_fts struct fc_ns_fts { t#__be32 ff_type_map [ 256 / 32 ] ; } 
E#FC_TYPE_FCP 0x08 
s#fc_lport struct fc_lport { s#Scsi_Host * host ; s#list_head ema_list ; s#fc_rport_priv * dns_rdata ; s#fc_rport_priv * ms_rdata ; s#fc_rport_priv * ptp_rdata ; void * scsi_priv ; s#fc_disc disc ; s#list_head vports ; s#fc_vport * vport ; s#libfc_function_template tt ; t#u8 link_up ; t#u8 qfull ; e#fc_lport_state state ; unsigned long boot_time ; s#fc_host_statistics host_stats ; s#fc_stats * stats ; t#u8 retry_count ; t#u32 port_id ; t#u64 wwpn ; t#u64 wwnn ; unsigned int service_params ; unsigned int e_d_tov ; unsigned int r_a_tov ; s#fc_els_rnid_gen rnid_gen ; t#u32 sg_supp : 1 ; t#u32 seq_offload : 1 ; t#u32 crc_offload : 1 ; t#u32 lro_enabled : 1 ; t#u32 does_npiv : 1 ; t#u32 npiv_enabled : 1 ; t#u32 point_to_multipoint : 1 ; t#u32 fdmi_enabled : 1 ; t#u32 mfs ; t#u8 max_retry_count ; t#u8 max_rport_retry_count ; t#u16 rport_priv_size ; t#u16 link_speed ; t#u16 link_supported_speeds ; t#u16 lro_xid ; unsigned int lso_max ; s#fc_ns_fts fcts ; s#mutex lp_mutex ; s#list_head list ; s#delayed_work retry_work ; void * prov [ ( E#FC_TYPE_FCP + 1 ) ] ; s#list_head lport_list ; } 
e#fcf_state enum fcf_state { FCOE_FCF_STATE_UNKNOWN , FCOE_FCF_STATE_DISCONNECTED , FCOE_FCF_STATE_CONNECTED , FCOE_FCF_STATE_DELETED , } 
s#fcoe_fcf_device struct fcoe_fcf_device { t#u32 id ; s#device dev ; s#list_head peers ; s#work_struct delete_work ; s#delayed_work dev_loss_work ; t#u32 dev_loss_tmo ; void * priv ; e#fcf_state state ; t#u64 fabric_name ; t#u64 switch_name ; t#u32 fc_map ; t#u16 vfid ; t#u8 mac [ 6 ] ; t#u8 priority ; t#u32 fka_period ; t#u8 selected ; t#u16 vlan_id ; } 
s#fcoe_fcf struct fcoe_fcf { s#list_head list ; s#work_struct event_work ; s#fcoe_ctlr * fip ; s#fcoe_fcf_device * fcf_dev ; unsigned long time ; t#u64 switch_name ; t#u64 fabric_name ; t#u32 fc_map ; t#u16 vfid ; t#u8 fcf_mac [ 6 ] ; t#u8 fcoe_mac [ 6 ] ; t#u8 pri ; t#u8 flogi_sent ; t#u16 flags ; t#u32 fka_period ; t#u8 fd_flags : 1 ; } 
s#fcoe_sysfs_function_template struct fcoe_sysfs_function_template { void ( * get_fcoe_ctlr_link_fail ) ( s#fcoe_ctlr_device * ) ; void ( * get_fcoe_ctlr_vlink_fail ) ( s#fcoe_ctlr_device * ) ; void ( * get_fcoe_ctlr_miss_fka ) ( s#fcoe_ctlr_device * ) ; void ( * get_fcoe_ctlr_symb_err ) ( s#fcoe_ctlr_device * ) ; void ( * get_fcoe_ctlr_err_block ) ( s#fcoe_ctlr_device * ) ; void ( * get_fcoe_ctlr_fcs_error ) ( s#fcoe_ctlr_device * ) ; void ( * set_fcoe_ctlr_mode ) ( s#fcoe_ctlr_device * ) ; int ( * set_fcoe_ctlr_enabled ) ( s#fcoe_ctlr_device * ) ; void ( * get_fcoe_fcf_selected ) ( s#fcoe_fcf_device * ) ; void ( * get_fcoe_fcf_vlan_id ) ( s#fcoe_fcf_device * ) ; } 
e#fip_conn_type enum fip_conn_type { FIP_CONN_TYPE_UNKNOWN , FIP_CONN_TYPE_FABRIC , FIP_CONN_TYPE_VN2VN , } 
e#ctlr_enabled_state enum ctlr_enabled_state { FCOE_CTLR_ENABLED , FCOE_CTLR_DISABLED , FCOE_CTLR_UNUSED , } 
s#fcoe_fc_els_lesb struct fcoe_fc_els_lesb { t#__be32 lesb_link_fail ; t#__be32 lesb_vlink_fail ; t#__be32 lesb_miss_fka ; t#__be32 lesb_symb_err ; t#__be32 lesb_err_block ; t#__be32 lesb_fcs_error ; } 
s#fcoe_ctlr_device struct fcoe_ctlr_device { t#u32 id ; s#device dev ; s#fcoe_sysfs_function_template * f ; s#list_head fcfs ; char work_q_name [ 20 ] ; s#workqueue_struct * work_q ; char devloss_work_q_name [ 20 ] ; s#workqueue_struct * devloss_work_q ; s#mutex lock ; int fcf_dev_loss_tmo ; e#fip_conn_type mode ; e#ctlr_enabled_state enabled ; s#fcoe_fc_els_lesb lesb ; } 
s#rnd_state struct rnd_state { t#__u32 s1 , s2 , s3 ; } 
s#fcoe_ctlr struct fcoe_ctlr { e#fip_state state ; e#fip_state mode ; s#fc_lport * lp ; s#fcoe_fcf * sel_fcf ; s#list_head fcfs ; s#fcoe_ctlr_device * cdev ; t#u16 fcf_count ; unsigned long sol_time ; unsigned long sel_time ; unsigned long port_ka_time ; unsigned long ctlr_ka_time ; s#timer_list timer ; s#work_struct timer_work ; s#work_struct recv_work ; s#sk_buff_head fip_recv_list ; s#sk_buff * flogi_req ; s#rnd_state rnd_state ; t#u32 port_id ; t#u16 user_mfs ; t#u16 flogi_oxid ; t#u8 flogi_req_send ; t#u8 flogi_count ; t#u8 map_dest ; t#u8 spma ; t#u8 probe_tries ; t#u8 priority ; t#u8 dest_addr [ 6 ] ; t#u8 ctl_src_addr [ 6 ] ; void ( * send ) ( s#fcoe_ctlr * , s#sk_buff * ) ; void ( * update_mac ) ( s#fc_lport * , t#u8 * ) ; t#u8 * ( * get_src_addr ) ( s#fc_lport * ) ; s#mutex ctlr_mutex ; t#spinlock_t ctlr_lock ; } 
fcoe_ctlr_init void fcoe_ctlr_init ( s#fcoe_ctlr * , e#fip_state ) 
fcoe_ctlr_destroy void fcoe_ctlr_destroy ( s#fcoe_ctlr * ) 
fcoe_ctlr_link_up void fcoe_ctlr_link_up ( s#fcoe_ctlr * ) 
fcoe_ctlr_link_down int fcoe_ctlr_link_down ( s#fcoe_ctlr * ) 
fcoe_ctlr_els_send int fcoe_ctlr_els_send ( s#fcoe_ctlr * , s#fc_lport * , s#sk_buff * ) 
fcoe_ctlr_recv void fcoe_ctlr_recv ( s#fcoe_ctlr * , s#sk_buff * ) 
fcoe_ctlr_recv_flogi int fcoe_ctlr_recv_flogi ( s#fcoe_ctlr * , s#fc_lport * , s#fc_frame * ) 
fcoe_wwn_from_mac t#u64 fcoe_wwn_from_mac ( unsigned char [ ] , unsigned int , unsigned int ) 
fcoe_libfc_config int fcoe_libfc_config ( s#fc_lport * , s#fcoe_ctlr * , const s#libfc_function_template * , int ) 
fcoe_fcf_get_selected void fcoe_fcf_get_selected ( s#fcoe_fcf_device * ) 
fcoe_ctlr_set_fip_mode void fcoe_ctlr_set_fip_mode ( s#fcoe_ctlr_device * ) 

/* drivers/scsi/fcoe/fcoe_sysfs.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
fcoe_ctlr_device_add s#fcoe_ctlr_device * fcoe_ctlr_device_add ( s#device * , s#fcoe_sysfs_function_template * , int ) 
fcoe_ctlr_device_delete void fcoe_ctlr_device_delete ( s#fcoe_ctlr_device * ) 
fcoe_fcf_device_delete void fcoe_fcf_device_delete ( s#fcoe_fcf_device * ) 
fcoe_fcf_device_add s#fcoe_fcf_device * fcoe_fcf_device_add ( s#fcoe_ctlr_device * , s#fcoe_fcf_device * ) 

/* drivers/scsi/fcoe/fcoe_transport.o */
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##scsi_sense_hdr
fcoe_link_speed_update int fcoe_link_speed_update ( s#fc_lport * ) 
__fcoe_get_lesb void __fcoe_get_lesb ( s#fc_lport * , s#fc_els_lesb * , s#net_device * ) 
fcoe_get_lesb void fcoe_get_lesb ( s#fc_lport * , s#fc_els_lesb * ) 
fcoe_ctlr_get_lesb void fcoe_ctlr_get_lesb ( s#fcoe_ctlr_device * ) 
fcoe_wwn_to_str void fcoe_wwn_to_str ( t#u64 , char * , int ) 
fcoe_validate_vport_create int fcoe_validate_vport_create ( s#fc_vport * ) 
fcoe_get_wwn int fcoe_get_wwn ( s#net_device * , t#u64 * , int ) 
fcoe_fc_crc t#u32 fcoe_fc_crc ( s#fc_frame * ) 
fcoe_start_io int fcoe_start_io ( s#sk_buff * ) 
fcoe_clean_pending_queue void fcoe_clean_pending_queue ( s#fc_lport * ) 
fcoe_check_wait_queue void fcoe_check_wait_queue ( s#fc_lport * , s#sk_buff * ) 
fcoe_queue_timer void fcoe_queue_timer ( t#ulong ) 
s#fcoe_percpu_s struct fcoe_percpu_s { s#task_struct * thread ; s#sk_buff_head fcoe_rx_list ; s#page * crc_eof_page ; int crc_eof_offset ; } 
fcoe_get_paged_crc_eof int fcoe_get_paged_crc_eof ( s#sk_buff * , int , s#fcoe_percpu_s * ) 
s#fcoe_transport struct fcoe_transport { char name [ 16 ] ; t#bool attached ; s#list_head list ; t#bool ( * match ) ( s#net_device * ) ; int ( * alloc ) ( s#net_device * ) ; int ( * create ) ( s#net_device * , e#fip_state ) ; int ( * destroy ) ( s#net_device * ) ; int ( * enable ) ( s#net_device * ) ; int ( * disable ) ( s#net_device * ) ; } 
fcoe_transport_attach int fcoe_transport_attach ( s#fcoe_transport * ) 
fcoe_transport_detach int fcoe_transport_detach ( s#fcoe_transport * ) 
fcoe_ctlr_destroy_store t#ssize_t fcoe_ctlr_destroy_store ( s#bus_type * , const char * , t#size_t ) 

/* drivers/scsi/hosts.o */
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##scsi_cmnd
s##scsi_sense_hdr
s##proc_dir_entry
scsi_host_set_state extern int scsi_host_set_state ( s#Scsi_Host * , e#scsi_host_state ) 
scsi_remove_host extern void scsi_remove_host ( s#Scsi_Host * ) 
scsi_add_host_with_dma extern int scsi_add_host_with_dma ( s#Scsi_Host * , s#device * , s#device * ) 
scsi_host_alloc extern s#Scsi_Host * scsi_host_alloc ( s#scsi_host_template * , int ) 
scsi_register extern s#Scsi_Host * scsi_register ( s#scsi_host_template * , int ) 
scsi_unregister extern void scsi_unregister ( s#Scsi_Host * ) 
scsi_host_lookup extern s#Scsi_Host * scsi_host_lookup ( unsigned short ) 
scsi_host_get extern s#Scsi_Host * scsi_host_get ( s#Scsi_Host * ) 
scsi_host_put extern void scsi_host_put ( s#Scsi_Host * ) 
scsi_is_host_device int scsi_is_host_device ( const s#device * ) 
scsi_queue_work extern int scsi_queue_work ( s#Scsi_Host * , s#work_struct * ) 
scsi_flush_work extern void scsi_flush_work ( s#Scsi_Host * ) 

/* drivers/scsi/iscsi_boot_sysfs.o */
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s#iscsi_boot_kobj struct iscsi_boot_kobj { s#kobject kobj ; s#attribute_group * attr_group ; s#list_head list ; void * data ; t#ssize_t ( * show ) ( void * , int , char * ) ; t#umode_t ( * is_visible ) ( void * , int ) ; void ( * release ) ( void * ) ; } 
s#iscsi_boot_kset struct iscsi_boot_kset { s#list_head kobj_list ; s#kset * kset ; } 
iscsi_boot_create_target s#iscsi_boot_kobj * iscsi_boot_create_target ( s#iscsi_boot_kset * , int , void * , t#ssize_t ( * ) ( void * , int , char * ) , t#umode_t ( * ) ( void * , int ) , void ( * ) ( void * ) ) 
iscsi_boot_create_initiator s#iscsi_boot_kobj * iscsi_boot_create_initiator ( s#iscsi_boot_kset * , int , void * , t#ssize_t ( * ) ( void * , int , char * ) , t#umode_t ( * ) ( void * , int ) , void ( * ) ( void * ) ) 
iscsi_boot_create_ethernet s#iscsi_boot_kobj * iscsi_boot_create_ethernet ( s#iscsi_boot_kset * , int , void * , t#ssize_t ( * ) ( void * , int , char * ) , t#umode_t ( * ) ( void * , int ) , void ( * ) ( void * ) ) 
iscsi_boot_create_kset s#iscsi_boot_kset * iscsi_boot_create_kset ( const char * ) 
iscsi_boot_create_host_kset s#iscsi_boot_kset * iscsi_boot_create_host_kset ( unsigned int ) 
iscsi_boot_destroy_kset void iscsi_boot_destroy_kset ( s#iscsi_boot_kset * ) 

/* drivers/scsi/libfc/fc_disc.o */
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##sock
s##sysfs_dirent
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##scsi_sense_hdr
s##proc_dir_entry
s##net_device
s##sec_path
fc_disc_config void fc_disc_config ( s#fc_lport * , void * ) 
fc_disc_init void fc_disc_init ( s#fc_lport * ) 

/* drivers/scsi/libfc/fc_elsct.o */
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##sock
s##sysfs_dirent
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##scsi_sense_hdr
s##proc_dir_entry
s##net_device
s##sec_path
fc_elsct_send s#fc_seq * fc_elsct_send ( s#fc_lport * , t#u32 , s#fc_frame * , unsigned int , void ( * ) ( s#fc_seq * , s#fc_frame * , void * ) , void * , t#u32 ) 
fc_elsct_init int fc_elsct_init ( s#fc_lport * ) 

/* drivers/scsi/libfc/fc_exch.o */
fc_cpu_mask extern t#u16 fc_cpu_mask 
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##sock
s##sysfs_dirent
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##scsi_sense_hdr
s##proc_dir_entry
s##net_device
s##sec_path
fc_exch_mgr_reset void fc_exch_mgr_reset ( s#fc_lport * , t#u32 , t#u32 ) 
fc_exch_update_stats void fc_exch_update_stats ( s#fc_lport * ) 
s##fc_exch_mgr_anchor
s##fc_exch_mgr
fc_exch_mgr_add s#fc_exch_mgr_anchor * fc_exch_mgr_add ( s#fc_lport * , s#fc_exch_mgr * , t#bool ( * ) ( s#fc_frame * ) ) 
fc_exch_mgr_del void fc_exch_mgr_del ( s#fc_exch_mgr_anchor * ) 
fc_exch_mgr_list_clone int fc_exch_mgr_list_clone ( s#fc_lport * , s#fc_lport * ) 
E#FC_SOF_I2 0x2d 
E#FC_SOF_I3 0x2e 
E#FC_SOF_I4 0x29 
E#FC_SOF_F 0x28 
e#fc_class enum fc_class { FC_CLASS_NONE = 0 , FC_CLASS_2 = E#FC_SOF_I2 , FC_CLASS_3 = E#FC_SOF_I3 , FC_CLASS_4 = E#FC_SOF_I4 , FC_CLASS_F = E#FC_SOF_F , } 
fc_exch_mgr_alloc s#fc_exch_mgr * fc_exch_mgr_alloc ( s#fc_lport * , e#fc_class , t#u16 , t#u16 , t#bool ( * ) ( s#fc_frame * ) ) 
fc_exch_mgr_free void fc_exch_mgr_free ( s#fc_lport * ) 
fc_exch_recv void fc_exch_recv ( s#fc_lport * , s#fc_frame * ) 
fc_exch_init int fc_exch_init ( s#fc_lport * ) 

/* drivers/scsi/libfc/fc_fcp.o */
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##scsi_sense_hdr
s##proc_dir_entry
fc_queuecommand int fc_queuecommand ( s#Scsi_Host * , s#scsi_cmnd * ) 
fc_eh_abort int fc_eh_abort ( s#scsi_cmnd * ) 
fc_eh_device_reset int fc_eh_device_reset ( s#scsi_cmnd * ) 
fc_eh_host_reset int fc_eh_host_reset ( s#scsi_cmnd * ) 
fc_slave_alloc int fc_slave_alloc ( s#scsi_device * ) 
fc_change_queue_depth int fc_change_queue_depth ( s#scsi_device * , int , int ) 
fc_change_queue_type int fc_change_queue_type ( s#scsi_device * , int ) 
s##net_device
s##sec_path
fc_fcp_destroy void fc_fcp_destroy ( s#fc_lport * ) 
fc_fcp_init int fc_fcp_init ( s#fc_lport * ) 

/* drivers/scsi/libfc/fc_frame.o */
s##sock
s##net_device
s##sec_path
fc_frame_crc_check t#u32 fc_frame_crc_check ( s#fc_frame * ) 
_fc_frame_alloc s#fc_frame * _fc_frame_alloc ( t#size_t ) 
s##fc_lport
fc_frame_alloc_fill s#fc_frame * fc_frame_alloc_fill ( s#fc_lport * , t#size_t ) 

/* drivers/scsi/libfc/fc_libfc.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##device_private
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
fc_lport_notifier_head extern s#blocking_notifier_head fc_lport_notifier_head 
s##net_device
s##sec_path
e#fc_rctl enum fc_rctl { FC_RCTL_DD_UNCAT = 0x00 , FC_RCTL_DD_SOL_DATA = 0x01 , FC_RCTL_DD_UNSOL_CTL = 0x02 , FC_RCTL_DD_SOL_CTL = 0x03 , FC_RCTL_DD_UNSOL_DATA = 0x04 , FC_RCTL_DD_DATA_DESC = 0x05 , FC_RCTL_DD_UNSOL_CMD = 0x06 , FC_RCTL_DD_CMD_STATUS = 0x07 , FC_RCTL_ELS_REQ = 0x22 , FC_RCTL_ELS_REP = 0x23 , FC_RCTL_ELS4_REQ = 0x32 , FC_RCTL_ELS4_REP = 0x33 , FC_RCTL_VFTH = 0x50 , FC_RCTL_IFRH = 0x51 , FC_RCTL_ENCH = 0x52 , FC_RCTL_BA_NOP = 0x80 , FC_RCTL_BA_ABTS = 0x81 , FC_RCTL_BA_RMC = 0x82 , FC_RCTL_BA_ACC = 0x84 , FC_RCTL_BA_RJT = 0x85 , FC_RCTL_BA_PRMT = 0x86 , FC_RCTL_ACK_1 = 0xc0 , FC_RCTL_ACK_0 = 0xc1 , FC_RCTL_P_RJT = 0xc2 , FC_RCTL_F_RJT = 0xc3 , FC_RCTL_P_BSY = 0xc4 , FC_RCTL_F_BSY = 0xc5 , FC_RCTL_F_BSYL = 0xc6 , FC_RCTL_LCR = 0xc7 , FC_RCTL_END = 0xc9 , } 
fc_fill_hdr void fc_fill_hdr ( s#fc_frame * , const s#fc_frame * , e#fc_rctl , t#u32 , t#u16 , t#u32 ) 
fc_fill_reply_hdr void fc_fill_reply_hdr ( s#fc_frame * , const s#fc_frame * , e#fc_rctl , t#u32 ) 
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s##proc_dir_entry
fc_lport_iterate void fc_lport_iterate ( void ( * ) ( s#fc_lport * , void * ) , void * ) 
e#fc_fh_type enum fc_fh_type { FC_TYPE_BLS = 0x00 , FC_TYPE_ELS = 0x01 , FC_TYPE_IP = 0x05 , FC_TYPE_FCP = 0x08 , FC_TYPE_CT = 0x20 , FC_TYPE_ILS = 0x22 , } 
s#fc_els_spp struct fc_els_spp { t#__u8 spp_type ; t#__u8 spp_type_ext ; t#__u8 spp_flags ; t#__u8 _spp_resvd ; t#__be32 spp_orig_pa ; t#__be32 spp_resp_pa ; t#__be32 spp_params ; } 
s#fc4_prov struct fc4_prov { int ( * prli ) ( s#fc_rport_priv * , t#u32 , const s#fc_els_spp * , s#fc_els_spp * ) ; void ( * prlo ) ( s#fc_rport_priv * ) ; void ( * recv ) ( s#fc_lport * , s#fc_frame * ) ; s#module * module ; } 
fc_fc4_register_provider int fc_fc4_register_provider ( e#fc_fh_type , s#fc4_prov * ) 
fc_fc4_deregister_provider void fc_fc4_deregister_provider ( e#fc_fh_type , s#fc4_prov * ) 

/* drivers/scsi/libfc/fc_lport.o */
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##scsi_sense_hdr
s##proc_dir_entry
fc_get_host_port_state void fc_get_host_port_state ( s#Scsi_Host * ) 
fc_get_host_speed void fc_get_host_speed ( s#Scsi_Host * ) 
fc_get_host_stats s#fc_host_statistics * fc_get_host_stats ( s#Scsi_Host * ) 
s##net_device
s##sec_path
fc_fabric_login int fc_fabric_login ( s#fc_lport * ) 
fc_linkup void fc_linkup ( s#fc_lport * ) 
fc_linkdown void fc_linkdown ( s#fc_lport * ) 
fc_fabric_logoff int fc_fabric_logoff ( s#fc_lport * ) 
fc_lport_destroy int fc_lport_destroy ( s#fc_lport * ) 
fc_set_mfs int fc_set_mfs ( s#fc_lport * , t#u32 ) 
fc_lport_set_local_id void fc_lport_set_local_id ( s#fc_lport * , t#u32 ) 
fc_lport_reset int fc_lport_reset ( s#fc_lport * ) 
fc_lport_logo_resp void fc_lport_logo_resp ( s#fc_seq * , s#fc_frame * , void * ) 
fc_lport_flogi_resp void fc_lport_flogi_resp ( s#fc_seq * , s#fc_frame * , void * ) 
fc_lport_config int fc_lport_config ( s#fc_lport * ) 
fc_lport_init int fc_lport_init ( s#fc_lport * ) 
s#fc_bsg_host_add_rport struct fc_bsg_host_add_rport { t#uint8_t reserved ; t#uint8_t port_id [ 3 ] ; } 
s#fc_bsg_host_del_rport struct fc_bsg_host_del_rport { t#uint8_t reserved ; t#uint8_t port_id [ 3 ] ; } 
s#fc_bsg_host_els struct fc_bsg_host_els { t#uint8_t command_code ; t#uint8_t port_id [ 3 ] ; } 
s#fc_bsg_host_ct struct fc_bsg_host_ct { t#uint8_t reserved ; t#uint8_t port_id [ 3 ] ; t#uint32_t preamble_word0 ; t#uint32_t preamble_word1 ; t#uint32_t preamble_word2 ; } 
s#fc_bsg_host_vendor struct fc_bsg_host_vendor { t#uint64_t vendor_id ; t#uint32_t vendor_cmd [ 0 ] ; } 
s#fc_bsg_rport_els struct fc_bsg_rport_els { t#uint8_t els_code ; } 
s#fc_bsg_rport_ct struct fc_bsg_rport_ct { t#uint32_t preamble_word0 ; t#uint32_t preamble_word1 ; t#uint32_t preamble_word2 ; } 
s#fc_bsg_request struct fc_bsg_request { t#uint32_t msgcode ; union { s#fc_bsg_host_add_rport h_addrport ; s#fc_bsg_host_del_rport h_delrport ; s#fc_bsg_host_els h_els ; s#fc_bsg_host_ct h_ct ; s#fc_bsg_host_vendor h_vendor ; s#fc_bsg_rport_els r_els ; s#fc_bsg_rport_ct r_ct ; } rqst_data ; } 
s#fc_bsg_host_vendor_reply struct fc_bsg_host_vendor_reply { t#uint32_t vendor_rsp [ 0 ] ; } 
s#fc_bsg_ctels_reply struct fc_bsg_ctels_reply { t#uint32_t status ; struct { t#uint8_t action ; t#uint8_t reason_code ; t#uint8_t reason_explanation ; t#uint8_t vendor_unique ; } rjt_data ; } 
s#fc_bsg_reply struct fc_bsg_reply { t#uint32_t result ; t#uint32_t reply_payload_rcv_len ; union { s#fc_bsg_host_vendor_reply vendor_reply ; s#fc_bsg_ctels_reply ctels_reply ; } reply_data ; } 
s#fc_bsg_buffer struct fc_bsg_buffer { unsigned int payload_len ; int sg_cnt ; s#scatterlist * sg_list ; } 
s#fc_bsg_job struct fc_bsg_job { s#Scsi_Host * shost ; s#fc_rport * rport ; s#device * dev ; s#request * req ; t#spinlock_t job_lock ; unsigned int state_flags ; unsigned int ref_cnt ; void ( * job_done ) ( s#fc_bsg_job * ) ; s#fc_bsg_request * request ; s#fc_bsg_reply * reply ; unsigned int request_len ; unsigned int reply_len ; s#fc_bsg_buffer request_payload ; s#fc_bsg_buffer reply_payload ; void * dd_data ; } 
fc_lport_bsg_request int fc_lport_bsg_request ( s#fc_bsg_job * ) 

/* drivers/scsi/libfc/fc_npiv.o */
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##sock
s##sysfs_dirent
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##scsi_sense_hdr
s##proc_dir_entry
s##net_device
s##sec_path
libfc_vport_create s#fc_lport * libfc_vport_create ( s#fc_vport * , int ) 
fc_vport_id_lookup s#fc_lport * fc_vport_id_lookup ( s#fc_lport * , t#u32 ) 
fc_vport_setlink void fc_vport_setlink ( s#fc_lport * ) 

/* drivers/scsi/libfc/fc_rport.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
fc_set_rport_loss_tmo void fc_set_rport_loss_tmo ( s#fc_rport * , t#u32 ) 
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s##proc_dir_entry
s##net_device
s##sec_path
fc_rport_init int fc_rport_init ( s#fc_lport * ) 
fc_rport_terminate_io void fc_rport_terminate_io ( s#fc_rport * ) 

/* drivers/scsi/libiscsi.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##scsi_host_cmd_pool
iscsi_conn_queue_work extern void iscsi_conn_queue_work ( s#iscsi_conn * ) 
s#iscsi_nopin struct iscsi_nopin { t#uint8_t opcode ; t#uint8_t flags ; t#__be16 rsvd2 ; t#uint8_t rsvd3 ; t#uint8_t dlength [ 3 ] ; s#scsi_lun lun ; t#itt_t itt ; t#__be32 ttt ; t#__be32 statsn ; t#__be32 exp_cmdsn ; t#__be32 max_cmdsn ; t#uint8_t rsvd4 [ 12 ] ; } 
iscsi_update_cmdsn extern void iscsi_update_cmdsn ( s#iscsi_session * , s#iscsi_nopin * ) 
s#iscsi_data struct iscsi_data { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t rsvd2 [ 2 ] ; t#uint8_t rsvd3 ; t#uint8_t dlength [ 3 ] ; s#scsi_lun lun ; t#itt_t itt ; t#__be32 ttt ; t#__be32 rsvd4 ; t#__be32 exp_statsn ; t#__be32 rsvd5 ; t#__be32 datasn ; t#__be32 offset ; t#__be32 rsvd6 ; } 
iscsi_prep_data_out_pdu extern void iscsi_prep_data_out_pdu ( s#iscsi_task * , s#iscsi_r2t_info * , s#iscsi_data * ) 
__iscsi_get_task extern void __iscsi_get_task ( s#iscsi_task * ) 
__iscsi_put_task extern void __iscsi_put_task ( s#iscsi_task * ) 
iscsi_put_task extern void iscsi_put_task ( s#iscsi_task * ) 
iscsi_complete_scsi_task extern void iscsi_complete_scsi_task ( s#iscsi_task * , t#uint32_t , t#uint32_t ) 
iscsi_conn_send_pdu extern int iscsi_conn_send_pdu ( s#iscsi_cls_conn * , s#iscsi_hdr * , char * , t#uint32_t ) 
iscsi_itt_to_task extern s#iscsi_task * iscsi_itt_to_task ( s#iscsi_conn * , t#itt_t ) 
__iscsi_complete_pdu extern int __iscsi_complete_pdu ( s#iscsi_conn * , s#iscsi_hdr * , char * , int ) 
iscsi_complete_pdu extern int iscsi_complete_pdu ( s#iscsi_conn * , s#iscsi_hdr * , char * , int ) 
iscsi_verify_itt extern int iscsi_verify_itt ( s#iscsi_conn * , t#itt_t ) 
iscsi_itt_to_ctask extern s#iscsi_task * iscsi_itt_to_ctask ( s#iscsi_conn * , t#itt_t ) 
e#iscsi_err enum iscsi_err { ISCSI_OK = 0 , ISCSI_ERR_DATASN = 1000 + 1 , ISCSI_ERR_DATA_OFFSET = 1000 + 2 , ISCSI_ERR_MAX_CMDSN = 1000 + 3 , ISCSI_ERR_EXP_CMDSN = 1000 + 4 , ISCSI_ERR_BAD_OPCODE = 1000 + 5 , ISCSI_ERR_DATALEN = 1000 + 6 , ISCSI_ERR_AHSLEN = 1000 + 7 , ISCSI_ERR_PROTO = 1000 + 8 , ISCSI_ERR_LUN = 1000 + 9 , ISCSI_ERR_BAD_ITT = 1000 + 10 , ISCSI_ERR_CONN_FAILED = 1000 + 11 , ISCSI_ERR_R2TSN = 1000 + 12 , ISCSI_ERR_SESSION_FAILED = 1000 + 13 , ISCSI_ERR_HDR_DGST = 1000 + 14 , ISCSI_ERR_DATA_DGST = 1000 + 15 , ISCSI_ERR_PARAM_NOT_FOUND = 1000 + 16 , ISCSI_ERR_NO_SCSI_CMD = 1000 + 17 , ISCSI_ERR_INVALID_HOST = 1000 + 18 , ISCSI_ERR_XMIT_FAILED = 1000 + 19 , ISCSI_ERR_TCP_CONN_CLOSE = 1000 + 20 , ISCSI_ERR_SCSI_EH_SESSION_RST = 1000 + 21 , } 
iscsi_session_failure extern void iscsi_session_failure ( s#iscsi_session * , e#iscsi_err ) 
iscsi_conn_failure extern void iscsi_conn_failure ( s#iscsi_conn * , e#iscsi_err ) 
iscsi_requeue_task extern void iscsi_requeue_task ( s#iscsi_task * ) 
iscsi_queuecommand extern int iscsi_queuecommand ( s#Scsi_Host * , s#scsi_cmnd * ) 
iscsi_change_queue_depth extern int iscsi_change_queue_depth ( s#scsi_device * , int , int ) 
iscsi_target_alloc extern int iscsi_target_alloc ( s#scsi_target * ) 
iscsi_suspend_queue extern void iscsi_suspend_queue ( s#iscsi_conn * ) 
iscsi_suspend_tx extern void iscsi_suspend_tx ( s#iscsi_conn * ) 
iscsi_eh_abort extern int iscsi_eh_abort ( s#scsi_cmnd * ) 
iscsi_eh_device_reset extern int iscsi_eh_device_reset ( s#scsi_cmnd * ) 
iscsi_session_recovery_timedout extern void iscsi_session_recovery_timedout ( s#iscsi_cls_session * ) 
iscsi_eh_session_reset extern int iscsi_eh_session_reset ( s#scsi_cmnd * ) 
iscsi_eh_target_reset int iscsi_eh_target_reset ( s#scsi_cmnd * ) 
iscsi_eh_recover_target extern int iscsi_eh_recover_target ( s#scsi_cmnd * ) 
iscsi_pool_init extern int iscsi_pool_init ( s#iscsi_pool * , int , void * * * , int ) 
iscsi_pool_free extern void iscsi_pool_free ( s#iscsi_pool * ) 
iscsi_host_add extern int iscsi_host_add ( s#Scsi_Host * , s#device * ) 
iscsi_host_alloc extern s#Scsi_Host * iscsi_host_alloc ( s#scsi_host_template * , int , t#bool ) 
iscsi_host_remove extern void iscsi_host_remove ( s#Scsi_Host * ) 
iscsi_host_free extern void iscsi_host_free ( s#Scsi_Host * ) 
iscsi_session_setup extern s#iscsi_cls_session * iscsi_session_setup ( s#iscsi_transport * , s#Scsi_Host * , t#uint16_t , int , int , t#uint32_t , unsigned int ) 
iscsi_session_teardown extern void iscsi_session_teardown ( s#iscsi_cls_session * ) 
iscsi_conn_setup extern s#iscsi_cls_conn * iscsi_conn_setup ( s#iscsi_cls_session * , int , t#uint32_t ) 
iscsi_conn_teardown extern void iscsi_conn_teardown ( s#iscsi_cls_conn * ) 
iscsi_conn_start extern int iscsi_conn_start ( s#iscsi_cls_conn * ) 
iscsi_conn_stop extern void iscsi_conn_stop ( s#iscsi_cls_conn * , int ) 
iscsi_conn_bind extern int iscsi_conn_bind ( s#iscsi_cls_session * , s#iscsi_cls_conn * , int ) 
iscsi_switch_str_param extern int iscsi_switch_str_param ( char * * , char * ) 
iscsi_set_param extern int iscsi_set_param ( s#iscsi_cls_conn * , e#iscsi_param , char * , int ) 
iscsi_session_get_param extern int iscsi_session_get_param ( s#iscsi_cls_session * , e#iscsi_param , char * ) 
iscsi_conn_get_addr_param extern int iscsi_conn_get_addr_param ( s#__kernel_sockaddr_storage * , e#iscsi_param , char * ) 
iscsi_conn_get_param extern int iscsi_conn_get_param ( s#iscsi_cls_conn * , e#iscsi_param , char * ) 
iscsi_host_get_param extern int iscsi_host_get_param ( s#Scsi_Host * , e#iscsi_host_param , char * ) 
iscsi_host_set_param extern int iscsi_host_set_param ( s#Scsi_Host * , e#iscsi_host_param , char * , int ) 

/* drivers/scsi/libiscsi_tcp.o */
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
E#ISCSI_DIGEST_SIZE sizeof ( __u32 ) 
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s##scsi_transport_template
s#iscsi_tcp_recv struct iscsi_tcp_recv { s#iscsi_hdr * hdr ; s#iscsi_segment segment ; t#uint32_t hdr_buf [ 64 ] ; int datalen ; } 
s#iscsi_tcp_conn struct iscsi_tcp_conn { s#iscsi_conn * iscsi_conn ; void * dd_data ; int stop_stage ; s#iscsi_tcp_recv in ; s#hash_desc * rx_hash ; } 
t#iscsi_segment_done_fn_t typedef int iscsi_segment_done_fn_t ( s#iscsi_tcp_conn * , s#iscsi_segment * ) 
s#iscsi_segment struct iscsi_segment { unsigned char * data ; unsigned int size ; unsigned int copied ; unsigned int total_size ; unsigned int total_copied ; s#hash_desc * hash ; unsigned char padbuf [ 4 ] ; unsigned char recv_digest [ E#ISCSI_DIGEST_SIZE ] ; unsigned char digest [ E#ISCSI_DIGEST_SIZE ] ; unsigned int digest_len ; s#scatterlist * sg ; void * sg_mapped ; unsigned int sg_offset ; t#bool atomic_mapped ; t#iscsi_segment_done_fn_t * done ; } 
iscsi_tcp_segment_unmap extern void iscsi_tcp_segment_unmap ( s#iscsi_segment * ) 
iscsi_tcp_segment_done extern int iscsi_tcp_segment_done ( s#iscsi_tcp_conn * , s#iscsi_segment * , int , unsigned ) 
iscsi_tcp_dgst_header extern void iscsi_tcp_dgst_header ( s#hash_desc * , const void * , t#size_t , unsigned char [ E#ISCSI_DIGEST_SIZE ] ) 
iscsi_segment_init_linear extern void iscsi_segment_init_linear ( s#iscsi_segment * , void * , t#size_t , t#iscsi_segment_done_fn_t * , s#hash_desc * ) 
iscsi_segment_seek_sg extern int iscsi_segment_seek_sg ( s#iscsi_segment * , s#scatterlist * , unsigned int , unsigned int , t#size_t , t#iscsi_segment_done_fn_t * , s#hash_desc * ) 
iscsi_tcp_hdr_recv_prep extern void iscsi_tcp_hdr_recv_prep ( s#iscsi_tcp_conn * ) 
iscsi_tcp_cleanup_task extern void iscsi_tcp_cleanup_task ( s#iscsi_task * ) 
iscsi_tcp_recv_segment_is_hdr extern int iscsi_tcp_recv_segment_is_hdr ( s#iscsi_tcp_conn * ) 
iscsi_tcp_recv_skb extern int iscsi_tcp_recv_skb ( s#iscsi_conn * , s#sk_buff * , unsigned int , t#bool , int * ) 
iscsi_tcp_task_init extern int iscsi_tcp_task_init ( s#iscsi_task * ) 
iscsi_tcp_task_xmit extern int iscsi_tcp_task_xmit ( s#iscsi_task * ) 
iscsi_tcp_conn_setup extern s#iscsi_cls_conn * iscsi_tcp_conn_setup ( s#iscsi_cls_session * , int , t#uint32_t ) 
iscsi_tcp_conn_teardown extern void iscsi_tcp_conn_teardown ( s#iscsi_cls_conn * ) 
iscsi_tcp_r2tpool_alloc extern int iscsi_tcp_r2tpool_alloc ( s#iscsi_session * ) 
iscsi_tcp_r2tpool_free extern void iscsi_tcp_r2tpool_free ( s#iscsi_session * ) 
iscsi_tcp_set_max_r2t extern int iscsi_tcp_set_max_r2t ( s#iscsi_conn * , char * ) 
iscsi_tcp_conn_get_stats extern void iscsi_tcp_conn_get_stats ( s#iscsi_cls_conn * , s#iscsi_stats * ) 

/* drivers/scsi/libsas/sas_ata.o */
e#sas_device_type enum sas_device_type { SAS_PHY_UNUSED = 0 , SAS_END_DEVICE = 1 , SAS_EDGE_EXPANDER_DEVICE = 2 , SAS_FANOUT_EXPANDER_DEVICE = 3 , SAS_HA = 4 , SAS_SATA_DEV = 5 , SAS_SATA_PM = 7 , SAS_SATA_PM_PORT = 8 , SAS_SATA_PENDING = 9 , } 
E#SAS_LINK_RATE_1_5_GBPS 8 
E#SAS_LINK_RATE_3_0_GBPS 9 
e#sas_linkrate enum sas_linkrate { SAS_LINK_RATE_UNKNOWN = 0 , SAS_PHY_DISABLED = 1 , SAS_PHY_RESET_PROBLEM = 2 , SAS_SATA_SPINUP_HOLD = 3 , SAS_SATA_PORT_SELECTOR = 4 , SAS_PHY_RESET_IN_PROGRESS = 5 , SAS_LINK_RATE_1_5_GBPS = 8 , SAS_LINK_RATE_G1 = E#SAS_LINK_RATE_1_5_GBPS , SAS_LINK_RATE_3_0_GBPS = 9 , SAS_LINK_RATE_G2 = E#SAS_LINK_RATE_3_0_GBPS , SAS_LINK_RATE_6_0_GBPS = 10 , SAS_LINK_RATE_12_0_GBPS = 11 , SAS_LINK_RATE_FAILED = 0x10 , SAS_PHY_VIRTUAL = 0x11 , } 
s#sas_work struct sas_work { s#list_head drain_node ; s#work_struct work ; } 
s#sas_discovery_event struct sas_discovery_event { s#sas_work work ; s#asd_sas_port * port ; } 
E#DISC_NUM_EVENTS 7 
s#sas_discovery struct sas_discovery { s#sas_discovery_event disc_work [ E#DISC_NUM_EVENTS ] ; unsigned long pending ; t#u8 fanout_sas_addr [ 8 ] ; t#u8 eeds_a [ 8 ] ; t#u8 eeds_b [ 8 ] ; int max_level ; } 
e#sas_class enum sas_class { SAS , EXPANDER } 
E#SAS_PROTOCOL_STP 0x04 
E#SAS_PROTOCOL_SATA 0x01 
e#sas_protocol enum sas_protocol { SAS_PROTOCOL_NONE = 0 , SAS_PROTOCOL_SATA = 0x01 , SAS_PROTOCOL_SMP = 0x02 , SAS_PROTOCOL_STP = 0x04 , SAS_PROTOCOL_SSP = 0x08 , SAS_PROTOCOL_ALL = 0x0E , SAS_PROTOCOL_STP_ALL = E#SAS_PROTOCOL_STP | E#SAS_PROTOCOL_SATA , } 
e#sas_oob_mode enum sas_oob_mode { OOB_NOT_CONNECTED , SATA_OOB_MODE , SAS_OOB_MODE } 
s#sas_ha_event struct sas_ha_event { s#sas_work work ; s#sas_ha_struct * ha ; } 
E#HA_NUM_EVENTS 1 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##sock
s##sysfs_dirent
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##scsi_host_cmd_pool
s#scsi_core struct scsi_core { s#Scsi_Host * shost ; s#mutex task_queue_flush ; t#spinlock_t task_queue_lock ; s#list_head task_queue ; int task_queue_size ; s#task_struct * queue_thread ; } 
s#asd_sas_event struct asd_sas_event { s#sas_work work ; s#asd_sas_phy * phy ; } 
E#PORT_NUM_EVENTS 5 
E#PHY_NUM_EVENTS 5 
s#sas_identify struct sas_identify { e#sas_device_type device_type ; e#sas_protocol initiator_port_protocols ; e#sas_protocol target_port_protocols ; t#u64 sas_address ; t#u8 phy_identifier ; } 
s#sas_phy struct sas_phy { s#device dev ; int number ; int enabled ; s#sas_identify identify ; e#sas_linkrate negotiated_linkrate ; e#sas_linkrate minimum_linkrate_hw ; e#sas_linkrate minimum_linkrate ; e#sas_linkrate maximum_linkrate_hw ; e#sas_linkrate maximum_linkrate ; t#u32 invalid_dword_count ; t#u32 running_disparity_error_count ; t#u32 loss_of_dword_sync_count ; t#u32 phy_reset_problem_count ; s#list_head port_siblings ; void * hostdata ; } 
e#sas_phy_type enum sas_phy_type { PHY_TYPE_PHYSICAL , PHY_TYPE_VIRTUAL } 
e#sas_phy_role enum sas_phy_role { PHY_ROLE_NONE = 0 , PHY_ROLE_TARGET = 0x40 , PHY_ROLE_INITIATOR = 0x80 , } 
s#asd_sas_phy struct asd_sas_phy { s#asd_sas_event port_events [ E#PORT_NUM_EVENTS ] ; s#asd_sas_event phy_events [ E#PHY_NUM_EVENTS ] ; unsigned long port_events_pending ; unsigned long phy_events_pending ; int error ; int suspended ; s#sas_phy * phy ; int enabled ; int id ; e#sas_class class ; e#sas_protocol iproto ; e#sas_protocol tproto ; e#sas_phy_type type ; e#sas_phy_role role ; e#sas_oob_mode oob_mode ; e#sas_linkrate linkrate ; t#u8 * sas_addr ; t#u8 attached_sas_addr [ 8 ] ; t#spinlock_t frame_rcvd_lock ; t#u8 * frame_rcvd ; int frame_rcvd_size ; t#spinlock_t sas_prim_lock ; t#u32 sas_prim ; s#list_head port_phy_el ; s#asd_sas_port * port ; s#sas_ha_struct * ha ; void * lldd_phy ; } 
e#ha_event enum ha_event { HAE_RESET = 0U , HA_NUM_EVENTS = 1 , } 
e#port_event enum port_event { PORTE_BYTES_DMAED = 0U , PORTE_BROADCAST_RCVD = 1 , PORTE_LINK_RESET_ERR = 2 , PORTE_TIMER_EVENT = 3 , PORTE_HARD_RESET = 4 , PORT_NUM_EVENTS = 5 , } 
e#phy_event enum phy_event { PHYE_LOSS_OF_SIGNAL = 0U , PHYE_OOB_DONE = 1 , PHYE_OOB_ERROR = 2 , PHYE_SPINUP_HOLD = 3 , PHYE_RESUME_TIMEOUT = 4 , PHY_NUM_EVENTS = 5 , } 
s#sas_ha_struct struct sas_ha_struct { s#sas_ha_event ha_events [ E#HA_NUM_EVENTS ] ; unsigned long pending ; s#list_head defer_q ; s#mutex drain_mutex ; unsigned long state ; t#spinlock_t lock ; int eh_active ; t#wait_queue_head_t eh_wait_q ; s#list_head eh_dev_q ; s#mutex disco_mutex ; s#scsi_core core ; char * sas_ha_name ; s#device * dev ; s#module * lldd_module ; t#u8 * sas_addr ; t#u8 hashed_sas_addr [ 3 ] ; t#spinlock_t phy_port_lock ; s#asd_sas_phy * * sas_phy ; s#asd_sas_port * * sas_port ; int num_phys ; int lldd_max_execute_num ; int lldd_queue_size ; int strict_wide_ports ; void ( * notify_ha_event ) ( s#sas_ha_struct * , e#ha_event ) ; void ( * notify_port_event ) ( s#asd_sas_phy * , e#port_event ) ; void ( * notify_phy_event ) ( s#asd_sas_phy * , e#phy_event ) ; void * lldd_ha ; s#list_head eh_done_q ; s#list_head eh_ata_q ; } 
s#sas_rphy struct sas_rphy { s#device dev ; s#sas_identify identify ; s#list_head list ; s#request_queue * q ; t#u32 scsi_target_id ; } 
s#sas_port struct sas_port { s#device dev ; int port_identifier ; int num_phys ; unsigned int is_backlink : 1 ; s#sas_rphy * rphy ; s#mutex phy_list_mutex ; s#list_head phy_list ; } 
s#asd_sas_port struct asd_sas_port { s#completion port_gone_completion ; s#sas_discovery disc ; s#domain_device * port_dev ; t#spinlock_t dev_list_lock ; s#list_head dev_list ; s#list_head disco_list ; s#list_head destroy_list ; e#sas_linkrate linkrate ; s#sas_work work ; int suspended ; int id ; e#sas_class class ; t#u8 sas_addr [ 8 ] ; t#u8 attached_sas_addr [ 8 ] ; e#sas_protocol iproto ; e#sas_protocol tproto ; e#sas_oob_mode oob_mode ; t#spinlock_t phy_list_lock ; s#list_head phy_list ; int num_phys ; t#u32 phy_mask ; s#sas_ha_struct * ha ; s#sas_port * port ; void * lldd_port ; } 
e#ex_phy_state enum ex_phy_state { PHY_EMPTY , PHY_VACANT , PHY_NOT_PRESENT , PHY_DEVICE_DISCOVERED } 
e#routing_attribute enum routing_attribute { DIRECT_ROUTING , SUBTRACTIVE_ROUTING , TABLE_ROUTING , } 
s#ex_phy struct ex_phy { int phy_id ; e#ex_phy_state phy_state ; e#sas_device_type attached_dev_type ; e#sas_linkrate linkrate ; t#u8 attached_sata_host : 1 ; t#u8 attached_sata_dev : 1 ; t#u8 attached_sata_ps : 1 ; e#sas_protocol attached_tproto ; e#sas_protocol attached_iproto ; t#u8 attached_sas_addr [ 8 ] ; t#u8 attached_phy_id ; int phy_change_count ; e#routing_attribute routing_attr ; t#u8 virtual : 1 ; int last_da_index ; s#sas_phy * phy ; s#sas_port * port ; } 
s#expander_device struct expander_device { s#list_head children ; int ex_change_count ; t#u16 max_route_indexes ; t#u8 num_phys ; t#u8 t2t_supp : 1 ; t#u8 configuring : 1 ; t#u8 conf_route_table : 1 ; t#u8 enclosure_logical_id [ 8 ] ; s#ex_phy * ex_phy ; s#sas_port * parent_port ; s#mutex cmd_mutex ; } 
e#ata_command_set enum ata_command_set { ATA_COMMAND_SET = 0 , ATAPI_COMMAND_SET = 1 , } 
s#report_general_resp struct report_general_resp { t#__be16 change_count ; t#__be16 route_indexes ; t#u8 _r_a ; t#u8 num_phys ; t#u8 conf_route_table : 1 ; t#u8 configuring : 1 ; t#u8 config_others : 1 ; t#u8 orej_retry_supp : 1 ; t#u8 stp_cont_awt : 1 ; t#u8 self_config : 1 ; t#u8 zone_config : 1 ; t#u8 t2t_supp : 1 ; t#u8 _r_c ; t#u8 enclosure_logical_id [ 8 ] ; t#u8 _r_d [ 12 ] ; } 
s#discover_resp struct discover_resp { t#u8 _r_a [ 5 ] ; t#u8 phy_id ; t#__be16 _r_b ; t#u8 _r_c : 4 ; t#u8 attached_dev_type : 3 ; t#u8 _r_d : 1 ; t#u8 linkrate : 4 ; t#u8 _r_e : 4 ; t#u8 attached_sata_host : 1 ; t#u8 iproto : 3 ; t#u8 _r_f : 4 ; t#u8 attached_sata_dev : 1 ; t#u8 tproto : 3 ; t#u8 _r_g : 3 ; t#u8 attached_sata_ps : 1 ; t#u8 sas_addr [ 8 ] ; t#u8 attached_sas_addr [ 8 ] ; t#u8 attached_phy_id ; t#u8 _r_h [ 7 ] ; t#u8 hmin_linkrate : 4 ; t#u8 pmin_linkrate : 4 ; t#u8 hmax_linkrate : 4 ; t#u8 pmax_linkrate : 4 ; t#u8 change_count ; t#u8 pptv : 4 ; t#u8 _r_i : 3 ; t#u8 virtual : 1 ; t#u8 routing_attr : 4 ; t#u8 _r_j : 4 ; t#u8 conn_type ; t#u8 conn_el_index ; t#u8 conn_phy_link ; t#u8 _r_k [ 8 ] ; } 
s#dev_to_host_fis struct dev_to_host_fis { t#u8 fis_type ; t#u8 flags ; t#u8 status ; t#u8 error ; t#u8 lbal ; union { t#u8 lbam ; t#u8 byte_count_low ; } ; union { t#u8 lbah ; t#u8 byte_count_high ; } ; t#u8 device ; t#u8 lbal_exp ; t#u8 lbam_exp ; t#u8 lbah_exp ; t#u8 _r_a ; union { t#u8 sector_count ; t#u8 interrupt_reason ; } ; t#u8 sector_count_exp ; t#u8 _r_b ; t#u8 _r_c ; t#u32 _r_d ; } 
s#report_phy_sata_resp struct report_phy_sata_resp { t#u8 _r_a [ 5 ] ; t#u8 phy_id ; t#u8 _r_b ; t#u8 affil_valid : 1 ; t#u8 affil_supp : 1 ; t#u8 _r_c : 6 ; t#u32 _r_d ; t#u8 stp_sas_addr [ 8 ] ; s#dev_to_host_fis fis ; t#u32 _r_e ; t#u8 affil_stp_ini_addr [ 8 ] ; t#__be32 crc ; } 
s#smp_resp struct smp_resp { t#u8 frame_type ; t#u8 function ; t#u8 result ; t#u8 reserved ; union { s#report_general_resp rg ; s#discover_resp disc ; s#report_phy_sata_resp rps ; } ; } 
s#sata_device struct sata_device { e#ata_command_set command_set ; s#smp_resp rps_resp ; t#u8 port_no ; int pm_result ; s#ata_port * ap ; s#ata_host ata_host ; t#u8 fis [ 24 ] ; } 
s#ssp_device struct ssp_device { s#list_head eh_list_node ; s#scsi_lun reset_lun ; } 
s#domain_device struct domain_device { t#spinlock_t done_lock ; e#sas_device_type dev_type ; e#sas_linkrate linkrate ; e#sas_linkrate min_linkrate ; e#sas_linkrate max_linkrate ; int pathways ; s#domain_device * parent ; s#list_head siblings ; s#asd_sas_port * port ; s#sas_phy * phy ; s#list_head dev_list_node ; s#list_head disco_list_node ; e#sas_protocol iproto ; e#sas_protocol tproto ; s#sas_rphy * rphy ; t#u8 sas_addr [ 8 ] ; t#u8 hashed_sas_addr [ 3 ] ; t#u8 frame_rcvd [ 32 ] ; union { s#expander_device ex_dev ; s#sata_device sata_dev ; s#ssp_device ssp_dev ; } ; void * lldd_dev ; unsigned long state ; s#kref kref ; } 
sas_ata_schedule_reset void sas_ata_schedule_reset ( s#domain_device * ) 

/* drivers/scsi/libsas/sas_event.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##sock
s##sysfs_dirent
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s##scsi_transport_template
sas_drain_work extern int sas_drain_work ( s#sas_ha_struct * ) 

/* drivers/scsi/libsas/sas_host_smp.o */
try_test_sas_gpio_gp_bit int try_test_sas_gpio_gp_bit ( unsigned int , t#u8 * , t#u8 , t#u8 ) 

/* drivers/scsi/libsas/sas_init.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s#host_to_dev_fis struct host_to_dev_fis { t#u8 fis_type ; t#u8 flags ; t#u8 command ; t#u8 features ; t#u8 lbal ; union { t#u8 lbam ; t#u8 byte_count_low ; } ; union { t#u8 lbah ; t#u8 byte_count_high ; } ; t#u8 device ; t#u8 lbal_exp ; t#u8 lbam_exp ; t#u8 lbah_exp ; t#u8 features_exp ; union { t#u8 sector_count ; t#u8 interrupt_reason ; } ; t#u8 sector_count_exp ; t#u8 _r_a ; t#u8 control ; t#u32 _r_b ; } 
s#sas_ata_task struct sas_ata_task { s#host_to_dev_fis fis ; t#u8 atapi_packet [ 16 ] ; t#u8 retry_count ; t#u8 dma_xfer : 1 ; t#u8 use_ncq : 1 ; t#u8 set_affil_pol : 1 ; t#u8 stp_affil_pol : 1 ; t#u8 device_control_reg_update : 1 ; } 
s#sas_smp_task struct sas_smp_task { s#scatterlist smp_req ; s#scatterlist smp_resp ; } 
e#task_attribute enum task_attribute { TASK_ATTR_SIMPLE = 0 , TASK_ATTR_HOQ = 1 , TASK_ATTR_ORDERED = 2 , TASK_ATTR_ACA = 4 , } 
s#sas_ssp_task struct sas_ssp_task { t#u8 retry_count ; t#u8 LUN [ 8 ] ; t#u8 enable_first_burst : 1 ; e#task_attribute task_attr ; t#u8 task_prio ; s#scsi_cmnd * cmd ; } 
e#service_response enum service_response { SAS_TASK_COMPLETE , SAS_TASK_UNDELIVERED = - 1 , } 
e#exec_status enum exec_status { __SAM_STAT_CHECK_CONDITION = 0x02 , SAS_DEV_NO_RESPONSE = 0x80 , SAS_DATA_UNDERRUN , SAS_DATA_OVERRUN , SAS_INTERRUPTED , SAS_QUEUE_FULL , SAS_DEVICE_UNKNOWN , SAS_SG_ERR , SAS_OPEN_REJECT , SAS_OPEN_TO , SAS_PROTO_RESPONSE , SAS_PHY_DOWN , SAS_NAK_R_ERR , SAS_PENDING , SAS_ABORTED_TASK , } 
e#sas_open_rej_reason enum sas_open_rej_reason { SAS_OREJ_UNKNOWN = 0 , SAS_OREJ_BAD_DEST = 1 , SAS_OREJ_CONN_RATE = 2 , SAS_OREJ_EPROTO = 3 , SAS_OREJ_RESV_AB0 = 4 , SAS_OREJ_RESV_AB1 = 5 , SAS_OREJ_RESV_AB2 = 6 , SAS_OREJ_RESV_AB3 = 7 , SAS_OREJ_WRONG_DEST = 8 , SAS_OREJ_STP_NORES = 9 , SAS_OREJ_NO_DEST = 10 , SAS_OREJ_PATH_BLOCKED = 11 , SAS_OREJ_RSVD_CONT0 = 12 , SAS_OREJ_RSVD_CONT1 = 13 , SAS_OREJ_RSVD_INIT0 = 14 , SAS_OREJ_RSVD_INIT1 = 15 , SAS_OREJ_RSVD_STOP0 = 16 , SAS_OREJ_RSVD_STOP1 = 17 , SAS_OREJ_RSVD_RETRY = 18 , } 
s#task_status_struct struct task_status_struct { e#service_response resp ; e#exec_status stat ; int buf_valid_size ; t#u8 buf [ 96 ] ; t#u32 residual ; e#sas_open_rej_reason open_rej_reason ; } 
s#sas_task_slow struct sas_task_slow { s#timer_list timer ; s#completion completion ; } 
s#sas_task struct sas_task { s#domain_device * dev ; s#list_head list ; t#spinlock_t task_state_lock ; unsigned task_state_flags ; e#sas_protocol task_proto ; union { s#sas_ata_task ata_task ; s#sas_smp_task smp_task ; s#sas_ssp_task ssp_task ; } ; s#scatterlist * scatter ; int num_scatter ; t#u32 total_xfer_len ; t#u8 data_dir : 2 ; s#task_status_struct task_status ; void ( * task_done ) ( s#sas_task * ) ; void * lldd_task ; void * uldd_task ; s#sas_task_slow * slow_task ; } 
sas_alloc_task extern s#sas_task * sas_alloc_task ( t#gfp_t ) 
sas_alloc_slow_task extern s#sas_task * sas_alloc_slow_task ( t#gfp_t ) 
sas_free_task extern void sas_free_task ( s#sas_task * ) 
sas_prep_resume_ha extern void sas_prep_resume_ha ( s#sas_ha_struct * ) 
sas_resume_ha extern void sas_resume_ha ( s#sas_ha_struct * ) 
sas_suspend_ha extern void sas_suspend_ha ( s#sas_ha_struct * ) 
e#phy_func enum phy_func { PHY_FUNC_NOP , PHY_FUNC_LINK_RESET , PHY_FUNC_HARD_RESET , PHY_FUNC_DISABLE , PHY_FUNC_CLEAR_ERROR_LOG = 5 , PHY_FUNC_CLEAR_AFFIL , PHY_FUNC_TX_SATA_PS_SIGNAL , PHY_FUNC_RELEASE_SPINUP_HOLD = 0x10 , PHY_FUNC_SET_LINK_RATE , PHY_FUNC_GET_EVENTS , } 
s#sas_domain_function_template struct sas_domain_function_template { void ( * lldd_port_formed ) ( s#asd_sas_phy * ) ; void ( * lldd_port_deformed ) ( s#asd_sas_phy * ) ; int ( * lldd_dev_found ) ( s#domain_device * ) ; void ( * lldd_dev_gone ) ( s#domain_device * ) ; int ( * lldd_execute_task ) ( s#sas_task * , int , t#gfp_t ) ; int ( * lldd_abort_task ) ( s#sas_task * ) ; int ( * lldd_abort_task_set ) ( s#domain_device * , t#u8 * ) ; int ( * lldd_clear_aca ) ( s#domain_device * , t#u8 * ) ; int ( * lldd_clear_task_set ) ( s#domain_device * , t#u8 * ) ; int ( * lldd_I_T_nexus_reset ) ( s#domain_device * ) ; int ( * lldd_ata_check_ready ) ( s#domain_device * ) ; void ( * lldd_ata_set_dmamode ) ( s#domain_device * ) ; int ( * lldd_lu_reset ) ( s#domain_device * , t#u8 * ) ; int ( * lldd_query_task ) ( s#sas_task * ) ; int ( * lldd_clear_nexus_port ) ( s#asd_sas_port * ) ; int ( * lldd_clear_nexus_ha ) ( s#sas_ha_struct * ) ; int ( * lldd_control_phy ) ( s#asd_sas_phy * , e#phy_func , void * ) ; int ( * lldd_write_gpio ) ( s#sas_ha_struct * , t#u8 , t#u8 , t#u8 , t#u8 * ) ; } 
sas_domain_attach_transport extern s#scsi_transport_template * sas_domain_attach_transport ( s#sas_domain_function_template * ) 
sas_domain_release_transport extern void sas_domain_release_transport ( s#scsi_transport_template * ) 
sas_register_ha extern int sas_register_ha ( s#sas_ha_struct * ) 
sas_unregister_ha extern int sas_unregister_ha ( s#sas_ha_struct * ) 

/* drivers/scsi/libsas/sas_scsi_host.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##scsi_host_cmd_pool
sas_get_local_phy s#sas_phy * sas_get_local_phy ( s#domain_device * ) 
sas_wait_eh void sas_wait_eh ( s#domain_device * ) 
sas_eh_abort_handler int sas_eh_abort_handler ( s#scsi_cmnd * ) 
sas_request_addr int sas_request_addr ( s#Scsi_Host * , t#u8 * ) 
sas_queuecommand extern int sas_queuecommand ( s#Scsi_Host * , s#scsi_cmnd * ) 
sas_target_alloc extern int sas_target_alloc ( s#scsi_target * ) 
sas_slave_configure extern int sas_slave_configure ( s#scsi_device * ) 
sas_change_queue_depth extern int sas_change_queue_depth ( s#scsi_device * , int , int ) 
sas_change_queue_type extern int sas_change_queue_type ( s#scsi_device * , int ) 
sas_bios_param extern int sas_bios_param ( s#scsi_device * , s#block_device * , t#sector_t , int * ) 
sas_task_abort void sas_task_abort ( s#sas_task * ) 
sas_phy_reset int sas_phy_reset ( s#sas_phy * , int ) 
sas_eh_device_reset_handler int sas_eh_device_reset_handler ( s#scsi_cmnd * ) 
sas_eh_bus_reset_handler int sas_eh_bus_reset_handler ( s#scsi_cmnd * ) 
sas_target_destroy extern void sas_target_destroy ( s#scsi_target * ) 
sas_ioctl extern int sas_ioctl ( s#scsi_device * , int , void * ) 

/* drivers/scsi/libsas/sas_task.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s##scsi_transport_template
s#ssp_response_iu struct ssp_response_iu { t#u8 _r_a [ 10 ] ; t#u8 datapres : 2 ; t#u8 _r_b : 6 ; t#u8 status ; t#u32 _r_c ; t#__be32 sense_data_len ; t#__be32 response_data_len ; t#u8 resp_data [ 0 ] ; t#u8 sense_data [ 0 ] ; } 
sas_ssp_task_response extern void sas_ssp_task_response ( s#device * , s#sas_task * , s#ssp_response_iu * ) 

/* drivers/scsi/libsrp.o */
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##scsi_sense_hdr
s##proc_dir_entry
s##scsi_transport_template
s#srp_queue struct srp_queue { void * pool ; void * items ; s#kfifo queue ; t#spinlock_t lock ; } 
s#srp_buf struct srp_buf { t#dma_addr_t dma ; void * buf ; } 
s#srp_target struct srp_target { s#Scsi_Host * shost ; s#device * dev ; t#spinlock_t lock ; s#list_head cmd_queue ; t#size_t srp_iu_size ; s#srp_queue iu_queue ; t#size_t rx_ring_size ; s#srp_buf * * rx_ring ; void * ldata ; } 
srp_target_alloc extern int srp_target_alloc ( s#srp_target * , s#device * , t#size_t , t#size_t ) 
srp_target_free extern void srp_target_free ( s#srp_target * ) 
s#iu_entry struct iu_entry { s#srp_target * target ; s#list_head ilist ; t#dma_addr_t remote_token ; unsigned long flags ; s#srp_buf * sbuf ; } 
srp_iu_get extern s#iu_entry * srp_iu_get ( s#srp_target * ) 
srp_iu_put extern void srp_iu_put ( s#iu_entry * ) 
s#srp_cmd struct srp_cmd { t#u8 opcode ; t#u8 sol_not ; t#u8 reserved1 [ 3 ] ; t#u8 buf_fmt ; t#u8 data_out_desc_cnt ; t#u8 data_in_desc_cnt ; t#u64 tag ; t#u8 reserved2 [ 4 ] ; t#__be64 lun __attribute__ ( ( packed ) ) ; t#u8 reserved3 ; t#u8 task_attr ; t#u8 reserved4 ; t#u8 add_cdb_len ; t#u8 cdb [ 16 ] ; t#u8 add_data [ 0 ] ; } 
s#srp_direct_buf struct srp_direct_buf { t#__be64 va ; t#__be32 key ; t#__be32 len ; } 
t#srp_rdma_t typedef int ( srp_rdma_t ) ( s#scsi_cmnd * , s#scatterlist * , int , s#srp_direct_buf * , int , e#dma_data_direction , unsigned int ) 
srp_transfer_data extern int srp_transfer_data ( s#scsi_cmnd * , s#srp_cmd * , t#srp_rdma_t , int , int ) 
srp_cmd_queue extern int srp_cmd_queue ( s#Scsi_Host * , s#srp_cmd * , void * , t#u64 , t#u64 ) 

/* drivers/scsi/osd/osd_initiator.o */
s##Scsi_Host
s##blk_mq_ctx
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##scsi_cmnd
s##scsi_sense_hdr
e#osd_std_version enum osd_std_version { OSD_VER_NONE = 0 , OSD_VER1 = 1 , OSD_VER2 = 2 , } 
s#osd_dev struct osd_dev { s#scsi_device * scsi_device ; unsigned def_timeout ; e#osd_std_version version ; } 
E#OSD_SYSTEMID_LEN 20 
s#osd_dev_info struct osd_dev_info { unsigned systemid_len ; t#u8 systemid [ E#OSD_SYSTEMID_LEN ] ; unsigned osdname_len ; t#u8 * osdname ; } 
osd_auto_detect_ver int osd_auto_detect_ver ( s#osd_dev * , void * , s#osd_dev_info * ) 
osd_dev_init void osd_dev_init ( s#osd_dev * , s#scsi_device * ) 
osd_dev_fini void osd_dev_fini ( s#osd_dev * ) 
s#scsi_varlen_cdb_hdr struct scsi_varlen_cdb_hdr { t#__u8 opcode ; t#__u8 control ; t#__u8 misc [ 5 ] ; t#__u8 additional_cdb_length ; t#__be16 service_action ; } 
s#__osdv1_cdb_addr_len struct __osdv1_cdb_addr_len { t#__be32 list_identifier ; t#__be64 length ; t#__be64 start_address ; } 
s#__osdv2_cdb_addr_len struct __osdv2_cdb_addr_len { t#__be64 length ; t#__be64 start_address ; union { t#__be32 list_identifier ; t#__be32 cdb_continuation_length ; } ; } 
t#osd_cdb_offset typedef t#__be32 osd_cdb_offset 
s#osd_attributes_page_mode struct osd_attributes_page_mode { t#__be32 get_attr_page ; t#__be32 get_attr_alloc_length ; t#osd_cdb_offset get_attr_offset ; t#__be32 set_attr_page ; t#__be32 set_attr_id ; t#__be32 set_attr_length ; t#osd_cdb_offset set_attr_offset ; } 
s#osd_attributes_list_mode struct osd_attributes_list_mode { t#__be32 get_attr_desc_bytes ; t#osd_cdb_offset get_attr_desc_offset ; t#__be32 get_attr_alloc_length ; t#osd_cdb_offset get_attr_offset ; t#__be32 set_attr_bytes ; t#osd_cdb_offset set_attr_offset ; t#__be32 not_used ; } 
s#osd_attributes_cdb_mode struct osd_attributes_cdb_mode { t#__be32 set_attr_page ; t#__be32 set_attr_id ; t#__be16 set_attr_len ; t#u8 set_attr_val [ 18 ] ; } 
s#osd_cdb_head struct osd_cdb_head { s#scsi_varlen_cdb_hdr varlen_cdb ; t#u8 options ; t#u8 command_specific_options ; t#u8 timestamp_control ; t#u8 reserved1 [ 3 ] ; t#__be64 partition ; t#__be64 object ; union { s#__osdv1_cdb_addr_len __attribute__ ( ( packed ) ) v1 ; s#__osdv2_cdb_addr_len __attribute__ ( ( packed ) ) v2 ; } ; union { s#osd_attributes_page_mode __attribute__ ( ( packed ) ) attrs_page ; s#osd_attributes_list_mode __attribute__ ( ( packed ) ) attrs_list ; s#osd_attributes_cdb_mode __attribute__ ( ( packed ) ) attrs_cdb ; t#u8 get_set_attributes_parameters [ 28 ] ; } ; } 
E#OSDv1_CAP_LEN 80 
E#OSDv1_CRYPTO_KEYID_SIZE 20 
E#OSD_CRYPTO_NONCE_SIZE 12 
s#osdv1_security_parameters struct osdv1_security_parameters { t#u8 integrity_check_value [ E#OSDv1_CRYPTO_KEYID_SIZE ] ; t#u8 request_nonce [ E#OSD_CRYPTO_NONCE_SIZE ] ; t#osd_cdb_offset data_in_integrity_check_offset ; t#osd_cdb_offset data_out_integrity_check_offset ; } 
s#osdv1_cdb struct osdv1_cdb { s#osd_cdb_head h ; t#u8 caps [ E#OSDv1_CAP_LEN ] ; s#osdv1_security_parameters sec_params ; } 
E#OSD_CAP_LEN 104 
E#OSDv2_CRYPTO_KEYID_SIZE 32 
s#osdv2_security_parameters struct osdv2_security_parameters { t#u8 integrity_check_value [ E#OSDv2_CRYPTO_KEYID_SIZE ] ; t#u8 request_nonce [ E#OSD_CRYPTO_NONCE_SIZE ] ; t#osd_cdb_offset data_in_integrity_check_offset ; t#osd_cdb_offset data_out_integrity_check_offset ; } 
s#osdv2_cdb struct osdv2_cdb { s#osd_cdb_head h ; t#u8 caps [ E#OSD_CAP_LEN ] ; s#osdv2_security_parameters sec_params ; } 
E#OSDv2_ADDITIONAL_CDB_LENGTH 228 
E#OSD_ADDITIONAL_CDB_LENGTH E#OSDv2_ADDITIONAL_CDB_LENGTH 
E#OSD_TOTAL_CDB_LEN E#OSD_ADDITIONAL_CDB_LENGTH + 8 
s#osd_cdb struct osd_cdb { union { s#osdv1_cdb v1 ; s#osdv2_cdb v2 ; t#u8 buff [ E#OSD_TOTAL_CDB_LEN ] ; } ; } 
E#OSD_CRYPTO_KEYID_SIZE E#OSDv2_CRYPTO_KEYID_SIZE 
s#osd_data_out_integrity_info struct osd_data_out_integrity_info { t#__be64 data_bytes ; t#__be64 set_attributes_bytes ; t#__be64 get_attributes_bytes ; t#__u8 integrity_check_value [ E#OSD_CRYPTO_KEYID_SIZE ] ; } 
s#osd_data_in_integrity_info struct osd_data_in_integrity_info { t#__be64 data_bytes ; t#__be64 retrieved_attributes_bytes ; t#__u8 integrity_check_value [ E#OSD_CRYPTO_KEYID_SIZE ] ; } 
s#_osd_req_data_segment struct _osd_req_data_segment { void * buff ; unsigned alloc_size ; unsigned total_bytes ; } 
s#_osd_io_info struct _osd_io_info { s#bio * bio ; t#u64 total_bytes ; t#u64 residual ; s#request * req ; s#_osd_req_data_segment * last_seg ; t#u8 * pad_buff ; } 
E#OSD_MAX_SENSE_LEN 252 
e#osd_attributes_mode enum osd_attributes_mode { OSD_CDB_SET_ONE_ATTR = 0x10 , OSD_CDB_GET_ATTR_PAGE_SET_ONE = 0x20 , OSD_CDB_GET_SET_ATTR_LISTS = 0x30 , OSD_CDB_GET_SET_ATTR_MASK = 0x30 , } 
t#osd_req_done_fn typedef void ( osd_req_done_fn ) ( s#osd_request * , void * ) 
s#osd_request struct osd_request { s#osd_cdb cdb ; s#osd_data_out_integrity_info out_data_integ ; s#osd_data_in_integrity_info in_data_integ ; s#osd_dev * osd_dev ; s#request * request ; s#_osd_req_data_segment cdb_cont , set_attr , enc_get_attr , get_attr ; s#_osd_io_info out , in ; t#gfp_t alloc_flags ; unsigned timeout ; unsigned retries ; unsigned sense_len ; t#u8 sense [ E#OSD_MAX_SENSE_LEN ] ; e#osd_attributes_mode attributes_mode ; t#osd_req_done_fn * async_done ; void * async_private ; int async_error ; int req_errors ; } 
osd_start_request s#osd_request * osd_start_request ( s#osd_dev * , t#gfp_t ) 
osd_end_request void osd_end_request ( s#osd_request * ) 
osd_execute_request int osd_execute_request ( s#osd_request * ) 
osd_execute_request_async int osd_execute_request_async ( s#osd_request * , t#osd_req_done_fn * , void * ) 
osd_req_format void osd_req_format ( s#osd_request * , t#u64 ) 
t#osd_id typedef t#u64 osd_id 
s#osd_obj_id_list struct osd_obj_id_list { t#__be64 list_bytes ; t#__be64 continuation_id ; t#__be32 list_identifier ; t#u8 pad [ 3 ] ; t#u8 root_lstchg ; t#__be64 object_ids [ 0 ] ; } 
osd_req_list_dev_partitions int osd_req_list_dev_partitions ( s#osd_request * , t#osd_id , s#osd_obj_id_list * , unsigned ) 
e#osd_options_flush_scope_values enum osd_options_flush_scope_values { OSD_CDB_FLUSH_ALL = 0 , OSD_CDB_FLUSH_ATTR_ONLY = 1 , OSD_CDB_FLUSH_ALL_RECURSIVE = 2 , OSD_CDB_FLUSH_ALL_RANGE = 2 , } 
osd_req_flush_obsd void osd_req_flush_obsd ( s#osd_request * , e#osd_options_flush_scope_values ) 
osd_req_create_partition void osd_req_create_partition ( s#osd_request * , t#osd_id ) 
osd_req_remove_partition void osd_req_remove_partition ( s#osd_request * , t#osd_id ) 
osd_req_list_partition_collections int osd_req_list_partition_collections ( s#osd_request * , t#osd_id , t#osd_id , s#osd_obj_id_list * , unsigned ) 
osd_req_list_partition_objects int osd_req_list_partition_objects ( s#osd_request * , t#osd_id , t#osd_id , s#osd_obj_id_list * , unsigned ) 
osd_req_flush_partition void osd_req_flush_partition ( s#osd_request * , t#osd_id , e#osd_options_flush_scope_values ) 
s#osd_obj_id struct osd_obj_id { t#osd_id partition ; t#osd_id id ; } 
osd_req_list_collection_objects int osd_req_list_collection_objects ( s#osd_request * , const s#osd_obj_id * , t#osd_id , s#osd_obj_id_list * , unsigned ) 
osd_req_flush_collection void osd_req_flush_collection ( s#osd_request * , const s#osd_obj_id * , e#osd_options_flush_scope_values ) 
osd_req_create_object void osd_req_create_object ( s#osd_request * , s#osd_obj_id * ) 
osd_req_remove_object void osd_req_remove_object ( s#osd_request * , s#osd_obj_id * ) 
osd_req_write void osd_req_write ( s#osd_request * , const s#osd_obj_id * , t#u64 , s#bio * , t#u64 ) 
osd_req_write_kern int osd_req_write_kern ( s#osd_request * , const s#osd_obj_id * , t#u64 , void * , t#u64 ) 
osd_req_flush_object void osd_req_flush_object ( s#osd_request * , const s#osd_obj_id * , e#osd_options_flush_scope_values , t#u64 , t#u64 ) 
osd_req_read void osd_req_read ( s#osd_request * , const s#osd_obj_id * , t#u64 , s#bio * , t#u64 ) 
osd_req_read_kern int osd_req_read_kern ( s#osd_request * , const s#osd_obj_id * , t#u64 , void * , t#u64 ) 
s#osd_sg_entry struct osd_sg_entry { t#u64 offset ; t#u64 len ; } 
osd_req_write_sg int osd_req_write_sg ( s#osd_request * , const s#osd_obj_id * , s#bio * , const s#osd_sg_entry * , unsigned ) 
osd_req_read_sg int osd_req_read_sg ( s#osd_request * , const s#osd_obj_id * , s#bio * , const s#osd_sg_entry * , unsigned ) 
osd_req_write_sg_kern int osd_req_write_sg_kern ( s#osd_request * , const s#osd_obj_id * , void * * , const s#osd_sg_entry * , unsigned ) 
osd_req_read_sg_kern int osd_req_read_sg_kern ( s#osd_request * , const s#osd_obj_id * , void * * , const s#osd_sg_entry * , unsigned ) 
osd_req_get_attributes void osd_req_get_attributes ( s#osd_request * , const s#osd_obj_id * ) 
osd_req_set_attributes void osd_req_set_attributes ( s#osd_request * , const s#osd_obj_id * ) 
s#osd_attr struct osd_attr { t#u32 attr_page ; t#u32 attr_id ; t#u16 len ; void * val_ptr ; } 
osd_req_add_set_attr_list int osd_req_add_set_attr_list ( s#osd_request * , const s#osd_attr * , unsigned ) 
osd_req_add_get_attr_list int osd_req_add_get_attr_list ( s#osd_request * , const s#osd_attr * , unsigned ) 
osd_req_decode_get_attr_list int osd_req_decode_get_attr_list ( s#osd_request * , s#osd_attr * , int * , void * * ) 
osd_req_add_get_attr_page int osd_req_add_get_attr_page ( s#osd_request * , t#u32 , void * , unsigned , const s#osd_attr * ) 
osd_finalize_request int osd_finalize_request ( s#osd_request * , t#u8 , const void * , const t#u8 * ) 
e#osd_err_priority enum osd_err_priority { OSD_ERR_PRI_NO_ERROR = 0 , OSD_ERR_PRI_CLEAR_PAGES = 1 , OSD_ERR_PRI_RESOURCE = 2 , OSD_ERR_PRI_BAD_CRED = 3 , OSD_ERR_PRI_NO_ACCESS = 4 , OSD_ERR_PRI_UNREACHABLE = 5 , OSD_ERR_PRI_NOT_FOUND = 6 , OSD_ERR_PRI_NO_SPACE = 7 , OSD_ERR_PRI_EIO = 8 , } 
s#osd_sense_info struct osd_sense_info { e#osd_err_priority osd_err_pri ; int key ; int additional_code ; union { t#u16 sense_info ; t#u16 cdb_field_offset ; } ; union { t#u64 command_info ; } ; t#u32 not_initiated_command_functions ; t#u32 completed_command_functions ; s#osd_obj_id obj ; s#osd_attr attr ; } 
osd_req_decode_sense_full int osd_req_decode_sense_full ( s#osd_request * , s#osd_sense_info * , t#bool , s#osd_obj_id * , int , s#osd_attr * , int ) 
osd_sec_init_nosec_doall_caps void osd_sec_init_nosec_doall_caps ( void * , const s#osd_obj_id * , t#bool , const t#bool ) 

/* drivers/scsi/osd/osd_uld.o */
s##Scsi_Host
s##blk_mq_ctx
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##scsi_cmnd
s##scsi_sense_hdr
t#do_test_fn typedef int ( do_test_fn ) ( s#osd_dev * , unsigned , unsigned long ) 
osduld_register_test int osduld_register_test ( unsigned , t#do_test_fn * ) 
osduld_unregister_test void osduld_unregister_test ( unsigned ) 
osduld_path_lookup s#osd_dev * osduld_path_lookup ( const char * ) 
osduld_info_lookup s#osd_dev * osduld_info_lookup ( const s#osd_dev_info * ) 
osduld_put_device void osduld_put_device ( s#osd_dev * ) 
osduld_device_info const s#osd_dev_info * osduld_device_info ( s#osd_dev * ) 
osduld_device_same t#bool osduld_device_same ( s#osd_dev * , const s#osd_dev_info * ) 

/* drivers/scsi/qla2xxx/qla_target.o */
t#port_id_t typedef union { t#uint32_t b24 : 24 ; struct { t#uint8_t al_pa ; t#uint8_t area ; t#uint8_t domain ; t#uint8_t rsvd_1 ; } b ; } port_id_t 
e#target_prot_op enum target_prot_op { TARGET_PROT_NORMAL = 0 , TARGET_PROT_DIN_INSERT = ( 1 << 0 ) , TARGET_PROT_DOUT_INSERT = ( 1 << 1 ) , TARGET_PROT_DIN_STRIP = ( 1 << 2 ) , TARGET_PROT_DOUT_STRIP = ( 1 << 3 ) , TARGET_PROT_DIN_PASS = ( 1 << 4 ) , TARGET_PROT_DOUT_PASS = ( 1 << 5 ) , } 
e#transport_lun_status_table enum transport_lun_status_table { TRANSPORT_LUN_STATUS_FREE = 0 , TRANSPORT_LUN_STATUS_ACTIVE = 1 , } 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##iw_handler_def
s##iw_public_data
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s#configfs_attribute struct configfs_attribute { const char * ca_name ; s#module * ca_owner ; t#umode_t ca_mode ; } 
s#configfs_item_operations struct configfs_item_operations { void ( * release ) ( s#config_item * ) ; t#ssize_t ( * show_attribute ) ( s#config_item * , s#configfs_attribute * , char * ) ; t#ssize_t ( * store_attribute ) ( s#config_item * , s#configfs_attribute * , const char * , t#size_t ) ; int ( * allow_link ) ( s#config_item * , s#config_item * ) ; int ( * drop_link ) ( s#config_item * , s#config_item * ) ; } 
s#configfs_group_operations struct configfs_group_operations { s#config_item * ( * make_item ) ( s#config_group * , const char * ) ; s#config_group * ( * make_group ) ( s#config_group * , const char * ) ; int ( * commit_item ) ( s#config_item * ) ; void ( * disconnect_notify ) ( s#config_group * , s#config_item * ) ; void ( * drop_item ) ( s#config_group * , s#config_item * ) ; } 
s#config_item_type struct config_item_type { s#module * ct_owner ; s#configfs_item_operations * ct_item_ops ; s#configfs_group_operations * ct_group_ops ; s#configfs_attribute * * ct_attrs ; } 
s#config_item struct config_item { char * ci_name ; char ci_namebuf [ 20 ] ; s#kref ci_kref ; s#list_head ci_entry ; s#config_item * ci_parent ; s#config_group * ci_group ; s#config_item_type * ci_type ; s#dentry * ci_dentry ; } 
s#configfs_subsystem struct configfs_subsystem { s#config_group su_group ; s#mutex su_mutex ; } 
s#config_group struct config_group { s#config_item cg_item ; s#list_head cg_children ; s#configfs_subsystem * cg_subsys ; s#config_group * * default_groups ; } 
s#t10_alua_lu_gp struct t10_alua_lu_gp { t#u16 lu_gp_id ; int lu_gp_valid_id ; t#u32 lu_gp_members ; t#atomic_t lu_gp_ref_cnt ; t#spinlock_t lu_gp_lock ; s#config_group lu_gp_group ; s#list_head lu_gp_node ; s#list_head lu_gp_mem_list ; } 
s#t10_alua_lu_gp_member struct t10_alua_lu_gp_member { t#bool lu_gp_assoc ; t#atomic_t lu_gp_mem_ref_cnt ; t#spinlock_t lu_gp_mem_lock ; s#t10_alua_lu_gp * lu_gp ; s#se_device * lu_gp_mem_dev ; s#list_head lu_gp_mem_list ; } 
s#t10_pr_registration struct t10_pr_registration { char pr_reg_isid [ 16 ] ; unsigned char pr_iport [ 256 ] ; unsigned char pr_tport [ 256 ] ; t#u16 pr_aptpl_rpti ; t#u16 pr_reg_tpgt ; int pr_reg_all_tg_pt ; int pr_reg_aptpl ; int pr_res_holder ; int pr_res_type ; int pr_res_scope ; t#bool isid_present_at_reg ; t#u32 pr_res_mapped_lun ; t#u32 pr_aptpl_target_lun ; t#u32 pr_res_generation ; t#u64 pr_reg_bin_isid ; t#u64 pr_res_key ; t#atomic_t pr_res_holders ; s#se_node_acl * pr_reg_nacl ; s#se_dev_entry * pr_reg_deve ; s#se_lun * pr_reg_tg_pt_lun ; s#list_head pr_reg_list ; s#list_head pr_reg_abort_list ; s#list_head pr_reg_aptpl_list ; s#list_head pr_reg_atp_list ; s#list_head pr_reg_atp_mem_list ; } 
s##se_subsystem_api
s#se_hba struct se_hba { t#u16 hba_tpgt ; t#u32 hba_id ; t#u32 hba_flags ; t#u32 dev_count ; t#u32 hba_index ; void * hba_ptr ; s#list_head hba_node ; t#spinlock_t device_lock ; s#config_group hba_group ; s#mutex hba_access_mutex ; s#se_subsystem_api * transport ; } 
s#t10_wwn struct t10_wwn { char vendor [ 8 ] ; char model [ 16 ] ; char revision [ 4 ] ; char unit_serial [ 254 ] ; t#spinlock_t t10_vpd_lock ; s#se_device * t10_dev ; s#config_group t10_wwn_group ; s#list_head t10_vpd_list ; } 
s#scsi_port_stats struct scsi_port_stats { t#u64 cmd_pdus ; t#u64 tx_data_octets ; t#u64 rx_data_octets ; } 
s#t10_alua_tg_pt_gp_member struct t10_alua_tg_pt_gp_member { t#bool tg_pt_gp_assoc ; t#atomic_t tg_pt_gp_mem_ref_cnt ; t#spinlock_t tg_pt_gp_mem_lock ; s#t10_alua_tg_pt_gp * tg_pt_gp ; s#se_port * tg_pt ; s#list_head tg_pt_gp_mem_list ; } 
e#transport_tpg_type_table enum transport_tpg_type_table { TRANSPORT_TPG_TYPE_NORMAL = 0 , TRANSPORT_TPG_TYPE_DISCOVERY = 1 , } 
e#transport_state_table enum transport_state_table { TRANSPORT_NO_STATE = 0 , TRANSPORT_NEW_CMD = 1 , TRANSPORT_WRITE_PENDING = 3 , TRANSPORT_PROCESSING = 5 , TRANSPORT_COMPLETE = 6 , TRANSPORT_ISTATE_PROCESSING = 11 , TRANSPORT_COMPLETE_QF_WP = 18 , TRANSPORT_COMPLETE_QF_OK = 19 , } 
s#se_tmr_req struct se_tmr_req { t#u8 function ; t#u8 response ; int call_transport ; t#u32 ref_task_tag ; void * fabric_tmr_ptr ; s#se_cmd * task_cmd ; s#se_device * tmr_dev ; s#se_lun * tmr_lun ; s#list_head tmr_list ; } 
t#sense_reason_t typedef unsigned sense_reason_t 
e#target_prot_type enum target_prot_type { TARGET_DIF_TYPE0_PROT , TARGET_DIF_TYPE1_PROT , TARGET_DIF_TYPE2_PROT , TARGET_DIF_TYPE3_PROT , } 
s#se_cmd struct se_cmd { t#u8 scsi_status ; t#u8 scsi_asc ; t#u8 scsi_ascq ; t#u16 scsi_sense_length ; int alua_nonop_delay ; e#dma_data_direction data_direction ; int sam_task_attr ; unsigned int map_tag ; e#transport_state_table t_state ; unsigned cmd_wait_set : 1 ; unsigned unknown_data_length : 1 ; t#u32 se_cmd_flags ; t#u32 se_ordered_id ; t#u32 data_length ; t#u32 residual_count ; t#u32 orig_fe_lun ; t#u64 pr_res_key ; void * sense_buffer ; s#list_head se_delayed_node ; s#list_head se_qf_node ; s#se_device * se_dev ; s#se_dev_entry * se_deve ; s#se_lun * se_lun ; s#se_session * se_sess ; s#se_tmr_req * se_tmr_req ; s#list_head se_cmd_list ; s#completion cmd_wait_comp ; s#kref cmd_kref ; s#target_core_fabric_ops * se_tfo ; t#sense_reason_t ( * execute_cmd ) ( s#se_cmd * ) ; t#sense_reason_t ( * execute_rw ) ( s#se_cmd * , s#scatterlist * , t#u32 , e#dma_data_direction ) ; t#sense_reason_t ( * transport_complete_callback ) ( s#se_cmd * ) ; unsigned char * t_task_cdb ; unsigned char __t_task_cdb [ 32 ] ; unsigned long long t_task_lba ; unsigned int t_task_nolb ; unsigned int transport_state ; t#spinlock_t t_state_lock ; s#completion t_transport_stop_comp ; s#work_struct work ; s#scatterlist * t_data_sg ; s#scatterlist * t_data_sg_orig ; unsigned int t_data_nents ; unsigned int t_data_nents_orig ; void * t_data_vmap ; s#scatterlist * t_bidi_data_sg ; unsigned int t_bidi_data_nents ; s#list_head state_list ; t#bool state_active ; s#completion task_stop_comp ; void * priv ; int lun_ref_active ; e#target_prot_op prot_op ; e#target_prot_type prot_type ; t#u8 prot_checks ; t#u32 prot_length ; t#u32 reftag_seed ; s#scatterlist * t_prot_sg ; unsigned int t_prot_nents ; t#sense_reason_t pi_err ; t#sector_t bad_sector ; t#bool prot_pto ; } 
s##target_fabric_configfs
s#se_wwn struct se_wwn { s#target_fabric_configfs * wwn_tf ; s#config_group wwn_group ; s#config_group * wwn_default_groups [ 2 ] ; s#config_group fabric_stat_group ; } 
s#se_tpg_np struct se_tpg_np { s#se_portal_group * tpg_np_parent ; s#config_group tpg_np_group ; } 
s#target_core_fabric_ops struct target_core_fabric_ops { s#configfs_subsystem * tf_subsys ; char * ( * get_fabric_name ) ( void ) ; t#u8 ( * get_fabric_proto_ident ) ( s#se_portal_group * ) ; char * ( * tpg_get_wwn ) ( s#se_portal_group * ) ; t#u16 ( * tpg_get_tag ) ( s#se_portal_group * ) ; t#u32 ( * tpg_get_default_depth ) ( s#se_portal_group * ) ; t#u32 ( * tpg_get_pr_transport_id ) ( s#se_portal_group * , s#se_node_acl * , s#t10_pr_registration * , int * , unsigned char * ) ; t#u32 ( * tpg_get_pr_transport_id_len ) ( s#se_portal_group * , s#se_node_acl * , s#t10_pr_registration * , int * ) ; char * ( * tpg_parse_pr_out_transport_id ) ( s#se_portal_group * , const char * , t#u32 * , char * * ) ; int ( * tpg_check_demo_mode ) ( s#se_portal_group * ) ; int ( * tpg_check_demo_mode_cache ) ( s#se_portal_group * ) ; int ( * tpg_check_demo_mode_write_protect ) ( s#se_portal_group * ) ; int ( * tpg_check_prod_mode_write_protect ) ( s#se_portal_group * ) ; int ( * tpg_check_demo_mode_login_only ) ( s#se_portal_group * ) ; s#se_node_acl * ( * tpg_alloc_fabric_acl ) ( s#se_portal_group * ) ; void ( * tpg_release_fabric_acl ) ( s#se_portal_group * , s#se_node_acl * ) ; t#u32 ( * tpg_get_inst_index ) ( s#se_portal_group * ) ; int ( * check_stop_free ) ( s#se_cmd * ) ; void ( * release_cmd ) ( s#se_cmd * ) ; void ( * put_session ) ( s#se_session * ) ; int ( * shutdown_session ) ( s#se_session * ) ; void ( * close_session ) ( s#se_session * ) ; t#u32 ( * sess_get_index ) ( s#se_session * ) ; t#u32 ( * sess_get_initiator_sid ) ( s#se_session * , unsigned char * , t#u32 ) ; int ( * write_pending ) ( s#se_cmd * ) ; int ( * write_pending_status ) ( s#se_cmd * ) ; void ( * set_default_node_attributes ) ( s#se_node_acl * ) ; t#u32 ( * get_task_tag ) ( s#se_cmd * ) ; int ( * get_cmd_state ) ( s#se_cmd * ) ; int ( * queue_data_in ) ( s#se_cmd * ) ; int ( * queue_status ) ( s#se_cmd * ) ; void ( * queue_tm_rsp ) ( s#se_cmd * ) ; void ( * aborted_task ) ( s#se_cmd * ) ; s#se_wwn * ( * fabric_make_wwn ) ( s#target_fabric_configfs * , s#config_group * , const char * ) ; void ( * fabric_drop_wwn ) ( s#se_wwn * ) ; s#se_portal_group * ( * fabric_make_tpg ) ( s#se_wwn * , s#config_group * , const char * ) ; void ( * fabric_drop_tpg ) ( s#se_portal_group * ) ; int ( * fabric_post_link ) ( s#se_portal_group * , s#se_lun * ) ; void ( * fabric_pre_unlink ) ( s#se_portal_group * , s#se_lun * ) ; s#se_tpg_np * ( * fabric_make_np ) ( s#se_portal_group * , s#config_group * , const char * ) ; void ( * fabric_drop_np ) ( s#se_tpg_np * ) ; s#se_node_acl * ( * fabric_make_nodeacl ) ( s#se_portal_group * , s#config_group * , const char * ) ; void ( * fabric_drop_nodeacl ) ( s#se_node_acl * ) ; } 
s#se_portal_group struct se_portal_group { e#transport_tpg_type_table se_tpg_type ; t#u32 num_node_acls ; t#atomic_t tpg_pr_ref_count ; t#spinlock_t acl_node_lock ; t#spinlock_t session_lock ; t#spinlock_t tpg_lun_lock ; void * se_tpg_fabric_ptr ; s#list_head se_tpg_node ; s#list_head acl_node_list ; s#se_lun * * tpg_lun_list ; s#se_lun tpg_virt_lun0 ; s#list_head tpg_sess_list ; s#target_core_fabric_ops * se_tpg_tfo ; s#se_wwn * se_tpg_wwn ; s#config_group tpg_group ; s#config_group * tpg_default_groups [ 7 ] ; s#config_group tpg_lun_group ; s#config_group tpg_np_group ; s#config_group tpg_acl_group ; s#config_group tpg_attrib_group ; s#config_group tpg_auth_group ; s#config_group tpg_param_group ; } 
s#se_port struct se_port { t#u16 sep_rtpi ; int sep_tg_pt_secondary_stat ; int sep_tg_pt_secondary_write_md ; t#u32 sep_index ; s#scsi_port_stats sep_stats ; t#atomic_t sep_tg_pt_secondary_offline ; t#atomic_t sep_tg_pt_ref_cnt ; t#spinlock_t sep_alua_lock ; s#mutex sep_tg_pt_md_mutex ; s#t10_alua_tg_pt_gp_member * sep_alua_tg_pt_gp_mem ; s#se_lun * sep_lun ; s#se_portal_group * sep_tpg ; s#list_head sep_alua_list ; s#list_head sep_list ; } 
s#t10_alua_tg_pt_gp struct t10_alua_tg_pt_gp { t#u16 tg_pt_gp_id ; int tg_pt_gp_valid_id ; int tg_pt_gp_alua_supported_states ; int tg_pt_gp_alua_pending_state ; int tg_pt_gp_alua_previous_state ; int tg_pt_gp_alua_access_status ; int tg_pt_gp_alua_access_type ; int tg_pt_gp_nonop_delay_msecs ; int tg_pt_gp_trans_delay_msecs ; int tg_pt_gp_implicit_trans_secs ; int tg_pt_gp_pref ; int tg_pt_gp_write_metadata ; t#u32 tg_pt_gp_members ; t#atomic_t tg_pt_gp_alua_access_state ; t#atomic_t tg_pt_gp_ref_cnt ; t#spinlock_t tg_pt_gp_lock ; s#mutex tg_pt_gp_md_mutex ; s#se_device * tg_pt_gp_dev ; s#config_group tg_pt_gp_group ; s#list_head tg_pt_gp_list ; s#list_head tg_pt_gp_mem_list ; s#se_port * tg_pt_gp_alua_port ; s#se_node_acl * tg_pt_gp_alua_nacl ; s#delayed_work tg_pt_gp_transition_work ; s#completion * tg_pt_gp_transition_complete ; } 
s#t10_alua struct t10_alua { t#u16 alua_tg_pt_gps_counter ; t#u32 alua_tg_pt_gps_count ; t#spinlock_t lba_map_lock ; t#u32 lba_map_segment_size ; t#u32 lba_map_segment_multiplier ; s#list_head lba_map_list ; t#spinlock_t tg_pt_gps_lock ; s#se_device * t10_dev ; s#t10_alua_tg_pt_gp * default_tg_pt_gp ; s#config_group alua_tg_pt_gps_group ; s#list_head tg_pt_gps_list ; } 
s#t10_reservation struct t10_reservation { int pr_all_tg_pt ; int pr_aptpl_active ; t#u32 pr_generation ; t#spinlock_t registration_lock ; t#spinlock_t aptpl_reg_lock ; s#se_node_acl * pr_res_holder ; s#list_head registration_list ; s#list_head aptpl_reg_list ; } 
s#se_dev_attrib struct se_dev_attrib { int emulate_model_alias ; int emulate_dpo ; int emulate_fua_write ; int emulate_fua_read ; int emulate_write_cache ; int emulate_ua_intlck_ctrl ; int emulate_tas ; int emulate_tpu ; int emulate_tpws ; int emulate_caw ; int emulate_3pc ; int pi_prot_format ; e#target_prot_type pi_prot_type ; e#target_prot_type hw_pi_prot_type ; int enforce_pr_isids ; int is_nonrot ; int emulate_rest_reord ; t#u32 hw_block_size ; t#u32 block_size ; t#u32 hw_max_sectors ; t#u32 fabric_max_sectors ; t#u32 optimal_sectors ; t#u32 hw_queue_depth ; t#u32 queue_depth ; t#u32 max_unmap_lba_count ; t#u32 max_unmap_block_desc_count ; t#u32 unmap_granularity ; t#u32 unmap_granularity_alignment ; t#u32 max_write_same_len ; t#u32 max_bytes_per_io ; s#se_device * da_dev ; s#config_group da_group ; } 
s#se_dev_stat_grps struct se_dev_stat_grps { s#config_group stat_group ; s#config_group scsi_dev_group ; s#config_group scsi_tgt_dev_group ; s#config_group scsi_lu_group ; } 
s#se_device struct se_device { t#u32 dev_link_magic ; t#u16 dev_rpti_counter ; t#u32 dev_cur_ordered_id ; t#u32 dev_flags ; t#u32 dev_port_count ; t#u32 queue_depth ; t#u64 dev_res_bin_isid ; t#u32 dev_index ; t#u64 creation_time ; t#atomic_long_t num_resets ; t#atomic_long_t num_cmds ; t#atomic_long_t read_bytes ; t#atomic_long_t write_bytes ; t#atomic_t simple_cmds ; t#atomic_t dev_ordered_id ; t#atomic_t dev_ordered_sync ; t#atomic_t dev_qf_count ; int export_count ; t#spinlock_t delayed_cmd_lock ; t#spinlock_t execute_task_lock ; t#spinlock_t dev_reservation_lock ; unsigned int dev_reservation_flags ; t#spinlock_t se_port_lock ; t#spinlock_t se_tmr_lock ; t#spinlock_t qf_cmd_lock ; s#semaphore caw_sem ; s#se_node_acl * dev_reserved_node_acl ; s#t10_alua_lu_gp_member * dev_alua_lu_gp_mem ; s#t10_pr_registration * dev_pr_res_holder ; s#list_head dev_sep_list ; s#list_head dev_tmr_list ; s#workqueue_struct * tmr_wq ; s#work_struct qf_work_queue ; s#list_head delayed_cmd_list ; s#list_head state_list ; s#list_head qf_cmd_list ; s#list_head g_dev_node ; s#se_hba * se_hba ; s#t10_wwn t10_wwn ; s#t10_alua t10_alua ; s#t10_reservation t10_pr ; s#se_dev_attrib dev_attrib ; s#config_group dev_group ; s#config_group dev_pr_group ; s#se_dev_stat_grps dev_stat_grps ; unsigned char dev_alias [ 512 ] ; unsigned char udev_path [ 512 ] ; s#se_subsystem_api * transport ; s#list_head dev_list ; s#se_lun xcopy_lun ; int prot_length ; } 
s#se_port_stat_grps struct se_port_stat_grps { s#config_group stat_group ; s#config_group scsi_port_group ; s#config_group scsi_tgt_port_group ; s#config_group scsi_transport_group ; } 
s#se_lun struct se_lun { t#u32 lun_link_magic ; e#transport_lun_status_table lun_status ; t#u32 lun_access ; t#u32 lun_flags ; t#u32 unpacked_lun ; t#atomic_t lun_acl_count ; t#spinlock_t lun_acl_lock ; t#spinlock_t lun_sep_lock ; s#completion lun_shutdown_comp ; s#list_head lun_acl_list ; s#se_device * lun_se_dev ; s#se_port * lun_sep ; s#config_group lun_group ; s#se_port_stat_grps port_stat_grps ; s#completion lun_ref_comp ; s#percpu_ref lun_ref ; } 
s#se_ml_stat_grps struct se_ml_stat_grps { s#config_group stat_group ; s#config_group scsi_auth_intr_group ; s#config_group scsi_att_intr_port_group ; } 
s#se_lun_acl struct se_lun_acl { char initiatorname [ 224 ] ; t#u32 mapped_lun ; s#se_node_acl * se_lun_nacl ; s#se_lun * se_lun ; s#list_head lacl_list ; s#config_group se_lun_group ; s#se_ml_stat_grps ml_stat_grps ; } 
s#se_dev_entry struct se_dev_entry { t#bool def_pr_registered ; t#u32 lun_flags ; t#u32 mapped_lun ; t#u32 total_cmds ; t#u64 pr_res_key ; t#u64 creation_time ; t#u32 attach_count ; t#u64 read_bytes ; t#u64 write_bytes ; t#atomic_t ua_count ; t#atomic_t pr_ref_count ; s#se_lun_acl * se_lun_acl ; t#spinlock_t ua_lock ; s#se_lun * se_lun ; s#list_head alua_port_list ; s#list_head ua_list ; } 
s#se_node_acl struct se_node_acl { char initiatorname [ 224 ] ; t#bool dynamic_node_acl ; t#bool acl_stop : 1 ; t#u32 queue_depth ; t#u32 acl_index ; char acl_tag [ 64 ] ; t#atomic_t acl_pr_ref_count ; s#se_dev_entry * * device_list ; s#se_session * nacl_sess ; s#se_portal_group * se_tpg ; t#spinlock_t device_list_lock ; t#spinlock_t nacl_sess_lock ; s#config_group acl_group ; s#config_group acl_attrib_group ; s#config_group acl_auth_group ; s#config_group acl_param_group ; s#config_group acl_fabric_stat_group ; s#config_group * acl_default_groups [ 5 ] ; s#list_head acl_list ; s#list_head acl_sess_list ; s#completion acl_free_comp ; s#kref acl_kref ; } 
s##percpu_ida_cpu
s#percpu_ida struct percpu_ida { unsigned nr_tags ; unsigned percpu_max_size ; unsigned percpu_batch_size ; s#percpu_ida_cpu * tag_cpu ; t#cpumask_t cpus_have_tags ; struct { t#spinlock_t lock ; unsigned cpu_last_stolen ; t#wait_queue_head_t wait ; unsigned nr_free ; unsigned * freelist ; } __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; } 
s#se_session struct se_session { unsigned sess_tearing_down : 1 ; t#u64 sess_bin_isid ; e#target_prot_op sup_prot_ops ; s#se_node_acl * se_node_acl ; s#se_portal_group * se_tpg ; void * fabric_sess_ptr ; s#list_head sess_list ; s#list_head sess_acl_list ; s#list_head sess_cmd_list ; s#list_head sess_wait_list ; t#spinlock_t sess_cmd_lock ; s#kref sess_kref ; void * sess_cmd_map ; s#percpu_ida sess_tag_pool ; } 
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s##scsi_transport_template
t#fc_port_type_t typedef enum { FCT_UNKNOWN , FCT_RSCN , FCT_SWITCH , FCT_BROADCAST , FCT_INITIATOR , FCT_TARGET } fc_port_type_t 
s#fc_port struct fc_port { s#list_head list ; s#scsi_qla_host * vha ; t#uint8_t node_name [ 8 ] ; t#uint8_t port_name [ 8 ] ; t#port_id_t d_id ; t#uint16_t loop_id ; t#uint16_t old_loop_id ; t#uint16_t tgt_id ; t#uint16_t old_tgt_id ; t#uint8_t fcp_prio ; t#uint8_t fabric_port_name [ 8 ] ; t#uint16_t fp_speed ; t#fc_port_type_t port_type ; t#atomic_t state ; t#uint32_t flags ; int login_retry ; s#fc_rport * rport , * drport ; t#u32 supported_classes ; t#uint8_t fc4_type ; t#uint8_t scan_state ; unsigned long last_queue_full ; unsigned long last_ramp_up ; t#uint16_t port_id ; } 
t#fc_port_t typedef s#fc_port fc_port_t 
E#pci_channel_io_perm_failure ( pci_channel_state_t ) 3 
s#device_reg_2xxx struct device_reg_2xxx { t#uint16_t flash_address ; t#uint16_t flash_data ; t#uint16_t unused_1 [ 1 ] ; t#uint16_t ctrl_status ; t#uint16_t ictrl ; t#uint16_t istatus ; t#uint16_t semaphore ; t#uint16_t nvram ; union { struct { t#uint16_t mailbox0 ; t#uint16_t mailbox1 ; t#uint16_t mailbox2 ; t#uint16_t mailbox3 ; t#uint16_t mailbox4 ; t#uint16_t mailbox5 ; t#uint16_t mailbox6 ; t#uint16_t mailbox7 ; t#uint16_t unused_2 [ 59 ] ; } __attribute__ ( ( packed ) ) isp2100 ; struct { t#uint16_t req_q_in ; t#uint16_t req_q_out ; t#uint16_t rsp_q_in ; t#uint16_t rsp_q_out ; t#uint32_t host_status ; t#uint16_t host_semaphore ; t#uint16_t unused_3 [ 17 ] ; t#uint16_t mailbox0 ; t#uint16_t mailbox1 ; t#uint16_t mailbox2 ; t#uint16_t mailbox3 ; t#uint16_t mailbox4 ; t#uint16_t mailbox5 ; t#uint16_t mailbox6 ; t#uint16_t mailbox7 ; t#uint16_t mailbox8 ; t#uint16_t mailbox9 ; t#uint16_t mailbox10 ; t#uint16_t mailbox11 ; t#uint16_t mailbox12 ; t#uint16_t mailbox13 ; t#uint16_t mailbox14 ; t#uint16_t mailbox15 ; t#uint16_t mailbox16 ; t#uint16_t mailbox17 ; t#uint16_t mailbox18 ; t#uint16_t mailbox19 ; t#uint16_t mailbox20 ; t#uint16_t mailbox21 ; t#uint16_t mailbox22 ; t#uint16_t mailbox23 ; t#uint16_t mailbox24 ; t#uint16_t mailbox25 ; t#uint16_t mailbox26 ; t#uint16_t mailbox27 ; t#uint16_t mailbox28 ; t#uint16_t mailbox29 ; t#uint16_t mailbox30 ; t#uint16_t mailbox31 ; t#uint16_t fb_cmd ; t#uint16_t unused_4 [ 10 ] ; } __attribute__ ( ( packed ) ) isp2300 ; } u ; t#uint16_t fpm_diag_config ; t#uint16_t unused_5 [ 0x4 ] ; t#uint16_t risc_hw ; t#uint16_t unused_5_1 ; t#uint16_t pcr ; t#uint16_t unused_6 [ 0x5 ] ; t#uint16_t mctr ; t#uint16_t unused_7 [ 0x3 ] ; t#uint16_t fb_cmd_2100 ; t#uint16_t unused_8 [ 0x3 ] ; t#uint16_t hccr ; t#uint16_t unused_9 [ 5 ] ; t#uint16_t gpiod ; t#uint16_t gpioe ; union { struct { t#uint16_t unused_10 [ 8 ] ; t#uint16_t mailbox8 ; t#uint16_t mailbox9 ; t#uint16_t mailbox10 ; t#uint16_t mailbox11 ; t#uint16_t mailbox12 ; t#uint16_t mailbox13 ; t#uint16_t mailbox14 ; t#uint16_t mailbox15 ; t#uint16_t mailbox16 ; t#uint16_t mailbox17 ; t#uint16_t mailbox18 ; t#uint16_t mailbox19 ; t#uint16_t mailbox20 ; t#uint16_t mailbox21 ; t#uint16_t mailbox22 ; t#uint16_t mailbox23 ; } __attribute__ ( ( packed ) ) isp2200 ; } u_end ; } 
s#device_reg_24xx struct device_reg_24xx { t#uint32_t flash_addr ; t#uint32_t flash_data ; t#uint32_t ctrl_status ; t#uint32_t ictrl ; t#uint32_t istatus ; t#uint32_t unused_1 [ 2 ] ; t#uint32_t req_q_in ; t#uint32_t req_q_out ; t#uint32_t rsp_q_in ; t#uint32_t rsp_q_out ; t#uint32_t preq_q_in ; t#uint32_t preq_q_out ; t#uint32_t unused_2 [ 2 ] ; t#uint32_t atio_q_in ; t#uint32_t atio_q_out ; t#uint32_t host_status ; t#uint32_t hccr ; t#uint32_t gpiod ; t#uint32_t gpioe ; t#uint32_t iobase_addr ; t#uint32_t unused_3 [ 10 ] ; t#uint16_t mailbox0 ; t#uint16_t mailbox1 ; t#uint16_t mailbox2 ; t#uint16_t mailbox3 ; t#uint16_t mailbox4 ; t#uint16_t mailbox5 ; t#uint16_t mailbox6 ; t#uint16_t mailbox7 ; t#uint16_t mailbox8 ; t#uint16_t mailbox9 ; t#uint16_t mailbox10 ; t#uint16_t mailbox11 ; t#uint16_t mailbox12 ; t#uint16_t mailbox13 ; t#uint16_t mailbox14 ; t#uint16_t mailbox15 ; t#uint16_t mailbox16 ; t#uint16_t mailbox17 ; t#uint16_t mailbox18 ; t#uint16_t mailbox19 ; t#uint16_t mailbox20 ; t#uint16_t mailbox21 ; t#uint16_t mailbox22 ; t#uint16_t mailbox23 ; t#uint16_t mailbox24 ; t#uint16_t mailbox25 ; t#uint16_t mailbox26 ; t#uint16_t mailbox27 ; t#uint16_t mailbox28 ; t#uint16_t mailbox29 ; t#uint16_t mailbox30 ; t#uint16_t mailbox31 ; t#uint32_t iobase_window ; t#uint32_t iobase_c4 ; t#uint32_t iobase_c8 ; t#uint32_t unused_4_1 [ 6 ] ; t#uint32_t iobase_q ; t#uint32_t unused_5 [ 2 ] ; t#uint32_t iobase_select ; t#uint32_t unused_6 [ 2 ] ; t#uint32_t iobase_sdata ; } 
s#device_reg_25xxmq struct device_reg_25xxmq { t#uint32_t req_q_in ; t#uint32_t req_q_out ; t#uint32_t rsp_q_in ; t#uint32_t rsp_q_out ; t#uint32_t atio_q_in ; t#uint32_t atio_q_out ; } 
s#device_reg_82xx struct device_reg_82xx { t#uint32_t req_q_out [ 64 ] ; t#uint32_t rsp_q_in [ 64 ] ; t#uint32_t rsp_q_out [ 64 ] ; t#uint16_t mailbox_in [ 32 ] ; t#uint16_t unused_1 [ 32 ] ; t#uint32_t hint ; t#uint16_t unused_2 [ 62 ] ; t#uint16_t mailbox_out [ 32 ] ; t#uint32_t unused_3 [ 48 ] ; t#uint32_t host_status ; t#uint32_t host_int ; } 
s#device_reg_fx00 struct device_reg_fx00 { t#uint32_t mailbox0 ; t#uint32_t mailbox1 ; t#uint32_t mailbox2 ; t#uint32_t mailbox3 ; t#uint32_t mailbox4 ; t#uint32_t mailbox5 ; t#uint32_t mailbox6 ; t#uint32_t mailbox7 ; t#uint32_t mailbox8 ; t#uint32_t mailbox9 ; t#uint32_t mailbox10 ; t#uint32_t mailbox11 ; t#uint32_t mailbox12 ; t#uint32_t mailbox13 ; t#uint32_t mailbox14 ; t#uint32_t mailbox15 ; t#uint32_t mailbox16 ; t#uint32_t mailbox17 ; t#uint32_t mailbox18 ; t#uint32_t mailbox19 ; t#uint32_t mailbox20 ; t#uint32_t mailbox21 ; t#uint32_t mailbox22 ; t#uint32_t mailbox23 ; t#uint32_t mailbox24 ; t#uint32_t mailbox25 ; t#uint32_t mailbox26 ; t#uint32_t mailbox27 ; t#uint32_t mailbox28 ; t#uint32_t mailbox29 ; t#uint32_t mailbox30 ; t#uint32_t mailbox31 ; t#uint32_t aenmailbox0 ; t#uint32_t aenmailbox1 ; t#uint32_t aenmailbox2 ; t#uint32_t aenmailbox3 ; t#uint32_t aenmailbox4 ; t#uint32_t aenmailbox5 ; t#uint32_t aenmailbox6 ; t#uint32_t aenmailbox7 ; t#uint32_t req_q_in ; t#uint32_t req_q_out ; t#uint32_t rsp_q_in ; t#uint32_t rsp_q_out ; t#uint32_t initval0 ; t#uint32_t initval1 ; t#uint32_t initval2 ; t#uint32_t initval3 ; t#uint32_t initval4 ; t#uint32_t initval5 ; t#uint32_t initval6 ; t#uint32_t initval7 ; t#uint32_t fwheartbeat ; t#uint32_t pseudoaen ; } 
t#device_reg_t typedef union { s#device_reg_2xxx isp ; s#device_reg_24xx isp24 ; s#device_reg_25xxmq isp25mq ; s#device_reg_82xx isp82 ; s#device_reg_fx00 ispfx00 ; } device_reg_t 
t#target_id_t typedef union { t#uint16_t extended ; struct { t#uint8_t reserved ; t#uint8_t standard ; } id ; } target_id_t 
t#request_t typedef struct { t#uint8_t entry_type ; t#uint8_t entry_count ; t#uint8_t sys_define ; t#uint8_t entry_status ; t#uint32_t handle ; t#target_id_t target ; t#uint16_t lun ; t#uint16_t control_flags ; t#uint16_t reserved_1 ; t#uint16_t timeout ; t#uint16_t dseg_count ; t#uint8_t scsi_cdb [ 16 ] ; t#uint32_t byte_count ; t#uint32_t dseg_0_address [ 2 ] ; t#uint32_t dseg_0_length ; t#uint32_t dseg_1_address [ 2 ] ; t#uint32_t dseg_1_length ; } request_t 
t#response_t typedef struct { t#uint8_t entry_type ; t#uint8_t entry_count ; t#uint8_t sys_define ; t#uint8_t entry_status ; t#uint32_t handle ; t#uint8_t data [ 52 ] ; t#uint32_t signature ; } response_t 
s#qla_msix_entry struct qla_msix_entry { int have_irq ; t#uint32_t vector ; t#uint16_t entry ; s#rsp_que * rsp ; } 
s#srb_iocb struct srb_iocb { union { struct { t#uint16_t flags ; t#uint16_t data [ 2 ] ; } logio ; struct { t#uint32_t flags ; t#uint32_t lun ; t#uint32_t data ; s#completion comp ; t#__le16 comp_status ; } tmf ; struct { t#uint8_t flags ; t#uint32_t req_len ; t#uint32_t rsp_len ; void * req_addr ; void * rsp_addr ; t#dma_addr_t req_dma_handle ; t#dma_addr_t rsp_dma_handle ; t#__le32 adapter_id ; t#__le32 adapter_id_hi ; t#__le16 req_func_type ; t#__le32 req_data ; t#__le32 req_data_extra ; t#__le32 result ; t#__le32 seq_number ; t#__le16 fw_flags ; s#completion fxiocb_comp ; t#__le32 reserved_0 ; t#uint8_t reserved_1 ; } fxiocb ; struct { t#uint32_t cmd_hndl ; t#__le16 comp_status ; s#completion comp ; } abt ; } u ; s#timer_list timer ; void ( * timeout ) ( void * ) ; } 
s#srb_cmd struct srb_cmd { s#scsi_cmnd * cmd ; t#uint32_t request_sense_length ; t#uint32_t fw_sense_length ; t#uint8_t * request_sense_ptr ; void * ctx ; } 
s#srb struct srb { t#atomic_t ref_count ; s#fc_port * fcport ; t#uint32_t handle ; t#uint16_t flags ; t#uint16_t type ; char * name ; int iocbs ; union { s#srb_iocb iocb_cmd ; s#fc_bsg_job * bsg_job ; s#srb_cmd scmd ; } u ; void ( * done ) ( void * , void * , int ) ; void ( * free ) ( void * , void * ) ; } 
t#srb_t typedef s#srb srb_t 
s#rsp_que struct rsp_que { t#dma_addr_t dma ; t#response_t * ring ; t#response_t * ring_ptr ; t#uint32_t * rsp_q_in ; t#uint32_t * rsp_q_out ; t#uint16_t ring_index ; t#uint16_t out_ptr ; t#uint16_t * in_ptr ; t#uint16_t length ; t#uint16_t options ; t#uint16_t rid ; t#uint16_t id ; t#uint16_t vp_idx ; s#qla_hw_data * hw ; s#qla_msix_entry * msix ; s#req_que * req ; t#srb_t * status_srb ; s#work_struct q_work ; t#dma_addr_t dma_fx00 ; t#response_t * ring_fx00 ; t#uint16_t length_fx00 ; t#uint8_t rsp_pkt [ ( sizeof ( request_t ) ) ] ; } 
s#req_que struct req_que { t#dma_addr_t dma ; t#request_t * ring ; t#request_t * ring_ptr ; t#uint32_t * req_q_in ; t#uint32_t * req_q_out ; t#uint16_t ring_index ; t#uint16_t in_ptr ; t#uint16_t * out_ptr ; t#uint16_t cnt ; t#uint16_t length ; t#uint16_t options ; t#uint16_t rid ; t#uint16_t id ; t#uint16_t qos ; t#uint16_t vp_idx ; s#rsp_que * rsp ; t#srb_t * * outstanding_cmds ; t#uint32_t current_outstanding_cmd ; t#uint16_t num_outstanding_cmds ; int max_q_depth ; t#dma_addr_t dma_fx00 ; t#request_t * ring_fx00 ; t#uint16_t length_fx00 ; t#uint8_t req_pkt [ ( sizeof ( request_t ) ) ] ; } 
s#qla_npiv_entry struct qla_npiv_entry { t#uint16_t flags ; t#uint16_t vf_id ; t#uint8_t q_qos ; t#uint8_t f_qos ; t#uint16_t unused1 ; t#uint8_t port_name [ 8 ] ; t#uint8_t node_name [ 8 ] ; } 
t#ms_iocb_entry_t typedef struct { t#uint8_t entry_type ; t#uint8_t entry_count ; t#uint8_t handle_count ; t#uint8_t entry_status ; t#uint32_t handle1 ; t#target_id_t loop_id ; t#uint16_t status ; t#uint16_t control_flags ; t#uint16_t reserved2 ; t#uint16_t timeout ; t#uint16_t cmd_dsd_count ; t#uint16_t total_dsd_count ; t#uint8_t type ; t#uint8_t r_ctl ; t#uint16_t rx_id ; t#uint16_t reserved3 ; t#uint32_t handle2 ; t#uint32_t rsp_bytecount ; t#uint32_t req_bytecount ; t#uint32_t dseg_req_address [ 2 ] ; t#uint32_t dseg_req_length ; t#uint32_t dseg_rsp_address [ 2 ] ; t#uint32_t dseg_rsp_length ; } ms_iocb_entry_t 
s#ct_cmd_hdr struct ct_cmd_hdr { t#uint8_t revision ; t#uint8_t in_id [ 3 ] ; t#uint8_t gs_type ; t#uint8_t gs_subtype ; t#uint8_t options ; t#uint8_t reserved ; } 
s#ct_fdmi_hba_attr struct ct_fdmi_hba_attr { t#uint16_t type ; t#uint16_t len ; union { t#uint8_t node_name [ 8 ] ; t#uint8_t manufacturer [ 32 ] ; t#uint8_t serial_num [ 8 ] ; t#uint8_t model [ 16 ] ; t#uint8_t model_desc [ 80 ] ; t#uint8_t hw_version [ 16 ] ; t#uint8_t driver_version [ 32 ] ; t#uint8_t orom_version [ 16 ] ; t#uint8_t fw_version [ 16 ] ; t#uint8_t os_version [ 128 ] ; t#uint8_t max_ct_len [ 4 ] ; } a ; } 
s#ct_fdmi_hba_attributes struct ct_fdmi_hba_attributes { t#uint32_t count ; s#ct_fdmi_hba_attr entry [ 9 ] ; } 
s#ct_fdmi_port_attr struct ct_fdmi_port_attr { t#uint16_t type ; t#uint16_t len ; union { t#uint8_t fc4_types [ 32 ] ; t#uint32_t sup_speed ; t#uint32_t cur_speed ; t#uint32_t max_frame_size ; t#uint8_t os_dev_name [ 32 ] ; t#uint8_t host_name [ 32 ] ; } a ; } 
s#ct_fdmi_port_attributes struct ct_fdmi_port_attributes { t#uint32_t count ; s#ct_fdmi_port_attr entry [ 6 ] ; } 
s#ct_sns_req struct ct_sns_req { s#ct_cmd_hdr header ; t#uint16_t command ; t#uint16_t max_rsp_size ; t#uint8_t fragment_id ; t#uint8_t reserved [ 3 ] ; union { struct { t#uint8_t reserved ; t#uint8_t port_id [ 3 ] ; } port_id ; struct { t#uint8_t port_type ; t#uint8_t domain ; t#uint8_t area ; t#uint8_t reserved ; } gid_pt ; struct { t#uint8_t reserved ; t#uint8_t port_id [ 3 ] ; t#uint8_t fc4_types [ 32 ] ; } rft_id ; struct { t#uint8_t reserved ; t#uint8_t port_id [ 3 ] ; t#uint16_t reserved2 ; t#uint8_t fc4_feature ; t#uint8_t fc4_type ; } rff_id ; struct { t#uint8_t reserved ; t#uint8_t port_id [ 3 ] ; t#uint8_t node_name [ 8 ] ; } rnn_id ; struct { t#uint8_t node_name [ 8 ] ; t#uint8_t name_len ; t#uint8_t sym_node_name [ 255 ] ; } rsnn_nn ; struct { t#uint8_t hba_indentifier [ 8 ] ; } ghat ; struct { t#uint8_t hba_identifier [ 8 ] ; t#uint32_t entry_count ; t#uint8_t port_name [ 8 ] ; s#ct_fdmi_hba_attributes attrs ; } rhba ; struct { t#uint8_t hba_identifier [ 8 ] ; s#ct_fdmi_hba_attributes attrs ; } rhat ; struct { t#uint8_t port_name [ 8 ] ; s#ct_fdmi_port_attributes attrs ; } rpa ; struct { t#uint8_t port_name [ 8 ] ; } dhba ; struct { t#uint8_t port_name [ 8 ] ; } dhat ; struct { t#uint8_t port_name [ 8 ] ; } dprt ; struct { t#uint8_t port_name [ 8 ] ; } dpa ; struct { t#uint8_t port_name [ 8 ] ; } gpsc ; struct { t#uint8_t reserved ; t#uint8_t port_name [ 3 ] ; } gff_id ; } req ; } 
s#ct_rsp_hdr struct ct_rsp_hdr { s#ct_cmd_hdr header ; t#uint16_t response ; t#uint16_t residual ; t#uint8_t fragment_id ; t#uint8_t reason_code ; t#uint8_t explanation_code ; t#uint8_t vendor_unique ; } 
s#ct_sns_gid_pt_data struct ct_sns_gid_pt_data { t#uint8_t control_byte ; t#uint8_t port_id [ 3 ] ; } 
s#ct_sns_rsp struct ct_sns_rsp { s#ct_rsp_hdr header ; union { struct { t#uint8_t port_type ; t#uint8_t port_id [ 3 ] ; t#uint8_t port_name [ 8 ] ; t#uint8_t sym_port_name_len ; t#uint8_t sym_port_name [ 255 ] ; t#uint8_t node_name [ 8 ] ; t#uint8_t sym_node_name_len ; t#uint8_t sym_node_name [ 255 ] ; t#uint8_t init_proc_assoc [ 8 ] ; t#uint8_t node_ip_addr [ 16 ] ; t#uint8_t class_of_service [ 4 ] ; t#uint8_t fc4_types [ 32 ] ; t#uint8_t ip_address [ 16 ] ; t#uint8_t fabric_port_name [ 8 ] ; t#uint8_t reserved ; t#uint8_t hard_address [ 3 ] ; } ga_nxt ; struct { s#ct_sns_gid_pt_data entries [ 2048 ] ; } gid_pt ; struct { t#uint8_t port_name [ 8 ] ; } gpn_id ; struct { t#uint8_t node_name [ 8 ] ; } gnn_id ; struct { t#uint8_t fc4_types [ 32 ] ; } gft_id ; struct { t#uint32_t entry_count ; t#uint8_t port_name [ 8 ] ; s#ct_fdmi_hba_attributes attrs ; } ghat ; struct { t#uint8_t port_name [ 8 ] ; } gfpn_id ; struct { t#uint16_t speeds ; t#uint16_t speed ; } gpsc ; struct { t#uint8_t fc4_features [ 128 ] ; } gff_id ; } rsp ; } 
s#ct_sns_pkt struct ct_sns_pkt { union { s#ct_sns_req req ; s#ct_sns_rsp rsp ; } p ; } 
s#sns_cmd_pkt struct sns_cmd_pkt { union { struct { t#uint16_t buffer_length ; t#uint16_t reserved_1 ; t#uint32_t buffer_address [ 2 ] ; t#uint16_t subcommand_length ; t#uint16_t reserved_2 ; t#uint16_t subcommand ; t#uint16_t size ; t#uint32_t reserved_3 ; t#uint8_t param [ 36 ] ; } cmd ; t#uint8_t rft_data [ 16 ] ; t#uint8_t rnn_data [ 16 ] ; t#uint8_t gan_data [ ( 620 + 16 ) ] ; t#uint8_t gid_data [ ( 512 * 4 + 16 ) ] ; t#uint8_t gpn_data [ ( 8 + 16 ) ] ; t#uint8_t gnn_data [ ( 8 + 16 ) ] ; } p ; } 
s#gid_list_info struct gid_list_info { t#uint8_t al_pa ; t#uint8_t area ; t#uint8_t domain ; t#uint8_t loop_id_2100 ; t#uint16_t loop_id ; t#uint16_t reserved_1 ; } 
s##dma_pool
t#init_cb_t typedef struct { t#uint8_t version ; t#uint8_t reserved_1 ; t#uint8_t firmware_options [ 2 ] ; t#uint16_t frame_payload_size ; t#uint16_t max_iocb_allocation ; t#uint16_t execution_throttle ; t#uint8_t retry_count ; t#uint8_t retry_delay ; t#uint8_t port_name [ 8 ] ; t#uint16_t hard_address ; t#uint8_t inquiry_data ; t#uint8_t login_timeout ; t#uint8_t node_name [ 8 ] ; t#uint16_t request_q_outpointer ; t#uint16_t response_q_inpointer ; t#uint16_t request_q_length ; t#uint16_t response_q_length ; t#uint32_t request_q_address [ 2 ] ; t#uint32_t response_q_address [ 2 ] ; t#uint16_t lun_enables ; t#uint8_t command_resource_count ; t#uint8_t immediate_notify_resource_count ; t#uint16_t timeout ; t#uint8_t reserved_2 [ 2 ] ; t#uint8_t add_firmware_options [ 2 ] ; t#uint8_t response_accumulation_timer ; t#uint8_t interrupt_delay_timer ; t#uint8_t special_options [ 2 ] ; t#uint8_t reserved_3 [ 26 ] ; } init_cb_t 
s#ex_init_cb_81xx struct ex_init_cb_81xx { t#uint16_t ex_version ; t#uint8_t prio_fcf_matching_flags ; t#uint8_t reserved_1 [ 3 ] ; t#uint16_t pri_fcf_vlan_id ; t#uint8_t pri_fcf_fabric_name [ 8 ] ; t#uint16_t reserved_2 [ 7 ] ; t#uint8_t spma_mac_addr [ 6 ] ; t#uint16_t reserved_3 [ 14 ] ; } 
t#mbx_cmd_t typedef struct { t#uint32_t out_mb ; t#uint32_t in_mb ; t#uint16_t mb [ 32 ] ; long buf_size ; void * bufp ; t#uint32_t tov ; t#uint8_t flags ; } mbx_cmd_t 
s#mbx_cmd_32 struct mbx_cmd_32 { t#uint32_t out_mb ; t#uint32_t in_mb ; t#uint32_t mb [ 32 ] ; long buf_size ; void * bufp ; t#uint32_t tov ; t#uint8_t flags ; } 
s#qla2100_fw_dump struct qla2100_fw_dump { t#uint16_t hccr ; t#uint16_t pbiu_reg [ 8 ] ; t#uint16_t mailbox_reg [ 32 ] ; t#uint16_t dma_reg [ 48 ] ; t#uint16_t risc_hdw_reg [ 16 ] ; t#uint16_t risc_gp0_reg [ 16 ] ; t#uint16_t risc_gp1_reg [ 16 ] ; t#uint16_t risc_gp2_reg [ 16 ] ; t#uint16_t risc_gp3_reg [ 16 ] ; t#uint16_t risc_gp4_reg [ 16 ] ; t#uint16_t risc_gp5_reg [ 16 ] ; t#uint16_t risc_gp6_reg [ 16 ] ; t#uint16_t risc_gp7_reg [ 16 ] ; t#uint16_t frame_buf_hdw_reg [ 16 ] ; t#uint16_t fpm_b0_reg [ 64 ] ; t#uint16_t fpm_b1_reg [ 64 ] ; t#uint16_t risc_ram [ 0xf000 ] ; } 
s#qla2300_fw_dump struct qla2300_fw_dump { t#uint16_t hccr ; t#uint16_t pbiu_reg [ 8 ] ; t#uint16_t risc_host_reg [ 8 ] ; t#uint16_t mailbox_reg [ 32 ] ; t#uint16_t resp_dma_reg [ 32 ] ; t#uint16_t dma_reg [ 48 ] ; t#uint16_t risc_hdw_reg [ 16 ] ; t#uint16_t risc_gp0_reg [ 16 ] ; t#uint16_t risc_gp1_reg [ 16 ] ; t#uint16_t risc_gp2_reg [ 16 ] ; t#uint16_t risc_gp3_reg [ 16 ] ; t#uint16_t risc_gp4_reg [ 16 ] ; t#uint16_t risc_gp5_reg [ 16 ] ; t#uint16_t risc_gp6_reg [ 16 ] ; t#uint16_t risc_gp7_reg [ 16 ] ; t#uint16_t frame_buf_hdw_reg [ 64 ] ; t#uint16_t fpm_b0_reg [ 64 ] ; t#uint16_t fpm_b1_reg [ 64 ] ; t#uint16_t risc_ram [ 0xf800 ] ; t#uint16_t stack_ram [ 0x1000 ] ; t#uint16_t data_ram [ 1 ] ; } 
s#qla24xx_fw_dump struct qla24xx_fw_dump { t#uint32_t host_status ; t#uint32_t host_reg [ 32 ] ; t#uint32_t shadow_reg [ 7 ] ; t#uint16_t mailbox_reg [ 32 ] ; t#uint32_t xseq_gp_reg [ 128 ] ; t#uint32_t xseq_0_reg [ 16 ] ; t#uint32_t xseq_1_reg [ 16 ] ; t#uint32_t rseq_gp_reg [ 128 ] ; t#uint32_t rseq_0_reg [ 16 ] ; t#uint32_t rseq_1_reg [ 16 ] ; t#uint32_t rseq_2_reg [ 16 ] ; t#uint32_t cmd_dma_reg [ 16 ] ; t#uint32_t req0_dma_reg [ 15 ] ; t#uint32_t resp0_dma_reg [ 15 ] ; t#uint32_t req1_dma_reg [ 15 ] ; t#uint32_t xmt0_dma_reg [ 32 ] ; t#uint32_t xmt1_dma_reg [ 32 ] ; t#uint32_t xmt2_dma_reg [ 32 ] ; t#uint32_t xmt3_dma_reg [ 32 ] ; t#uint32_t xmt4_dma_reg [ 32 ] ; t#uint32_t xmt_data_dma_reg [ 16 ] ; t#uint32_t rcvt0_data_dma_reg [ 32 ] ; t#uint32_t rcvt1_data_dma_reg [ 32 ] ; t#uint32_t risc_gp_reg [ 128 ] ; t#uint32_t lmc_reg [ 112 ] ; t#uint32_t fpm_hdw_reg [ 192 ] ; t#uint32_t fb_hdw_reg [ 176 ] ; t#uint32_t code_ram [ 0x2000 ] ; t#uint32_t ext_mem [ 1 ] ; } 
s#qla25xx_fw_dump struct qla25xx_fw_dump { t#uint32_t host_status ; t#uint32_t host_risc_reg [ 32 ] ; t#uint32_t pcie_regs [ 4 ] ; t#uint32_t host_reg [ 32 ] ; t#uint32_t shadow_reg [ 11 ] ; t#uint32_t risc_io_reg ; t#uint16_t mailbox_reg [ 32 ] ; t#uint32_t xseq_gp_reg [ 128 ] ; t#uint32_t xseq_0_reg [ 48 ] ; t#uint32_t xseq_1_reg [ 16 ] ; t#uint32_t rseq_gp_reg [ 128 ] ; t#uint32_t rseq_0_reg [ 32 ] ; t#uint32_t rseq_1_reg [ 16 ] ; t#uint32_t rseq_2_reg [ 16 ] ; t#uint32_t aseq_gp_reg [ 128 ] ; t#uint32_t aseq_0_reg [ 32 ] ; t#uint32_t aseq_1_reg [ 16 ] ; t#uint32_t aseq_2_reg [ 16 ] ; t#uint32_t cmd_dma_reg [ 16 ] ; t#uint32_t req0_dma_reg [ 15 ] ; t#uint32_t resp0_dma_reg [ 15 ] ; t#uint32_t req1_dma_reg [ 15 ] ; t#uint32_t xmt0_dma_reg [ 32 ] ; t#uint32_t xmt1_dma_reg [ 32 ] ; t#uint32_t xmt2_dma_reg [ 32 ] ; t#uint32_t xmt3_dma_reg [ 32 ] ; t#uint32_t xmt4_dma_reg [ 32 ] ; t#uint32_t xmt_data_dma_reg [ 16 ] ; t#uint32_t rcvt0_data_dma_reg [ 32 ] ; t#uint32_t rcvt1_data_dma_reg [ 32 ] ; t#uint32_t risc_gp_reg [ 128 ] ; t#uint32_t lmc_reg [ 128 ] ; t#uint32_t fpm_hdw_reg [ 192 ] ; t#uint32_t fb_hdw_reg [ 192 ] ; t#uint32_t code_ram [ 0x2000 ] ; t#uint32_t ext_mem [ 1 ] ; } 
s#qla81xx_fw_dump struct qla81xx_fw_dump { t#uint32_t host_status ; t#uint32_t host_risc_reg [ 32 ] ; t#uint32_t pcie_regs [ 4 ] ; t#uint32_t host_reg [ 32 ] ; t#uint32_t shadow_reg [ 11 ] ; t#uint32_t risc_io_reg ; t#uint16_t mailbox_reg [ 32 ] ; t#uint32_t xseq_gp_reg [ 128 ] ; t#uint32_t xseq_0_reg [ 48 ] ; t#uint32_t xseq_1_reg [ 16 ] ; t#uint32_t rseq_gp_reg [ 128 ] ; t#uint32_t rseq_0_reg [ 32 ] ; t#uint32_t rseq_1_reg [ 16 ] ; t#uint32_t rseq_2_reg [ 16 ] ; t#uint32_t aseq_gp_reg [ 128 ] ; t#uint32_t aseq_0_reg [ 32 ] ; t#uint32_t aseq_1_reg [ 16 ] ; t#uint32_t aseq_2_reg [ 16 ] ; t#uint32_t cmd_dma_reg [ 16 ] ; t#uint32_t req0_dma_reg [ 15 ] ; t#uint32_t resp0_dma_reg [ 15 ] ; t#uint32_t req1_dma_reg [ 15 ] ; t#uint32_t xmt0_dma_reg [ 32 ] ; t#uint32_t xmt1_dma_reg [ 32 ] ; t#uint32_t xmt2_dma_reg [ 32 ] ; t#uint32_t xmt3_dma_reg [ 32 ] ; t#uint32_t xmt4_dma_reg [ 32 ] ; t#uint32_t xmt_data_dma_reg [ 16 ] ; t#uint32_t rcvt0_data_dma_reg [ 32 ] ; t#uint32_t rcvt1_data_dma_reg [ 32 ] ; t#uint32_t risc_gp_reg [ 128 ] ; t#uint32_t lmc_reg [ 128 ] ; t#uint32_t fpm_hdw_reg [ 224 ] ; t#uint32_t fb_hdw_reg [ 208 ] ; t#uint32_t code_ram [ 0x2000 ] ; t#uint32_t ext_mem [ 1 ] ; } 
s#qla83xx_fw_dump struct qla83xx_fw_dump { t#uint32_t host_status ; t#uint32_t host_risc_reg [ 48 ] ; t#uint32_t pcie_regs [ 4 ] ; t#uint32_t host_reg [ 32 ] ; t#uint32_t shadow_reg [ 11 ] ; t#uint32_t risc_io_reg ; t#uint16_t mailbox_reg [ 32 ] ; t#uint32_t xseq_gp_reg [ 256 ] ; t#uint32_t xseq_0_reg [ 48 ] ; t#uint32_t xseq_1_reg [ 16 ] ; t#uint32_t xseq_2_reg [ 16 ] ; t#uint32_t rseq_gp_reg [ 256 ] ; t#uint32_t rseq_0_reg [ 32 ] ; t#uint32_t rseq_1_reg [ 16 ] ; t#uint32_t rseq_2_reg [ 16 ] ; t#uint32_t rseq_3_reg [ 16 ] ; t#uint32_t aseq_gp_reg [ 256 ] ; t#uint32_t aseq_0_reg [ 32 ] ; t#uint32_t aseq_1_reg [ 16 ] ; t#uint32_t aseq_2_reg [ 16 ] ; t#uint32_t aseq_3_reg [ 16 ] ; t#uint32_t cmd_dma_reg [ 64 ] ; t#uint32_t req0_dma_reg [ 15 ] ; t#uint32_t resp0_dma_reg [ 15 ] ; t#uint32_t req1_dma_reg [ 15 ] ; t#uint32_t xmt0_dma_reg [ 32 ] ; t#uint32_t xmt1_dma_reg [ 32 ] ; t#uint32_t xmt2_dma_reg [ 32 ] ; t#uint32_t xmt3_dma_reg [ 32 ] ; t#uint32_t xmt4_dma_reg [ 32 ] ; t#uint32_t xmt_data_dma_reg [ 16 ] ; t#uint32_t rcvt0_data_dma_reg [ 32 ] ; t#uint32_t rcvt1_data_dma_reg [ 32 ] ; t#uint32_t risc_gp_reg [ 128 ] ; t#uint32_t lmc_reg [ 128 ] ; t#uint32_t fpm_hdw_reg [ 256 ] ; t#uint32_t rq0_array_reg [ 256 ] ; t#uint32_t rq1_array_reg [ 256 ] ; t#uint32_t rp0_array_reg [ 256 ] ; t#uint32_t rp1_array_reg [ 256 ] ; t#uint32_t queue_control_reg [ 16 ] ; t#uint32_t fb_hdw_reg [ 432 ] ; t#uint32_t at0_array_reg [ 128 ] ; t#uint32_t code_ram [ 0x2400 ] ; t#uint32_t ext_mem [ 1 ] ; } 
s#qla2xxx_fw_dump struct qla2xxx_fw_dump { t#uint8_t signature [ 4 ] ; t#uint32_t version ; t#uint32_t fw_major_version ; t#uint32_t fw_minor_version ; t#uint32_t fw_subminor_version ; t#uint32_t fw_attributes ; t#uint32_t vendor ; t#uint32_t device ; t#uint32_t subsystem_vendor ; t#uint32_t subsystem_device ; t#uint32_t fixed_size ; t#uint32_t mem_size ; t#uint32_t req_q_size ; t#uint32_t rsp_q_size ; t#uint32_t eft_size ; t#uint32_t eft_addr_l ; t#uint32_t eft_addr_h ; t#uint32_t header_size ; union { s#qla2100_fw_dump isp21 ; s#qla2300_fw_dump isp23 ; s#qla24xx_fw_dump isp24 ; s#qla25xx_fw_dump isp25 ; s#qla81xx_fw_dump isp81 ; s#qla83xx_fw_dump isp83 ; } isp ; } 
s#qla_chip_state_84xx struct qla_chip_state_84xx { s#list_head list ; s#kref kref ; void * bus ; t#spinlock_t access_lock ; s#mutex fw_update_mutex ; t#uint32_t fw_update ; t#uint32_t op_fw_version ; t#uint32_t op_fw_size ; t#uint32_t op_fw_seq_size ; t#uint32_t diag_fw_version ; t#uint32_t gold_fw_version ; } 
s#qla_statistics struct qla_statistics { t#uint32_t total_isp_aborts ; t#uint64_t input_bytes ; t#uint64_t output_bytes ; t#uint64_t input_requests ; t#uint64_t output_requests ; t#uint32_t control_requests ; t#uint64_t jiffies_at_last_reset ; } 
t#cmd_entry_t typedef struct { t#uint8_t entry_type ; t#uint8_t entry_count ; t#uint8_t sys_define ; t#uint8_t entry_status ; t#uint32_t handle ; t#target_id_t target ; t#uint16_t lun ; t#uint16_t control_flags ; t#uint16_t reserved_1 ; t#uint16_t timeout ; t#uint16_t dseg_count ; t#uint8_t scsi_cdb [ 16 ] ; t#uint32_t byte_count ; t#uint32_t dseg_0_address ; t#uint32_t dseg_0_length ; t#uint32_t dseg_1_address ; t#uint32_t dseg_1_length ; t#uint32_t dseg_2_address ; t#uint32_t dseg_2_length ; } cmd_entry_t 
s#isp_operations struct isp_operations { int ( * pci_config ) ( s#scsi_qla_host * ) ; void ( * reset_chip ) ( s#scsi_qla_host * ) ; int ( * chip_diag ) ( s#scsi_qla_host * ) ; void ( * config_rings ) ( s#scsi_qla_host * ) ; void ( * reset_adapter ) ( s#scsi_qla_host * ) ; int ( * nvram_config ) ( s#scsi_qla_host * ) ; void ( * update_fw_options ) ( s#scsi_qla_host * ) ; int ( * load_risc ) ( s#scsi_qla_host * , t#uint32_t * ) ; char * ( * pci_info_str ) ( s#scsi_qla_host * , char * ) ; char * ( * fw_version_str ) ( s#scsi_qla_host * , char * ) ; t#irq_handler_t intr_handler ; void ( * enable_intrs ) ( s#qla_hw_data * ) ; void ( * disable_intrs ) ( s#qla_hw_data * ) ; int ( * abort_command ) ( t#srb_t * ) ; int ( * target_reset ) ( s#fc_port * , unsigned int , int ) ; int ( * lun_reset ) ( s#fc_port * , unsigned int , int ) ; int ( * fabric_login ) ( s#scsi_qla_host * , t#uint16_t , t#uint8_t , t#uint8_t , t#uint8_t , t#uint16_t * , t#uint8_t ) ; int ( * fabric_logout ) ( s#scsi_qla_host * , t#uint16_t , t#uint8_t , t#uint8_t , t#uint8_t ) ; t#uint16_t ( * calc_req_entries ) ( t#uint16_t ) ; void ( * build_iocbs ) ( t#srb_t * , t#cmd_entry_t * , t#uint16_t ) ; void * ( * prep_ms_iocb ) ( s#scsi_qla_host * , t#uint32_t , t#uint32_t ) ; void * ( * prep_ms_fdmi_iocb ) ( s#scsi_qla_host * , t#uint32_t , t#uint32_t ) ; t#uint8_t * ( * read_nvram ) ( s#scsi_qla_host * , t#uint8_t * , t#uint32_t , t#uint32_t ) ; int ( * write_nvram ) ( s#scsi_qla_host * , t#uint8_t * , t#uint32_t , t#uint32_t ) ; void ( * fw_dump ) ( s#scsi_qla_host * , int ) ; int ( * beacon_on ) ( s#scsi_qla_host * ) ; int ( * beacon_off ) ( s#scsi_qla_host * ) ; void ( * beacon_blink ) ( s#scsi_qla_host * ) ; t#uint8_t * ( * read_optrom ) ( s#scsi_qla_host * , t#uint8_t * , t#uint32_t , t#uint32_t ) ; int ( * write_optrom ) ( s#scsi_qla_host * , t#uint8_t * , t#uint32_t , t#uint32_t ) ; int ( * get_flash_version ) ( s#scsi_qla_host * , void * ) ; int ( * start_scsi ) ( t#srb_t * ) ; int ( * abort_isp ) ( s#scsi_qla_host * ) ; int ( * iospace_config ) ( s#qla_hw_data * ) ; int ( * initialize_adapter ) ( s#scsi_qla_host * ) ; } 
s#qlfc_fw struct qlfc_fw { void * fw_buf ; t#dma_addr_t fw_dma ; t#uint32_t len ; } 
s#qla_fcp_prio_entry struct qla_fcp_prio_entry { t#uint16_t flags ; t#uint8_t tag ; t#uint8_t reserved ; t#uint32_t src_pid ; t#uint32_t dst_pid ; t#uint16_t lun_beg ; t#uint16_t lun_end ; t#uint8_t src_wwpn [ 8 ] ; t#uint8_t dst_wwpn [ 8 ] ; } 
s#qla_fcp_prio_cfg struct qla_fcp_prio_cfg { t#uint8_t signature [ 4 ] ; t#uint16_t version ; t#uint16_t length ; t#uint16_t checksum ; t#uint16_t num_entries ; t#uint16_t size_of_entry ; t#uint8_t attributes ; t#uint8_t reserved ; s#qla_fcp_prio_entry entry [ 1 ] ; } 
s#fw_blob struct fw_blob { char * name ; t#uint32_t segs [ 4 ] ; const s#firmware * fw ; } 
s#qla82xx_legacy_intr_set struct qla82xx_legacy_intr_set { t#uint32_t int_vec_bit ; t#uint32_t tgt_status_reg ; t#uint32_t tgt_mask_reg ; t#uint32_t pci_int_reg ; } 
s#mr_data_fx00 struct mr_data_fx00 { t#uint8_t symbolic_name [ 64 ] ; t#uint8_t serial_num [ 32 ] ; t#uint8_t hw_version [ 16 ] ; t#uint8_t fw_version [ 16 ] ; t#uint8_t uboot_version [ 16 ] ; t#uint8_t fru_serial_num [ 32 ] ; t#fc_port_t fcport ; t#uint8_t fw_hbt_en ; t#uint8_t fw_hbt_cnt ; t#uint8_t fw_hbt_miss_cnt ; t#uint32_t old_fw_hbt_cnt ; t#uint16_t fw_reset_timer_tick ; t#uint8_t fw_reset_timer_exp ; t#uint16_t fw_critemp_timer_tick ; t#uint32_t old_aenmbx0_state ; t#uint32_t critical_temperature ; t#bool extended_io_enabled ; t#bool host_info_resend ; t#uint8_t hinfo_resend_timer_tick ; } 
s#atio struct atio { t#uint8_t entry_type ; t#uint8_t entry_count ; t#uint8_t data [ 58 ] ; t#uint32_t signature ; } 
s#imm_ntfy_from_isp struct imm_ntfy_from_isp { t#uint8_t entry_type ; t#uint8_t entry_count ; t#uint8_t sys_define ; t#uint8_t entry_status ; union { struct { t#uint32_t sys_define_2 ; t#target_id_t target ; t#uint16_t lun ; t#uint8_t target_id ; t#uint8_t reserved_1 ; t#uint16_t status_modifier ; t#uint16_t status ; t#uint16_t task_flags ; t#uint16_t seq_id ; t#uint16_t srr_rx_id ; t#uint32_t srr_rel_offs ; t#uint16_t srr_ui ; t#uint16_t srr_ox_id ; t#uint8_t reserved_2 [ 28 ] ; } isp2x ; struct { t#uint32_t reserved ; t#uint16_t nport_handle ; t#uint16_t reserved_2 ; t#uint16_t flags ; t#uint16_t srr_rx_id ; t#uint16_t status ; t#uint8_t status_subcode ; t#uint8_t fw_handle ; t#uint32_t exchange_address ; t#uint32_t srr_rel_offs ; t#uint16_t srr_ui ; t#uint16_t srr_ox_id ; t#uint8_t reserved_4 [ 19 ] ; t#uint8_t vp_index ; t#uint32_t reserved_5 ; t#uint8_t port_id [ 3 ] ; t#uint8_t reserved_6 ; } isp24 ; } u ; t#uint16_t reserved_7 ; t#uint16_t ox_id ; } 
s#qla_tgt struct qla_tgt { s#scsi_qla_host * vha ; s#qla_hw_data * ha ; int irq_cmd_count ; int datasegs_per_cmd , datasegs_per_cont , sg_tablesize ; unsigned int tgt_enable_64bit_addr : 1 ; unsigned int link_reinit_iocb_pending : 1 ; int tgt_stop ; int tgt_stopped ; int sess_count ; s#list_head sess_list ; s#list_head del_sess_list ; s#delayed_work sess_del_work ; t#spinlock_t sess_work_lock ; s#list_head sess_works_list ; s#work_struct sess_work ; s#imm_ntfy_from_isp link_reinit_iocb ; t#wait_queue_head_t waitQ ; int notify_ack_expected ; int abts_resp_expected ; int modify_lun_expected ; int ctio_srr_id ; int imm_srr_id ; t#spinlock_t srr_lock ; s#list_head srr_ctio_list ; s#list_head srr_imm_list ; s#work_struct srr_work ; t#atomic_t tgt_global_resets_count ; s#list_head tgt_list_entry ; } 
s#fcp_hdr struct fcp_hdr { t#uint8_t r_ctl ; t#uint8_t d_id [ 3 ] ; t#uint8_t cs_ctl ; t#uint8_t s_id [ 3 ] ; t#uint8_t type ; t#uint8_t f_ctl [ 3 ] ; t#uint8_t seq_id ; t#uint8_t df_ctl ; t#uint16_t seq_cnt ; t#uint16_t ox_id ; t#uint16_t rx_id ; t#uint32_t parameter ; } 
s#atio7_fcp_cmnd struct atio7_fcp_cmnd { t#uint64_t lun ; t#uint8_t cmnd_ref ; t#uint8_t task_attr : 3 ; t#uint8_t reserved : 5 ; t#uint8_t task_mgmt_flags ; t#uint8_t wrdata : 1 ; t#uint8_t rddata : 1 ; t#uint8_t add_cdb_len : 6 ; t#uint8_t cdb [ 16 ] ; t#uint8_t add_cdb [ 4 ] ; } 
s#atio_from_isp struct atio_from_isp { union { struct { t#uint16_t entry_hdr ; t#uint8_t sys_define ; t#uint8_t entry_status ; t#uint32_t sys_define_2 ; t#target_id_t target ; t#uint16_t rx_id ; t#uint16_t flags ; t#uint16_t status ; t#uint8_t command_ref ; t#uint8_t task_codes ; t#uint8_t task_flags ; t#uint8_t execution_codes ; t#uint8_t cdb [ 16 ] ; t#uint32_t data_length ; t#uint16_t lun ; t#uint8_t initiator_port_name [ 8 ] ; t#uint16_t reserved_32 [ 6 ] ; t#uint16_t ox_id ; } isp2x ; struct { t#uint16_t entry_hdr ; t#uint8_t fcp_cmnd_len_low ; t#uint8_t fcp_cmnd_len_high : 4 ; t#uint8_t attr : 4 ; t#uint32_t exchange_addr ; s#fcp_hdr fcp_hdr ; s#atio7_fcp_cmnd fcp_cmnd ; } isp24 ; struct { t#uint8_t entry_type ; t#uint8_t entry_count ; t#uint8_t data [ 58 ] ; t#uint32_t signature ; } raw ; } u ; } 
s#qla_tgt_cmd struct qla_tgt_cmd { s#qla_tgt_sess * sess ; int state ; s#se_cmd se_cmd ; s#work_struct free_work ; s#work_struct work ; unsigned char sense_buffer [ 96 ] ; unsigned int conf_compl_supported : 1 ; unsigned int sg_mapped : 1 ; unsigned int free_sg : 1 ; unsigned int aborted : 1 ; unsigned int write_data_transferred : 1 ; s#scatterlist * sg ; int sg_cnt ; int bufflen ; int offset ; t#uint32_t tag ; t#uint32_t unpacked_lun ; e#dma_data_direction dma_data_direction ; t#uint16_t loop_id ; s#qla_tgt * tgt ; s#scsi_qla_host * vha ; s#atio_from_isp atio ; } 
s#fcp_hdr_le struct fcp_hdr_le { t#uint8_t d_id [ 3 ] ; t#uint8_t r_ctl ; t#uint8_t s_id [ 3 ] ; t#uint8_t cs_ctl ; t#uint8_t f_ctl [ 3 ] ; t#uint8_t type ; t#uint16_t seq_cnt ; t#uint8_t df_ctl ; t#uint8_t seq_id ; t#uint16_t rx_id ; t#uint16_t ox_id ; t#uint32_t parameter ; } 
s#abts_recv_from_24xx struct abts_recv_from_24xx { t#uint8_t entry_type ; t#uint8_t entry_count ; t#uint8_t sys_define ; t#uint8_t entry_status ; t#uint8_t reserved_1 [ 6 ] ; t#uint16_t nport_handle ; t#uint8_t reserved_2 [ 2 ] ; t#uint8_t vp_index ; t#uint8_t reserved_3 : 4 ; t#uint8_t sof_type : 4 ; t#uint32_t exchange_address ; s#fcp_hdr_le fcp_hdr_le ; t#uint8_t reserved_4 [ 16 ] ; t#uint32_t exchange_addr_to_abort ; } 
s#qla_tgt_mgmt_cmd struct qla_tgt_mgmt_cmd { t#uint8_t tmr_func ; t#uint8_t fc_tm_rsp ; s#qla_tgt_sess * sess ; s#se_cmd se_cmd ; s#work_struct free_work ; unsigned int flags ; union { s#atio_from_isp atio ; s#imm_ntfy_from_isp imm_ntfy ; s#abts_recv_from_24xx abts ; } __attribute__ ( ( packed ) ) orig_iocb ; } 
s#qla_tgt_func_tmpl struct qla_tgt_func_tmpl { int ( * handle_cmd ) ( s#scsi_qla_host * , s#qla_tgt_cmd * , unsigned char * , t#uint32_t , int , int , int ) ; void ( * handle_data ) ( s#qla_tgt_cmd * ) ; int ( * handle_tmr ) ( s#qla_tgt_mgmt_cmd * , t#uint32_t , t#uint8_t , t#uint32_t ) ; void ( * free_cmd ) ( s#qla_tgt_cmd * ) ; void ( * free_mcmd ) ( s#qla_tgt_mgmt_cmd * ) ; void ( * free_session ) ( s#qla_tgt_sess * ) ; int ( * check_initiator_node_acl ) ( s#scsi_qla_host * , unsigned char * , void * , t#uint8_t * , t#uint16_t ) ; void ( * update_sess ) ( s#qla_tgt_sess * , t#port_id_t , t#uint16_t , t#bool ) ; s#qla_tgt_sess * ( * find_sess_by_loop_id ) ( s#scsi_qla_host * , const t#uint16_t ) ; s#qla_tgt_sess * ( * find_sess_by_s_id ) ( s#scsi_qla_host * , const t#uint8_t * ) ; void ( * clear_nacl_from_fcport_map ) ( s#qla_tgt_sess * ) ; void ( * put_sess ) ( s#qla_tgt_sess * ) ; void ( * shutdown_sess ) ( s#qla_tgt_sess * ) ; } 
t#scsi_qla_host_t typedef s#scsi_qla_host scsi_qla_host_t 
s#qla_tgt_vp_map struct qla_tgt_vp_map { t#uint8_t idx ; t#scsi_qla_host_t * vha ; } 
s#qlt_hw_data struct qlt_hw_data { t#uint32_t enable_class_2 : 1 ; t#uint32_t enable_explicit_conf : 1 ; t#uint32_t ini_mode_force_reverse : 1 ; t#uint32_t node_name_set : 1 ; t#dma_addr_t atio_dma ; s#atio * atio_ring ; s#atio * atio_ring_ptr ; t#uint16_t atio_ring_index ; t#uint16_t atio_q_length ; t#uint32_t * atio_q_in ; t#uint32_t * atio_q_out ; void * target_lport_ptr ; s#qla_tgt_func_tmpl * tgt_ops ; s#qla_tgt * qla_tgt ; s#qla_tgt_cmd * cmds [ 1024 ] ; t#uint16_t current_handle ; s#qla_tgt_vp_map * tgt_vp_map ; s#mutex tgt_mutex ; s#mutex tgt_host_action_mutex ; int saved_set ; t#uint16_t saved_exchange_count ; t#uint32_t saved_firmware_options_1 ; t#uint32_t saved_firmware_options_2 ; t#uint32_t saved_firmware_options_3 ; t#uint8_t saved_firmware_options [ 2 ] ; t#uint8_t saved_add_firmware_options [ 2 ] ; t#uint8_t tgt_node_name [ 8 ] ; } 
s#qla_hw_data struct qla_hw_data { s#pci_dev * pdev ; t#mempool_t * srb_mempool ; volatile struct { t#uint32_t mbox_int : 1 ; t#uint32_t mbox_busy : 1 ; t#uint32_t disable_risc_code_load : 1 ; t#uint32_t enable_64bit_addressing : 1 ; t#uint32_t enable_lip_reset : 1 ; t#uint32_t enable_target_reset : 1 ; t#uint32_t enable_lip_full_login : 1 ; t#uint32_t enable_led_scheme : 1 ; t#uint32_t msi_enabled : 1 ; t#uint32_t msix_enabled : 1 ; t#uint32_t disable_serdes : 1 ; t#uint32_t gpsc_supported : 1 ; t#uint32_t npiv_supported : 1 ; t#uint32_t E#pci_channel_io_perm_failure : 1 ; t#uint32_t fce_enabled : 1 ; t#uint32_t fac_supported : 1 ; t#uint32_t chip_reset_done : 1 ; t#uint32_t running_gold_fw : 1 ; t#uint32_t eeh_busy : 1 ; t#uint32_t cpu_affinity_enabled : 1 ; t#uint32_t disable_msix_handshake : 1 ; t#uint32_t fcp_prio_enabled : 1 ; t#uint32_t isp82xx_fw_hung : 1 ; t#uint32_t nic_core_hung : 1 ; t#uint32_t quiesce_owner : 1 ; t#uint32_t nic_core_reset_hdlr_active : 1 ; t#uint32_t nic_core_reset_owner : 1 ; t#uint32_t isp82xx_no_md_cap : 1 ; t#uint32_t host_shutting_down : 1 ; t#uint32_t idc_compl_status : 1 ; t#uint32_t mr_reset_hdlr_active : 1 ; t#uint32_t mr_intr_valid : 1 ; } flags ; t#spinlock_t hardware_lock __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; int bars ; int mem_only ; t#device_reg_t * iobase ; t#resource_size_t pio_address ; t#dma_addr_t bar0_hdl ; void * cregbase ; t#dma_addr_t bar2_hdl ; t#uint32_t rqstq_intr_code ; t#uint32_t mbx_intr_code ; t#uint32_t req_que_len ; t#uint32_t rsp_que_len ; t#uint32_t req_que_off ; t#uint32_t rsp_que_off ; t#device_reg_t * mqiobase ; t#device_reg_t * msixbase ; t#uint16_t msix_count ; t#uint8_t mqenable ; s#req_que * * req_q_map ; s#rsp_que * * rsp_q_map ; unsigned long req_qid_map [ ( 256 / 8 ) / sizeof ( unsigned long ) ] ; unsigned long rsp_qid_map [ ( 256 / 8 ) / sizeof ( unsigned long ) ] ; t#uint8_t max_req_queues ; t#uint8_t max_rsp_queues ; s#qla_npiv_entry * npiv_info ; t#uint16_t nvram_npiv_size ; t#uint16_t switch_cap ; t#uint8_t port_no ; t#uint8_t loop_down_abort_time ; t#atomic_t loop_down_timer ; t#uint8_t link_down_timeout ; t#uint16_t max_loop_id ; t#uint16_t max_fibre_devices ; t#uint16_t fb_rev ; t#uint16_t min_external_loopid ; t#uint16_t link_data_rate ; t#uint8_t current_topology ; t#uint8_t prev_topology ; t#uint8_t operating_mode ; t#uint8_t interrupts_on ; t#uint32_t isp_abort_cnt ; t#uint32_t device_type ; t#uint8_t serial0 ; t#uint8_t serial1 ; t#uint8_t serial2 ; t#uint16_t nvram_size ; t#uint16_t nvram_base ; void * nvram ; t#uint16_t vpd_size ; t#uint16_t vpd_base ; void * vpd ; t#uint16_t loop_reset_delay ; t#uint8_t retry_count ; t#uint8_t login_timeout ; t#uint16_t r_a_tov ; int port_down_retry_count ; t#uint8_t mbx_count ; t#uint8_t aen_mbx_count ; t#uint32_t login_retry_count ; t#ms_iocb_entry_t * ms_iocb ; t#dma_addr_t ms_iocb_dma ; s#ct_sns_pkt * ct_sns ; t#dma_addr_t ct_sns_dma ; s#sns_cmd_pkt * sns_cmd ; t#dma_addr_t sns_cmd_dma ; void * sfp_data ; t#dma_addr_t sfp_data_dma ; void * xgmac_data ; t#dma_addr_t xgmac_data_dma ; void * dcbx_tlv ; t#dma_addr_t dcbx_tlv_dma ; s#task_struct * dpc_thread ; t#uint8_t dpc_active ; t#dma_addr_t gid_list_dma ; s#gid_list_info * gid_list ; int gid_list_info_size ; s#dma_pool * s_dma_pool ; t#dma_addr_t init_cb_dma ; t#init_cb_t * init_cb ; int init_cb_size ; t#dma_addr_t ex_init_cb_dma ; s#ex_init_cb_81xx * ex_init_cb ; void * async_pd ; t#dma_addr_t async_pd_dma ; void * swl ; t#uint16_t mailbox_out [ 32 ] ; t#uint32_t mailbox_out32 [ 32 ] ; t#uint32_t aenmb [ 8 ] ; t#mbx_cmd_t * mcp ; s#mbx_cmd_32 * mcp32 ; unsigned long mbx_cmd_flags ; s#mutex vport_lock ; t#spinlock_t vport_slock ; s#completion mbx_cmd_comp ; s#completion mbx_intr_comp ; s#completion dcbx_comp ; s#completion lb_portup_comp ; int notify_dcbx_comp ; int notify_lb_portup_comp ; s#mutex selflogin_lock ; t#uint16_t fw_major_version ; t#uint16_t fw_minor_version ; t#uint16_t fw_subminor_version ; t#uint16_t fw_attributes ; t#uint16_t fw_attributes_h ; t#uint16_t fw_attributes_ext [ 2 ] ; t#uint32_t fw_memory_size ; t#uint32_t fw_transfer_size ; t#uint32_t fw_srisc_address ; t#uint16_t fw_xcb_count ; t#uint16_t fw_iocb_count ; t#uint32_t fw_shared_ram_start ; t#uint32_t fw_shared_ram_end ; t#uint16_t fw_options [ 16 ] ; t#uint8_t fw_seriallink_options [ 4 ] ; t#uint16_t fw_seriallink_options24 [ 4 ] ; t#uint8_t mpi_version [ 3 ] ; t#uint32_t mpi_capabilities ; t#uint8_t phy_version [ 3 ] ; void * fw_dump_template ; t#uint32_t fw_dump_template_len ; s#qla2xxx_fw_dump * fw_dump ; t#uint32_t fw_dump_len ; int fw_dumped ; unsigned long fw_dump_cap_flags ; int fw_dump_reading ; int prev_minidump_failed ; t#dma_addr_t eft_dma ; void * eft ; t#dma_addr_t mctp_dump_dma ; void * mctp_dump ; int mctp_dumped ; int mctp_dump_reading ; t#uint32_t chain_offset ; s#dentry * dfs_dir ; s#dentry * dfs_fce ; t#dma_addr_t fce_dma ; void * fce ; t#uint32_t fce_bufs ; t#uint16_t fce_mb [ 8 ] ; t#uint64_t fce_wr , fce_rd ; s#mutex fce_mutex ; t#uint32_t pci_attr ; t#uint16_t chip_revision ; t#uint16_t product_id [ 4 ] ; t#uint8_t model_number [ 16 + 1 ] ; char model_desc [ 80 ] ; t#uint8_t adapter_id [ 16 + 1 ] ; char * optrom_buffer ; t#uint32_t optrom_size ; int optrom_state ; t#uint32_t optrom_region_start ; t#uint32_t optrom_region_size ; s#mutex optrom_mutex ; t#uint8_t bios_revision [ 2 ] ; t#uint8_t efi_revision [ 2 ] ; t#uint8_t fcode_revision [ 16 ] ; t#uint32_t fw_revision [ 4 ] ; t#uint32_t gold_fw_version [ 4 ] ; t#uint32_t flash_conf_off ; t#uint32_t flash_data_off ; t#uint32_t nvram_conf_off ; t#uint32_t nvram_data_off ; t#uint32_t fdt_wrt_disable ; t#uint32_t fdt_wrt_enable ; t#uint32_t fdt_erase_cmd ; t#uint32_t fdt_block_size ; t#uint32_t fdt_unprotect_sec_cmd ; t#uint32_t fdt_protect_sec_cmd ; t#uint32_t fdt_wrt_sts_reg_cmd ; t#uint32_t flt_region_flt ; t#uint32_t flt_region_fdt ; t#uint32_t flt_region_boot ; t#uint32_t flt_region_fw ; t#uint32_t flt_region_vpd_nvram ; t#uint32_t flt_region_vpd ; t#uint32_t flt_region_nvram ; t#uint32_t flt_region_npiv_conf ; t#uint32_t flt_region_gold_fw ; t#uint32_t flt_region_fcp_prio ; t#uint32_t flt_region_bootload ; t#uint16_t beacon_blink_led ; t#uint8_t beacon_color_state ; t#uint16_t zio_mode ; t#uint16_t zio_timer ; s#qla_msix_entry * msix_entries ; s#list_head vp_list ; unsigned long vp_idx_map [ ( 256 / 8 ) / sizeof ( unsigned long ) ] ; t#uint16_t num_vhosts ; t#uint16_t num_vsans ; t#uint16_t max_npiv_vports ; int cur_vport_count ; s#qla_chip_state_84xx * cs84xx ; s#qla_statistics qla_stats ; s#isp_operations * isp_ops ; s#workqueue_struct * wq ; s#qlfc_fw fw_buf ; s#qla_fcp_prio_cfg * fcp_prio_cfg ; s#dma_pool * dl_dma_pool ; s#dma_pool * fcp_cmnd_dma_pool ; t#mempool_t * ctx_mempool ; unsigned long nx_pcibase ; t#uint8_t * nxdb_rd_ptr ; unsigned long nxdb_wr_ptr ; t#uint32_t crb_win ; t#uint32_t curr_window ; t#uint32_t ddr_mn_window ; unsigned long mn_win_crb ; unsigned long ms_win_crb ; int qdr_sn_window ; t#uint32_t fcoe_dev_init_timeout ; t#uint32_t fcoe_reset_timeout ; t#rwlock_t hw_lock ; t#uint16_t portnum ; int link_width ; s#fw_blob * hablob ; s#qla82xx_legacy_intr_set nx_legacy_intr ; t#uint16_t gbl_dsd_inuse ; t#uint16_t gbl_dsd_avail ; s#list_head gbl_dsd_list ; t#uint8_t fw_type ; t#__le32 file_prd_off ; t#uint32_t md_template_size ; void * md_tmplt_hdr ; t#dma_addr_t md_tmplt_hdr_dma ; void * md_dump ; t#uint32_t md_dump_size ; void * loop_id_map ; t#uint32_t idc_audit_ts ; t#uint32_t idc_extend_tmo ; s#workqueue_struct * dpc_lp_wq ; s#work_struct idc_aen ; s#workqueue_struct * dpc_hp_wq ; s#work_struct nic_core_reset ; s#work_struct idc_state_handler ; s#work_struct nic_core_unrecoverable ; s#work_struct board_disable ; s#mr_data_fx00 mr ; s#qlt_hw_data tgt ; int allow_cna_fw_dump ; } 
s#bidi_statistics struct bidi_statistics { unsigned long long io_count ; unsigned long long transfer_bytes ; } 
s#qla8044_reset_template_hdr struct qla8044_reset_template_hdr { t#uint16_t version ; t#uint16_t signature ; t#uint16_t size ; t#uint16_t entries ; t#uint16_t hdr_size ; t#uint16_t checksum ; t#uint16_t init_seq_offset ; t#uint16_t start_seq_offset ; } 
s#qla8044_reset_template struct qla8044_reset_template { int seq_index ; int seq_error ; int array_index ; t#uint32_t array [ 16 ] ; t#uint8_t * buff ; t#uint8_t * stop_offset ; t#uint8_t * start_offset ; t#uint8_t * init_offset ; s#qla8044_reset_template_hdr * hdr ; t#uint8_t seq_end ; t#uint8_t template_end ; } 
s#scsi_qla_host struct scsi_qla_host { s#list_head list ; s#list_head vp_fcports ; s#list_head work_list ; t#spinlock_t work_lock ; s#Scsi_Host * host ; unsigned long host_no ; t#uint8_t host_str [ 16 ] ; volatile struct { t#uint32_t init_done : 1 ; t#uint32_t online : 1 ; t#uint32_t reset_active : 1 ; t#uint32_t management_server_logged_in : 1 ; t#uint32_t process_response_queue : 1 ; t#uint32_t difdix_supported : 1 ; t#uint32_t delete_progress : 1 ; t#uint32_t fw_tgt_reported : 1 ; } flags ; t#atomic_t loop_state ; unsigned long dpc_flags ; t#uint32_t device_flags ; t#uint16_t loop_id ; t#uint16_t self_login_loop_id ; t#fc_port_t bidir_fcport ; t#port_id_t d_id ; t#uint8_t marker_needed ; t#uint16_t mgmt_svr_loop_id ; t#uint8_t loop_down_abort_time ; t#atomic_t loop_down_timer ; t#uint8_t link_down_timeout ; t#uint32_t timer_active ; s#timer_list timer ; t#uint8_t node_name [ 8 ] ; t#uint8_t port_name [ 8 ] ; t#uint8_t fabric_node_name [ 8 ] ; t#uint16_t fcoe_vlan_id ; t#uint16_t fcoe_fcf_idx ; t#uint8_t fcoe_vn_port_mac [ 6 ] ; t#uint32_t vp_abort_cnt ; s#fc_vport * fc_vport ; t#uint16_t vp_idx ; unsigned long vp_flags ; t#atomic_t vp_state ; t#uint16_t vp_err_state ; t#uint16_t vp_prev_err_state ; s#qla_hw_data * hw ; s#req_que * req ; int fw_heartbeat_counter ; int seconds_since_last_heartbeat ; s#fc_host_statistics fc_host_stat ; s#qla_statistics qla_stats ; s#bidi_statistics bidi_stats ; t#atomic_t vref_count ; s#qla8044_reset_template reset_tmplt ; } 
s#qla_tgt_sess struct qla_tgt_sess { t#uint16_t loop_id ; t#port_id_t s_id ; unsigned int conf_compl_supported : 1 ; unsigned int deleted : 1 ; unsigned int local : 1 ; s#se_session * se_sess ; s#scsi_qla_host * vha ; s#qla_tgt * tgt ; s#list_head sess_list_entry ; unsigned long expires ; s#list_head del_list_entry ; t#uint8_t port_name [ 8 ] ; s#work_struct free_work ; } 
qlt_unreg_sess extern void qlt_unreg_sess ( s#qla_tgt_sess * ) 
qlt_stop_phase1 extern void qlt_stop_phase1 ( s#qla_tgt * ) 
qlt_stop_phase2 extern void qlt_stop_phase2 ( s#qla_tgt * ) 
qlt_free_mcmd extern void qlt_free_mcmd ( s#qla_tgt_mgmt_cmd * ) 
qlt_xmit_tm_rsp extern void qlt_xmit_tm_rsp ( s#qla_tgt_mgmt_cmd * ) 
qlt_xmit_response extern int qlt_xmit_response ( s#qla_tgt_cmd * , int , t#uint8_t ) 
qlt_rdy_to_xfer extern int qlt_rdy_to_xfer ( s#qla_tgt_cmd * ) 
qlt_free_cmd extern void qlt_free_cmd ( s#qla_tgt_cmd * ) 
qlt_lport_register extern int qlt_lport_register ( s#qla_tgt_func_tmpl * , t#u64 , int ( * ) ( s#scsi_qla_host * ) , void * ) 
qlt_lport_deregister extern void qlt_lport_deregister ( s#scsi_qla_host * ) 
qlt_enable_vha extern void qlt_enable_vha ( s#scsi_qla_host * ) 

/* drivers/scsi/raid_class.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##device_private
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#raid_template struct raid_template { s#transport_container raid_attrs ; } 
raid_component_add int raid_component_add ( s#raid_template * , s#device * , s#device * ) 
s#raid_function_template struct raid_function_template { void * cookie ; int ( * is_raid ) ( s#device * ) ; void ( * get_resync ) ( s#device * ) ; void ( * get_state ) ( s#device * ) ; } 
raid_class_attach s#raid_template * raid_class_attach ( s#raid_function_template * ) 
raid_class_release void raid_class_release ( s#raid_template * ) 

/* drivers/scsi/scsi.o */
scsi_logging_level extern unsigned int scsi_logging_level 
s#async_domain struct async_domain { s#list_head pending ; unsigned registered : 1 ; } 
scsi_sd_probe_domain extern s#async_domain scsi_sd_probe_domain 
scsi_device_type extern const char * scsi_device_type ( unsigned ) 
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##kiocb
s##iovec
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##proc_dir_entry
s##scsi_transport_template
__scsi_get_command extern s#scsi_cmnd * __scsi_get_command ( s#Scsi_Host * , t#gfp_t ) 
scsi_get_command extern s#scsi_cmnd * scsi_get_command ( s#scsi_device * , t#gfp_t ) 
__scsi_put_command extern void __scsi_put_command ( s#Scsi_Host * , s#scsi_cmnd * ) 
scsi_put_command extern void scsi_put_command ( s#scsi_cmnd * ) 
scsi_allocate_command s#scsi_cmnd * scsi_allocate_command ( t#gfp_t ) 
scsi_free_command void scsi_free_command ( t#gfp_t , s#scsi_cmnd * ) 
scsi_cmd_get_serial extern void scsi_cmd_get_serial ( s#Scsi_Host * , s#scsi_cmnd * ) 
scsi_finish_command extern void scsi_finish_command ( s#scsi_cmnd * ) 
scsi_adjust_queue_depth extern void scsi_adjust_queue_depth ( s#scsi_device * , int , int ) 
scsi_track_queue_full extern int scsi_track_queue_full ( s#scsi_device * , int ) 
scsi_get_vpd_page extern int scsi_get_vpd_page ( s#scsi_device * , t#u8 , unsigned char * , int ) 
scsi_report_opcode extern int scsi_report_opcode ( s#scsi_device * , unsigned char * , unsigned int , unsigned char ) 
scsi_device_get extern int scsi_device_get ( s#scsi_device * ) 
scsi_device_put extern void scsi_device_put ( s#scsi_device * ) 
__scsi_iterate_devices extern s#scsi_device * __scsi_iterate_devices ( s#Scsi_Host * , s#scsi_device * ) 
starget_for_each_device extern void starget_for_each_device ( s#scsi_target * , void * , void ( * ) ( s#scsi_device * , void * ) ) 
__starget_for_each_device extern void __starget_for_each_device ( s#scsi_target * , void * , void ( * ) ( s#scsi_device * , void * ) ) 
__scsi_device_lookup_by_target extern s#scsi_device * __scsi_device_lookup_by_target ( s#scsi_target * , t#uint ) 
scsi_device_lookup_by_target extern s#scsi_device * scsi_device_lookup_by_target ( s#scsi_target * , t#uint ) 
__scsi_device_lookup extern s#scsi_device * __scsi_device_lookup ( s#Scsi_Host * , t#uint , t#uint , t#uint ) 
scsi_device_lookup extern s#scsi_device * scsi_device_lookup ( s#Scsi_Host * , t#uint , t#uint , t#uint ) 

/* drivers/scsi/scsi_devinfo.o */
scsi_dev_info_list_add_keyed extern int scsi_dev_info_list_add_keyed ( int , char * , char * , char * , int , int ) 
scsi_dev_info_list_del_keyed extern int scsi_dev_info_list_del_keyed ( char * , char * , int ) 
s##Scsi_Host
s##blk_mq_ctx
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##scsi_cmnd
s##scsi_sense_hdr
scsi_get_device_flags_keyed extern int scsi_get_device_flags_keyed ( s#scsi_device * , const unsigned char * , const unsigned char * , int ) 
scsi_dev_info_add_list extern int scsi_dev_info_add_list ( int , const char * ) 
scsi_dev_info_remove_list extern int scsi_dev_info_remove_list ( int ) 

/* drivers/scsi/scsi_error.o */
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##proc_dir_entry
scsi_schedule_eh void scsi_schedule_eh ( s#Scsi_Host * ) 
scsi_block_when_processing_errors extern int scsi_block_when_processing_errors ( s#scsi_device * ) 
s#scsi_eh_save struct scsi_eh_save { int result ; e#dma_data_direction data_direction ; unsigned underflow ; unsigned char cmd_len ; unsigned char prot_op ; unsigned char * cmnd ; s#scsi_data_buffer sdb ; s#request * next_rq ; unsigned char eh_cmnd [ 16 ] ; s#scatterlist sense_sgl ; } 
scsi_eh_prep_cmnd extern void scsi_eh_prep_cmnd ( s#scsi_cmnd * , s#scsi_eh_save * , unsigned char * , int , unsigned ) 
scsi_eh_restore_cmnd extern void scsi_eh_restore_cmnd ( s#scsi_cmnd * , s#scsi_eh_save * ) 
scsi_eh_finish_cmd extern void scsi_eh_finish_cmd ( s#scsi_cmnd * , s#list_head * ) 
scsi_eh_get_sense int scsi_eh_get_sense ( s#list_head * , s#list_head * ) 
scsi_eh_ready_devs void scsi_eh_ready_devs ( s#Scsi_Host * , s#list_head * , s#list_head * ) 
scsi_eh_flush_done_q extern void scsi_eh_flush_done_q ( s#list_head * ) 
scsi_report_bus_reset extern void scsi_report_bus_reset ( s#Scsi_Host * , int ) 
scsi_report_device_reset extern void scsi_report_device_reset ( s#Scsi_Host * , int , int ) 
scsi_reset_provider extern int scsi_reset_provider ( s#scsi_device * , int ) 
scsi_normalize_sense extern int scsi_normalize_sense ( const t#u8 * , int , s#scsi_sense_hdr * ) 
scsi_command_normalize_sense extern int scsi_command_normalize_sense ( s#scsi_cmnd * , s#scsi_sense_hdr * ) 
scsi_sense_desc_find extern const t#u8 * scsi_sense_desc_find ( const t#u8 * , int , int ) 
scsi_get_sense_info_fld extern int scsi_get_sense_info_fld ( const t#u8 * , int , t#u64 * ) 
scsi_build_sense_buffer extern void scsi_build_sense_buffer ( int , t#u8 * , t#u8 , t#u8 , t#u8 ) 

/* drivers/scsi/scsi_ioctl.o */
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##proc_dir_entry
s##scsi_transport_template
scsi_set_medium_removal extern int scsi_set_medium_removal ( s#scsi_device * , char ) 
scsi_ioctl extern int scsi_ioctl ( s#scsi_device * , int , void * ) 
scsi_nonblockable_ioctl extern int scsi_nonblockable_ioctl ( s#scsi_device * , int , void * , int ) 

/* drivers/scsi/scsi_lib.o */
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##sock
s##sysfs_dirent
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##scsi_transport_template
scsi_execute extern int scsi_execute ( s#scsi_device * , const unsigned char * , int , void * , unsigned , unsigned char * , int , int , t#u64 , int * ) 
scsi_execute_req_flags extern int scsi_execute_req_flags ( s#scsi_device * , const unsigned char * , int , void * , unsigned , s#scsi_sense_hdr * , int , int , int * , t#u64 ) 
scsi_release_buffers extern void scsi_release_buffers ( s#scsi_cmnd * ) 
scsi_init_io extern int scsi_init_io ( s#scsi_cmnd * , t#gfp_t ) 
scsi_setup_blk_pc_cmnd int scsi_setup_blk_pc_cmnd ( s#scsi_device * , s#request * ) 
scsi_setup_fs_cmnd int scsi_setup_fs_cmnd ( s#scsi_device * , s#request * ) 
scsi_prep_state_check int scsi_prep_state_check ( s#scsi_device * , s#request * ) 
scsi_prep_return int scsi_prep_return ( s#request_queue * , s#request * , int ) 
scsi_prep_fn int scsi_prep_fn ( s#request_queue * , s#request * ) 
scsi_device_from_queue extern s#scsi_device * scsi_device_from_queue ( s#request_queue * ) 
scsi_calculate_bounce_limit extern t#u64 scsi_calculate_bounce_limit ( s#Scsi_Host * ) 
__scsi_alloc_queue extern s#request_queue * __scsi_alloc_queue ( s#Scsi_Host * , void ( * ) ( s#request_queue * ) ) 
scsi_block_requests extern void scsi_block_requests ( s#Scsi_Host * ) 
scsi_unblock_requests extern void scsi_unblock_requests ( s#Scsi_Host * ) 
s#scsi_mode_data struct scsi_mode_data { t#__u32 length ; t#__u16 block_descriptor_length ; t#__u8 medium_type ; t#__u8 device_specific ; t#__u8 header_length ; t#__u8 longlba : 1 ; } 
scsi_mode_select extern int scsi_mode_select ( s#scsi_device * , int , int , int , unsigned char * , int , int , int , s#scsi_mode_data * , s#scsi_sense_hdr * ) 
scsi_mode_sense extern int scsi_mode_sense ( s#scsi_device * , int , int , unsigned char * , int , int , int , s#scsi_mode_data * , s#scsi_sense_hdr * ) 
scsi_test_unit_ready extern int scsi_test_unit_ready ( s#scsi_device * , int , int , s#scsi_sense_hdr * ) 
scsi_device_set_state extern int scsi_device_set_state ( s#scsi_device * , e#scsi_device_state ) 
E#SDEV_EVT_MEDIA_CHANGE 1 
e#scsi_device_event enum scsi_device_event { SDEV_EVT_MEDIA_CHANGE = 1 , SDEV_EVT_INQUIRY_CHANGE_REPORTED , SDEV_EVT_CAPACITY_CHANGE_REPORTED , SDEV_EVT_SOFT_THRESHOLD_REACHED_REPORTED , SDEV_EVT_MODE_PARAMETER_CHANGE_REPORTED , SDEV_EVT_LUN_CHANGE_REPORTED , SDEV_EVT_POWER_ON_RESET_OCCURRED , SDEV_EVT_FIRST = E#SDEV_EVT_MEDIA_CHANGE , SDEV_EVT_LAST = E#SDEV_EVT_POWER_ON_RESET_OCCURRED , SDEV_EVT_MAXBITS = E#SDEV_EVT_LAST + 1 } 
s#scsi_event struct scsi_event { e#scsi_device_event evt_type ; s#list_head node ; } 
sdev_evt_send extern void sdev_evt_send ( s#scsi_device * , s#scsi_event * ) 
sdev_evt_alloc extern s#scsi_event * sdev_evt_alloc ( e#scsi_device_event , t#gfp_t ) 
sdev_evt_send_simple extern void sdev_evt_send_simple ( s#scsi_device * , e#scsi_device_event , t#gfp_t ) 
scsi_device_quiesce extern int scsi_device_quiesce ( s#scsi_device * ) 
scsi_device_resume extern void scsi_device_resume ( s#scsi_device * ) 
scsi_target_quiesce extern void scsi_target_quiesce ( s#scsi_target * ) 
scsi_target_resume extern void scsi_target_resume ( s#scsi_target * ) 
scsi_internal_device_block extern int scsi_internal_device_block ( s#scsi_device * ) 
scsi_internal_device_unblock extern int scsi_internal_device_unblock ( s#scsi_device * , e#scsi_device_state ) 
scsi_target_block extern void scsi_target_block ( s#device * ) 
scsi_target_unblock extern void scsi_target_unblock ( s#device * , e#scsi_device_state ) 
scsi_kmap_atomic_sg extern void * scsi_kmap_atomic_sg ( s#scatterlist * , int , t#size_t * , t#size_t * ) 
scsi_kunmap_atomic_sg extern void scsi_kunmap_atomic_sg ( void * ) 
sdev_disable_disk_events extern void sdev_disable_disk_events ( s#scsi_device * ) 
sdev_enable_disk_events extern void sdev_enable_disk_events ( s#scsi_device * ) 

/* drivers/scsi/scsi_lib_dma.o */
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##sock
s##sysfs_dirent
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##proc_dir_entry
s##scsi_transport_template
s##scsi_sense_hdr
scsi_dma_map extern int scsi_dma_map ( s#scsi_cmnd * ) 
scsi_dma_unmap extern void scsi_dma_unmap ( s#scsi_cmnd * ) 

/* drivers/scsi/scsi_netlink.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##device_private
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
scsi_nl_sock extern s#sock * scsi_nl_sock 

/* drivers/scsi/scsi_pm.o */
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##sock
s##sysfs_dirent
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##scsi_cmnd
s##proc_dir_entry
s##scsi_transport_template
s##scsi_sense_hdr
scsi_autopm_get_device extern int scsi_autopm_get_device ( s#scsi_device * ) 
scsi_autopm_put_device extern void scsi_autopm_put_device ( s#scsi_device * ) 

/* drivers/scsi/scsi_scan.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
scsi_is_target_device extern int scsi_is_target_device ( const s#device * ) 
scsilun_to_int extern int scsilun_to_int ( s#scsi_lun * ) 
int_to_scsilun extern void int_to_scsilun ( unsigned int , s#scsi_lun * ) 
s##scsi_host_cmd_pool
s##proc_dir_entry
__scsi_add_device extern s#scsi_device * __scsi_add_device ( s#Scsi_Host * , t#uint , t#uint , t#uint , void * ) 
scsi_add_device extern int scsi_add_device ( s#Scsi_Host * , t#uint , t#uint , t#uint ) 
scsi_rescan_device extern void scsi_rescan_device ( s#device * ) 
scsi_scan_target extern void scsi_scan_target ( s#device * , unsigned int , unsigned int , unsigned int , int ) 
scsi_scan_host extern void scsi_scan_host ( s#Scsi_Host * ) 
scsi_get_host_dev extern s#scsi_device * scsi_get_host_dev ( s#Scsi_Host * ) 
scsi_free_host_dev extern void scsi_free_host_dev ( s#scsi_device * ) 

/* drivers/scsi/scsi_sysfs.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##subsys_private
s##iommu_group
s##iommu_ops
scsi_bus_type extern s#bus_type scsi_bus_type 
s##scsi_host_cmd_pool
s##proc_dir_entry
s##scsi_sense_hdr
scsi_remove_device extern void scsi_remove_device ( s#scsi_device * ) 
scsi_remove_target extern void scsi_remove_target ( s#device * ) 
scsi_register_driver extern int scsi_register_driver ( s#device_driver * ) 
scsi_register_interface extern int scsi_register_interface ( s#class_interface * ) 
scsi_is_sdev_device extern int scsi_is_sdev_device ( const s#device * ) 

/* drivers/scsi/scsi_tgt_lib.o */
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##proc_dir_entry
s##scsi_sense_hdr
scsi_host_get_command extern s#scsi_cmnd * scsi_host_get_command ( s#Scsi_Host * , e#dma_data_direction , t#gfp_t ) 
scsi_host_put_command extern void scsi_host_put_command ( s#Scsi_Host * , s#scsi_cmnd * ) 
scsi_tgt_alloc_queue extern int scsi_tgt_alloc_queue ( s#Scsi_Host * ) 
scsi_tgt_free_queue extern void scsi_tgt_free_queue ( s#Scsi_Host * ) 
scsi_tgt_cmd_to_host extern s#Scsi_Host * scsi_tgt_cmd_to_host ( s#scsi_cmnd * ) 
scsi_tgt_queue_command extern int scsi_tgt_queue_command ( s#scsi_cmnd * , t#u64 , s#scsi_lun * , t#u64 ) 
scsi_tgt_tsk_mgmt_request extern int scsi_tgt_tsk_mgmt_request ( s#Scsi_Host * , t#u64 , int , t#u64 , s#scsi_lun * , void * ) 
scsi_tgt_it_nexus_create extern int scsi_tgt_it_nexus_create ( s#Scsi_Host * , t#u64 , char * ) 
scsi_tgt_it_nexus_destroy extern int scsi_tgt_it_nexus_destroy ( s#Scsi_Host * , t#u64 ) 

/* drivers/scsi/scsi_transport_fc.o */
fc_get_event_number t#u32 fc_get_event_number ( void ) 
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##scsi_sense_hdr
s##proc_dir_entry
e#fc_host_event_code enum fc_host_event_code { FCH_EVT_LIP = 0x1 , FCH_EVT_LINKUP = 0x2 , FCH_EVT_LINKDOWN = 0x3 , FCH_EVT_LIPRESET = 0x4 , FCH_EVT_RSCN = 0x5 , FCH_EVT_ADAPTER_CHANGE = 0x103 , FCH_EVT_PORT_UNKNOWN = 0x200 , FCH_EVT_PORT_OFFLINE = 0x201 , FCH_EVT_PORT_ONLINE = 0x202 , FCH_EVT_PORT_FABRIC = 0x204 , FCH_EVT_LINK_UNKNOWN = 0x500 , FCH_EVT_VENDOR_UNIQUE = 0xffff , } 
fc_host_post_event void fc_host_post_event ( s#Scsi_Host * , t#u32 , e#fc_host_event_code , t#u32 ) 
fc_host_post_vendor_event void fc_host_post_vendor_event ( s#Scsi_Host * , t#u32 , t#u32 , char * , t#u64 ) 
scsi_is_fc_rport int scsi_is_fc_rport ( const s#device * ) 
scsi_is_fc_vport int scsi_is_fc_vport ( const s#device * ) 
s#fc_function_template struct fc_function_template { void ( * get_rport_dev_loss_tmo ) ( s#fc_rport * ) ; void ( * set_rport_dev_loss_tmo ) ( s#fc_rport * , t#u32 ) ; void ( * get_starget_node_name ) ( s#scsi_target * ) ; void ( * get_starget_port_name ) ( s#scsi_target * ) ; void ( * get_starget_port_id ) ( s#scsi_target * ) ; void ( * get_host_port_id ) ( s#Scsi_Host * ) ; void ( * get_host_port_type ) ( s#Scsi_Host * ) ; void ( * get_host_port_state ) ( s#Scsi_Host * ) ; void ( * get_host_active_fc4s ) ( s#Scsi_Host * ) ; void ( * get_host_speed ) ( s#Scsi_Host * ) ; void ( * get_host_fabric_name ) ( s#Scsi_Host * ) ; void ( * get_host_symbolic_name ) ( s#Scsi_Host * ) ; void ( * set_host_system_hostname ) ( s#Scsi_Host * ) ; s#fc_host_statistics * ( * get_fc_host_stats ) ( s#Scsi_Host * ) ; void ( * reset_fc_host_stats ) ( s#Scsi_Host * ) ; int ( * issue_fc_host_lip ) ( s#Scsi_Host * ) ; void ( * dev_loss_tmo_callbk ) ( s#fc_rport * ) ; void ( * terminate_rport_io ) ( s#fc_rport * ) ; void ( * set_vport_symbolic_name ) ( s#fc_vport * ) ; int ( * vport_create ) ( s#fc_vport * , t#bool ) ; int ( * vport_disable ) ( s#fc_vport * , t#bool ) ; int ( * vport_delete ) ( s#fc_vport * ) ; int ( * tsk_mgmt_response ) ( s#Scsi_Host * , t#u64 , t#u64 , int ) ; int ( * it_nexus_response ) ( s#Scsi_Host * , t#u64 , int ) ; int ( * bsg_request ) ( s#fc_bsg_job * ) ; int ( * bsg_timeout ) ( s#fc_bsg_job * ) ; t#u32 dd_fcrport_size ; t#u32 dd_fcvport_size ; t#u32 dd_bsg_size ; unsigned long show_rport_maxframe_size : 1 ; unsigned long show_rport_supported_classes : 1 ; unsigned long show_rport_dev_loss_tmo : 1 ; unsigned long show_starget_node_name : 1 ; unsigned long show_starget_port_name : 1 ; unsigned long show_starget_port_id : 1 ; unsigned long show_host_node_name : 1 ; unsigned long show_host_port_name : 1 ; unsigned long show_host_permanent_port_name : 1 ; unsigned long show_host_supported_classes : 1 ; unsigned long show_host_supported_fc4s : 1 ; unsigned long show_host_supported_speeds : 1 ; unsigned long show_host_maxframe_size : 1 ; unsigned long show_host_serial_number : 1 ; unsigned long show_host_manufacturer : 1 ; unsigned long show_host_model : 1 ; unsigned long show_host_model_description : 1 ; unsigned long show_host_hardware_version : 1 ; unsigned long show_host_driver_version : 1 ; unsigned long show_host_firmware_version : 1 ; unsigned long show_host_optionrom_version : 1 ; unsigned long show_host_port_id : 1 ; unsigned long show_host_port_type : 1 ; unsigned long show_host_port_state : 1 ; unsigned long show_host_active_fc4s : 1 ; unsigned long show_host_speed : 1 ; unsigned long show_host_fabric_name : 1 ; unsigned long show_host_symbolic_name : 1 ; unsigned long show_host_system_hostname : 1 ; unsigned long disable_target_scan : 1 ; } 
fc_attach_transport s#scsi_transport_template * fc_attach_transport ( s#fc_function_template * ) 
fc_release_transport void fc_release_transport ( s#scsi_transport_template * ) 
fc_remove_host void fc_remove_host ( s#Scsi_Host * ) 
fc_remote_port_add s#fc_rport * fc_remote_port_add ( s#Scsi_Host * , int , s#fc_rport_identifiers * ) 
fc_remote_port_delete void fc_remote_port_delete ( s#fc_rport * ) 
fc_remote_port_rolechg void fc_remote_port_rolechg ( s#fc_rport * , t#u32 ) 
fc_block_scsi_eh int fc_block_scsi_eh ( s#scsi_cmnd * ) 
s#fc_vport_identifiers struct fc_vport_identifiers { t#u64 node_name ; t#u64 port_name ; t#u32 roles ; t#bool disable ; e#fc_port_type vport_type ; char symbolic_name [ 64 ] ; } 
fc_vport_create s#fc_vport * fc_vport_create ( s#Scsi_Host * , int , s#fc_vport_identifiers * ) 
fc_vport_terminate int fc_vport_terminate ( s#fc_vport * ) 

/* drivers/scsi/scsi_transport_iscsi.o */
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s##iscsi_task
s##iscsi_conn
iscsi_create_endpoint extern s#iscsi_endpoint * iscsi_create_endpoint ( int ) 
iscsi_destroy_endpoint extern void iscsi_destroy_endpoint ( s#iscsi_endpoint * ) 
iscsi_lookup_endpoint extern s#iscsi_endpoint * iscsi_lookup_endpoint ( t#u64 ) 
e#iscsi_ipaddress_state enum iscsi_ipaddress_state { ISCSI_IPDDRESS_STATE_UNCONFIGURED , ISCSI_IPDDRESS_STATE_ACQUIRING , ISCSI_IPDDRESS_STATE_TENTATIVE , ISCSI_IPDDRESS_STATE_VALID , ISCSI_IPDDRESS_STATE_DISABLING , ISCSI_IPDDRESS_STATE_INVALID , ISCSI_IPDDRESS_STATE_DEPRECATED , } 
iscsi_get_ipaddress_state_name extern char * iscsi_get_ipaddress_state_name ( e#iscsi_ipaddress_state ) 
e#iscsi_router_state enum iscsi_router_state { ISCSI_ROUTER_STATE_UNKNOWN , ISCSI_ROUTER_STATE_ADVERTISED , ISCSI_ROUTER_STATE_MANUAL , ISCSI_ROUTER_STATE_STALE , } 
iscsi_get_router_state_name extern char * iscsi_get_router_state_name ( e#iscsi_router_state ) 
iscsi_create_iface extern s#iscsi_iface * iscsi_create_iface ( s#Scsi_Host * , s#iscsi_transport * , t#uint32_t , t#uint32_t , int ) 
iscsi_destroy_iface extern void iscsi_destroy_iface ( s#iscsi_iface * ) 
iscsi_flashnode_bus_match extern int iscsi_flashnode_bus_match ( s#device * , s#device_driver * ) 
iscsi_create_flashnode_sess extern s#iscsi_bus_flash_session * iscsi_create_flashnode_sess ( s#Scsi_Host * , int , s#iscsi_transport * , int ) 
iscsi_create_flashnode_conn extern s#iscsi_bus_flash_conn * iscsi_create_flashnode_conn ( s#Scsi_Host * , s#iscsi_bus_flash_session * , s#iscsi_transport * , int ) 
iscsi_is_flashnode_conn_dev int iscsi_is_flashnode_conn_dev ( s#device * , void * ) 
iscsi_find_flashnode_sess extern s#device * iscsi_find_flashnode_sess ( s#Scsi_Host * , void * , int ( * ) ( s#device * , void * ) ) 
iscsi_find_flashnode_conn extern s#device * iscsi_find_flashnode_conn ( s#iscsi_bus_flash_session * ) 
iscsi_destroy_flashnode_sess extern void iscsi_destroy_flashnode_sess ( s#iscsi_bus_flash_session * ) 
iscsi_destroy_all_flashnode extern void iscsi_destroy_all_flashnode ( s#Scsi_Host * ) 
iscsi_session_chkready extern int iscsi_session_chkready ( s#iscsi_cls_session * ) 
iscsi_is_session_online extern int iscsi_is_session_online ( s#iscsi_cls_session * ) 
iscsi_is_session_dev extern int iscsi_is_session_dev ( const s#device * ) 
iscsi_host_for_each_session extern void iscsi_host_for_each_session ( s#Scsi_Host * , void ( * ) ( s#iscsi_cls_session * ) ) 
iscsi_scan_finished extern int iscsi_scan_finished ( s#Scsi_Host * , unsigned long ) 
iscsi_block_scsi_eh extern int iscsi_block_scsi_eh ( s#scsi_cmnd * ) 
iscsi_unblock_session extern void iscsi_unblock_session ( s#iscsi_cls_session * ) 
iscsi_block_session extern void iscsi_block_session ( s#iscsi_cls_session * ) 
iscsi_alloc_session extern s#iscsi_cls_session * iscsi_alloc_session ( s#Scsi_Host * , s#iscsi_transport * , int ) 
iscsi_add_session extern int iscsi_add_session ( s#iscsi_cls_session * , unsigned int ) 
iscsi_create_session extern s#iscsi_cls_session * iscsi_create_session ( s#Scsi_Host * , s#iscsi_transport * , int , unsigned int ) 
iscsi_remove_session extern void iscsi_remove_session ( s#iscsi_cls_session * ) 
iscsi_free_session extern void iscsi_free_session ( s#iscsi_cls_session * ) 
iscsi_destroy_session extern int iscsi_destroy_session ( s#iscsi_cls_session * ) 
iscsi_create_conn extern s#iscsi_cls_conn * iscsi_create_conn ( s#iscsi_cls_session * , int , t#uint32_t ) 
iscsi_destroy_conn extern int iscsi_destroy_conn ( s#iscsi_cls_conn * ) 
iscsi_recv_pdu extern int iscsi_recv_pdu ( s#iscsi_cls_conn * , s#iscsi_hdr * , char * , t#uint32_t ) 
iscsi_offload_mesg extern int iscsi_offload_mesg ( s#Scsi_Host * , s#iscsi_transport * , t#uint32_t , char * , t#uint16_t ) 
iscsi_conn_error_event extern void iscsi_conn_error_event ( s#iscsi_cls_conn * , e#iscsi_err ) 
e#iscsi_conn_state enum iscsi_conn_state { ISCSI_CONN_STATE_FREE , ISCSI_CONN_STATE_XPT_WAIT , ISCSI_CONN_STATE_IN_LOGIN , ISCSI_CONN_STATE_LOGGED_IN , ISCSI_CONN_STATE_IN_LOGOUT , ISCSI_CONN_STATE_LOGOUT_REQUESTED , ISCSI_CONN_STATE_CLEANUP_WAIT , } 
iscsi_conn_login_event extern void iscsi_conn_login_event ( s#iscsi_cls_conn * , e#iscsi_conn_state ) 
e#iscsi_host_event_code enum iscsi_host_event_code { ISCSI_EVENT_LINKUP = 1 , ISCSI_EVENT_LINKDOWN , ISCSI_EVENT_MAX , } 
iscsi_post_host_event extern void iscsi_post_host_event ( t#uint32_t , s#iscsi_transport * , e#iscsi_host_event_code , t#uint32_t , t#uint8_t * ) 
iscsi_ping_comp_event extern void iscsi_ping_comp_event ( t#uint32_t , s#iscsi_transport * , t#uint32_t , t#uint32_t , t#uint32_t , t#uint8_t * ) 
e#iscsi_uevent_e enum iscsi_uevent_e { ISCSI_UEVENT_UNKNOWN = 0 , ISCSI_UEVENT_CREATE_SESSION = 10 + 1 , ISCSI_UEVENT_DESTROY_SESSION = 10 + 2 , ISCSI_UEVENT_CREATE_CONN = 10 + 3 , ISCSI_UEVENT_DESTROY_CONN = 10 + 4 , ISCSI_UEVENT_BIND_CONN = 10 + 5 , ISCSI_UEVENT_SET_PARAM = 10 + 6 , ISCSI_UEVENT_START_CONN = 10 + 7 , ISCSI_UEVENT_STOP_CONN = 10 + 8 , ISCSI_UEVENT_SEND_PDU = 10 + 9 , ISCSI_UEVENT_GET_STATS = 10 + 10 , ISCSI_UEVENT_GET_PARAM = 10 + 11 , ISCSI_UEVENT_TRANSPORT_EP_CONNECT = 10 + 12 , ISCSI_UEVENT_TRANSPORT_EP_POLL = 10 + 13 , ISCSI_UEVENT_TRANSPORT_EP_DISCONNECT = 10 + 14 , ISCSI_UEVENT_TGT_DSCVR = 10 + 15 , ISCSI_UEVENT_SET_HOST_PARAM = 10 + 16 , ISCSI_UEVENT_UNBIND_SESSION = 10 + 17 , ISCSI_UEVENT_CREATE_BOUND_SESSION = 10 + 18 , ISCSI_UEVENT_TRANSPORT_EP_CONNECT_THROUGH_HOST = 10 + 19 , ISCSI_UEVENT_PATH_UPDATE = 10 + 20 , ISCSI_UEVENT_SET_IFACE_PARAMS = 10 + 21 , ISCSI_UEVENT_PING = 10 + 22 , ISCSI_UEVENT_GET_CHAP = 10 + 23 , ISCSI_UEVENT_DELETE_CHAP = 10 + 24 , ISCSI_UEVENT_SET_FLASHNODE_PARAMS = 10 + 25 , ISCSI_UEVENT_NEW_FLASHNODE = 10 + 26 , ISCSI_UEVENT_DEL_FLASHNODE = 10 + 27 , ISCSI_UEVENT_LOGIN_FLASHNODE = 10 + 28 , ISCSI_UEVENT_LOGOUT_FLASHNODE = 10 + 29 , ISCSI_UEVENT_LOGOUT_FLASHNODE_SID = 10 + 30 , ISCSI_UEVENT_SET_CHAP = 10 + 31 , ISCSI_UEVENT_GET_HOST_STATS = 10 + 32 , ISCSI_KEVENT_RECV_PDU = 100 + 1 , ISCSI_KEVENT_CONN_ERROR = 100 + 2 , ISCSI_KEVENT_IF_ERROR = 100 + 3 , ISCSI_KEVENT_DESTROY_SESSION = 100 + 4 , ISCSI_KEVENT_UNBIND_SESSION = 100 + 5 , ISCSI_KEVENT_CREATE_SESSION = 100 + 6 , ISCSI_KEVENT_PATH_REQ = 100 + 7 , ISCSI_KEVENT_IF_DOWN = 100 + 8 , ISCSI_KEVENT_CONN_LOGIN_STATE = 100 + 9 , ISCSI_KEVENT_HOST_EVENT = 100 + 10 , ISCSI_KEVENT_PING_COMP = 100 + 11 , } 
iscsi_session_event extern int iscsi_session_event ( s#iscsi_cls_session * , e#iscsi_uevent_e ) 
iscsi_get_discovery_parent_name extern char * iscsi_get_discovery_parent_name ( int ) 
iscsi_get_port_speed_name extern char * iscsi_get_port_speed_name ( s#Scsi_Host * ) 
iscsi_get_port_state_name extern char * iscsi_get_port_state_name ( s#Scsi_Host * ) 
iscsi_register_transport extern s#scsi_transport_template * iscsi_register_transport ( s#iscsi_transport * ) 
iscsi_unregister_transport extern int iscsi_unregister_transport ( s#iscsi_transport * ) 

/* drivers/scsi/scsi_transport_sas.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
sas_remove_children void sas_remove_children ( s#device * ) 
s##scsi_host_cmd_pool
s##scsi_cmnd
s##scsi_sense_hdr
s##proc_dir_entry
sas_remove_host extern void sas_remove_host ( s#Scsi_Host * ) 
sas_tlr_supported unsigned int sas_tlr_supported ( s#scsi_device * ) 
sas_disable_tlr void sas_disable_tlr ( s#scsi_device * ) 
sas_enable_tlr void sas_enable_tlr ( s#scsi_device * ) 
sas_is_tlr_enabled unsigned int sas_is_tlr_enabled ( s#scsi_device * ) 
sas_phy_alloc extern s#sas_phy * sas_phy_alloc ( s#device * , int ) 
sas_phy_add extern int sas_phy_add ( s#sas_phy * ) 
sas_phy_free extern void sas_phy_free ( s#sas_phy * ) 
sas_phy_delete extern void sas_phy_delete ( s#sas_phy * ) 
scsi_is_sas_phy extern int scsi_is_sas_phy ( const s#device * ) 
sas_port_alloc s#sas_port * sas_port_alloc ( s#device * , int ) 
sas_port_alloc_num s#sas_port * sas_port_alloc_num ( s#device * ) 
sas_port_add int sas_port_add ( s#sas_port * ) 
sas_port_free void sas_port_free ( s#sas_port * ) 
sas_port_delete void sas_port_delete ( s#sas_port * ) 
scsi_is_sas_port int scsi_is_sas_port ( const s#device * ) 
sas_port_get_phy s#sas_phy * sas_port_get_phy ( s#sas_port * ) 
sas_port_add_phy void sas_port_add_phy ( s#sas_port * , s#sas_phy * ) 
sas_port_delete_phy void sas_port_delete_phy ( s#sas_port * , s#sas_phy * ) 
sas_port_mark_backlink void sas_port_mark_backlink ( s#sas_port * ) 
sas_read_port_mode_page int sas_read_port_mode_page ( s#scsi_device * ) 
sas_end_device_alloc extern s#sas_rphy * sas_end_device_alloc ( s#sas_port * ) 
sas_expander_alloc extern s#sas_rphy * sas_expander_alloc ( s#sas_port * , e#sas_device_type ) 
sas_rphy_add extern int sas_rphy_add ( s#sas_rphy * ) 
sas_rphy_free void sas_rphy_free ( s#sas_rphy * ) 
sas_rphy_delete extern void sas_rphy_delete ( s#sas_rphy * ) 
sas_rphy_unlink extern void sas_rphy_unlink ( s#sas_rphy * ) 
sas_rphy_remove extern void sas_rphy_remove ( s#sas_rphy * ) 
scsi_is_sas_rphy extern int scsi_is_sas_rphy ( const s#device * ) 
s#sas_phy_linkrates struct sas_phy_linkrates { e#sas_linkrate maximum_linkrate ; e#sas_linkrate minimum_linkrate ; } 
s#sas_function_template struct sas_function_template { int ( * get_linkerrors ) ( s#sas_phy * ) ; int ( * get_enclosure_identifier ) ( s#sas_rphy * , t#u64 * ) ; int ( * get_bay_identifier ) ( s#sas_rphy * ) ; int ( * phy_reset ) ( s#sas_phy * , int ) ; int ( * phy_enable ) ( s#sas_phy * , int ) ; int ( * phy_setup ) ( s#sas_phy * ) ; void ( * phy_release ) ( s#sas_phy * ) ; int ( * set_phy_speed ) ( s#sas_phy * , s#sas_phy_linkrates * ) ; int ( * smp_handler ) ( s#Scsi_Host * , s#sas_rphy * , s#request * ) ; } 
sas_attach_transport extern s#scsi_transport_template * sas_attach_transport ( s#sas_function_template * ) 
sas_release_transport extern void sas_release_transport ( s#scsi_transport_template * ) 

/* drivers/scsi/scsi_transport_spi.o */
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##proc_dir_entry
spi_dv_device void spi_dv_device ( s#scsi_device * ) 
spi_schedule_dv_device void spi_schedule_dv_device ( s#scsi_device * ) 
spi_display_xfer_agreement void spi_display_xfer_agreement ( s#scsi_target * ) 
spi_populate_width_msg int spi_populate_width_msg ( unsigned char * , int ) 
spi_populate_sync_msg int spi_populate_sync_msg ( unsigned char * , int , int ) 
spi_populate_ppr_msg int spi_populate_ppr_msg ( unsigned char * , int , int , int , int ) 
spi_print_msg int spi_print_msg ( const unsigned char * ) 
e#spi_signal_type enum spi_signal_type { SPI_SIGNAL_UNKNOWN = 1 , SPI_SIGNAL_SE , SPI_SIGNAL_LVD , SPI_SIGNAL_HVD , } 
s#spi_function_template struct spi_function_template { void ( * get_period ) ( s#scsi_target * ) ; void ( * set_period ) ( s#scsi_target * , int ) ; void ( * get_offset ) ( s#scsi_target * ) ; void ( * set_offset ) ( s#scsi_target * , int ) ; void ( * get_width ) ( s#scsi_target * ) ; void ( * set_width ) ( s#scsi_target * , int ) ; void ( * get_iu ) ( s#scsi_target * ) ; void ( * set_iu ) ( s#scsi_target * , int ) ; void ( * get_dt ) ( s#scsi_target * ) ; void ( * set_dt ) ( s#scsi_target * , int ) ; void ( * get_qas ) ( s#scsi_target * ) ; void ( * set_qas ) ( s#scsi_target * , int ) ; void ( * get_wr_flow ) ( s#scsi_target * ) ; void ( * set_wr_flow ) ( s#scsi_target * , int ) ; void ( * get_rd_strm ) ( s#scsi_target * ) ; void ( * set_rd_strm ) ( s#scsi_target * , int ) ; void ( * get_rti ) ( s#scsi_target * ) ; void ( * set_rti ) ( s#scsi_target * , int ) ; void ( * get_pcomp_en ) ( s#scsi_target * ) ; void ( * set_pcomp_en ) ( s#scsi_target * , int ) ; void ( * get_hold_mcs ) ( s#scsi_target * ) ; void ( * set_hold_mcs ) ( s#scsi_target * , int ) ; void ( * get_signalling ) ( s#Scsi_Host * ) ; void ( * set_signalling ) ( s#Scsi_Host * , e#spi_signal_type ) ; int ( * deny_binding ) ( s#scsi_target * ) ; unsigned long show_period : 1 ; unsigned long show_offset : 1 ; unsigned long show_width : 1 ; unsigned long show_iu : 1 ; unsigned long show_dt : 1 ; unsigned long show_qas : 1 ; unsigned long show_wr_flow : 1 ; unsigned long show_rd_strm : 1 ; unsigned long show_rti : 1 ; unsigned long show_pcomp_en : 1 ; unsigned long show_hold_mcs : 1 ; } 
spi_attach_transport s#scsi_transport_template * spi_attach_transport ( s#spi_function_template * ) 
spi_release_transport void spi_release_transport ( s#scsi_transport_template * ) 

/* drivers/scsi/scsi_transport_srp.o */
srp_tmo_valid extern int srp_tmo_valid ( int , int , int ) 
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
e#srp_rport_state enum srp_rport_state { SRP_RPORT_RUNNING , SRP_RPORT_BLOCKED , SRP_RPORT_FAIL_FAST , SRP_RPORT_LOST , } 
s#srp_rport struct srp_rport { s#device dev ; t#u8 port_id [ 16 ] ; t#u8 roles ; void * lld_data ; s#mutex mutex ; e#srp_rport_state state ; int reconnect_delay ; int failed_reconnects ; s#delayed_work reconnect_work ; int fast_io_fail_tmo ; int dev_loss_tmo ; s#delayed_work fast_io_fail_work ; s#delayed_work dev_loss_work ; } 
srp_start_tl_fail_timers extern void srp_start_tl_fail_timers ( s#srp_rport * ) 
srp_reconnect_rport extern int srp_reconnect_rport ( s#srp_rport * ) 
srp_rport_get extern void srp_rport_get ( s#srp_rport * ) 
srp_rport_put extern void srp_rport_put ( s#srp_rport * ) 
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s##proc_dir_entry
s#srp_rport_identifiers struct srp_rport_identifiers { t#u8 port_id [ 16 ] ; t#u8 roles ; } 
srp_rport_add extern s#srp_rport * srp_rport_add ( s#Scsi_Host * , s#srp_rport_identifiers * ) 
srp_rport_del extern void srp_rport_del ( s#srp_rport * ) 
srp_remove_host extern void srp_remove_host ( s#Scsi_Host * ) 
srp_stop_rport_timers extern void srp_stop_rport_timers ( s#srp_rport * ) 
s#srp_function_template struct srp_function_template { t#bool has_rport_state ; t#bool reset_timer_if_blocked ; int * reconnect_delay ; int * fast_io_fail_tmo ; int * dev_loss_tmo ; int ( * reconnect ) ( s#srp_rport * ) ; void ( * terminate_rport_io ) ( s#srp_rport * ) ; void ( * rport_delete ) ( s#srp_rport * ) ; int ( * tsk_mgmt_response ) ( s#Scsi_Host * , t#u64 , t#u64 , int ) ; int ( * it_nexus_response ) ( s#Scsi_Host * , t#u64 , int ) ; } 
srp_attach_transport extern s#scsi_transport_template * srp_attach_transport ( s#srp_function_template * ) 
srp_release_transport extern void srp_release_transport ( s#scsi_transport_template * ) 

/* drivers/scsi/scsicam.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
scsi_bios_ptable extern unsigned char * scsi_bios_ptable ( s#block_device * ) 
scsicam_bios_param extern int scsicam_bios_param ( s#block_device * , t#sector_t , int * ) 
scsi_partsize extern int scsi_partsize ( unsigned char * , unsigned long , unsigned int * , unsigned int * , unsigned int * ) 

/* drivers/scsi/ufs/ufshcd.o */
E#ALIGNED_UPIU_SIZE 512 
s#ufshcd_sg_entry struct ufshcd_sg_entry { t#u32 base_addr ; t#u32 upper_addr ; t#u32 reserved ; t#u32 size ; } 
s#utp_transfer_cmd_desc struct utp_transfer_cmd_desc { t#u8 command_upiu [ E#ALIGNED_UPIU_SIZE ] ; t#u8 response_upiu [ E#ALIGNED_UPIU_SIZE ] ; s#ufshcd_sg_entry prd_table [ 128 ] ; } 
s#request_desc_header struct request_desc_header { t#u32 dword_0 ; t#u32 dword_1 ; t#u32 dword_2 ; t#u32 dword_3 ; } 
s#utp_transfer_req_desc struct utp_transfer_req_desc { s#request_desc_header header ; t#u32 command_desc_base_addr_lo ; t#u32 command_desc_base_addr_hi ; t#u16 response_upiu_length ; t#u16 response_upiu_offset ; t#u16 prd_table_length ; t#u16 prd_table_offset ; } 
E#TASK_REQ_UPIU_SIZE_DWORDS 8 
E#TASK_RSP_UPIU_SIZE_DWORDS 8 
s#utp_task_req_desc struct utp_task_req_desc { s#request_desc_header header ; t#u32 task_req_upiu [ E#TASK_REQ_UPIU_SIZE_DWORDS ] ; t#u32 task_rsp_upiu [ E#TASK_RSP_UPIU_SIZE_DWORDS ] ; } 
s##scsi_host_cmd_pool
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##proc_dir_entry
s##scsi_transport_template
s#utp_upiu_header struct utp_upiu_header { t#u32 dword_0 ; t#u32 dword_1 ; t#u32 dword_2 ; } 
s#utp_upiu_cmd struct utp_upiu_cmd { t#u32 exp_data_transfer_len ; t#u8 cdb [ 16 ] ; } 
s#utp_upiu_query struct utp_upiu_query { t#u8 opcode ; t#u8 idn ; t#u8 index ; t#u8 selector ; t#u16 reserved_osf ; t#u16 length ; t#u32 value ; t#u32 reserved [ 2 ] ; } 
s#utp_upiu_req struct utp_upiu_req { s#utp_upiu_header header ; union { s#utp_upiu_cmd sc ; s#utp_upiu_query qr ; } ; } 
s#utp_cmd_rsp struct utp_cmd_rsp { t#u32 residual_transfer_count ; t#u32 reserved [ 4 ] ; t#u16 sense_data_len ; t#u8 sense_data [ 18 ] ; } 
s#utp_upiu_rsp struct utp_upiu_rsp { s#utp_upiu_header header ; union { s#utp_cmd_rsp sr ; s#utp_upiu_query qr ; } ; } 
s#ufshcd_lrb struct ufshcd_lrb { s#utp_transfer_req_desc * utr_descriptor_ptr ; s#utp_upiu_req * ucd_req_ptr ; s#utp_upiu_rsp * ucd_rsp_ptr ; s#ufshcd_sg_entry * ucd_prdt_ptr ; s#scsi_cmnd * cmd ; t#u8 * sense_buffer ; unsigned int sense_bufflen ; int scsi_status ; int command_type ; int task_tag ; unsigned int lun ; t#bool intr_cmd ; } 
s#uic_command struct uic_command { t#u32 command ; t#u32 argument1 ; t#u32 argument2 ; t#u32 argument3 ; int cmd_active ; int result ; s#completion done ; } 
e#dev_cmd_type enum dev_cmd_type { DEV_CMD_TYPE_NOP = 0x0 , DEV_CMD_TYPE_QUERY = 0x1 , } 
s#ufs_query_req struct ufs_query_req { t#u8 query_func ; s#utp_upiu_query upiu_req ; } 
s#ufs_query_res struct ufs_query_res { t#u8 response ; s#utp_upiu_query upiu_res ; } 
s#ufs_query struct ufs_query { s#ufs_query_req request ; t#u8 * descriptor ; s#ufs_query_res response ; } 
s#ufs_dev_cmd struct ufs_dev_cmd { e#dev_cmd_type type ; s#mutex lock ; s#completion * complete ; t#wait_queue_head_t tag_wq ; s#ufs_query query ; } 
s#ufs_hba struct ufs_hba { void * mmio_base ; s#utp_transfer_cmd_desc * ucdl_base_addr ; s#utp_transfer_req_desc * utrdl_base_addr ; s#utp_task_req_desc * utmrdl_base_addr ; t#dma_addr_t ucdl_dma_addr ; t#dma_addr_t utrdl_dma_addr ; t#dma_addr_t utmrdl_dma_addr ; s#Scsi_Host * host ; s#device * dev ; s#ufshcd_lrb * lrb ; unsigned long lrb_in_use ; unsigned long outstanding_tasks ; unsigned long outstanding_reqs ; t#u32 capabilities ; int nutrs ; int nutmrs ; t#u32 ufs_version ; unsigned int irq ; s#uic_command * active_uic_cmd ; s#mutex uic_cmd_mutex ; t#wait_queue_head_t ufshcd_tm_wait_queue ; unsigned long tm_condition ; s#completion * pwr_done ; t#u32 ufshcd_state ; t#u32 intr_mask ; t#u16 ee_ctrl_mask ; s#work_struct feh_workq ; s#work_struct eeh_work ; t#u32 errors ; s#ufs_dev_cmd dev_cmd ; t#bool auto_bkops_enabled ; } 
ufshcd_dme_set_attr extern int ufshcd_dme_set_attr ( s#ufs_hba * , t#u32 , t#u8 , t#u32 , t#u8 ) 
ufshcd_dme_get_attr extern int ufshcd_dme_get_attr ( s#ufs_hba * , t#u32 , t#u32 * , t#u8 ) 
ufshcd_suspend int ufshcd_suspend ( s#ufs_hba * , t#pm_message_t ) 
ufshcd_resume int ufshcd_resume ( s#ufs_hba * ) 
ufshcd_runtime_suspend extern int ufshcd_runtime_suspend ( s#ufs_hba * ) 
ufshcd_runtime_resume extern int ufshcd_runtime_resume ( s#ufs_hba * ) 
ufshcd_runtime_idle extern int ufshcd_runtime_idle ( s#ufs_hba * ) 
ufshcd_remove void ufshcd_remove ( s#ufs_hba * ) 
ufshcd_init int ufshcd_init ( s#device * , s#ufs_hba * * , void * , unsigned int ) 

/* drivers/ssb/driver_chipcommon.o */
s#ssb_bus_ops struct ssb_bus_ops { t#u8 ( * read8 ) ( s#ssb_device * , t#u16 ) ; t#u16 ( * read16 ) ( s#ssb_device * , t#u16 ) ; t#u32 ( * read32 ) ( s#ssb_device * , t#u16 ) ; void ( * write8 ) ( s#ssb_device * , t#u16 , t#u8 ) ; void ( * write16 ) ( s#ssb_device * , t#u16 , t#u16 ) ; void ( * write32 ) ( s#ssb_device * , t#u16 , t#u32 ) ; void ( * block_read ) ( s#ssb_device * , void * , t#size_t , t#u16 , t#u8 ) ; void ( * block_write ) ( s#ssb_device * , const void * , t#size_t , t#u16 , t#u8 ) ; } 
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
e#ssb_bustype enum ssb_bustype { SSB_BUSTYPE_SSB , SSB_BUSTYPE_PCI , SSB_BUSTYPE_PCMCIA , SSB_BUSTYPE_SDIO , } 
s##pcmcia_device
s##sdio_func
s#ssb_pcicore struct ssb_pcicore { s#ssb_device * dev ; t#u8 setup_done : 1 ; t#u8 hostmode : 1 ; t#u8 cardbusmode : 1 ; } 
s#ssb_mipscore struct ssb_mipscore { } 
s#ssb_extif struct ssb_extif { } 
s#ssb_boardinfo struct ssb_boardinfo { t#u16 vendor ; t#u16 type ; } 
s##gpio_desc
s#ssb_bus struct ssb_bus { void * mmio ; const s#ssb_bus_ops * ops ; s#ssb_device * mapped_device ; union { t#u8 mapped_pcmcia_seg ; t#u32 sdio_sbaddr ; } ; t#spinlock_t bar_lock ; e#ssb_bustype bustype ; union { s#pci_dev * host_pci ; s#pcmcia_device * host_pcmcia ; s#sdio_func * host_sdio ; } ; unsigned int quirks ; s#mutex sprom_mutex ; t#u16 chip_id ; t#u8 chip_rev ; t#u16 sprom_offset ; t#u16 sprom_size ; t#u8 chip_package ; s#ssb_device devices [ ( ( 0x18010000U - 0x18000000U ) / 0x1000 ) ] ; t#u8 nr_devices ; unsigned int busnumber ; s#ssb_chipcommon chipco ; s#ssb_pcicore pcicore ; s#ssb_mipscore mipscore ; s#ssb_extif extif ; s#ssb_boardinfo boardinfo ; s#ssb_sprom sprom ; t#bool has_cardbus_slot ; s#gpio_chip gpio ; s#list_head list ; } 
s#ssb_device_id struct ssb_device_id { t#__u16 vendor ; t#__u16 coreid ; t#__u8 revision ; t#__u8 __pad ; } 
s#ssb_device struct ssb_device { const s#ssb_bus_ops * ops ; s#device * dev , * dma_dev ; s#ssb_bus * bus ; s#ssb_device_id id ; t#u8 core_index ; unsigned int irq ; void * drvdata ; void * devtypedata ; } 
s#ssb_chipcommon_pmu struct ssb_chipcommon_pmu { t#u8 rev ; t#u32 crystalfreq ; } 
s#ssb_chipcommon struct ssb_chipcommon { s#ssb_device * dev ; t#u32 capabilities ; t#u32 status ; t#u16 fast_pwrup_delay ; t#spinlock_t gpio_lock ; s#ssb_chipcommon_pmu pmu ; t#u32 ticks_per_ms ; t#u32 max_timer_ms ; } 
ssb_chipco_gpio_control t#u32 ssb_chipco_gpio_control ( s#ssb_chipcommon * , t#u32 , t#u32 ) 

/* drivers/ssb/driver_chipcommon_pmu.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##pcmcia_device
s##sdio_func
s##gpio_desc
e#ssb_pmu_ldo_volt_id enum ssb_pmu_ldo_volt_id { LDO_PAREF = 0 , LDO_VOLT1 , LDO_VOLT2 , LDO_VOLT3 , } 
ssb_pmu_set_ldo_voltage void ssb_pmu_set_ldo_voltage ( s#ssb_chipcommon * , e#ssb_pmu_ldo_volt_id , t#u32 ) 
ssb_pmu_set_ldo_paref void ssb_pmu_set_ldo_paref ( s#ssb_chipcommon * , t#bool ) 
ssb_pmu_spuravoid_pllupdate void ssb_pmu_spuravoid_pllupdate ( s#ssb_chipcommon * , int ) 

/* drivers/ssb/driver_pcicore.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##pcmcia_device
s##sdio_func
s##gpio_desc
ssb_pcicore_dev_irqvecs_enable extern int ssb_pcicore_dev_irqvecs_enable ( s#ssb_pcicore * , s#ssb_device * ) 

/* drivers/ssb/main.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
t#u_int typedef unsigned int u_int 
s#socket_state_t struct socket_state_t { t#u_int flags ; t#u_int csc_mask ; t#u_char Vcc , Vpp ; t#u_char io_irq ; } 
t#socket_state_t typedef s#socket_state_t socket_state_t 
t#u_short typedef unsigned short u_short 
s#pccard_mem_map struct pccard_mem_map { t#u_char map ; t#u_char flags ; t#u_short speed ; t#phys_addr_t static_start ; t#u_int card_start ; s#resource * res ; } 
t#pccard_mem_map typedef s#pccard_mem_map pccard_mem_map 
s#io_window_t struct io_window_t { t#u_int InUse , Config ; s#resource * res ; } 
t#io_window_t typedef s#io_window_t io_window_t 
s#pccard_io_map struct pccard_io_map { t#u_char map ; t#u_char flags ; t#u_short speed ; t#phys_addr_t start , stop ; } 
s#pccard_operations struct pccard_operations { int ( * init ) ( s#pcmcia_socket * ) ; int ( * suspend ) ( s#pcmcia_socket * ) ; int ( * get_status ) ( s#pcmcia_socket * , t#u_int * ) ; int ( * set_socket ) ( s#pcmcia_socket * , t#socket_state_t * ) ; int ( * set_io_map ) ( s#pcmcia_socket * , s#pccard_io_map * ) ; int ( * set_mem_map ) ( s#pcmcia_socket * , s#pccard_mem_map * ) ; } 
s##pccard_resource_ops
s##pcmcia_callback
s#pcmcia_socket struct pcmcia_socket { s#module * owner ; t#socket_state_t socket ; t#u_int state ; t#u_int suspended_state ; t#u_short functions ; t#u_short lock_count ; t#pccard_mem_map cis_mem ; void * cis_virt ; t#io_window_t io [ 2 ] ; t#pccard_mem_map win [ 4 ] ; s#list_head cis_cache ; t#size_t fake_cis_len ; t#u8 * fake_cis ; s#list_head socket_list ; s#completion socket_released ; unsigned int sock ; t#u_int features ; t#u_int irq_mask ; t#u_int map_size ; t#u_int io_offset ; t#u_int pci_irq ; s#pci_dev * cb_dev ; t#u8 resource_setup_done ; s#pccard_operations * ops ; s#pccard_resource_ops * resource_ops ; void * resource_data ; void ( * zoom_video ) ( s#pcmcia_socket * , int ) ; int ( * power_hook ) ( s#pcmcia_socket * , int ) ; s#task_struct * thread ; s#completion thread_done ; unsigned int thread_events ; unsigned int sysfs_events ; s#mutex skt_mutex ; s#mutex ops_mutex ; t#spinlock_t thread_lock ; s#pcmcia_callback * callback ; s#device dev ; void * driver_data ; int resume_status ; } 
s##config_t
E#PCMCIA_NUM_RESOURCES 6 
s#pcmcia_device struct pcmcia_device { s#pcmcia_socket * socket ; char * devname ; t#u8 device_no ; t#u8 func ; s#config_t * function_config ; s#list_head socket_device_list ; unsigned int irq ; s#resource * resource [ E#PCMCIA_NUM_RESOURCES ] ; t#resource_size_t card_addr ; unsigned int vpp ; unsigned int config_flags ; unsigned int config_base ; unsigned int config_index ; unsigned int config_regs ; unsigned int io_lines ; t#u16 suspended : 1 ; t#u16 _irq : 1 ; t#u16 _io : 1 ; t#u16 _win : 4 ; t#u16 _locked : 1 ; t#u16 allow_func_id_match : 1 ; t#u16 has_manf_id : 1 ; t#u16 has_card_id : 1 ; t#u16 has_func_id : 1 ; t#u16 reserved : 4 ; t#u8 func_id ; t#u16 manf_id ; t#u16 card_id ; char * prod_id [ 4 ] ; t#u64 dma_mask ; s#device dev ; void * priv ; unsigned int open ; } 
s##mmc_card
t#sdio_irq_handler_t typedef void ( sdio_irq_handler_t ) ( s#sdio_func * ) 
s#sdio_func_tuple struct sdio_func_tuple { s#sdio_func_tuple * next ; unsigned char code ; unsigned char size ; unsigned char data [ 0 ] ; } 
s#sdio_func struct sdio_func { s#mmc_card * card ; s#device dev ; t#sdio_irq_handler_t * irq_handler ; unsigned int num ; unsigned char class ; unsigned short vendor ; unsigned short device ; unsigned max_blksize ; unsigned cur_blksize ; unsigned enable_timeout ; unsigned int state ; t#u8 tmpbuf [ 4 ] ; unsigned num_info ; const char * * info ; s#sdio_func_tuple * tuples ; } 
s##gpio_desc
ssb_bus_resume extern int ssb_bus_resume ( s#ssb_bus * ) 
ssb_bus_suspend extern int ssb_bus_suspend ( s#ssb_bus * ) 
ssb_bus_unregister extern void ssb_bus_unregister ( s#ssb_bus * ) 
ssb_bus_pcibus_register extern int ssb_bus_pcibus_register ( s#ssb_bus * , s#pci_dev * ) 
s#ssb_driver struct ssb_driver { const char * name ; const s#ssb_device_id * id_table ; int ( * probe ) ( s#ssb_device * , const s#ssb_device_id * ) ; void ( * remove ) ( s#ssb_device * ) ; int ( * suspend ) ( s#ssb_device * , t#pm_message_t ) ; int ( * resume ) ( s#ssb_device * ) ; void ( * shutdown ) ( s#ssb_device * ) ; s#device_driver drv ; } 
__ssb_driver_register extern int __ssb_driver_register ( s#ssb_driver * , s#module * ) 
ssb_driver_unregister extern void ssb_driver_unregister ( s#ssb_driver * ) 
ssb_set_devtypedata void ssb_set_devtypedata ( s#ssb_device * , void * ) 
ssb_clockspeed extern t#u32 ssb_clockspeed ( s#ssb_bus * ) 
ssb_device_is_enabled int ssb_device_is_enabled ( s#ssb_device * ) 
ssb_device_enable void ssb_device_enable ( s#ssb_device * , t#u32 ) 
ssb_device_disable void ssb_device_disable ( s#ssb_device * , t#u32 ) 
ssb_dma_translation extern t#u32 ssb_dma_translation ( s#ssb_device * ) 
ssb_bus_may_powerdown extern int ssb_bus_may_powerdown ( s#ssb_bus * ) 
ssb_bus_powerup extern int ssb_bus_powerup ( s#ssb_bus * , t#bool ) 
ssb_commit_settings extern void ssb_commit_settings ( s#ssb_bus * ) 
ssb_admatch_base extern t#u32 ssb_admatch_base ( t#u32 ) 
ssb_admatch_size extern t#u32 ssb_admatch_size ( t#u32 ) 

/* drivers/ssb/pcihost_wrapper.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
ssb_pcihost_register extern int ssb_pcihost_register ( s#pci_driver * ) 

/* drivers/target/iscsi/iscsi_target.o */
e#iscsi_timer_flags_table enum iscsi_timer_flags_table { ISCSI_TF_RUNNING = 0x01 , ISCSI_TF_STOP = 0x02 , ISCSI_TF_EXPIRED = 0x04 , } 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##dn_route
s##workqueue_struct
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##mem_cgroup
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##cgroup_taskset
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
e#np_thread_state_table enum np_thread_state_table { ISCSI_NP_THREAD_ACTIVE = 1 , ISCSI_NP_THREAD_INACTIVE = 2 , ISCSI_NP_THREAD_RESET = 3 , ISCSI_NP_THREAD_SHUTDOWN = 4 , ISCSI_NP_THREAD_EXIT = 5 , } 
e#np_flags_table enum np_flags_table { NPF_IP_NETWORK = 0x00 , } 
e#cmd_i_state_table enum cmd_i_state_table { ISTATE_NO_STATE = 0 , ISTATE_NEW_CMD = 1 , ISTATE_DEFERRED_CMD = 2 , ISTATE_UNSOLICITED_DATA = 3 , ISTATE_RECEIVE_DATAOUT = 4 , ISTATE_RECEIVE_DATAOUT_RECOVERY = 5 , ISTATE_RECEIVED_LAST_DATAOUT = 6 , ISTATE_WITHIN_DATAOUT_RECOVERY = 7 , ISTATE_IN_CONNECTION_RECOVERY = 8 , ISTATE_RECEIVED_TASKMGT = 9 , ISTATE_SEND_ASYNCMSG = 10 , ISTATE_SENT_ASYNCMSG = 11 , ISTATE_SEND_DATAIN = 12 , ISTATE_SEND_LAST_DATAIN = 13 , ISTATE_SENT_LAST_DATAIN = 14 , ISTATE_SEND_LOGOUTRSP = 15 , ISTATE_SENT_LOGOUTRSP = 16 , ISTATE_SEND_NOPIN = 17 , ISTATE_SENT_NOPIN = 18 , ISTATE_SEND_REJECT = 19 , ISTATE_SENT_REJECT = 20 , ISTATE_SEND_R2T = 21 , ISTATE_SENT_R2T = 22 , ISTATE_SEND_R2T_RECOVERY = 23 , ISTATE_SENT_R2T_RECOVERY = 24 , ISTATE_SEND_LAST_R2T = 25 , ISTATE_SENT_LAST_R2T = 26 , ISTATE_SEND_LAST_R2T_RECOVERY = 27 , ISTATE_SENT_LAST_R2T_RECOVERY = 28 , ISTATE_SEND_STATUS = 29 , ISTATE_SEND_STATUS_BROKEN_PC = 30 , ISTATE_SENT_STATUS = 31 , ISTATE_SEND_STATUS_RECOVERY = 32 , ISTATE_SENT_STATUS_RECOVERY = 33 , ISTATE_SEND_TASKMGTRSP = 34 , ISTATE_SENT_TASKMGTRSP = 35 , ISTATE_SEND_TEXTRSP = 36 , ISTATE_SENT_TEXTRSP = 37 , ISTATE_SEND_NOPIN_WANT_RESPONSE = 38 , ISTATE_SENT_NOPIN_WANT_RESPONSE = 39 , ISTATE_SEND_NOPIN_NO_RESPONSE = 40 , ISTATE_REMOVE = 41 , ISTATE_FREE = 42 , } 
e#cmd_flags_table enum cmd_flags_table { ICF_GOT_LAST_DATAOUT = 0x00000001 , ICF_GOT_DATACK_SNACK = 0x00000002 , ICF_NON_IMMEDIATE_UNSOLICITED_DATA = 0x00000004 , ICF_SENT_LAST_R2T = 0x00000008 , ICF_WITHIN_COMMAND_RECOVERY = 0x00000010 , ICF_CONTIG_MEMORY = 0x00000020 , ICF_ATTACHED_TO_RQUEUE = 0x00000040 , ICF_OOO_CMDSN = 0x00000080 , IFC_SENDTARGETS_ALL = 0x00000100 , IFC_SENDTARGETS_SINGLE = 0x00000200 , } 
s#iscsi_pdu struct iscsi_pdu { int status ; int type ; t#u8 flags ; t#u32 data_sn ; t#u32 length ; t#u32 offset ; t#u32 pdu_send_order ; t#u32 seq_no ; } 
s#iscsi_seq struct iscsi_seq { int sent ; int status ; int type ; t#u32 data_sn ; t#u32 first_datasn ; t#u32 last_datasn ; t#u32 next_burst_len ; t#u32 pdu_start ; t#u32 pdu_count ; t#u32 offset ; t#u32 orig_offset ; t#u32 pdu_send_order ; t#u32 r2t_sn ; t#u32 seq_send_order ; t#u32 seq_no ; t#u32 xfer_len ; } 
s#iscsi_sess_ops struct iscsi_sess_ops { char InitiatorName [ 224 ] ; char InitiatorAlias [ 256 ] ; char TargetName [ 224 ] ; char TargetAlias [ 256 ] ; char TargetAddress [ 256 ] ; t#u16 TargetPortalGroupTag ; t#u16 MaxConnections ; t#u8 InitialR2T ; t#u8 ImmediateData ; t#u32 MaxBurstLength ; t#u32 FirstBurstLength ; t#u16 DefaultTime2Wait ; t#u16 DefaultTime2Retain ; t#u16 MaxOutstandingR2T ; t#u8 DataPDUInOrder ; t#u8 DataSequenceInOrder ; t#u8 ErrorRecoveryLevel ; t#u8 SessionType ; t#u8 RDMAExtensions ; } 
s##se_subsystem_api
s#target_fabric_configfs_template struct target_fabric_configfs_template { s#config_item_type tfc_discovery_cit ; s#config_item_type tfc_wwn_cit ; s#config_item_type tfc_wwn_fabric_stats_cit ; s#config_item_type tfc_tpg_cit ; s#config_item_type tfc_tpg_base_cit ; s#config_item_type tfc_tpg_lun_cit ; s#config_item_type tfc_tpg_port_cit ; s#config_item_type tfc_tpg_port_stat_cit ; s#config_item_type tfc_tpg_np_cit ; s#config_item_type tfc_tpg_np_base_cit ; s#config_item_type tfc_tpg_attrib_cit ; s#config_item_type tfc_tpg_auth_cit ; s#config_item_type tfc_tpg_param_cit ; s#config_item_type tfc_tpg_nacl_cit ; s#config_item_type tfc_tpg_nacl_base_cit ; s#config_item_type tfc_tpg_nacl_attrib_cit ; s#config_item_type tfc_tpg_nacl_auth_cit ; s#config_item_type tfc_tpg_nacl_param_cit ; s#config_item_type tfc_tpg_nacl_stat_cit ; s#config_item_type tfc_tpg_mappedlun_cit ; s#config_item_type tfc_tpg_mappedlun_stat_cit ; } 
s#target_fabric_configfs struct target_fabric_configfs { char tf_name [ 32 ] ; t#atomic_t tf_access_cnt ; s#list_head tf_list ; s#config_group tf_group ; s#config_group tf_disc_group ; s#config_group * tf_default_groups [ 2 ] ; s#config_item * tf_fabric ; s#config_item_type * tf_fabric_cit ; s#configfs_subsystem * tf_subsys ; s#module * tf_module ; s#target_core_fabric_ops tf_ops ; s#target_fabric_configfs_template tf_cit_tmpl ; } 
s##percpu_ida_cpu
e#tpg_state_table enum tpg_state_table { TPG_STATE_FREE = 0 , TPG_STATE_ACTIVE = 1 , TPG_STATE_INACTIVE = 2 , TPG_STATE_COLD_RESET = 3 , } 
s#iscsi_tpg_attrib struct iscsi_tpg_attrib { t#u32 authentication ; t#u32 login_timeout ; t#u32 netif_timeout ; t#u32 generate_node_acls ; t#u32 cache_dynamic_acls ; t#u32 default_cmdsn_depth ; t#u32 demo_mode_write_protect ; t#u32 prod_mode_write_protect ; t#u32 demo_mode_discovery ; t#u32 default_erl ; t#u8 t10_pi ; s#iscsi_portal_group * tpg ; } 
e#naf_flags_table enum naf_flags_table { NAF_USERID_SET = 0x01 , NAF_PASSWORD_SET = 0x02 , NAF_USERID_IN_SET = 0x04 , NAF_PASSWORD_IN_SET = 0x08 , } 
s#iscsi_node_auth struct iscsi_node_auth { e#naf_flags_table naf_flags ; int authenticate_target ; int enforce_discovery_auth ; char userid [ 256 ] ; char password [ 256 ] ; char userid_mutual [ 256 ] ; char password_mutual [ 256 ] ; } 
s#iscsi_param_list struct iscsi_param_list { t#bool iser ; s#list_head param_list ; s#list_head extra_response_list ; } 
e#tiqn_state_table enum tiqn_state_table { TIQN_STATE_ACTIVE = 1 , TIQN_STATE_SHUTDOWN = 2 , } 
s#iscsi_wwn_stat_grps struct iscsi_wwn_stat_grps { s#config_group iscsi_stat_group ; s#config_group iscsi_instance_group ; s#config_group iscsi_sess_err_group ; s#config_group iscsi_tgt_attr_group ; s#config_group iscsi_login_stats_group ; s#config_group iscsi_logout_stats_group ; } 
s#iscsi_sess_err_stats struct iscsi_sess_err_stats { t#spinlock_t lock ; t#u32 digest_errors ; t#u32 cxn_timeout_errors ; t#u32 pdu_format_errors ; t#u32 last_sess_failure_type ; char last_sess_fail_rem_name [ 224 ] ; } 
s#iscsi_login_stats struct iscsi_login_stats { t#spinlock_t lock ; t#u32 accepts ; t#u32 other_fails ; t#u32 redirects ; t#u32 authorize_fails ; t#u32 authenticate_fails ; t#u32 negotiate_fails ; t#u64 last_fail_time ; t#u32 last_fail_type ; int last_intr_fail_ip_family ; unsigned char last_intr_fail_ip_addr [ 48 ] ; char last_intr_fail_name [ 224 ] ; } 
s#iscsi_logout_stats struct iscsi_logout_stats { t#spinlock_t lock ; t#u32 normal_logouts ; t#u32 abnormal_logouts ; } 
s#iscsi_tiqn struct iscsi_tiqn { unsigned char tiqn [ 224 ] ; e#tiqn_state_table tiqn_state ; int tiqn_access_count ; t#u32 tiqn_active_tpgs ; t#u32 tiqn_ntpgs ; t#u32 tiqn_num_tpg_nps ; t#u32 tiqn_nsessions ; s#list_head tiqn_list ; s#list_head tiqn_tpg_list ; t#spinlock_t tiqn_state_lock ; t#spinlock_t tiqn_tpg_lock ; s#se_wwn tiqn_wwn ; s#iscsi_wwn_stat_grps tiqn_stat_grps ; int tiqn_index ; s#iscsi_sess_err_stats sess_err_stats ; s#iscsi_login_stats login_stats ; s#iscsi_logout_stats logout_stats ; } 
s#iscsi_portal_group struct iscsi_portal_group { unsigned char tpg_chap_id ; e#tpg_state_table tpg_state ; t#u16 tpgt ; t#u16 ntsih ; t#u32 nsessions ; t#u32 num_tpg_nps ; t#u32 sid ; t#spinlock_t tpg_np_lock ; t#spinlock_t tpg_state_lock ; s#se_portal_group tpg_se_tpg ; s#mutex tpg_access_lock ; s#semaphore np_login_sem ; s#iscsi_tpg_attrib tpg_attrib ; s#iscsi_node_auth tpg_demo_auth ; s#iscsi_param_list * param_list ; s#iscsi_tiqn * tpg_tiqn ; s#list_head tpg_gnp_list ; s#list_head tpg_list ; } 
s#iscsi_session struct iscsi_session { t#u8 initiator_vendor ; t#u8 isid [ 6 ] ; e#iscsi_timer_flags_table time2retain_timer_flags ; t#u8 version_active ; t#u16 cid_called ; t#u16 conn_recovery_count ; t#u16 tsih ; t#u32 session_state ; t#itt_t init_task_tag ; t#u32 targ_xfer_tag ; t#u32 cmdsn_window ; s#mutex cmdsn_mutex ; t#u32 exp_cmd_sn ; t#u32 max_cmd_sn ; s#list_head sess_ooo_cmdsn_list ; t#u32 sid ; char auth_type [ 8 ] ; int session_index ; int session_usage_count ; int session_waiting_on_uc ; t#atomic_long_t cmd_pdus ; t#atomic_long_t rsp_pdus ; t#atomic_long_t tx_data_octets ; t#atomic_long_t rx_data_octets ; t#atomic_long_t conn_digest_errors ; t#atomic_long_t conn_timeout_errors ; t#u64 creation_time ; t#atomic_t nconn ; t#atomic_t session_continuation ; t#atomic_t session_fall_back_to_erl0 ; t#atomic_t session_logout ; t#atomic_t session_reinstatement ; t#atomic_t session_stop_active ; t#atomic_t sleep_on_sess_wait_comp ; s#list_head sess_conn_list ; s#list_head cr_active_list ; s#list_head cr_inactive_list ; t#spinlock_t conn_lock ; t#spinlock_t cr_a_lock ; t#spinlock_t cr_i_lock ; t#spinlock_t session_usage_lock ; t#spinlock_t ttt_lock ; s#completion async_msg_comp ; s#completion reinstatement_comp ; s#completion session_wait_comp ; s#completion session_waiting_on_uc_comp ; s#timer_list time2retain_timer ; s#iscsi_sess_ops * sess_ops ; s#se_session * se_sess ; s#iscsi_portal_group * tpg ; } 
s#iscsi_conn_recovery struct iscsi_conn_recovery { t#u16 cid ; t#u32 cmd_count ; t#u32 maxrecvdatasegmentlength ; t#u32 maxxmitdatasegmentlength ; int ready_for_reallegiance ; s#list_head conn_recovery_cmd_list ; t#spinlock_t conn_recovery_cmd_lock ; s#timer_list time2retain_timer ; s#iscsi_session * sess ; s#list_head cr_list ; } 
s#iscsi_tmr_req struct iscsi_tmr_req { t#bool task_reassign : 1 ; t#u32 exp_data_sn ; s#iscsi_cmd * ref_cmd ; s#iscsi_conn_recovery * conn_recovery ; s#se_tmr_req * se_tmr_req ; } 
s#iscsi_cmd struct iscsi_cmd { e#iscsi_timer_flags_table dataout_timer_flags ; t#u8 dataout_timeout_retries ; t#u8 error_recovery_count ; e#cmd_i_state_table deferred_i_state ; e#cmd_i_state_table i_state ; t#u8 immediate_cmd ; t#u8 immediate_data ; t#u8 iscsi_opcode ; t#u8 iscsi_response ; t#u8 logout_reason ; t#u8 logout_response ; t#u8 maxcmdsn_inc ; t#u8 unsolicited_data ; t#u8 reject_reason ; t#u16 logout_cid ; e#cmd_flags_table cmd_flags ; t#itt_t init_task_tag ; t#u32 targ_xfer_tag ; t#u32 cmd_sn ; t#u32 exp_stat_sn ; t#u32 stat_sn ; t#u32 data_sn ; t#u32 r2t_sn ; t#u32 acked_data_sn ; t#u32 buf_ptr_size ; t#u32 data_crc ; t#u32 outstanding_r2ts ; t#u32 r2t_offset ; t#u32 iov_data_count ; t#u32 orig_iov_data_count ; t#u32 iov_misc_count ; t#u32 pdu_count ; t#u32 pdu_send_order ; t#u32 pdu_start ; t#u32 seq_send_order ; t#u32 seq_count ; t#u32 seq_no ; t#u32 seq_start_offset ; t#u32 seq_end_offset ; t#u32 read_data_done ; t#u32 write_data_done ; t#u32 first_burst_len ; t#u32 next_burst_len ; t#u32 tx_size ; void * buf_ptr ; void * text_in_ptr ; e#dma_data_direction data_direction ; unsigned char pdu [ 48 + 4 ] ; t#atomic_t immed_queue_count ; t#atomic_t response_queue_count ; t#spinlock_t datain_lock ; t#spinlock_t dataout_timeout_lock ; t#spinlock_t istate_lock ; t#spinlock_t error_lock ; t#spinlock_t r2t_lock ; s#list_head datain_list ; s#list_head cmd_r2t_list ; s#timer_list dataout_timer ; s#kvec * iov_data ; s#kvec iov_misc [ 5 ] ; s#iscsi_pdu * pdu_list ; s#iscsi_pdu * pdu_ptr ; s#iscsi_seq * seq_list ; s#iscsi_seq * seq_ptr ; s#iscsi_tmr_req * tmr_req ; s#iscsi_conn * conn ; s#iscsi_conn_recovery * cr ; s#iscsi_session * sess ; s#list_head i_conn_node ; s#se_cmd se_cmd ; unsigned char sense_buffer [ ( 96 + 2 ) ] ; t#u32 padding ; t#u8 pad_bytes [ 4 ] ; s#scatterlist * first_data_sg ; t#u32 first_data_sg_off ; t#u32 kmapped_nents ; t#sense_reason_t sense_reason ; } 
s#iscsit_transport struct iscsit_transport { char name [ 16 ] ; int transport_type ; int priv_size ; s#module * owner ; s#list_head t_node ; int ( * iscsit_setup_np ) ( s#iscsi_np * , s#__kernel_sockaddr_storage * ) ; int ( * iscsit_accept_np ) ( s#iscsi_np * , s#iscsi_conn * ) ; void ( * iscsit_free_np ) ( s#iscsi_np * ) ; void ( * iscsit_wait_conn ) ( s#iscsi_conn * ) ; void ( * iscsit_free_conn ) ( s#iscsi_conn * ) ; int ( * iscsit_get_login_rx ) ( s#iscsi_conn * , s#iscsi_login * ) ; int ( * iscsit_put_login_tx ) ( s#iscsi_conn * , s#iscsi_login * , t#u32 ) ; int ( * iscsit_immediate_queue ) ( s#iscsi_conn * , s#iscsi_cmd * , int ) ; int ( * iscsit_response_queue ) ( s#iscsi_conn * , s#iscsi_cmd * , int ) ; int ( * iscsit_get_dataout ) ( s#iscsi_conn * , s#iscsi_cmd * , t#bool ) ; int ( * iscsit_queue_data_in ) ( s#iscsi_conn * , s#iscsi_cmd * ) ; int ( * iscsit_queue_status ) ( s#iscsi_conn * , s#iscsi_cmd * ) ; void ( * iscsit_aborted_task ) ( s#iscsi_conn * , s#iscsi_cmd * ) ; e#target_prot_op ( * iscsit_get_sup_prot_ops ) ( s#iscsi_conn * ) ; } 
s#iscsi_tpg_np struct iscsi_tpg_np { s#iscsi_np * tpg_np ; s#iscsi_portal_group * tpg ; s#iscsi_tpg_np * tpg_np_parent ; s#list_head tpg_np_list ; s#list_head tpg_np_child_list ; s#list_head tpg_np_parent_list ; s#se_tpg_np se_tpg_np ; t#spinlock_t tpg_np_parent_lock ; s#completion tpg_np_comp ; s#kref tpg_np_kref ; } 
s#iscsi_np struct iscsi_np { int np_network_transport ; int np_ip_proto ; int np_sock_type ; e#np_thread_state_table np_thread_state ; t#bool enabled ; e#iscsi_timer_flags_table np_login_timer_flags ; t#u32 np_exports ; e#np_flags_table np_flags ; unsigned char np_ip [ 48 ] ; t#u16 np_port ; t#spinlock_t np_thread_lock ; s#completion np_restart_comp ; s#socket * np_socket ; s#__kernel_sockaddr_storage np_sockaddr ; s#task_struct * np_thread ; s#timer_list np_login_timer ; void * np_context ; s#iscsit_transport * np_transport ; s#list_head np_list ; s#iscsi_tpg_np * tpg_np ; } 
s#iscsi_login struct iscsi_login { t#u8 auth_complete ; t#u8 checked_for_existing ; t#u8 current_stage ; t#u8 leading_connection ; t#u8 first_request ; t#u8 version_min ; t#u8 version_max ; t#u8 login_complete ; t#u8 login_failed ; t#bool zero_tsih ; char isid [ 6 ] ; t#u32 cmd_sn ; t#itt_t init_task_tag ; t#u32 initial_exp_statsn ; t#u32 rsp_length ; t#u16 cid ; t#u16 tsih ; char req [ 48 ] ; char rsp [ 48 ] ; char * req_buf ; char * rsp_buf ; s#iscsi_conn * conn ; s#iscsi_np * np ; } 
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
s#iscsi_conn_ops struct iscsi_conn_ops { t#u8 HeaderDigest ; t#u8 DataDigest ; t#u32 MaxRecvDataSegmentLength ; t#u32 MaxXmitDataSegmentLength ; t#u8 OFMarker ; t#u8 IFMarker ; t#u32 OFMarkInt ; t#u32 IFMarkInt ; t#u32 InitiatorRecvDataSegmentLength ; t#u32 TargetRecvDataSegmentLength ; } 
s##iscsi_login_thread_s
s#iscsi_thread_set struct iscsi_thread_set { int blocked_threads ; int create_threads ; int delay_inactive ; int status ; int signal_sent ; int thread_clear ; int thread_count ; t#u32 thread_id ; s#iscsi_conn * conn ; t#spinlock_t ts_state_lock ; s#completion rx_restart_comp ; s#completion tx_restart_comp ; s#completion rx_start_comp ; s#completion tx_start_comp ; s#task_struct * rx_thread ; s#task_struct * tx_thread ; s#list_head ts_list ; s#semaphore ts_activate_sem ; } 
s#iscsi_conn struct iscsi_conn { t#wait_queue_head_t queues_wq ; t#u8 auth_complete ; t#u8 conn_state ; t#u8 conn_logout_reason ; t#u8 network_transport ; e#iscsi_timer_flags_table nopin_timer_flags ; e#iscsi_timer_flags_table nopin_response_timer_flags ; t#u8 which_thread ; t#u16 cid ; t#u16 login_port ; t#u16 local_port ; int net_size ; int login_family ; t#u32 auth_id ; t#u32 conn_flags ; t#itt_t login_itt ; t#u32 exp_statsn ; t#u32 stat_sn ; t#u32 if_marker ; t#u32 of_marker ; t#u32 of_marker_offset ; unsigned char login_ip [ 48 ] ; unsigned char local_ip [ 48 ] ; int conn_usage_count ; int conn_waiting_on_uc ; t#atomic_t check_immediate_queue ; t#atomic_t conn_logout_remove ; t#atomic_t connection_exit ; t#atomic_t connection_recovery ; t#atomic_t connection_reinstatement ; t#atomic_t connection_wait_rcfr ; t#atomic_t sleep_on_conn_wait_comp ; t#atomic_t transport_failed ; s#completion conn_post_wait_comp ; s#completion conn_wait_comp ; s#completion conn_wait_rcfr_comp ; s#completion conn_waiting_on_uc_comp ; s#completion conn_logout_comp ; s#completion tx_half_close_comp ; s#completion rx_half_close_comp ; s#socket * sock ; void ( * orig_data_ready ) ( s#sock * , int ) ; void ( * orig_state_change ) ( s#sock * ) ; unsigned long login_flags ; s#delayed_work login_work ; s#delayed_work login_cleanup_work ; s#iscsi_login * login ; s#timer_list nopin_timer ; s#timer_list nopin_response_timer ; s#timer_list transport_timer ; s#task_struct * login_kworker ; t#spinlock_t cmd_lock ; t#spinlock_t conn_usage_lock ; t#spinlock_t immed_queue_lock ; t#spinlock_t nopin_timer_lock ; t#spinlock_t response_queue_lock ; t#spinlock_t state_lock ; s#hash_desc conn_rx_hash ; s#hash_desc conn_tx_hash ; t#cpumask_var_t conn_cpumask ; unsigned int conn_rx_reset_cpumask : 1 ; unsigned int conn_tx_reset_cpumask : 1 ; s#list_head conn_cmd_list ; s#list_head immed_queue_list ; s#list_head response_queue_list ; s#iscsi_conn_ops * conn_ops ; s#iscsi_login * conn_login ; s#iscsit_transport * conn_transport ; s#iscsi_param_list * param_list ; void * auth_protocol ; void * context ; s#iscsi_login_thread_s * login_thread ; s#iscsi_portal_group * tpg ; s#iscsi_tpg_np * tpg_np ; s#iscsi_session * sess ; s#iscsi_thread_set * thread_set ; s#list_head conn_list ; } 
iscsit_setup_scsi_cmd extern int iscsit_setup_scsi_cmd ( s#iscsi_conn * , s#iscsi_cmd * , unsigned char * ) 
iscsit_set_unsoliticed_dataout extern void iscsit_set_unsoliticed_dataout ( s#iscsi_cmd * ) 
s#iscsi_scsi_req struct iscsi_scsi_req { t#uint8_t opcode ; t#uint8_t flags ; t#__be16 rsvd2 ; t#uint8_t hlength ; t#uint8_t dlength [ 3 ] ; s#scsi_lun lun ; t#itt_t itt ; t#__be32 data_length ; t#__be32 cmdsn ; t#__be32 exp_statsn ; t#uint8_t cdb [ 16 ] ; } 
iscsit_process_scsi_cmd extern int iscsit_process_scsi_cmd ( s#iscsi_conn * , s#iscsi_cmd * , s#iscsi_scsi_req * ) 
iscsit_check_dataout_hdr extern int iscsit_check_dataout_hdr ( s#iscsi_conn * , unsigned char * , s#iscsi_cmd * * ) 
iscsit_check_dataout_payload extern int iscsit_check_dataout_payload ( s#iscsi_cmd * , s#iscsi_data * , t#bool ) 
s#iscsi_nopout struct iscsi_nopout { t#uint8_t opcode ; t#uint8_t flags ; t#__be16 rsvd2 ; t#uint8_t rsvd3 ; t#uint8_t dlength [ 3 ] ; s#scsi_lun lun ; t#itt_t itt ; t#__be32 ttt ; t#__be32 cmdsn ; t#__be32 exp_statsn ; t#uint8_t rsvd4 [ 16 ] ; } 
iscsit_setup_nop_out extern int iscsit_setup_nop_out ( s#iscsi_conn * , s#iscsi_cmd * , s#iscsi_nopout * ) 
iscsit_process_nop_out extern int iscsit_process_nop_out ( s#iscsi_conn * , s#iscsi_cmd * , s#iscsi_nopout * ) 
iscsit_handle_task_mgt_cmd extern int iscsit_handle_task_mgt_cmd ( s#iscsi_conn * , s#iscsi_cmd * , unsigned char * ) 
s#iscsi_text struct iscsi_text { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t rsvd2 [ 2 ] ; t#uint8_t hlength ; t#uint8_t dlength [ 3 ] ; t#uint8_t rsvd4 [ 8 ] ; t#itt_t itt ; t#__be32 ttt ; t#__be32 cmdsn ; t#__be32 exp_statsn ; t#uint8_t rsvd5 [ 16 ] ; } 
iscsit_setup_text_cmd extern int iscsit_setup_text_cmd ( s#iscsi_conn * , s#iscsi_cmd * , s#iscsi_text * ) 
iscsit_process_text_cmd extern int iscsit_process_text_cmd ( s#iscsi_conn * , s#iscsi_cmd * , s#iscsi_text * ) 
iscsit_handle_text_cmd int iscsit_handle_text_cmd ( s#iscsi_conn * , s#iscsi_cmd * , unsigned char * ) 
iscsit_handle_logout_cmd extern int iscsit_handle_logout_cmd ( s#iscsi_conn * , s#iscsi_cmd * , unsigned char * ) 
s#iscsi_logout_rsp struct iscsi_logout_rsp { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t response ; t#uint8_t rsvd2 ; t#uint8_t hlength ; t#uint8_t dlength [ 3 ] ; t#uint8_t rsvd3 [ 8 ] ; t#itt_t itt ; t#__be32 rsvd4 ; t#__be32 statsn ; t#__be32 exp_cmdsn ; t#__be32 max_cmdsn ; t#__be32 rsvd5 ; t#__be16 t2wait ; t#__be16 t2retain ; t#__be32 rsvd6 ; } 
iscsit_build_logout_rsp extern int iscsit_build_logout_rsp ( s#iscsi_cmd * , s#iscsi_conn * , s#iscsi_logout_rsp * ) 
iscsit_build_nopin_rsp extern void iscsit_build_nopin_rsp ( s#iscsi_cmd * , s#iscsi_conn * , s#iscsi_nopin * , t#bool ) 
s#iscsi_scsi_rsp struct iscsi_scsi_rsp { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t response ; t#uint8_t cmd_status ; t#uint8_t hlength ; t#uint8_t dlength [ 3 ] ; t#uint8_t rsvd [ 8 ] ; t#itt_t itt ; t#__be32 rsvd1 ; t#__be32 statsn ; t#__be32 exp_cmdsn ; t#__be32 max_cmdsn ; t#__be32 exp_datasn ; t#__be32 bi_residual_count ; t#__be32 residual_count ; } 
iscsit_build_rsp_pdu extern void iscsit_build_rsp_pdu ( s#iscsi_cmd * , s#iscsi_conn * , t#bool , s#iscsi_scsi_rsp * ) 
s#iscsi_tm_rsp struct iscsi_tm_rsp { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t response ; t#uint8_t qualifier ; t#uint8_t hlength ; t#uint8_t dlength [ 3 ] ; t#uint8_t rsvd2 [ 8 ] ; t#itt_t itt ; t#itt_t rtt ; t#__be32 statsn ; t#__be32 exp_cmdsn ; t#__be32 max_cmdsn ; t#uint8_t rsvd3 [ 12 ] ; } 
iscsit_build_task_mgt_rsp extern void iscsit_build_task_mgt_rsp ( s#iscsi_cmd * , s#iscsi_conn * , s#iscsi_tm_rsp * ) 
s#iscsi_text_rsp struct iscsi_text_rsp { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t rsvd2 [ 2 ] ; t#uint8_t hlength ; t#uint8_t dlength [ 3 ] ; t#uint8_t rsvd4 [ 8 ] ; t#itt_t itt ; t#__be32 ttt ; t#__be32 statsn ; t#__be32 exp_cmdsn ; t#__be32 max_cmdsn ; t#uint8_t rsvd5 [ 12 ] ; } 
e#iscsit_transport_type enum iscsit_transport_type { ISCSI_TCP = 0 , ISCSI_SCTP_TCP = 1 , ISCSI_SCTP_UDP = 2 , ISCSI_IWARP_TCP = 3 , ISCSI_IWARP_SCTP = 4 , ISCSI_INFINIBAND = 5 , } 
iscsit_build_text_rsp extern int iscsit_build_text_rsp ( s#iscsi_cmd * , s#iscsi_conn * , s#iscsi_text_rsp * , e#iscsit_transport_type ) 
s#iscsi_reject struct iscsi_reject { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t reason ; t#uint8_t rsvd2 ; t#uint8_t hlength ; t#uint8_t dlength [ 3 ] ; t#uint8_t rsvd3 [ 8 ] ; t#__be32 ffffffff ; t#uint8_t rsvd4 [ 4 ] ; t#__be32 statsn ; t#__be32 exp_cmdsn ; t#__be32 max_cmdsn ; t#__be32 datasn ; t#uint8_t rsvd5 [ 8 ] ; } 
iscsit_build_reject extern void iscsit_build_reject ( s#iscsi_cmd * , s#iscsi_conn * , s#iscsi_reject * ) 
iscsit_logout_post_handler extern int iscsit_logout_post_handler ( s#iscsi_cmd * , s#iscsi_conn * ) 

/* drivers/target/iscsi/iscsi_target_device.o */
s##tvec_base
s##iscsi_pdu
s##iscsi_seq
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##workqueue_struct
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##mem_cgroup
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##cgroup_taskset
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##se_subsystem_api
s##target_fabric_configfs
s##percpu_ida_cpu
s##iscsit_transport
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
s##iscsi_login_thread_s
s##iscsi_thread_set
iscsit_increment_maxcmdsn extern void iscsit_increment_maxcmdsn ( s#iscsi_cmd * , s#iscsi_session * ) 

/* drivers/target/iscsi/iscsi_target_erl0.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kioctx
s##eventfd_ctx
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##device_private
s##iw_handler_def
s##iw_public_data
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##mem_cgroup
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##cgroup_taskset
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##iscsit_transport
s##percpu_ida_cpu
s##se_subsystem_api
s##target_fabric_configfs
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
s##iscsi_login_thread_s
iscsit_cause_connection_reinstatement extern void iscsit_cause_connection_reinstatement ( s#iscsi_conn * , int ) 

/* drivers/target/iscsi/iscsi_target_erl1.o */
s##tvec_base
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##user_namespace
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##workqueue_struct
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##mem_cgroup
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##cgroup_taskset
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##se_subsystem_api
s##target_fabric_configfs
s##percpu_ida_cpu
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
s##iscsi_login_thread_s
s##iscsi_thread_set
iscsit_stop_dataout_timer extern void iscsit_stop_dataout_timer ( s#iscsi_cmd * ) 

/* drivers/target/iscsi/iscsi_target_tmr.o */
s##tvec_base
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##user_namespace
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##workqueue_struct
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##mem_cgroup
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##cgroup_taskset
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##se_subsystem_api
s##target_fabric_configfs
s##percpu_ida_cpu
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
s##iscsi_login_thread_s
s##iscsi_thread_set
iscsit_tmr_post_handler extern int iscsit_tmr_post_handler ( s#iscsi_cmd * , s#iscsi_conn * ) 

/* drivers/target/iscsi/iscsi_target_transport.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##percpu_ida_cpu
s##se_subsystem_api
s##target_core_fabric_ops
s##target_fabric_configfs
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
s##iscsi_login_thread_s
s##iscsi_thread_set
s##iscsi_pdu
s##iscsi_seq
iscsit_register_transport extern int iscsit_register_transport ( s#iscsit_transport * ) 
iscsit_unregister_transport extern void iscsit_unregister_transport ( s#iscsit_transport * ) 

/* drivers/target/iscsi/iscsi_target_util.o */
s##tvec_base
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##user_namespace
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##workqueue_struct
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##mem_cgroup
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##cgroup_taskset
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##se_subsystem_api
s##percpu_ida_cpu
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
s##iscsi_login_thread_s
iscsit_allocate_cmd extern s#iscsi_cmd * iscsit_allocate_cmd ( s#iscsi_conn * , int ) 
iscsit_sequence_cmd extern int iscsit_sequence_cmd ( s#iscsi_conn * , s#iscsi_cmd * , unsigned char * , t#__be32 ) 
iscsit_release_cmd extern void iscsit_release_cmd ( s#iscsi_cmd * ) 

/* drivers/target/target_core_alua.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##dn_route
s##workqueue_struct
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##mem_cgroup
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##cgroup_taskset
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##percpu_ida_cpu
s#se_subsystem_api struct se_subsystem_api { s#list_head sub_api_list ; char name [ 16 ] ; char inquiry_prod [ 16 ] ; char inquiry_rev [ 4 ] ; s#module * owner ; t#u8 transport_type ; int ( * attach_hba ) ( s#se_hba * , t#u32 ) ; void ( * detach_hba ) ( s#se_hba * ) ; int ( * pmode_enable_hba ) ( s#se_hba * , unsigned long ) ; s#se_device * ( * alloc_device ) ( s#se_hba * , const char * ) ; int ( * configure_device ) ( s#se_device * ) ; void ( * free_device ) ( s#se_device * ) ; t#ssize_t ( * set_configfs_dev_params ) ( s#se_device * , const char * , t#ssize_t ) ; t#ssize_t ( * show_configfs_dev_params ) ( s#se_device * , char * ) ; void ( * transport_complete ) ( s#se_cmd * , s#scatterlist * , unsigned char * ) ; t#sense_reason_t ( * parse_cdb ) ( s#se_cmd * ) ; t#u32 ( * get_device_type ) ( s#se_device * ) ; t#sector_t ( * get_blocks ) ( s#se_device * ) ; t#sector_t ( * get_alignment_offset_lbas ) ( s#se_device * ) ; unsigned int ( * get_lbppbe ) ( s#se_device * ) ; unsigned int ( * get_io_min ) ( s#se_device * ) ; unsigned int ( * get_io_opt ) ( s#se_device * ) ; unsigned char * ( * get_sense_buffer ) ( s#se_cmd * ) ; t#bool ( * get_write_cache ) ( s#se_device * ) ; int ( * init_prot ) ( s#se_device * ) ; int ( * format_prot ) ( s#se_device * ) ; void ( * free_prot ) ( s#se_device * ) ; } 
core_alua_check_nonop_delay int core_alua_check_nonop_delay ( s#se_cmd * ) 

/* drivers/target/target_core_configfs.o */
s##vfsmount
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##sem_undo_list
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##percpu_ida_cpu
target_fabric_configfs_init extern s#target_fabric_configfs * target_fabric_configfs_init ( s#module * , const char * ) 
target_fabric_configfs_free extern void target_fabric_configfs_free ( s#target_fabric_configfs * ) 
target_fabric_configfs_register extern int target_fabric_configfs_register ( s#target_fabric_configfs * ) 
target_fabric_configfs_deregister extern void target_fabric_configfs_deregister ( s#target_fabric_configfs * ) 

/* drivers/target/target_core_device.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##dn_route
s##workqueue_struct
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##mem_cgroup
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##cgroup_taskset
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##percpu_ida_cpu
s##target_fabric_configfs
transport_lookup_cmd_lun t#sense_reason_t transport_lookup_cmd_lun ( s#se_cmd * , t#u32 ) 
transport_lookup_tmr_lun int transport_lookup_tmr_lun ( s#se_cmd * , t#u32 ) 

/* drivers/target/target_core_fabric_lib.o */
s##module
s##posix_acl
s##nameidata
s##vfsmount
s##kioctx
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##device_private
s##iw_handler_def
s##iw_public_data
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##key_user
s##key_type
s##assoc_array_ptr
s##pipe_inode_info
s##mem_cgroup
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##percpu_ida_cpu
s##se_subsystem_api
sas_get_fabric_proto_ident t#u8 sas_get_fabric_proto_ident ( s#se_portal_group * ) 
sas_get_pr_transport_id t#u32 sas_get_pr_transport_id ( s#se_portal_group * , s#se_node_acl * , s#t10_pr_registration * , int * , unsigned char * ) 
sas_get_pr_transport_id_len t#u32 sas_get_pr_transport_id_len ( s#se_portal_group * , s#se_node_acl * , s#t10_pr_registration * , int * ) 
sas_parse_pr_out_transport_id char * sas_parse_pr_out_transport_id ( s#se_portal_group * , const char * , t#u32 * , char * * ) 
fc_get_fabric_proto_ident t#u8 fc_get_fabric_proto_ident ( s#se_portal_group * ) 
fc_get_pr_transport_id_len t#u32 fc_get_pr_transport_id_len ( s#se_portal_group * , s#se_node_acl * , s#t10_pr_registration * , int * ) 
fc_get_pr_transport_id t#u32 fc_get_pr_transport_id ( s#se_portal_group * , s#se_node_acl * , s#t10_pr_registration * , int * , unsigned char * ) 
fc_parse_pr_out_transport_id char * fc_parse_pr_out_transport_id ( s#se_portal_group * , const char * , t#u32 * , char * * ) 
iscsi_get_fabric_proto_ident t#u8 iscsi_get_fabric_proto_ident ( s#se_portal_group * ) 
iscsi_get_pr_transport_id t#u32 iscsi_get_pr_transport_id ( s#se_portal_group * , s#se_node_acl * , s#t10_pr_registration * , int * , unsigned char * ) 
iscsi_get_pr_transport_id_len t#u32 iscsi_get_pr_transport_id_len ( s#se_portal_group * , s#se_node_acl * , s#t10_pr_registration * , int * ) 
iscsi_parse_pr_out_transport_id char * iscsi_parse_pr_out_transport_id ( s#se_portal_group * , const char * , t#u32 * , char * * ) 

/* drivers/target/target_core_hba.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##percpu_ida_cpu
s##target_fabric_configfs
transport_subsystem_register int transport_subsystem_register ( s#se_subsystem_api * ) 
transport_subsystem_release void transport_subsystem_release ( s#se_subsystem_api * ) 

/* drivers/target/target_core_sbc.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##user_namespace
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##dn_route
s##workqueue_struct
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##mem_cgroup
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##cgroup_taskset
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##percpu_ida_cpu
s##target_fabric_configfs
sbc_get_write_same_sectors t#sector_t sbc_get_write_same_sectors ( s#se_cmd * ) 
s#sbc_ops struct sbc_ops { t#sense_reason_t ( * execute_rw ) ( s#se_cmd * , s#scatterlist * , t#u32 , e#dma_data_direction ) ; t#sense_reason_t ( * execute_sync_cache ) ( s#se_cmd * ) ; t#sense_reason_t ( * execute_write_same ) ( s#se_cmd * ) ; t#sense_reason_t ( * execute_write_same_unmap ) ( s#se_cmd * ) ; t#sense_reason_t ( * execute_unmap ) ( s#se_cmd * ) ; } 
sbc_parse_cdb t#sense_reason_t sbc_parse_cdb ( s#se_cmd * , s#sbc_ops * ) 
sbc_get_device_type t#u32 sbc_get_device_type ( s#se_device * ) 
sbc_execute_unmap t#sense_reason_t sbc_execute_unmap ( s#se_cmd * , t#sense_reason_t ( * ) ( s#se_cmd * , void * , t#sector_t , t#sector_t ) , void * ) 
sbc_dif_verify_write t#sense_reason_t sbc_dif_verify_write ( s#se_cmd * , t#sector_t , unsigned int , unsigned int , s#scatterlist * , int ) 
sbc_dif_verify_read t#sense_reason_t sbc_dif_verify_read ( s#se_cmd * , t#sector_t , unsigned int , unsigned int , s#scatterlist * , int ) 

/* drivers/target/target_core_spc.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##user_namespace
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##dn_route
s##workqueue_struct
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##mem_cgroup
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##cgroup_taskset
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##percpu_ida_cpu
s##target_fabric_configfs
spc_emulate_inquiry_std t#sense_reason_t spc_emulate_inquiry_std ( s#se_cmd * , unsigned char * ) 
spc_emulate_evpd_83 t#sense_reason_t spc_emulate_evpd_83 ( s#se_cmd * , unsigned char * ) 
spc_emulate_report_luns t#sense_reason_t spc_emulate_report_luns ( s#se_cmd * ) 
spc_parse_cdb t#sense_reason_t spc_parse_cdb ( s#se_cmd * , unsigned int * ) 

/* drivers/target/target_core_tmr.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##dn_route
s##workqueue_struct
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##mem_cgroup
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##cgroup_taskset
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##percpu_ida_cpu
core_tmr_alloc_req int core_tmr_alloc_req ( s#se_cmd * , void * , t#u8 , t#gfp_t ) 

/* drivers/target/target_core_tpg.o */
s##module
s##posix_acl
s##nameidata
s##vfsmount
s##kioctx
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##device_private
s##iw_handler_def
s##iw_public_data
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##key_user
s##key_type
s##assoc_array_ptr
s##pipe_inode_info
s##mem_cgroup
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##target_fabric_configfs
s##percpu_ida_cpu
core_tpg_get_initiator_node_acl s#se_node_acl * core_tpg_get_initiator_node_acl ( s#se_portal_group * , unsigned char * ) 
core_tpg_check_initiator_node_acl s#se_node_acl * core_tpg_check_initiator_node_acl ( s#se_portal_group * , unsigned char * ) 
core_tpg_clear_object_luns void core_tpg_clear_object_luns ( s#se_portal_group * ) 
core_tpg_add_initiator_node_acl s#se_node_acl * core_tpg_add_initiator_node_acl ( s#se_portal_group * , s#se_node_acl * , const char * , t#u32 ) 
core_tpg_del_initiator_node_acl int core_tpg_del_initiator_node_acl ( s#se_portal_group * , s#se_node_acl * , int ) 
core_tpg_set_initiator_node_queue_depth int core_tpg_set_initiator_node_queue_depth ( s#se_portal_group * , unsigned char * , t#u32 , int ) 
core_tpg_set_initiator_node_tag int core_tpg_set_initiator_node_tag ( s#se_portal_group * , s#se_node_acl * , const char * ) 
core_tpg_register int core_tpg_register ( s#target_core_fabric_ops * , s#se_wwn * , s#se_portal_group * , void * , int ) 
core_tpg_deregister int core_tpg_deregister ( s#se_portal_group * ) 

/* drivers/target/target_core_transport.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##sem_undo_list
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##percpu_ida_cpu
transport_init_session s#se_session * transport_init_session ( e#target_prot_op ) 
transport_alloc_session_tags int transport_alloc_session_tags ( s#se_session * , unsigned int , unsigned int ) 
transport_init_session_tags s#se_session * transport_init_session_tags ( unsigned int , unsigned int , e#target_prot_op ) 
__transport_register_session void __transport_register_session ( s#se_portal_group * , s#se_node_acl * , s#se_session * , void * ) 
transport_register_session void transport_register_session ( s#se_portal_group * , s#se_node_acl * , s#se_session * , void * ) 
target_get_session void target_get_session ( s#se_session * ) 
target_put_session void target_put_session ( s#se_session * ) 
transport_deregister_session_configfs void transport_deregister_session_configfs ( s#se_session * ) 
transport_free_session void transport_free_session ( s#se_session * ) 
transport_deregister_session void transport_deregister_session ( s#se_session * ) 
target_complete_cmd void target_complete_cmd ( s#se_cmd * , t#u8 ) 
target_complete_cmd_with_length void target_complete_cmd_with_length ( s#se_cmd * , t#u8 , int ) 
s#t10_vpd struct t10_vpd { unsigned char device_identifier [ 254 ] ; int protocol_identifier_set ; t#u32 protocol_identifier ; t#u32 device_identifier_code_set ; t#u32 association ; t#u32 device_identifier_type ; s#list_head vpd_list ; } 
transport_set_vpd_proto_id void transport_set_vpd_proto_id ( s#t10_vpd * , unsigned char * ) 
transport_set_vpd_assoc int transport_set_vpd_assoc ( s#t10_vpd * , unsigned char * ) 
transport_set_vpd_ident_type int transport_set_vpd_ident_type ( s#t10_vpd * , unsigned char * ) 
transport_set_vpd_ident int transport_set_vpd_ident ( s#t10_vpd * , unsigned char * ) 
transport_init_se_cmd void transport_init_se_cmd ( s#se_cmd * , s#target_core_fabric_ops * , s#se_session * , t#u32 , int , int , unsigned char * ) 
target_setup_cmd_from_cdb t#sense_reason_t target_setup_cmd_from_cdb ( s#se_cmd * , unsigned char * ) 
transport_handle_cdb_direct int transport_handle_cdb_direct ( s#se_cmd * ) 
target_submit_cmd_map_sgls int target_submit_cmd_map_sgls ( s#se_cmd * , s#se_session * , unsigned char * , unsigned char * , t#u32 , t#u32 , int , int , int , s#scatterlist * , t#u32 , s#scatterlist * , t#u32 , s#scatterlist * , t#u32 ) 
target_submit_cmd int target_submit_cmd ( s#se_cmd * , s#se_session * , unsigned char * , unsigned char * , t#u32 , t#u32 , int , int , int ) 
target_submit_tmr int target_submit_tmr ( s#se_cmd * , s#se_session * , unsigned char * , t#u32 , void * , unsigned char , t#gfp_t , unsigned int , int ) 
transport_generic_request_failure void transport_generic_request_failure ( s#se_cmd * , t#sense_reason_t ) 
target_execute_cmd void target_execute_cmd ( s#se_cmd * ) 
transport_kmap_data_sg void * transport_kmap_data_sg ( s#se_cmd * ) 
transport_kunmap_data_sg void transport_kunmap_data_sg ( s#se_cmd * ) 
transport_generic_new_cmd t#sense_reason_t transport_generic_new_cmd ( s#se_cmd * ) 
transport_generic_free_cmd int transport_generic_free_cmd ( s#se_cmd * , int ) 
target_get_sess_cmd int target_get_sess_cmd ( s#se_session * , s#se_cmd * , t#bool ) 
target_put_sess_cmd int target_put_sess_cmd ( s#se_session * , s#se_cmd * ) 
target_sess_cmd_list_set_waiting void target_sess_cmd_list_set_waiting ( s#se_session * ) 
target_wait_for_sess_cmds void target_wait_for_sess_cmds ( s#se_session * ) 
transport_wait_for_tasks t#bool transport_wait_for_tasks ( s#se_cmd * ) 
transport_send_check_condition_and_sense int transport_send_check_condition_and_sense ( s#se_cmd * , t#sense_reason_t , int ) 
transport_check_aborted_status int transport_check_aborted_status ( s#se_cmd * , int ) 
transport_generic_handle_tmr int transport_generic_handle_tmr ( s#se_cmd * ) 

/* drivers/thermal/cpu_cooling.o */
cpufreq_cooling_get_level unsigned long cpufreq_cooling_get_level ( unsigned int , unsigned int ) 
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
cpufreq_cooling_register s#thermal_cooling_device * cpufreq_cooling_register ( const s#cpumask * ) 
cpufreq_cooling_unregister void cpufreq_cooling_unregister ( s#thermal_cooling_device * ) 

/* drivers/thermal/thermal_core.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sec_path
s##neighbour
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
get_tz_trend int get_tz_trend ( s#thermal_zone_device * , int ) 
s#thermal_instance struct thermal_instance { int id ; char name [ 20 ] ; s#thermal_zone_device * tz ; s#thermal_cooling_device * cdev ; int trip ; unsigned long upper ; unsigned long lower ; unsigned long target ; char attr_name [ 20 ] ; s#device_attribute attr ; s#list_head tz_node ; s#list_head cdev_node ; } 
get_thermal_instance s#thermal_instance * get_thermal_instance ( s#thermal_zone_device * , s#thermal_cooling_device * , int ) 
thermal_zone_get_temp int thermal_zone_get_temp ( s#thermal_zone_device * , unsigned long * ) 
thermal_zone_device_update void thermal_zone_device_update ( s#thermal_zone_device * ) 
thermal_zone_bind_cooling_device int thermal_zone_bind_cooling_device ( s#thermal_zone_device * , int , s#thermal_cooling_device * , unsigned long , unsigned long ) 
thermal_zone_unbind_cooling_device int thermal_zone_unbind_cooling_device ( s#thermal_zone_device * , int , s#thermal_cooling_device * ) 
thermal_cooling_device_register s#thermal_cooling_device * thermal_cooling_device_register ( char * , void * , const s#thermal_cooling_device_ops * ) 
thermal_cooling_device_unregister void thermal_cooling_device_unregister ( s#thermal_cooling_device * ) 
thermal_cdev_update void thermal_cdev_update ( s#thermal_cooling_device * ) 
thermal_notify_framework void thermal_notify_framework ( s#thermal_zone_device * , int ) 
thermal_zone_device_register s#thermal_zone_device * thermal_zone_device_register ( const char * , int , int , void * , const s#thermal_zone_device_ops * , const s#thermal_zone_params * , int , int ) 
thermal_zone_device_unregister void thermal_zone_device_unregister ( s#thermal_zone_device * ) 
thermal_zone_get_zone_by_name s#thermal_zone_device * thermal_zone_get_zone_by_name ( const char * ) 
e#events enum events { THERMAL_AUX0 , THERMAL_AUX1 , THERMAL_CRITICAL , THERMAL_DEV_FAULT , } 
thermal_generate_netlink_event extern int thermal_generate_netlink_event ( s#thermal_zone_device * , e#events ) 

/* drivers/tty/hvc/hvc_console.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##device
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#hvc_struct struct hvc_struct { s#tty_port port ; t#spinlock_t lock ; int index ; int do_wakeup ; char * outbuf ; int outbuf_size ; int n_outbuf ; t#uint32_t vtermno ; const s#hv_ops * ops ; int irq_requested ; int data ; s#winsize ws ; s#work_struct tty_resize ; s#list_head next ; } 
s#hv_ops struct hv_ops { int ( * get_chars ) ( t#uint32_t , char * , int ) ; int ( * put_chars ) ( t#uint32_t , const char * , int ) ; int ( * notifier_add ) ( s#hvc_struct * , int ) ; void ( * notifier_del ) ( s#hvc_struct * , int ) ; void ( * notifier_hangup ) ( s#hvc_struct * , int ) ; int ( * tiocmget ) ( s#hvc_struct * ) ; int ( * tiocmset ) ( s#hvc_struct * , unsigned int , unsigned int ) ; void ( * dtr_rts ) ( s#hvc_struct * , int ) ; } 
hvc_instantiate extern int hvc_instantiate ( t#uint32_t , int , const s#hv_ops * ) 
hvc_kick void hvc_kick ( void ) 
hvc_poll int hvc_poll ( s#hvc_struct * ) 
__hvc_resize extern void __hvc_resize ( s#hvc_struct * , s#winsize ) 
hvc_alloc extern s#hvc_struct * hvc_alloc ( t#uint32_t , int , const s#hv_ops * , int ) 
hvc_remove extern int hvc_remove ( s#hvc_struct * ) 

/* drivers/tty/n_gsm.o */
s##gsm_mux
gsm_cleanup_mux void gsm_cleanup_mux ( s#gsm_mux * ) 
gsm_activate_mux int gsm_activate_mux ( s#gsm_mux * ) 
gsm_free_mux void gsm_free_mux ( s#gsm_mux * ) 
gsm_alloc_mux s#gsm_mux * gsm_alloc_mux ( void ) 

/* drivers/tty/n_tracesink.o */
n_tracesink_datadrain void n_tracesink_datadrain ( t#u8 * , int ) 

/* drivers/tty/n_tty.o */
s##device
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##seq_file
s##optimistic_spin_queue
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##proc_dir_entry
s##serial_icounter_struct
n_tty_inherit_ops extern void n_tty_inherit_ops ( s#tty_ldisc_ops * ) 

/* drivers/tty/serial/8250/8250_core.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
e#uart_pm_state enum uart_pm_state { UART_PM_STATE_ON = 0 , UART_PM_STATE_OFF = 3 , UART_PM_STATE_UNDEFINED , } 
s#circ_buf struct circ_buf { char * buf ; int head ; int tail ; } 
s#uart_state struct uart_state { s#tty_port port ; e#uart_pm_state pm_state ; s#circ_buf xmit ; s#uart_port * uart_port ; } 
s#uart_icount struct uart_icount { t#__u32 cts ; t#__u32 dsr ; t#__u32 rng ; t#__u32 dcd ; t#__u32 rx ; t#__u32 tx ; t#__u32 frame ; t#__u32 overrun ; t#__u32 parity ; t#__u32 brk ; t#__u32 buf_overrun ; } 
s#console struct console { char name [ 16 ] ; void ( * write ) ( s#console * , const char * , unsigned ) ; int ( * read ) ( s#console * , char * , unsigned ) ; s#tty_driver * ( * device ) ( s#console * , int * ) ; void ( * unblank ) ( void ) ; int ( * setup ) ( s#console * , char * ) ; int ( * early_setup ) ( void ) ; short flags ; short index ; int cflag ; void * data ; s#console * next ; } 
t#upf_t typedef unsigned int upf_t 
s#serial_struct struct serial_struct { int type ; int line ; unsigned int port ; int irq ; int flags ; int xmit_fifo_size ; int custom_divisor ; int baud_base ; unsigned short close_delay ; char io_type ; char reserved_char [ 1 ] ; int hub6 ; unsigned short closing_wait ; unsigned short closing_wait2 ; unsigned char * iomem_base ; unsigned short iomem_reg_shift ; unsigned int port_high ; unsigned long iomap_base ; } 
s#uart_ops struct uart_ops { unsigned int ( * tx_empty ) ( s#uart_port * ) ; void ( * set_mctrl ) ( s#uart_port * , unsigned int ) ; unsigned int ( * get_mctrl ) ( s#uart_port * ) ; void ( * stop_tx ) ( s#uart_port * ) ; void ( * start_tx ) ( s#uart_port * ) ; void ( * throttle ) ( s#uart_port * ) ; void ( * unthrottle ) ( s#uart_port * ) ; void ( * send_xchar ) ( s#uart_port * , char ) ; void ( * stop_rx ) ( s#uart_port * ) ; void ( * enable_ms ) ( s#uart_port * ) ; void ( * break_ctl ) ( s#uart_port * , int ) ; int ( * startup ) ( s#uart_port * ) ; void ( * shutdown ) ( s#uart_port * ) ; void ( * flush_buffer ) ( s#uart_port * ) ; void ( * set_termios ) ( s#uart_port * , s#ktermios * , s#ktermios * ) ; void ( * set_ldisc ) ( s#uart_port * , int ) ; void ( * pm ) ( s#uart_port * , unsigned int , unsigned int ) ; int ( * set_wake ) ( s#uart_port * , unsigned int ) ; const char * ( * type ) ( s#uart_port * ) ; void ( * release_port ) ( s#uart_port * ) ; int ( * request_port ) ( s#uart_port * ) ; void ( * config_port ) ( s#uart_port * , int ) ; int ( * verify_port ) ( s#uart_port * , s#serial_struct * ) ; int ( * ioctl ) ( s#uart_port * , unsigned int , unsigned long ) ; int ( * poll_init ) ( s#uart_port * ) ; void ( * poll_put_char ) ( s#uart_port * , unsigned char ) ; int ( * poll_get_char ) ( s#uart_port * ) ; } 
s#uart_port struct uart_port { t#spinlock_t lock ; unsigned long iobase ; unsigned char * membase ; unsigned int ( * serial_in ) ( s#uart_port * , int ) ; void ( * serial_out ) ( s#uart_port * , int , int ) ; void ( * set_termios ) ( s#uart_port * , s#ktermios * , s#ktermios * ) ; int ( * handle_irq ) ( s#uart_port * ) ; void ( * pm ) ( s#uart_port * , unsigned int , unsigned int ) ; void ( * handle_break ) ( s#uart_port * ) ; unsigned int irq ; unsigned long irqflags ; unsigned int uartclk ; unsigned int fifosize ; unsigned char x_char ; unsigned char regshift ; unsigned char iotype ; unsigned char unused1 ; unsigned int read_status_mask ; unsigned int ignore_status_mask ; s#uart_state * state ; s#uart_icount icount ; s#console * cons ; unsigned long sysrq ; t#upf_t flags ; unsigned int mctrl ; unsigned int timeout ; unsigned int type ; const s#uart_ops * ops ; unsigned int custom_divisor ; unsigned int line ; t#resource_size_t mapbase ; s#device * dev ; unsigned char hub6 ; unsigned char suspended ; unsigned char irq_wake ; unsigned char unused [ 2 ] ; void * private_data ; } 
s#uart_8250_dma struct uart_8250_dma { t#dma_filter_fn fn ; void * rx_param ; void * tx_param ; int rx_chan_id ; int tx_chan_id ; s#dma_slave_config rxconf ; s#dma_slave_config txconf ; s#dma_chan * rxchan ; s#dma_chan * txchan ; t#dma_addr_t rx_addr ; t#dma_addr_t tx_addr ; t#dma_cookie_t rx_cookie ; t#dma_cookie_t tx_cookie ; void * rx_buf ; t#size_t rx_size ; t#size_t tx_size ; unsigned char tx_running : 1 ; } 
s#uart_8250_port struct uart_8250_port { s#uart_port port ; s#timer_list timer ; s#list_head list ; unsigned short capabilities ; unsigned short bugs ; unsigned int tx_loadsz ; unsigned char acr ; unsigned char ier ; unsigned char lcr ; unsigned char mcr ; unsigned char mcr_mask ; unsigned char mcr_force ; unsigned char cur_iotype ; unsigned char lsr_saved_flags ; unsigned char msr_saved_flags ; s#uart_8250_dma * dma ; int ( * dl_read ) ( s#uart_8250_port * ) ; void ( * dl_write ) ( s#uart_8250_port * , int ) ; } 
serial8250_clear_and_reinit_fifos void serial8250_clear_and_reinit_fifos ( s#uart_8250_port * ) 
serial8250_rx_chars unsigned char serial8250_rx_chars ( s#uart_8250_port * , unsigned char ) 
serial8250_tx_chars void serial8250_tx_chars ( s#uart_8250_port * ) 
serial8250_modem_status unsigned int serial8250_modem_status ( s#uart_8250_port * ) 
serial8250_handle_irq int serial8250_handle_irq ( s#uart_port * , unsigned int ) 
serial8250_do_set_termios extern void serial8250_do_set_termios ( s#uart_port * , s#ktermios * , s#ktermios * ) 
serial8250_do_pm extern void serial8250_do_pm ( s#uart_port * , unsigned int , unsigned int ) 
serial8250_set_isa_configurator extern void serial8250_set_isa_configurator ( void ( * ) ( int , s#uart_port * , unsigned short * ) ) 
serial8250_register_8250_port int serial8250_register_8250_port ( s#uart_8250_port * ) 
serial8250_unregister_port void serial8250_unregister_port ( int ) 
serial8250_suspend_port void serial8250_suspend_port ( int ) 
serial8250_resume_port void serial8250_resume_port ( int ) 

/* drivers/tty/serial/8250/8250_dma.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##console
serial8250_tx_dma extern int serial8250_tx_dma ( s#uart_8250_port * ) 
serial8250_rx_dma extern int serial8250_rx_dma ( s#uart_8250_port * , unsigned int ) 
serial8250_request_dma extern int serial8250_request_dma ( s#uart_8250_port * ) 
serial8250_release_dma extern void serial8250_release_dma ( s#uart_8250_port * ) 

/* drivers/tty/serial/8250/8250_pci.o */
s##serial_private
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##user_namespace
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s#pciserial_board struct pciserial_board { unsigned int flags ; unsigned int num_ports ; unsigned int base_baud ; unsigned int uart_offset ; unsigned int reg_shift ; unsigned int first_offset ; } 
pciserial_init_ports s#serial_private * pciserial_init_ports ( s#pci_dev * , const s#pciserial_board * ) 
pciserial_remove_ports void pciserial_remove_ports ( s#serial_private * ) 
pciserial_suspend_ports void pciserial_suspend_ports ( s#serial_private * ) 
pciserial_resume_ports void pciserial_resume_ports ( s#serial_private * ) 

/* drivers/tty/serial/serial_core.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
uart_update_timeout void uart_update_timeout ( s#uart_port * , unsigned int , unsigned int ) 
uart_get_baud_rate unsigned int uart_get_baud_rate ( s#uart_port * , s#ktermios * , s#ktermios * , unsigned int , unsigned int ) 
uart_get_divisor unsigned int uart_get_divisor ( s#uart_port * , unsigned int ) 
uart_console_write void uart_console_write ( s#uart_port * , const char * , unsigned int , void ( * ) ( s#uart_port * , int ) ) 
uart_parse_options void uart_parse_options ( char * , int * , int * , int * , int * ) 
uart_set_options int uart_set_options ( s#uart_port * , s#console * , int , int , int , int ) 
uart_match_port int uart_match_port ( s#uart_port * , s#uart_port * ) 
uart_handle_dcd_change extern void uart_handle_dcd_change ( s#uart_port * , unsigned int ) 
uart_handle_cts_change extern void uart_handle_cts_change ( s#uart_port * , unsigned int ) 
uart_insert_char extern void uart_insert_char ( s#uart_port * , unsigned int , unsigned int , unsigned int , unsigned int ) 
uart_write_wakeup void uart_write_wakeup ( s#uart_port * ) 
s#uart_driver struct uart_driver { s#module * owner ; const char * driver_name ; const char * dev_name ; int major ; int minor ; int nr ; s#console * cons ; s#uart_state * state ; s#tty_driver * tty_driver ; } 
uart_register_driver int uart_register_driver ( s#uart_driver * ) 
uart_unregister_driver void uart_unregister_driver ( s#uart_driver * ) 
uart_suspend_port int uart_suspend_port ( s#uart_driver * , s#uart_port * ) 
uart_resume_port int uart_resume_port ( s#uart_driver * , s#uart_port * ) 
uart_add_one_port int uart_add_one_port ( s#uart_driver * , s#uart_port * ) 
uart_remove_one_port int uart_remove_one_port ( s#uart_driver * , s#uart_port * ) 

/* drivers/tty/sysrq.o */
handle_sysrq void handle_sysrq ( int ) 
s#sysrq_key_op struct sysrq_key_op { void ( * handler ) ( int ) ; char * help_msg ; char * action_msg ; int enable_mask ; } 
register_sysrq_key int register_sysrq_key ( int , s#sysrq_key_op * ) 
unregister_sysrq_key int unregister_sysrq_key ( int , s#sysrq_key_op * ) 

/* drivers/tty/tty_buffer.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##device
s##proc_dir_entry
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
tty_buffer_lock_exclusive extern void tty_buffer_lock_exclusive ( s#tty_port * ) 
tty_buffer_unlock_exclusive extern void tty_buffer_unlock_exclusive ( s#tty_port * ) 
tty_buffer_request_room extern int tty_buffer_request_room ( s#tty_port * , t#size_t ) 
tty_insert_flip_string_fixed_flag extern int tty_insert_flip_string_fixed_flag ( s#tty_port * , const unsigned char * , char , t#size_t ) 
tty_insert_flip_string_flags extern int tty_insert_flip_string_flags ( s#tty_port * , const unsigned char * , const char * , t#size_t ) 
tty_schedule_flip void tty_schedule_flip ( s#tty_port * ) 
tty_prepare_flip_string extern int tty_prepare_flip_string ( s#tty_port * , unsigned char * * , t#size_t ) 
tty_prepare_flip_string_flags extern int tty_prepare_flip_string_flags ( s#tty_port * , unsigned char * * , char * * , t#size_t ) 
tty_flip_buffer_push extern void tty_flip_buffer_push ( s#tty_port * ) 

/* drivers/tty/tty_io.o */
tty_std_termios extern s#ktermios tty_std_termios 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s#fdtable struct fdtable { unsigned int max_fds ; s#file * * fd ; unsigned long * close_on_exec ; unsigned long * open_fds ; s#callback_head rcu ; } 
s#files_struct struct files_struct { t#atomic_t count ; s#fdtable * fdt ; s#fdtable fdtab ; t#spinlock_t file_lock __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; int next_fd ; unsigned long close_on_exec_init [ 1 ] ; unsigned long open_fds_init [ 1 ] ; s#file * fd_array [ 64 ] ; } 
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
tty_mutex extern s#mutex tty_mutex 
tty_name extern char * tty_name ( s#tty_struct * , char * ) 
tty_find_polling_driver extern s#tty_driver * tty_find_polling_driver ( char * , int * ) 
tty_check_change extern int tty_check_change ( s#tty_struct * ) 
tty_wakeup extern void tty_wakeup ( s#tty_struct * ) 
tty_hangup extern void tty_hangup ( s#tty_struct * ) 
tty_vhangup extern void tty_vhangup ( s#tty_struct * ) 
tty_hung_up_p extern int tty_hung_up_p ( s#file * ) 
stop_tty extern void stop_tty ( s#tty_struct * ) 
start_tty extern void start_tty ( s#tty_struct * ) 
tty_init_termios extern int tty_init_termios ( s#tty_struct * ) 
tty_standard_install extern int tty_standard_install ( s#tty_driver * , s#tty_struct * ) 
tty_free_termios extern void tty_free_termios ( s#tty_struct * ) 
tty_kref_put extern void tty_kref_put ( s#tty_struct * ) 
tty_do_resize extern int tty_do_resize ( s#tty_struct * , s#winsize * ) 
tty_get_pgrp extern s#pid * tty_get_pgrp ( s#tty_struct * ) 
tty_pair_get_tty extern s#tty_struct * tty_pair_get_tty ( s#tty_struct * ) 
tty_pair_get_pty extern s#tty_struct * tty_pair_get_pty ( s#tty_struct * ) 
do_SAK extern void do_SAK ( s#tty_struct * ) 
tty_put_char extern int tty_put_char ( s#tty_struct * , unsigned char ) 
tty_register_device extern s#device * tty_register_device ( s#tty_driver * , unsigned , s#device * ) 
tty_register_device_attr extern s#device * tty_register_device_attr ( s#tty_driver * , unsigned , s#device * , void * , const s#attribute_group * * ) 
tty_unregister_device extern void tty_unregister_device ( s#tty_driver * , unsigned ) 
__tty_alloc_driver extern s#tty_driver * __tty_alloc_driver ( unsigned int , s#module * , unsigned long ) 
tty_driver_kref_put extern void tty_driver_kref_put ( s#tty_driver * ) 
tty_set_operations extern void tty_set_operations ( s#tty_driver * , const s#tty_operations * ) 
put_tty_driver extern void put_tty_driver ( s#tty_driver * ) 
tty_register_driver extern int tty_register_driver ( s#tty_driver * ) 
tty_unregister_driver extern int tty_unregister_driver ( s#tty_driver * ) 
tty_devnum extern t#dev_t tty_devnum ( s#tty_struct * ) 
get_current_tty extern s#tty_struct * get_current_tty ( void ) 

/* drivers/tty/tty_ioctl.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##proc_dir_entry
s##serial_icounter_struct
tty_chars_in_buffer extern int tty_chars_in_buffer ( s#tty_struct * ) 
tty_write_room extern int tty_write_room ( s#tty_struct * ) 
tty_driver_flush_buffer extern void tty_driver_flush_buffer ( s#tty_struct * ) 
tty_throttle extern void tty_throttle ( s#tty_struct * ) 
tty_unthrottle extern void tty_unthrottle ( s#tty_struct * ) 
tty_wait_until_sent extern void tty_wait_until_sent ( s#tty_struct * , long ) 
tty_termios_baud_rate extern t#speed_t tty_termios_baud_rate ( s#ktermios * ) 
tty_termios_input_baud_rate extern t#speed_t tty_termios_input_baud_rate ( s#ktermios * ) 
tty_termios_encode_baud_rate extern void tty_termios_encode_baud_rate ( s#ktermios * , t#speed_t , t#speed_t ) 
tty_encode_baud_rate extern void tty_encode_baud_rate ( s#tty_struct * , t#speed_t , t#speed_t ) 
tty_termios_copy_hw extern void tty_termios_copy_hw ( s#ktermios * , s#ktermios * ) 
tty_termios_hw_change extern int tty_termios_hw_change ( s#ktermios * , s#ktermios * ) 
tty_set_termios extern int tty_set_termios ( s#tty_struct * , s#ktermios * ) 
tty_mode_ioctl extern int tty_mode_ioctl ( s#tty_struct * , s#file * , unsigned int , unsigned long ) 
tty_perform_flush extern int tty_perform_flush ( s#tty_struct * , unsigned long ) 
n_tty_ioctl_helper extern int n_tty_ioctl_helper ( s#tty_struct * , s#file * , unsigned int , unsigned long ) 
n_tty_compat_ioctl_helper extern long n_tty_compat_ioctl_helper ( s#tty_struct * , s#file * , unsigned int , unsigned long ) 

/* drivers/tty/tty_ldisc.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##proc_dir_entry
s##serial_icounter_struct
tty_register_ldisc extern int tty_register_ldisc ( int , s#tty_ldisc_ops * ) 
tty_unregister_ldisc extern int tty_unregister_ldisc ( int ) 
tty_ldisc_ref_wait extern s#tty_ldisc * tty_ldisc_ref_wait ( s#tty_struct * ) 
tty_ldisc_ref extern s#tty_ldisc * tty_ldisc_ref ( s#tty_struct * ) 
tty_ldisc_deref extern void tty_ldisc_deref ( s#tty_ldisc * ) 
tty_ldisc_flush extern void tty_ldisc_flush ( s#tty_struct * ) 

/* drivers/tty/tty_mutex.o */
s##device
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##proc_dir_entry
s##serial_icounter_struct
tty_lock extern void __attribute__ ( ( section ( ".spinlock.text" ) ) ) tty_lock ( s#tty_struct * ) 
tty_unlock extern void __attribute__ ( ( section ( ".spinlock.text" ) ) ) tty_unlock ( s#tty_struct * ) 
tty_lock_pair extern void __attribute__ ( ( section ( ".spinlock.text" ) ) ) tty_lock_pair ( s#tty_struct * , s#tty_struct * ) 
tty_unlock_pair extern void __attribute__ ( ( section ( ".spinlock.text" ) ) ) tty_unlock_pair ( s#tty_struct * , s#tty_struct * ) 

/* drivers/tty/tty_port.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##device
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
tty_port_init extern void tty_port_init ( s#tty_port * ) 
tty_port_link_device extern void tty_port_link_device ( s#tty_port * , s#tty_driver * , unsigned ) 
tty_port_register_device extern s#device * tty_port_register_device ( s#tty_port * , s#tty_driver * , unsigned , s#device * ) 
tty_port_register_device_attr extern s#device * tty_port_register_device_attr ( s#tty_port * , s#tty_driver * , unsigned , s#device * , void * , const s#attribute_group * * ) 
tty_port_alloc_xmit_buf extern int tty_port_alloc_xmit_buf ( s#tty_port * ) 
tty_port_free_xmit_buf extern void tty_port_free_xmit_buf ( s#tty_port * ) 
tty_port_destroy extern void tty_port_destroy ( s#tty_port * ) 
tty_port_put extern void tty_port_put ( s#tty_port * ) 
tty_port_tty_get extern s#tty_struct * tty_port_tty_get ( s#tty_port * ) 
tty_port_tty_set extern void tty_port_tty_set ( s#tty_port * , s#tty_struct * ) 
tty_port_hangup extern void tty_port_hangup ( s#tty_port * ) 
tty_port_tty_hangup extern void tty_port_tty_hangup ( s#tty_port * , t#bool ) 
tty_port_tty_wakeup extern void tty_port_tty_wakeup ( s#tty_port * ) 
tty_port_carrier_raised extern int tty_port_carrier_raised ( s#tty_port * ) 
tty_port_raise_dtr_rts extern void tty_port_raise_dtr_rts ( s#tty_port * ) 
tty_port_lower_dtr_rts extern void tty_port_lower_dtr_rts ( s#tty_port * ) 
tty_port_block_til_ready extern int tty_port_block_til_ready ( s#tty_port * , s#tty_struct * , s#file * ) 
tty_port_close_start extern int tty_port_close_start ( s#tty_port * , s#tty_struct * , s#file * ) 
tty_port_close_end extern void tty_port_close_end ( s#tty_port * , s#tty_struct * ) 
tty_port_close extern void tty_port_close ( s#tty_port * , s#tty_struct * , s#file * ) 
tty_port_install extern int tty_port_install ( s#tty_port * , s#tty_driver * , s#tty_struct * ) 
tty_port_open extern int tty_port_open ( s#tty_port * , s#tty_struct * , s#file * ) 

/* drivers/tty/vt/consolemap.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##device
s##proc_dir_entry
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#console_font struct console_font { unsigned int width , height ; unsigned int charcount ; unsigned char * data ; } 
s#consw struct consw { s#module * owner ; const char * ( * con_startup ) ( void ) ; void ( * con_init ) ( s#vc_data * , int ) ; void ( * con_deinit ) ( s#vc_data * ) ; void ( * con_clear ) ( s#vc_data * , int , int , int , int ) ; void ( * con_putc ) ( s#vc_data * , int , int , int ) ; void ( * con_putcs ) ( s#vc_data * , const unsigned short * , int , int , int ) ; void ( * con_cursor ) ( s#vc_data * , int ) ; int ( * con_scroll ) ( s#vc_data * , int , int , int , int ) ; void ( * con_bmove ) ( s#vc_data * , int , int , int , int , int , int ) ; int ( * con_switch ) ( s#vc_data * ) ; int ( * con_blank ) ( s#vc_data * , int , int ) ; int ( * con_font_set ) ( s#vc_data * , s#console_font * , unsigned ) ; int ( * con_font_get ) ( s#vc_data * , s#console_font * ) ; int ( * con_font_default ) ( s#vc_data * , s#console_font * , char * ) ; int ( * con_font_copy ) ( s#vc_data * , int ) ; int ( * con_resize ) ( s#vc_data * , unsigned int , unsigned int , unsigned int ) ; int ( * con_set_palette ) ( s#vc_data * , unsigned char * ) ; int ( * con_scrolldelta ) ( s#vc_data * , int ) ; int ( * con_set_origin ) ( s#vc_data * ) ; void ( * con_save_screen ) ( s#vc_data * ) ; t#u8 ( * con_build_attr ) ( s#vc_data * , t#u8 , t#u8 , t#u8 , t#u8 , t#u8 , t#u8 ) ; void ( * con_invert_region ) ( s#vc_data * , t#u16 * , int ) ; t#u16 * ( * con_screen_pos ) ( s#vc_data * , int ) ; unsigned long ( * con_getxy ) ( s#vc_data * , unsigned long , int * , int * ) ; int ( * con_debug_enter ) ( s#vc_data * ) ; int ( * con_debug_leave ) ( s#vc_data * ) ; } 
s#vt_mode struct vt_mode { char mode ; char waitv ; short relsig ; short acqsig ; short frsig ; } 
s#vc_data struct vc_data { s#tty_port port ; unsigned short vc_num ; unsigned int vc_cols ; unsigned int vc_rows ; unsigned int vc_size_row ; unsigned int vc_scan_lines ; unsigned long vc_origin ; unsigned long vc_scr_end ; unsigned long vc_visible_origin ; unsigned int vc_top , vc_bottom ; const s#consw * vc_sw ; unsigned short * vc_screenbuf ; unsigned int vc_screenbuf_size ; unsigned char vc_mode ; unsigned char vc_attr ; unsigned char vc_def_color ; unsigned char vc_color ; unsigned char vc_s_color ; unsigned char vc_ulcolor ; unsigned char vc_itcolor ; unsigned char vc_halfcolor ; unsigned int vc_cursor_type ; unsigned short vc_complement_mask ; unsigned short vc_s_complement_mask ; unsigned int vc_x , vc_y ; unsigned int vc_saved_x , vc_saved_y ; unsigned long vc_pos ; unsigned short vc_hi_font_mask ; s#console_font vc_font ; unsigned short vc_video_erase_char ; unsigned int vc_state ; unsigned int vc_npar , vc_par [ 16 ] ; s#vt_mode vt_mode ; s#pid * vt_pid ; int vt_newvt ; t#wait_queue_head_t paste_wait ; unsigned int vc_charset : 1 ; unsigned int vc_s_charset : 1 ; unsigned int vc_disp_ctrl : 1 ; unsigned int vc_toggle_meta : 1 ; unsigned int vc_decscnm : 1 ; unsigned int vc_decom : 1 ; unsigned int vc_decawm : 1 ; unsigned int vc_deccm : 1 ; unsigned int vc_decim : 1 ; unsigned int vc_deccolm : 1 ; unsigned int vc_intensity : 2 ; unsigned int vc_italic : 1 ; unsigned int vc_underline : 1 ; unsigned int vc_blink : 1 ; unsigned int vc_reverse : 1 ; unsigned int vc_s_intensity : 2 ; unsigned int vc_s_italic : 1 ; unsigned int vc_s_underline : 1 ; unsigned int vc_s_blink : 1 ; unsigned int vc_s_reverse : 1 ; unsigned int vc_ques : 1 ; unsigned int vc_need_wrap : 1 ; unsigned int vc_can_do_color : 1 ; unsigned int vc_report_mouse : 2 ; unsigned char vc_utf : 1 ; unsigned char vc_utf_count ; int vc_utf_char ; unsigned int vc_tab_stop [ 8 ] ; unsigned char vc_palette [ 16 * 3 ] ; unsigned short * vc_translate ; unsigned char vc_G0_charset ; unsigned char vc_G1_charset ; unsigned char vc_saved_G0 ; unsigned char vc_saved_G1 ; unsigned int vc_resize_user ; unsigned int vc_bell_pitch ; unsigned int vc_bell_duration ; s#vc_data * * vc_display_fg ; unsigned long vc_uni_pagedir ; unsigned long * vc_uni_pagedir_loc ; t#bool vc_panic_force_write ; } 
inverse_translate extern t#u16 inverse_translate ( s#vc_data * , int , int ) 
con_set_default_unimap int con_set_default_unimap ( s#vc_data * ) 
con_copy_unimap int con_copy_unimap ( s#vc_data * , s#vc_data * ) 

/* drivers/tty/vt/keyboard.o */
register_keyboard_notifier extern int register_keyboard_notifier ( s#notifier_block * ) 
unregister_keyboard_notifier extern int unregister_keyboard_notifier ( s#notifier_block * ) 
kd_mksound extern void kd_mksound ( unsigned int , unsigned int ) 
vt_get_leds extern int vt_get_leds ( int , int ) 

/* drivers/tty/vt/vt.o */
register_vt_notifier extern int register_vt_notifier ( s#notifier_block * ) 
unregister_vt_notifier extern int unregister_vt_notifier ( s#notifier_block * ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##seq_file
s##optimistic_spin_queue
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##proc_dir_entry
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
do_unbind_con_driver extern int do_unbind_con_driver ( const s#consw * , int , int , int ) 
con_is_bound int con_is_bound ( const s#consw * ) 
con_debug_enter int con_debug_enter ( s#vc_data * ) 
con_debug_leave int con_debug_leave ( void ) 
do_unregister_con_driver int do_unregister_con_driver ( const s#consw * ) 
do_take_over_console int do_take_over_console ( const s#consw * , int , int , int ) 
do_blank_screen void do_blank_screen ( int ) 
do_unblank_screen void do_unblank_screen ( int ) 
screen_glyph extern t#u16 screen_glyph ( s#vc_data * , int ) 
color_table extern unsigned char color_table [ ] 
default_red extern int default_red [ ] 
default_grn extern int default_grn [ ] 
default_blu extern int default_blu [ ] 
update_region void update_region ( s#vc_data * , unsigned long , int ) 
redraw_screen void redraw_screen ( s#vc_data * , int ) 
vc_resize int vc_resize ( s#vc_data * , unsigned int , unsigned int ) 
fg_console extern int fg_console 
console_blank_hook int ( * console_blank_hook ) ( int ) 
console_blanked extern int console_blanked 
s#vc struct vc { s#vc_data * d ; s#work_struct SAK_work ; } 
vc_cons extern s#vc vc_cons [ 63 ] 
global_cursor_default extern int global_cursor_default 
give_up_console void give_up_console ( const s#consw * ) 

/* drivers/tty/vt/vt_ioctl.o */
pm_set_vt_switch extern void pm_set_vt_switch ( int ) 

/* drivers/uio/uio.o */
s##uio_device
s##uio_map
s#uio_mem struct uio_mem { const char * name ; t#phys_addr_t addr ; unsigned long size ; int memtype ; void * internal_addr ; s#uio_map * map ; } 
s##uio_portio
s#uio_port struct uio_port { const char * name ; unsigned long start ; unsigned long size ; int porttype ; s#uio_portio * portio ; } 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##radix_tree_node
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s#uio_info struct uio_info { s#uio_device * uio_dev ; const char * name ; const char * version ; s#uio_mem mem [ 5 ] ; s#uio_port port [ 5 ] ; long irq ; unsigned long irq_flags ; void * priv ; t#irqreturn_t ( * handler ) ( int , s#uio_info * ) ; int ( * mmap ) ( s#uio_info * , s#vm_area_struct * ) ; int ( * open ) ( s#uio_info * , s#inode * ) ; int ( * release ) ( s#uio_info * , s#inode * ) ; int ( * irqcontrol ) ( s#uio_info * , t#s32 ) ; } 
uio_event_notify extern void uio_event_notify ( s#uio_info * ) 
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
__uio_register_device extern int __uio_register_device ( s#module * , s#device * , s#uio_info * ) 
uio_unregister_device extern void uio_unregister_device ( s#uio_info * ) 

/* drivers/usb/class/cdc-wdm.o */
s##ep_device
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
usb_cdc_wdm_register extern s#usb_driver * usb_cdc_wdm_register ( s#usb_interface * , s#usb_endpoint_descriptor * , int , int ( * ) ( s#usb_interface * , int ) ) 

/* drivers/usb/common/usb-common.o */
e#usb_otg_state enum usb_otg_state { OTG_STATE_UNDEFINED = 0 , OTG_STATE_B_IDLE , OTG_STATE_B_SRP_INIT , OTG_STATE_B_PERIPHERAL , OTG_STATE_B_WAIT_ACON , OTG_STATE_B_HOST , OTG_STATE_A_IDLE , OTG_STATE_A_WAIT_VRISE , OTG_STATE_A_WAIT_BCON , OTG_STATE_A_HOST , OTG_STATE_A_SUSPEND , OTG_STATE_A_PERIPHERAL , OTG_STATE_A_WAIT_VFALL , OTG_STATE_A_VBUS_ERR , } 
usb_otg_state_string extern const char * usb_otg_state_string ( e#usb_otg_state ) 
usb_speed_string extern const char * usb_speed_string ( e#usb_device_speed ) 
usb_state_string extern const char * usb_state_string ( e#usb_device_state ) 
e#usb_dr_mode enum usb_dr_mode { USB_DR_MODE_UNKNOWN , USB_DR_MODE_HOST , USB_DR_MODE_PERIPHERAL , USB_DR_MODE_OTG , } 
s##proc_dir_entry
of_usb_get_dr_mode e#usb_dr_mode of_usb_get_dr_mode ( s#device_node * ) 
of_usb_get_maximum_speed e#usb_device_speed of_usb_get_maximum_speed ( s#device_node * ) 

/* drivers/usb/core/driver.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##subsys_private
s##iommu_group
s##iommu_ops
s##driver_private
usb_store_new_id extern t#ssize_t usb_store_new_id ( s#usb_dynids * , const s#usb_device_id * , s#device_driver * , const char * , t#size_t ) 
usb_show_dynids extern t#ssize_t usb_show_dynids ( s#usb_dynids * , char * ) 
s##ep_device
usb_driver_claim_interface extern int usb_driver_claim_interface ( s#usb_driver * , s#usb_interface * , void * ) 
usb_driver_release_interface extern void usb_driver_release_interface ( s#usb_driver * , s#usb_interface * ) 
usb_match_one_id extern int usb_match_one_id ( s#usb_interface * , const s#usb_device_id * ) 
usb_match_id const s#usb_device_id * usb_match_id ( s#usb_interface * , const s#usb_device_id * ) 
s#usb_tt struct usb_tt { s#usb_device * hub ; int multi ; unsigned think_time ; t#spinlock_t lock ; s#list_head clear_list ; s#work_struct clear_work ; void * suse_kabi_padding ; } 
s##mon_bus
s##wusb_dev
s#usb_device_driver struct usb_device_driver { const char * name ; int ( * probe ) ( s#usb_device * ) ; void ( * disconnect ) ( s#usb_device * ) ; int ( * suspend ) ( s#usb_device * , t#pm_message_t ) ; int ( * resume ) ( s#usb_device * , t#pm_message_t ) ; s#usbdrv_wrap drvwrap ; unsigned int supports_autosuspend : 1 ; void * suse_kabi_padding ; } 
usb_register_device_driver extern int usb_register_device_driver ( s#usb_device_driver * , s#module * ) 
usb_deregister_device_driver extern void usb_deregister_device_driver ( s#usb_device_driver * ) 
usb_register_driver extern int usb_register_driver ( s#usb_driver * , s#module * , const char * ) 
usb_deregister extern void usb_deregister ( s#usb_driver * ) 
usb_enable_autosuspend extern void usb_enable_autosuspend ( s#usb_device * ) 
usb_disable_autosuspend extern void usb_disable_autosuspend ( s#usb_device * ) 
usb_autopm_put_interface extern void usb_autopm_put_interface ( s#usb_interface * ) 
usb_autopm_put_interface_async extern void usb_autopm_put_interface_async ( s#usb_interface * ) 
usb_autopm_put_interface_no_suspend extern void usb_autopm_put_interface_no_suspend ( s#usb_interface * ) 
usb_autopm_get_interface extern int usb_autopm_get_interface ( s#usb_interface * ) 
usb_autopm_get_interface_async extern int usb_autopm_get_interface_async ( s#usb_interface * ) 
usb_autopm_get_interface_no_resume extern void usb_autopm_get_interface_no_resume ( s#usb_interface * ) 

/* drivers/usb/core/file.o */
s##ep_device
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s#usb_class_driver struct usb_class_driver { char * name ; char * ( * devnode ) ( s#device * , t#umode_t * ) ; const s#file_operations * fops ; int minor_base ; } 
usb_register_dev extern int usb_register_dev ( s#usb_interface * , s#usb_class_driver * ) 
usb_deregister_dev extern void usb_deregister_dev ( s#usb_interface * , s#usb_class_driver * ) 

/* drivers/usb/core/hcd.o */
usb_hcds_loaded extern unsigned long usb_hcds_loaded 
usb_bus_list extern s#list_head usb_bus_list 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
usb_bus_list_lock extern s#mutex usb_bus_list_lock 
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##ep_device
s##wusb_dev
s##mon_bus
e#usb3_link_state enum usb3_link_state { USB3_LPM_U0 = 0 , USB3_LPM_U1 , USB3_LPM_U2 , USB3_LPM_U3 } 
s#hc_driver struct hc_driver { const char * description ; const char * product_desc ; t#size_t hcd_priv_size ; t#irqreturn_t ( * irq ) ( s#usb_hcd * ) ; int flags ; int ( * reset ) ( s#usb_hcd * ) ; int ( * start ) ( s#usb_hcd * ) ; int ( * pci_suspend ) ( s#usb_hcd * , t#bool ) ; int ( * pci_resume ) ( s#usb_hcd * , t#bool ) ; void ( * stop ) ( s#usb_hcd * ) ; void ( * shutdown ) ( s#usb_hcd * ) ; int ( * get_frame_number ) ( s#usb_hcd * ) ; int ( * urb_enqueue ) ( s#usb_hcd * , s#urb * , t#gfp_t ) ; int ( * urb_dequeue ) ( s#usb_hcd * , s#urb * , int ) ; int ( * map_urb_for_dma ) ( s#usb_hcd * , s#urb * , t#gfp_t ) ; void ( * unmap_urb_for_dma ) ( s#usb_hcd * , s#urb * ) ; void ( * endpoint_disable ) ( s#usb_hcd * , s#usb_host_endpoint * ) ; void ( * endpoint_reset ) ( s#usb_hcd * , s#usb_host_endpoint * ) ; int ( * hub_status_data ) ( s#usb_hcd * , char * ) ; int ( * hub_control ) ( s#usb_hcd * , t#u16 , t#u16 , t#u16 , char * , t#u16 ) ; int ( * bus_suspend ) ( s#usb_hcd * ) ; int ( * bus_resume ) ( s#usb_hcd * ) ; int ( * start_port_reset ) ( s#usb_hcd * , unsigned ) ; void ( * relinquish_port ) ( s#usb_hcd * , int ) ; int ( * port_handed_over ) ( s#usb_hcd * , int ) ; void ( * clear_tt_buffer_complete ) ( s#usb_hcd * , s#usb_host_endpoint * ) ; int ( * alloc_dev ) ( s#usb_hcd * , s#usb_device * ) ; void ( * free_dev ) ( s#usb_hcd * , s#usb_device * ) ; int ( * alloc_streams ) ( s#usb_hcd * , s#usb_device * , s#usb_host_endpoint * * , unsigned int , unsigned int , t#gfp_t ) ; int ( * free_streams ) ( s#usb_hcd * , s#usb_device * , s#usb_host_endpoint * * , unsigned int , t#gfp_t ) ; int ( * add_endpoint ) ( s#usb_hcd * , s#usb_device * , s#usb_host_endpoint * ) ; int ( * drop_endpoint ) ( s#usb_hcd * , s#usb_device * , s#usb_host_endpoint * ) ; int ( * check_bandwidth ) ( s#usb_hcd * , s#usb_device * ) ; void ( * reset_bandwidth ) ( s#usb_hcd * , s#usb_device * ) ; int ( * address_device ) ( s#usb_hcd * , s#usb_device * ) ; int ( * enable_device ) ( s#usb_hcd * , s#usb_device * ) ; int ( * update_hub_device ) ( s#usb_hcd * , s#usb_device * , s#usb_tt * , t#gfp_t ) ; int ( * reset_device ) ( s#usb_hcd * , s#usb_device * ) ; int ( * update_device ) ( s#usb_hcd * , s#usb_device * ) ; int ( * set_usb2_hw_lpm ) ( s#usb_hcd * , s#usb_device * , int ) ; int ( * enable_usb3_lpm_timeout ) ( s#usb_hcd * , s#usb_device * , e#usb3_link_state ) ; int ( * disable_usb3_lpm_timeout ) ( s#usb_hcd * , s#usb_device * , e#usb3_link_state ) ; int ( * find_raw_port_number ) ( s#usb_hcd * , int ) ; void * suse_kabi_padding ; } 
e#usb_phy_type enum usb_phy_type { USB_PHY_TYPE_UNDEFINED , USB_PHY_TYPE_USB2 , USB_PHY_TYPE_USB3 , } 
e#usb_phy_events enum usb_phy_events { USB_EVENT_NONE , USB_EVENT_VBUS , USB_EVENT_ID , USB_EVENT_CHARGER , USB_EVENT_ENUMERATED , } 
s##usb_otg
s#usb_phy_io_ops struct usb_phy_io_ops { int ( * read ) ( s#usb_phy * , t#u32 ) ; int ( * write ) ( s#usb_phy * , t#u32 , t#u32 ) ; } 
s#usb_phy struct usb_phy { s#device * dev ; const char * label ; unsigned int flags ; e#usb_phy_type type ; e#usb_otg_state state ; e#usb_phy_events last_event ; s#usb_otg * otg ; s#device * io_dev ; s#usb_phy_io_ops * io_ops ; void * io_priv ; s#atomic_notifier_head notifier ; t#u16 port_status ; t#u16 port_change ; s#list_head head ; int ( * init ) ( s#usb_phy * ) ; void ( * shutdown ) ( s#usb_phy * ) ; int ( * set_vbus ) ( s#usb_phy * , int ) ; int ( * set_power ) ( s#usb_phy * , unsigned ) ; int ( * set_suspend ) ( s#usb_phy * , int ) ; int ( * notify_connect ) ( s#usb_phy * , e#usb_device_speed ) ; int ( * notify_disconnect ) ( s#usb_phy * , e#usb_device_speed ) ; } 
s#giveback_urb_bh struct giveback_urb_bh { t#bool running ; t#spinlock_t lock ; s#list_head head ; s#tasklet_struct bh ; s#usb_host_endpoint * completing_ep ; } 
s##dma_pool
s#usb_hcd struct usb_hcd { s#usb_bus self ; s#kref kref ; const char * product_desc ; int speed ; char irq_descr [ 24 ] ; s#timer_list rh_timer ; s#urb * status_urb ; s#work_struct wakeup_work ; const s#hc_driver * driver ; s#usb_phy * phy ; unsigned long flags ; unsigned rh_registered : 1 ; unsigned rh_pollable : 1 ; unsigned msix_enabled : 1 ; unsigned remove_phy : 1 ; unsigned uses_new_polling : 1 ; unsigned wireless : 1 ; unsigned authorized_default : 1 ; unsigned has_tt : 1 ; unsigned amd_resume_bug : 1 ; unsigned can_do_streams : 1 ; unsigned int irq ; void * regs ; t#resource_size_t rsrc_start ; t#resource_size_t rsrc_len ; unsigned power_budget ; s#giveback_urb_bh high_prio_bh ; s#giveback_urb_bh low_prio_bh ; s#mutex * bandwidth_mutex ; s#usb_hcd * shared_hcd ; s#usb_hcd * primary_hcd ; s#dma_pool * pool [ 4 ] ; int state ; void * suse_kabi_padding ; unsigned long hcd_priv [ 0 ] __attribute__ ( ( aligned ( sizeof ( s64 ) ) ) ) ; } 
usb_hcd_poll_rh_status extern void usb_hcd_poll_rh_status ( s#usb_hcd * ) 
usb_hcd_start_port_resume extern void usb_hcd_start_port_resume ( s#usb_bus * , int ) 
usb_hcd_end_port_resume extern void usb_hcd_end_port_resume ( s#usb_bus * , int ) 
usb_calc_bus_time extern long usb_calc_bus_time ( int , int , int , int ) 
usb_hcd_link_urb_to_ep extern int usb_hcd_link_urb_to_ep ( s#usb_hcd * , s#urb * ) 
usb_hcd_check_unlink_urb extern int usb_hcd_check_unlink_urb ( s#usb_hcd * , s#urb * , int ) 
usb_hcd_unlink_urb_from_ep extern void usb_hcd_unlink_urb_from_ep ( s#usb_hcd * , s#urb * ) 
usb_hcd_unmap_urb_setup_for_dma extern void usb_hcd_unmap_urb_setup_for_dma ( s#usb_hcd * , s#urb * ) 
usb_hcd_unmap_urb_for_dma extern void usb_hcd_unmap_urb_for_dma ( s#usb_hcd * , s#urb * ) 
usb_hcd_map_urb_for_dma extern int usb_hcd_map_urb_for_dma ( s#usb_hcd * , s#urb * , t#gfp_t ) 
usb_hcd_giveback_urb extern void usb_hcd_giveback_urb ( s#usb_hcd * , s#urb * , int ) 
usb_alloc_streams extern int usb_alloc_streams ( s#usb_interface * , s#usb_host_endpoint * * , unsigned int , unsigned int , t#gfp_t ) 
usb_free_streams extern int usb_free_streams ( s#usb_interface * , s#usb_host_endpoint * * , unsigned int , t#gfp_t ) 
usb_hcd_resume_root_hub extern void usb_hcd_resume_root_hub ( s#usb_hcd * ) 
usb_hcd_irq extern t#irqreturn_t usb_hcd_irq ( int , void * ) 
usb_hc_died extern void usb_hc_died ( s#usb_hcd * ) 
usb_create_shared_hcd extern s#usb_hcd * usb_create_shared_hcd ( const s#hc_driver * , s#device * , const char * , s#usb_hcd * ) 
usb_create_hcd extern s#usb_hcd * usb_create_hcd ( const s#hc_driver * , s#device * , const char * ) 
usb_get_hcd extern s#usb_hcd * usb_get_hcd ( s#usb_hcd * ) 
usb_put_hcd extern void usb_put_hcd ( s#usb_hcd * ) 
usb_hcd_is_primary_hcd extern int usb_hcd_is_primary_hcd ( s#usb_hcd * ) 
usb_add_hcd extern int usb_add_hcd ( s#usb_hcd * , unsigned int , unsigned long ) 
usb_remove_hcd extern void usb_remove_hcd ( s#usb_hcd * ) 
s##mfd_cell
usb_hcd_platform_shutdown extern void usb_hcd_platform_shutdown ( s#platform_device * ) 
s#usb_mon_operations struct usb_mon_operations { void ( * urb_submit ) ( s#usb_bus * , s#urb * ) ; void ( * urb_submit_error ) ( s#usb_bus * , s#urb * , int ) ; void ( * urb_complete ) ( s#usb_bus * , s#urb * , int ) ; } 
usb_mon_register int usb_mon_register ( s#usb_mon_operations * ) 
usb_mon_deregister void usb_mon_deregister ( void ) 

/* drivers/usb/core/hcd-pci.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
usb_hcd_pci_probe extern int usb_hcd_pci_probe ( s#pci_dev * , const s#pci_device_id * ) 
usb_hcd_pci_remove extern void usb_hcd_pci_remove ( s#pci_dev * ) 
usb_hcd_pci_shutdown extern void usb_hcd_pci_shutdown ( s#pci_dev * ) 
usb_hcd_pci_pm_ops extern const s#dev_pm_ops usb_hcd_pci_pm_ops 

/* drivers/usb/core/hub.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
ehci_cf_port_reset_rwsem extern s#rw_semaphore ehci_cf_port_reset_rwsem 
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mon_bus
s##ep_device
s##wusb_dev
usb_wakeup_notification extern void usb_wakeup_notification ( s#usb_device * , unsigned int ) 
usb_hub_clear_tt_buffer extern int usb_hub_clear_tt_buffer ( s#urb * ) 
s##usb_dev_state
usb_hub_claim_port int usb_hub_claim_port ( s#usb_device * , unsigned , s#usb_dev_state * ) 
usb_hub_release_port int usb_hub_release_port ( s#usb_device * , unsigned , s#usb_dev_state * ) 
usb_set_device_state extern void usb_set_device_state ( s#usb_device * , e#usb_device_state ) 
usb_disable_ltm extern int usb_disable_ltm ( s#usb_device * ) 
usb_enable_ltm extern void usb_enable_ltm ( s#usb_device * ) 
usb_root_hub_lost_power extern void usb_root_hub_lost_power ( s#usb_device * ) 
usb_disable_lpm extern int usb_disable_lpm ( s#usb_device * ) 
usb_unlocked_disable_lpm extern int usb_unlocked_disable_lpm ( s#usb_device * ) 
usb_enable_lpm extern void usb_enable_lpm ( s#usb_device * ) 
usb_unlocked_enable_lpm extern void usb_unlocked_enable_lpm ( s#usb_device * ) 
usb_ep0_reinit extern void usb_ep0_reinit ( s#usb_device * ) 
usb_reset_device extern int usb_reset_device ( s#usb_device * ) 
usb_queue_reset_device extern void usb_queue_reset_device ( s#usb_interface * ) 
usb_hub_find_child extern s#usb_device * usb_hub_find_child ( s#usb_device * , int ) 

/* drivers/usb/core/message.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mon_bus
s##ep_device
s##wusb_dev
usb_control_msg extern int usb_control_msg ( s#usb_device * , unsigned int , t#__u8 , t#__u8 , t#__u16 , t#__u16 , void * , t#__u16 , int ) 
usb_interrupt_msg extern int usb_interrupt_msg ( s#usb_device * , unsigned int , void * , int , int * , int ) 
usb_bulk_msg extern int usb_bulk_msg ( s#usb_device * , unsigned int , void * , int , int * , int ) 
s#usb_sg_request struct usb_sg_request { int status ; t#size_t bytes ; t#spinlock_t lock ; s#usb_device * dev ; int pipe ; int entries ; s#urb * * urbs ; int count ; s#completion complete ; } 
usb_sg_init int usb_sg_init ( s#usb_sg_request * , s#usb_device * , unsigned , unsigned , s#scatterlist * , int , t#size_t , t#gfp_t ) 
usb_sg_wait void usb_sg_wait ( s#usb_sg_request * ) 
usb_sg_cancel void usb_sg_cancel ( s#usb_sg_request * ) 
usb_get_descriptor extern int usb_get_descriptor ( s#usb_device * , unsigned char , unsigned char , void * , int ) 
usb_string extern int usb_string ( s#usb_device * , int , char * , t#size_t ) 
usb_get_status extern int usb_get_status ( s#usb_device * , int , int , void * ) 
usb_clear_halt extern int usb_clear_halt ( s#usb_device * , int ) 
usb_reset_endpoint extern void usb_reset_endpoint ( s#usb_device * , unsigned int ) 
usb_set_interface extern int usb_set_interface ( s#usb_device * , int , int ) 
usb_reset_configuration extern int usb_reset_configuration ( s#usb_device * ) 
usb_driver_set_configuration extern int usb_driver_set_configuration ( s#usb_device * , int ) 

/* drivers/usb/core/notify.o */
usb_register_notify extern void usb_register_notify ( s#notifier_block * ) 
usb_unregister_notify extern void usb_unregister_notify ( s#notifier_block * ) 

/* drivers/usb/core/urb.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mon_bus
s##ep_device
s##wusb_dev
usb_init_urb extern void usb_init_urb ( s#urb * ) 
usb_alloc_urb extern s#urb * usb_alloc_urb ( int , t#gfp_t ) 
usb_free_urb extern void usb_free_urb ( s#urb * ) 
usb_get_urb extern s#urb * usb_get_urb ( s#urb * ) 
usb_anchor_urb extern void usb_anchor_urb ( s#urb * , s#usb_anchor * ) 
usb_unanchor_urb extern void usb_unanchor_urb ( s#urb * ) 
usb_submit_urb extern int usb_submit_urb ( s#urb * , t#gfp_t ) 
usb_unlink_urb extern int usb_unlink_urb ( s#urb * ) 
usb_kill_urb extern void usb_kill_urb ( s#urb * ) 
usb_poison_urb extern void usb_poison_urb ( s#urb * ) 
usb_unpoison_urb extern void usb_unpoison_urb ( s#urb * ) 
usb_block_urb extern void usb_block_urb ( s#urb * ) 
usb_kill_anchored_urbs extern void usb_kill_anchored_urbs ( s#usb_anchor * ) 
usb_poison_anchored_urbs extern void usb_poison_anchored_urbs ( s#usb_anchor * ) 
usb_unpoison_anchored_urbs extern void usb_unpoison_anchored_urbs ( s#usb_anchor * ) 
usb_unlink_anchored_urbs extern void usb_unlink_anchored_urbs ( s#usb_anchor * ) 
usb_wait_anchor_empty_timeout extern int usb_wait_anchor_empty_timeout ( s#usb_anchor * , unsigned int ) 
usb_get_from_anchor extern s#urb * usb_get_from_anchor ( s#usb_anchor * ) 
usb_scuttle_anchored_urbs extern void usb_scuttle_anchored_urbs ( s#usb_anchor * ) 
usb_anchor_empty extern int usb_anchor_empty ( s#usb_anchor * ) 

/* drivers/usb/core/usb.o */
s##ep_device
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
usb_find_alt_setting extern s#usb_host_interface * usb_find_alt_setting ( s#usb_host_config * , unsigned int , unsigned int ) 
s##mon_bus
s##wusb_dev
usb_ifnum_to_if extern s#usb_interface * usb_ifnum_to_if ( const s#usb_device * , unsigned ) 
usb_altnum_to_altsetting extern s#usb_host_interface * usb_altnum_to_altsetting ( const s#usb_interface * , unsigned int ) 
usb_find_interface extern s#usb_interface * usb_find_interface ( s#usb_driver * , int ) 
usb_for_each_dev extern int usb_for_each_dev ( void * , int ( * ) ( s#usb_device * , void * ) ) 
usb_get_dev extern s#usb_device * usb_get_dev ( s#usb_device * ) 
usb_put_dev extern void usb_put_dev ( s#usb_device * ) 
usb_get_intf s#usb_interface * usb_get_intf ( s#usb_interface * ) 
usb_put_intf void usb_put_intf ( s#usb_interface * ) 
usb_lock_device_for_reset extern int usb_lock_device_for_reset ( s#usb_device * , const s#usb_interface * ) 
usb_get_current_frame_number extern int usb_get_current_frame_number ( s#usb_device * ) 
__usb_get_extra_descriptor int __usb_get_extra_descriptor ( char * , unsigned , unsigned char , void * * ) 
usb_alloc_coherent void * usb_alloc_coherent ( s#usb_device * , t#size_t , t#gfp_t , t#dma_addr_t * ) 
usb_free_coherent void usb_free_coherent ( s#usb_device * , t#size_t , void * , t#dma_addr_t ) 
usb_disabled extern int usb_disabled ( void ) 
usb_debug_root extern s#dentry * usb_debug_root 

/* drivers/usb/host/ehci-hcd.o */
e#ehci_hrtimer_event enum ehci_hrtimer_event { EHCI_HRTIMER_POLL_ASS , EHCI_HRTIMER_POLL_PSS , EHCI_HRTIMER_POLL_DEAD , EHCI_HRTIMER_UNLINK_INTR , EHCI_HRTIMER_FREE_ITDS , EHCI_HRTIMER_START_UNLINK_INTR , EHCI_HRTIMER_ASYNC_UNLINKS , EHCI_HRTIMER_IAA_WATCHDOG , EHCI_HRTIMER_DISABLE_PERIODIC , EHCI_HRTIMER_DISABLE_ASYNC , EHCI_HRTIMER_IO_WATCHDOG , EHCI_HRTIMER_NUM_EVENTS } 
E#EHCI_HRTIMER_NUM_EVENTS 11 
s#ehci_caps struct ehci_caps { t#u32 hc_capbase ; t#u32 hcs_params ; t#u32 hcc_params ; t#u8 portroute [ 8 ] ; } 
s#ehci_regs struct ehci_regs { t#u32 command ; t#u32 status ; t#u32 intr_enable ; t#u32 frame_index ; t#u32 segment ; t#u32 frame_list ; t#u32 async_next ; t#u32 reserved1 [ 2 ] ; t#u32 txfill_tuning ; t#u32 reserved2 [ 6 ] ; t#u32 configured_flag ; t#u32 port_status [ 0 ] ; t#u32 reserved3 [ 9 ] ; t#u32 usbmode ; t#u32 reserved4 [ 6 ] ; t#u32 hostpc [ 1 ] ; t#u32 reserved5 [ 16 ] ; t#u32 usbmode_ex ; } 
s#ehci_dbg_port struct ehci_dbg_port { t#u32 control ; t#u32 pids ; t#u32 data03 ; t#u32 data47 ; t#u32 address ; } 
e#ehci_rh_state enum ehci_rh_state { EHCI_RH_HALTED , EHCI_RH_SUSPENDED , EHCI_RH_RUNNING , EHCI_RH_STOPPING } 
s#ehci_qh_hw struct ehci_qh_hw { t#__le32 hw_next ; t#__le32 hw_info1 ; t#__le32 hw_info2 ; t#__le32 hw_current ; t#__le32 hw_qtd_next ; t#__le32 hw_alt_next ; t#__le32 hw_token ; t#__le32 hw_buf [ 5 ] ; t#__le32 hw_buf_hi [ 5 ] ; } 
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mon_bus
s##ep_device
s##wusb_dev
s#ehci_iso_stream struct ehci_iso_stream { s#ehci_qh_hw * hw ; t#u8 bEndpointAddress ; t#u8 highspeed ; s#list_head td_list ; s#list_head free_list ; s#usb_device * udev ; s#usb_host_endpoint * ep ; int next_uframe ; t#__le32 splits ; t#u8 usecs , c_usecs ; t#u16 interval ; t#u16 tt_usecs ; t#u16 maxp ; t#u16 raw_mask ; unsigned bandwidth ; t#__le32 buf0 ; t#__le32 buf1 ; t#__le32 buf2 ; t#__le32 address ; } 
s#ehci_itd struct ehci_itd { t#__le32 hw_next ; t#__le32 hw_transaction [ 8 ] ; t#__le32 hw_bufp [ 7 ] ; t#__le32 hw_bufp_hi [ 7 ] ; t#dma_addr_t itd_dma ; u#ehci_shadow itd_next ; s#urb * urb ; s#ehci_iso_stream * stream ; s#list_head itd_list ; unsigned frame ; unsigned pg ; unsigned index [ 8 ] ; } 
s#ehci_sitd struct ehci_sitd { t#__le32 hw_next ; t#__le32 hw_fullspeed_ep ; t#__le32 hw_uframe ; t#__le32 hw_results ; t#__le32 hw_buf [ 2 ] ; t#__le32 hw_backpointer ; t#__le32 hw_buf_hi [ 2 ] ; t#dma_addr_t sitd_dma ; u#ehci_shadow sitd_next ; s#urb * urb ; s#ehci_iso_stream * stream ; s#list_head sitd_list ; unsigned frame ; unsigned index ; } 
s#ehci_fstn struct ehci_fstn { t#__le32 hw_next ; t#__le32 hw_prev ; t#dma_addr_t fstn_dma ; u#ehci_shadow fstn_next ; } 
u#ehci_shadow union ehci_shadow { s#ehci_qh * qh ; s#ehci_itd * itd ; s#ehci_sitd * sitd ; s#ehci_fstn * fstn ; t#__le32 * hw_next ; void * ptr ; } 
s#ehci_qtd struct ehci_qtd { t#__le32 hw_next ; t#__le32 hw_alt_next ; t#__le32 hw_token ; t#__le32 hw_buf [ 5 ] ; t#__le32 hw_buf_hi [ 5 ] ; t#dma_addr_t qtd_dma ; s#list_head qtd_list ; s#urb * urb ; t#size_t length ; } 
s#ehci_qh struct ehci_qh { s#ehci_qh_hw * hw ; t#dma_addr_t qh_dma ; u#ehci_shadow qh_next ; s#list_head qtd_list ; s#list_head intr_node ; s#ehci_qtd * dummy ; s#list_head unlink_node ; unsigned unlink_cycle ; t#u8 qh_state ; t#u8 xacterrs ; t#u8 usecs ; t#u8 gap_uf ; t#u8 c_usecs ; t#u16 tt_usecs ; unsigned short period ; unsigned short start ; s#usb_device * dev ; unsigned is_out : 1 ; unsigned clearing_tt : 1 ; unsigned dequeue_during_giveback : 1 ; unsigned exception : 1 ; } 
s##dma_pool
s#ehci_stats struct ehci_stats { unsigned long normal ; unsigned long error ; unsigned long iaa ; unsigned long lost_iaa ; unsigned long complete ; unsigned long unlink ; } 
s#ehci_hcd struct ehci_hcd { e#ehci_hrtimer_event next_hrtimer_event ; unsigned enabled_hrtimer_events ; t#ktime_t hr_timeouts [ E#EHCI_HRTIMER_NUM_EVENTS ] ; s#hrtimer hrtimer ; int PSS_poll_count ; int ASS_poll_count ; int died_poll_count ; s#ehci_caps * caps ; s#ehci_regs * regs ; s#ehci_dbg_port * debug ; t#__u32 hcs_params ; t#spinlock_t lock ; e#ehci_rh_state rh_state ; t#bool scanning : 1 ; t#bool need_rescan : 1 ; t#bool intr_unlinking : 1 ; t#bool iaa_in_progress : 1 ; t#bool async_unlinking : 1 ; t#bool shutdown : 1 ; s#ehci_qh * qh_scan_next ; s#ehci_qh * async ; s#ehci_qh * dummy ; s#list_head async_unlink ; s#list_head async_idle ; unsigned async_unlink_cycle ; unsigned async_count ; unsigned periodic_size ; t#__le32 * periodic ; t#dma_addr_t periodic_dma ; s#list_head intr_qh_list ; unsigned i_thresh ; u#ehci_shadow * pshadow ; s#list_head intr_unlink_wait ; s#list_head intr_unlink ; unsigned intr_unlink_wait_cycle ; unsigned intr_unlink_cycle ; unsigned now_frame ; unsigned last_iso_frame ; unsigned intr_count ; unsigned isoc_count ; unsigned periodic_count ; unsigned uframe_periodic_max ; s#list_head cached_itd_list ; s#ehci_itd * last_itd_to_free ; s#list_head cached_sitd_list ; s#ehci_sitd * last_sitd_to_free ; unsigned long reset_done [ 15 ] ; unsigned long bus_suspended ; unsigned long companion_ports ; unsigned long owned_ports ; unsigned long port_c_suspend ; unsigned long suspended_ports ; unsigned long resuming_ports ; s#dma_pool * qh_pool ; s#dma_pool * qtd_pool ; s#dma_pool * itd_pool ; s#dma_pool * sitd_pool ; unsigned random_frame ; unsigned long next_statechange ; t#ktime_t last_periodic_enable ; t#u32 command ; unsigned no_selective_suspend : 1 ; unsigned has_fsl_port_bug : 1 ; unsigned big_endian_mmio : 1 ; unsigned big_endian_desc : 1 ; unsigned big_endian_capbase : 1 ; unsigned has_amcc_usb23 : 1 ; unsigned need_io_watchdog : 1 ; unsigned amd_pll_fix : 1 ; unsigned use_dummy_qh : 1 ; unsigned has_synopsys_hc_bug : 1 ; unsigned frame_index_bug : 1 ; unsigned need_oc_pp_cycle : 1 ; unsigned imx28_write_fix : 1 ; t#__le32 * ohci_hcctrl_reg ; unsigned has_hostpc : 1 ; unsigned has_tdi_phy_lpm : 1 ; unsigned has_ppcd : 1 ; t#u8 sbrn ; s#ehci_stats stats ; s#dentry * debug_dir ; unsigned long priv [ 0 ] __attribute__ ( ( aligned ( sizeof ( s64 ) ) ) ) ; } 
ehci_handshake extern int ehci_handshake ( s#ehci_hcd * , void * , t#u32 , t#u32 , int ) 
s##usb_gadget
s#usb_otg struct usb_otg { t#u8 default_a ; s#usb_phy * phy ; s#usb_bus * host ; s#usb_gadget * gadget ; int ( * set_host ) ( s#usb_otg * , s#usb_bus * ) ; int ( * set_peripheral ) ( s#usb_otg * , s#usb_gadget * ) ; int ( * set_vbus ) ( s#usb_otg * , t#bool ) ; int ( * start_srp ) ( s#usb_otg * ) ; int ( * start_hnp ) ( s#usb_otg * ) ; } 
ehci_setup extern int ehci_setup ( s#usb_hcd * ) 
ehci_suspend extern int ehci_suspend ( s#usb_hcd * , t#bool ) 
ehci_resume extern int ehci_resume ( s#usb_hcd * , t#bool ) 
s#ehci_driver_overrides struct ehci_driver_overrides { t#size_t extra_priv_size ; int ( * reset ) ( s#usb_hcd * ) ; } 
ehci_init_driver extern void ehci_init_driver ( s#hc_driver * , const s#ehci_driver_overrides * ) 

/* drivers/usb/host/ohci-hcd.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##ep_device
s##wusb_dev
s##mon_bus
s##usb_gadget
s##dma_pool
ohci_setup extern int ohci_setup ( s#usb_hcd * ) 
t#__hc32 typedef t#__u32 __hc32 
s#ohci_roothub_regs struct ohci_roothub_regs { t#__hc32 a ; t#__hc32 b ; t#__hc32 status ; t#__hc32 portstatus [ 15 ] ; } 
s#ohci_regs struct ohci_regs { t#__hc32 revision ; t#__hc32 control ; t#__hc32 cmdstatus ; t#__hc32 intrstatus ; t#__hc32 intrenable ; t#__hc32 intrdisable ; t#__hc32 hcca ; t#__hc32 ed_periodcurrent ; t#__hc32 ed_controlhead ; t#__hc32 ed_controlcurrent ; t#__hc32 ed_bulkhead ; t#__hc32 ed_bulkcurrent ; t#__hc32 donehead ; t#__hc32 fminterval ; t#__hc32 fmremaining ; t#__hc32 fmnumber ; t#__hc32 periodicstart ; t#__hc32 lsthresh ; s#ohci_roothub_regs roothub ; } 
s#ohci_hcca struct ohci_hcca { t#__hc32 int_table [ 32 ] ; t#__hc32 frame_no ; t#__hc32 done_head ; t#u8 reserved_for_hc [ 116 ] ; t#u8 what [ 4 ] ; } 
t#__hc16 typedef t#__u16 __hc16 
s#td struct td { t#__hc32 hwINFO ; t#__hc32 hwCBP ; t#__hc32 hwNextTD ; t#__hc32 hwBE ; t#__hc16 hwPSW [ 2 ] ; t#__u8 index ; s#ed * ed ; s#td * td_hash ; s#td * next_dl_td ; s#urb * urb ; t#dma_addr_t td_dma ; t#dma_addr_t data_dma ; s#list_head td_list ; } 
s#ed struct ed { t#__hc32 hwINFO ; t#__hc32 hwTailP ; t#__hc32 hwHeadP ; t#__hc32 hwNextED ; t#dma_addr_t dma ; s#td * dummy ; s#ed * ed_next ; s#ed * ed_prev ; s#list_head td_list ; t#u8 state ; t#u8 type ; t#u8 branch ; t#u16 interval ; t#u16 load ; t#u16 last_iso ; t#u16 tick ; } 
e#ohci_rh_state enum ohci_rh_state { OHCI_RH_HALTED , OHCI_RH_SUSPENDED , OHCI_RH_RUNNING } 
s#ohci_hcd struct ohci_hcd { t#spinlock_t lock ; s#ohci_regs * regs ; s#ohci_hcca * hcca ; t#dma_addr_t hcca_dma ; s#ed * ed_rm_list ; s#ed * ed_bulktail ; s#ed * ed_controltail ; s#ed * periodic [ 32 ] ; void ( * start_hnp ) ( s#ohci_hcd * ) ; s#dma_pool * td_cache ; s#dma_pool * ed_cache ; s#td * td_hash [ 64 ] ; s#list_head pending ; e#ohci_rh_state rh_state ; int num_ports ; int load [ 32 ] ; t#u32 hc_control ; unsigned long next_statechange ; t#u32 fminterval ; unsigned autostop : 1 ; unsigned long flags ; s#work_struct nec_work ; s#timer_list unlink_watchdog ; unsigned eds_scheduled ; s#ed * ed_to_check ; unsigned zf_delay ; s#dentry * debug_dir ; s#dentry * debug_async ; s#dentry * debug_periodic ; s#dentry * debug_registers ; unsigned long priv [ 0 ] __attribute__ ( ( aligned ( sizeof ( s64 ) ) ) ) ; } 
ohci_restart extern int ohci_restart ( s#ohci_hcd * ) 
ohci_suspend extern int ohci_suspend ( s#usb_hcd * , t#bool ) 
ohci_resume extern int ohci_resume ( s#usb_hcd * , t#bool ) 
s#ohci_driver_overrides struct ohci_driver_overrides { const char * product_desc ; t#size_t extra_priv_size ; int ( * reset ) ( s#usb_hcd * ) ; } 
ohci_init_driver extern void ohci_init_driver ( s#hc_driver * , const s#ohci_driver_overrides * ) 

/* drivers/usb/host/pci-quirks.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
sb800_prefetch void sb800_prefetch ( s#device * , int ) 
usb_amd_find_chipset_info int usb_amd_find_chipset_info ( void ) 
usb_amd_hang_symptom_quirk t#bool usb_amd_hang_symptom_quirk ( void ) 
usb_amd_prefetch_quirk t#bool usb_amd_prefetch_quirk ( void ) 
usb_hcd_amd_remote_wakeup_quirk int usb_hcd_amd_remote_wakeup_quirk ( s#pci_dev * ) 
usb_amd_quirk_pll_disable void usb_amd_quirk_pll_disable ( void ) 
usb_amd_quirk_pll_enable void usb_amd_quirk_pll_enable ( void ) 
usb_amd_dev_put void usb_amd_dev_put ( void ) 
uhci_reset_hc void uhci_reset_hc ( s#pci_dev * , unsigned long ) 
uhci_check_and_reset_hc int uhci_check_and_reset_hc ( s#pci_dev * , unsigned long ) 
usb_enable_intel_xhci_ports void usb_enable_intel_xhci_ports ( s#pci_dev * ) 
usb_disable_xhci_ports void usb_disable_xhci_ports ( s#pci_dev * ) 

/* drivers/usb/misc/ezusb.o */
s##usb_tt
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##mon_bus
s##ep_device
s##wusb_dev
ezusb_fx1_set_reset extern int ezusb_fx1_set_reset ( s#usb_device * , unsigned char ) 
ezusb_fx1_ihex_firmware_download extern int ezusb_fx1_ihex_firmware_download ( s#usb_device * , const char * ) 

/* drivers/usb/misc/ftdi-elan.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mfd_cell
ftdi_elan_gone_away void ftdi_elan_gone_away ( s#platform_device * ) 
usb_ftdi_elan_write_pcimem int usb_ftdi_elan_write_pcimem ( s#platform_device * , int , t#u8 , t#u32 ) 
usb_ftdi_elan_read_pcimem int usb_ftdi_elan_read_pcimem ( s#platform_device * , int , t#u8 , t#u32 * ) 
s##mon_bus
s##ep_device
s##wusb_dev
s##scatterlist
usb_ftdi_elan_edset_setup int usb_ftdi_elan_edset_setup ( s#platform_device * , t#u8 , void * , s#urb * , t#u8 , t#u8 , t#u8 , void ( * ) ( void * , s#urb * , t#u8 * , int , int , int , int , int , int , int , int , int ) ) 
usb_ftdi_elan_edset_input int usb_ftdi_elan_edset_input ( s#platform_device * , t#u8 , void * , s#urb * , t#u8 , t#u8 , t#u8 , void ( * ) ( void * , s#urb * , t#u8 * , int , int , int , int , int , int , int , int , int ) ) 
usb_ftdi_elan_edset_empty int usb_ftdi_elan_edset_empty ( s#platform_device * , t#u8 , void * , s#urb * , t#u8 , t#u8 , t#u8 , void ( * ) ( void * , s#urb * , t#u8 * , int , int , int , int , int , int , int , int , int ) ) 
usb_ftdi_elan_edset_output int usb_ftdi_elan_edset_output ( s#platform_device * , t#u8 , void * , s#urb * , t#u8 , t#u8 , t#u8 , void ( * ) ( void * , s#urb * , t#u8 * , int , int , int , int , int , int , int , int , int ) ) 
usb_ftdi_elan_edset_single int usb_ftdi_elan_edset_single ( s#platform_device * , t#u8 , void * , s#urb * , t#u8 , t#u8 , t#u8 , void ( * ) ( void * , s#urb * , t#u8 * , int , int , int , int , int , int , int , int , int ) ) 
usb_ftdi_elan_edset_flush int usb_ftdi_elan_edset_flush ( s#platform_device * , t#u8 , void * ) 

/* drivers/usb/phy/of.o */
e#usb_phy_interface enum usb_phy_interface { USBPHY_INTERFACE_MODE_UNKNOWN , USBPHY_INTERFACE_MODE_UTMI , USBPHY_INTERFACE_MODE_UTMIW , USBPHY_INTERFACE_MODE_ULPI , USBPHY_INTERFACE_MODE_SERIAL , USBPHY_INTERFACE_MODE_HSIC , } 
s##proc_dir_entry
of_usb_get_phy_mode e#usb_phy_interface of_usb_get_phy_mode ( s#device_node * ) 

/* drivers/usb/phy/phy.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##proc_dir_entry
s##iommu_group
s##usb_otg
devm_usb_get_phy extern s#usb_phy * devm_usb_get_phy ( s#device * , e#usb_phy_type ) 
usb_get_phy extern s#usb_phy * usb_get_phy ( e#usb_phy_type ) 
devm_usb_get_phy_by_phandle extern s#usb_phy * devm_usb_get_phy_by_phandle ( s#device * , const char * , t#u8 ) 
usb_get_phy_dev extern s#usb_phy * usb_get_phy_dev ( s#device * , t#u8 ) 
devm_usb_get_phy_dev extern s#usb_phy * devm_usb_get_phy_dev ( s#device * , t#u8 ) 
devm_usb_put_phy extern void devm_usb_put_phy ( s#device * , s#usb_phy * ) 
usb_put_phy extern void usb_put_phy ( s#usb_phy * ) 
usb_add_phy extern int usb_add_phy ( s#usb_phy * , e#usb_phy_type ) 
usb_add_phy_dev extern int usb_add_phy_dev ( s#usb_phy * ) 
usb_remove_phy extern void usb_remove_phy ( s#usb_phy * ) 
usb_bind_phy extern int usb_bind_phy ( const char * , t#u8 , const char * ) 

/* drivers/usb/phy/phy-am335x-control.o */
s##phy_control
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
am335x_get_phy_control s#phy_control * am335x_get_phy_control ( s#device * ) 

/* drivers/usb/phy/phy-generic.o */
usb_nop_xceiv_register extern void usb_nop_xceiv_register ( void ) 
usb_nop_xceiv_unregister extern void usb_nop_xceiv_unregister ( void ) 
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
s##usb_tt
s##ep_device
s##wusb_dev
s##mon_bus
s##usb_gadget
usb_gen_phy_init int usb_gen_phy_init ( s#usb_phy * ) 
usb_gen_phy_shutdown void usb_gen_phy_shutdown ( s#usb_phy * ) 
s##clk
s##regulator
s#usb_phy_gen_xceiv struct usb_phy_gen_xceiv { s#usb_phy phy ; s#device * dev ; s#clk * clk ; s#regulator * vcc ; s#regulator * reset ; } 
usb_phy_gen_create_phy int usb_phy_gen_create_phy ( s#device * , s#usb_phy_gen_xceiv * , e#usb_phy_type , t#u32 , t#bool , t#bool ) 
usb_phy_gen_cleanup_phy void usb_phy_gen_cleanup_phy ( s#usb_phy_gen_xceiv * ) 

/* drivers/usb/phy/phy-isp1301.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##proc_dir_entry
s##iommu_group
isp1301_get_client s#i2c_client * isp1301_get_client ( s#device_node * ) 

/* drivers/usb/serial/generic.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##proc_dir_entry
s##usb_tt
s##mon_bus
s##ep_device
s##wusb_dev
s#usb_serial_driver struct usb_serial_driver { const char * description ; const s#usb_device_id * id_table ; char num_ports ; s#list_head driver_list ; s#device_driver driver ; s#usb_driver * usb_driver ; s#usb_dynids dynids ; t#size_t bulk_in_size ; t#size_t bulk_out_size ; int ( * probe ) ( s#usb_serial * , const s#usb_device_id * ) ; int ( * attach ) ( s#usb_serial * ) ; int ( * calc_num_ports ) ( s#usb_serial * ) ; void ( * disconnect ) ( s#usb_serial * ) ; void ( * release ) ( s#usb_serial * ) ; int ( * port_probe ) ( s#usb_serial_port * ) ; int ( * port_remove ) ( s#usb_serial_port * ) ; int ( * suspend ) ( s#usb_serial * , t#pm_message_t ) ; int ( * resume ) ( s#usb_serial * ) ; int ( * reset_resume ) ( s#usb_serial * ) ; int ( * open ) ( s#tty_struct * , s#usb_serial_port * ) ; void ( * close ) ( s#usb_serial_port * ) ; int ( * write ) ( s#tty_struct * , s#usb_serial_port * , const unsigned char * , int ) ; int ( * write_room ) ( s#tty_struct * ) ; int ( * ioctl ) ( s#tty_struct * , unsigned int , unsigned long ) ; void ( * set_termios ) ( s#tty_struct * , s#usb_serial_port * , s#ktermios * ) ; void ( * break_ctl ) ( s#tty_struct * , int ) ; int ( * chars_in_buffer ) ( s#tty_struct * ) ; void ( * wait_until_sent ) ( s#tty_struct * , long ) ; t#bool ( * tx_empty ) ( s#usb_serial_port * ) ; void ( * throttle ) ( s#tty_struct * ) ; void ( * unthrottle ) ( s#tty_struct * ) ; int ( * tiocmget ) ( s#tty_struct * ) ; int ( * tiocmset ) ( s#tty_struct * , unsigned int , unsigned int ) ; int ( * tiocmiwait ) ( s#tty_struct * , unsigned long ) ; int ( * get_icount ) ( s#tty_struct * , s#serial_icounter_struct * ) ; void ( * dtr_rts ) ( s#usb_serial_port * , int ) ; int ( * carrier_raised ) ( s#usb_serial_port * ) ; void ( * init_termios ) ( s#tty_struct * ) ; void ( * read_int_callback ) ( s#urb * ) ; void ( * write_int_callback ) ( s#urb * ) ; void ( * read_bulk_callback ) ( s#urb * ) ; void ( * write_bulk_callback ) ( s#urb * ) ; void ( * process_read_urb ) ( s#urb * ) ; int ( * prepare_write_buffer ) ( s#usb_serial_port * , void * , t#size_t ) ; } 
s#usb_serial struct usb_serial { s#usb_device * dev ; s#usb_serial_driver * type ; s#usb_interface * interface ; unsigned char disconnected : 1 ; unsigned char suspending : 1 ; unsigned char attached : 1 ; unsigned char minors_reserved : 1 ; unsigned char num_ports ; unsigned char num_port_pointers ; char num_interrupt_in ; char num_interrupt_out ; char num_bulk_in ; char num_bulk_out ; s#usb_serial_port * port [ 8 ] ; s#kref kref ; s#mutex disc_mutex ; void * private ; } 
s#async_icount struct async_icount { t#__u32 cts , dsr , rng , dcd , tx , rx ; t#__u32 frame , parity , overrun , brk ; t#__u32 buf_overrun ; } 
s#usb_serial_port struct usb_serial_port { s#usb_serial * serial ; s#tty_port port ; t#spinlock_t lock ; t#u32 minor ; t#u8 port_number ; unsigned char * interrupt_in_buffer ; s#urb * interrupt_in_urb ; t#__u8 interrupt_in_endpointAddress ; unsigned char * interrupt_out_buffer ; int interrupt_out_size ; s#urb * interrupt_out_urb ; t#__u8 interrupt_out_endpointAddress ; unsigned char * bulk_in_buffer ; int bulk_in_size ; s#urb * read_urb ; t#__u8 bulk_in_endpointAddress ; unsigned char * bulk_in_buffers [ 2 ] ; s#urb * read_urbs [ 2 ] ; unsigned long read_urbs_free ; unsigned char * bulk_out_buffer ; int bulk_out_size ; s#urb * write_urb ; s#kfifo write_fifo ; unsigned char * bulk_out_buffers [ 2 ] ; s#urb * write_urbs [ 2 ] ; unsigned long write_urbs_free ; t#__u8 bulk_out_endpointAddress ; s#async_icount icount ; int tx_bytes ; unsigned long flags ; t#wait_queue_head_t write_wait ; s#work_struct work ; char throttled ; char throttle_req ; unsigned long sysrq ; s#device dev ; } 
usb_serial_generic_open extern int usb_serial_generic_open ( s#tty_struct * , s#usb_serial_port * ) 
usb_serial_generic_close extern void usb_serial_generic_close ( s#usb_serial_port * ) 
usb_serial_generic_write extern int usb_serial_generic_write ( s#tty_struct * , s#usb_serial_port * , const unsigned char * , int ) 
usb_serial_generic_chars_in_buffer extern int usb_serial_generic_chars_in_buffer ( s#tty_struct * ) 
usb_serial_generic_wait_until_sent extern void usb_serial_generic_wait_until_sent ( s#tty_struct * , long ) 
usb_serial_generic_submit_read_urbs extern int usb_serial_generic_submit_read_urbs ( s#usb_serial_port * , t#gfp_t ) 
usb_serial_generic_process_read_urb extern void usb_serial_generic_process_read_urb ( s#urb * ) 
usb_serial_generic_read_bulk_callback extern void usb_serial_generic_read_bulk_callback ( s#urb * ) 
usb_serial_generic_write_bulk_callback extern void usb_serial_generic_write_bulk_callback ( s#urb * ) 
usb_serial_generic_throttle extern void usb_serial_generic_throttle ( s#tty_struct * ) 
usb_serial_generic_unthrottle extern void usb_serial_generic_unthrottle ( s#tty_struct * ) 
usb_serial_generic_tiocmiwait extern int usb_serial_generic_tiocmiwait ( s#tty_struct * , unsigned long ) 
usb_serial_generic_get_icount extern int usb_serial_generic_get_icount ( s#tty_struct * , s#serial_icounter_struct * ) 
usb_serial_handle_sysrq_char extern int usb_serial_handle_sysrq_char ( s#usb_serial_port * , unsigned int ) 
usb_serial_handle_break extern int usb_serial_handle_break ( s#usb_serial_port * ) 
usb_serial_handle_dcd_change extern void usb_serial_handle_dcd_change ( s#usb_serial_port * , s#tty_struct * , unsigned int ) 
usb_serial_generic_resume extern int usb_serial_generic_resume ( s#usb_serial * ) 

/* drivers/usb/serial/usb-serial.o */
s##usb_tt
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##user_namespace
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mon_bus
s##ep_device
s##wusb_dev
usb_serial_port_softint extern void usb_serial_port_softint ( s#usb_serial_port * ) 
usb_serial_suspend extern int usb_serial_suspend ( s#usb_interface * , t#pm_message_t ) 
usb_serial_resume extern int usb_serial_resume ( s#usb_interface * ) 
usb_serial_register_drivers extern int usb_serial_register_drivers ( s#usb_serial_driver * const [ ] , const char * , const s#usb_device_id * ) 
usb_serial_deregister_drivers extern void usb_serial_deregister_drivers ( s#usb_serial_driver * const [ ] ) 

/* drivers/usb/serial/usb_wwan.o */
s##usb_tt
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mon_bus
s##ep_device
s##wusb_dev
usb_wwan_dtr_rts extern void usb_wwan_dtr_rts ( s#usb_serial_port * , int ) 
usb_wwan_set_termios extern void usb_wwan_set_termios ( s#tty_struct * , s#usb_serial_port * , s#ktermios * ) 
usb_wwan_tiocmget extern int usb_wwan_tiocmget ( s#tty_struct * ) 
usb_wwan_tiocmset extern int usb_wwan_tiocmset ( s#tty_struct * , unsigned int , unsigned int ) 
usb_wwan_ioctl extern int usb_wwan_ioctl ( s#tty_struct * , unsigned int , unsigned long ) 
usb_wwan_write extern int usb_wwan_write ( s#tty_struct * , s#usb_serial_port * , const unsigned char * , int ) 
usb_wwan_write_room extern int usb_wwan_write_room ( s#tty_struct * ) 
usb_wwan_chars_in_buffer extern int usb_wwan_chars_in_buffer ( s#tty_struct * ) 
usb_wwan_open extern int usb_wwan_open ( s#tty_struct * , s#usb_serial_port * ) 
usb_wwan_close extern void usb_wwan_close ( s#usb_serial_port * ) 
usb_wwan_port_probe extern int usb_wwan_port_probe ( s#usb_serial_port * ) 
usb_wwan_port_remove extern int usb_wwan_port_remove ( s#usb_serial_port * ) 
usb_wwan_suspend extern int usb_wwan_suspend ( s#usb_serial * , t#pm_message_t ) 
usb_wwan_resume extern int usb_wwan_resume ( s#usb_serial * ) 

/* drivers/usb/storage/protocol.o */
s##scsi_device
s##tvec_base
s##workqueue_struct
s##kmem_cache_node
s##array_cache
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##device_private
s##sock
s##sysfs_dirent
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##usb_tt
s##mon_bus
s##ep_device
s##wusb_dev
s#us_unusual_dev struct us_unusual_dev { const char * vendorName ; const char * productName ; t#__u8 useProtocol ; t#__u8 useTransport ; int ( * initFunction ) ( s#us_data * ) ; } 
t#trans_cmnd typedef int ( * trans_cmnd ) ( s#scsi_cmnd * , s#us_data * ) 
t#trans_reset typedef int ( * trans_reset ) ( s#us_data * ) 
t#proto_cmnd typedef void ( * proto_cmnd ) ( s#scsi_cmnd * , s#us_data * ) 
s#usb_ctrlrequest struct usb_ctrlrequest { t#__u8 bRequestType ; t#__u8 bRequest ; t#__le16 wValue ; t#__le16 wIndex ; t#__le16 wLength ; } 
t#extra_data_destructor typedef void ( * extra_data_destructor ) ( void * ) 
t#pm_hook typedef void ( * pm_hook ) ( s#us_data * , int ) 
s#us_data struct us_data { s#mutex dev_mutex ; s#usb_device * pusb_dev ; s#usb_interface * pusb_intf ; s#us_unusual_dev * unusual_dev ; unsigned long fflags ; unsigned long dflags ; unsigned int send_bulk_pipe ; unsigned int recv_bulk_pipe ; unsigned int send_ctrl_pipe ; unsigned int recv_ctrl_pipe ; unsigned int recv_intr_pipe ; char * transport_name ; char * protocol_name ; t#__le32 bcs_signature ; t#u8 subclass ; t#u8 protocol ; t#u8 max_lun ; t#u8 ifnum ; t#u8 ep_bInterval ; t#trans_cmnd transport ; t#trans_reset transport_reset ; t#proto_cmnd proto_handler ; s#scsi_cmnd * srb ; unsigned int tag ; char scsi_name [ 32 ] ; s#urb * current_urb ; s#usb_ctrlrequest * cr ; s#usb_sg_request current_sg ; unsigned char * iobuf ; t#dma_addr_t iobuf_dma ; s#task_struct * ctl_thread ; s#completion cmnd_ready ; s#completion notify ; t#wait_queue_head_t delay_wait ; s#delayed_work scan_dwork ; void * extra ; t#extra_data_destructor extra_destructor ; t#pm_hook suspend_resume_hook ; int use_last_sector_hacks ; int last_sector_retries ; } 
usb_stor_transparent_scsi_command extern void usb_stor_transparent_scsi_command ( s#scsi_cmnd * , s#us_data * ) 
e#xfer_buf_dir enum xfer_buf_dir { TO_XFER_BUF , FROM_XFER_BUF } 
usb_stor_access_xfer_buf extern unsigned int usb_stor_access_xfer_buf ( unsigned char * , unsigned int , s#scsi_cmnd * , s#scatterlist * * , unsigned int * , e#xfer_buf_dir ) 
usb_stor_set_xfer_buf extern void usb_stor_set_xfer_buf ( unsigned char * , unsigned int , s#scsi_cmnd * ) 

/* drivers/usb/storage/scsiglue.o */
usb_stor_sense_invalidCDB extern unsigned char usb_stor_sense_invalidCDB [ 18 ] 

/* drivers/usb/storage/transport.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##device_private
s##sock
s##sysfs_dirent
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##usb_tt
s##mon_bus
s##ep_device
s##wusb_dev
s##scsi_host_cmd_pool
s##proc_dir_entry
s##scsi_transport_template
usb_stor_control_msg extern int usb_stor_control_msg ( s#us_data * , unsigned int , t#u8 , t#u8 , t#u16 , t#u16 , void * , t#u16 , int ) 
usb_stor_clear_halt extern int usb_stor_clear_halt ( s#us_data * , unsigned int ) 
usb_stor_ctrl_transfer extern int usb_stor_ctrl_transfer ( s#us_data * , unsigned int , t#u8 , t#u8 , t#u16 , t#u16 , void * , t#u16 ) 
usb_stor_bulk_transfer_buf extern int usb_stor_bulk_transfer_buf ( s#us_data * , unsigned int , void * , unsigned int , unsigned int * ) 
usb_stor_bulk_srb extern int usb_stor_bulk_srb ( s#us_data * , unsigned int , s#scsi_cmnd * ) 
usb_stor_bulk_transfer_sg extern int usb_stor_bulk_transfer_sg ( s#us_data * , unsigned int , void * , unsigned int , int , int * ) 
usb_stor_CB_transport extern int usb_stor_CB_transport ( s#scsi_cmnd * , s#us_data * ) 
usb_stor_Bulk_transport extern int usb_stor_Bulk_transport ( s#scsi_cmnd * , s#us_data * ) 
usb_stor_CB_reset extern int usb_stor_CB_reset ( s#us_data * ) 
usb_stor_Bulk_reset extern int usb_stor_Bulk_reset ( s#us_data * ) 

/* drivers/usb/storage/usb.o */
s##ep_device
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
usb_stor_suspend extern int usb_stor_suspend ( s#usb_interface * , t#pm_message_t ) 
usb_stor_resume extern int usb_stor_resume ( s#usb_interface * ) 
usb_stor_reset_resume extern int usb_stor_reset_resume ( s#usb_interface * ) 
usb_stor_pre_reset extern int usb_stor_pre_reset ( s#usb_interface * ) 
usb_stor_post_reset extern int usb_stor_post_reset ( s#usb_interface * ) 
s##mon_bus
s##wusb_dev
s##scsi_host_cmd_pool
s##proc_dir_entry
s##scsi_transport_template
s##scsi_sense_hdr
fill_inquiry_response extern void fill_inquiry_response ( s#us_data * , unsigned char * , unsigned int ) 
usb_stor_adjust_quirks extern void usb_stor_adjust_quirks ( s#usb_device * , unsigned long * ) 
usb_stor_probe1 extern int usb_stor_probe1 ( s#us_data * * , s#usb_interface * , const s#usb_device_id * , s#us_unusual_dev * ) 
usb_stor_probe2 extern int usb_stor_probe2 ( s#us_data * ) 
usb_stor_disconnect extern void usb_stor_disconnect ( s#usb_interface * ) 

/* drivers/usb/wusbcore/devconnect.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##ep_device
s#usb_encryption_descriptor struct usb_encryption_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 bEncryptionType ; t#__u8 bEncryptionValue ; t#__u8 bAuthKeyIndex ; } 
s#wusb_ckhdid struct wusb_ckhdid { t#u8 data [ 16 ] ; } 
s#usb_wireless_cap_descriptor struct usb_wireless_cap_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 bDevCapabilityType ; t#__u8 bmAttributes ; t#__le16 wPHYRates ; t#__u8 bmTFITXPowerInfo ; t#__u8 bmFFITXPowerInfo ; t#__le16 bmBandGroup ; t#__u8 bReserved ; } 
E#UWB_NUM_MAS 256 
s#uwb_mas_bm struct uwb_mas_bm { unsigned long bm [ ( ( ( E#UWB_NUM_MAS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long unsafe_bm [ ( ( ( E#UWB_NUM_MAS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; int safe ; int unsafe ; } 
s#wusb_dev struct wusb_dev { s#kref refcnt ; s#wusbhc * wusbhc ; s#list_head cack_node ; t#u8 port_idx ; t#u8 addr ; t#u8 beacon_type : 4 ; s#usb_encryption_descriptor ccm1_etd ; s#wusb_ckhdid cdid ; unsigned long entry_ts ; s#usb_bos_descriptor * bos ; s#usb_wireless_cap_descriptor * wusb_cap_descr ; s#uwb_mas_bm availability ; s#work_struct devconnect_acked_work ; s#urb * set_gtk_urb ; s#usb_ctrlrequest * set_gtk_req ; s#usb_device * usb_dev ; } 
s##mon_bus
s##usb_phy
s##dma_pool
s##uwb_beca_e
s#uwb_mac_addr struct uwb_mac_addr { t#u8 data [ 6 ] ; } 
s#uwb_dev_addr struct uwb_dev_addr { t#u8 data [ 2 ] ; } 
E#UWB_NUM_STREAMS 8 
s#uwb_dev struct uwb_dev { s#mutex mutex ; s#list_head list_node ; s#device dev ; s#uwb_rc * rc ; s#uwb_beca_e * bce ; s#uwb_mac_addr mac_addr ; s#uwb_dev_addr dev_addr ; int beacon_slot ; unsigned long streams [ ( ( ( E#UWB_NUM_STREAMS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long last_availability_bm [ ( ( ( E#UWB_NUM_MAS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
s#uwb_rccb struct uwb_rccb { t#u8 bCommandType ; t#__le16 wCommand ; t#u8 bCommandContext ; } 
s#uwb_rceb struct uwb_rceb { t#u8 bEventType ; t#__le16 wEvent ; t#u8 bEventContext ; } 
E#UWB_RC_CTX_MAX 256 
e#uwb_scan_type enum uwb_scan_type { UWB_SCAN_ONLY = 0 , UWB_SCAN_OUTSIDE_BP , UWB_SCAN_WHILE_INACTIVE , UWB_SCAN_DISABLED , UWB_SCAN_ONLY_STARTTIME , UWB_SCAN_TOP } 
s#uwb_notifs_chain struct uwb_notifs_chain { s#list_head list ; s#mutex mutex ; } 
s#uwb_beca struct uwb_beca { s#list_head list ; t#size_t entries ; s#mutex mutex ; } 
s#uwbd struct uwbd { int pid ; s#task_struct * task ; t#wait_queue_head_t wq ; s#list_head event_list ; t#spinlock_t event_list_lock ; } 
s#uwb_drp_backoff_win struct uwb_drp_backoff_win { t#u8 window ; t#u8 n ; int total_expired ; s#timer_list timer ; t#bool can_reserve_extra_mases ; } 
s#uwb_ie_hdr struct uwb_ie_hdr { t#u8 element_id ; t#u8 length ; } 
s#uwb_ie_drp_avail struct uwb_ie_drp_avail { s#uwb_ie_hdr hdr ; unsigned long bmp [ ( ( ( E#UWB_NUM_MAS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
s#uwb_drp_avail struct uwb_drp_avail { unsigned long global [ ( ( ( E#UWB_NUM_MAS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long local [ ( ( ( E#UWB_NUM_MAS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long pending [ ( ( ( E#UWB_NUM_MAS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#uwb_ie_drp_avail ie ; t#bool ie_valid ; } 
s#uwb_rc_cmd_set_ie struct uwb_rc_cmd_set_ie { s#uwb_rccb rccb ; t#__le16 wIELength ; t#u8 IEData [ ] ; } 
s##uwb_dbg
s#uwb_rc struct uwb_rc { s#uwb_dev uwb_dev ; int index ; t#u16 version ; s#module * owner ; void * priv ; int ( * start ) ( s#uwb_rc * ) ; void ( * stop ) ( s#uwb_rc * ) ; int ( * cmd ) ( s#uwb_rc * , const s#uwb_rccb * , t#size_t ) ; int ( * reset ) ( s#uwb_rc * ) ; int ( * filter_cmd ) ( s#uwb_rc * , s#uwb_rccb * * , t#size_t * ) ; int ( * filter_event ) ( s#uwb_rc * , s#uwb_rceb * * , const t#size_t , t#size_t * , t#size_t * ) ; t#spinlock_t neh_lock ; s#list_head neh_list ; unsigned long ctx_bm [ E#UWB_RC_CTX_MAX / 8 / sizeof ( unsigned long ) ] ; t#u8 ctx_roll ; int beaconing ; int beaconing_forced ; int scanning ; e#uwb_scan_type scan_type : 3 ; unsigned ready : 1 ; s#uwb_notifs_chain notifs_chain ; s#uwb_beca uwb_beca ; s#uwbd uwbd ; s#uwb_drp_backoff_win bow ; s#uwb_drp_avail drp_avail ; s#list_head reservations ; s#list_head cnflt_alien_list ; s#uwb_mas_bm cnflt_alien_bitmap ; s#mutex rsvs_mutex ; t#spinlock_t rsvs_lock ; s#workqueue_struct * rsv_workq ; s#delayed_work rsv_update_work ; s#delayed_work rsv_alien_bp_work ; int set_drp_ie_pending ; s#mutex ies_mutex ; s#uwb_rc_cmd_set_ie * ies ; t#size_t ies_capacity ; s#list_head pals ; int active_pals ; s#uwb_dbg * dbg ; } 
e#uwb_rsv_target_type enum uwb_rsv_target_type { UWB_RSV_TARGET_DEV , UWB_RSV_TARGET_DEVADDR , } 
s#uwb_rsv_target struct uwb_rsv_target { e#uwb_rsv_target_type type ; union { s#uwb_dev * dev ; s#uwb_dev_addr devaddr ; } ; } 
e#uwb_drp_type enum uwb_drp_type { UWB_DRP_TYPE_ALIEN_BP = 0 , UWB_DRP_TYPE_HARD , UWB_DRP_TYPE_SOFT , UWB_DRP_TYPE_PRIVATE , UWB_DRP_TYPE_PCA , } 
t#uwb_rsv_cb_f typedef void ( * uwb_rsv_cb_f ) ( s#uwb_rsv * ) 
e#uwb_rsv_state enum uwb_rsv_state { UWB_RSV_STATE_NONE = 0 , UWB_RSV_STATE_O_INITIATED , UWB_RSV_STATE_O_PENDING , UWB_RSV_STATE_O_MODIFIED , UWB_RSV_STATE_O_ESTABLISHED , UWB_RSV_STATE_O_TO_BE_MOVED , UWB_RSV_STATE_O_MOVE_EXPANDING , UWB_RSV_STATE_O_MOVE_COMBINING , UWB_RSV_STATE_O_MOVE_REDUCING , UWB_RSV_STATE_T_ACCEPTED , UWB_RSV_STATE_T_DENIED , UWB_RSV_STATE_T_CONFLICT , UWB_RSV_STATE_T_PENDING , UWB_RSV_STATE_T_EXPANDING_ACCEPTED , UWB_RSV_STATE_T_EXPANDING_CONFLICT , UWB_RSV_STATE_T_EXPANDING_PENDING , UWB_RSV_STATE_T_EXPANDING_DENIED , UWB_RSV_STATE_T_RESIZED , UWB_RSV_STATE_LAST , } 
s#uwb_drp_alloc struct uwb_drp_alloc { t#__le16 zone_bm ; t#__le16 mas_bm ; } 
s#uwb_ie_drp struct uwb_ie_drp { s#uwb_ie_hdr hdr ; t#__le16 drp_control ; s#uwb_dev_addr dev_addr ; s#uwb_drp_alloc allocs [ ] ; } 
s#uwb_rsv_move struct uwb_rsv_move { s#uwb_mas_bm final_mas ; s#uwb_ie_drp * companion_drp_ie ; s#uwb_mas_bm companion_mas ; } 
s#uwb_rsv struct uwb_rsv { s#uwb_rc * rc ; s#list_head rc_node ; s#list_head pal_node ; s#kref kref ; s#uwb_dev * owner ; s#uwb_rsv_target target ; e#uwb_drp_type type ; int max_mas ; int min_mas ; int max_interval ; t#bool is_multicast ; t#uwb_rsv_cb_f callback ; void * pal_priv ; e#uwb_rsv_state state ; t#bool needs_release_companion_mas ; t#u8 stream ; t#u8 tiebreaker ; s#uwb_mas_bm mas ; s#uwb_ie_drp * drp_ie ; s#uwb_rsv_move mv ; t#bool ie_valid ; s#timer_list timer ; s#work_struct handle_timeout_work ; } 
s#uwb_pal struct uwb_pal { s#list_head node ; const char * name ; s#device * device ; s#uwb_rc * rc ; void ( * channel_changed ) ( s#uwb_pal * , int ) ; void ( * new_rsv ) ( s#uwb_pal * , s#uwb_rsv * ) ; int channel ; s#dentry * debugfs_dir ; } 
s#wuie_hdr struct wuie_hdr { t#u8 bLength ; t#u8 bIEIdentifier ; } 
s#wuie_host_info struct wuie_host_info { s#wuie_hdr hdr ; t#__le16 attributes ; s#wusb_ckhdid CHID ; } 
s#wusb_port struct wusb_port { t#u16 status ; t#u16 change ; s#wusb_dev * wusb_dev ; t#u32 ptk_tkid ; } 
s##wusb_dev_info
s#wuie_keep_alive struct wuie_keep_alive { s#wuie_hdr hdr ; t#u8 bDeviceAddress [ 4 ] ; } 
s#wuie_connect_ack struct wuie_connect_ack { s#wuie_hdr hdr ; struct { s#wusb_ckhdid CDID ; t#u8 bDeviceAddress ; t#u8 bReserved ; } blk [ 4 ] ; } 
s#usb_key_descriptor struct usb_key_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 tTKID [ 3 ] ; t#__u8 bReserved ; t#__u8 bKeyData [ 0 ] ; } 
s#wusbhc struct wusbhc { s#usb_hcd usb_hcd ; s#device * dev ; s#uwb_rc * uwb_rc ; s#uwb_pal pal ; unsigned trust_timeout ; s#wusb_ckhdid chid ; t#uint8_t phy_rate ; t#uint8_t dnts_num_slots ; t#uint8_t dnts_interval ; t#uint8_t retry_count ; s#wuie_host_info * wuie_host_info ; s#mutex mutex ; t#u16 cluster_id ; s#wusb_port * port ; s#wusb_dev_info * dev_info ; t#u8 ports_max ; unsigned active : 1 ; s#wuie_keep_alive keep_alive_ie ; s#delayed_work keep_alive_timer ; s#list_head cack_list ; t#size_t cack_count ; s#wuie_connect_ack cack_ie ; s#uwb_rsv * rsv ; s#mutex mmcie_mutex ; s#wuie_hdr * * mmcie ; t#u8 mmcies_max ; int ( * start ) ( s#wusbhc * ) ; void ( * stop ) ( s#wusbhc * , int ) ; int ( * mmcie_add ) ( s#wusbhc * , t#u8 , t#u8 , t#u8 , s#wuie_hdr * ) ; int ( * mmcie_rm ) ( s#wusbhc * , t#u8 ) ; int ( * dev_info_set ) ( s#wusbhc * , s#wusb_dev * ) ; int ( * bwa_set ) ( s#wusbhc * , t#s8 , const s#uwb_mas_bm * ) ; int ( * set_ptk ) ( s#wusbhc * , t#u8 , t#u32 , const void * , t#size_t ) ; int ( * set_gtk ) ( s#wusbhc * , t#u32 , const void * , t#size_t ) ; int ( * set_num_dnts ) ( s#wusbhc * , t#u8 , t#u8 ) ; struct { s#usb_key_descriptor descr ; t#u8 data [ 16 ] ; } __attribute__ ( ( packed ) ) gtk ; t#u8 gtk_index ; t#u32 gtk_tkid ; s#work_struct gtk_rekey_done_work ; int pending_set_gtks ; s#usb_encryption_descriptor * ccm1_etd ; } 
s#wusb_dn_hdr struct wusb_dn_hdr { t#u8 bType ; t#u8 notifdata [ ] ; } 
wusbhc_handle_dn extern void wusbhc_handle_dn ( s#wusbhc * , t#u8 , s#wusb_dn_hdr * , t#size_t ) 
__wusb_dev_get_by_usb_dev extern s#wusb_dev * __wusb_dev_get_by_usb_dev ( s#wusbhc * , s#usb_device * ) 
wusb_dev_destroy extern void wusb_dev_destroy ( s#kref * ) 

/* drivers/usb/wusbcore/mmc.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##ep_device
s##mon_bus
s##usb_phy
s##dma_pool
s##uwb_beca_e
s##uwb_dbg
s##wusb_dev_info
wusbhc_mmcie_set extern int wusbhc_mmcie_set ( s#wusbhc * , t#u8 , t#u8 , s#wuie_hdr * ) 
wusbhc_mmcie_rm extern void wusbhc_mmcie_rm ( s#wusbhc * , s#wuie_hdr * ) 
wusbhc_chid_set extern int wusbhc_chid_set ( s#wusbhc * , const s#wusb_ckhdid * ) 

/* drivers/usb/wusbcore/rh.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##ep_device
s##uwb_beca_e
s##uwb_dbg
s##wusb_dev_info
s##mon_bus
s##usb_phy
s##dma_pool
wusbhc_rh_status_data extern int wusbhc_rh_status_data ( s#usb_hcd * , char * ) 
wusbhc_rh_control extern int wusbhc_rh_control ( s#usb_hcd * , t#u16 , t#u16 , t#u16 , char * , t#u16 ) 
wusbhc_rh_start_port_reset extern int wusbhc_rh_start_port_reset ( s#usb_hcd * , unsigned ) 

/* drivers/usb/wusbcore/security.o */
wusb_et_name extern const char * wusb_et_name ( t#u8 ) 

/* drivers/usb/wusbcore/wa-hc.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mon_bus
s##ep_device
s##usb_phy
s##dma_pool
s##uwb_beca_e
s##uwb_dbg
s##wusb_dev_info
s##dwahc
s#usb_wa_descriptor struct usb_wa_descriptor { t#u8 bLength ; t#u8 bDescriptorType ; t#__le16 bcdWAVersion ; t#u8 bNumPorts ; t#u8 bmAttributes ; t#__le16 wNumRPipes ; t#__le16 wRPipeMaxBlock ; t#u8 bRPipeBlockSize ; t#u8 bPwrOn2PwrGood ; t#u8 bNumMMCIEs ; t#u8 DeviceRemovable ; } 
s#edc struct edc { unsigned long timestart ; t#u16 errorcount ; } 
e#wa_dti_state enum wa_dti_state { WA_DTI_TRANSFER_RESULT_PENDING , WA_DTI_ISOC_PACKET_STATUS_PENDING } 
s#wahc struct wahc { s#usb_device * usb_dev ; s#usb_interface * usb_iface ; union { s#wusbhc * wusb ; s#dwahc * dwa ; } ; const s#usb_endpoint_descriptor * dto_epd , * dti_epd ; const s#usb_wa_descriptor * wa_descr ; s#urb * nep_urb ; s#edc nep_edc ; void * nep_buffer ; t#size_t nep_buffer_size ; t#atomic_t notifs_queued ; t#u16 rpipes ; unsigned long * rpipe_bm ; s#list_head rpipe_delayed_list ; t#spinlock_t rpipe_lock ; s#mutex rpipe_mutex ; e#wa_dti_state dti_state ; t#u32 dti_isoc_xfer_in_progress ; t#u8 dti_isoc_xfer_seg ; s#urb * dti_urb ; s#urb * buf_in_urb ; s#edc dti_edc ; void * dti_buf ; t#size_t dti_buf_size ; unsigned long dto_in_use ; t#s32 status ; s#list_head xfer_list ; s#list_head xfer_delayed_list ; s#list_head xfer_errored_list ; t#spinlock_t xfer_list_lock ; s#work_struct xfer_enqueue_work ; s#work_struct xfer_error_work ; t#atomic_t xfer_id_count ; t#kernel_ulong_t quirks ; } 
wa_create extern int wa_create ( s#wahc * , s#usb_interface * , t#kernel_ulong_t ) 
__wa_destroy extern void __wa_destroy ( s#wahc * ) 

/* drivers/usb/wusbcore/wa-rpipe.o */
rpipe_destroy extern void rpipe_destroy ( s#kref * ) 
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mon_bus
s##ep_device
s##usb_phy
s##dma_pool
s##uwb_beca_e
s##uwb_dbg
s##wusb_dev_info
s##dwahc
rpipe_ep_disable extern void rpipe_ep_disable ( s#wahc * , s#usb_host_endpoint * ) 
rpipe_clear_feature_stalled extern void rpipe_clear_feature_stalled ( s#wahc * , s#usb_host_endpoint * ) 

/* drivers/usb/wusbcore/wa-xfer.o */
wa_urb_enqueue_run extern void wa_urb_enqueue_run ( s#work_struct * ) 
wa_process_errored_transfers_run extern void wa_process_errored_transfers_run ( s#work_struct * ) 
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mon_bus
s##ep_device
s##usb_phy
s##dma_pool
s##uwb_beca_e
s##uwb_dbg
s##wusb_dev_info
s##dwahc
wa_urb_enqueue extern int wa_urb_enqueue ( s#wahc * , s#usb_host_endpoint * , s#urb * , t#gfp_t ) 
wa_urb_dequeue extern int wa_urb_dequeue ( s#wahc * , s#urb * ) 

/* drivers/usb/wusbcore/wusbhc.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##ep_device
s##mon_bus
s##usb_phy
s##dma_pool
s##uwb_beca_e
s##uwb_dbg
s##wusb_dev_info
wusbhc_create extern int wusbhc_create ( s#wusbhc * ) 
wusbhc_b_create extern int wusbhc_b_create ( s#wusbhc * ) 
wusbhc_b_destroy extern void wusbhc_b_destroy ( s#wusbhc * ) 
wusbhc_destroy extern void wusbhc_destroy ( s#wusbhc * ) 
wusbd extern s#workqueue_struct * wusbd 
wusb_cluster_id_get extern t#u8 wusb_cluster_id_get ( void ) 
wusb_cluster_id_put extern void wusb_cluster_id_put ( t#u8 ) 
wusbhc_giveback_urb extern void wusbhc_giveback_urb ( s#wusbhc * , s#urb * , int ) 
wusbhc_reset_all void wusbhc_reset_all ( s#wusbhc * ) 

/* drivers/uwb/address.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#uwb_rc_evt_beacon struct uwb_rc_evt_beacon { s#uwb_rceb rceb ; t#u8 bChannelNumber ; t#u8 bBeaconType ; t#__le16 wBPSTOffset ; t#u8 bLQI ; t#u8 bRSSI ; t#__le16 wBeaconInfoLength ; t#u8 BeaconInfo [ ] ; } 
s#stats struct stats { t#s8 min , max ; t#s16 sigma ; t#atomic_t samples ; } 
s#uwb_beca_e struct uwb_beca_e { s#mutex mutex ; s#kref refcnt ; s#list_head node ; s#uwb_mac_addr * mac_addr ; s#uwb_dev_addr dev_addr ; t#u8 hits ; unsigned long ts_jiffies ; s#uwb_dev * uwb_dev ; s#uwb_rc_evt_beacon * be ; s#stats lqe_stats , rssi_stats ; } 
s##uwb_dbg
uwb_rc_mac_addr_get int uwb_rc_mac_addr_get ( s#uwb_rc * , s#uwb_mac_addr * ) 
uwb_rc_dev_addr_get int uwb_rc_dev_addr_get ( s#uwb_rc * , s#uwb_dev_addr * ) 
__uwb_addr_print t#size_t __uwb_addr_print ( char * , t#size_t , const unsigned char * , int ) 

/* drivers/uwb/est.o */
s#uwb_est_entry struct uwb_est_entry { t#size_t size ; unsigned offset ; enum { UWB_EST_16 = 0 , UWB_EST_8 = 1 } type ; } 
uwb_est_register int uwb_est_register ( t#u8 , t#u8 , t#u16 , t#u16 , const s#uwb_est_entry * , t#size_t ) 
uwb_est_unregister int uwb_est_unregister ( t#u8 , t#u8 , t#u16 , t#u16 , const s#uwb_est_entry * , t#size_t ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##sock
s##sysfs_dirent
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##workqueue_struct
s##uwb_dbg
uwb_est_find_size t#ssize_t uwb_est_find_size ( s#uwb_rc * , const s#uwb_rceb * , t#size_t ) 

/* drivers/uwb/i1480/dfu/dfu.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s#i1480 struct i1480 { s#device * dev ; int ( * write ) ( s#i1480 * , t#u32 , const void * , t#size_t ) ; int ( * read ) ( s#i1480 * , t#u32 , t#size_t ) ; int ( * rc_setup ) ( s#i1480 * ) ; void ( * rc_release ) ( s#i1480 * ) ; int ( * wait_init_done ) ( s#i1480 * ) ; int ( * cmd ) ( s#i1480 * , const char * , t#size_t ) ; const char * pre_fw_name ; const char * mac_fw_name ; const char * mac_fw_name_deprecate ; const char * phy_fw_name ; t#u8 hw_rev ; t#size_t buf_size ; void * evt_buf , * cmd_buf ; t#ssize_t evt_result ; s#completion evt_complete ; } 
i1480_rceb_check extern int i1480_rceb_check ( const s#i1480 * , const s#uwb_rceb * , const char * , t#u8 , t#u8 , unsigned ) 
i1480_cmd extern t#ssize_t i1480_cmd ( s#i1480 * , const char * , t#size_t , t#size_t ) 
i1480_fw_upload extern int i1480_fw_upload ( s#i1480 * ) 

/* drivers/uwb/ie.o */
uwb_ie_next s#uwb_ie_hdr * uwb_ie_next ( void * * , t#size_t * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##sock
s##sysfs_dirent
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##workqueue_struct
s##uwb_dbg
uwb_rc_ie_add int uwb_rc_ie_add ( s#uwb_rc * , const s#uwb_ie_hdr * , t#size_t ) 
e#uwb_ie enum uwb_ie { UWB_PCA_AVAILABILITY = 2 , UWB_IE_DRP_AVAILABILITY = 8 , UWB_IE_DRP = 9 , UWB_BP_SWITCH_IE = 11 , UWB_MAC_CAPABILITIES_IE = 12 , UWB_PHY_CAPABILITIES_IE = 13 , UWB_APP_SPEC_PROBE_IE = 15 , UWB_IDENTIFICATION_IE = 19 , UWB_MASTER_KEY_ID_IE = 20 , UWB_RELINQUISH_REQUEST_IE = 21 , UWB_IE_WLP = 250 , UWB_APP_SPEC_IE = 255 , } 
uwb_rc_ie_rm int uwb_rc_ie_rm ( s#uwb_rc * , e#uwb_ie ) 

/* drivers/uwb/lc-dev.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##sock
s##sysfs_dirent
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##workqueue_struct
s##uwb_dbg
e#uwb_notifs enum uwb_notifs { UWB_NOTIF_ONAIR , UWB_NOTIF_OFFAIR , } 
s#uwb_notifs_handler struct uwb_notifs_handler { s#list_head list_node ; void ( * cb ) ( void * , s#uwb_dev * , e#uwb_notifs ) ; void * data ; } 
uwb_notifs_register int uwb_notifs_register ( s#uwb_rc * , s#uwb_notifs_handler * ) 
uwb_notifs_deregister int uwb_notifs_deregister ( s#uwb_rc * , s#uwb_notifs_handler * ) 
uwb_dev_try_get s#uwb_dev * uwb_dev_try_get ( s#uwb_rc * , s#uwb_dev * ) 
t#uwb_dev_for_each_f typedef int ( * uwb_dev_for_each_f ) ( s#device * , void * ) 
uwb_dev_for_each int uwb_dev_for_each ( s#uwb_rc * , t#uwb_dev_for_each_f , void * ) 

/* drivers/uwb/lc-rc.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##uwb_dbg
uwb_rc_init void uwb_rc_init ( s#uwb_rc * ) 
uwb_rc_alloc s#uwb_rc * uwb_rc_alloc ( void ) 
uwb_rc_add int uwb_rc_add ( s#uwb_rc * , s#device * , void * ) 
uwb_rc_rm void uwb_rc_rm ( s#uwb_rc * ) 
__uwb_rc_try_get extern s#uwb_rc * __uwb_rc_try_get ( s#uwb_rc * ) 
uwb_rc_get_by_grandpa s#uwb_rc * uwb_rc_get_by_grandpa ( const s#device * ) 
uwb_rc_get_by_dev s#uwb_rc * uwb_rc_get_by_dev ( const s#uwb_dev_addr * ) 
uwb_rc_put void uwb_rc_put ( s#uwb_rc * ) 

/* drivers/uwb/neh.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##sock
s##sysfs_dirent
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##workqueue_struct
s##uwb_dbg
uwb_rc_neh_grok void uwb_rc_neh_grok ( s#uwb_rc * , void * , t#size_t ) 
uwb_rc_neh_error void uwb_rc_neh_error ( s#uwb_rc * , int ) 

/* drivers/uwb/pal.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##uwb_dbg
uwb_pal_init void uwb_pal_init ( s#uwb_pal * ) 
uwb_pal_register int uwb_pal_register ( s#uwb_pal * ) 
uwb_pal_unregister void uwb_pal_unregister ( s#uwb_pal * ) 

/* drivers/uwb/radio.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##workqueue_struct
s##uwb_dbg
s##dentry
uwb_radio_start int uwb_radio_start ( s#uwb_pal * ) 
uwb_radio_stop void uwb_radio_stop ( s#uwb_pal * ) 

/* drivers/uwb/reset.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##sock
s##sysfs_dirent
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##workqueue_struct
s##uwb_dbg
t#uwb_rc_cmd_cb_f typedef void ( * uwb_rc_cmd_cb_f ) ( s#uwb_rc * , void * , s#uwb_rceb * , t#ssize_t ) 
uwb_rc_cmd_async int uwb_rc_cmd_async ( s#uwb_rc * , const char * , s#uwb_rccb * , t#size_t , t#u8 , t#u16 , t#uwb_rc_cmd_cb_f , void * ) 
uwb_rc_cmd t#ssize_t uwb_rc_cmd ( s#uwb_rc * , const char * , s#uwb_rccb * , t#size_t , s#uwb_rceb * , t#size_t ) 
uwb_rc_vcmd t#ssize_t uwb_rc_vcmd ( s#uwb_rc * , const char * , s#uwb_rccb * , t#size_t , t#u8 , t#u16 , s#uwb_rceb * * ) 
uwb_rc_reset_all void uwb_rc_reset_all ( s#uwb_rc * ) 
uwb_rc_pre_reset void uwb_rc_pre_reset ( s#uwb_rc * ) 
uwb_rc_post_reset int uwb_rc_post_reset ( s#uwb_rc * ) 

/* drivers/uwb/rsv.o */
uwb_rsv_state_str const char * uwb_rsv_state_str ( e#uwb_rsv_state ) 
uwb_rsv_type_str const char * uwb_rsv_type_str ( e#uwb_drp_type ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##sock
s##sysfs_dirent
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##workqueue_struct
s##uwb_dbg
uwb_rsv_create s#uwb_rsv * uwb_rsv_create ( s#uwb_rc * , t#uwb_rsv_cb_f , void * ) 
uwb_rsv_destroy void uwb_rsv_destroy ( s#uwb_rsv * ) 
uwb_rsv_establish int uwb_rsv_establish ( s#uwb_rsv * ) 
uwb_rsv_modify int uwb_rsv_modify ( s#uwb_rsv * , int , int , int ) 
uwb_rsv_terminate void uwb_rsv_terminate ( s#uwb_rsv * ) 
uwb_rsv_accept void uwb_rsv_accept ( s#uwb_rsv * , t#uwb_rsv_cb_f , void * ) 
uwb_rsv_get_usable_mas void uwb_rsv_get_usable_mas ( s#uwb_rsv * , s#uwb_mas_bm * ) 

/* drivers/uwb/umc-bus.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s#umc_dev struct umc_dev { t#u16 version ; t#u8 cap_id ; t#u8 bar ; s#resource resource ; unsigned irq ; s#device dev ; } 
umc_controller_reset int umc_controller_reset ( s#umc_dev * ) 
s#umc_driver struct umc_driver { char * name ; t#u8 cap_id ; int ( * match ) ( s#umc_driver * , s#umc_dev * ) ; const void * match_data ; int ( * probe ) ( s#umc_dev * ) ; void ( * remove ) ( s#umc_dev * ) ; int ( * suspend ) ( s#umc_dev * , t#pm_message_t ) ; int ( * resume ) ( s#umc_dev * ) ; int ( * pre_reset ) ( s#umc_dev * ) ; int ( * post_reset ) ( s#umc_dev * ) ; s#device_driver driver ; } 
umc_match_pci_id int umc_match_pci_id ( s#umc_driver * , s#umc_dev * ) 
umc_bus_type extern s#bus_type umc_bus_type 

/* drivers/uwb/umc-dev.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
umc_device_create s#umc_dev * umc_device_create ( s#device * , int ) 
umc_device_register int umc_device_register ( s#umc_dev * ) 
umc_device_unregister void umc_device_unregister ( s#umc_dev * ) 

/* drivers/uwb/umc-drv.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
__umc_driver_register int __umc_driver_register ( s#umc_driver * , s#module * , const char * ) 
umc_driver_unregister void umc_driver_unregister ( s#umc_driver * ) 

/* drivers/uwb/whci.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
whci_wait_for extern int whci_wait_for ( s#device * , t#u32 * , t#u32 , t#u32 , unsigned long , const char * ) 

/* drivers/vfio/vfio.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##seq_file
s##optimistic_spin_queue
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##iommu_group
s#vfio_iommu_driver_ops struct vfio_iommu_driver_ops { char * name ; s#module * owner ; void * ( * open ) ( unsigned long ) ; void ( * release ) ( void * ) ; t#ssize_t ( * read ) ( void * , char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * write ) ( void * , const char * , t#size_t , t#loff_t * ) ; long ( * ioctl ) ( void * , unsigned int , unsigned long ) ; int ( * mmap ) ( void * , s#vm_area_struct * ) ; int ( * attach_group ) ( void * , s#iommu_group * ) ; void ( * detach_group ) ( void * , s#iommu_group * ) ; } 
vfio_register_iommu_driver extern int vfio_register_iommu_driver ( const s#vfio_iommu_driver_ops * ) 
vfio_unregister_iommu_driver extern void vfio_unregister_iommu_driver ( const s#vfio_iommu_driver_ops * ) 
s##vfio_device
vfio_device_put extern void vfio_device_put ( s#vfio_device * ) 
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s#vfio_device_ops struct vfio_device_ops { char * name ; int ( * open ) ( void * ) ; void ( * release ) ( void * ) ; t#ssize_t ( * read ) ( void * , char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * write ) ( void * , const char * , t#size_t , t#loff_t * ) ; long ( * ioctl ) ( void * , unsigned int , unsigned long ) ; int ( * mmap ) ( void * , s#vm_area_struct * ) ; } 
vfio_add_group_dev extern int vfio_add_group_dev ( s#device * , const s#vfio_device_ops * , void * ) 
vfio_device_get_from_dev extern s#vfio_device * vfio_device_get_from_dev ( s#device * ) 
vfio_device_data extern void * vfio_device_data ( s#vfio_device * ) 
vfio_del_group_dev extern void * vfio_del_group_dev ( s#device * ) 
s##vfio_group
vfio_group_get_external_user extern s#vfio_group * vfio_group_get_external_user ( s#file * ) 
vfio_group_put_external_user extern void vfio_group_put_external_user ( s#vfio_group * ) 
vfio_external_user_iommu_id extern int vfio_external_user_iommu_id ( s#vfio_group * ) 

/* drivers/vhost/vhost.o */
t#vhost_work_fn_t typedef void ( * vhost_work_fn_t ) ( s#vhost_work * ) 
s#vhost_work struct vhost_work { s#list_head node ; t#vhost_work_fn_t fn ; t#wait_queue_head_t done ; int flushing ; unsigned queue_seq ; unsigned done_seq ; } 
vhost_work_init void vhost_work_init ( s#vhost_work * , t#vhost_work_fn_t ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
t#wait_queue_func_t typedef int ( * wait_queue_func_t ) ( t#wait_queue_t * , unsigned , int , void * ) 
s#__wait_queue struct __wait_queue { unsigned int flags ; void * private ; t#wait_queue_func_t func ; s#list_head task_list ; } 
t#wait_queue_t typedef s#__wait_queue wait_queue_t 
s#vhost_memory_region struct vhost_memory_region { t#__u64 guest_phys_addr ; t#__u64 memory_size ; t#__u64 userspace_addr ; t#__u64 flags_padding ; } 
s#vhost_memory struct vhost_memory { t#__u32 nregions ; t#__u32 padding ; s#vhost_memory_region regions [ 0 ] ; } 
s#vring_desc struct vring_desc { t#__u64 addr ; t#__u32 len ; t#__u16 flags ; t#__u16 next ; } 
s#vring_avail struct vring_avail { t#__u16 flags ; t#__u16 idx ; t#__u16 ring [ ] ; } 
s#vring_used_elem struct vring_used_elem { t#__u32 id ; t#__u32 len ; } 
s#vring_used struct vring_used { t#__u16 flags ; t#__u16 idx ; s#vring_used_elem ring [ ] ; } 
s#vhost_log struct vhost_log { t#u64 addr ; t#u64 len ; } 
s#vhost_virtqueue struct vhost_virtqueue { s#vhost_dev * dev ; s#mutex mutex ; unsigned int num ; s#vring_desc * desc ; s#vring_avail * avail ; s#vring_used * used ; s#file * kick ; s#file * call ; s#file * error ; s#eventfd_ctx * call_ctx ; s#eventfd_ctx * error_ctx ; s#eventfd_ctx * log_ctx ; s#vhost_poll poll ; t#vhost_work_fn_t handle_kick ; t#u16 last_avail_idx ; t#u16 avail_idx ; t#u16 last_used_idx ; t#u16 used_flags ; t#u16 signalled_used ; t#bool signalled_used_valid ; t#bool log_used ; t#u64 log_addr ; s#iovec iov [ 1024 ] ; s#iovec * indirect ; s#vring_used_elem * heads ; void * private_data ; void * log_base ; s#vhost_log * log ; } 
s#vhost_dev struct vhost_dev { s#vhost_memory * memory ; s#mm_struct * mm ; s#mutex mutex ; unsigned acked_features ; s#vhost_virtqueue * * vqs ; int nvqs ; s#file * log_file ; s#eventfd_ctx * log_ctx ; t#spinlock_t work_lock ; s#list_head work_list ; s#task_struct * worker ; } 
s#vhost_poll struct vhost_poll { t#poll_table table ; t#wait_queue_head_t * wqh ; t#wait_queue_t wait ; s#vhost_work work ; unsigned long mask ; s#vhost_dev * dev ; } 
vhost_poll_init void vhost_poll_init ( s#vhost_poll * , t#vhost_work_fn_t , unsigned long , s#vhost_dev * ) 
vhost_poll_start int vhost_poll_start ( s#vhost_poll * , s#file * ) 
vhost_poll_stop void vhost_poll_stop ( s#vhost_poll * ) 
vhost_work_flush void vhost_work_flush ( s#vhost_dev * , s#vhost_work * ) 
vhost_poll_flush void vhost_poll_flush ( s#vhost_poll * ) 
vhost_work_queue void vhost_work_queue ( s#vhost_dev * , s#vhost_work * ) 
vhost_poll_queue void vhost_poll_queue ( s#vhost_poll * ) 
vhost_dev_init long vhost_dev_init ( s#vhost_dev * , s#vhost_virtqueue * * , int ) 
vhost_dev_check_owner long vhost_dev_check_owner ( s#vhost_dev * ) 
vhost_dev_has_owner t#bool vhost_dev_has_owner ( s#vhost_dev * ) 
vhost_dev_set_owner long vhost_dev_set_owner ( s#vhost_dev * ) 
vhost_dev_reset_owner_prepare s#vhost_memory * vhost_dev_reset_owner_prepare ( void ) 
vhost_dev_reset_owner void vhost_dev_reset_owner ( s#vhost_dev * , s#vhost_memory * ) 
vhost_dev_stop void vhost_dev_stop ( s#vhost_dev * ) 
vhost_dev_cleanup void vhost_dev_cleanup ( s#vhost_dev * , t#bool ) 
vhost_log_access_ok int vhost_log_access_ok ( s#vhost_dev * ) 
vhost_vq_access_ok int vhost_vq_access_ok ( s#vhost_virtqueue * ) 
vhost_vring_ioctl long vhost_vring_ioctl ( s#vhost_dev * , int , void * ) 
vhost_dev_ioctl long vhost_dev_ioctl ( s#vhost_dev * , unsigned int , void * ) 
vhost_log_write int vhost_log_write ( s#vhost_virtqueue * , s#vhost_log * , unsigned int , t#u64 ) 
vhost_init_used int vhost_init_used ( s#vhost_virtqueue * ) 
vhost_get_vq_desc int vhost_get_vq_desc ( s#vhost_dev * , s#vhost_virtqueue * , s#iovec [ ] , unsigned int , unsigned int * , unsigned int * , s#vhost_log * , unsigned int * ) 
vhost_discard_vq_desc void vhost_discard_vq_desc ( s#vhost_virtqueue * , int ) 
vhost_add_used int vhost_add_used ( s#vhost_virtqueue * , unsigned int , int ) 
vhost_add_used_n int vhost_add_used_n ( s#vhost_virtqueue * , s#vring_used_elem * , unsigned ) 
vhost_signal void vhost_signal ( s#vhost_dev * , s#vhost_virtqueue * ) 
vhost_add_used_and_signal void vhost_add_used_and_signal ( s#vhost_dev * , s#vhost_virtqueue * , unsigned int , int ) 
vhost_add_used_and_signal_n void vhost_add_used_and_signal_n ( s#vhost_dev * , s#vhost_virtqueue * , s#vring_used_elem * , unsigned ) 
vhost_enable_notify t#bool vhost_enable_notify ( s#vhost_dev * , s#vhost_virtqueue * ) 
vhost_disable_notify void vhost_disable_notify ( s#vhost_dev * , s#vhost_virtqueue * ) 

/* drivers/vhost/vringh.o */
s#vring struct vring { unsigned int num ; s#vring_desc * desc ; s#vring_avail * avail ; s#vring_used * used ; } 
s#vringh struct vringh { t#bool event_indices ; t#bool weak_barriers ; t#u16 last_avail_idx ; t#u16 last_used_idx ; t#u32 completed ; s#vring vring ; void ( * notify ) ( s#vringh * ) ; } 
vringh_init_user int vringh_init_user ( s#vringh * , t#u32 , unsigned int , t#bool , s#vring_desc * , s#vring_avail * , s#vring_used * ) 
s#vringh_iov struct vringh_iov { s#iovec * iov ; t#size_t consumed ; unsigned i , used , max_num ; } 
s#vringh_range struct vringh_range { t#u64 start , end_incl ; t#u64 offset ; } 
vringh_getdesc_user int vringh_getdesc_user ( s#vringh * , s#vringh_iov * , s#vringh_iov * , t#bool ( * ) ( s#vringh * , t#u64 , s#vringh_range * ) , t#u16 * ) 
vringh_iov_pull_user t#ssize_t vringh_iov_pull_user ( s#vringh_iov * , void * , t#size_t ) 
vringh_iov_push_user t#ssize_t vringh_iov_push_user ( s#vringh_iov * , const void * , t#size_t ) 
vringh_abandon_user void vringh_abandon_user ( s#vringh * , unsigned int ) 
vringh_complete_user int vringh_complete_user ( s#vringh * , t#u16 , t#u32 ) 
vringh_complete_multi_user int vringh_complete_multi_user ( s#vringh * , const s#vring_used_elem [ ] , unsigned ) 
vringh_notify_enable_user t#bool vringh_notify_enable_user ( s#vringh * ) 
vringh_notify_disable_user void vringh_notify_disable_user ( s#vringh * ) 
vringh_need_notify_user int vringh_need_notify_user ( s#vringh * ) 
vringh_init_kern int vringh_init_kern ( s#vringh * , t#u32 , unsigned int , t#bool , s#vring_desc * , s#vring_avail * , s#vring_used * ) 
s#vringh_kiov struct vringh_kiov { s#kvec * iov ; t#size_t consumed ; unsigned i , used , max_num ; } 
vringh_getdesc_kern int vringh_getdesc_kern ( s#vringh * , s#vringh_kiov * , s#vringh_kiov * , t#u16 * , t#gfp_t ) 
vringh_iov_pull_kern t#ssize_t vringh_iov_pull_kern ( s#vringh_kiov * , void * , t#size_t ) 
vringh_iov_push_kern t#ssize_t vringh_iov_push_kern ( s#vringh_kiov * , const void * , t#size_t ) 
vringh_abandon_kern void vringh_abandon_kern ( s#vringh * , unsigned int ) 
vringh_complete_kern int vringh_complete_kern ( s#vringh * , t#u16 , t#u32 ) 
vringh_notify_enable_kern t#bool vringh_notify_enable_kern ( s#vringh * ) 
vringh_notify_disable_kern void vringh_notify_disable_kern ( s#vringh * ) 
vringh_need_notify_kern int vringh_need_notify_kern ( s#vringh * ) 

/* drivers/video/backlight/backlight.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##tvec_base
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
e#backlight_update_reason enum backlight_update_reason { BACKLIGHT_UPDATE_HOTKEY , BACKLIGHT_UPDATE_SYSFS , } 
backlight_force_update extern void backlight_force_update ( s#backlight_device * , e#backlight_update_reason ) 
backlight_device_register extern s#backlight_device * backlight_device_register ( const char * , s#device * , void * , const s#backlight_ops * , const s#backlight_properties * ) 
backlight_device_unregister extern void backlight_device_unregister ( s#backlight_device * ) 
devm_backlight_device_register extern s#backlight_device * devm_backlight_device_register ( s#device * , const char * , s#device * , void * , const s#backlight_ops * , const s#backlight_properties * ) 
devm_backlight_device_unregister extern void devm_backlight_device_unregister ( s#device * , s#backlight_device * ) 
of_find_backlight_by_node s#backlight_device * of_find_backlight_by_node ( s#device_node * ) 

/* drivers/video/backlight/generic_bl.o */
genericbl_limit_intensity void genericbl_limit_intensity ( int ) 

/* drivers/video/backlight/lcd.o */
s#lcd_properties struct lcd_properties { int max_contrast ; } 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
s#lcd_ops struct lcd_ops { int ( * get_power ) ( s#lcd_device * ) ; int ( * early_set_power ) ( s#lcd_device * , int ) ; int ( * r_early_set_power ) ( s#lcd_device * , int ) ; int ( * set_power ) ( s#lcd_device * , int ) ; int ( * get_contrast ) ( s#lcd_device * ) ; int ( * set_contrast ) ( s#lcd_device * , int ) ; int ( * set_mode ) ( s#lcd_device * , s#fb_videomode * ) ; int ( * check_fb ) ( s#lcd_device * , s#fb_info * ) ; } 
s#lcd_device struct lcd_device { s#lcd_properties props ; s#mutex ops_lock ; s#lcd_ops * ops ; s#mutex update_lock ; s#notifier_block fb_notif ; s#device dev ; } 
lcd_device_register extern s#lcd_device * lcd_device_register ( const char * , s#device * , void * , s#lcd_ops * ) 
lcd_device_unregister extern void lcd_device_unregister ( s#lcd_device * ) 
devm_lcd_device_register extern s#lcd_device * devm_lcd_device_register ( s#device * , const char * , s#device * , void * , s#lcd_ops * ) 
devm_lcd_device_unregister extern void devm_lcd_device_unregister ( s#device * , s#lcd_device * ) 

/* drivers/video/cfbcopyarea.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
cfb_copyarea extern void cfb_copyarea ( s#fb_info * , const s#fb_copyarea * ) 

/* drivers/video/cfbfillrect.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
cfb_fillrect extern void cfb_fillrect ( s#fb_info * , const s#fb_fillrect * ) 

/* drivers/video/cfbimgblt.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
cfb_imageblit extern void cfb_imageblit ( s#fb_info * , const s#fb_image * ) 

/* drivers/video/console/bitblit.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#display struct display { const t#u_char * fontdata ; int userfont ; t#u_short scrollmode ; t#u_short inverse ; short yscroll ; int vrows ; int cursor_shape ; int con_rotate ; t#u32 xres_virtual ; t#u32 yres_virtual ; t#u32 height ; t#u32 width ; t#u32 bits_per_pixel ; t#u32 grayscale ; t#u32 nonstd ; t#u32 accel_flags ; t#u32 rotate ; s#fb_bitfield red ; s#fb_bitfield green ; s#fb_bitfield blue ; s#fb_bitfield transp ; const s#fb_videomode * mode ; } 
s#fbcon_ops struct fbcon_ops { void ( * bmove ) ( s#vc_data * , s#fb_info * , int , int , int , int , int , int ) ; void ( * clear ) ( s#vc_data * , s#fb_info * , int , int , int , int ) ; void ( * putcs ) ( s#vc_data * , s#fb_info * , const unsigned short * , int , int , int , int , int ) ; void ( * clear_margins ) ( s#vc_data * , s#fb_info * , int ) ; void ( * cursor ) ( s#vc_data * , s#fb_info * , int , int , int , int ) ; int ( * update_start ) ( s#fb_info * ) ; int ( * rotate_font ) ( s#fb_info * , s#vc_data * ) ; s#fb_var_screeninfo var ; s#timer_list cursor_timer ; s#fb_cursor cursor_state ; s#display * p ; int currcon ; int cursor_flash ; int cursor_reset ; int blank_state ; int graphics ; int save_graphics ; int flags ; int rotate ; int cur_rotate ; char * cursor_data ; t#u8 * fontbuffer ; t#u8 * fontdata ; t#u8 * cursor_src ; t#u32 cursor_size ; t#u32 fd_size ; } 
fbcon_set_bitops extern void fbcon_set_bitops ( s#fbcon_ops * ) 

/* drivers/video/console/fbcon_ccw.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
fbcon_rotate_ccw extern void fbcon_rotate_ccw ( s#fbcon_ops * ) 

/* drivers/video/console/fbcon_cw.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
fbcon_rotate_cw extern void fbcon_rotate_cw ( s#fbcon_ops * ) 

/* drivers/video/console/fbcon_rotate.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
fbcon_set_rotate extern void fbcon_set_rotate ( s#fbcon_ops * ) 

/* drivers/video/console/fbcon_ud.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
fbcon_rotate_ud extern void fbcon_rotate_ud ( s#fbcon_ops * ) 

/* drivers/video/console/softcursor.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
soft_cursor extern int soft_cursor ( s#fb_info * , s#fb_cursor * ) 

/* drivers/video/console/tileblit.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
fbcon_set_tileops extern void fbcon_set_tileops ( s#vc_data * , s#fb_info * ) 

/* drivers/video/fb_defio.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s#anon_vma struct anon_vma { s#anon_vma * root ; s#rw_semaphore rwsem ; t#atomic_t refcount ; s#rb_root rb_root ; } 
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
fb_deferred_io_fsync extern int fb_deferred_io_fsync ( s#file * , t#loff_t , t#loff_t , int ) 
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
fb_deferred_io_init extern void fb_deferred_io_init ( s#fb_info * ) 
fb_deferred_io_open extern void fb_deferred_io_open ( s#fb_info * , s#inode * , s#file * ) 
fb_deferred_io_cleanup extern void fb_deferred_io_cleanup ( s#fb_info * ) 

/* drivers/video/fb_notify.o */
fb_register_client extern int fb_register_client ( s#notifier_block * ) 
fb_unregister_client extern int fb_unregister_client ( s#notifier_block * ) 
fb_notifier_call_chain extern int fb_notifier_call_chain ( unsigned long , void * ) 

/* drivers/video/fb_sys_fops.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
fb_sys_read extern t#ssize_t fb_sys_read ( s#fb_info * , char * , t#size_t , t#loff_t * ) 
fb_sys_write extern t#ssize_t fb_sys_write ( s#fb_info * , const char * , t#size_t , t#loff_t * ) 

/* drivers/video/fbcmap.o */
fb_alloc_cmap extern int fb_alloc_cmap ( s#fb_cmap * , int , int ) 
fb_dealloc_cmap extern void fb_dealloc_cmap ( s#fb_cmap * ) 
fb_copy_cmap extern int fb_copy_cmap ( const s#fb_cmap * , s#fb_cmap * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
fb_set_cmap extern int fb_set_cmap ( s#fb_cmap * , s#fb_info * ) 
fb_default_cmap extern const s#fb_cmap * fb_default_cmap ( int ) 
fb_invert_cmaps extern void fb_invert_cmaps ( void ) 

/* drivers/video/fbmem.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
registered_fb extern s#fb_info * registered_fb [ 32 ] 
num_registered_fb extern int num_registered_fb 
lock_fb_info extern int lock_fb_info ( s#fb_info * ) 
fb_get_color_depth extern int fb_get_color_depth ( s#fb_var_screeninfo * , s#fb_fix_screeninfo * ) 
fb_pad_aligned_buffer extern void fb_pad_aligned_buffer ( t#u8 * , t#u32 , t#u8 * , t#u32 , t#u32 ) 
fb_pad_unaligned_buffer extern void fb_pad_unaligned_buffer ( t#u8 * , t#u32 , t#u8 * , t#u32 , t#u32 , t#u32 , t#u32 , t#u32 ) 
fb_get_buffer_offset extern char * fb_get_buffer_offset ( s#fb_info * , s#fb_pixmap * , t#u32 ) 
fb_show_logo extern int fb_show_logo ( s#fb_info * , int ) 
fb_pan_display extern int fb_pan_display ( s#fb_info * , s#fb_var_screeninfo * ) 
fb_set_var extern int fb_set_var ( s#fb_info * , s#fb_var_screeninfo * ) 
fb_blank extern int fb_blank ( s#fb_info * , int ) 
fb_class extern s#class * fb_class 
unlink_framebuffer extern int unlink_framebuffer ( s#fb_info * ) 
remove_conflicting_framebuffers extern int remove_conflicting_framebuffers ( s#apertures_struct * , const char * , t#bool ) 
register_framebuffer extern int register_framebuffer ( s#fb_info * ) 
unregister_framebuffer extern int unregister_framebuffer ( s#fb_info * ) 
fb_set_suspend extern void fb_set_suspend ( s#fb_info * , int ) 
fb_get_options extern int fb_get_options ( const char * , char * * ) 

/* drivers/video/fbmon.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
fb_firmware_edid extern const unsigned char * fb_firmware_edid ( s#device * ) 
fb_parse_edid extern int fb_parse_edid ( unsigned char * , s#fb_var_screeninfo * ) 
fb_edid_to_monspecs extern void fb_edid_to_monspecs ( unsigned char * , s#fb_monspecs * ) 
fb_edid_add_monspecs extern void fb_edid_add_monspecs ( unsigned char * , s#fb_monspecs * ) 
fb_get_mode extern int fb_get_mode ( int , t#u32 , s#fb_var_screeninfo * , s#fb_info * ) 
fb_validate_mode extern int fb_validate_mode ( const s#fb_var_screeninfo * , s#fb_info * ) 
fb_destroy_modedb extern void fb_destroy_modedb ( s#fb_videomode * ) 

/* drivers/video/fbsysfs.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
framebuffer_alloc extern s#fb_info * framebuffer_alloc ( t#size_t , s#device * ) 
framebuffer_release extern void framebuffer_release ( s#fb_info * ) 
fb_bl_default_curve extern void fb_bl_default_curve ( s#fb_info * , t#u8 , t#u8 , t#u8 ) 

/* drivers/video/hdmi.o */
hdmi_avi_infoframe_init int hdmi_avi_infoframe_init ( s#hdmi_avi_infoframe * ) 
hdmi_avi_infoframe_pack t#ssize_t hdmi_avi_infoframe_pack ( s#hdmi_avi_infoframe * , void * , t#size_t ) 
e#hdmi_spd_sdi enum hdmi_spd_sdi { HDMI_SPD_SDI_UNKNOWN , HDMI_SPD_SDI_DSTB , HDMI_SPD_SDI_DVDP , HDMI_SPD_SDI_DVHS , HDMI_SPD_SDI_HDDVR , HDMI_SPD_SDI_DVC , HDMI_SPD_SDI_DSC , HDMI_SPD_SDI_VCD , HDMI_SPD_SDI_GAME , HDMI_SPD_SDI_PC , HDMI_SPD_SDI_BD , HDMI_SPD_SDI_SACD , HDMI_SPD_SDI_HDDVD , HDMI_SPD_SDI_PMP , } 
s#hdmi_spd_infoframe struct hdmi_spd_infoframe { e#hdmi_infoframe_type type ; unsigned char version ; unsigned char length ; char vendor [ 8 ] ; char product [ 16 ] ; e#hdmi_spd_sdi sdi ; } 
hdmi_spd_infoframe_init int hdmi_spd_infoframe_init ( s#hdmi_spd_infoframe * , const char * , const char * ) 
hdmi_spd_infoframe_pack t#ssize_t hdmi_spd_infoframe_pack ( s#hdmi_spd_infoframe * , void * , t#size_t ) 
e#hdmi_audio_coding_type enum hdmi_audio_coding_type { HDMI_AUDIO_CODING_TYPE_STREAM , HDMI_AUDIO_CODING_TYPE_PCM , HDMI_AUDIO_CODING_TYPE_AC3 , HDMI_AUDIO_CODING_TYPE_MPEG1 , HDMI_AUDIO_CODING_TYPE_MP3 , HDMI_AUDIO_CODING_TYPE_MPEG2 , HDMI_AUDIO_CODING_TYPE_AAC_LC , HDMI_AUDIO_CODING_TYPE_DTS , HDMI_AUDIO_CODING_TYPE_ATRAC , HDMI_AUDIO_CODING_TYPE_DSD , HDMI_AUDIO_CODING_TYPE_EAC3 , HDMI_AUDIO_CODING_TYPE_DTS_HD , HDMI_AUDIO_CODING_TYPE_MLP , HDMI_AUDIO_CODING_TYPE_DST , HDMI_AUDIO_CODING_TYPE_WMA_PRO , } 
e#hdmi_audio_sample_size enum hdmi_audio_sample_size { HDMI_AUDIO_SAMPLE_SIZE_STREAM , HDMI_AUDIO_SAMPLE_SIZE_16 , HDMI_AUDIO_SAMPLE_SIZE_20 , HDMI_AUDIO_SAMPLE_SIZE_24 , } 
e#hdmi_audio_sample_frequency enum hdmi_audio_sample_frequency { HDMI_AUDIO_SAMPLE_FREQUENCY_STREAM , HDMI_AUDIO_SAMPLE_FREQUENCY_32000 , HDMI_AUDIO_SAMPLE_FREQUENCY_44100 , HDMI_AUDIO_SAMPLE_FREQUENCY_48000 , HDMI_AUDIO_SAMPLE_FREQUENCY_88200 , HDMI_AUDIO_SAMPLE_FREQUENCY_96000 , HDMI_AUDIO_SAMPLE_FREQUENCY_176400 , HDMI_AUDIO_SAMPLE_FREQUENCY_192000 , } 
e#hdmi_audio_coding_type_ext enum hdmi_audio_coding_type_ext { HDMI_AUDIO_CODING_TYPE_EXT_STREAM , HDMI_AUDIO_CODING_TYPE_EXT_HE_AAC , HDMI_AUDIO_CODING_TYPE_EXT_HE_AAC_V2 , HDMI_AUDIO_CODING_TYPE_EXT_MPEG_SURROUND , } 
s#hdmi_audio_infoframe struct hdmi_audio_infoframe { e#hdmi_infoframe_type type ; unsigned char version ; unsigned char length ; unsigned char channels ; e#hdmi_audio_coding_type coding_type ; e#hdmi_audio_sample_size sample_size ; e#hdmi_audio_sample_frequency sample_frequency ; e#hdmi_audio_coding_type_ext coding_type_ext ; unsigned char channel_allocation ; unsigned char level_shift_value ; t#bool downmix_inhibit ; } 
hdmi_audio_infoframe_init int hdmi_audio_infoframe_init ( s#hdmi_audio_infoframe * ) 
hdmi_audio_infoframe_pack t#ssize_t hdmi_audio_infoframe_pack ( s#hdmi_audio_infoframe * , void * , t#size_t ) 
hdmi_vendor_infoframe_init int hdmi_vendor_infoframe_init ( s#hdmi_vendor_infoframe * ) 
hdmi_vendor_infoframe_pack t#ssize_t hdmi_vendor_infoframe_pack ( s#hdmi_vendor_infoframe * , void * , t#size_t ) 
s#hdmi_any_infoframe struct hdmi_any_infoframe { e#hdmi_infoframe_type type ; unsigned char version ; unsigned char length ; } 
u#hdmi_vendor_any_infoframe union hdmi_vendor_any_infoframe { struct { e#hdmi_infoframe_type type ; unsigned char version ; unsigned char length ; unsigned int oui ; } any ; s#hdmi_vendor_infoframe hdmi ; } 
u#hdmi_infoframe union hdmi_infoframe { s#hdmi_any_infoframe any ; s#hdmi_avi_infoframe avi ; s#hdmi_spd_infoframe spd ; u#hdmi_vendor_any_infoframe vendor ; s#hdmi_audio_infoframe audio ; } 
hdmi_infoframe_pack t#ssize_t hdmi_infoframe_pack ( u#hdmi_infoframe * , void * , t#size_t ) 

/* drivers/video/logo/logo.o */
s#linux_logo struct linux_logo { int type ; unsigned int width ; unsigned int height ; unsigned int clutsize ; const unsigned char * clut ; const unsigned char * data ; } 
fb_find_logo extern const s#linux_logo * fb_find_logo ( int ) 

/* drivers/video/macmodes.o */
mac_vmode_to_var extern int mac_vmode_to_var ( int , int , s#fb_var_screeninfo * ) 
mac_map_monitor_sense extern int mac_map_monitor_sense ( int ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
mac_find_mode extern int mac_find_mode ( s#fb_var_screeninfo * , s#fb_info * , const char * , unsigned int ) 

/* drivers/video/modedb.o */
fb_mode_option extern const char * fb_mode_option 
vesa_modes extern const s#fb_videomode vesa_modes [ ] 
fb_destroy_modelist extern void fb_destroy_modelist ( s#list_head * ) 
fb_find_best_display extern const s#fb_videomode * fb_find_best_display ( const s#fb_monspecs * , s#list_head * ) 
fb_videomode_to_var extern void fb_videomode_to_var ( s#fb_var_screeninfo * , const s#fb_videomode * ) 
fb_var_to_videomode extern void fb_var_to_videomode ( s#fb_videomode * , const s#fb_var_screeninfo * ) 
fb_mode_is_equal extern int fb_mode_is_equal ( const s#fb_videomode * , const s#fb_videomode * ) 
fb_add_videomode extern int fb_add_videomode ( const s#fb_videomode * , s#list_head * ) 
fb_match_mode extern const s#fb_videomode * fb_match_mode ( const s#fb_var_screeninfo * , s#list_head * ) 
fb_find_best_mode extern const s#fb_videomode * fb_find_best_mode ( const s#fb_var_screeninfo * , s#list_head * ) 
fb_find_nearest_mode extern const s#fb_videomode * fb_find_nearest_mode ( const s#fb_videomode * , s#list_head * ) 
fb_videomode_to_modelist extern void fb_videomode_to_modelist ( const s#fb_videomode * , int , s#list_head * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
fb_find_mode extern int fb_find_mode ( s#fb_var_screeninfo * , s#fb_info * , const char * , const s#fb_videomode * , unsigned int , const s#fb_videomode * , unsigned int ) 
fb_find_mode_cvt extern int fb_find_mode_cvt ( s#fb_videomode * , int , int ) 

/* drivers/video/syscopyarea.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
sys_copyarea extern void sys_copyarea ( s#fb_info * , const s#fb_copyarea * ) 

/* drivers/video/sysfillrect.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
sys_fillrect extern void sys_fillrect ( s#fb_info * , const s#fb_fillrect * ) 

/* drivers/video/sysimgblt.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
sys_imageblit extern void sys_imageblit ( s#fb_info * , const s#fb_image * ) 

/* drivers/virtio/virtio.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s#virtio_device_id struct virtio_device_id { t#__u32 device ; t#__u32 vendor ; } 
s#virtqueue struct virtqueue { s#list_head list ; void ( * callback ) ( s#virtqueue * ) ; const char * name ; s#virtio_device * vdev ; unsigned int index ; unsigned int num_free ; void * priv ; } 
t#vq_callback_t typedef void vq_callback_t ( s#virtqueue * ) 
s#virtio_config_ops struct virtio_config_ops { void ( * get ) ( s#virtio_device * , unsigned , void * , unsigned ) ; void ( * set ) ( s#virtio_device * , unsigned , const void * , unsigned ) ; t#u8 ( * get_status ) ( s#virtio_device * ) ; void ( * set_status ) ( s#virtio_device * , t#u8 ) ; void ( * reset ) ( s#virtio_device * ) ; int ( * find_vqs ) ( s#virtio_device * , unsigned , s#virtqueue * [ ] , t#vq_callback_t * [ ] , const char * [ ] ) ; void ( * del_vqs ) ( s#virtio_device * ) ; t#u32 ( * get_features ) ( s#virtio_device * ) ; void ( * finalize_features ) ( s#virtio_device * ) ; const char * ( * bus_name ) ( s#virtio_device * ) ; int ( * set_vq_affinity ) ( s#virtqueue * , int ) ; } 
t#vrh_callback_t typedef void vrh_callback_t ( s#virtio_device * , s#vringh * ) 
s#vringh_config_ops struct vringh_config_ops { int ( * find_vrhs ) ( s#virtio_device * , unsigned , s#vringh * [ ] , t#vrh_callback_t * [ ] ) ; void ( * del_vrhs ) ( s#virtio_device * ) ; } 
s#virtio_device struct virtio_device { int index ; s#device dev ; s#virtio_device_id id ; const s#virtio_config_ops * config ; const s#vringh_config_ops * vringh_config ; s#list_head vqs ; unsigned long features [ 1 ] ; void * priv ; } 
virtio_check_driver_offered_feature void virtio_check_driver_offered_feature ( const s#virtio_device * , unsigned int ) 
s#virtio_driver struct virtio_driver { s#device_driver driver ; const s#virtio_device_id * id_table ; const unsigned int * feature_table ; unsigned int feature_table_size ; int ( * probe ) ( s#virtio_device * ) ; void ( * scan ) ( s#virtio_device * ) ; void ( * remove ) ( s#virtio_device * ) ; void ( * config_changed ) ( s#virtio_device * ) ; int ( * freeze ) ( s#virtio_device * ) ; int ( * restore ) ( s#virtio_device * ) ; } 
register_virtio_driver int register_virtio_driver ( s#virtio_driver * ) 
unregister_virtio_driver void unregister_virtio_driver ( s#virtio_driver * ) 
register_virtio_device int register_virtio_device ( s#virtio_device * ) 
unregister_virtio_device void unregister_virtio_device ( s#virtio_device * ) 

/* drivers/virtio/virtio_ring.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
virtqueue_add_sgs int virtqueue_add_sgs ( s#virtqueue * , s#scatterlist * [ ] , unsigned int , unsigned int , void * , t#gfp_t ) 
virtqueue_add_outbuf int virtqueue_add_outbuf ( s#virtqueue * , s#scatterlist [ ] , unsigned int , void * , t#gfp_t ) 
virtqueue_add_inbuf int virtqueue_add_inbuf ( s#virtqueue * , s#scatterlist [ ] , unsigned int , void * , t#gfp_t ) 
virtqueue_kick_prepare t#bool virtqueue_kick_prepare ( s#virtqueue * ) 
virtqueue_notify void virtqueue_notify ( s#virtqueue * ) 
virtqueue_kick void virtqueue_kick ( s#virtqueue * ) 
virtqueue_get_buf void * virtqueue_get_buf ( s#virtqueue * , unsigned int * ) 
virtqueue_disable_cb void virtqueue_disable_cb ( s#virtqueue * ) 
virtqueue_enable_cb_prepare unsigned virtqueue_enable_cb_prepare ( s#virtqueue * ) 
virtqueue_poll t#bool virtqueue_poll ( s#virtqueue * , unsigned ) 
virtqueue_enable_cb t#bool virtqueue_enable_cb ( s#virtqueue * ) 
virtqueue_enable_cb_delayed t#bool virtqueue_enable_cb_delayed ( s#virtqueue * ) 
virtqueue_detach_unused_buf void * virtqueue_detach_unused_buf ( s#virtqueue * ) 
vring_interrupt t#irqreturn_t vring_interrupt ( int , void * ) 
vring_new_virtqueue s#virtqueue * vring_new_virtqueue ( unsigned int , unsigned int , unsigned int , s#virtio_device * , t#bool , void * , void ( * ) ( s#virtqueue * ) , void ( * ) ( s#virtqueue * ) , const char * ) 
vring_del_virtqueue void vring_del_virtqueue ( s#virtqueue * ) 
vring_transport_features void vring_transport_features ( s#virtio_device * ) 
virtqueue_get_vring_size unsigned int virtqueue_get_vring_size ( s#virtqueue * ) 

/* drivers/watchdog/watchdog_core.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##file_operations
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##proc_dir_entry
s##iommu_group
s#watchdog_info struct watchdog_info { t#__u32 options ; t#__u32 firmware_version ; t#__u8 identity [ 32 ] ; } 
s#watchdog_ops struct watchdog_ops { s#module * owner ; int ( * start ) ( s#watchdog_device * ) ; int ( * stop ) ( s#watchdog_device * ) ; int ( * ping ) ( s#watchdog_device * ) ; unsigned int ( * status ) ( s#watchdog_device * ) ; int ( * set_timeout ) ( s#watchdog_device * , unsigned int ) ; unsigned int ( * get_timeleft ) ( s#watchdog_device * ) ; void ( * ref ) ( s#watchdog_device * ) ; void ( * unref ) ( s#watchdog_device * ) ; long ( * ioctl ) ( s#watchdog_device * , unsigned int , unsigned long ) ; } 
s#watchdog_device struct watchdog_device { int id ; s#cdev cdev ; s#device * dev ; s#device * parent ; const s#watchdog_info * info ; const s#watchdog_ops * ops ; unsigned int bootstatus ; unsigned int timeout ; unsigned int min_timeout ; unsigned int max_timeout ; void * driver_data ; s#mutex lock ; unsigned long status ; } 
watchdog_init_timeout extern int watchdog_init_timeout ( s#watchdog_device * , unsigned int , s#device * ) 
watchdog_register_device extern int watchdog_register_device ( s#watchdog_device * ) 
watchdog_unregister_device extern void watchdog_unregister_device ( s#watchdog_device * ) 

/* fs/aio.o */
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##sem_undo_list
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
kiocb_set_cancel_fn void kiocb_set_cancel_fn ( s#kiocb * , t#kiocb_cancel_fn * ) 
wait_on_sync_kiocb extern t#ssize_t wait_on_sync_kiocb ( s#kiocb * ) 
aio_complete extern void aio_complete ( s#kiocb * , long , long ) 

/* fs/anon_inodes.o */
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
anon_inode_getfile_private s#file * anon_inode_getfile_private ( const char * , const s#file_operations * , void * , int ) 
anon_inode_getfile s#file * anon_inode_getfile ( const char * , const s#file_operations * , void * , int ) 
anon_inode_getfd int anon_inode_getfd ( const char * , const s#file_operations * , void * , int ) 

/* fs/attr.o */
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##swap_info_struct
s##slab
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
inode_change_ok extern int inode_change_ok ( const s#inode * , s#iattr * ) 
inode_newsize_ok extern int inode_newsize_ok ( const s#inode * , t#loff_t ) 
setattr_copy extern void setattr_copy ( s#inode * , const s#iattr * ) 
notify_change extern int notify_change ( s#dentry * , s#iattr * , s#inode * * ) 

/* fs/bad_inode.o */
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##swap_info_struct
s##slab
s##kmem_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cdev
make_bad_inode extern void make_bad_inode ( s#inode * ) 
is_bad_inode extern int is_bad_inode ( s#inode * ) 
iget_failed extern void iget_failed ( s#inode * ) 

/* fs/bio.o */
s##kmem_cache_node
s##array_cache
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##seq_file
s##radix_tree_node
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##tvec_base
s##workqueue_struct
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##blk_mq_ctx
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##bsg_job
s##throtl_data
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##slab
s##export_operations
s##mtd_info
s##nameidata
s##cdev
fs_bio_set extern s#bio_set * fs_bio_set 
bio_init extern void bio_init ( s#bio * ) 
bio_reset extern void bio_reset ( s#bio * ) 
bio_alloc_bioset extern s#bio * bio_alloc_bioset ( t#gfp_t , int , s#bio_set * ) 
zero_fill_bio void zero_fill_bio ( s#bio * ) 
bio_put extern void bio_put ( s#bio * ) 
bio_phys_segments extern int bio_phys_segments ( s#request_queue * , s#bio * ) 
__bio_clone extern void __bio_clone ( s#bio * , s#bio * ) 
bio_clone_bioset extern s#bio * bio_clone_bioset ( s#bio * , t#gfp_t , s#bio_set * ) 
bio_get_nr_vecs extern int bio_get_nr_vecs ( s#block_device * ) 
bio_add_pc_page extern int bio_add_pc_page ( s#request_queue * , s#bio * , s#page * , unsigned int , unsigned int ) 
bio_add_page extern int bio_add_page ( s#bio * , s#page * , unsigned int , unsigned int ) 
submit_bio_wait extern int submit_bio_wait ( int , s#bio * ) 
bio_advance extern void bio_advance ( s#bio * , unsigned ) 
bio_alloc_pages extern int bio_alloc_pages ( s#bio * , t#gfp_t ) 
bio_copy_data extern void bio_copy_data ( s#bio * , s#bio * ) 
bio_uncopy_user extern int bio_uncopy_user ( s#bio * ) 
bio_copy_user extern s#bio * bio_copy_user ( s#request_queue * , s#rq_map_data * , unsigned long , unsigned int , int , t#gfp_t ) 
bio_map_user extern s#bio * bio_map_user ( s#request_queue * , s#block_device * , unsigned long , unsigned int , int , t#gfp_t ) 
bio_unmap_user extern void bio_unmap_user ( s#bio * ) 
bio_map_kern extern s#bio * bio_map_kern ( s#request_queue * , void * , unsigned int , t#gfp_t ) 
bio_copy_kern extern s#bio * bio_copy_kern ( s#request_queue * , void * , unsigned int , t#gfp_t , int ) 
bio_flush_dcache_pages extern void bio_flush_dcache_pages ( s#bio * ) 
bio_endio extern void bio_endio ( s#bio * , int ) 
s#bio_pair struct bio_pair { s#bio bio1 , bio2 ; s#bio_vec bv1 , bv2 ; s#bio_integrity_payload bip1 , bip2 ; s#bio_vec iv1 , iv2 ; t#atomic_t cnt ; int error ; } 
bio_pair_release extern void bio_pair_release ( s#bio_pair * ) 
bio_split extern s#bio_pair * bio_split ( s#bio * , int ) 
bio_sector_offset extern t#sector_t bio_sector_offset ( s#bio * , unsigned short , unsigned int ) 
bioset_free extern void bioset_free ( s#bio_set * ) 
bioset_create extern s#bio_set * bioset_create ( unsigned int , unsigned int ) 

/* fs/bio-integrity.o */
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##seq_file
s##radix_tree_node
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##tvec_base
s##workqueue_struct
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##blk_mq_ctx
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##kmem_cache_node
s##array_cache
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##slab
s##export_operations
s##mtd_info
s##nameidata
s##cdev
bio_integrity_alloc extern s#bio_integrity_payload * bio_integrity_alloc ( s#bio * , t#gfp_t , unsigned int ) 
bio_integrity_free extern void bio_integrity_free ( s#bio * ) 
bio_integrity_add_page extern int bio_integrity_add_page ( s#bio * , s#page * , unsigned int , unsigned int ) 
bio_integrity_enabled extern int bio_integrity_enabled ( s#bio * ) 
bio_integrity_tag_size unsigned int bio_integrity_tag_size ( s#bio * ) 
bio_integrity_set_tag extern int bio_integrity_set_tag ( s#bio * , void * , unsigned int ) 
bio_integrity_get_tag extern int bio_integrity_get_tag ( s#bio * , void * , unsigned int ) 
bio_integrity_prep extern int bio_integrity_prep ( s#bio * ) 
bio_integrity_endio extern void bio_integrity_endio ( s#bio * , int ) 
bio_integrity_advance extern void bio_integrity_advance ( s#bio * , unsigned int ) 
bio_integrity_trim extern void bio_integrity_trim ( s#bio * , unsigned int , unsigned int ) 
bio_integrity_split extern void bio_integrity_split ( s#bio * , s#bio_pair * , int ) 
bio_integrity_clone extern int bio_integrity_clone ( s#bio * , s#bio * , t#gfp_t ) 
bioset_integrity_create extern int bioset_integrity_create ( s#bio_set * , int ) 
bioset_integrity_free extern void bioset_integrity_free ( s#bio_set * ) 

/* fs/block_dev.o */
s##posix_acl
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kioctx
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##cgroup_taskset
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s#fid struct fid { union { struct { t#u32 ino ; t#u32 gen ; t#u32 parent_ino ; t#u32 parent_gen ; } i32 ; struct { t#u32 block ; t#u16 partref ; t#u16 parent_partref ; t#u32 generation ; t#u32 parent_block ; t#u32 parent_generation ; } udf ; t#__u32 raw [ 0 ] ; } ; } 
s#export_operations struct export_operations { int ( * encode_fh ) ( s#inode * , t#__u32 * , int * , s#inode * ) ; s#dentry * ( * fh_to_dentry ) ( s#super_block * , s#fid * , int , int ) ; s#dentry * ( * fh_to_parent ) ( s#super_block * , s#fid * , int , int ) ; int ( * get_name ) ( s#dentry * , char * , s#dentry * ) ; s#dentry * ( * get_parent ) ( s#dentry * ) ; int ( * commit_metadata ) ( s#inode * ) ; } 
s##mtd_info
s##cdev
I_BDEV extern s#block_device * I_BDEV ( s#inode * ) 
kill_bdev extern void kill_bdev ( s#block_device * ) 
invalidate_bdev extern void invalidate_bdev ( s#block_device * ) 
set_blocksize extern int set_blocksize ( s#block_device * , int ) 
sb_set_blocksize extern int sb_set_blocksize ( s#super_block * , int ) 
sb_min_blocksize extern int sb_min_blocksize ( s#super_block * , int ) 
sync_blockdev extern int sync_blockdev ( s#block_device * ) 
fsync_bdev extern int fsync_bdev ( s#block_device * ) 
freeze_bdev extern s#super_block * freeze_bdev ( s#block_device * ) 
thaw_bdev extern int thaw_bdev ( s#block_device * , s#super_block * ) 
blkdev_fsync extern int blkdev_fsync ( s#file * , t#loff_t , t#loff_t , int ) 
bdget extern s#block_device * bdget ( t#dev_t ) 
bdgrab extern s#block_device * bdgrab ( s#block_device * ) 
bdput extern void bdput ( s#block_device * ) 
bd_link_disk_holder extern int bd_link_disk_holder ( s#block_device * , s#gendisk * ) 
bd_unlink_disk_holder extern void bd_unlink_disk_holder ( s#block_device * , s#gendisk * ) 
check_disk_size_change extern void check_disk_size_change ( s#gendisk * , s#block_device * ) 
revalidate_disk extern int revalidate_disk ( s#gendisk * ) 
check_disk_change extern int check_disk_change ( s#block_device * ) 
bd_set_size extern void bd_set_size ( s#block_device * , t#loff_t ) 
blkdev_get extern int blkdev_get ( s#block_device * , t#fmode_t , void * ) 
blkdev_get_by_path extern s#block_device * blkdev_get_by_path ( const char * , t#fmode_t , void * ) 
blkdev_get_by_dev extern s#block_device * blkdev_get_by_dev ( t#dev_t , t#fmode_t , void * ) 
blkdev_put extern void blkdev_put ( s#block_device * , t#fmode_t ) 
blkdev_aio_write extern t#ssize_t blkdev_aio_write ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t ) 
ioctl_by_bdev extern int ioctl_by_bdev ( s#block_device * , unsigned , unsigned long ) 
lookup_bdev extern s#block_device * lookup_bdev ( const char * ) 
__invalidate_device extern int __invalidate_device ( s#block_device * , t#bool ) 

/* fs/buffer.o */
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##workqueue_struct
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s##slab
t#bh_end_io_t typedef void ( bh_end_io_t ) ( s#buffer_head * , int ) 
s#buffer_head struct buffer_head { unsigned long b_state ; s#buffer_head * b_this_page ; s#page * b_page ; t#sector_t b_blocknr ; t#size_t b_size ; char * b_data ; s#block_device * b_bdev ; t#bh_end_io_t * b_end_io ; void * b_private ; s#list_head b_assoc_buffers ; s#address_space * b_assoc_map ; t#atomic_t b_count ; } 
init_buffer void init_buffer ( s#buffer_head * , t#bh_end_io_t * , void * ) 
touch_buffer void touch_buffer ( s#buffer_head * ) 
__lock_buffer void __lock_buffer ( s#buffer_head * ) 
unlock_buffer void unlock_buffer ( s#buffer_head * ) 
buffer_check_dirty_writeback void buffer_check_dirty_writeback ( s#page * , t#bool * , t#bool * ) 
__wait_on_buffer void __wait_on_buffer ( s#buffer_head * ) 
end_buffer_read_sync void end_buffer_read_sync ( s#buffer_head * , int ) 
end_buffer_write_sync void end_buffer_write_sync ( s#buffer_head * , int ) 
end_buffer_async_write void end_buffer_async_write ( s#buffer_head * , int ) 
mark_buffer_async_write void mark_buffer_async_write ( s#buffer_head * ) 
sync_mapping_buffers int sync_mapping_buffers ( s#address_space * ) 
mark_buffer_dirty_inode void mark_buffer_dirty_inode ( s#buffer_head * , s#inode * ) 
__set_page_dirty_buffers extern int __set_page_dirty_buffers ( s#page * ) 
invalidate_inode_buffers void invalidate_inode_buffers ( s#inode * ) 
alloc_page_buffers s#buffer_head * alloc_page_buffers ( s#page * , unsigned long , int ) 
mark_buffer_dirty void mark_buffer_dirty ( s#buffer_head * ) 
__brelse void __brelse ( s#buffer_head * ) 
__bforget void __bforget ( s#buffer_head * ) 
__find_get_block s#buffer_head * __find_get_block ( s#block_device * , t#sector_t , unsigned ) 
__getblk s#buffer_head * __getblk ( s#block_device * , t#sector_t , unsigned ) 
__breadahead void __breadahead ( s#block_device * , t#sector_t , unsigned int ) 
__bread s#buffer_head * __bread ( s#block_device * , t#sector_t , unsigned ) 
invalidate_bh_lrus void invalidate_bh_lrus ( void ) 
set_bh_page void set_bh_page ( s#buffer_head * , s#page * , unsigned long ) 
block_invalidatepage void block_invalidatepage ( s#page * , unsigned int , unsigned int ) 
create_empty_buffers void create_empty_buffers ( s#page * , unsigned long , unsigned long ) 
unmap_underlying_metadata void unmap_underlying_metadata ( s#block_device * , t#sector_t ) 
page_zero_new_buffers void page_zero_new_buffers ( s#page * , unsigned , unsigned ) 
t#get_block_t typedef int ( get_block_t ) ( s#inode * , t#sector_t , s#buffer_head * , int ) 
__block_write_begin int __block_write_begin ( s#page * , t#loff_t , unsigned , t#get_block_t * ) 
block_write_begin int block_write_begin ( s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , t#get_block_t * ) 
block_write_end int block_write_end ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) 
generic_write_end int generic_write_end ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) 
block_is_partially_uptodate int block_is_partially_uptodate ( s#page * , t#read_descriptor_t * , unsigned long ) 
block_read_full_page int block_read_full_page ( s#page * , t#get_block_t * ) 
generic_cont_expand_simple int generic_cont_expand_simple ( s#inode * , t#loff_t ) 
cont_write_begin int cont_write_begin ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , void * * , t#get_block_t * , t#loff_t * ) 
block_commit_write int block_commit_write ( s#page * , unsigned , unsigned ) 
__block_page_mkwrite int __block_page_mkwrite ( s#vm_area_struct * , s#vm_fault * , t#get_block_t ) 
block_page_mkwrite int block_page_mkwrite ( s#vm_area_struct * , s#vm_fault * , t#get_block_t ) 
nobh_write_begin int nobh_write_begin ( s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , void * * , t#get_block_t * ) 
nobh_write_end int nobh_write_end ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) 
nobh_writepage int nobh_writepage ( s#page * , t#get_block_t * , s#writeback_control * ) 
nobh_truncate_page int nobh_truncate_page ( s#address_space * , t#loff_t , t#get_block_t * ) 
block_truncate_page int block_truncate_page ( s#address_space * , t#loff_t , t#get_block_t * ) 
block_write_full_page_endio int block_write_full_page_endio ( s#page * , t#get_block_t * , s#writeback_control * , t#bh_end_io_t * ) 
block_write_full_page int block_write_full_page ( s#page * , t#get_block_t * , s#writeback_control * ) 
generic_block_bmap t#sector_t generic_block_bmap ( s#address_space * , t#sector_t , t#get_block_t * ) 
_submit_bh int _submit_bh ( int , s#buffer_head * , unsigned long ) 
submit_bh int submit_bh ( int , s#buffer_head * ) 
ll_rw_block void ll_rw_block ( int , int , s#buffer_head * [ ] ) 
write_dirty_buffer void write_dirty_buffer ( s#buffer_head * , int ) 
__sync_dirty_buffer int __sync_dirty_buffer ( s#buffer_head * , int ) 
sync_dirty_buffer int sync_dirty_buffer ( s#buffer_head * ) 
try_to_free_buffers int try_to_free_buffers ( s#page * ) 
alloc_buffer_head s#buffer_head * alloc_buffer_head ( t#gfp_t ) 
free_buffer_head void free_buffer_head ( s#buffer_head * ) 
bh_uptodate_or_lock int bh_uptodate_or_lock ( s#buffer_head * ) 
bh_submit_read int bh_submit_read ( s#buffer_head * ) 

/* fs/char_dev.o */
register_chrdev_region extern int register_chrdev_region ( t#dev_t , unsigned , const char * ) 
unregister_chrdev_region extern void unregister_chrdev_region ( t#dev_t , unsigned ) 
alloc_chrdev_region extern int alloc_chrdev_region ( t#dev_t * , unsigned , unsigned , const char * ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##kstatfs
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##proc_dir_entry
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
cdev_init void cdev_init ( s#cdev * , const s#file_operations * ) 
cdev_alloc s#cdev * cdev_alloc ( void ) 
cdev_del void cdev_del ( s#cdev * ) 
cdev_add int cdev_add ( s#cdev * , t#dev_t , unsigned ) 
__register_chrdev extern int __register_chrdev ( unsigned int , unsigned int , unsigned int , const char * , const s#file_operations * ) 
__unregister_chrdev extern void __unregister_chrdev ( unsigned int , unsigned int , unsigned int , const char * ) 
directly_mappable_cdev_bdi extern s#backing_dev_info directly_mappable_cdev_bdi 

/* fs/configfs/dir.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
configfs_depend_item int configfs_depend_item ( s#configfs_subsystem * , s#config_item * ) 
configfs_undepend_item void configfs_undepend_item ( s#configfs_subsystem * , s#config_item * ) 
configfs_register_subsystem int configfs_register_subsystem ( s#configfs_subsystem * ) 
configfs_unregister_subsystem void configfs_unregister_subsystem ( s#configfs_subsystem * ) 

/* fs/configfs/item.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##dentry
config_item_set_name extern int config_item_set_name ( s#config_item * , const char * , ... ) 
config_item_init_type_name extern void config_item_init_type_name ( s#config_item * , const char * , s#config_item_type * ) 
config_group_init_type_name extern void config_group_init_type_name ( s#config_group * , const char * , s#config_item_type * ) 
config_item_init extern void config_item_init ( s#config_item * ) 
config_group_init extern void config_group_init ( s#config_group * ) 
config_item_get extern s#config_item * config_item_get ( s#config_item * ) 
config_item_put extern void config_item_put ( s#config_item * ) 
config_group_find_item extern s#config_item * config_group_find_item ( s#config_group * , const char * ) 

/* fs/coredump.o */
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##user_namespace
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s#linux_binprm struct linux_binprm { char buf [ 128 ] ; s#vm_area_struct * vma ; unsigned long vma_pages ; s#mm_struct * mm ; unsigned long p ; unsigned int cred_prepared : 1 , cap_effective : 1 ; unsigned int recursion_depth ; s#file * file ; s#cred * cred ; int unsafe ; unsigned int per_clear ; int argc , envc ; const char * filename ; const char * interp ; unsigned interp_flags ; unsigned interp_data ; unsigned long loader , exec ; char tcomm [ 16 ] ; } 
s#coredump_params struct coredump_params { t#siginfo_t * siginfo ; s#pt_regs * regs ; s#file * file ; unsigned long limit ; unsigned long mm_flags ; } 
s#linux_binfmt struct linux_binfmt { s#list_head lh ; s#module * module ; int ( * load_binary ) ( s#linux_binprm * ) ; int ( * load_shlib ) ( s#file * ) ; int ( * core_dump ) ( s#coredump_params * ) ; unsigned long min_coredump ; } 
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##sem_undo_list
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##ftrace_hash
s#fs_struct struct fs_struct { int users ; t#spinlock_t lock ; t#seqcount_t seq ; int umask ; int in_exec ; s#path root , pwd ; } 
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
dump_write extern int dump_write ( s#file * , const void * , int ) 
dump_seek extern int dump_seek ( s#file * , t#loff_t ) 

/* fs/dcache.o */
sysctl_vfs_cache_pressure extern int sysctl_vfs_cache_pressure 
rename_lock extern t#seqlock_t rename_lock 
s##posix_acl
s##nameidata
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##kiocb
s##iovec
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##files_struct
s##uts_namespace
s##ipc_namespace
s#mnt_pcp struct mnt_pcp { int mnt_count ; int mnt_writers ; } 
s#mountpoint struct mountpoint { s#list_head m_hash ; s#dentry * m_dentry ; int m_count ; } 
s#mount struct mount { s#list_head mnt_hash ; s#mount * mnt_parent ; s#dentry * mnt_mountpoint ; s#vfsmount mnt ; s#mnt_pcp * mnt_pcp ; s#list_head mnt_mounts ; s#list_head mnt_child ; s#list_head mnt_instance ; const char * mnt_devname ; s#list_head mnt_list ; s#list_head mnt_expire ; s#list_head mnt_share ; s#list_head mnt_slave_list ; s#list_head mnt_slave ; s#mount * mnt_master ; s#mnt_namespace * mnt_ns ; s#mountpoint * mnt_mp ; s#hlist_head mnt_fsnotify_marks ; t#__u32 mnt_fsnotify_mask ; int mnt_id ; int mnt_group_id ; int mnt_expiry_mark ; int mnt_pinned ; int mnt_ghosts ; } 
s#mnt_namespace struct mnt_namespace { t#atomic_t count ; unsigned int proc_inum ; s#mount * root ; s#list_head list ; s#user_namespace * user_ns ; t#u64 seq ; t#wait_queue_head_t poll ; int event ; } 
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
__d_drop extern void __d_drop ( s#dentry * ) 
d_drop extern void d_drop ( s#dentry * ) 
dput extern void dput ( s#dentry * ) 
d_invalidate extern int d_invalidate ( s#dentry * ) 
dget_parent extern s#dentry * dget_parent ( s#dentry * ) 
d_find_alias extern s#dentry * d_find_alias ( s#inode * ) 
d_prune_aliases extern void d_prune_aliases ( s#inode * ) 
shrink_dcache_sb extern void shrink_dcache_sb ( s#super_block * ) 
have_submounts extern int have_submounts ( s#dentry * ) 
shrink_dcache_parent extern void shrink_dcache_parent ( s#dentry * ) 
check_submounts_and_drop extern int check_submounts_and_drop ( s#dentry * ) 
d_alloc extern s#dentry * d_alloc ( s#dentry * , const s#qstr * ) 
d_alloc_pseudo extern s#dentry * d_alloc_pseudo ( s#super_block * , const s#qstr * ) 
d_alloc_name s#dentry * d_alloc_name ( s#dentry * , const char * ) 
d_set_d_op extern void d_set_d_op ( s#dentry * , const s#dentry_operations * ) 
d_instantiate extern void d_instantiate ( s#dentry * , s#inode * ) 
d_instantiate_unique extern s#dentry * d_instantiate_unique ( s#dentry * , s#inode * ) 
d_make_root extern s#dentry * d_make_root ( s#inode * ) 
d_find_any_alias extern s#dentry * d_find_any_alias ( s#inode * ) 
d_obtain_alias extern s#dentry * d_obtain_alias ( s#inode * ) 
d_splice_alias extern s#dentry * d_splice_alias ( s#inode * , s#dentry * ) 
d_add_ci extern s#dentry * d_add_ci ( s#dentry * , s#inode * , s#qstr * ) 
d_lookup extern s#dentry * d_lookup ( const s#dentry * , const s#qstr * ) 
d_hash_and_lookup extern s#dentry * d_hash_and_lookup ( s#dentry * , s#qstr * ) 
d_validate extern int d_validate ( s#dentry * , s#dentry * ) 
d_delete extern void d_delete ( s#dentry * ) 
d_rehash extern void d_rehash ( s#dentry * ) 
dentry_update_name_case extern void dentry_update_name_case ( s#dentry * , s#qstr * ) 
d_move extern void d_move ( s#dentry * , s#dentry * ) 
d_materialise_unique extern s#dentry * d_materialise_unique ( s#dentry * , s#inode * ) 
d_path extern char * d_path ( const s#path * , char * , int ) 
dentry_path_raw extern char * dentry_path_raw ( s#dentry * , char * , int ) 
d_tmpfile extern void d_tmpfile ( s#dentry * , s#inode * ) 
names_cachep extern s#kmem_cache * names_cachep 
d_genocide extern void d_genocide ( s#dentry * ) 

/* fs/dcookies.o */
s##dcookie_user
dcookie_register s#dcookie_user * dcookie_register ( void ) 
dcookie_unregister void dcookie_unregister ( s#dcookie_user * ) 
s##posix_acl
s##nameidata
s##module
s##kiocb
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##mempolicy
s##numa_group
s##pipe_inode_info
s##radix_tree_node
s##writeback_control
s##swap_info_struct
s##slab
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cdev
get_dcookie int get_dcookie ( s#path * , unsigned long * ) 

/* fs/debugfs/file.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##kstatfs
s##user_namespace
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
debugfs_create_u8 s#dentry * debugfs_create_u8 ( const char * , t#umode_t , s#dentry * , t#u8 * ) 
debugfs_create_u16 s#dentry * debugfs_create_u16 ( const char * , t#umode_t , s#dentry * , t#u16 * ) 
debugfs_create_u32 s#dentry * debugfs_create_u32 ( const char * , t#umode_t , s#dentry * , t#u32 * ) 
debugfs_create_u64 s#dentry * debugfs_create_u64 ( const char * , t#umode_t , s#dentry * , t#u64 * ) 
debugfs_create_x8 s#dentry * debugfs_create_x8 ( const char * , t#umode_t , s#dentry * , t#u8 * ) 
debugfs_create_x16 s#dentry * debugfs_create_x16 ( const char * , t#umode_t , s#dentry * , t#u16 * ) 
debugfs_create_x32 s#dentry * debugfs_create_x32 ( const char * , t#umode_t , s#dentry * , t#u32 * ) 
debugfs_create_x64 s#dentry * debugfs_create_x64 ( const char * , t#umode_t , s#dentry * , t#u64 * ) 
debugfs_create_size_t s#dentry * debugfs_create_size_t ( const char * , t#umode_t , s#dentry * , t#size_t * ) 
debugfs_create_atomic_t s#dentry * debugfs_create_atomic_t ( const char * , t#umode_t , s#dentry * , t#atomic_t * ) 
debugfs_create_bool s#dentry * debugfs_create_bool ( const char * , t#umode_t , s#dentry * , t#u32 * ) 
s#debugfs_blob_wrapper struct debugfs_blob_wrapper { void * data ; unsigned long size ; } 
debugfs_create_blob s#dentry * debugfs_create_blob ( const char * , t#umode_t , s#dentry * , s#debugfs_blob_wrapper * ) 
debugfs_create_u32_array s#dentry * debugfs_create_u32_array ( const char * , t#umode_t , s#dentry * , t#u32 * , t#u32 ) 
s#debugfs_reg32 struct debugfs_reg32 { char * name ; unsigned long offset ; } 
debugfs_print_regs32 int debugfs_print_regs32 ( s#seq_file * , const s#debugfs_reg32 * , int , void * , char * ) 
s#debugfs_regset32 struct debugfs_regset32 { const s#debugfs_reg32 * regs ; int nregs ; void * base ; } 
debugfs_create_regset32 s#dentry * debugfs_create_regset32 ( const char * , t#umode_t , s#dentry * , s#debugfs_regset32 * ) 

/* fs/debugfs/inode.o */
s##posix_acl
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##workqueue_struct
s##cdev
debugfs_create_file s#dentry * debugfs_create_file ( const char * , t#umode_t , s#dentry * , void * , const s#file_operations * ) 
debugfs_create_dir s#dentry * debugfs_create_dir ( const char * , s#dentry * ) 
debugfs_create_symlink s#dentry * debugfs_create_symlink ( const char * , s#dentry * , const char * ) 
debugfs_remove void debugfs_remove ( s#dentry * ) 
debugfs_remove_recursive void debugfs_remove_recursive ( s#dentry * ) 
debugfs_rename s#dentry * debugfs_rename ( s#dentry * , s#dentry * , s#dentry * , const char * ) 
debugfs_initialized t#bool debugfs_initialized ( void ) 

/* fs/direct-io.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kioctx
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##cgroup_taskset
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
dio_end_io void dio_end_io ( s#bio * , int ) 
t#dio_iodone_t typedef void ( dio_iodone_t ) ( s#kiocb * , t#loff_t , t#ssize_t , void * ) 
t#dio_submit_t typedef void ( dio_submit_t ) ( int , s#bio * , s#inode * , t#loff_t ) 
__blockdev_direct_IO t#ssize_t __blockdev_direct_IO ( int , s#kiocb * , s#inode * , s#block_device * , const s#iovec * , t#loff_t , unsigned long , t#get_block_t , t#dio_iodone_t , t#dio_submit_t , int ) 

/* fs/dmapi/dmapi_sysent.o */
s##posix_acl
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##hd_struct
s##gendisk
s##request_queue
s##cdev
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##workqueue_struct
t#dm_right_t typedef enum { DM_RIGHT_NULL , DM_RIGHT_SHARED , DM_RIGHT_EXCL } dm_right_t 
dm_send_mount_event int dm_send_mount_event ( s#super_block * , t#dm_right_t , s#inode * , t#dm_right_t , s#inode * , t#dm_right_t , char * , char * ) 
t#dm_eventtype_t typedef enum { DM_EVENT_INVALID = - 1 , DM_EVENT_CANCEL = 0 , DM_EVENT_MOUNT = 1 , DM_EVENT_PREUNMOUNT = 2 , DM_EVENT_UNMOUNT = 3 , DM_EVENT_DEBUT = 4 , DM_EVENT_CREATE = 5 , DM_EVENT_CLOSE = 6 , DM_EVENT_POSTCREATE = 7 , DM_EVENT_REMOVE = 8 , DM_EVENT_POSTREMOVE = 9 , DM_EVENT_RENAME = 10 , DM_EVENT_POSTRENAME = 11 , DM_EVENT_LINK = 12 , DM_EVENT_POSTLINK = 13 , DM_EVENT_SYMLINK = 14 , DM_EVENT_POSTSYMLINK = 15 , DM_EVENT_READ = 16 , DM_EVENT_WRITE = 17 , DM_EVENT_TRUNCATE = 18 , DM_EVENT_ATTRIBUTE = 19 , DM_EVENT_DESTROY = 20 , DM_EVENT_NOSPACE = 21 , DM_EVENT_USER = 22 , DM_EVENT_MAX = 23 } dm_eventtype_t 
t#__kernel_mode_t typedef unsigned int __kernel_mode_t 
t#mode_t typedef t#__kernel_mode_t mode_t 
dm_send_namesp_event int dm_send_namesp_event ( t#dm_eventtype_t , s#super_block * , s#inode * , t#dm_right_t , s#inode * , t#dm_right_t , const char * , const char * , t#mode_t , int , int ) 
dm_send_unmount_event void dm_send_unmount_event ( s#super_block * , s#inode * , t#dm_right_t , t#mode_t , int , int ) 
t#dm_off_t typedef t#__s64 dm_off_t 
dm_send_data_event int dm_send_data_event ( t#dm_eventtype_t , s#inode * , t#dm_right_t , t#dm_off_t , t#size_t , int ) 
dm_send_destroy_event int dm_send_destroy_event ( s#inode * , t#dm_right_t ) 
t#dm_fsid_t typedef t#__u64 dm_fsid_t 
s#dm_fid struct dm_fid { t#__u16 dm_fid_len ; t#__u16 dm_fid_pad ; t#__u32 dm_fid_gen ; t#__u64 dm_fid_ino ; } 
t#dm_fid_t typedef s#dm_fid dm_fid_t 
s#dm_handle struct dm_handle { union { t#__s64 align ; t#dm_fsid_t _ha_fsid ; } ha_u ; t#dm_fid_t ha_fid ; } 
t#dm_handle_t typedef s#dm_handle dm_handle_t 
dm_ip_to_handle int dm_ip_to_handle ( s#inode * , t#dm_handle_t * ) 
s#filesystem_dmapi_operations struct filesystem_dmapi_operations { int ( * get_fsys_vector ) ( s#super_block * , void * ) ; int ( * fh_to_inode ) ( s#super_block * , s#inode * * , t#dm_fid_t * ) ; int ( * inode_to_fh ) ( s#inode * , t#dm_fid_t * , t#dm_fsid_t * ) ; void ( * get_fsid ) ( s#super_block * , t#dm_fsid_t * ) ; int ( * flushing ) ( s#inode * ) ; } 
dmapi_register void dmapi_register ( s#file_system_type * , s#filesystem_dmapi_operations * ) 
dmapi_unregister void dmapi_unregister ( s#file_system_type * ) 
dmapi_registered int dmapi_registered ( s#file_system_type * , s#filesystem_dmapi_operations * * ) 
dm_release_threads int dm_release_threads ( s#super_block * , s#inode * , int ) 

/* fs/eventfd.o */
s##eventfd_ctx
eventfd_signal t#__u64 eventfd_signal ( s#eventfd_ctx * , t#__u64 ) 
eventfd_ctx_get s#eventfd_ctx * eventfd_ctx_get ( s#eventfd_ctx * ) 
eventfd_ctx_put void eventfd_ctx_put ( s#eventfd_ctx * ) 
eventfd_ctx_remove_wait_queue int eventfd_ctx_remove_wait_queue ( s#eventfd_ctx * , t#wait_queue_t * , t#__u64 * ) 
eventfd_ctx_read t#ssize_t eventfd_ctx_read ( s#eventfd_ctx * , int , t#__u64 * ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
eventfd_fget s#file * eventfd_fget ( int ) 
eventfd_ctx_fdget s#eventfd_ctx * eventfd_ctx_fdget ( int ) 
eventfd_ctx_fileget s#eventfd_ctx * eventfd_ctx_fileget ( s#file * ) 

/* fs/exec.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##kiocb
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##slab
s##mempolicy
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##event_filter
s##ftrace_hash
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##ring_buffer_iter
__register_binfmt extern void __register_binfmt ( s#linux_binfmt * , int ) 
unregister_binfmt extern void unregister_binfmt ( s#linux_binfmt * ) 
copy_strings_kernel extern int copy_strings_kernel ( int , const char * const * , s#linux_binprm * ) 
setup_arg_pages extern int setup_arg_pages ( s#linux_binprm * , unsigned long , int ) 
open_exec extern s#file * open_exec ( const char * ) 
kernel_read extern int kernel_read ( s#file * , t#loff_t , char * , unsigned long ) 
read_code extern t#ssize_t read_code ( s#file * , unsigned long , t#loff_t , t#size_t ) 
get_task_comm extern char * get_task_comm ( char * , s#task_struct * ) 
flush_old_exec extern int flush_old_exec ( s#linux_binprm * ) 
would_dump extern void would_dump ( s#linux_binprm * , s#file * ) 
setup_new_exec extern void setup_new_exec ( s#linux_binprm * ) 
bprm_change_interp extern int bprm_change_interp ( char * , s#linux_binprm * ) 
install_exec_creds extern void install_exec_creds ( s#linux_binprm * ) 
prepare_binprm extern int prepare_binprm ( s#linux_binprm * ) 
remove_arg_zero extern int remove_arg_zero ( s#linux_binprm * ) 
search_binary_handler extern int search_binary_handler ( s#linux_binprm * ) 
set_binfmt extern void set_binfmt ( s#linux_binfmt * ) 

/* fs/exofs/ore.o */
e#pnfs_osd_raid_algorithm4 enum pnfs_osd_raid_algorithm4 { PNFS_OSD_RAID_0 = 1 , PNFS_OSD_RAID_4 = 2 , PNFS_OSD_RAID_5 = 3 , PNFS_OSD_RAID_PQ = 4 } 
s#ore_layout struct ore_layout { e#pnfs_osd_raid_algorithm4 raid_algorithm ; unsigned stripe_unit ; unsigned mirrors_p1 ; unsigned group_width ; unsigned parity ; t#u64 group_depth ; unsigned group_count ; unsigned long max_io_length ; } 
ore_verify_layout int ore_verify_layout ( unsigned , s#ore_layout * ) 
e#EC_COMP_USAGE enum EC_COMP_USAGE { EC_SINGLE_COMP = 0 , EC_MULTPLE_COMPS = 0xffffffff } 
s#ore_comp struct ore_comp { s#osd_obj_id obj ; t#u8 cred [ E#OSD_CAP_LEN ] ; } 
s##Scsi_Host
s##blk_mq_ctx
s#posix_acl_entry struct posix_acl_entry { short e_tag ; unsigned short e_perm ; union { t#kuid_t e_uid ; t#kgid_t e_gid ; } ; } 
s#posix_acl struct posix_acl { union { t#atomic_t a_refcount ; s#callback_head a_rcu ; } ; unsigned int a_count ; s#posix_acl_entry a_entries [ 0 ] ; } 
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##scsi_cmnd
s##scsi_sense_hdr
s#ore_dev struct ore_dev { s#osd_dev * od ; } 
s#ore_components struct ore_components { unsigned first_dev ; unsigned numdevs ; e#EC_COMP_USAGE single_comp ; s#ore_comp * comps ; s#ore_dev * * ods ; } 
s#ore_striping_info struct ore_striping_info { t#u64 offset ; t#u64 obj_offset ; t#u64 length ; t#u64 first_stripe_start ; t#u64 M ; unsigned bytes_in_stripe ; unsigned dev ; unsigned par_dev ; unsigned unit_off ; unsigned cur_pg ; unsigned cur_comp ; unsigned maxdevUnits ; } 
t#ore_io_done_fn typedef void ( * ore_io_done_fn ) ( s#ore_io_state * , void * ) 
s##__stripe_pages_2d
s#_ore_r4w_op struct _ore_r4w_op { s#page * ( * get_page ) ( void * , t#u64 , t#bool * ) ; void ( * put_page ) ( void * , s#page * ) ; } 
s#ore_per_dev_state struct ore_per_dev_state { s#osd_request * or ; s#bio * bio ; t#loff_t offset ; unsigned length ; unsigned last_sgs_total ; unsigned dev ; s#osd_sg_entry * sglist ; unsigned cur_sg ; } 
s#ore_io_state struct ore_io_state { s#kref kref ; s#ore_striping_info si ; void * private ; t#ore_io_done_fn done ; s#ore_layout * layout ; s#ore_components * oc ; t#loff_t offset ; unsigned long length ; void * kern_buff ; s#page * * pages ; unsigned nr_pages ; unsigned pgbase ; unsigned pages_consumed ; unsigned in_attr_len ; s#osd_attr * in_attr ; unsigned out_attr_len ; s#osd_attr * out_attr ; t#bool reading ; t#bool extra_part_alloc ; s#page * * parity_pages ; unsigned max_par_pages ; unsigned cur_par_page ; unsigned sgs_per_dev ; s#__stripe_pages_2d * sp2d ; s#ore_io_state * ios_read_4_write ; const s#_ore_r4w_op * r4w ; unsigned numdevs ; s#ore_per_dev_state per_dev [ ] ; } 
ore_get_rw_state int ore_get_rw_state ( s#ore_layout * , s#ore_components * , t#bool , t#u64 , t#u64 , s#ore_io_state * * ) 
ore_get_io_state int ore_get_io_state ( s#ore_layout * , s#ore_components * , s#ore_io_state * * ) 
ore_put_io_state void ore_put_io_state ( s#ore_io_state * ) 
t#ore_on_dev_error typedef void ( * ore_on_dev_error ) ( s#ore_io_state * , s#ore_dev * , unsigned , e#osd_err_priority , t#u64 , t#u64 ) 
ore_check_io int ore_check_io ( s#ore_io_state * , t#ore_on_dev_error ) 
ore_calc_stripe_info void ore_calc_stripe_info ( s#ore_layout * , t#u64 , t#u64 , s#ore_striping_info * ) 
ore_create int ore_create ( s#ore_io_state * ) 
ore_remove int ore_remove ( s#ore_io_state * ) 
ore_write int ore_write ( s#ore_io_state * ) 
ore_read int ore_read ( s#ore_io_state * ) 
extract_attr_from_ios int extract_attr_from_ios ( s#ore_io_state * , s#osd_attr * ) 
ore_truncate int ore_truncate ( s#ore_layout * , s#ore_components * , t#u64 ) 
g_attr_logical_length extern const s#osd_attr g_attr_logical_length 

/* fs/exportfs/expfs.o */
s##posix_acl
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cdev
exportfs_encode_inode_fh extern int exportfs_encode_inode_fh ( s#inode * , s#fid * , int * , s#inode * ) 
exportfs_encode_fh extern int exportfs_encode_fh ( s#dentry * , s#fid * , int * , int ) 
exportfs_decode_fh extern s#dentry * exportfs_decode_fh ( s#vfsmount * , s#fid * , int , int , int ( * ) ( void * , s#dentry * ) , void * ) 

/* fs/fat/dir.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s#msdos_dir_entry struct msdos_dir_entry { t#__u8 name [ 11 ] ; t#__u8 attr ; t#__u8 lcase ; t#__u8 ctime_cs ; t#__le16 ctime ; t#__le16 cdate ; t#__le16 adate ; t#__le16 starthi ; t#__le16 time , date , start ; t#__le32 size ; } 
s#fat_slot_info struct fat_slot_info { t#loff_t i_pos ; t#loff_t slot_off ; int nr_slots ; s#msdos_dir_entry * de ; s#buffer_head * bh ; } 
fat_search_long extern int fat_search_long ( s#inode * , const unsigned char * , int , s#fat_slot_info * ) 
fat_get_dotdot_entry extern int fat_get_dotdot_entry ( s#inode * , s#buffer_head * * , s#msdos_dir_entry * * ) 
fat_dir_empty extern int fat_dir_empty ( s#inode * ) 
fat_scan extern int fat_scan ( s#inode * , const unsigned char * , s#fat_slot_info * ) 
fat_remove_entries extern int fat_remove_entries ( s#inode * , s#fat_slot_info * ) 
fat_alloc_new_dir extern int fat_alloc_new_dir ( s#inode * , s#timespec * ) 
fat_add_entries extern int fat_add_entries ( s#inode * , void * , int , s#fat_slot_info * ) 

/* fs/fat/fatent.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
fat_free_clusters extern int fat_free_clusters ( s#inode * , int ) 

/* fs/fat/file.o */
s##posix_acl
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##kstatfs
s##seq_file
s##export_operations
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
fat_getattr extern int fat_getattr ( s#vfsmount * , s#dentry * , s#kstat * ) 
fat_setattr extern int fat_setattr ( s#dentry * , s#iattr * ) 

/* fs/fat/inode.o */
s##posix_acl
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kioctx
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
t#__kernel_fsid_t typedef struct { int val [ 2 ] ; } __kernel_fsid_t 
s#kstatfs struct kstatfs { long f_type ; long f_bsize ; t#u64 f_blocks ; t#u64 f_bfree ; t#u64 f_bavail ; t#u64 f_files ; t#u64 f_ffree ; t#__kernel_fsid_t f_fsid ; long f_namelen ; long f_frsize ; long f_flags ; long f_spare [ 4 ] ; } 
s##export_operations
s##mtd_info
s##nameidata
s##cdev
fat_attach extern void fat_attach ( s#inode * , t#loff_t ) 
fat_detach extern void fat_detach ( s#inode * ) 
fat_build_inode extern s#inode * fat_build_inode ( s#super_block * , s#msdos_dir_entry * , t#loff_t ) 
fat_sync_inode extern int fat_sync_inode ( s#inode * ) 
fat_fill_super extern int fat_fill_super ( s#super_block * , void * , int , int , void ( * ) ( s#super_block * ) ) 
fat_flush_inodes extern int fat_flush_inodes ( s#super_block * , s#inode * , s#inode * ) 

/* fs/fat/misc.o */
s##posix_acl
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##seq_file
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kstatfs
s##export_operations
s##mtd_info
s##workqueue_struct
__fat_fs_error extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) __attribute__ ( ( __cold__ ) ) void __fat_fs_error ( s#super_block * , int , const char * , ... ) 
s#fat_mount_options struct fat_mount_options { t#kuid_t fs_uid ; t#kgid_t fs_gid ; unsigned short fs_fmask ; unsigned short fs_dmask ; unsigned short codepage ; int time_offset ; char * iocharset ; unsigned short shortname ; unsigned char name_check ; unsigned char errors ; unsigned char nfs ; unsigned short allow_utime ; unsigned quiet : 1 , showexec : 1 , sys_immutable : 1 , dotsOK : 1 , isvfat : 1 , utf8 : 1 , unicode_xlate : 1 , numtail : 1 , flush : 1 , nocase : 1 , usefree : 1 , tz_set : 1 , rodir : 1 , discard : 1 ; } 
t#wchar_t typedef t#u16 wchar_t 
s#nls_table struct nls_table { const char * charset ; const char * alias ; int ( * uni2char ) ( t#wchar_t , unsigned char * , int ) ; int ( * char2uni ) ( const unsigned char * , int , t#wchar_t * ) ; const unsigned char * charset2lower ; const unsigned char * charset2upper ; s#module * owner ; s#nls_table * next ; } 
s##fatent_operations
s#msdos_sb_info struct msdos_sb_info { unsigned short sec_per_clus ; unsigned short cluster_bits ; unsigned int cluster_size ; unsigned char fats , fat_bits ; unsigned short fat_start ; unsigned long fat_length ; unsigned long dir_start ; unsigned short dir_entries ; unsigned long data_start ; unsigned long max_cluster ; unsigned long root_cluster ; unsigned long fsinfo_sector ; s#mutex fat_lock ; s#mutex nfs_build_inode_lock ; s#mutex s_lock ; unsigned int prev_free ; unsigned int free_clusters ; unsigned int free_clus_valid ; s#fat_mount_options options ; s#nls_table * nls_disk ; s#nls_table * nls_io ; const void * dir_ops ; int dir_per_block ; int dir_per_block_bits ; unsigned int vol_id ; int fatent_shift ; s#fatent_operations * fatent_ops ; s#inode * fat_inode ; s#inode * fsinfo_inode ; s#ratelimit_state ratelimit ; t#spinlock_t inode_hash_lock ; s#hlist_head inode_hashtable [ ( 1UL << 8 ) ] ; t#spinlock_t dir_hash_lock ; s#hlist_head dir_hashtable [ ( 1UL << 8 ) ] ; unsigned int dirty ; } 
fat_time_unix2fat extern void fat_time_unix2fat ( s#msdos_sb_info * , s#timespec * , t#__le16 * , t#__le16 * , t#u8 * ) 

/* fs/fcntl.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
__f_setown extern int __f_setown ( s#file * , s#pid * , e#pid_type , int ) 
f_setown extern int f_setown ( s#file * , unsigned long , int ) 
fasync_helper extern int fasync_helper ( int , s#file * , int , s#fasync_struct * * ) 
kill_fasync extern void kill_fasync ( s#fasync_struct * * , int , int ) 

/* fs/file.o */
get_unused_fd_flags extern int get_unused_fd_flags ( unsigned ) 
put_unused_fd extern void put_unused_fd ( unsigned int ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
fd_install extern void fd_install ( unsigned int , s#file * ) 
fget extern s#file * fget ( unsigned int ) 
fget_raw extern s#file * fget_raw ( unsigned int ) 
fget_light extern s#file * fget_light ( unsigned int , int * ) 
iterate_fd int iterate_fd ( s#files_struct * , unsigned , int ( * ) ( const void * , s#file * , unsigned ) , const void * ) 

/* fs/file_table.o */
get_max_files extern unsigned long get_max_files ( void ) 
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
alloc_file extern s#file * alloc_file ( s#path * , t#fmode_t , const s#file_operations * ) 
fput extern void fput ( s#file * ) 

/* fs/filesystems.o */
s##posix_acl
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##sem_undo_list
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##event_filter
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##ring_buffer_iter
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cdev
register_filesystem extern int register_filesystem ( s#file_system_type * ) 
unregister_filesystem extern int unregister_filesystem ( s#file_system_type * ) 
get_fs_type extern s#file_system_type * get_fs_type ( const char * ) 

/* fs/fs-writeback.o */
s##tvec_base
s##workqueue_struct
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##module
s##kstatfs
s##seq_file
s##export_operations
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
writeback_in_progress int writeback_in_progress ( s#backing_dev_info * ) 
__mark_inode_dirty extern void __mark_inode_dirty ( s#inode * , int ) 
e#wb_reason enum wb_reason { WB_REASON_BACKGROUND , WB_REASON_TRY_TO_FREE_PAGES , WB_REASON_SYNC , WB_REASON_PERIODIC , WB_REASON_LAPTOP_TIMER , WB_REASON_FREE_MORE_MEM , WB_REASON_FS_FREE_SPACE , WB_REASON_FORKER_THREAD , WB_REASON_MAX , } 
writeback_inodes_sb_nr void writeback_inodes_sb_nr ( s#super_block * , unsigned long , e#wb_reason ) 
writeback_inodes_sb void writeback_inodes_sb ( s#super_block * , e#wb_reason ) 
try_to_writeback_inodes_sb_nr int try_to_writeback_inodes_sb_nr ( s#super_block * , unsigned long , e#wb_reason ) 
try_to_writeback_inodes_sb int try_to_writeback_inodes_sb ( s#super_block * , e#wb_reason ) 
sync_inodes_sb void sync_inodes_sb ( s#super_block * ) 
write_inode_now extern int write_inode_now ( s#inode * , int ) 
sync_inode int sync_inode ( s#inode * , s#writeback_control * ) 
sync_inode_metadata int sync_inode_metadata ( s#inode * , int ) 

/* fs/fs_struct.o */
unshare_fs_struct extern int unshare_fs_struct ( void ) 
current_umask extern int current_umask ( void ) 

/* fs/fscache/cache.o */
fscache_cache_cleared_wq extern t#wait_queue_head_t fscache_cache_cleared_wq 
s#fscache_transition struct fscache_transition { unsigned long events ; const s#fscache_state * transit_to ; } 
s#fscache_state struct fscache_state { char name [ 24 ] ; char short_name [ 8 ] ; const s#fscache_state * ( * work ) ( s#fscache_object * , int ) ; const s#fscache_transition transitions [ ] ; } 
s#fscache_cache_tag struct fscache_cache_tag { s#list_head link ; s#fscache_cache * cache ; unsigned long flags ; t#atomic_t usage ; char name [ 0 ] ; } 
e#fscache_checkaux enum fscache_checkaux { FSCACHE_CHECKAUX_OKAY , FSCACHE_CHECKAUX_NEEDS_UPDATE , FSCACHE_CHECKAUX_OBSOLETE , } 
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
s#fscache_cookie_def struct fscache_cookie_def { char name [ 16 ] ; t#uint8_t type ; s#fscache_cache_tag * ( * select_cache ) ( const void * , const void * ) ; t#uint16_t ( * get_key ) ( const void * , void * , t#uint16_t ) ; void ( * get_attr ) ( const void * , t#uint64_t * ) ; t#uint16_t ( * get_aux ) ( const void * , void * , t#uint16_t ) ; e#fscache_checkaux ( * check_aux ) ( void * , const void * , t#uint16_t ) ; void ( * get_context ) ( void * , void * ) ; void ( * put_context ) ( void * , void * ) ; void ( * mark_page_cached ) ( void * , s#address_space * , s#page * ) ; void ( * now_uncached ) ( void * ) ; } 
s#fscache_cookie struct fscache_cookie { t#atomic_t usage ; t#atomic_t n_children ; t#atomic_t n_active ; t#spinlock_t lock ; t#spinlock_t stores_lock ; s#hlist_head backing_objects ; const s#fscache_cookie_def * def ; s#fscache_cookie * parent ; void * netfs_data ; s#radix_tree_root stores ; unsigned long flags ; } 
s#fscache_object struct fscache_object { const s#fscache_state * state ; const s#fscache_transition * oob_table ; int debug_id ; int n_children ; int n_ops ; int n_obj_ops ; int n_in_progress ; int n_exclusive ; t#atomic_t n_reads ; t#spinlock_t lock ; unsigned long lookup_jif ; unsigned long oob_event_mask ; unsigned long event_mask ; unsigned long events ; unsigned long flags ; s#list_head cache_link ; s#hlist_node cookie_link ; s#fscache_cache * cache ; s#fscache_cookie * cookie ; s#fscache_object * parent ; s#work_struct work ; s#list_head dependents ; s#list_head dep_link ; s#list_head pending_ops ; s#rb_node objlist_link ; unsigned long store_limit ; t#loff_t store_limit_l ; } 
e#fscache_operation_state enum fscache_operation_state { FSCACHE_OP_ST_BLANK , FSCACHE_OP_ST_INITIALISED , FSCACHE_OP_ST_PENDING , FSCACHE_OP_ST_IN_PROGRESS , FSCACHE_OP_ST_COMPLETE , FSCACHE_OP_ST_CANCELLED , FSCACHE_OP_ST_DEAD } 
t#fscache_operation_processor_t typedef void ( * fscache_operation_processor_t ) ( s#fscache_operation * ) 
t#fscache_operation_release_t typedef void ( * fscache_operation_release_t ) ( s#fscache_operation * ) 
s#fscache_operation struct fscache_operation { s#work_struct work ; s#list_head pend_link ; s#fscache_object * object ; unsigned long flags ; e#fscache_operation_state state ; t#atomic_t usage ; unsigned debug_id ; t#fscache_operation_processor_t processor ; t#fscache_operation_release_t release ; } 
t#fscache_rw_complete_t typedef void ( * fscache_rw_complete_t ) ( s#page * , void * , int ) 
s#fscache_retrieval struct fscache_retrieval { s#fscache_operation op ; s#address_space * mapping ; t#fscache_rw_complete_t end_io_func ; void * context ; s#list_head to_do ; unsigned long start_time ; t#atomic_t n_pages ; } 
t#fscache_page_retrieval_func_t typedef int ( * fscache_page_retrieval_func_t ) ( s#fscache_retrieval * , s#page * , t#gfp_t ) 
t#fscache_pages_retrieval_func_t typedef int ( * fscache_pages_retrieval_func_t ) ( s#fscache_retrieval * , s#list_head * , unsigned * , t#gfp_t ) 
s#fscache_storage struct fscache_storage { s#fscache_operation op ; unsigned long store_limit ; } 
s#fscache_cache_ops struct fscache_cache_ops { const char * name ; s#fscache_object * ( * alloc_object ) ( s#fscache_cache * , s#fscache_cookie * ) ; int ( * lookup_object ) ( s#fscache_object * ) ; void ( * lookup_complete ) ( s#fscache_object * ) ; s#fscache_object * ( * grab_object ) ( s#fscache_object * ) ; int ( * pin_object ) ( s#fscache_object * ) ; void ( * unpin_object ) ( s#fscache_object * ) ; t#bool ( * check_consistency ) ( s#fscache_operation * ) ; void ( * update_object ) ( s#fscache_object * ) ; void ( * invalidate_object ) ( s#fscache_operation * ) ; void ( * drop_object ) ( s#fscache_object * ) ; void ( * put_object ) ( s#fscache_object * ) ; void ( * sync_cache ) ( s#fscache_cache * ) ; int ( * attr_changed ) ( s#fscache_object * ) ; int ( * reserve_space ) ( s#fscache_object * , t#loff_t ) ; t#fscache_page_retrieval_func_t read_or_alloc_page ; t#fscache_pages_retrieval_func_t read_or_alloc_pages ; t#fscache_page_retrieval_func_t allocate_page ; t#fscache_pages_retrieval_func_t allocate_pages ; int ( * write_page ) ( s#fscache_storage * , s#page * ) ; void ( * uncache_page ) ( s#fscache_object * , s#page * ) ; void ( * dissociate_pages ) ( s#fscache_cache * ) ; } 
s#fscache_cache struct fscache_cache { const s#fscache_cache_ops * ops ; s#fscache_cache_tag * tag ; s#kobject * kobj ; s#list_head link ; t#size_t max_index_size ; char identifier [ 36 ] ; s#work_struct op_gc ; s#list_head object_list ; s#list_head op_gc_list ; t#spinlock_t object_list_lock ; t#spinlock_t op_gc_list_lock ; t#atomic_t object_count ; s#fscache_object * fsdef ; unsigned long flags ; } 
fscache_init_cache extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) void fscache_init_cache ( s#fscache_cache * , const s#fscache_cache_ops * , const char * , ... ) 
fscache_add_cache extern int fscache_add_cache ( s#fscache_cache * , s#fscache_object * , const char * ) 
fscache_io_error extern void fscache_io_error ( s#fscache_cache * ) 
fscache_withdraw_cache extern void fscache_withdraw_cache ( s#fscache_cache * ) 

/* fs/fscache/cookie.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
__fscache_acquire_cookie extern s#fscache_cookie * __fscache_acquire_cookie ( s#fscache_cookie * , const s#fscache_cookie_def * , void * ) 
__fscache_invalidate extern void __fscache_invalidate ( s#fscache_cookie * ) 
__fscache_wait_on_invalidate extern void __fscache_wait_on_invalidate ( s#fscache_cookie * ) 
__fscache_update_cookie extern void __fscache_update_cookie ( s#fscache_cookie * ) 
__fscache_relinquish_cookie extern void __fscache_relinquish_cookie ( s#fscache_cookie * , int ) 
__fscache_check_consistency extern int __fscache_check_consistency ( s#fscache_cookie * ) 

/* fs/fscache/fsdef.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
fscache_fsdef_index extern s#fscache_cookie fscache_fsdef_index 

/* fs/fscache/netfs.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
s#fscache_netfs struct fscache_netfs { t#uint32_t version ; const char * name ; s#fscache_cookie * primary_index ; s#list_head link ; } 
__fscache_register_netfs extern int __fscache_register_netfs ( s#fscache_netfs * ) 
__fscache_unregister_netfs extern void __fscache_unregister_netfs ( s#fscache_netfs * ) 

/* fs/fscache/object.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
fscache_object_init extern void fscache_object_init ( s#fscache_object * , s#fscache_cookie * , s#fscache_cache * ) 
fscache_object_lookup_negative extern void fscache_object_lookup_negative ( s#fscache_object * ) 
fscache_obtained_object extern void fscache_obtained_object ( s#fscache_object * ) 
fscache_object_destroy extern void fscache_object_destroy ( s#fscache_object * ) 
fscache_object_sleep_till_congested extern t#bool fscache_object_sleep_till_congested ( signed long * ) 
fscache_check_aux extern e#fscache_checkaux fscache_check_aux ( s#fscache_object * , const void * , t#uint16_t ) 

/* fs/fscache/operation.o */
fscache_op_debug_id extern t#atomic_t fscache_op_debug_id 
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
fscache_enqueue_operation extern void fscache_enqueue_operation ( s#fscache_operation * ) 
fscache_op_complete extern void fscache_op_complete ( s#fscache_operation * , t#bool ) 
fscache_put_operation extern void fscache_put_operation ( s#fscache_operation * ) 

/* fs/fscache/page.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
__fscache_check_page_write extern t#bool __fscache_check_page_write ( s#fscache_cookie * , s#page * ) 
__fscache_wait_on_page_write extern void __fscache_wait_on_page_write ( s#fscache_cookie * , s#page * ) 
__fscache_maybe_release_page extern t#bool __fscache_maybe_release_page ( s#fscache_cookie * , s#page * , t#gfp_t ) 
__fscache_attr_changed extern int __fscache_attr_changed ( s#fscache_cookie * ) 
__fscache_read_or_alloc_page extern int __fscache_read_or_alloc_page ( s#fscache_cookie * , s#page * , t#fscache_rw_complete_t , void * , t#gfp_t ) 
__fscache_read_or_alloc_pages extern int __fscache_read_or_alloc_pages ( s#fscache_cookie * , s#address_space * , s#list_head * , unsigned * , t#fscache_rw_complete_t , void * , t#gfp_t ) 
__fscache_alloc_page extern int __fscache_alloc_page ( s#fscache_cookie * , s#page * , t#gfp_t ) 
__fscache_readpages_cancel extern void __fscache_readpages_cancel ( s#fscache_cookie * , s#list_head * ) 
__fscache_write_page extern int __fscache_write_page ( s#fscache_cookie * , s#page * , t#gfp_t ) 
__fscache_uncache_page extern void __fscache_uncache_page ( s#fscache_cookie * , s#page * ) 
fscache_mark_page_cached extern void fscache_mark_page_cached ( s#fscache_retrieval * , s#page * ) 
s#pagevec struct pagevec { unsigned long nr ; unsigned long cold ; s#page * pages [ 14 ] ; } 
fscache_mark_pages_cached extern void fscache_mark_pages_cached ( s#fscache_retrieval * , s#pagevec * ) 
__fscache_uncache_all_inode_pages extern void __fscache_uncache_all_inode_pages ( s#fscache_cookie * , s#inode * ) 

/* fs/fuse/dev.o */
e#fuse_req_state enum fuse_req_state { FUSE_REQ_INIT = 0 , FUSE_REQ_PENDING , FUSE_REQ_READING , FUSE_REQ_SENT , FUSE_REQ_WRITING , FUSE_REQ_FINISHED } 
s#fuse_in_header struct fuse_in_header { t#uint32_t len ; t#uint32_t opcode ; t#uint64_t unique ; t#uint64_t nodeid ; t#uint32_t uid ; t#uint32_t gid ; t#uint32_t pid ; t#uint32_t padding ; } 
s#fuse_in_arg struct fuse_in_arg { unsigned size ; const void * value ; } 
s#fuse_in struct fuse_in { s#fuse_in_header h ; unsigned argpages : 1 ; unsigned numargs ; s#fuse_in_arg args [ 3 ] ; } 
s#fuse_out_header struct fuse_out_header { t#uint32_t len ; t#int32_t error ; t#uint64_t unique ; } 
s#fuse_arg struct fuse_arg { unsigned size ; void * value ; } 
s#fuse_out struct fuse_out { s#fuse_out_header h ; unsigned argvar : 1 ; unsigned argpages : 1 ; unsigned page_zeroing : 1 ; unsigned page_replace : 1 ; unsigned numargs ; s#fuse_arg args [ 3 ] ; } 
s#fuse_release_in struct fuse_release_in { t#uint64_t fh ; t#uint32_t flags ; t#uint32_t release_flags ; t#uint64_t lock_owner ; } 
s##posix_acl
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kioctx
s##eventfd_ctx
s##kstatfs
s##seq_file
s##export_operations
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##mtd_info
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s#fuse_init_in struct fuse_init_in { t#uint32_t major ; t#uint32_t minor ; t#uint32_t max_readahead ; t#uint32_t flags ; } 
s#fuse_init_out struct fuse_init_out { t#uint32_t major ; t#uint32_t minor ; t#uint32_t max_readahead ; t#uint32_t flags ; t#uint16_t max_background ; t#uint16_t congestion_threshold ; t#uint32_t max_write ; } 
s#cuse_init_in struct cuse_init_in { t#uint32_t major ; t#uint32_t minor ; t#uint32_t unused ; t#uint32_t flags ; } 
s#fuse_read_in struct fuse_read_in { t#uint64_t fh ; t#uint64_t offset ; t#uint32_t size ; t#uint32_t read_flags ; t#uint64_t lock_owner ; t#uint32_t flags ; t#uint32_t padding ; } 
s#fuse_write_in struct fuse_write_in { t#uint64_t fh ; t#uint64_t offset ; t#uint32_t size ; t#uint32_t write_flags ; t#uint64_t lock_owner ; t#uint32_t flags ; t#uint32_t padding ; } 
s#fuse_write_out struct fuse_write_out { t#uint32_t size ; t#uint32_t padding ; } 
s#fuse_notify_retrieve_in struct fuse_notify_retrieve_in { t#uint64_t dummy1 ; t#uint64_t offset ; t#uint32_t size ; t#uint32_t dummy2 ; t#uint64_t dummy3 ; t#uint64_t dummy4 ; } 
s#fuse_file_lock struct fuse_file_lock { t#uint64_t start ; t#uint64_t end ; t#uint32_t type ; t#uint32_t pid ; } 
s#fuse_lk_in struct fuse_lk_in { t#uint64_t fh ; t#uint64_t owner ; s#fuse_file_lock lk ; t#uint32_t lk_flags ; t#uint32_t padding ; } 
s#fuse_page_desc struct fuse_page_desc { unsigned int length ; unsigned int offset ; } 
s#fuse_forget_one struct fuse_forget_one { t#uint64_t nodeid ; t#uint64_t nlookup ; } 
s#fuse_forget_link struct fuse_forget_link { s#fuse_forget_one forget_one ; s#fuse_forget_link * next ; } 
s#fuse_conn struct fuse_conn { t#spinlock_t lock ; s#mutex inst_mutex ; t#atomic_t count ; t#kuid_t user_id ; t#kgid_t group_id ; unsigned flags ; unsigned max_read ; unsigned max_write ; t#wait_queue_head_t waitq ; s#list_head pending ; s#list_head processing ; s#list_head io ; t#u64 khctr ; s#rb_root polled_files ; unsigned max_background ; unsigned congestion_threshold ; unsigned num_background ; unsigned active_background ; s#list_head bg_queue ; s#list_head interrupts ; s#fuse_forget_link forget_list_head ; s#fuse_forget_link * forget_list_tail ; int forget_batch ; int initialized ; int blocked ; t#wait_queue_head_t blocked_waitq ; t#wait_queue_head_t reserved_req_waitq ; t#u64 reqctr ; unsigned connected ; unsigned conn_error : 1 ; unsigned conn_init : 1 ; unsigned async_read : 1 ; unsigned atomic_o_trunc : 1 ; unsigned export_support : 1 ; unsigned bdi_initialized : 1 ; unsigned no_fsync : 1 ; unsigned no_fsyncdir : 1 ; unsigned no_flush : 1 ; unsigned no_setxattr : 1 ; unsigned no_getxattr : 1 ; unsigned no_listxattr : 1 ; unsigned no_removexattr : 1 ; unsigned no_lock : 1 ; unsigned no_access : 1 ; unsigned no_create : 1 ; unsigned no_interrupt : 1 ; unsigned no_bmap : 1 ; unsigned no_poll : 1 ; unsigned big_writes : 1 ; unsigned dont_mask : 1 ; unsigned no_flock : 1 ; unsigned no_fallocate : 1 ; unsigned auto_inval_data : 1 ; unsigned do_readdirplus : 1 ; unsigned readdirplus_auto : 1 ; unsigned async_dio : 1 ; t#atomic_t num_waiting ; unsigned minor ; s#backing_dev_info bdi ; s#list_head entry ; t#dev_t dev ; s#dentry * ctl_dentry [ 5 ] ; int ctl_ndents ; s#fasync_struct * fasync ; t#u32 scramble_key [ 4 ] ; s#fuse_req * destroy_req ; t#u64 attr_version ; void ( * release ) ( s#fuse_conn * ) ; s#super_block * sb ; s#rw_semaphore killsb ; } 
s#fuse_file struct fuse_file { s#fuse_conn * fc ; s#fuse_req * reserved_req ; t#u64 kh ; t#u64 fh ; t#u64 nodeid ; t#atomic_t count ; t#u32 open_flags ; s#list_head write_entry ; s#rb_node polled_node ; t#wait_queue_head_t poll_wait ; t#bool flock : 1 ; } 
s#fuse_io_priv struct fuse_io_priv { int async ; t#spinlock_t lock ; unsigned reqs ; t#ssize_t bytes ; t#size_t size ; t#__u64 offset ; t#bool write ; int err ; s#kiocb * iocb ; s#file * file ; } 
s#fuse_req struct fuse_req { s#list_head list ; s#list_head intr_entry ; t#atomic_t count ; t#u64 intr_unique ; unsigned isreply : 1 ; unsigned force : 1 ; unsigned aborted : 1 ; unsigned background : 1 ; unsigned interrupted : 1 ; unsigned locked : 1 ; unsigned waiting : 1 ; e#fuse_req_state state ; s#fuse_in in ; s#fuse_out out ; t#wait_queue_head_t waitq ; union { struct { union { s#fuse_release_in in ; s#work_struct work ; } ; s#path path ; } release ; s#fuse_init_in init_in ; s#fuse_init_out init_out ; s#cuse_init_in cuse_init_in ; struct { s#fuse_read_in in ; t#u64 attr_ver ; } read ; struct { s#fuse_write_in in ; s#fuse_write_out out ; } write ; s#fuse_notify_retrieve_in retrieve_in ; s#fuse_lk_in lk_in ; } misc ; s#page * * pages ; s#fuse_page_desc * page_descs ; unsigned max_pages ; s#page * inline_pages [ 1 ] ; s#fuse_page_desc inline_page_descs [ 1 ] ; unsigned num_pages ; s#fuse_file * ff ; s#inode * inode ; s#fuse_io_priv * io ; s#list_head writepages_entry ; void ( * end ) ( s#fuse_conn * , s#fuse_req * ) ; s#file * stolen_file ; } 
fuse_request_alloc s#fuse_req * fuse_request_alloc ( unsigned ) 
fuse_get_req s#fuse_req * fuse_get_req ( s#fuse_conn * , unsigned ) 
fuse_get_req_for_background s#fuse_req * fuse_get_req_for_background ( s#fuse_conn * , unsigned ) 
fuse_put_request void fuse_put_request ( s#fuse_conn * , s#fuse_req * ) 
fuse_request_send void fuse_request_send ( s#fuse_conn * , s#fuse_req * ) 
fuse_request_send_background void fuse_request_send_background ( s#fuse_conn * , s#fuse_req * ) 
fuse_abort_conn void fuse_abort_conn ( s#fuse_conn * ) 
fuse_dev_release int fuse_dev_release ( s#inode * , s#file * ) 
fuse_dev_operations extern const s#file_operations fuse_dev_operations 

/* fs/fuse/file.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##tvec_base
s##workqueue_struct
s##device_private
s##kioctx
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
fuse_do_open int fuse_do_open ( s#fuse_conn * , t#u64 , s#file * , t#bool ) 
fuse_sync_release void fuse_sync_release ( s#fuse_file * , int ) 
fuse_direct_io t#ssize_t fuse_direct_io ( s#fuse_io_priv * , const s#iovec * , unsigned long , t#size_t , t#loff_t * , int ) 
fuse_do_ioctl long fuse_do_ioctl ( s#file * , unsigned int , unsigned long , unsigned int ) 
fuse_file_poll unsigned fuse_file_poll ( s#file * , t#poll_table * ) 

/* fs/fuse/inode.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##user_namespace
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##tvec_base
s##workqueue_struct
s##device_private
s##kiocb
s##iovec
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
fuse_conn_kill void fuse_conn_kill ( s#fuse_conn * ) 
fuse_conn_init void fuse_conn_init ( s#fuse_conn * ) 
fuse_conn_put void fuse_conn_put ( s#fuse_conn * ) 
fuse_conn_get s#fuse_conn * fuse_conn_get ( s#fuse_conn * ) 

/* fs/inode.o */
s##module
s##kstatfs
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##tvec_base
s##workqueue_struct
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##radix_tree_node
s##slab
empty_aops extern const s#address_space_operations empty_aops 
inode_init_always extern int inode_init_always ( s#super_block * , s#inode * ) 
free_inode_nonrcu extern void free_inode_nonrcu ( s#inode * ) 
__destroy_inode extern void __destroy_inode ( s#inode * ) 
drop_nlink extern void drop_nlink ( s#inode * ) 
clear_nlink extern void clear_nlink ( s#inode * ) 
set_nlink extern void set_nlink ( s#inode * , unsigned int ) 
inc_nlink extern void inc_nlink ( s#inode * ) 
address_space_init_once extern void address_space_init_once ( s#address_space * ) 
inode_init_once extern void inode_init_once ( s#inode * ) 
ihold extern void ihold ( s#inode * ) 
inode_sb_list_add extern void inode_sb_list_add ( s#inode * ) 
__insert_inode_hash extern void __insert_inode_hash ( s#inode * , unsigned long ) 
__remove_inode_hash extern void __remove_inode_hash ( s#inode * ) 
clear_inode extern void clear_inode ( s#inode * ) 
get_next_ino extern unsigned int get_next_ino ( void ) 
new_inode extern s#inode * new_inode ( s#super_block * ) 
unlock_new_inode extern void unlock_new_inode ( s#inode * ) 
lock_two_nondirectories void lock_two_nondirectories ( s#inode * , s#inode * ) 
unlock_two_nondirectories void unlock_two_nondirectories ( s#inode * , s#inode * ) 
iget5_locked extern s#inode * iget5_locked ( s#super_block * , unsigned long , int ( * ) ( s#inode * , void * ) , int ( * ) ( s#inode * , void * ) , void * ) 
iget_locked extern s#inode * iget_locked ( s#super_block * , unsigned long ) 
t#__kernel_ino_t typedef t#__kernel_ulong_t __kernel_ino_t 
t#ino_t typedef t#__kernel_ino_t ino_t 
iunique extern t#ino_t iunique ( s#super_block * , t#ino_t ) 
igrab extern s#inode * igrab ( s#inode * ) 
ilookup5_nowait extern s#inode * ilookup5_nowait ( s#super_block * , unsigned long , int ( * ) ( s#inode * , void * ) , void * ) 
ilookup5 extern s#inode * ilookup5 ( s#super_block * , unsigned long , int ( * ) ( s#inode * , void * ) , void * ) 
ilookup extern s#inode * ilookup ( s#super_block * , unsigned long ) 
insert_inode_locked extern int insert_inode_locked ( s#inode * ) 
insert_inode_locked4 extern int insert_inode_locked4 ( s#inode * , unsigned long , int ( * ) ( s#inode * , void * ) , void * ) 
generic_delete_inode extern int generic_delete_inode ( s#inode * ) 
iput extern void iput ( s#inode * ) 
bmap extern t#sector_t bmap ( s#inode * , t#sector_t ) 
touch_atime extern void touch_atime ( const s#path * ) 
should_remove_suid extern int should_remove_suid ( s#dentry * ) 
file_remove_suid extern int file_remove_suid ( s#file * ) 
file_update_time extern int file_update_time ( s#file * ) 
inode_needs_sync extern int inode_needs_sync ( s#inode * ) 
inode_wait int inode_wait ( void * ) 
init_special_inode extern void init_special_inode ( s#inode * , t#umode_t , t#dev_t ) 
inode_init_owner extern void inode_init_owner ( s#inode * , const s#inode * , t#umode_t ) 
inode_owner_or_capable extern t#bool inode_owner_or_capable ( const s#inode * ) 
inode_dio_wait void inode_dio_wait ( s#inode * ) 
inode_dio_done void inode_dio_done ( s#inode * ) 
inode_set_flags extern void inode_set_flags ( s#inode * , unsigned int , unsigned int ) 

/* fs/ioctl.o */
fiemap_fill_next_extent int fiemap_fill_next_extent ( s#fiemap_extent_info * , t#u64 , t#u64 , t#u64 , t#u32 ) 
fiemap_check_flags int fiemap_check_flags ( s#fiemap_extent_info * , t#u32 ) 
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##kiocb
s##iovec
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
__generic_block_fiemap extern int __generic_block_fiemap ( s#inode * , s#fiemap_extent_info * , t#loff_t , t#loff_t , t#get_block_t * ) 
generic_block_fiemap extern int generic_block_fiemap ( s#inode * , s#fiemap_extent_info * , t#u64 , t#u64 , t#get_block_t * ) 

/* fs/ioprio.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##device_private
s##sock
s##sysfs_dirent
s##kiocb
s##iovec
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##cdev
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
set_task_ioprio extern int set_task_ioprio ( s#task_struct * , int ) 

/* fs/jbd2/journal.o */
jbd2_journal_enable_debug extern t#ushort jbd2_journal_enable_debug 
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##workqueue_struct
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##ring_buffer_iter
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##slab
s#journal_header_s struct journal_header_s { t#__be32 h_magic ; t#__be32 h_blocktype ; t#__be32 h_sequence ; } 
t#journal_header_t typedef s#journal_header_s journal_header_t 
s#journal_superblock_s struct journal_superblock_s { t#journal_header_t s_header ; t#__be32 s_blocksize ; t#__be32 s_maxlen ; t#__be32 s_first ; t#__be32 s_sequence ; t#__be32 s_start ; t#__be32 s_errno ; t#__be32 s_feature_compat ; t#__be32 s_feature_incompat ; t#__be32 s_feature_ro_compat ; t#__u8 s_uuid [ 16 ] ; t#__be32 s_nr_users ; t#__be32 s_dynsuper ; t#__be32 s_max_transaction ; t#__be32 s_max_trans_data ; t#__u8 s_checksum_type ; t#__u8 s_padding2 [ 3 ] ; t#__u32 s_padding [ 42 ] ; t#__be32 s_checksum ; t#__u8 s_users [ 16 * 48 ] ; } 
t#journal_superblock_t typedef s#journal_superblock_s journal_superblock_t 
t#tid_t typedef unsigned int tid_t 
s##jbd2_revoke_table_s
s##proc_dir_entry
s#transaction_run_stats_s struct transaction_run_stats_s { unsigned long rs_wait ; unsigned long rs_request_delay ; unsigned long rs_running ; unsigned long rs_locked ; unsigned long rs_flushing ; unsigned long rs_logging ; t#__u32 rs_handle_count ; t#__u32 rs_blocks ; t#__u32 rs_blocks_logged ; } 
s#transaction_stats_s struct transaction_stats_s { unsigned long ts_tid ; unsigned long ts_requested ; s#transaction_run_stats_s run ; } 
s##scatterlist
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
s#journal_s struct journal_s { unsigned long j_flags ; int j_errno ; s#buffer_head * j_sb_buffer ; t#journal_superblock_t * j_superblock ; int j_format_version ; t#rwlock_t j_state_lock ; int j_barrier_count ; s#mutex j_barrier ; t#transaction_t * j_running_transaction ; t#transaction_t * j_committing_transaction ; t#transaction_t * j_checkpoint_transactions ; t#wait_queue_head_t j_wait_transaction_locked ; t#wait_queue_head_t j_wait_done_commit ; t#wait_queue_head_t j_wait_commit ; t#wait_queue_head_t j_wait_updates ; t#wait_queue_head_t j_wait_reserved ; s#mutex j_checkpoint_mutex ; s#buffer_head * j_chkpt_bhs [ 64 ] ; unsigned long j_head ; unsigned long j_tail ; unsigned long j_free ; unsigned long j_first ; unsigned long j_last ; s#block_device * j_dev ; int j_blocksize ; unsigned long long j_blk_offset ; char j_devname [ 32 + 24 ] ; s#block_device * j_fs_dev ; unsigned int j_maxlen ; t#atomic_t j_reserved_credits ; t#spinlock_t j_list_lock ; s#inode * j_inode ; t#tid_t j_tail_sequence ; t#tid_t j_transaction_sequence ; t#tid_t j_commit_sequence ; t#tid_t j_commit_request ; t#__u8 j_uuid [ 16 ] ; s#task_struct * j_task ; int j_max_transaction_buffers ; unsigned long j_commit_interval ; s#timer_list j_commit_timer ; t#spinlock_t j_revoke_lock ; s#jbd2_revoke_table_s * j_revoke ; s#jbd2_revoke_table_s * j_revoke_table [ 2 ] ; s#buffer_head * * j_wbuf ; int j_wbufsize ; t#pid_t j_last_sync_writer ; t#u64 j_average_commit_time ; t#u32 j_min_batch_time ; t#u32 j_max_batch_time ; void ( * j_commit_callback ) ( t#journal_t * , t#transaction_t * ) ; t#spinlock_t j_history_lock ; s#proc_dir_entry * j_proc_entry ; s#transaction_stats_s j_stats ; unsigned int j_failed_commit ; void * j_private ; s#crypto_shash * j_chksum_driver ; t#__u32 j_csum_seed ; } 
t#journal_t typedef s#journal_s journal_t 
s#jbd2_buffer_trigger_type struct jbd2_buffer_trigger_type { void ( * t_frozen ) ( s#jbd2_buffer_trigger_type * , s#buffer_head * , void * , t#size_t ) ; void ( * t_abort ) ( s#jbd2_buffer_trigger_type * , s#buffer_head * ) ; } 
s#journal_head struct journal_head { s#buffer_head * b_bh ; int b_jcount ; unsigned b_jlist ; unsigned b_modified ; char * b_frozen_data ; char * b_committed_data ; t#transaction_t * b_transaction ; t#transaction_t * b_next_transaction ; s#journal_head * b_tnext , * b_tprev ; t#transaction_t * b_cp_transaction ; s#journal_head * b_cpnext , * b_cpprev ; s#jbd2_buffer_trigger_type * b_triggers ; s#jbd2_buffer_trigger_type * b_frozen_triggers ; } 
s#transaction_chp_stats_s struct transaction_chp_stats_s { unsigned long cs_chp_time ; t#__u32 cs_forced_to_close ; t#__u32 cs_written ; t#__u32 cs_dropped ; } 
s#transaction_s struct transaction_s { t#journal_t * t_journal ; t#tid_t t_tid ; enum { T_RUNNING , T_LOCKED , T_FLUSH , T_COMMIT , T_COMMIT_DFLUSH , T_COMMIT_JFLUSH , T_COMMIT_CALLBACK , T_FINISHED } t_state ; unsigned long t_log_start ; int t_nr_buffers ; s#journal_head * t_reserved_list ; s#journal_head * t_buffers ; s#journal_head * t_forget ; s#journal_head * t_checkpoint_list ; s#journal_head * t_checkpoint_io_list ; s#journal_head * t_shadow_list ; s#list_head t_inode_list ; t#spinlock_t t_handle_lock ; unsigned long t_max_wait ; unsigned long t_start ; unsigned long t_requested ; s#transaction_chp_stats_s t_chp_stats ; t#atomic_t t_updates ; t#atomic_t t_outstanding_credits ; t#transaction_t * t_cpnext , * t_cpprev ; unsigned long t_expires ; t#ktime_t t_start_time ; t#atomic_t t_handle_count ; unsigned int t_synchronous_commit : 1 ; int t_need_data_flush ; s#list_head t_private_list ; } 
t#transaction_t typedef s#transaction_s transaction_t 
s#jbd2_journal_handle struct jbd2_journal_handle { union { t#transaction_t * h_transaction ; t#journal_t * h_journal ; } ; t#handle_t * h_rsv_handle ; int h_buffer_credits ; int h_ref ; int h_err ; unsigned int h_sync : 1 ; unsigned int h_jdata : 1 ; unsigned int h_reserved : 1 ; unsigned int h_aborted : 1 ; unsigned int h_type : 8 ; unsigned int h_line_no : 16 ; unsigned long h_start_jiffies ; unsigned int h_requested_credits ; } 
t#handle_t typedef s#jbd2_journal_handle handle_t 
jbd2_journal_extend extern int jbd2_journal_extend ( t#handle_t * , int ) 
jbd2_journal_stop extern int jbd2_journal_stop ( t#handle_t * ) 
jbd2_journal_lock_updates extern void jbd2_journal_lock_updates ( t#journal_t * ) 
jbd2_journal_unlock_updates extern void jbd2_journal_unlock_updates ( t#journal_t * ) 
jbd2_journal_get_write_access extern int jbd2_journal_get_write_access ( t#handle_t * , s#buffer_head * ) 
jbd2_journal_get_create_access extern int jbd2_journal_get_create_access ( t#handle_t * , s#buffer_head * ) 
jbd2_journal_get_undo_access extern int jbd2_journal_get_undo_access ( t#handle_t * , s#buffer_head * ) 
jbd2_journal_set_triggers void jbd2_journal_set_triggers ( s#buffer_head * , s#jbd2_buffer_trigger_type * ) 
jbd2_journal_dirty_metadata extern int jbd2_journal_dirty_metadata ( t#handle_t * , s#buffer_head * ) 
jbd2_journal_forget extern int jbd2_journal_forget ( t#handle_t * , s#buffer_head * ) 
jbd2_journal_flush extern int jbd2_journal_flush ( t#journal_t * ) 
jbd2_journal_revoke extern int jbd2_journal_revoke ( t#handle_t * , unsigned long long , s#buffer_head * ) 
jbd2_journal_init_dev extern t#journal_t * jbd2_journal_init_dev ( s#block_device * , s#block_device * , unsigned long long , int , int ) 
jbd2_journal_init_inode extern t#journal_t * jbd2_journal_init_inode ( s#inode * ) 
jbd2_journal_check_used_features extern int jbd2_journal_check_used_features ( t#journal_t * , unsigned long , unsigned long , unsigned long ) 
jbd2_journal_check_available_features extern int jbd2_journal_check_available_features ( t#journal_t * , unsigned long , unsigned long , unsigned long ) 
jbd2_journal_set_features extern int jbd2_journal_set_features ( t#journal_t * , unsigned long , unsigned long , unsigned long ) 
jbd2_journal_load extern int jbd2_journal_load ( t#journal_t * ) 
jbd2_journal_destroy extern int jbd2_journal_destroy ( t#journal_t * ) 
jbd2_journal_abort extern void jbd2_journal_abort ( t#journal_t * , int ) 
jbd2_journal_errno extern int jbd2_journal_errno ( t#journal_t * ) 
jbd2_journal_ack_err extern void jbd2_journal_ack_err ( t#journal_t * ) 
jbd2_journal_clear_err extern int jbd2_journal_clear_err ( t#journal_t * ) 
jbd2_log_wait_commit int jbd2_log_wait_commit ( t#journal_t * , t#tid_t ) 
jbd2_log_start_commit int jbd2_log_start_commit ( t#journal_t * , t#tid_t ) 
jbd2_journal_start_commit int jbd2_journal_start_commit ( t#journal_t * , t#tid_t * ) 
jbd2_journal_force_commit_nested extern int jbd2_journal_force_commit_nested ( t#journal_t * ) 
jbd2_journal_wipe extern int jbd2_journal_wipe ( t#journal_t * , int ) 
jbd2_journal_blocks_per_page extern int jbd2_journal_blocks_per_page ( s#inode * ) 
jbd2_journal_invalidatepage extern int jbd2_journal_invalidatepage ( t#journal_t * , s#page * , unsigned int , unsigned int ) 
jbd2_journal_try_to_free_buffers extern int jbd2_journal_try_to_free_buffers ( t#journal_t * , s#page * , t#gfp_t ) 
jbd2_journal_force_commit extern int jbd2_journal_force_commit ( t#journal_t * ) 
s#jbd2_inode struct jbd2_inode { t#transaction_t * i_transaction ; t#transaction_t * i_next_transaction ; s#list_head i_list ; s#inode * i_vfs_inode ; unsigned long i_flags ; } 
jbd2_journal_file_inode extern int jbd2_journal_file_inode ( t#handle_t * , s#jbd2_inode * ) 
jbd2_journal_init_jbd_inode extern void jbd2_journal_init_jbd_inode ( s#jbd2_inode * , s#inode * ) 
jbd2_journal_release_jbd_inode extern void jbd2_journal_release_jbd_inode ( t#journal_t * , s#jbd2_inode * ) 
jbd2_journal_begin_ordered_truncate extern int jbd2_journal_begin_ordered_truncate ( t#journal_t * , s#jbd2_inode * , t#loff_t ) 
jbd2_inode_cache extern s#kmem_cache * jbd2_inode_cache 
__jbd2_debug void __jbd2_debug ( int , const char * , const char * , unsigned int , const char * , ... ) 
jbd2_trans_will_send_data_barrier int jbd2_trans_will_send_data_barrier ( t#journal_t * , t#tid_t ) 
jbd2_complete_transaction int jbd2_complete_transaction ( t#journal_t * , t#tid_t ) 
jbd2_journal_update_sb_errno extern void jbd2_journal_update_sb_errno ( t#journal_t * ) 
jbd2_journal_clear_features extern void jbd2_journal_clear_features ( t#journal_t * , unsigned long , unsigned long , unsigned long ) 

/* fs/jbd2/transaction.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##jbd2_revoke_table_s
s##proc_dir_entry
s##scatterlist
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
jbd2__journal_start extern t#handle_t * jbd2__journal_start ( t#journal_t * , int , int , t#gfp_t , unsigned int , unsigned int ) 
jbd2_journal_start extern t#handle_t * jbd2_journal_start ( t#journal_t * , int ) 
jbd2_journal_free_reserved extern void jbd2_journal_free_reserved ( t#handle_t * ) 
jbd2_journal_start_reserved extern int jbd2_journal_start_reserved ( t#handle_t * , unsigned int , unsigned int ) 
jbd2__journal_restart extern int jbd2__journal_restart ( t#handle_t * , int , t#gfp_t ) 
jbd2_journal_restart extern int jbd2_journal_restart ( t#handle_t * , int ) 

/* fs/libfs.o */
s##posix_acl
s##nameidata
s##module
s##seq_file
s##radix_tree_node
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kiocb
s##iovec
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
simple_setattr extern int simple_setattr ( s#dentry * , s#iattr * ) 
generic_fh_to_dentry extern s#dentry * generic_fh_to_dentry ( s#super_block * , s#fid * , int , int , s#inode * ( * ) ( s#super_block * , t#u64 , t#u32 ) ) 
generic_fh_to_parent extern s#dentry * generic_fh_to_parent ( s#super_block * , s#fid * , int , int , s#inode * ( * ) ( s#super_block * , t#u64 , t#u32 ) ) 
generic_file_fsync extern int generic_file_fsync ( s#file * , t#loff_t , t#loff_t , int ) 
generic_check_addressable extern int generic_check_addressable ( unsigned , t#u64 ) 
dcache_dir_close extern int dcache_dir_close ( s#inode * , s#file * ) 
dcache_dir_lseek extern t#loff_t dcache_dir_lseek ( s#file * , t#loff_t , int ) 
dcache_dir_open extern int dcache_dir_open ( s#inode * , s#file * ) 
dcache_readdir extern int dcache_readdir ( s#file * , s#dir_context * ) 
generic_read_dir extern t#ssize_t generic_read_dir ( s#file * , char * , t#size_t , t#loff_t * ) 
mount_pseudo extern s#dentry * mount_pseudo ( s#file_system_type * , char * , const s#super_operations * , const s#dentry_operations * , unsigned long ) 
simple_write_begin extern int simple_write_begin ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , void * * ) 
simple_write_end extern int simple_write_end ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) 
simple_dir_inode_operations extern const s#inode_operations simple_dir_inode_operations 
simple_dir_operations extern const s#file_operations simple_dir_operations 
simple_empty extern int simple_empty ( s#dentry * ) 
s#tree_descr struct tree_descr { char * name ; const s#file_operations * ops ; int mode ; } 
simple_fill_super extern int simple_fill_super ( s#super_block * , unsigned long , s#tree_descr * ) 
simple_getattr extern int simple_getattr ( s#vfsmount * , s#dentry * , s#kstat * ) 
simple_open extern int simple_open ( s#inode * , s#file * ) 
simple_link extern int simple_link ( s#dentry * , s#inode * , s#dentry * ) 
simple_lookup extern s#dentry * simple_lookup ( s#inode * , s#dentry * , unsigned int ) 
simple_pin_fs extern int simple_pin_fs ( s#file_system_type * , s#vfsmount * * , int * ) 
simple_readpage extern int simple_readpage ( s#file * , s#page * ) 
simple_release_fs extern void simple_release_fs ( s#vfsmount * * , int * ) 
simple_rename extern int simple_rename ( s#inode * , s#dentry * , s#inode * , s#dentry * ) 
simple_rmdir extern int simple_rmdir ( s#inode * , s#dentry * ) 
simple_statfs extern int simple_statfs ( s#dentry * , s#kstatfs * ) 
noop_fsync extern int noop_fsync ( s#file * , t#loff_t , t#loff_t , int ) 
simple_unlink extern int simple_unlink ( s#inode * , s#dentry * ) 
simple_read_from_buffer extern t#ssize_t simple_read_from_buffer ( void * , t#size_t , t#loff_t * , const void * , t#size_t ) 
simple_write_to_buffer extern t#ssize_t simple_write_to_buffer ( void * , t#size_t , t#loff_t * , const void * , t#size_t ) 
memory_read_from_buffer extern t#ssize_t memory_read_from_buffer ( void * , t#size_t , t#loff_t * , const void * , t#size_t ) 
simple_transaction_set void simple_transaction_set ( s#file * , t#size_t ) 
simple_transaction_get char * simple_transaction_get ( s#file * , const char * , t#size_t ) 
simple_transaction_read t#ssize_t simple_transaction_read ( s#file * , char * , t#size_t , t#loff_t * ) 
simple_transaction_release int simple_transaction_release ( s#inode * , s#file * ) 
simple_attr_open int simple_attr_open ( s#inode * , s#file * , int ( * ) ( void * , t#u64 * ) , int ( * ) ( void * , t#u64 ) , const char * ) 
simple_attr_release int simple_attr_release ( s#inode * , s#file * ) 
simple_attr_read t#ssize_t simple_attr_read ( s#file * , char * , t#size_t , t#loff_t * ) 
simple_attr_write t#ssize_t simple_attr_write ( s#file * , const char * , t#size_t , t#loff_t * ) 
alloc_anon_inode extern s#inode * alloc_anon_inode ( s#super_block * ) 

/* fs/lockd/clntlock.o */
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s#nlm_lockowner struct nlm_lockowner { s#list_head list ; t#atomic_t count ; s#nlm_host * host ; t#fl_owner_t owner ; t#uint32_t pid ; } 
s##nfs4_lock_state
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##slab
s#xdr_buf struct xdr_buf { s#kvec head [ 1 ] , tail [ 1 ] ; s#page * * pages ; unsigned int page_base , page_len , flags ; unsigned int buflen , len ; } 
t#rpc_authflavor_t typedef t#u32 rpc_authflavor_t 
s#rpc_auth_create_args struct rpc_auth_create_args { t#rpc_authflavor_t pseudoflavor ; const char * target_name ; } 
s#auth_cred struct auth_cred { t#kuid_t uid ; t#kgid_t gid ; s#group_info * group_info ; const char * principal ; unsigned long ac_flags ; unsigned char machine_cred : 1 ; } 
s#rpcsec_gss_oid struct rpcsec_gss_oid { unsigned int len ; t#u8 data [ 32 ] ; } 
s#rpcsec_gss_info struct rpcsec_gss_info { s#rpcsec_gss_oid oid ; t#u32 qop ; t#u32 service ; } 
s#rpc_authops struct rpc_authops { s#module * owner ; t#rpc_authflavor_t au_flavor ; char * au_name ; s#rpc_auth * ( * create ) ( s#rpc_auth_create_args * , s#rpc_clnt * ) ; void ( * destroy ) ( s#rpc_auth * ) ; s#rpc_cred * ( * lookup_cred ) ( s#rpc_auth * , s#auth_cred * , int ) ; s#rpc_cred * ( * crcreate ) ( s#rpc_auth * , s#auth_cred * , int ) ; int ( * list_pseudoflavors ) ( t#rpc_authflavor_t * , int ) ; t#rpc_authflavor_t ( * info2flavor ) ( s#rpcsec_gss_info * ) ; int ( * flavor2info ) ( t#rpc_authflavor_t , s#rpcsec_gss_info * ) ; int ( * key_timeout ) ( s#rpc_auth * , s#rpc_cred * ) ; } 
s##rpc_cred_cache
s#rpc_auth struct rpc_auth { unsigned int au_cslack ; unsigned int au_rslack ; unsigned int au_verfsize ; unsigned int au_flags ; const s#rpc_authops * au_ops ; t#rpc_authflavor_t au_flavor ; t#atomic_t au_count ; s#rpc_cred_cache * au_credcache ; } 
s#xdr_stream struct xdr_stream { t#__be32 * p ; s#xdr_buf * buf ; t#__be32 * end ; s#kvec * iov ; s#kvec scratch ; s#page * * page_ptr ; unsigned int nwords ; } 
t#kxdreproc_t typedef void ( * kxdreproc_t ) ( void * , s#xdr_stream * , void * ) 
t#kxdrdproc_t typedef int ( * kxdrdproc_t ) ( void * , s#xdr_stream * , void * ) 
s#rpc_credops struct rpc_credops { const char * cr_name ; int ( * cr_init ) ( s#rpc_auth * , s#rpc_cred * ) ; void ( * crdestroy ) ( s#rpc_cred * ) ; int ( * crmatch ) ( s#auth_cred * , s#rpc_cred * , int ) ; s#rpc_cred * ( * crbind ) ( s#rpc_task * , s#rpc_cred * , int ) ; t#__be32 * ( * crmarshal ) ( s#rpc_task * , t#__be32 * ) ; int ( * crrefresh ) ( s#rpc_task * ) ; t#__be32 * ( * crvalidate ) ( s#rpc_task * , t#__be32 * ) ; int ( * crwrap_req ) ( s#rpc_task * , t#kxdreproc_t , void * , t#__be32 * , void * ) ; int ( * crunwrap_resp ) ( s#rpc_task * , t#kxdrdproc_t , void * , t#__be32 * , void * ) ; int ( * crkey_timeout ) ( s#rpc_cred * ) ; t#bool ( * crkey_to_expire ) ( s#rpc_cred * ) ; } 
s#rpc_cred struct rpc_cred { s#hlist_node cr_hash ; s#list_head cr_lru ; s#callback_head cr_rcu ; s#rpc_auth * cr_auth ; const s#rpc_credops * cr_ops ; unsigned long cr_magic ; unsigned long cr_expire ; unsigned long cr_flags ; t#atomic_t cr_count ; t#kuid_t cr_uid ; } 
s#rpc_rqst struct rpc_rqst { s#rpc_xprt * rq_xprt ; s#xdr_buf rq_snd_buf ; s#xdr_buf rq_rcv_buf ; s#rpc_task * rq_task ; s#rpc_cred * rq_cred ; t#__be32 rq_xid ; int rq_cong ; t#u32 rq_seqno ; int rq_enc_pages_num ; s#page * * rq_enc_pages ; void ( * rq_release_snd_buf ) ( s#rpc_rqst * ) ; s#list_head rq_list ; t#__u32 * rq_buffer ; t#size_t rq_callsize , rq_rcvsize ; t#size_t rq_xmit_bytes_sent ; t#size_t rq_reply_bytes_recvd ; s#xdr_buf rq_private_buf ; unsigned long rq_majortimeo ; unsigned long rq_timeout ; t#ktime_t rq_rtt ; unsigned int rq_retries ; unsigned int rq_connect_cookie ; t#u32 rq_bytes_sent ; t#ktime_t rq_xtime ; int rq_ntrans ; s#list_head rq_bc_list ; unsigned long rq_bc_pa_state ; s#list_head rq_bc_pa_list ; } 
s#rpc_procinfo struct rpc_procinfo { t#u32 p_proc ; t#kxdreproc_t p_encode ; t#kxdrdproc_t p_decode ; unsigned int p_arglen ; unsigned int p_replen ; unsigned int p_count ; unsigned int p_timer ; t#u32 p_statidx ; const char * p_name ; } 
s#rpc_message struct rpc_message { s#rpc_procinfo * rpc_proc ; void * rpc_argp ; void * rpc_resp ; s#rpc_cred * rpc_cred ; } 
s#rpc_call_ops struct rpc_call_ops { void ( * rpc_call_prepare ) ( s#rpc_task * , void * ) ; void ( * rpc_call_done ) ( s#rpc_task * , void * ) ; void ( * rpc_count_stats ) ( s#rpc_task * , void * ) ; void ( * rpc_release ) ( void * ) ; } 
s#rpc_timer struct rpc_timer { s#timer_list timer ; s#list_head list ; unsigned long expires ; } 
s#rpc_wait_queue struct rpc_wait_queue { t#spinlock_t lock ; s#list_head tasks [ ( 1 + ( 2 ) - ( - 1 ) ) ] ; t#pid_t owner ; unsigned char maxpriority ; unsigned char priority ; unsigned char nr ; unsigned short qlen ; s#rpc_timer timer_list ; const char * name ; } 
s#rpc_wait struct rpc_wait { s#list_head list ; s#list_head links ; s#list_head timer_list ; unsigned long expires ; } 
s#rpc_task struct rpc_task { t#atomic_t tk_count ; s#list_head tk_task ; s#rpc_clnt * tk_client ; s#rpc_rqst * tk_rqstp ; s#rpc_message tk_msg ; void ( * tk_callback ) ( s#rpc_task * ) ; void ( * tk_action ) ( s#rpc_task * ) ; const s#rpc_call_ops * tk_ops ; void * tk_calldata ; unsigned long tk_timeout ; unsigned long tk_runstate ; s#workqueue_struct * tk_workqueue ; s#rpc_wait_queue * tk_waitqueue ; union { s#work_struct tk_work ; s#rpc_wait tk_wait ; } u ; t#ktime_t tk_start ; t#pid_t tk_owner ; int tk_status ; unsigned short tk_flags ; unsigned short tk_timeouts ; unsigned short tk_pid ; unsigned char tk_priority : 2 , tk_garb_retry : 2 , tk_cred_retry : 2 , tk_rebind_retry : 2 ; } 
s#rpc_xprt_ops struct rpc_xprt_ops { void ( * set_buffer_size ) ( s#rpc_xprt * , t#size_t , t#size_t ) ; int ( * reserve_xprt ) ( s#rpc_xprt * , s#rpc_task * ) ; void ( * release_xprt ) ( s#rpc_xprt * , s#rpc_task * ) ; void ( * alloc_slot ) ( s#rpc_xprt * , s#rpc_task * ) ; void ( * rpcbind ) ( s#rpc_task * ) ; void ( * set_port ) ( s#rpc_xprt * , unsigned short ) ; void ( * connect ) ( s#rpc_xprt * , s#rpc_task * ) ; void * ( * buf_alloc ) ( s#rpc_task * , t#size_t ) ; void ( * buf_free ) ( void * ) ; int ( * send_request ) ( s#rpc_task * ) ; void ( * set_retrans_timeout ) ( s#rpc_task * ) ; void ( * timer ) ( s#rpc_xprt * , s#rpc_task * ) ; void ( * release_request ) ( s#rpc_task * ) ; void ( * close ) ( s#rpc_xprt * ) ; void ( * destroy ) ( s#rpc_xprt * ) ; void ( * print_stats ) ( s#rpc_xprt * , s#seq_file * ) ; } 
s#rpc_timeout struct rpc_timeout { unsigned long to_initval , to_maxval , to_increment ; unsigned int to_retries ; unsigned char to_exponential ; } 
s##svc_xprt
s#svc_pool_stats struct svc_pool_stats { unsigned long packets ; unsigned long sockets_queued ; unsigned long threads_woken ; unsigned long threads_timedout ; } 
s#svc_pool struct svc_pool { unsigned int sp_id ; t#spinlock_t sp_lock ; s#list_head sp_threads ; s#list_head sp_sockets ; unsigned int sp_nrthreads ; s#list_head sp_all_threads ; s#svc_pool_stats sp_stats ; int sp_task_pending ; } 
s#auth_domain struct auth_domain { s#kref ref ; s#hlist_node hash ; char * name ; s#auth_ops * flavour ; } 
s#auth_ops struct auth_ops { char * name ; s#module * owner ; int flavour ; int ( * accept ) ( s#svc_rqst * , t#__be32 * ) ; int ( * release ) ( s#svc_rqst * ) ; void ( * domain_release ) ( s#auth_domain * ) ; int ( * set_client ) ( s#svc_rqst * ) ; } 
s#gss_ctx struct gss_ctx { s#gss_api_mech * mech_type ; void * internal_ctx_id ; } 
s#xdr_netobj struct xdr_netobj { unsigned int len ; t#u8 * data ; } 
s#gss_api_ops struct gss_api_ops { int ( * gss_import_sec_context ) ( const void * , t#size_t , s#gss_ctx * , t#time_t * , t#gfp_t ) ; t#u32 ( * gss_get_mic ) ( s#gss_ctx * , s#xdr_buf * , s#xdr_netobj * ) ; t#u32 ( * gss_verify_mic ) ( s#gss_ctx * , s#xdr_buf * , s#xdr_netobj * ) ; t#u32 ( * gss_wrap ) ( s#gss_ctx * , int , s#xdr_buf * , s#page * * ) ; t#u32 ( * gss_unwrap ) ( s#gss_ctx * , int , s#xdr_buf * ) ; void ( * gss_delete_sec_context ) ( void * ) ; } 
s#pf_desc struct pf_desc { t#u32 pseudoflavor ; t#u32 qop ; t#u32 service ; char * name ; char * auth_domain_name ; } 
s#gss_api_mech struct gss_api_mech { s#list_head gm_list ; s#module * gm_owner ; s#rpcsec_gss_oid gm_oid ; char * gm_name ; const s#gss_api_ops * gm_ops ; int gm_pf_num ; s#pf_desc * gm_pfs ; const char * gm_upcall_enctypes ; } 
s#svc_cred struct svc_cred { t#kuid_t cr_uid ; t#kgid_t cr_gid ; s#group_info * cr_group_info ; t#u32 cr_flavor ; char * cr_principal ; s#gss_api_mech * cr_gss_mech ; } 
s#cache_head struct cache_head { s#cache_head * next ; t#time_t expiry_time ; t#time_t last_refresh ; s#kref ref ; unsigned long flags ; } 
s#cache_deferred_req struct cache_deferred_req { s#hlist_node hash ; s#list_head recent ; s#cache_head * item ; void * owner ; void ( * revisit ) ( s#cache_deferred_req * , int ) ; } 
s#svc_deferred_req struct svc_deferred_req { t#u32 prot ; s#svc_xprt * xprt ; s#__kernel_sockaddr_storage addr ; t#size_t addrlen ; s#__kernel_sockaddr_storage daddr ; t#size_t daddrlen ; s#cache_deferred_req handle ; t#size_t xprt_hlen ; int argslen ; t#__be32 args [ 0 ] ; } 
s#cache_req struct cache_req { s#cache_deferred_req * ( * defer ) ( s#cache_req * ) ; int thread_wait ; } 
s##svc_cacherep
s#svc_rqst struct svc_rqst { s#list_head rq_list ; s#list_head rq_all ; s#svc_xprt * rq_xprt ; s#__kernel_sockaddr_storage rq_addr ; t#size_t rq_addrlen ; s#__kernel_sockaddr_storage rq_daddr ; t#size_t rq_daddrlen ; s#svc_serv * rq_server ; s#svc_pool * rq_pool ; s#svc_procedure * rq_procinfo ; s#auth_ops * rq_authop ; s#svc_cred rq_cred ; void * rq_xprt_ctxt ; s#svc_deferred_req * rq_deferred ; int rq_usedeferral ; t#size_t rq_xprt_hlen ; s#xdr_buf rq_arg ; s#xdr_buf rq_res ; s#page * rq_pages [ ( ( ( 1 * 1024 * 1024u ) + ( 1UL << 16 ) - 1 ) / ( 1UL << 16 ) + 2 + 1 ) ] ; s#page * * rq_respages ; s#page * * rq_next_page ; s#kvec rq_vec [ ( ( ( 1 * 1024 * 1024u ) + ( 1UL << 16 ) - 1 ) / ( 1UL << 16 ) + 2 + 1 ) ] ; t#__be32 rq_xid ; t#u32 rq_prog ; t#u32 rq_vers ; t#u32 rq_proc ; t#u32 rq_prot ; unsigned short rq_secure : 1 ; unsigned short rq_local : 1 ; void * rq_argp ; void * rq_resp ; void * rq_auth_data ; int rq_reserved ; s#cache_req rq_chandle ; t#bool rq_dropme ; s#auth_domain * rq_client ; s#auth_domain * rq_gssclient ; int rq_cachetype ; s#svc_cacherep * rq_cacherep ; int rq_splice_ok ; t#wait_queue_head_t rq_wait ; s#task_struct * rq_task ; } 
t#svc_procfunc typedef t#__be32 ( * svc_procfunc ) ( s#svc_rqst * , void * , void * ) 
t#kxdrproc_t typedef int ( * kxdrproc_t ) ( void * , t#__be32 * , void * ) 
s#svc_procedure struct svc_procedure { t#svc_procfunc pc_func ; t#kxdrproc_t pc_decode ; t#kxdrproc_t pc_encode ; t#kxdrproc_t pc_release ; unsigned int pc_argsize ; unsigned int pc_ressize ; unsigned int pc_count ; unsigned int pc_cachetype ; unsigned int pc_xdrressize ; } 
s#svc_version struct svc_version { t#u32 vs_vers ; t#u32 vs_nproc ; s#svc_procedure * vs_proc ; t#u32 vs_xdrsize ; unsigned int vs_hidden : 1 ; int ( * vs_dispatch ) ( s#svc_rqst * , t#__be32 * ) ; } 
s#svc_stat struct svc_stat { s#svc_program * program ; unsigned int netcnt , netudpcnt , nettcpcnt , nettcpconn ; unsigned int rpccnt , rpcbadfmt , rpcbadauth , rpcbadclnt ; } 
s#svc_program struct svc_program { s#svc_program * pg_next ; t#u32 pg_prog ; unsigned int pg_lovers ; unsigned int pg_hivers ; unsigned int pg_nvers ; s#svc_version * * pg_vers ; char * pg_name ; char * pg_class ; s#svc_stat * pg_stats ; int ( * pg_authenticate ) ( s#svc_rqst * ) ; } 
t#svc_thread_fn typedef int ( * svc_thread_fn ) ( void * ) 
s#svc_serv struct svc_serv { s#svc_program * sv_program ; s#svc_stat * sv_stats ; t#spinlock_t sv_lock ; unsigned int sv_nrthreads ; unsigned int sv_maxconn ; unsigned int sv_max_payload ; unsigned int sv_max_mesg ; unsigned int sv_xdrsize ; s#list_head sv_permsocks ; s#list_head sv_tempsocks ; int sv_tmpcnt ; s#timer_list sv_temptimer ; char * sv_name ; unsigned int sv_nrpools ; s#svc_pool * sv_pools ; void ( * sv_shutdown ) ( s#svc_serv * , s#net * ) ; s#module * sv_module ; t#svc_thread_fn sv_function ; s#list_head sv_cb_list ; t#spinlock_t sv_cb_lock ; t#wait_queue_head_t sv_cb_waitq ; s#svc_xprt * sv_bc_xprt ; } 
E#RPC_DISPLAY_MAX ( 0 ) + 6 
s#rpc_xprt struct rpc_xprt { t#atomic_t count ; s#rpc_xprt_ops * ops ; const s#rpc_timeout * timeout ; s#__kernel_sockaddr_storage addr ; t#size_t addrlen ; int prot ; unsigned long cong ; unsigned long cwnd ; t#size_t max_payload ; unsigned int tsh_size ; s#rpc_wait_queue binding ; s#rpc_wait_queue sending ; s#rpc_wait_queue pending ; s#rpc_wait_queue backlog ; s#list_head free ; unsigned int max_reqs ; unsigned int min_reqs ; t#atomic_t num_reqs ; unsigned long state ; unsigned char resvport : 1 ; unsigned int swapper ; unsigned int bind_index ; unsigned long bind_timeout , reestablish_timeout ; unsigned int connect_cookie ; s#work_struct task_cleanup ; s#timer_list timer ; unsigned long last_used , idle_timeout ; t#spinlock_t transport_lock ; t#spinlock_t reserve_lock ; t#u32 xid ; s#rpc_task * snd_task ; s#svc_xprt * bc_xprt ; s#svc_serv * bc_serv ; unsigned int bc_alloc_count ; t#spinlock_t bc_pa_lock ; s#list_head bc_pa_list ; s#list_head recv ; struct { unsigned long bind_count , connect_count , connect_start , connect_time , sends , recvs , bad_xids , max_slots ; unsigned long long req_u , bklog_u , sending_u , pending_u ; } stat ; s#net * xprt_net ; const char * servername ; const char * address_strings [ E#RPC_DISPLAY_MAX ] ; } 
s#rpc_version struct rpc_version { t#u32 number ; unsigned int nrprocs ; s#rpc_procinfo * procs ; } 
s#rpc_program struct rpc_program { const char * name ; t#u32 number ; unsigned int nrvers ; const s#rpc_version * * version ; s#rpc_stat * stats ; const char * pipe_dir_name ; } 
s#rpc_stat struct rpc_stat { const s#rpc_program * program ; unsigned int netcnt , netudpcnt , nettcpcnt , nettcpconn , netreconn ; unsigned int rpccnt , rpcretrans , rpcauthrefresh , rpcgarbage ; } 
s##rpc_iostats
s#rpc_rtt struct rpc_rtt { unsigned long timeo ; unsigned long srtt [ 5 ] ; unsigned long sdrtt [ 5 ] ; int ntimeouts [ 5 ] ; } 
s#rpc_pipe_dir_head struct rpc_pipe_dir_head { s#list_head pdh_entries ; s#dentry * pdh_dentry ; } 
s#rpc_clnt struct rpc_clnt { t#atomic_t cl_count ; unsigned int cl_clid ; s#list_head cl_clients ; s#list_head cl_tasks ; t#spinlock_t cl_lock ; s#rpc_xprt * cl_xprt ; s#rpc_procinfo * cl_procinfo ; t#u32 cl_prog , cl_vers , cl_maxproc ; s#rpc_auth * cl_auth ; s#rpc_stat * cl_stats ; s#rpc_iostats * cl_metrics ; unsigned int cl_softrtry : 1 , cl_discrtry : 1 , cl_noretranstimeo : 1 , cl_autobind : 1 , cl_chatty : 1 ; s#rpc_rtt * cl_rtt ; const s#rpc_timeout * cl_timeout ; int cl_nodelen ; char cl_nodename [ 32 ] ; s#rpc_pipe_dir_head cl_pipedir_objects ; s#rpc_clnt * cl_parent ; s#rpc_rtt cl_rtt_default ; s#rpc_timeout cl_timeout_default ; const s#rpc_program * cl_program ; } 
s#nsm_private struct nsm_private { unsigned char data [ 16 ] ; } 
s#nsm_handle struct nsm_handle { s#list_head sm_link ; t#atomic_t sm_count ; char * sm_mon_name ; char * sm_name ; s#__kernel_sockaddr_storage sm_addr ; t#size_t sm_addrlen ; unsigned int sm_monitored : 1 , sm_sticky : 1 ; s#nsm_private sm_priv ; char sm_addrbuf [ ( ( 8 * 4 + 7 ) + ( 1 + 10 ) + 1 ) ] ; } 
s#nlm_host struct nlm_host { s#hlist_node h_hash ; s#__kernel_sockaddr_storage h_addr ; t#size_t h_addrlen ; s#__kernel_sockaddr_storage h_srcaddr ; t#size_t h_srcaddrlen ; s#rpc_clnt * h_rpcclnt ; char * h_name ; t#u32 h_version ; unsigned short h_proto ; unsigned short h_reclaiming : 1 , h_server : 1 , h_noresvport : 1 , h_inuse : 1 ; t#wait_queue_head_t h_gracewait ; s#rw_semaphore h_rwsem ; t#u32 h_state ; t#u32 h_nsmstate ; t#u32 h_pidcount ; t#atomic_t h_count ; s#mutex h_mutex ; unsigned long h_nextrebind ; unsigned long h_expires ; s#list_head h_lockowners ; t#spinlock_t h_lock ; s#list_head h_granted ; s#list_head h_reclaim ; s#nsm_handle * h_nsmhandle ; char * h_addrbuf ; s#net * net ; } 
s#nlmclnt_initdata struct nlmclnt_initdata { const char * hostname ; const s#sockaddr * address ; t#size_t addrlen ; unsigned short protocol ; t#u32 nfs_version ; int noresvport ; s#net * net ; } 
nlmclnt_init extern s#nlm_host * nlmclnt_init ( const s#nlmclnt_initdata * ) 
nlmclnt_done extern void nlmclnt_done ( s#nlm_host * ) 

/* fs/lockd/clntproc.o */
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nfs4_lock_state
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##slab
s##rpc_cred_cache
s##svc_xprt
s##svc_cacherep
s##rpc_iostats
nlmclnt_proc extern int nlmclnt_proc ( s#nlm_host * , int , s#file_lock * ) 

/* fs/lockd/grace.o */
s##user_namespace
s##proc_dir_entry
s##nsproxy
s##sock
s##net_device
s##prot_inuse
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sec_path
s##neighbour
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s#lock_manager struct lock_manager { s#list_head list ; } 
locks_start_grace void locks_start_grace ( s#net * , s#lock_manager * ) 
locks_end_grace void locks_end_grace ( s#lock_manager * ) 
locks_in_grace int locks_in_grace ( s#net * ) 

/* fs/lockd/svc.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##user_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##rpc_cred_cache
s##rpc_iostats
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s#svc_xprt_ops struct svc_xprt_ops { s#svc_xprt * ( * xpo_create ) ( s#svc_serv * , s#net * , s#sockaddr * , int , int ) ; s#svc_xprt * ( * xpo_accept ) ( s#svc_xprt * ) ; int ( * xpo_has_wspace ) ( s#svc_xprt * ) ; int ( * xpo_recvfrom ) ( s#svc_rqst * ) ; void ( * xpo_prep_reply_hdr ) ( s#svc_rqst * ) ; int ( * xpo_sendto ) ( s#svc_rqst * ) ; void ( * xpo_release_rqst ) ( s#svc_rqst * ) ; void ( * xpo_detach ) ( s#svc_xprt * ) ; void ( * xpo_free ) ( s#svc_xprt * ) ; } 
s#svc_xprt_class struct svc_xprt_class { const char * xcl_name ; s#module * xcl_owner ; s#svc_xprt_ops * xcl_ops ; s#list_head xcl_list ; t#u32 xcl_max_payload ; } 
s#svc_xprt struct svc_xprt { s#svc_xprt_class * xpt_class ; s#svc_xprt_ops * xpt_ops ; s#kref xpt_ref ; s#list_head xpt_list ; s#list_head xpt_ready ; unsigned long xpt_flags ; s#svc_serv * xpt_server ; t#atomic_t xpt_reserved ; s#mutex xpt_mutex ; t#spinlock_t xpt_lock ; void * xpt_auth_cache ; s#list_head xpt_deferred ; s#__kernel_sockaddr_storage xpt_local ; t#size_t xpt_locallen ; s#__kernel_sockaddr_storage xpt_remote ; t#size_t xpt_remotelen ; s#rpc_wait_queue xpt_bc_pending ; s#list_head xpt_users ; s#net * xpt_net ; s#rpc_xprt * xpt_bc_xprt ; } 
s##svc_cacherep
s#nfs_fh struct nfs_fh { unsigned short size ; unsigned char data [ 128 ] ; } 
s#nlmsvc_binding struct nlmsvc_binding { t#__be32 ( * fopen ) ( s#svc_rqst * , s#nfs_fh * , s#file * * ) ; void ( * fclose ) ( s#file * ) ; } 
nlmsvc_ops extern s#nlmsvc_binding * nlmsvc_ops 
lockd_up extern int lockd_up ( s#net * ) 
lockd_down extern void lockd_down ( s#net * ) 

/* fs/lockd/svcsubs.o */
s##posix_acl
s##nameidata
s##kioctx
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##rpc_clnt
s##nfs4_lock_state
s##hd_struct
s##gendisk
s##request_queue
s##cdev
s##kstatfs
s##export_operations
s##mtd_info
nlmsvc_unlock_all_by_sb int nlmsvc_unlock_all_by_sb ( s#super_block * ) 
nlmsvc_unlock_all_by_ip int nlmsvc_unlock_all_by_ip ( s#sockaddr * ) 

/* fs/locks.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cdev
s##nlm_lockowner
s##nfs4_lock_state
locks_alloc_lock extern s#file_lock * locks_alloc_lock ( void ) 
locks_release_private extern void locks_release_private ( s#file_lock * ) 
locks_free_lock void locks_free_lock ( s#file_lock * ) 
locks_init_lock extern void locks_init_lock ( s#file_lock * ) 
__locks_copy_lock extern void __locks_copy_lock ( s#file_lock * , const s#file_lock * ) 
locks_copy_lock extern void locks_copy_lock ( s#file_lock * , s#file_lock * ) 
posix_test_lock extern void posix_test_lock ( s#file * , s#file_lock * ) 
posix_lock_file extern int posix_lock_file ( s#file * , s#file_lock * , s#file_lock * ) 
posix_lock_file_wait extern int posix_lock_file_wait ( s#file * , s#file_lock * ) 
locks_mandatory_area extern int locks_mandatory_area ( int , s#inode * , s#file * , t#loff_t , t#size_t ) 
lease_modify extern int lease_modify ( s#file_lock * * , int ) 
__break_lease extern int __break_lease ( s#inode * , unsigned int , unsigned int ) 
lease_get_mtime extern void lease_get_mtime ( s#inode * , s#timespec * ) 
generic_setlease extern int generic_setlease ( s#file * , long , s#file_lock * * ) 
vfs_setlease extern int vfs_setlease ( s#file * , long , s#file_lock * * ) 
flock_lock_file_wait extern int flock_lock_file_wait ( s#file * , s#file_lock * ) 
vfs_test_lock extern int vfs_test_lock ( s#file * , s#file_lock * ) 
vfs_lock_file extern int vfs_lock_file ( s#file * , unsigned int , s#file_lock * , s#file_lock * ) 
locks_remove_posix extern void locks_remove_posix ( s#file * , t#fl_owner_t ) 
posix_unblock_lock extern int posix_unblock_lock ( s#file_lock * ) 
vfs_cancel_lock extern int vfs_cancel_lock ( s#file * , s#file_lock * ) 
lock_may_read extern int lock_may_read ( s#inode * , t#loff_t , unsigned long ) 
lock_may_write extern int lock_may_write ( s#inode * , t#loff_t , unsigned long ) 

/* fs/mbcache.o */
s##kmem_cache_node
s##array_cache
s#mb_cache struct mb_cache { s#list_head c_cache_list ; const char * c_name ; t#atomic_t c_entry_count ; int c_max_entries ; int c_bucket_bits ; s#kmem_cache * c_entry_cache ; s#list_head * c_block_hash ; s#list_head * c_index_hash ; } 
mb_cache_create s#mb_cache * mb_cache_create ( const char * , int ) 
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##swap_info_struct
s##backing_dev_info
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##hd_struct
s##gendisk
s##request_queue
mb_cache_shrink void mb_cache_shrink ( s#block_device * ) 
mb_cache_destroy void mb_cache_destroy ( s#mb_cache * ) 
s#mb_cache_entry struct mb_cache_entry { s#list_head e_lru_list ; s#mb_cache * e_cache ; unsigned short e_used ; unsigned short e_queued ; s#block_device * e_bdev ; t#sector_t e_block ; s#list_head e_block_list ; struct { s#list_head o_list ; unsigned int o_key ; } e_index ; } 
mb_cache_entry_alloc s#mb_cache_entry * mb_cache_entry_alloc ( s#mb_cache * , t#gfp_t ) 
mb_cache_entry_insert int mb_cache_entry_insert ( s#mb_cache_entry * , s#block_device * , t#sector_t , unsigned int ) 
mb_cache_entry_release void mb_cache_entry_release ( s#mb_cache_entry * ) 
mb_cache_entry_free void mb_cache_entry_free ( s#mb_cache_entry * ) 
mb_cache_entry_get s#mb_cache_entry * mb_cache_entry_get ( s#mb_cache * , s#block_device * , t#sector_t ) 
mb_cache_entry_find_first s#mb_cache_entry * mb_cache_entry_find_first ( s#mb_cache * , s#block_device * , unsigned int ) 
mb_cache_entry_find_next s#mb_cache_entry * mb_cache_entry_find_next ( s#mb_cache_entry * , s#block_device * , unsigned int ) 

/* fs/mpage.o */
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##seq_file
s##slab
s##kmem_cache_node
s##array_cache
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##workqueue_struct
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##mtd_info
s##nameidata
s##cdev
mpage_readpages int mpage_readpages ( s#address_space * , s#list_head * , unsigned , t#get_block_t ) 
mpage_readpage int mpage_readpage ( s#page * , t#get_block_t ) 
mpage_writepages int mpage_writepages ( s#address_space * , s#writeback_control * , t#get_block_t ) 
mpage_writepage int mpage_writepage ( s#page * , t#get_block_t * , s#writeback_control * ) 

/* fs/namei.o */
s##audit_names
s#filename struct filename { const char * name ; const char * uptr ; s#audit_names * aname ; t#bool separate ; } 
getname extern s#filename * getname ( const char * ) 
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##kiocb
s##iovec
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##uts_namespace
s##ipc_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##mtd_info
s##workqueue_struct
s##cdev
__inode_permission extern int __inode_permission ( s#inode * , int ) 
path_get extern void path_get ( const s#path * ) 
path_put extern void path_put ( const s#path * ) 
full_name_hash extern unsigned int full_name_hash ( const unsigned char * , unsigned int ) 
kern_path_mountpoint extern int kern_path_mountpoint ( int , const char * , s#path * , unsigned int ) 
kern_path_create extern s#dentry * kern_path_create ( int , const char * , s#path * , unsigned int ) 
done_path_create extern void done_path_create ( s#path * , s#dentry * ) 
user_path_create extern s#dentry * user_path_create ( int , const char * , s#path * , unsigned int ) 
user_path_at extern int user_path_at ( int , const char * , unsigned , s#path * ) 
follow_down_one extern int follow_down_one ( s#path * ) 
follow_down extern int follow_down ( s#path * ) 
follow_up extern int follow_up ( s#path * ) 
get_write_access __attribute__ ( ( always_inline ) ) __attribute__ ( ( no_instrument_function ) ) int get_write_access ( s#inode * ) 
lock_rename extern s#dentry * lock_rename ( s#dentry * , s#dentry * ) 
lookup_one_len extern s#dentry * lookup_one_len ( const char * , s#dentry * , int ) 
page_follow_link_light extern void * page_follow_link_light ( s#dentry * , s#nameidata * ) 
page_put_link extern void page_put_link ( s#dentry * , s#nameidata * , void * ) 
page_readlink extern int page_readlink ( s#dentry * , char * , int ) 
__page_symlink extern int __page_symlink ( s#inode * , const char * , int , int ) 
page_symlink extern int page_symlink ( s#inode * , const char * , int ) 
page_symlink_inode_operations extern const s#inode_operations page_symlink_inode_operations 
kern_path extern int kern_path ( const char * , unsigned , s#path * ) 
vfs_path_lookup extern int vfs_path_lookup ( s#dentry * , s#vfsmount * , const char * , unsigned int , s#path * ) 
inode_permission extern int inode_permission ( s#inode * , int ) 
unlock_rename extern void unlock_rename ( s#dentry * , s#dentry * ) 
vfs_create extern int vfs_create ( s#inode * , s#dentry * , t#umode_t , t#bool ) 
vfs_link extern int vfs_link ( s#dentry * , s#inode * , s#dentry * , s#inode * * ) 
vfs_mkdir extern int vfs_mkdir ( s#inode * , s#dentry * , t#umode_t ) 
vfs_mknod extern int vfs_mknod ( s#inode * , s#dentry * , t#umode_t , t#dev_t ) 
generic_permission extern int generic_permission ( s#inode * , int ) 
vfs_readlink extern int vfs_readlink ( s#dentry * , char * , int , const char * ) 
vfs_rename extern int vfs_rename ( s#inode * , s#dentry * , s#inode * , s#dentry * , s#inode * * ) 
vfs_rmdir extern int vfs_rmdir ( s#inode * , s#dentry * ) 
vfs_symlink extern int vfs_symlink ( s#inode * , s#dentry * , const char * ) 
vfs_unlink extern int vfs_unlink ( s#inode * , s#dentry * , s#inode * * ) 
dentry_unhash extern void dentry_unhash ( s#dentry * ) 
generic_readlink extern int generic_readlink ( s#dentry * , char * , int ) 

/* fs/namespace.o */
s##sock
s##sysfs_dirent
fs_kobj extern s#kobject * fs_kobj 
s##posix_acl
s##module
s##kiocb
s##iovec
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##key_user
s##key_type
s##assoc_array_ptr
s##sem_undo_list
s##device_private
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##files_struct
s##uts_namespace
s##ipc_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mempolicy
s##numa_group
s##pipe_inode_info
s##radix_tree_node
s##writeback_control
s##swap_info_struct
s##slab
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cdev
__mnt_is_readonly extern int __mnt_is_readonly ( s#vfsmount * ) 
mnt_want_write extern int mnt_want_write ( s#vfsmount * ) 
mnt_clone_write extern int mnt_clone_write ( s#vfsmount * ) 
mnt_want_write_file extern int mnt_want_write_file ( s#file * ) 
mnt_drop_write extern void mnt_drop_write ( s#vfsmount * ) 
mnt_drop_write_file extern void mnt_drop_write_file ( s#file * ) 
vfs_kern_mount extern s#vfsmount * vfs_kern_mount ( s#file_system_type * , int , const char * , void * ) 
mntput extern void mntput ( s#vfsmount * ) 
mntget extern s#vfsmount * mntget ( s#vfsmount * ) 
mnt_pin extern void mnt_pin ( s#vfsmount * ) 
mnt_unpin extern void mnt_unpin ( s#vfsmount * ) 
generic_show_options extern int generic_show_options ( s#seq_file * , s#dentry * ) 
save_mount_options extern void save_mount_options ( s#super_block * , char * ) 
replace_mount_options extern void replace_mount_options ( s#super_block * , char * ) 
may_umount_tree extern int may_umount_tree ( s#vfsmount * ) 
may_umount extern int may_umount ( s#vfsmount * ) 
clone_private_mount extern s#vfsmount * clone_private_mount ( s#path * ) 
mnt_set_expiry extern void mnt_set_expiry ( s#vfsmount * , s#list_head * ) 
mark_mounts_for_expiry extern void mark_mounts_for_expiry ( s#list_head * ) 
mount_subtree extern s#dentry * mount_subtree ( s#vfsmount * , const char * ) 
path_is_under extern int path_is_under ( s#path * , s#path * ) 
kern_mount_data extern s#vfsmount * kern_mount_data ( s#file_system_type * , void * ) 
kern_unmount extern void kern_unmount ( s#vfsmount * ) 

/* fs/nfs/client.o */
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mtd_info
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##rpc_cred_cache
s##svc_cacherep
s#rpc_iostats struct rpc_iostats { unsigned long om_ops , om_ntrans , om_timeouts ; unsigned long long om_bytes_sent , om_bytes_recv ; t#ktime_t om_queue , om_rtt , om_execute ; } 
s#nfs_fsid struct nfs_fsid { t#uint64_t major ; t#uint64_t minor ; } 
s#nfs4_string struct nfs4_string { unsigned int len ; char * data ; } 
s#nfs4_threshold struct nfs4_threshold { t#__u32 bm ; t#__u32 l_type ; t#__u64 rd_sz ; t#__u64 wr_sz ; t#__u64 rd_io_sz ; t#__u64 wr_io_sz ; } 
s#nfs_fattr struct nfs_fattr { unsigned int valid ; t#umode_t mode ; t#__u32 nlink ; t#kuid_t uid ; t#kgid_t gid ; t#dev_t rdev ; t#__u64 size ; union { struct { t#__u32 blocksize ; t#__u32 blocks ; } nfs2 ; struct { t#__u64 used ; } nfs3 ; } du ; s#nfs_fsid fsid ; t#__u64 fileid ; t#__u64 mounted_on_fileid ; s#timespec atime ; s#timespec mtime ; s#timespec ctime ; t#__u64 change_attr ; t#__u64 pre_change_attr ; t#__u64 pre_size ; s#timespec pre_mtime ; s#timespec pre_ctime ; unsigned long time_start ; unsigned long gencount ; s#nfs4_string * owner_name ; s#nfs4_string * group_name ; s#nfs4_threshold * mdsthreshold ; } 
s#nfs_fsinfo struct nfs_fsinfo { s#nfs_fattr * fattr ; t#__u32 rtmax ; t#__u32 rtpref ; t#__u32 rtmult ; t#__u32 wtmax ; t#__u32 wtpref ; t#__u32 wtmult ; t#__u32 dtpref ; t#__u64 maxfilesize ; s#timespec time_delta ; t#__u32 lease_time ; t#__u32 layouttype ; t#__u32 blksize ; } 
s#nfs_auth_info struct nfs_auth_info { unsigned int flavor_len ; t#rpc_authflavor_t flavors [ 12 ] ; } 
s#security_mnt_opts struct security_mnt_opts { char * * mnt_opts ; int * mnt_opts_flags ; int num_mnt_opts ; } 
s#nfs_parsed_mount_data struct nfs_parsed_mount_data { int flags ; unsigned int rsize , wsize ; unsigned int timeo , retrans ; unsigned int acregmin , acregmax , acdirmin , acdirmax ; unsigned int namlen ; unsigned int options ; unsigned int bsize ; s#nfs_auth_info auth_info ; t#rpc_authflavor_t selected_flavor ; char * client_address ; unsigned int version ; unsigned int minorversion ; char * fscache_uniq ; t#bool need_mount ; unsigned int xprt_id ; struct { s#__kernel_sockaddr_storage address ; t#size_t addrlen ; char * hostname ; t#u32 version ; int port ; unsigned short protocol ; } mount_server ; struct { s#__kernel_sockaddr_storage address ; t#size_t addrlen ; char * hostname ; char * export_path ; int port ; unsigned short protocol ; } nfs_server ; s#security_mnt_opts lsm_opts ; s#net * net ; } 
s#nfs_clone_mount struct nfs_clone_mount { const s#super_block * sb ; const s#dentry * dentry ; s#nfs_fh * fh ; s#nfs_fattr * fattr ; char * hostname ; char * mnt_path ; s#sockaddr * addr ; t#size_t addrlen ; t#rpc_authflavor_t authflavor ; } 
s#nfs_mount_info struct nfs_mount_info { void ( * fill_super ) ( s#super_block * , s#nfs_mount_info * ) ; int ( * set_security ) ( s#super_block * , s#dentry * , s#nfs_mount_info * ) ; s#nfs_parsed_mount_data * parsed ; s#nfs_clone_mount * cloned ; s#nfs_fh * mntfh ; } 
s#nfs4_label struct nfs4_label { t#uint32_t lfs ; t#uint32_t pi ; t#u32 len ; char * label ; } 
s#nfs_access_entry struct nfs_access_entry { s#rb_node rb_node ; s#list_head lru ; unsigned long jiffies ; s#rpc_cred * cred ; int mask ; s#callback_head callback_head ; } 
s##nfs4_slot
s#nfs4_sequence_args struct nfs4_sequence_args { s#nfs4_slot * sa_slot ; t#u8 sa_cache_this : 1 , sa_privileged : 1 ; } 
s#nfs_removeargs struct nfs_removeargs { s#nfs4_sequence_args seq_args ; const s#nfs_fh * fh ; s#qstr name ; } 
s#nfs4_sequence_res struct nfs4_sequence_res { s#nfs4_slot * sr_slot ; unsigned long sr_timestamp ; int sr_status ; t#u32 sr_status_flags ; t#u32 sr_highest_slotid ; t#u32 sr_target_highest_slotid ; } 
s#nfs4_change_info struct nfs4_change_info { t#u32 atomic ; t#u64 before ; t#u64 after ; } 
s#nfs_removeres struct nfs_removeres { s#nfs4_sequence_res seq_res ; const s#nfs_server * server ; s#nfs_fattr * dir_attr ; s#nfs4_change_info cinfo ; } 
s#nfs_unlinkdata struct nfs_unlinkdata { s#hlist_node list ; s#nfs_removeargs args ; s#nfs_removeres res ; s#inode * dir ; s#rpc_cred * cred ; s#nfs_fattr dir_attr ; } 
s#nfs_renameargs struct nfs_renameargs { s#nfs4_sequence_args seq_args ; const s#nfs_fh * old_dir ; const s#nfs_fh * new_dir ; const s#qstr * old_name ; const s#qstr * new_name ; } 
s#nfs_renameres struct nfs_renameres { s#nfs4_sequence_res seq_res ; const s#nfs_server * server ; s#nfs4_change_info old_cinfo ; s#nfs_fattr * old_fattr ; s#nfs4_change_info new_cinfo ; s#nfs_fattr * new_fattr ; } 
s#nfs_renamedata struct nfs_renamedata { s#nfs_renameargs args ; s#nfs_renameres res ; s#rpc_cred * cred ; s#inode * old_dir ; s#dentry * old_dentry ; s#nfs_fattr old_fattr ; s#inode * new_dir ; s#dentry * new_dentry ; s#nfs_fattr new_fattr ; } 
s#nfs_fsstat struct nfs_fsstat { s#nfs_fattr * fattr ; t#__u64 tbytes ; t#__u64 fbytes ; t#__u64 abytes ; t#__u64 tfiles ; t#__u64 ffiles ; t#__u64 afiles ; } 
s#nfs_pathconf struct nfs_pathconf { s#nfs_fattr * fattr ; t#__u32 max_link ; t#__u32 max_namelen ; } 
s#nfs_entry struct nfs_entry { t#__u64 ino ; t#__u64 cookie , prev_cookie ; const char * name ; unsigned int len ; int eof ; s#nfs_fh * fh ; s#nfs_fattr * fattr ; s#nfs4_label * label ; unsigned char d_type ; s#nfs_server * server ; } 
s#nfs_lockowner struct nfs_lockowner { t#fl_owner_t l_owner ; t#pid_t l_pid ; } 
s#nfs_io_counter struct nfs_io_counter { unsigned long flags ; t#atomic_t io_count ; } 
s#nfs_lock_context struct nfs_lock_context { t#atomic_t count ; s#list_head list ; s#nfs_open_context * open_context ; s#nfs_lockowner lockowner ; s#nfs_io_counter io_count ; } 
s#nfs_open_context struct nfs_open_context { s#nfs_lock_context lock_context ; s#dentry * dentry ; s#rpc_cred * cred ; s#nfs4_state * state ; t#fmode_t mode ; unsigned long flags ; int error ; s#list_head list ; s#nfs4_threshold * mdsthreshold ; } 
s#nfs_write_verifier struct nfs_write_verifier { char data [ 8 ] ; } 
s#nfs_page struct nfs_page { s#list_head wb_list ; s#page * wb_page ; s#nfs_open_context * wb_context ; s#nfs_lock_context * wb_lock_context ; unsigned long wb_index ; unsigned int wb_offset , wb_pgbase , wb_bytes ; s#kref wb_kref ; unsigned long wb_flags ; s#nfs_write_verifier wb_verf ; } 
e#nfs3_stable_how enum nfs3_stable_how { NFS_UNSTABLE = 0 , NFS_DATA_SYNC = 1 , NFS_FILE_SYNC = 2 } 
s#nfs_writeverf struct nfs_writeverf { s#nfs_write_verifier verifier ; e#nfs3_stable_how committed ; } 
s#pnfs_layout_range struct pnfs_layout_range { t#u32 iomode ; t#u64 offset ; t#u64 length ; } 
s#nfs_stateid4 struct nfs_stateid4 { t#__be32 seqid ; char other [ 12 ] ; } 
t#nfs4_stateid typedef s#nfs_stateid4 nfs4_stateid 
s#pnfs_layout_hdr struct pnfs_layout_hdr { t#atomic_t plh_refcount ; s#list_head plh_layouts ; s#list_head plh_bulk_destroy ; s#list_head plh_segs ; t#nfs4_stateid plh_stateid ; t#atomic_t plh_outstanding ; unsigned long plh_block_lgets ; t#u32 plh_barrier ; unsigned long plh_retry_timestamp ; unsigned long plh_flags ; t#loff_t plh_lwb ; s#rpc_cred * plh_lc_cred ; s#inode * plh_inode ; } 
s#pnfs_layout_segment struct pnfs_layout_segment { s#list_head pls_list ; s#list_head pls_lc_list ; s#pnfs_layout_range pls_range ; t#atomic_t pls_refcount ; unsigned long pls_flags ; s#pnfs_layout_hdr * pls_layout ; } 
s#nfs_pgio_completion_ops struct nfs_pgio_completion_ops { void ( * error_cleanup ) ( s#list_head * ) ; void ( * init_hdr ) ( s#nfs_pgio_header * ) ; void ( * completion ) ( s#nfs_pgio_header * ) ; } 
s##nfs_direct_req
s#nfs_pgio_header struct nfs_pgio_header { s#inode * inode ; s#rpc_cred * cred ; s#list_head pages ; s#list_head rpc_list ; t#atomic_t refcnt ; s#nfs_page * req ; s#nfs_writeverf * verf ; s#pnfs_layout_segment * lseg ; t#loff_t io_start ; const s#rpc_call_ops * mds_ops ; void ( * release ) ( s#nfs_pgio_header * ) ; const s#nfs_pgio_completion_ops * completion_ops ; s#nfs_direct_req * dreq ; void * layout_private ; t#spinlock_t lock ; int pnfs_error ; int error ; unsigned long good_bytes ; unsigned long flags ; } 
s#nfs_readargs struct nfs_readargs { s#nfs4_sequence_args seq_args ; s#nfs_fh * fh ; s#nfs_open_context * context ; s#nfs_lock_context * lock_context ; t#nfs4_stateid stateid ; t#__u64 offset ; t#__u32 count ; unsigned int pgbase ; s#page * * pages ; } 
s#nfs_readres struct nfs_readres { s#nfs4_sequence_res seq_res ; s#nfs_fattr * fattr ; t#__u32 count ; int eof ; } 
s#nfs_page_array struct nfs_page_array { s#page * * pagevec ; unsigned int npages ; s#page * page_array [ ( 8U ) ] ; } 
s#nfs_read_data struct nfs_read_data { s#nfs_pgio_header * header ; s#list_head list ; s#rpc_task task ; s#nfs_fattr fattr ; s#nfs_readargs args ; s#nfs_readres res ; unsigned long timestamp ; int ( * read_done_cb ) ( s#rpc_task * , s#nfs_read_data * ) ; t#__u64 mds_offset ; s#nfs_page_array pages ; s#nfs_client * ds_clp ; } 
s#nfs_pageio_ops struct nfs_pageio_ops { void ( * pg_init ) ( s#nfs_pageio_descriptor * , s#nfs_page * ) ; t#bool ( * pg_test ) ( s#nfs_pageio_descriptor * , s#nfs_page * , s#nfs_page * ) ; int ( * pg_doio ) ( s#nfs_pageio_descriptor * ) ; } 
s#nfs_pageio_descriptor struct nfs_pageio_descriptor { s#list_head pg_list ; unsigned long pg_bytes_written ; t#size_t pg_count ; t#size_t pg_bsize ; unsigned int pg_base ; unsigned char pg_moreio : 1 , pg_recoalesce : 1 ; s#inode * pg_inode ; const s#nfs_pageio_ops * pg_ops ; int pg_ioflags ; int pg_error ; const s#rpc_call_ops * pg_rpc_callops ; const s#nfs_pgio_completion_ops * pg_completion_ops ; s#pnfs_layout_segment * pg_lseg ; s#nfs_direct_req * pg_dreq ; void * pg_layout_private ; } 
s#nfs_writeargs struct nfs_writeargs { s#nfs4_sequence_args seq_args ; s#nfs_fh * fh ; s#nfs_open_context * context ; s#nfs_lock_context * lock_context ; t#nfs4_stateid stateid ; t#__u64 offset ; t#__u32 count ; e#nfs3_stable_how stable ; unsigned int pgbase ; s#page * * pages ; const t#u32 * bitmask ; } 
s#nfs_writeres struct nfs_writeres { s#nfs4_sequence_res seq_res ; s#nfs_fattr * fattr ; s#nfs_writeverf * verf ; t#__u32 count ; const s#nfs_server * server ; } 
s#nfs_write_data struct nfs_write_data { s#nfs_pgio_header * header ; s#list_head list ; s#rpc_task task ; s#nfs_fattr fattr ; s#nfs_writeverf verf ; s#nfs_writeargs args ; s#nfs_writeres res ; unsigned long timestamp ; int ( * write_done_cb ) ( s#rpc_task * , s#nfs_write_data * ) ; t#__u64 mds_offset ; s#nfs_page_array pages ; s#nfs_client * ds_clp ; } 
s#nfs_commitargs struct nfs_commitargs { s#nfs4_sequence_args seq_args ; s#nfs_fh * fh ; t#__u64 offset ; t#__u32 count ; const t#u32 * bitmask ; } 
s#nfs_commitres struct nfs_commitres { s#nfs4_sequence_res seq_res ; s#nfs_fattr * fattr ; s#nfs_writeverf * verf ; const s#nfs_server * server ; } 
s#nfs_mds_commit_info struct nfs_mds_commit_info { t#atomic_t rpcs_out ; unsigned long ncommit ; s#list_head list ; } 
s##nfs4_cached_acl
s#nfs_delegation struct nfs_delegation { s#list_head super_list ; s#rpc_cred * cred ; s#inode * inode ; t#nfs4_stateid stateid ; t#fmode_t type ; t#loff_t maxsize ; t#__u64 change_attr ; unsigned long flags ; t#spinlock_t lock ; s#callback_head rcu ; } 
s##fscache_cookie
s#nfs_inode struct nfs_inode { t#__u64 fileid ; s#nfs_fh fh ; unsigned long flags ; unsigned long cache_validity ; unsigned long read_cache_jiffies ; unsigned long attrtimeo ; unsigned long attrtimeo_timestamp ; unsigned long attr_gencount ; unsigned long cache_change_attribute ; s#rb_root access_cache ; s#list_head access_cache_entry_lru ; s#list_head access_cache_inode_lru ; s#posix_acl * acl_access ; s#posix_acl * acl_default ; t#__be32 cookieverf [ 2 ] ; unsigned long npages ; s#nfs_mds_commit_info commit_info ; s#list_head open_files ; t#atomic_t silly_count ; s#hlist_head silly_list ; t#wait_queue_head_t waitqueue ; s#nfs4_cached_acl * nfs4_acl ; s#list_head open_states ; s#nfs_delegation * delegation ; t#fmode_t delegation_state ; s#rw_semaphore rwsem ; s#pnfs_layout_hdr * layout ; t#__u64 write_io ; t#__u64 read_io ; s#fscache_cookie * fscache ; s#inode vfs_inode ; } 
s#nfs_commit_completion_ops struct nfs_commit_completion_ops { void ( * error_cleanup ) ( s#nfs_inode * ) ; void ( * completion ) ( s#nfs_commit_data * ) ; } 
s#nfs_commit_data struct nfs_commit_data { s#rpc_task task ; s#inode * inode ; s#rpc_cred * cred ; s#nfs_fattr fattr ; s#nfs_writeverf verf ; s#list_head pages ; s#list_head list ; s#nfs_direct_req * dreq ; s#nfs_commitargs args ; s#nfs_commitres res ; s#nfs_open_context * context ; s#pnfs_layout_segment * lseg ; s#nfs_client * ds_clp ; int ds_commit_index ; const s#rpc_call_ops * mds_ops ; const s#nfs_commit_completion_ops * completion_ops ; int ( * commit_done_cb ) ( s#rpc_task * , s#nfs_commit_data * ) ; } 
s#nfs_client_initdata struct nfs_client_initdata { unsigned long init_flags ; const char * hostname ; const s#sockaddr * addr ; t#size_t addrlen ; s#nfs_subversion * nfs_mod ; int proto ; t#u32 minorversion ; s#net * net ; unsigned int xprt_id ; } 
s#nfs_rpc_ops struct nfs_rpc_ops { t#u32 version ; const s#dentry_operations * dentry_ops ; const s#inode_operations * dir_inode_ops ; const s#inode_operations * file_inode_ops ; const s#file_operations * file_ops ; int ( * getroot ) ( s#nfs_server * , s#nfs_fh * , s#nfs_fsinfo * ) ; s#vfsmount * ( * submount ) ( s#nfs_server * , s#dentry * , s#nfs_fh * , s#nfs_fattr * ) ; s#dentry * ( * try_mount ) ( int , const char * , s#nfs_mount_info * , s#nfs_subversion * ) ; int ( * getattr ) ( s#nfs_server * , s#nfs_fh * , s#nfs_fattr * , s#nfs4_label * ) ; int ( * setattr ) ( s#dentry * , s#nfs_fattr * , s#iattr * ) ; int ( * lookup ) ( s#inode * , s#qstr * , s#nfs_fh * , s#nfs_fattr * , s#nfs4_label * ) ; int ( * access ) ( s#inode * , s#nfs_access_entry * ) ; int ( * readlink ) ( s#inode * , s#page * , unsigned int , unsigned int ) ; int ( * create ) ( s#inode * , s#dentry * , s#iattr * , int ) ; int ( * remove ) ( s#inode * , s#qstr * ) ; void ( * unlink_setup ) ( s#rpc_message * , s#inode * ) ; void ( * unlink_rpc_prepare ) ( s#rpc_task * , s#nfs_unlinkdata * ) ; int ( * unlink_done ) ( s#rpc_task * , s#inode * ) ; int ( * rename ) ( s#inode * , s#qstr * , s#inode * , s#qstr * ) ; void ( * rename_setup ) ( s#rpc_message * , s#inode * ) ; void ( * rename_rpc_prepare ) ( s#rpc_task * , s#nfs_renamedata * ) ; int ( * rename_done ) ( s#rpc_task * , s#inode * , s#inode * ) ; int ( * link ) ( s#inode * , s#inode * , s#qstr * ) ; int ( * symlink ) ( s#inode * , s#dentry * , s#page * , unsigned int , s#iattr * ) ; int ( * mkdir ) ( s#inode * , s#dentry * , s#iattr * ) ; int ( * rmdir ) ( s#inode * , s#qstr * ) ; int ( * readdir ) ( s#dentry * , s#rpc_cred * , t#u64 , s#page * * , unsigned int , int ) ; int ( * mknod ) ( s#inode * , s#dentry * , s#iattr * , t#dev_t ) ; int ( * statfs ) ( s#nfs_server * , s#nfs_fh * , s#nfs_fsstat * ) ; int ( * fsinfo ) ( s#nfs_server * , s#nfs_fh * , s#nfs_fsinfo * ) ; int ( * pathconf ) ( s#nfs_server * , s#nfs_fh * , s#nfs_pathconf * ) ; int ( * set_capabilities ) ( s#nfs_server * , s#nfs_fh * ) ; int ( * decode_dirent ) ( s#xdr_stream * , s#nfs_entry * , int ) ; void ( * read_setup ) ( s#nfs_read_data * , s#rpc_message * ) ; void ( * read_pageio_init ) ( s#nfs_pageio_descriptor * , s#inode * , const s#nfs_pgio_completion_ops * ) ; int ( * read_rpc_prepare ) ( s#rpc_task * , s#nfs_read_data * ) ; int ( * read_done ) ( s#rpc_task * , s#nfs_read_data * ) ; void ( * write_setup ) ( s#nfs_write_data * , s#rpc_message * ) ; void ( * write_pageio_init ) ( s#nfs_pageio_descriptor * , s#inode * , int , const s#nfs_pgio_completion_ops * ) ; int ( * write_rpc_prepare ) ( s#rpc_task * , s#nfs_write_data * ) ; int ( * write_done ) ( s#rpc_task * , s#nfs_write_data * ) ; void ( * commit_setup ) ( s#nfs_commit_data * , s#rpc_message * ) ; void ( * commit_rpc_prepare ) ( s#rpc_task * , s#nfs_commit_data * ) ; int ( * commit_done ) ( s#rpc_task * , s#nfs_commit_data * ) ; int ( * lock ) ( s#file * , int , s#file_lock * ) ; int ( * lock_check_bounds ) ( const s#file_lock * ) ; void ( * clear_acl_cache ) ( s#inode * ) ; void ( * close_context ) ( s#nfs_open_context * , int ) ; s#inode * ( * open_context ) ( s#inode * , s#nfs_open_context * , int , s#iattr * , int * ) ; int ( * have_delegation ) ( s#inode * , t#fmode_t ) ; int ( * return_delegation ) ( s#inode * ) ; s#nfs_client * ( * alloc_client ) ( const s#nfs_client_initdata * ) ; s#nfs_client * ( * init_client ) ( s#nfs_client * , const s#rpc_timeout * , const char * ) ; void ( * free_client ) ( s#nfs_client * ) ; s#nfs_server * ( * create_server ) ( s#nfs_mount_info * , s#nfs_subversion * ) ; s#nfs_server * ( * clone_server ) ( s#nfs_server * , s#nfs_fh * , s#nfs_fattr * , t#rpc_authflavor_t ) ; } 
t#nfs4_verifier typedef struct { char data [ 8 ] ; } nfs4_verifier 
s##idmap
s#nfs4_state_recovery_ops struct nfs4_state_recovery_ops { int owner_flag_bit ; int state_flag_bit ; int ( * recover_open ) ( s#nfs4_state_owner * , s#nfs4_state * ) ; int ( * recover_lock ) ( s#nfs4_state * , s#file_lock * ) ; int ( * establish_clid ) ( s#nfs_client * , s#rpc_cred * ) ; int ( * reclaim_complete ) ( s#nfs_client * , s#rpc_cred * ) ; int ( * detect_trunking ) ( s#nfs_client * , s#nfs_client * * , s#rpc_cred * ) ; } 
s#nfs4_state_maintenance_ops struct nfs4_state_maintenance_ops { int ( * sched_state_renewal ) ( s#nfs_client * , s#rpc_cred * , unsigned ) ; s#rpc_cred * ( * get_state_renewal_cred_locked ) ( s#nfs_client * ) ; int ( * renew_lease ) ( s#nfs_client * , s#rpc_cred * ) ; } 
s#nfs4_minor_version_ops struct nfs4_minor_version_ops { t#u32 minor_version ; unsigned init_caps ; int ( * init_client ) ( s#nfs_client * ) ; void ( * shutdown_client ) ( s#nfs_client * ) ; t#bool ( * match_stateid ) ( const t#nfs4_stateid * , const t#nfs4_stateid * ) ; int ( * find_root_sec ) ( s#nfs_server * , s#nfs_fh * , s#nfs_fsinfo * ) ; int ( * free_lock_state ) ( s#nfs_server * , s#nfs4_lock_state * ) ; const s#rpc_call_ops * call_sync_ops ; const s#nfs4_state_recovery_ops * reboot_recovery_ops ; const s#nfs4_state_recovery_ops * nograce_recovery_ops ; const s#nfs4_state_maintenance_ops * state_renewal_ops ; } 
s##nfs4_slot_table
s##nfs4_session
s#nfs41_server_owner struct nfs41_server_owner { t#uint64_t minor_id ; t#uint32_t major_id_sz ; char major_id [ 1024 ] ; } 
s#nfs41_server_scope struct nfs41_server_scope { t#uint32_t server_scope_sz ; char server_scope [ 1024 ] ; } 
s#nfstime4 struct nfstime4 { t#u64 seconds ; t#u32 nseconds ; } 
s#nfs41_impl_id struct nfs41_impl_id { char domain [ 1024 + 1 ] ; char name [ 1024 + 1 ] ; s#nfstime4 date ; } 
s#nfs_client struct nfs_client { t#atomic_t cl_count ; t#atomic_t cl_mds_count ; int cl_cons_state ; unsigned long cl_res_state ; unsigned long cl_flags ; s#__kernel_sockaddr_storage cl_addr ; t#size_t cl_addrlen ; char * cl_hostname ; s#list_head cl_share_link ; s#list_head cl_superblocks ; s#rpc_clnt * cl_rpcclient ; const s#nfs_rpc_ops * rpc_ops ; int cl_proto ; s#nfs_subversion * cl_nfs_mod ; t#u32 cl_minorversion ; s#rpc_cred * cl_machine_cred ; unsigned int cl_xprt_id ; s#list_head cl_ds_clients ; t#u64 cl_clientid ; t#nfs4_verifier cl_confirm ; unsigned long cl_state ; t#spinlock_t cl_lock ; unsigned long cl_lease_time ; unsigned long cl_last_renewal ; s#delayed_work cl_renewd ; s#rpc_wait_queue cl_rpcwaitq ; s#idmap * cl_idmap ; char cl_ipaddr [ 48 ] ; t#u32 cl_cb_ident ; const s#nfs4_minor_version_ops * cl_mvops ; s#nfs4_slot_table * cl_slot_tbl ; t#u32 cl_seqid ; t#u32 cl_exchange_flags ; s#nfs4_session * cl_session ; t#bool cl_preserve_clid ; s#nfs41_server_owner * cl_serverowner ; s#nfs41_server_scope * cl_serverscope ; s#nfs41_impl_id * cl_implid ; unsigned long cl_sp4_flags ; s#fscache_cookie * fscache ; s#net * cl_net ; } 
s##nlm_host
E#__NFSIOS_BYTESMAX ( 0 ) + 8 
E#__NFSIOS_FSCACHEMAX 5 
E#__NFSIOS_COUNTSMAX ( 0 ) + 27 
s#nfs_iostats struct nfs_iostats { unsigned long long bytes [ E#__NFSIOS_BYTESMAX ] ; unsigned long long fscache [ E#__NFSIOS_FSCACHEMAX ] ; unsigned long events [ E#__NFSIOS_COUNTSMAX ] ; } 
s#nfs_fscache_key struct nfs_fscache_key { s#rb_node node ; s#nfs_client * nfs_client ; struct { struct { unsigned long s_flags ; } super ; struct { s#nfs_fsid fsid ; int flags ; unsigned int rsize ; unsigned int wsize ; unsigned int acregmin ; unsigned int acregmax ; unsigned int acdirmin ; unsigned int acdirmax ; } nfs_server ; struct { t#rpc_authflavor_t au_flavor ; } rpc_auth ; t#u8 uniq_len ; char uniquifier [ 0 ] ; } key ; } 
s#nfs4_layoutdriver_data struct nfs4_layoutdriver_data { s#page * * pages ; t#__u32 pglen ; t#__u32 len ; } 
s#nfs4_layoutget_res struct nfs4_layoutget_res { s#nfs4_sequence_res seq_res ; t#__u32 return_on_close ; s#pnfs_layout_range range ; t#__u32 type ; t#nfs4_stateid stateid ; s#nfs4_layoutdriver_data * layoutp ; } 
s#pnfs_commit_bucket struct pnfs_commit_bucket { s#list_head written ; s#list_head committing ; s#pnfs_layout_segment * wlseg ; s#pnfs_layout_segment * clseg ; } 
s#pnfs_ds_commit_info struct pnfs_ds_commit_info { int nwritten ; int ncommitting ; int nbuckets ; s#pnfs_commit_bucket * buckets ; } 
s#nfs_commit_info struct nfs_commit_info { t#spinlock_t * lock ; s#nfs_mds_commit_info * mds ; s#pnfs_ds_commit_info * ds ; s#nfs_direct_req * dreq ; const s#nfs_commit_completion_ops * completion_ops ; } 
e#pnfs_try_status enum pnfs_try_status { PNFS_ATTEMPTED = 0 , PNFS_NOT_ATTEMPTED = 1 , } 
s#nfs4_deviceid struct nfs4_deviceid { char data [ 16 ] ; } 
s#nfs4_deviceid_node struct nfs4_deviceid_node { s#hlist_node node ; s#hlist_node tmpnode ; const s#pnfs_layoutdriver_type * ld ; const s#nfs_client * nfs_client ; unsigned long flags ; unsigned long timestamp_unavailable ; s#nfs4_deviceid deviceid ; t#atomic_t ref ; } 
s#nfs4_layoutreturn_args struct nfs4_layoutreturn_args { s#nfs4_sequence_args seq_args ; s#pnfs_layout_hdr * layout ; s#inode * inode ; t#nfs4_stateid stateid ; t#__u32 layout_type ; } 
s#nfs4_layoutcommit_args struct nfs4_layoutcommit_args { s#nfs4_sequence_args seq_args ; t#nfs4_stateid stateid ; t#__u64 lastbytewritten ; s#inode * inode ; const t#u32 * bitmask ; } 
s#nfs4_layoutcommit_res struct nfs4_layoutcommit_res { s#nfs4_sequence_res seq_res ; s#nfs_fattr * fattr ; const s#nfs_server * server ; int status ; } 
s#nfs4_layoutcommit_data struct nfs4_layoutcommit_data { s#rpc_task task ; s#nfs_fattr fattr ; s#list_head lseg_list ; s#rpc_cred * cred ; s#nfs4_layoutcommit_args args ; s#nfs4_layoutcommit_res res ; } 
s#pnfs_layoutdriver_type struct pnfs_layoutdriver_type { s#list_head pnfs_tblid ; const t#u32 id ; const char * name ; s#module * owner ; unsigned flags ; int ( * set_layoutdriver ) ( s#nfs_server * , const s#nfs_fh * ) ; int ( * clear_layoutdriver ) ( s#nfs_server * ) ; s#pnfs_layout_hdr * ( * alloc_layout_hdr ) ( s#inode * , t#gfp_t ) ; void ( * free_layout_hdr ) ( s#pnfs_layout_hdr * ) ; s#pnfs_layout_segment * ( * alloc_lseg ) ( s#pnfs_layout_hdr * , s#nfs4_layoutget_res * , t#gfp_t ) ; void ( * free_lseg ) ( s#pnfs_layout_segment * ) ; const s#nfs_pageio_ops * pg_read_ops ; const s#nfs_pageio_ops * pg_write_ops ; s#pnfs_ds_commit_info * ( * get_ds_info ) ( s#inode * ) ; void ( * mark_request_commit ) ( s#nfs_page * , s#pnfs_layout_segment * , s#nfs_commit_info * ) ; void ( * clear_request_commit ) ( s#nfs_page * , s#nfs_commit_info * ) ; int ( * scan_commit_lists ) ( s#nfs_commit_info * , int ) ; void ( * recover_commit_reqs ) ( s#list_head * , s#nfs_commit_info * ) ; int ( * commit_pagelist ) ( s#inode * , s#list_head * , int , s#nfs_commit_info * ) ; e#pnfs_try_status ( * read_pagelist ) ( s#nfs_read_data * ) ; e#pnfs_try_status ( * write_pagelist ) ( s#nfs_write_data * , int ) ; void ( * free_deviceid_node ) ( s#nfs4_deviceid_node * ) ; void ( * encode_layoutreturn ) ( s#pnfs_layout_hdr * , s#xdr_stream * , const s#nfs4_layoutreturn_args * ) ; void ( * cleanup_layoutcommit ) ( s#nfs4_layoutcommit_data * ) ; void ( * encode_layoutcommit ) ( s#pnfs_layout_hdr * , s#xdr_stream * , const s#nfs4_layoutcommit_args * ) ; } 
s#ida_bitmap struct ida_bitmap { long nr_busy ; unsigned long bitmap [ ( 128 / sizeof ( long ) - 1 ) ] ; } 
s#ida struct ida { s#idr idr ; s#ida_bitmap * free_bitmap ; } 
s#nfs_server struct nfs_server { s#nfs_client * nfs_client ; s#list_head client_link ; s#list_head master_link ; s#rpc_clnt * client ; s#rpc_clnt * client_acl ; s#nlm_host * nlm_host ; s#nfs_iostats * io_stats ; s#backing_dev_info backing_dev_info ; t#atomic_long_t writeback ; int flags ; unsigned int caps ; unsigned int rsize ; unsigned int rpages ; unsigned int wsize ; unsigned int wpages ; unsigned int wtmult ; unsigned int dtsize ; unsigned short port ; unsigned int bsize ; unsigned int acregmin ; unsigned int acregmax ; unsigned int acdirmin ; unsigned int acdirmax ; unsigned int namelen ; unsigned int options ; s#nfs_fsid fsid ; t#__u64 maxfilesize ; s#timespec time_delta ; unsigned long mount_time ; t#dev_t s_dev ; s#nfs_auth_info auth_info ; s#nfs_fscache_key * fscache_key ; s#fscache_cookie * fscache ; t#u32 pnfs_blksize ; t#u32 attr_bitmask [ 3 ] ; t#u32 attr_bitmask_nl [ 3 ] ; t#u32 cache_consistency_bitmask [ 3 ] ; t#u32 acl_bitmask ; t#u32 fh_expire_type ; s#pnfs_layoutdriver_type * pnfs_curr_ld ; s#rpc_wait_queue roc_rpcwaitq ; void * pnfs_ld_data ; s#rb_root state_owners ; s#ida openowner_id ; s#ida lockowner_id ; s#list_head state_owners_lru ; s#list_head layouts ; s#list_head delegations ; void ( * destroy ) ( s#nfs_server * ) ; t#atomic_t active ; s#__kernel_sockaddr_storage mountd_address ; t#size_t mountd_addrlen ; t#u32 mountd_version ; unsigned short mountd_port ; unsigned short mountd_protocol ; } 
s#nfs_seqid_counter struct nfs_seqid_counter { t#ktime_t create_time ; int owner_id ; int flags ; t#u32 counter ; t#spinlock_t lock ; s#list_head list ; s#rpc_wait_queue wait ; } 
s#nfs4_state_owner struct nfs4_state_owner { s#nfs_server * so_server ; s#list_head so_lru ; unsigned long so_expires ; s#rb_node so_server_node ; s#rpc_cred * so_cred ; t#spinlock_t so_lock ; t#atomic_t so_count ; unsigned long so_flags ; s#list_head so_states ; s#nfs_seqid_counter so_seqid ; t#seqcount_t so_reclaim_seqcount ; s#mutex so_delegreturn_mutex ; } 
s#nfs4_state struct nfs4_state { s#list_head open_states ; s#list_head inode_states ; s#list_head lock_states ; s#nfs4_state_owner * owner ; s#inode * inode ; unsigned long flags ; t#spinlock_t state_lock ; t#seqlock_t seqlock ; t#nfs4_stateid stateid ; t#nfs4_stateid open_stateid ; unsigned int n_rdonly ; unsigned int n_wronly ; unsigned int n_rdwr ; t#fmode_t state ; t#atomic_t count ; } 
s#nfs4_lock_owner struct nfs4_lock_owner { unsigned int lo_type ; union { t#fl_owner_t posix_owner ; t#pid_t flock_owner ; } lo_u ; } 
s#nfs4_lock_state struct nfs4_lock_state { s#list_head ls_locks ; s#nfs4_state * ls_state ; unsigned long ls_flags ; s#nfs_seqid_counter ls_seqid ; t#nfs4_stateid ls_stateid ; t#atomic_t ls_count ; s#nfs4_lock_owner ls_owner ; } 
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s#nfs_subversion struct nfs_subversion { s#module * owner ; s#file_system_type * nfs_fs ; const s#rpc_version * rpc_vers ; const s#nfs_rpc_ops * rpc_ops ; const s#super_operations * sops ; const s#xattr_handler * * xattr ; s#list_head list ; } 
register_nfs_version void register_nfs_version ( s#nfs_subversion * ) 
unregister_nfs_version void unregister_nfs_version ( s#nfs_subversion * ) 
nfs_alloc_client extern s#nfs_client * nfs_alloc_client ( const s#nfs_client_initdata * ) 
nfs_free_client extern void nfs_free_client ( s#nfs_client * ) 
nfs_put_client extern void nfs_put_client ( s#nfs_client * ) 
nfs_sockaddr_match_ipaddr int nfs_sockaddr_match_ipaddr ( const s#sockaddr * , const s#sockaddr * ) 
nfs_wait_client_init_complete extern int nfs_wait_client_init_complete ( const s#nfs_client * ) 
nfs_get_client s#nfs_client * nfs_get_client ( const s#nfs_client_initdata * , const s#rpc_timeout * , const char * , t#rpc_authflavor_t ) 
nfs_mark_client_ready extern void nfs_mark_client_ready ( s#nfs_client * , int ) 
nfs_init_timeout_values void nfs_init_timeout_values ( s#rpc_timeout * , int , unsigned int , unsigned int ) 
nfs_create_rpc_client int nfs_create_rpc_client ( s#nfs_client * , const s#rpc_timeout * , t#rpc_authflavor_t ) 
nfs_init_server_rpcclient int nfs_init_server_rpcclient ( s#nfs_server * , const s#rpc_timeout * , t#rpc_authflavor_t ) 
nfs_init_client extern s#nfs_client * nfs_init_client ( s#nfs_client * , const s#rpc_timeout * , const char * ) 
nfs_probe_fsinfo int nfs_probe_fsinfo ( s#nfs_server * , s#nfs_fh * , s#nfs_fattr * ) 
nfs_server_copy_userdata void nfs_server_copy_userdata ( s#nfs_server * , s#nfs_server * ) 
nfs_server_insert_lists void nfs_server_insert_lists ( s#nfs_server * ) 
nfs_alloc_server s#nfs_server * nfs_alloc_server ( void ) 
nfs_free_server extern void nfs_free_server ( s#nfs_server * ) 
nfs_create_server extern s#nfs_server * nfs_create_server ( s#nfs_mount_info * , s#nfs_subversion * ) 
nfs_clone_server extern s#nfs_server * nfs_clone_server ( s#nfs_server * , s#nfs_fh * , s#nfs_fattr * , t#rpc_authflavor_t ) 

/* fs/nfs/delegation.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##radix_tree_node
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##rpc_cred_cache
s##svc_xprt
s##svc_serv
s##rpc_iostats
s##nfs_subversion
s##nfs4_slot
s##nfs_page
s##pnfs_layout_segment
s##nfs_direct_req
s##nfs_pageio_descriptor
s##nfs4_cached_acl
s##pnfs_layout_hdr
s##fscache_cookie
s##idmap
s##nfs4_slot_table
s##nfs4_session
s##nlm_host
s##nfs_iostats
s##nfs_fscache_key
s##pnfs_layoutdriver_type
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
nfs_remove_bad_delegation void nfs_remove_bad_delegation ( s#inode * ) 

/* fs/nfs/dir.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##radix_tree_node
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##rpc_cred_cache
s##svc_xprt
s##svc_serv
s##rpc_iostats
s##nfs_subversion
s##nfs4_slot
s##nfs_page
s##pnfs_layout_segment
s##nfs_direct_req
s##nfs_pageio_descriptor
s##nfs4_cached_acl
s##pnfs_layout_hdr
s##fscache_cookie
s##idmap
s##nfs4_slot_table
s##nfs4_session
s##nlm_host
s##pnfs_layoutdriver_type
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##mtd_info
s##cdev
nfs_force_lookup_revalidate extern void nfs_force_lookup_revalidate ( s#inode * ) 
nfs_dentry_operations extern const s#dentry_operations nfs_dentry_operations 
nfs_lookup s#dentry * nfs_lookup ( s#inode * , s#dentry * , unsigned int ) 
nfs4_dentry_operations extern const s#dentry_operations nfs4_dentry_operations 
nfs_atomic_open int nfs_atomic_open ( s#inode * , s#dentry * , s#file * , unsigned , t#umode_t , int * ) 
nfs_instantiate extern int nfs_instantiate ( s#dentry * , s#nfs_fh * , s#nfs_fattr * , s#nfs4_label * ) 
nfs_create int nfs_create ( s#inode * , s#dentry * , t#umode_t , t#bool ) 
nfs_mknod int nfs_mknod ( s#inode * , s#dentry * , t#umode_t , t#dev_t ) 
nfs_mkdir int nfs_mkdir ( s#inode * , s#dentry * , t#umode_t ) 
nfs_rmdir int nfs_rmdir ( s#inode * , s#dentry * ) 
nfs_unlink int nfs_unlink ( s#inode * , s#dentry * ) 
nfs_symlink int nfs_symlink ( s#inode * , s#dentry * , const char * ) 
nfs_link int nfs_link ( s#dentry * , s#inode * , s#dentry * ) 
nfs_rename int nfs_rename ( s#inode * , s#dentry * , s#inode * , s#dentry * ) 
nfs_access_zap_cache extern void nfs_access_zap_cache ( s#inode * ) 
nfs_access_add_cache extern void nfs_access_add_cache ( s#inode * , s#nfs_access_entry * ) 
nfs_access_set_mask extern void nfs_access_set_mask ( s#nfs_access_entry * , t#u32 ) 
nfs_may_open extern int nfs_may_open ( s#inode * , s#rpc_cred * , int ) 
nfs_permission extern int nfs_permission ( s#inode * , int ) 

/* fs/nfs/direct.o */
s##nfs_direct_req
nfs_dreq_bytes_left extern t#ssize_t nfs_dreq_bytes_left ( s#nfs_direct_req * ) 

/* fs/nfs/file.o */
nfs_check_flags int nfs_check_flags ( int ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##radix_tree_node
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##rpc_cred_cache
s##svc_xprt
s##svc_serv
s##rpc_iostats
s##nfs_subversion
s##nfs4_slot
s##nfs_page
s##pnfs_layout_segment
s##nfs_direct_req
s##nfs_pageio_descriptor
s##nfs4_cached_acl
s##pnfs_layout_hdr
s##fscache_cookie
s##idmap
s##nfs4_slot_table
s##nfs4_session
s##nlm_host
s##pnfs_layoutdriver_type
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
nfs_file_release int nfs_file_release ( s#inode * , s#file * ) 
nfs_file_llseek t#loff_t nfs_file_llseek ( s#file * , t#loff_t , int ) 
nfs_file_flush int nfs_file_flush ( s#file * , t#fl_owner_t ) 
nfs_file_read t#ssize_t nfs_file_read ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t ) 
nfs_file_splice_read t#ssize_t nfs_file_splice_read ( s#file * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) 
nfs_file_mmap int nfs_file_mmap ( s#file * , s#vm_area_struct * ) 
nfs_file_fsync_commit int nfs_file_fsync_commit ( s#file * , t#loff_t , t#loff_t , int ) 
nfs_file_write t#ssize_t nfs_file_write ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t ) 
nfs_file_splice_write t#ssize_t nfs_file_splice_write ( s#pipe_inode_info * , s#file * , t#loff_t * , t#size_t , unsigned int ) 
nfs_lock int nfs_lock ( s#file * , int , s#file_lock * ) 
nfs_flock int nfs_flock ( s#file * , int , s#file_lock * ) 
nfs_setlease int nfs_setlease ( s#file * , long , s#file_lock * * ) 
nfs_file_operations extern const s#file_operations nfs_file_operations 

/* fs/nfs/fscache.o */
s##module
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##kioctx
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##rpc_cred_cache
s##workqueue_struct
s##tvec_base
s##svc_xprt
s##svc_serv
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##iw_handler_def
s##iw_public_data
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##optimistic_spin_queue
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##kmem_cache_node
s##array_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##dn_route
s##key_user
s##key_type
s##assoc_array_ptr
s##pipe_inode_info
s##mem_cgroup
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##rpc_iostats
s##nfs_subversion
s##nfs4_slot
s##nfs_page
s##pnfs_layout_segment
s##nfs_direct_req
s##nfs_pageio_descriptor
s##nfs4_cached_acl
s##nfs_delegation
s##pnfs_layout_hdr
s##fscache_cookie
s##idmap
s##nfs4_slot_table
s##nfs4_session
s##nlm_host
s##pnfs_layoutdriver_type
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##export_operations
s##mtd_info
s##nameidata
s##cdev
nfs_fscache_set_inode_cookie extern void nfs_fscache_set_inode_cookie ( s#inode * , s#file * ) 

/* fs/nfs/inode.o */
nfs_wait_bit_killable extern int nfs_wait_bit_killable ( void * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##radix_tree_node
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##rpc_cred_cache
s##svc_xprt
s##svc_cacherep
s##nfs4_slot
s##nfs_direct_req
s##nfs4_cached_acl
s##fscache_cookie
s##idmap
s##nfs4_slot_table
s##nfs4_session
s##nlm_host
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##export_operations
s##mtd_info
s##nameidata
s##cdev
nfs_drop_inode extern int nfs_drop_inode ( s#inode * ) 
nfs_clear_inode extern void nfs_clear_inode ( s#inode * ) 
nfs_zap_acl_cache void nfs_zap_acl_cache ( s#inode * ) 
nfs_invalidate_atime extern void nfs_invalidate_atime ( s#inode * ) 
nfs_setsecurity extern void nfs_setsecurity ( s#inode * , s#nfs_fattr * , s#nfs4_label * ) 
nfs_fhget extern s#inode * nfs_fhget ( s#super_block * , s#nfs_fh * , s#nfs_fattr * , s#nfs4_label * ) 
nfs_setattr extern int nfs_setattr ( s#dentry * , s#iattr * ) 
nfs_setattr_update_inode extern void nfs_setattr_update_inode ( s#inode * , s#iattr * ) 
nfs_getattr extern int nfs_getattr ( s#vfsmount * , s#dentry * , s#kstat * ) 
nfs_close_context void nfs_close_context ( s#nfs_open_context * , int ) 
alloc_nfs_open_context extern s#nfs_open_context * alloc_nfs_open_context ( s#dentry * , t#fmode_t ) 
get_nfs_open_context extern s#nfs_open_context * get_nfs_open_context ( s#nfs_open_context * ) 
put_nfs_open_context extern void put_nfs_open_context ( s#nfs_open_context * ) 
nfs_inode_attach_open_context extern void nfs_inode_attach_open_context ( s#nfs_open_context * ) 
nfs_file_set_open_context extern void nfs_file_set_open_context ( s#file * , s#nfs_open_context * ) 
nfs_revalidate_inode extern int nfs_revalidate_inode ( s#nfs_server * , s#inode * ) 
nfs_fattr_init extern void nfs_fattr_init ( s#nfs_fattr * ) 
nfs_alloc_fattr extern s#nfs_fattr * nfs_alloc_fattr ( void ) 
nfs_alloc_fhandle extern s#nfs_fh * nfs_alloc_fhandle ( void ) 
nfs_refresh_inode extern int nfs_refresh_inode ( s#inode * , s#nfs_fattr * ) 
nfs_post_op_update_inode extern int nfs_post_op_update_inode ( s#inode * , s#nfs_fattr * ) 
nfs_post_op_update_inode_force_wcc extern int nfs_post_op_update_inode_force_wcc ( s#inode * , s#nfs_fattr * ) 
nfs_alloc_inode extern s#inode * nfs_alloc_inode ( s#super_block * ) 
nfs_destroy_inode extern void nfs_destroy_inode ( s#inode * ) 
nfsiod_workqueue extern s#workqueue_struct * nfsiod_workqueue 
nfs_net_id extern int nfs_net_id 

/* fs/nfs/namespace.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##radix_tree_node
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##rpc_cred_cache
s##svc_xprt
s##svc_serv
s##rpc_iostats
s##nfs_subversion
s##nfs4_slot
s##nfs_page
s##pnfs_layout_segment
s##nfs_direct_req
s##nfs_pageio_descriptor
s##nfs4_cached_acl
s##nfs_delegation
s##pnfs_layout_hdr
s##fscache_cookie
s##idmap
s##nfs4_slot_table
s##nfs4_session
s##nlm_host
s##nfs_iostats
s##nfs_fscache_key
s##pnfs_layoutdriver_type
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##export_operations
s##mtd_info
s##cdev
nfs_path extern char * nfs_path ( char * * , s#dentry * , char * , t#ssize_t , unsigned ) 
nfs_do_submount s#vfsmount * nfs_do_submount ( s#dentry * , s#nfs_fh * , s#nfs_fattr * , t#rpc_authflavor_t ) 
nfs_submount s#vfsmount * nfs_submount ( s#nfs_server * , s#dentry * , s#nfs_fh * , s#nfs_fattr * ) 

/* fs/nfs/nfs4client.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##nfs_subversion
s##rpc_cred_cache
s#nfs4_sessionid struct nfs4_sessionid { unsigned char data [ 16 ] ; } 
s#nfs4_channel_attrs struct nfs4_channel_attrs { t#u32 max_rqst_sz ; t#u32 max_resp_sz ; t#u32 max_resp_sz_cached ; t#u32 max_ops ; t#u32 max_reqs ; } 
s#nfs4_session struct nfs4_session { s#nfs4_sessionid sess_id ; t#u32 flags ; unsigned long session_state ; t#u32 hash_alg ; t#u32 ssv_len ; s#nfs4_channel_attrs fc_attrs ; s#nfs4_slot_table fc_slot_table ; s#nfs4_channel_attrs bc_attrs ; s#nfs4_slot_table bc_slot_table ; s#nfs_client * clp ; } 
s#nfs4_slot_table struct nfs4_slot_table { s#nfs4_session * session ; s#nfs4_slot * slots ; unsigned long used_slots [ ( ( ( ( 1024U ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; t#spinlock_t slot_tbl_lock ; s#rpc_wait_queue slot_tbl_waitq ; t#u32 max_slots ; t#u32 max_slotid ; t#u32 highest_used_slotid ; t#u32 target_highest_slotid ; t#u32 server_highest_slotid ; t#s32 d_target_highest_slotid ; t#s32 d2_target_highest_slotid ; unsigned long generation ; s#completion complete ; unsigned long slot_tbl_state ; } 
s#nfs4_slot struct nfs4_slot { s#nfs4_slot_table * table ; s#nfs4_slot * next ; unsigned long generation ; t#u32 slot_nr ; t#u32 seq_nr ; unsigned int interrupted : 1 ; } 
s##nfs_direct_req
s##nfs4_cached_acl
s##fscache_cookie
s##idmap
s##nlm_host
s##nfs_iostats
s##nfs_fscache_key
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##slab
s##svc_cacherep
s##rpc_iostats
nfs4_find_or_create_ds_client extern s#rpc_clnt * nfs4_find_or_create_ds_client ( s#nfs_client * , s#inode * ) 
nfs4_set_ds_client extern s#nfs_client * nfs4_set_ds_client ( s#nfs_client * , const s#sockaddr * , int , int , unsigned int , unsigned int ) 

/* fs/nfs/nfs4proc.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##user_namespace
s##proc_dir_entry
s##ipc_namespace
s##mnt_namespace
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##optimistic_spin_queue
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##nfs_subversion
s##rpc_cred_cache
s##nfs_direct_req
s##nfs4_cached_acl
s##fscache_cookie
s##idmap
s##nlm_host
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##mem_cgroup
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##radix_tree_node
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##svc_xprt
s##svc_cacherep
s##rpc_iostats
nfs41_sequence_done extern int nfs41_sequence_done ( s#rpc_task * , s#nfs4_sequence_res * ) 
nfs41_setup_sequence extern int nfs41_setup_sequence ( s#nfs4_session * , s#nfs4_sequence_args * , s#nfs4_sequence_res * , s#rpc_task * ) 
nfs4_set_rw_stateid extern int nfs4_set_rw_stateid ( t#nfs4_stateid * , const s#nfs_open_context * , const s#nfs_lock_context * , t#fmode_t ) 
s#pnfs_devicelist struct pnfs_devicelist { unsigned int eof ; unsigned int num_devs ; s#nfs4_deviceid dev_id [ 16 ] ; } 
nfs4_proc_getdevicelist extern int nfs4_proc_getdevicelist ( s#nfs_server * , const s#nfs_fh * , s#pnfs_devicelist * ) 
s#pnfs_device struct pnfs_device { s#nfs4_deviceid dev_id ; unsigned int layout_type ; unsigned int mincount ; unsigned int maxcount ; s#page * * pages ; unsigned int pgbase ; unsigned int pglen ; } 
nfs4_proc_getdeviceinfo extern int nfs4_proc_getdeviceinfo ( s#nfs_server * , s#pnfs_device * , s#rpc_cred * ) 

/* fs/nfs/nfs4session.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##nlm_host
s##nfs_iostats
s##nfs_fscache_key
s##fscache_cookie
s##pnfs_layoutdriver_type
s##rpc_cred_cache
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##slab
s##svc_cacherep
s##rpc_iostats
s##nfs_subversion
s##nfs_page
s##pnfs_layout_segment
s##nfs_direct_req
s##nfs_pageio_descriptor
s##nfs4_cached_acl
s##nfs_delegation
s##pnfs_layout_hdr
s##idmap
nfs4_init_ds_session extern int nfs4_init_ds_session ( s#nfs_client * , unsigned long ) 

/* fs/nfs/nfs4state.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##nlm_host
s##nfs_iostats
s##nfs_fscache_key
s##fscache_cookie
s##rpc_cred_cache
s##nfs_direct_req
s##nfs4_cached_acl
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##slab
s##svc_xprt
s##svc_cacherep
s##rpc_iostats
s##nfs_subversion
s##idmap
nfs4_schedule_lease_recovery extern void nfs4_schedule_lease_recovery ( s#nfs_client * ) 
nfs4_schedule_stateid_recovery extern int nfs4_schedule_stateid_recovery ( const s#nfs_server * , s#nfs4_state * ) 
nfs4_schedule_session_recovery extern void nfs4_schedule_session_recovery ( s#nfs4_session * , int ) 

/* fs/nfs/nfs4trace.o */
s##static_key_mod
__tracepoint_nfs4_pnfs_read extern s#tracepoint __tracepoint_nfs4_pnfs_read 
__tracepoint_nfs4_pnfs_write extern s#tracepoint __tracepoint_nfs4_pnfs_write 
__tracepoint_nfs4_pnfs_commit_ds extern s#tracepoint __tracepoint_nfs4_pnfs_commit_ds 

/* fs/nfs/nfs4xdr.o */
nfs41_maxgetdevinfo_overhead extern const t#u32 nfs41_maxgetdevinfo_overhead 

/* fs/nfs/pagelist.o */
s##module
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##kioctx
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##rpc_cred_cache
s##workqueue_struct
s##tvec_base
s##svc_xprt
s##svc_serv
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##iw_handler_def
s##iw_public_data
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##optimistic_spin_queue
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##kmem_cache_node
s##array_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##dn_route
s##key_user
s##key_type
s##assoc_array_ptr
s##pipe_inode_info
s##mem_cgroup
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##rpc_iostats
s##nfs_subversion
s##nfs4_slot
s##nfs_direct_req
s##nfs4_cached_acl
s##nfs_delegation
s##fscache_cookie
s##idmap
s##nfs4_slot_table
s##nfs4_session
s##nlm_host
s##nfs_iostats
s##nfs_fscache_key
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##export_operations
s##mtd_info
s##nameidata
s##cdev
nfs_pgheader_init extern void nfs_pgheader_init ( s#nfs_pageio_descriptor * , s#nfs_pgio_header * , void ( * ) ( s#nfs_pgio_header * ) ) 
nfs_generic_pg_test extern t#bool nfs_generic_pg_test ( s#nfs_pageio_descriptor * , s#nfs_page * , s#nfs_page * ) 
nfs_pageio_init extern void nfs_pageio_init ( s#nfs_pageio_descriptor * , s#inode * , const s#nfs_pageio_ops * , const s#nfs_pgio_completion_ops * , t#size_t , int ) 
nfs_pageio_add_request extern int nfs_pageio_add_request ( s#nfs_pageio_descriptor * , s#nfs_page * ) 
nfs_pageio_complete extern void nfs_pageio_complete ( s#nfs_pageio_descriptor * ) 

/* fs/nfs/pnfs.o */
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mtd_info
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##rpc_cred_cache
s##svc_xprt
s##svc_serv
s##rpc_iostats
s##nfs_subversion
s##nfs4_slot
s##nfs_direct_req
s##nfs4_cached_acl
s##nfs_delegation
s##fscache_cookie
s##idmap
s##nfs4_slot_table
s##nfs4_session
s##nlm_host
s##nfs_fscache_key
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
pnfs_register_layoutdriver extern int pnfs_register_layoutdriver ( s#pnfs_layoutdriver_type * ) 
pnfs_unregister_layoutdriver extern void pnfs_unregister_layoutdriver ( s#pnfs_layoutdriver_type * ) 
pnfs_put_lseg void pnfs_put_lseg ( s#pnfs_layout_segment * ) 
pnfs_destroy_layout void pnfs_destroy_layout ( s#nfs_inode * ) 
_pnfs_return_layout int _pnfs_return_layout ( s#inode * ) 
e#pnfs_iomode enum pnfs_iomode { IOMODE_READ = 1 , IOMODE_RW = 2 , IOMODE_ANY = 3 , } 
pnfs_update_layout s#pnfs_layout_segment * pnfs_update_layout ( s#inode * , s#nfs_open_context * , t#loff_t , t#u64 , e#pnfs_iomode , t#gfp_t ) 
pnfs_generic_pg_init_read void pnfs_generic_pg_init_read ( s#nfs_pageio_descriptor * , s#nfs_page * ) 
pnfs_generic_pg_init_write void pnfs_generic_pg_init_write ( s#nfs_pageio_descriptor * , s#nfs_page * , t#u64 ) 
pnfs_generic_pg_test t#bool pnfs_generic_pg_test ( s#nfs_pageio_descriptor * , s#nfs_page * , s#nfs_page * ) 
pnfs_write_done_resend_to_mds int pnfs_write_done_resend_to_mds ( s#inode * , s#list_head * , const s#nfs_pgio_completion_ops * , s#nfs_direct_req * ) 
pnfs_ld_write_done void pnfs_ld_write_done ( s#nfs_write_data * ) 
pnfs_writehdr_free void pnfs_writehdr_free ( s#nfs_pgio_header * ) 
pnfs_generic_pg_writepages int pnfs_generic_pg_writepages ( s#nfs_pageio_descriptor * ) 
pnfs_read_done_resend_to_mds int pnfs_read_done_resend_to_mds ( s#inode * , s#list_head * , const s#nfs_pgio_completion_ops * , s#nfs_direct_req * ) 
pnfs_ld_read_done void pnfs_ld_read_done ( s#nfs_read_data * ) 
pnfs_readhdr_free void pnfs_readhdr_free ( s#nfs_pgio_header * ) 
pnfs_generic_pg_readpages int pnfs_generic_pg_readpages ( s#nfs_pageio_descriptor * ) 
pnfs_set_lo_fail void pnfs_set_lo_fail ( s#pnfs_layout_segment * ) 
pnfs_set_layoutcommit void pnfs_set_layoutcommit ( s#nfs_write_data * ) 

/* fs/nfs/pnfs_dev.o */
nfs4_print_deviceid void nfs4_print_deviceid ( const s#nfs4_deviceid * ) 
s##module
s##vfsmount
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kioctx
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##kmem_cache_node
s##array_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##dn_route
s##mem_cgroup
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##slab
s##rpc_cred_cache
s##svc_xprt
s##svc_serv
s##rpc_iostats
s##nfs_mount_info
s##nfs_subversion
s##nfs4_slot
s##nfs4_state
s##nfs_direct_req
s##nfs4_cached_acl
s##nfs_delegation
s##fscache_cookie
s##nfs_client_initdata
s##idmap
s##nfs4_minor_version_ops
s##nfs4_slot_table
s##nfs4_session
s##nlm_host
s##nfs_iostats
s##nfs_fscache_key
nfs4_find_get_deviceid s#nfs4_deviceid_node * nfs4_find_get_deviceid ( const s#pnfs_layoutdriver_type * , const s#nfs_client * , const s#nfs4_deviceid * ) 
nfs4_delete_deviceid void nfs4_delete_deviceid ( const s#pnfs_layoutdriver_type * , const s#nfs_client * , const s#nfs4_deviceid * ) 
nfs4_init_deviceid_node void nfs4_init_deviceid_node ( s#nfs4_deviceid_node * , const s#pnfs_layoutdriver_type * , const s#nfs_client * , const s#nfs4_deviceid * ) 
nfs4_insert_deviceid_node s#nfs4_deviceid_node * nfs4_insert_deviceid_node ( s#nfs4_deviceid_node * ) 
nfs4_put_deviceid_node t#bool nfs4_put_deviceid_node ( s#nfs4_deviceid_node * ) 
nfs4_mark_deviceid_unavailable void nfs4_mark_deviceid_unavailable ( s#nfs4_deviceid_node * ) 
nfs4_test_deviceid_unavailable t#bool nfs4_test_deviceid_unavailable ( s#nfs4_deviceid_node * ) 

/* fs/nfs/read.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##radix_tree_node
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##rpc_cred_cache
s##svc_xprt
s##svc_serv
s##rpc_iostats
s##nfs_subversion
s##nfs4_slot
s##pnfs_layout_segment
s##nfs_direct_req
s##nfs4_cached_acl
s##nfs_delegation
s##pnfs_layout_hdr
s##fscache_cookie
s##idmap
s##nfs4_slot_table
s##nfs4_session
s##nlm_host
s##pnfs_layoutdriver_type
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s#nfs_read_header struct nfs_read_header { s#nfs_pgio_header header ; s#nfs_read_data rpc_data ; } 
nfs_readhdr_alloc extern s#nfs_read_header * nfs_readhdr_alloc ( void ) 
nfs_readhdr_free extern void nfs_readhdr_free ( s#nfs_pgio_header * ) 
nfs_readdata_release extern void nfs_readdata_release ( s#nfs_read_data * ) 
nfs_pageio_init_read extern void nfs_pageio_init_read ( s#nfs_pageio_descriptor * , s#inode * , const s#nfs_pgio_completion_ops * ) 
nfs_pageio_reset_read_mds extern void nfs_pageio_reset_read_mds ( s#nfs_pageio_descriptor * ) 
nfs_initiate_read extern int nfs_initiate_read ( s#rpc_clnt * , s#nfs_read_data * , const s#rpc_call_ops * , int ) 
nfs_generic_pagein extern int nfs_generic_pagein ( s#nfs_pageio_descriptor * , s#nfs_pgio_header * ) 

/* fs/nfs/super.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##workqueue_struct
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##optimistic_spin_queue
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##key_user
s##key_type
s##assoc_array_ptr
s##pipe_inode_info
s##mem_cgroup
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##files_struct
s##nlm_lockowner
s##rpc_cred_cache
s##svc_xprt
s##svc_cacherep
s##nfs_direct_req
s##nfs4_cached_acl
s##fscache_cookie
s##idmap
s##nlm_host
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##export_operations
s##mtd_info
s##cdev
nfs_fs_type extern s#file_system_type nfs_fs_type 
nfs_sops extern const s#super_operations nfs_sops 
nfs4_fs_type extern s#file_system_type nfs4_fs_type 
nfs_sb_active extern void nfs_sb_active ( s#super_block * ) 
nfs_sb_deactive extern void nfs_sb_deactive ( s#super_block * ) 
nfs_statfs int nfs_statfs ( s#dentry * , s#kstatfs * ) 
nfs_show_options int nfs_show_options ( s#seq_file * , s#dentry * ) 
nfs_show_devname int nfs_show_devname ( s#seq_file * , s#dentry * ) 
nfs_show_path int nfs_show_path ( s#seq_file * , s#dentry * ) 
nfs_show_stats int nfs_show_stats ( s#seq_file * , s#dentry * ) 
nfs_umount_begin void nfs_umount_begin ( s#super_block * ) 
nfs_auth_info_match t#bool nfs_auth_info_match ( const s#nfs_auth_info * , t#rpc_authflavor_t ) 
nfs_try_mount s#dentry * nfs_try_mount ( int , const char * , s#nfs_mount_info * , s#nfs_subversion * ) 
nfs_remount int nfs_remount ( s#super_block * , int * , char * ) 
nfs_fill_super void nfs_fill_super ( s#super_block * , s#nfs_mount_info * ) 
nfs_set_sb_security int nfs_set_sb_security ( s#super_block * , s#dentry * , s#nfs_mount_info * ) 
nfs_clone_sb_security int nfs_clone_sb_security ( s#super_block * , s#dentry * , s#nfs_mount_info * ) 
nfs_fs_mount_common s#dentry * nfs_fs_mount_common ( s#nfs_server * , int , const char * , s#nfs_mount_info * , s#nfs_subversion * ) 
nfs_fs_mount s#dentry * nfs_fs_mount ( s#file_system_type * , int , const char * , void * ) 
nfs_put_super void nfs_put_super ( s#super_block * ) 
nfs_kill_super void nfs_kill_super ( s#super_block * ) 
nfs_callback_set_tcpport extern unsigned int nfs_callback_set_tcpport 
nfs_callback_tcpport extern unsigned short nfs_callback_tcpport 
nfs_idmap_cache_timeout extern unsigned int nfs_idmap_cache_timeout 
nfs4_disable_idmapping extern t#bool nfs4_disable_idmapping 
max_session_slots extern unsigned short max_session_slots 
send_implementation_id extern unsigned short send_implementation_id 
nfs4_client_id_uniquifier extern char nfs4_client_id_uniquifier [ ( 64 ) ] 
recover_lost_locks extern t#bool recover_lost_locks 

/* fs/nfs/write.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##module
s##kstatfs
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##tvec_base
s##workqueue_struct
s##device_private
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##iw_handler_def
s##iw_public_data
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##nfs_subversion
s##rpc_cred_cache
s##nfs4_slot
s##nfs_direct_req
s##idmap
s##nfs4_slot_table
s##nfs4_session
s##fscache_cookie
s##nlm_host
s##nfs4_cached_acl
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##mem_cgroup
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##slab
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##svc_xprt
s##svc_serv
s##rpc_iostats
nfs_commitdata_alloc extern s#nfs_commit_data * nfs_commitdata_alloc ( void ) 
nfs_commit_free extern void nfs_commit_free ( s#nfs_commit_data * ) 
s#nfs_write_header struct nfs_write_header { s#nfs_pgio_header header ; s#nfs_write_data rpc_data ; s#nfs_writeverf verf ; } 
nfs_writehdr_alloc extern s#nfs_write_header * nfs_writehdr_alloc ( void ) 
nfs_writehdr_free extern void nfs_writehdr_free ( s#nfs_pgio_header * ) 
nfs_writedata_release extern void nfs_writedata_release ( s#nfs_write_data * ) 
nfs_request_add_commit_list void nfs_request_add_commit_list ( s#nfs_page * , s#list_head * , s#nfs_commit_info * ) 
nfs_request_remove_commit_list void nfs_request_remove_commit_list ( s#nfs_page * , s#nfs_commit_info * ) 
nfs_init_cinfo void nfs_init_cinfo ( s#nfs_commit_info * , s#inode * , s#nfs_direct_req * ) 
nfs_initiate_write extern int nfs_initiate_write ( s#rpc_clnt * , s#nfs_write_data * , const s#rpc_call_ops * , int , int ) 
nfs_generic_flush extern int nfs_generic_flush ( s#nfs_pageio_descriptor * , s#nfs_pgio_header * ) 
nfs_pageio_init_write extern void nfs_pageio_init_write ( s#nfs_pageio_descriptor * , s#inode * , int , const s#nfs_pgio_completion_ops * ) 
nfs_pageio_reset_write_mds extern void nfs_pageio_reset_write_mds ( s#nfs_pageio_descriptor * ) 
nfs_commitdata_release void nfs_commitdata_release ( s#nfs_commit_data * ) 
nfs_initiate_commit extern int nfs_initiate_commit ( s#rpc_clnt * , s#nfs_commit_data * , const s#rpc_call_ops * , int , int ) 
nfs_init_commit extern void nfs_init_commit ( s#nfs_commit_data * , s#list_head * , s#pnfs_layout_segment * , s#nfs_commit_info * ) 
nfs_retry_commit void nfs_retry_commit ( s#list_head * , s#pnfs_layout_segment * , s#nfs_commit_info * ) 
nfs_write_inode extern int nfs_write_inode ( s#inode * , s#writeback_control * ) 
nfs_wb_all extern int nfs_wb_all ( s#inode * ) 

/* fs/nfs_common/nfsacl.o */
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
nfsacl_encode extern int nfsacl_encode ( s#xdr_buf * , unsigned int , s#inode * , s#posix_acl * , int , int ) 
nfsacl_decode extern int nfsacl_decode ( s#xdr_buf * , unsigned int , unsigned int * , s#posix_acl * * ) 

/* fs/nfsd/nfs4acl.o */
s#nfs4_ace struct nfs4_ace { t#uint32_t type ; t#uint32_t flag ; t#uint32_t access_mask ; int whotype ; union { t#kuid_t who_uid ; t#kgid_t who_gid ; } ; } 
s#nfs4_acl struct nfs4_acl { t#uint32_t naces ; s#nfs4_ace aces [ 0 ] ; } 
nfs4_acl_posix_to_nfsv4 s#nfs4_acl * nfs4_acl_posix_to_nfsv4 ( s#posix_acl * , s#posix_acl * , unsigned int ) 
nfs4_acl_nfsv4_to_posix int nfs4_acl_nfsv4_to_posix ( s#nfs4_acl * , s#posix_acl * * , s#posix_acl * * , unsigned int ) 
nfs4_acl_new s#nfs4_acl * nfs4_acl_new ( int ) 
nfs4_acl_get_whotype int nfs4_acl_get_whotype ( char * , t#u32 ) 
nfs4_acl_write_who int nfs4_acl_write_who ( int , char * ) 

/* fs/nls/nls_base.o */
t#unicode_t typedef t#u32 unicode_t 
utf8_to_utf32 extern int utf8_to_utf32 ( const t#u8 * , int , t#unicode_t * ) 
utf32_to_utf8 extern int utf32_to_utf8 ( t#unicode_t , t#u8 * , int ) 
e#utf16_endian enum utf16_endian { UTF16_HOST_ENDIAN , UTF16_LITTLE_ENDIAN , UTF16_BIG_ENDIAN } 
utf8s_to_utf16s extern int utf8s_to_utf16s ( const t#u8 * , int , e#utf16_endian , t#wchar_t * , int ) 
utf16s_to_utf8s extern int utf16s_to_utf8s ( const t#wchar_t * , int , e#utf16_endian , t#u8 * , int ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
register_nls extern int register_nls ( s#nls_table * ) 
unregister_nls extern int unregister_nls ( s#nls_table * ) 
unload_nls extern void unload_nls ( s#nls_table * ) 
load_nls extern s#nls_table * load_nls ( char * ) 
load_nls_default extern s#nls_table * load_nls_default ( void ) 

/* fs/notify/fsnotify.o */
s##posix_acl
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##swap_info_struct
s##backing_dev_info
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
__fsnotify_inode_delete extern void __fsnotify_inode_delete ( s#inode * ) 
__fsnotify_parent extern int __fsnotify_parent ( s#path * , s#dentry * , t#__u32 ) 
fsnotify extern int fsnotify ( s#inode * , t#__u32 , void * , int , const unsigned char * , t#u32 ) 

/* fs/notify/notification.o */
fsnotify_get_cookie extern t#u32 fsnotify_get_cookie ( void ) 

/* fs/open.o */
s##posix_acl
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##kiocb
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##mtd_info
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##key_user
s##key_type
s##assoc_array_ptr
s##sem_undo_list
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##event_filter
s##ftrace_hash
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##proc_dir_entry
s##serial_icounter_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##ring_buffer_iter
s##nlm_lockowner
s##nfs4_lock_state
vfs_truncate extern long vfs_truncate ( s#path * , t#loff_t ) 
finish_open extern int finish_open ( s#file * , s#dentry * , int ( * ) ( s#inode * , s#file * ) , int * ) 
finish_no_open extern int finish_no_open ( s#file * , s#dentry * ) 
dentry_open extern s#file * dentry_open ( const s#path * , int , const s#cred * ) 
vfs_open extern int vfs_open ( const s#path * , s#file * , const s#cred * ) 
filp_open extern s#file * filp_open ( const char * , int , t#umode_t ) 
file_open_root extern s#file * file_open_root ( s#dentry * , s#vfsmount * , const char * , int ) 
filp_close extern int filp_close ( s#file * , t#fl_owner_t ) 
sys_close long sys_close ( unsigned int ) 
generic_file_open extern int generic_file_open ( s#inode * , s#file * ) 
nonseekable_open extern int nonseekable_open ( s#inode * , s#file * ) 

/* fs/pipe.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kioctx
s##eventfd_ctx
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
pipe_lock void pipe_lock ( s#pipe_inode_info * ) 
pipe_unlock void pipe_unlock ( s#pipe_inode_info * ) 
generic_pipe_buf_map void * generic_pipe_buf_map ( s#pipe_inode_info * , s#pipe_buffer * , int ) 
generic_pipe_buf_unmap void generic_pipe_buf_unmap ( s#pipe_inode_info * , s#pipe_buffer * , void * ) 
generic_pipe_buf_steal int generic_pipe_buf_steal ( s#pipe_inode_info * , s#pipe_buffer * ) 
generic_pipe_buf_get void generic_pipe_buf_get ( s#pipe_inode_info * , s#pipe_buffer * ) 
generic_pipe_buf_confirm int generic_pipe_buf_confirm ( s#pipe_inode_info * , s#pipe_buffer * ) 
generic_pipe_buf_release void generic_pipe_buf_release ( s#pipe_inode_info * , s#pipe_buffer * ) 

/* fs/posix_acl.o */
posix_acl_init extern void posix_acl_init ( s#posix_acl * , int ) 
posix_acl_alloc extern s#posix_acl * posix_acl_alloc ( int , t#gfp_t ) 
posix_acl_valid extern int posix_acl_valid ( const s#posix_acl * ) 
posix_acl_equiv_mode extern int posix_acl_equiv_mode ( const s#posix_acl * , t#umode_t * ) 
posix_acl_from_mode extern s#posix_acl * posix_acl_from_mode ( t#umode_t , t#gfp_t ) 
posix_acl_create extern int posix_acl_create ( s#posix_acl * * , t#gfp_t , t#umode_t * ) 
posix_acl_chmod extern int posix_acl_chmod ( s#posix_acl * * , t#gfp_t , t#umode_t ) 

/* fs/proc/generic.o */
t#nlink_t typedef t#__u32 nlink_t 
s##posix_acl
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cdev
s#proc_dir_entry struct proc_dir_entry { unsigned int low_ino ; t#umode_t mode ; t#nlink_t nlink ; t#kuid_t uid ; t#kgid_t gid ; t#loff_t size ; const s#inode_operations * proc_iops ; const s#file_operations * proc_fops ; s#proc_dir_entry * next , * parent , * subdir ; void * data ; t#atomic_t count ; t#atomic_t in_use ; s#completion * pde_unload_completion ; s#list_head pde_openers ; t#spinlock_t pde_unload_lock ; t#u8 namelen ; char name [ ] ; } 
proc_symlink extern s#proc_dir_entry * proc_symlink ( const char * , s#proc_dir_entry * , const char * ) 
proc_mkdir_data extern s#proc_dir_entry * proc_mkdir_data ( const char * , t#umode_t , s#proc_dir_entry * , void * ) 
proc_mkdir_mode extern s#proc_dir_entry * proc_mkdir_mode ( const char * , t#umode_t , s#proc_dir_entry * ) 
proc_mkdir extern s#proc_dir_entry * proc_mkdir ( const char * , s#proc_dir_entry * ) 
proc_create_data extern s#proc_dir_entry * proc_create_data ( const char * , t#umode_t , s#proc_dir_entry * , const s#file_operations * , void * ) 
proc_set_size extern void proc_set_size ( s#proc_dir_entry * , t#loff_t ) 
proc_set_user extern void proc_set_user ( s#proc_dir_entry * , t#kuid_t , t#kgid_t ) 
remove_proc_entry extern void remove_proc_entry ( const char * , s#proc_dir_entry * ) 
remove_proc_subtree extern int remove_proc_subtree ( const char * , s#proc_dir_entry * ) 
proc_get_parent_data extern void * proc_get_parent_data ( const s#inode * ) 
proc_remove extern void proc_remove ( s#proc_dir_entry * ) 
PDE_DATA extern void * PDE_DATA ( const s#inode * ) 

/* fs/proc/proc_net.o */
s##posix_acl
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sec_path
s##neighbour
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
seq_open_net int seq_open_net ( s#inode * , s#file * , const s#seq_operations * , int ) 
single_open_net int single_open_net ( s#inode * , s#file * , int ( * ) ( s#seq_file * , void * ) ) 
seq_release_net int seq_release_net ( s#inode * , s#file * ) 
single_release_net int single_release_net ( s#inode * , s#file * ) 

/* fs/proc/proc_sysctl.o */
s##nsproxy
register_sysctl s#ctl_table_header * register_sysctl ( const char * , s#ctl_table * ) 
s#ctl_path struct ctl_path { const char * procname ; } 
register_sysctl_paths s#ctl_table_header * register_sysctl_paths ( const s#ctl_path * , s#ctl_table * ) 
register_sysctl_table s#ctl_table_header * register_sysctl_table ( s#ctl_table * ) 
unregister_sysctl_table void unregister_sysctl_table ( s#ctl_table_header * ) 

/* fs/proc/vmcore.o */
register_oldmem_pfn_is_ram extern int register_oldmem_pfn_is_ram ( int ( * ) ( unsigned long ) ) 
unregister_oldmem_pfn_is_ram extern void unregister_oldmem_pfn_is_ram ( void ) 
vmcore_cleanup void vmcore_cleanup ( void ) 

/* fs/pstore/platform.o */
e#kmsg_dump_reason enum kmsg_dump_reason { KMSG_DUMP_UNDEF , KMSG_DUMP_PANIC , KMSG_DUMP_OOPS , KMSG_DUMP_EMERG , KMSG_DUMP_RESTART , KMSG_DUMP_HALT , KMSG_DUMP_POWEROFF , } 
pstore_cannot_block_path extern t#bool pstore_cannot_block_path ( e#kmsg_dump_reason ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
e#pstore_type_id enum pstore_type_id { PSTORE_TYPE_DMESG = 0 , PSTORE_TYPE_MCE = 1 , PSTORE_TYPE_CONSOLE = 2 , PSTORE_TYPE_FTRACE = 3 , PSTORE_TYPE_PPC_RTAS = 4 , PSTORE_TYPE_PPC_OF = 5 , PSTORE_TYPE_PPC_COMMON = 6 , PSTORE_TYPE_UNKNOWN = 255 } 
s#pstore_info struct pstore_info { s#module * owner ; char * name ; t#spinlock_t buf_lock ; char * buf ; t#size_t bufsize ; s#mutex read_mutex ; int ( * open ) ( s#pstore_info * ) ; int ( * close ) ( s#pstore_info * ) ; t#ssize_t ( * read ) ( t#u64 * , e#pstore_type_id * , int * , s#timespec * , char * * , t#bool * , s#pstore_info * ) ; int ( * write ) ( e#pstore_type_id , e#kmsg_dump_reason , t#u64 * , unsigned int , int , t#bool , t#size_t , s#pstore_info * ) ; int ( * write_buf ) ( e#pstore_type_id , e#kmsg_dump_reason , t#u64 * , unsigned int , const char * , t#bool , t#size_t , s#pstore_info * ) ; int ( * erase ) ( e#pstore_type_id , t#u64 , int , s#timespec , s#pstore_info * ) ; void * data ; } 
pstore_register extern int pstore_register ( s#pstore_info * ) 

/* fs/quota/dquot.o */
dq_data_lock extern t#spinlock_t dq_data_lock 
s##posix_acl
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##proc_dir_entry
s##serial_icounter_struct
s##poll_table_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##nlm_lockowner
s##nfs4_lock_state
s##seq_file
s##hd_struct
s##gendisk
s##request_queue
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##workqueue_struct
__quota_error extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) void __quota_error ( s#super_block * , const char * , const char * , ... ) 
register_quota_format int register_quota_format ( s#quota_format_type * ) 
unregister_quota_format void unregister_quota_format ( s#quota_format_type * ) 
E#_DQST_DQSTAT_LAST 8 
s#dqstats struct dqstats { int stat [ E#_DQST_DQSTAT_LAST ] ; s#percpu_counter counter [ E#_DQST_DQSTAT_LAST ] ; } 
dqstats extern s#dqstats dqstats 
dquot_mark_dquot_dirty int dquot_mark_dquot_dirty ( s#dquot * ) 
mark_info_dirty extern void mark_info_dirty ( s#super_block * , int ) 
dquot_acquire int dquot_acquire ( s#dquot * ) 
dquot_commit int dquot_commit ( s#dquot * ) 
dquot_release int dquot_release ( s#dquot * ) 
dquot_destroy void dquot_destroy ( s#dquot * ) 
dquot_scan_active int dquot_scan_active ( s#super_block * , int ( * ) ( s#dquot * , unsigned long ) , unsigned long ) 
dquot_writeback_dquots int dquot_writeback_dquots ( s#super_block * , int ) 
dquot_quota_sync int dquot_quota_sync ( s#super_block * , int ) 
dqput void dqput ( s#dquot * ) 
dquot_alloc s#dquot * dquot_alloc ( s#super_block * , int ) 
dqget s#dquot * dqget ( s#super_block * , s#kqid ) 
dquot_initialize void dquot_initialize ( s#inode * ) 
dquot_drop void dquot_drop ( s#inode * ) 
inode_add_rsv_space void inode_add_rsv_space ( s#inode * , t#qsize_t ) 
inode_claim_rsv_space void inode_claim_rsv_space ( s#inode * , t#qsize_t ) 
inode_reclaim_rsv_space void inode_reclaim_rsv_space ( s#inode * , t#qsize_t ) 
inode_sub_rsv_space void inode_sub_rsv_space ( s#inode * , t#qsize_t ) 
__dquot_alloc_space int __dquot_alloc_space ( s#inode * , t#qsize_t , int ) 
dquot_alloc_inode int dquot_alloc_inode ( const s#inode * ) 
dquot_claim_space_nodirty int dquot_claim_space_nodirty ( s#inode * , t#qsize_t ) 
dquot_reclaim_space_nodirty void dquot_reclaim_space_nodirty ( s#inode * , t#qsize_t ) 
__dquot_free_space void __dquot_free_space ( s#inode * , t#qsize_t , int ) 
dquot_free_inode void dquot_free_inode ( const s#inode * ) 
__dquot_transfer int __dquot_transfer ( s#inode * , s#dquot * * ) 
dquot_transfer int dquot_transfer ( s#inode * , s#iattr * ) 
dquot_commit_info int dquot_commit_info ( s#super_block * , int ) 
dquot_operations extern const s#dquot_operations dquot_operations 
dquot_file_open int dquot_file_open ( s#inode * , s#file * ) 
dquot_disable int dquot_disable ( s#super_block * , int , unsigned int ) 
dquot_quota_off int dquot_quota_off ( s#super_block * , int ) 
dquot_resume int dquot_resume ( s#super_block * , int ) 
dquot_quota_on int dquot_quota_on ( s#super_block * , int , int , s#path * ) 
dquot_enable int dquot_enable ( s#inode * , int , int , unsigned int ) 
dquot_quota_on_mount int dquot_quota_on_mount ( s#super_block * , char * , int , int ) 
dquot_get_dqblk int dquot_get_dqblk ( s#super_block * , s#kqid , s#fs_disk_quota * ) 
dquot_set_dqblk int dquot_set_dqblk ( s#super_block * , s#kqid , s#fs_disk_quota * ) 
dquot_get_dqinfo int dquot_get_dqinfo ( s#super_block * , int , s#if_dqinfo * ) 
dquot_set_dqinfo int dquot_set_dqinfo ( s#super_block * , int , s#if_dqinfo * ) 
dquot_quotactl_ops extern const s#quotactl_ops dquot_quotactl_ops 

/* fs/quota/kqid.o */
qid_eq extern t#bool qid_eq ( s#kqid , s#kqid ) 
qid_lt extern t#bool qid_lt ( s#kqid , s#kqid ) 
t#qid_t typedef t#__kernel_uid32_t qid_t 
s##user_namespace
from_kqid extern t#qid_t from_kqid ( s#user_namespace * , s#kqid ) 
from_kqid_munged extern t#qid_t from_kqid_munged ( s#user_namespace * , s#kqid ) 
qid_valid extern t#bool qid_valid ( s#kqid ) 

/* fs/quota/netlink.o */
quota_send_warning extern void quota_send_warning ( s#kqid , t#dev_t , const char ) 

/* fs/quota/quota_tree.o */
s##posix_acl
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##seq_file
s##hd_struct
s##gendisk
s##request_queue
s##cdev
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##workqueue_struct
s#qtree_fmt_operations struct qtree_fmt_operations { void ( * mem2disk_dqblk ) ( void * , s#dquot * ) ; void ( * disk2mem_dqblk ) ( s#dquot * , void * ) ; int ( * is_id ) ( void * , s#dquot * ) ; } 
s#qtree_mem_dqinfo struct qtree_mem_dqinfo { s#super_block * dqi_sb ; int dqi_type ; unsigned int dqi_blocks ; unsigned int dqi_free_blk ; unsigned int dqi_free_entry ; unsigned int dqi_blocksize_bits ; unsigned int dqi_entry_size ; unsigned int dqi_usable_bs ; unsigned int dqi_qtree_depth ; s#qtree_fmt_operations * dqi_ops ; } 
qtree_entry_unused int qtree_entry_unused ( s#qtree_mem_dqinfo * , char * ) 
qtree_write_dquot int qtree_write_dquot ( s#qtree_mem_dqinfo * , s#dquot * ) 
qtree_delete_dquot int qtree_delete_dquot ( s#qtree_mem_dqinfo * , s#dquot * ) 
qtree_read_dquot int qtree_read_dquot ( s#qtree_mem_dqinfo * , s#dquot * ) 
qtree_release_dquot int qtree_release_dquot ( s#qtree_mem_dqinfo * , s#dquot * ) 

/* fs/read_write.o */
s##module
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kioctx
s##eventfd_ctx
s##kstatfs
s##user_namespace
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
generic_ro_fops extern const s#file_operations generic_ro_fops 
vfs_setpos extern t#loff_t vfs_setpos ( s#file * , t#loff_t , t#loff_t ) 
generic_file_llseek_size extern t#loff_t generic_file_llseek_size ( s#file * , t#loff_t , int , t#loff_t , t#loff_t ) 
generic_file_llseek extern t#loff_t generic_file_llseek ( s#file * , t#loff_t , int ) 
fixed_size_llseek extern t#loff_t fixed_size_llseek ( s#file * , t#loff_t , int , t#loff_t ) 
noop_llseek extern t#loff_t noop_llseek ( s#file * , t#loff_t , int ) 
no_llseek extern t#loff_t no_llseek ( s#file * , t#loff_t , int ) 
default_llseek extern t#loff_t default_llseek ( s#file * , t#loff_t , int ) 
vfs_llseek extern t#loff_t vfs_llseek ( s#file * , t#loff_t , int ) 
do_sync_read extern t#ssize_t do_sync_read ( s#file * , char * , t#size_t , t#loff_t * ) 
vfs_read extern t#ssize_t vfs_read ( s#file * , char * , t#size_t , t#loff_t * ) 
do_sync_write extern t#ssize_t do_sync_write ( s#file * , const char * , t#size_t , t#loff_t * ) 
vfs_write extern t#ssize_t vfs_write ( s#file * , const char * , t#size_t , t#loff_t * ) 
iov_shorten unsigned long iov_shorten ( s#iovec * , unsigned long , t#size_t ) 
vfs_readv extern t#ssize_t vfs_readv ( s#file * , const s#iovec * , unsigned long , t#loff_t * ) 
vfs_writev extern t#ssize_t vfs_writev ( s#file * , const s#iovec * , unsigned long , t#loff_t * ) 

/* fs/readdir.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
iterate_dir extern int iterate_dir ( s#file * , s#dir_context * ) 

/* fs/select.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kioctx
s##eventfd_ctx
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##device_private
s##iw_handler_def
s##iw_public_data
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##module
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##pipe_inode_info
s##mem_cgroup
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##numa_group
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##poll_table_page
s#poll_table_entry struct poll_table_entry { s#file * filp ; unsigned long key ; t#wait_queue_t wait ; t#wait_queue_head_t * wait_address ; } 
s#poll_wqueues struct poll_wqueues { t#poll_table pt ; s#poll_table_page * table ; s#task_struct * polling_task ; int triggered ; int error ; int inline_index ; s#poll_table_entry inline_entries [ ( ( 832 - 256 ) / sizeof ( struct poll_table_entry ) ) ] ; } 
poll_initwait extern void poll_initwait ( s#poll_wqueues * ) 
poll_freewait extern void poll_freewait ( s#poll_wqueues * ) 
poll_schedule_timeout extern int poll_schedule_timeout ( s#poll_wqueues * , int , t#ktime_t * , unsigned long ) 

/* fs/seq_file.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
seq_open int seq_open ( s#file * , const s#seq_operations * ) 
seq_read t#ssize_t seq_read ( s#file * , char * , t#size_t , t#loff_t * ) 
seq_lseek t#loff_t seq_lseek ( s#file * , t#loff_t , int ) 
seq_release int seq_release ( s#inode * , s#file * ) 
seq_escape int seq_escape ( s#seq_file * , const char * , const char * ) 
seq_vprintf __attribute__ ( ( format ( printf , 2 , 0 ) ) ) int seq_vprintf ( s#seq_file * , const char * , va_list args ) 
seq_printf __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int seq_printf ( s#seq_file * , const char * , ... ) 
mangle_path char * mangle_path ( char * , const char * , const char * ) 
seq_path int seq_path ( s#seq_file * , const s#path * , const char * ) 
seq_bitmap int seq_bitmap ( s#seq_file * , const unsigned long * , unsigned int ) 
seq_bitmap_list int seq_bitmap_list ( s#seq_file * , const unsigned long * , unsigned int ) 
single_open int single_open ( s#file * , int ( * ) ( s#seq_file * , void * ) , void * ) 
single_open_size int single_open_size ( s#file * , int ( * ) ( s#seq_file * , void * ) , void * , t#size_t ) 
single_release int single_release ( s#inode * , s#file * ) 
seq_release_private int seq_release_private ( s#inode * , s#file * ) 
__seq_open_private void * __seq_open_private ( s#file * , const s#seq_operations * , int ) 
seq_open_private int seq_open_private ( s#file * , const s#seq_operations * , int ) 
seq_putc int seq_putc ( s#seq_file * , char ) 
seq_puts int seq_puts ( s#seq_file * , const char * ) 
seq_put_decimal_ull int seq_put_decimal_ull ( s#seq_file * , char , unsigned long long ) 
seq_put_decimal_ll int seq_put_decimal_ll ( s#seq_file * , char , long long ) 
seq_write int seq_write ( s#seq_file * , const void * , t#size_t ) 
seq_list_start extern s#list_head * seq_list_start ( s#list_head * , t#loff_t ) 
seq_list_start_head extern s#list_head * seq_list_start_head ( s#list_head * , t#loff_t ) 
seq_list_next extern s#list_head * seq_list_next ( void * , s#list_head * , t#loff_t * ) 
seq_hlist_start extern s#hlist_node * seq_hlist_start ( s#hlist_head * , t#loff_t ) 
seq_hlist_start_head extern s#hlist_node * seq_hlist_start_head ( s#hlist_head * , t#loff_t ) 
seq_hlist_next extern s#hlist_node * seq_hlist_next ( void * , s#hlist_head * , t#loff_t * ) 
seq_hlist_start_rcu extern s#hlist_node * seq_hlist_start_rcu ( s#hlist_head * , t#loff_t ) 
seq_hlist_start_head_rcu extern s#hlist_node * seq_hlist_start_head_rcu ( s#hlist_head * , t#loff_t ) 
seq_hlist_next_rcu extern s#hlist_node * seq_hlist_next_rcu ( void * , s#hlist_head * , t#loff_t * ) 
seq_hlist_start_percpu extern s#hlist_node * seq_hlist_start_percpu ( s#hlist_head * , int * , t#loff_t ) 
seq_hlist_next_percpu extern s#hlist_node * seq_hlist_next_percpu ( void * , s#hlist_head * , int * , t#loff_t * ) 

/* fs/splice.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
generic_file_splice_read extern t#ssize_t generic_file_splice_read ( s#file * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) 
nosteal_pipe_buf_ops extern const s#pipe_buf_operations nosteal_pipe_buf_ops 
kernel_write extern t#ssize_t kernel_write ( s#file * , const char * , t#size_t , t#loff_t ) 
default_file_splice_read extern t#ssize_t default_file_splice_read ( s#file * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) 
s#splice_desc struct splice_desc { unsigned int len , total_len ; unsigned int flags ; union { void * userptr ; s#file * file ; void * data ; } u ; t#loff_t pos ; t#loff_t * opos ; t#size_t num_spliced ; t#bool need_wakeup ; } 
pipe_to_file extern int pipe_to_file ( s#pipe_inode_info * , s#pipe_buffer * , s#splice_desc * ) 
t#splice_actor typedef int ( splice_actor ) ( s#pipe_inode_info * , s#pipe_buffer * , s#splice_desc * ) 
splice_from_pipe_feed extern int splice_from_pipe_feed ( s#pipe_inode_info * , s#splice_desc * , t#splice_actor * ) 
splice_from_pipe_next extern int splice_from_pipe_next ( s#pipe_inode_info * , s#splice_desc * ) 
splice_from_pipe_begin extern void splice_from_pipe_begin ( s#splice_desc * ) 
splice_from_pipe_end extern void splice_from_pipe_end ( s#pipe_inode_info * , s#splice_desc * ) 
__splice_from_pipe extern t#ssize_t __splice_from_pipe ( s#pipe_inode_info * , s#splice_desc * , t#splice_actor * ) 
generic_file_splice_write extern t#ssize_t generic_file_splice_write ( s#pipe_inode_info * , s#file * , t#loff_t * , t#size_t , unsigned int ) 
generic_splice_sendpage extern t#ssize_t generic_splice_sendpage ( s#pipe_inode_info * , s#file * , t#loff_t * , t#size_t , unsigned int ) 
t#splice_direct_actor typedef int ( splice_direct_actor ) ( s#pipe_inode_info * , s#splice_desc * ) 
splice_direct_to_actor extern t#ssize_t splice_direct_to_actor ( s#file * , s#splice_desc * , t#splice_direct_actor * ) 
do_splice_direct extern long do_splice_direct ( s#file * , t#loff_t * , s#file * , t#loff_t * , t#size_t , unsigned int ) 

/* fs/stack.o */
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##page
s##task_struct
s##optimistic_spin_queue
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##vm_area_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cred
s##radix_tree_node
s##swap_info_struct
s##cdev
fsstack_copy_inode_size extern void fsstack_copy_inode_size ( s#inode * , s#inode * ) 
fsstack_copy_attr_all extern void fsstack_copy_attr_all ( s#inode * , const s#inode * ) 

/* fs/stat.o */
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##kiocb
s##iovec
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##mtd_info
s##workqueue_struct
s##cdev
generic_fillattr extern void generic_fillattr ( s#inode * , s#kstat * ) 
vfs_getattr_nosec int vfs_getattr_nosec ( s#path * , s#kstat * ) 
vfs_getattr extern int vfs_getattr ( s#path * , s#kstat * ) 
vfs_fstat extern int vfs_fstat ( unsigned int , s#kstat * ) 
vfs_fstatat extern int vfs_fstatat ( int , const char * , s#kstat * , int ) 
vfs_stat extern int vfs_stat ( const char * , s#kstat * ) 
vfs_lstat extern int vfs_lstat ( const char * , s#kstat * ) 
inode_add_bytes void inode_add_bytes ( s#inode * , t#loff_t ) 
__inode_sub_bytes void __inode_sub_bytes ( s#inode * , t#loff_t ) 
inode_sub_bytes void inode_sub_bytes ( s#inode * , t#loff_t ) 
inode_get_bytes t#loff_t inode_get_bytes ( s#inode * ) 
inode_set_bytes void inode_set_bytes ( s#inode * , t#loff_t ) 

/* fs/statfs.o */
s##posix_acl
s##module
s##kiocb
s##iovec
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mempolicy
s##numa_group
s##pipe_inode_info
s##radix_tree_node
s##writeback_control
s##swap_info_struct
s##slab
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cdev
vfs_statfs extern int vfs_statfs ( s#path * , s#kstatfs * ) 

/* fs/super.o */
s##posix_acl
s##nameidata
s##module
s##kiocb
s##iovec
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##blkcg_gq
s##workqueue_struct
s##slab
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##cgroup_taskset
s##seq_file
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kstatfs
s##mtd_info
s#super_block_dev struct super_block_dev { s#super_block * sb ; s#list_head entry ; t#dev_t anon_dev ; } 
insert_anon_sbdev int insert_anon_sbdev ( s#super_block * , s#super_block_dev * ) 
remove_anon_sbdev void remove_anon_sbdev ( s#super_block_dev * ) 
deactivate_locked_super void deactivate_locked_super ( s#super_block * ) 
deactivate_super void deactivate_super ( s#super_block * ) 
generic_shutdown_super void generic_shutdown_super ( s#super_block * ) 
sget s#super_block * sget ( s#file_system_type * , int ( * ) ( s#super_block * , void * ) , int ( * ) ( s#super_block * , void * ) , int , void * ) 
drop_super extern void drop_super ( s#super_block * ) 
iterate_supers_type extern void iterate_supers_type ( s#file_system_type * , void ( * ) ( s#super_block * , void * ) , void * ) 
get_super extern s#super_block * get_super ( s#block_device * ) 
get_super_thawed extern s#super_block * get_super_thawed ( s#block_device * ) 
get_anon_bdev int get_anon_bdev ( t#dev_t * ) 
free_anon_bdev void free_anon_bdev ( t#dev_t ) 
set_anon_super int set_anon_super ( s#super_block * , void * ) 
kill_anon_super void kill_anon_super ( s#super_block * ) 
kill_litter_super void kill_litter_super ( s#super_block * ) 
mount_ns extern s#dentry * mount_ns ( s#file_system_type * , int , void * , int ( * ) ( s#super_block * , void * , int ) ) 
mount_bdev extern s#dentry * mount_bdev ( s#file_system_type * , int , const char * , void * , int ( * ) ( s#super_block * , void * , int ) ) 
kill_block_super void kill_block_super ( s#super_block * ) 
mount_nodev extern s#dentry * mount_nodev ( s#file_system_type * , int , void * , int ( * ) ( s#super_block * , void * , int ) ) 
mount_single extern s#dentry * mount_single ( s#file_system_type * , int , void * , int ( * ) ( s#super_block * , void * , int ) ) 
__sb_end_write void __sb_end_write ( s#super_block * , int ) 
__sb_start_write int __sb_start_write ( s#super_block * , int , t#bool ) 
freeze_super extern int freeze_super ( s#super_block * ) 
thaw_super extern int thaw_super ( s#super_block * ) 

/* fs/sync.o */
s##posix_acl
s##vfsmount
s##module
s##kiocb
s##iovec
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##workqueue_struct
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mempolicy
s##numa_group
s##pipe_inode_info
s##radix_tree_node
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kstatfs
s##export_operations
s##mtd_info
sync_filesystem extern int sync_filesystem ( s#super_block * ) 
vfs_fsync_range extern int vfs_fsync_range ( s#file * , t#loff_t , t#loff_t , int ) 
vfs_fsync extern int vfs_fsync ( s#file * , int ) 
generic_write_sync extern int generic_write_sync ( s#file * , t#loff_t , t#loff_t ) 

/* fs/sysfs/bin.o */
s##sock
s#sysfs_elem_dir struct sysfs_elem_dir { s#kobject * kobj ; unsigned long subdirs ; s#rb_root children ; } 
s#sysfs_elem_symlink struct sysfs_elem_symlink { s#sysfs_dirent * target_sd ; } 
s##sysfs_open_dirent
s#sysfs_elem_attr struct sysfs_elem_attr { s#attribute * attr ; s#sysfs_open_dirent * open ; } 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s#sysfs_elem_bin_attr struct sysfs_elem_bin_attr { s#bin_attribute * bin_attr ; s#hlist_head buffers ; } 
s#sysfs_inode_attrs struct sysfs_inode_attrs { s#iattr ia_iattr ; void * ia_secdata ; t#u32 ia_secdata_len ; } 
s#sysfs_dirent struct sysfs_dirent { t#atomic_t s_count ; t#atomic_t s_active ; s#sysfs_dirent * s_parent ; const char * s_name ; s#rb_node s_rb ; union { s#completion * completion ; s#sysfs_dirent * removed_list ; } u ; const void * s_ns ; unsigned int s_hash ; union { s#sysfs_elem_dir s_dir ; s#sysfs_elem_symlink s_symlink ; s#sysfs_elem_attr s_attr ; s#sysfs_elem_bin_attr s_bin_attr ; } ; unsigned short s_flags ; t#umode_t s_mode ; unsigned int s_ino ; s#sysfs_inode_attrs * s_iattr ; } 
sysfs_create_bin_file int sysfs_create_bin_file ( s#kobject * , const s#bin_attribute * ) 
sysfs_remove_bin_file void sysfs_remove_bin_file ( s#kobject * , const s#bin_attribute * ) 

/* fs/sysfs/dir.o */
s##sock
s##sysfs_open_dirent
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
sysfs_get_dirent s#sysfs_dirent * sysfs_get_dirent ( s#sysfs_dirent * , const void * , const unsigned char * ) 

/* fs/sysfs/file.o */
s##sock
s##sysfs_open_dirent
s##vfsmount
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
sysfs_notify_dirent void sysfs_notify_dirent ( s#sysfs_dirent * ) 
sysfs_notify void sysfs_notify ( s#kobject * , const char * , const char * ) 
sysfs_create_file_ns int sysfs_create_file_ns ( s#kobject * , const s#attribute * , const void * ) 
sysfs_create_files int sysfs_create_files ( s#kobject * , const s#attribute * * ) 
sysfs_add_file_to_group int sysfs_add_file_to_group ( s#kobject * , const s#attribute * , const char * ) 
sysfs_chmod_file int sysfs_chmod_file ( s#kobject * , const s#attribute * , t#umode_t ) 
sysfs_remove_file_ns void sysfs_remove_file_ns ( s#kobject * , const s#attribute * , const void * ) 
sysfs_remove_files void sysfs_remove_files ( s#kobject * , const s#attribute * * ) 
sysfs_remove_file_from_group void sysfs_remove_file_from_group ( s#kobject * , const s#attribute * , const char * ) 
sysfs_schedule_callback int sysfs_schedule_callback ( s#kobject * , void ( * ) ( void * ) , void * , s#module * ) 

/* fs/sysfs/group.o */
s##sock
s##sysfs_open_dirent
s##vfsmount
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
sysfs_create_group int sysfs_create_group ( s#kobject * , const s#attribute_group * ) 
sysfs_create_groups int sysfs_create_groups ( s#kobject * , const s#attribute_group * * ) 
sysfs_update_group int sysfs_update_group ( s#kobject * , const s#attribute_group * ) 
sysfs_remove_group void sysfs_remove_group ( s#kobject * , const s#attribute_group * ) 
sysfs_remove_groups void sysfs_remove_groups ( s#kobject * , const s#attribute_group * * ) 
sysfs_merge_group int sysfs_merge_group ( s#kobject * , const s#attribute_group * ) 
sysfs_unmerge_group void sysfs_unmerge_group ( s#kobject * , const s#attribute_group * ) 
sysfs_add_link_to_group int sysfs_add_link_to_group ( s#kobject * , const char * , s#kobject * , const char * ) 
sysfs_remove_link_from_group void sysfs_remove_link_from_group ( s#kobject * , const char * , const char * ) 

/* fs/sysfs/mount.o */
s##sock
s##sysfs_open_dirent
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
sysfs_get s#sysfs_dirent * sysfs_get ( s#sysfs_dirent * ) 
sysfs_put void sysfs_put ( s#sysfs_dirent * ) 

/* fs/sysfs/symlink.o */
s##sock
s##sysfs_open_dirent
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
sysfs_create_link int sysfs_create_link ( s#kobject * , s#kobject * , const char * ) 
sysfs_remove_link void sysfs_remove_link ( s#kobject * , const char * ) 
sysfs_rename_link int sysfs_rename_link ( s#kobject * , s#kobject * , const char * , const char * ) 

/* fs/xattr.o */
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##kiocb
s##iovec
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##swap_info_struct
s##backing_dev_info
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cdev
vfs_setxattr int vfs_setxattr ( s#dentry * , const char * , const void * , t#size_t , int ) 
xattr_getsecurity t#ssize_t xattr_getsecurity ( s#inode * , const char * , void * , t#size_t ) 
vfs_getxattr t#ssize_t vfs_getxattr ( s#dentry * , const char * , void * , t#size_t ) 
vfs_listxattr t#ssize_t vfs_listxattr ( s#dentry * , char * , t#size_t ) 
vfs_removexattr int vfs_removexattr ( s#dentry * , const char * ) 
generic_getxattr t#ssize_t generic_getxattr ( s#dentry * , const char * , void * , t#size_t ) 
generic_listxattr t#ssize_t generic_listxattr ( s#dentry * , char * , t#size_t ) 
generic_setxattr int generic_setxattr ( s#dentry * , const char * , const void * , t#size_t , int ) 
generic_removexattr int generic_removexattr ( s#dentry * , const char * ) 

/* fs/xattr_acl.o */
posix_acl_from_xattr s#posix_acl * posix_acl_from_xattr ( s#user_namespace * , const void * , t#size_t ) 
posix_acl_to_xattr int posix_acl_to_xattr ( s#user_namespace * , const s#posix_acl * , void * , t#size_t ) 

/* fs/xfs/dmapi/xfs_dm.o */
s##posix_acl
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##user_namespace
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##mtd_info
t#__int32_t typedef signed int __int32_t 
t#xfs_tid_t typedef t#__int32_t xfs_tid_t 
s##xfs_ail
t#__uint32_t typedef unsigned int __uint32_t 
t#__uint64_t typedef unsigned long long int __uint64_t 
t#xfs_drfsbno_t typedef t#__uint64_t xfs_drfsbno_t 
t#xfs_drtbno_t typedef t#__uint64_t xfs_drtbno_t 
t#uuid_t typedef struct { unsigned char __u_bits [ 16 ] ; } uuid_t 
t#xfs_dfsbno_t typedef t#__uint64_t xfs_dfsbno_t 
t#xfs_ino_t typedef unsigned long long xfs_ino_t 
t#xfs_agblock_t typedef t#__uint32_t xfs_agblock_t 
t#xfs_agnumber_t typedef t#__uint32_t xfs_agnumber_t 
t#xfs_extlen_t typedef t#__uint32_t xfs_extlen_t 
t#__uint16_t typedef unsigned short int __uint16_t 
t#__uint8_t typedef unsigned char __uint8_t 
t#__int64_t typedef signed long long int __int64_t 
t#xfs_lsn_t typedef t#__int64_t xfs_lsn_t 
s#xfs_sb struct xfs_sb { t#__uint32_t sb_magicnum ; t#__uint32_t sb_blocksize ; t#xfs_drfsbno_t sb_dblocks ; t#xfs_drfsbno_t sb_rblocks ; t#xfs_drtbno_t sb_rextents ; t#uuid_t sb_uuid ; t#xfs_dfsbno_t sb_logstart ; t#xfs_ino_t sb_rootino ; t#xfs_ino_t sb_rbmino ; t#xfs_ino_t sb_rsumino ; t#xfs_agblock_t sb_rextsize ; t#xfs_agblock_t sb_agblocks ; t#xfs_agnumber_t sb_agcount ; t#xfs_extlen_t sb_rbmblocks ; t#xfs_extlen_t sb_logblocks ; t#__uint16_t sb_versionnum ; t#__uint16_t sb_sectsize ; t#__uint16_t sb_inodesize ; t#__uint16_t sb_inopblock ; char sb_fname [ 12 ] ; t#__uint8_t sb_blocklog ; t#__uint8_t sb_sectlog ; t#__uint8_t sb_inodelog ; t#__uint8_t sb_inopblog ; t#__uint8_t sb_agblklog ; t#__uint8_t sb_rextslog ; t#__uint8_t sb_inprogress ; t#__uint8_t sb_imax_pct ; t#__uint64_t sb_icount ; t#__uint64_t sb_ifree ; t#__uint64_t sb_fdblocks ; t#__uint64_t sb_frextents ; t#xfs_ino_t sb_uquotino ; t#xfs_ino_t sb_gquotino ; t#__uint16_t sb_qflags ; t#__uint8_t sb_flags ; t#__uint8_t sb_shared_vn ; t#xfs_extlen_t sb_inoalignmt ; t#__uint32_t sb_unit ; t#__uint32_t sb_width ; t#__uint8_t sb_dirblklog ; t#__uint8_t sb_logsectlog ; t#__uint16_t sb_logsectsize ; t#__uint32_t sb_logsunit ; t#__uint32_t sb_features2 ; t#__uint32_t sb_bad_features2 ; t#__uint32_t sb_features_compat ; t#__uint32_t sb_features_ro_compat ; t#__uint32_t sb_features_incompat ; t#__uint32_t sb_features_log_incompat ; t#__uint32_t sb_crc ; t#__uint32_t sb_pad ; t#xfs_ino_t sb_pquotino ; t#xfs_lsn_t sb_lsn ; } 
t#xfs_sb_t typedef s#xfs_sb xfs_sb_t 
t#xfs_daddr_t typedef t#__s64 xfs_daddr_t 
t#xfs_buf_flags_t typedef unsigned int xfs_buf_flags_t 
E#XFS_BTNUM_CNTi 1 
t#xfs_agino_t typedef t#__uint32_t xfs_agino_t 
s#xfs_perag struct xfs_perag { s#xfs_mount * pag_mount ; t#xfs_agnumber_t pag_agno ; t#atomic_t pag_ref ; char pagf_init ; char pagi_init ; char pagf_metadata ; char pagi_inodeok ; t#__uint8_t pagf_levels [ ( ( int ) E#XFS_BTNUM_CNTi + 1 ) ] ; t#__uint32_t pagf_flcount ; t#xfs_extlen_t pagf_freeblks ; t#xfs_extlen_t pagf_longest ; t#__uint32_t pagf_btreeblks ; t#xfs_agino_t pagi_freecount ; t#xfs_agino_t pagi_count ; t#xfs_agino_t pagl_pagino ; t#xfs_agino_t pagl_leftrec ; t#xfs_agino_t pagl_rightrec ; t#spinlock_t pagb_lock ; s#rb_root pagb_tree ; t#atomic_t pagf_fstrms ; t#spinlock_t pag_ici_lock ; s#radix_tree_root pag_ici_root ; int pag_ici_reclaimable ; s#mutex pag_ici_reclaim_lock ; unsigned long pag_ici_reclaim_cursor ; t#spinlock_t pag_buf_lock ; s#rb_root pag_buf_tree ; s#callback_head callback_head ; int pagb_count ; } 
s#xfs_buftarg struct xfs_buftarg { t#dev_t bt_dev ; s#block_device * bt_bdev ; s#backing_dev_info * bt_bdi ; s#xfs_mount * bt_mount ; unsigned int bt_meta_sectorsize ; t#size_t bt_meta_sectormask ; t#size_t bt_logical_sectorsize ; t#size_t bt_logical_sectormask ; s#shrinker bt_shrinker ; s#list_lru bt_lru ; } 
t#xfs_buftarg_t typedef s#xfs_buftarg xfs_buftarg_t 
t#xfs_buf_iodone_t typedef void ( * xfs_buf_iodone_t ) ( s#xfs_buf * ) 
s#xfs_log_callback struct xfs_log_callback { s#xfs_log_callback * cb_next ; void ( * cb_func ) ( void * , int ) ; void * cb_arg ; } 
t#xfs_log_callback_t typedef s#xfs_log_callback xfs_log_callback_t 
s##xlog_ticket
s##xfs_dquot_acct
s#xfs_trans_header struct xfs_trans_header { t#uint th_magic ; t#uint th_type ; t#__int32_t th_tid ; t#uint th_num_items ; } 
t#xfs_trans_header_t typedef s#xfs_trans_header xfs_trans_header_t 
s#xfs_trans struct xfs_trans { unsigned int t_magic ; t#xfs_log_callback_t t_logcb ; unsigned int t_type ; unsigned int t_log_res ; unsigned int t_log_count ; unsigned int t_blk_res ; unsigned int t_blk_res_used ; unsigned int t_rtx_res ; unsigned int t_rtx_res_used ; s#xlog_ticket * t_ticket ; t#xfs_lsn_t t_lsn ; t#xfs_lsn_t t_commit_lsn ; s#xfs_mount * t_mountp ; s#xfs_dquot_acct * t_dqinfo ; unsigned int t_flags ; t#int64_t t_icount_delta ; t#int64_t t_ifree_delta ; t#int64_t t_fdblocks_delta ; t#int64_t t_res_fdblocks_delta ; t#int64_t t_frextents_delta ; t#int64_t t_res_frextents_delta ; t#int64_t t_dblocks_delta ; t#int64_t t_agcount_delta ; t#int64_t t_imaxpct_delta ; t#int64_t t_rextsize_delta ; t#int64_t t_rbmblocks_delta ; t#int64_t t_rblocks_delta ; t#int64_t t_rextents_delta ; t#int64_t t_rextslog_delta ; s#list_head t_items ; t#xfs_trans_header_t t_header ; s#list_head t_busy ; unsigned long t_pflags ; } 
s#xfs_buf_map struct xfs_buf_map { t#xfs_daddr_t bm_bn ; int bm_len ; } 
s#xfs_buf_ops struct xfs_buf_ops { void ( * verify_read ) ( s#xfs_buf * ) ; void ( * verify_write ) ( s#xfs_buf * ) ; } 
s#xfs_buf struct xfs_buf { s#rb_node b_rbnode ; t#xfs_daddr_t b_bn ; int b_length ; t#atomic_t b_hold ; t#atomic_t b_lru_ref ; t#xfs_buf_flags_t b_flags ; s#semaphore b_sema ; s#list_head b_lru ; t#spinlock_t b_lock ; unsigned int b_state ; t#wait_queue_head_t b_waiters ; s#list_head b_list ; s#xfs_perag * b_pag ; t#xfs_buftarg_t * b_target ; void * b_addr ; s#work_struct b_iodone_work ; t#xfs_buf_iodone_t b_iodone ; s#completion b_iowait ; void * b_fspriv ; s#xfs_trans * b_transp ; s#page * * b_pages ; s#page * b_page_array [ 2 ] ; s#xfs_buf_map * b_maps ; s#xfs_buf_map __b_map ; int b_map_count ; int b_io_length ; t#atomic_t b_pin_count ; t#atomic_t b_io_remaining ; unsigned int b_page_count ; unsigned int b_offset ; unsigned short b_error ; const s#xfs_buf_ops * b_ops ; } 
s##xlog
s##xfs_quotainfo
s#xfs_trans_res struct xfs_trans_res { t#uint tr_logres ; int tr_logcount ; int tr_logflags ; } 
s#xfs_trans_resv struct xfs_trans_resv { s#xfs_trans_res tr_write ; s#xfs_trans_res tr_itruncate ; s#xfs_trans_res tr_rename ; s#xfs_trans_res tr_link ; s#xfs_trans_res tr_remove ; s#xfs_trans_res tr_symlink ; s#xfs_trans_res tr_create ; s#xfs_trans_res tr_mkdir ; s#xfs_trans_res tr_ifree ; s#xfs_trans_res tr_ichange ; s#xfs_trans_res tr_growdata ; s#xfs_trans_res tr_swrite ; s#xfs_trans_res tr_addafork ; s#xfs_trans_res tr_writeid ; s#xfs_trans_res tr_attrinval ; s#xfs_trans_res tr_attrsetm ; s#xfs_trans_res tr_attrsetrt ; s#xfs_trans_res tr_attrrm ; s#xfs_trans_res tr_clearagi ; s#xfs_trans_res tr_growrtalloc ; s#xfs_trans_res tr_growrtzero ; s#xfs_trans_res tr_growrtfree ; s#xfs_trans_res tr_qm_sbchange ; s#xfs_trans_res tr_qm_setqlim ; s#xfs_trans_res tr_qm_dqalloc ; s#xfs_trans_res tr_qm_quotaoff ; s#xfs_trans_res tr_qm_equotaoff ; s#xfs_trans_res tr_sb ; s#xfs_trans_res tr_fsyncts ; } 
t#xfs_dahash_t typedef t#__uint32_t xfs_dahash_t 
s#xfs_name struct xfs_name { const unsigned char * name ; int len ; int type ; } 
e#xfs_dacmp enum xfs_dacmp { XFS_CMP_DIFFERENT , XFS_CMP_EXACT , XFS_CMP_CASE } 
t#xfs_fsblock_t typedef t#__uint64_t xfs_fsblock_t 
s#xfs_bmap_free_item struct xfs_bmap_free_item { t#xfs_fsblock_t xbfi_startblock ; t#xfs_extlen_t xbfi_blockcount ; s#xfs_bmap_free_item * xbfi_next ; } 
t#xfs_bmap_free_item_t typedef s#xfs_bmap_free_item xfs_bmap_free_item_t 
s#xfs_bmap_free struct xfs_bmap_free { t#xfs_bmap_free_item_t * xbf_first ; int xbf_count ; int xbf_low ; } 
t#xfs_dablk_t typedef t#__uint32_t xfs_dablk_t 
s#xfs_da_args struct xfs_da_args { const t#__uint8_t * name ; int namelen ; t#__uint8_t filetype ; t#__uint8_t * value ; int valuelen ; int flags ; t#xfs_dahash_t hashval ; t#xfs_ino_t inumber ; s#xfs_inode * dp ; t#xfs_fsblock_t * firstblock ; s#xfs_bmap_free * flist ; s#xfs_trans * trans ; t#xfs_extlen_t total ; int whichfork ; t#xfs_dablk_t blkno ; int index ; t#xfs_dablk_t rmtblkno ; int rmtblkcnt ; int rmtvaluelen ; t#xfs_dablk_t blkno2 ; int index2 ; t#xfs_dablk_t rmtblkno2 ; int rmtblkcnt2 ; int rmtvaluelen2 ; int op_flags ; e#xfs_dacmp cmpresult ; } 
s#xfs_nameops struct xfs_nameops { t#xfs_dahash_t ( * hashname ) ( s#xfs_name * ) ; e#xfs_dacmp ( * compname ) ( s#xfs_da_args * , const unsigned char * , int ) ; } 
s##xfs_qmops
s#xfs_icsb_cnts struct xfs_icsb_cnts { t#uint64_t icsb_fdblocks ; t#uint64_t icsb_ifree ; t#uint64_t icsb_icount ; unsigned long icsb_flags ; } 
t#xfs_icsb_cnts_t typedef s#xfs_icsb_cnts xfs_icsb_cnts_t 
s##xfs_mru_cache
E#XFS_LOWSP_MAX ( 0 ) + 5 
s#xfs_mount struct xfs_mount { s#super_block * m_super ; t#xfs_tid_t m_tid ; s#xfs_ail * m_ail ; t#xfs_sb_t m_sb ; t#spinlock_t m_sb_lock ; s#xfs_buf * m_sb_bp ; char * m_fsname ; int m_fsname_len ; char * m_rtname ; char * m_logname ; int m_bsize ; t#xfs_agnumber_t m_agfrotor ; t#xfs_agnumber_t m_agirotor ; t#spinlock_t m_agirotor_lock ; t#xfs_agnumber_t m_maxagi ; t#uint m_readio_log ; t#uint m_readio_blocks ; t#uint m_writeio_log ; t#uint m_writeio_blocks ; s#xlog * m_log ; int m_logbufs ; int m_logbsize ; t#uint m_rsumlevels ; t#uint m_rsumsize ; s#xfs_inode * m_rbmip ; s#xfs_inode * m_rsumip ; s#xfs_inode * m_rootip ; s#xfs_quotainfo * m_quotainfo ; t#xfs_buftarg_t * m_ddev_targp ; t#xfs_buftarg_t * m_logdev_targp ; t#xfs_buftarg_t * m_rtdev_targp ; t#__uint8_t m_blkbit_log ; t#__uint8_t m_blkbb_log ; t#__uint8_t m_agno_log ; t#__uint8_t m_agino_log ; t#uint m_inode_cluster_size ; t#uint m_blockmask ; t#uint m_blockwsize ; t#uint m_blockwmask ; t#uint m_alloc_mxr [ 2 ] ; t#uint m_alloc_mnr [ 2 ] ; t#uint m_bmap_dmxr [ 2 ] ; t#uint m_bmap_dmnr [ 2 ] ; t#uint m_inobt_mxr [ 2 ] ; t#uint m_inobt_mnr [ 2 ] ; t#uint m_ag_maxlevels ; t#uint m_bm_maxlevels [ 2 ] ; t#uint m_in_maxlevels ; s#radix_tree_root m_perag_tree ; t#spinlock_t m_perag_lock ; s#mutex m_growlock ; int m_fixedfsid [ 2 ] ; t#uint m_dmevmask ; t#__uint64_t m_flags ; t#uint m_dir_node_ents ; t#uint m_attr_node_ents ; int m_ialloc_inos ; int m_ialloc_blks ; int m_inoalign_mask ; t#uint m_qflags ; s#xfs_trans_resv m_resv ; t#__uint64_t m_maxicount ; t#__uint64_t m_resblks ; t#__uint64_t m_resblks_avail ; t#__uint64_t m_resblks_save ; int m_dalign ; int m_swidth ; int m_sinoalign ; int m_attr_magicpct ; int m_dir_magicpct ; t#__uint8_t m_sectbb_log ; const s#xfs_nameops * m_dirnameops ; int m_dirblksize ; int m_dirblkfsbs ; t#xfs_dablk_t m_dirdatablk ; t#xfs_dablk_t m_dirleafblk ; t#xfs_dablk_t m_dirfreeblk ; t#uint m_chsize ; s#xfs_dmops * m_dm_ops ; s#xfs_qmops * m_qm_ops ; t#atomic_t m_active_trans ; t#xfs_icsb_cnts_t * m_sb_cnts ; unsigned long m_icsb_counters ; s#notifier_block m_icsb_notifier ; s#mutex m_icsb_mutex ; s#xfs_mru_cache * m_filestream ; s#delayed_work m_reclaim_work ; s#delayed_work m_eofblocks_work ; t#__int64_t m_update_flags ; t#int64_t m_low_space [ E#XFS_LOWSP_MAX ] ; s#workqueue_struct * m_data_workqueue ; s#workqueue_struct * m_unwritten_workqueue ; s#workqueue_struct * m_cil_workqueue ; s#workqueue_struct * m_reclaim_workqueue ; s#workqueue_struct * m_log_workqueue ; s#workqueue_struct * m_eofblocks_workqueue ; const char * m_mtpt ; } 
s##xfs_dquot
s#xfs_imap struct xfs_imap { t#xfs_daddr_t im_blkno ; t#ushort im_len ; t#ushort im_boffset ; } 
s#xfs_btree_block struct xfs_btree_block { t#__be32 bb_magic ; t#__be16 bb_level ; t#__be16 bb_numrecs ; union { struct { t#__be32 bb_leftsib ; t#__be32 bb_rightsib ; t#__be64 bb_blkno ; t#__be64 bb_lsn ; t#uuid_t bb_uuid ; t#__be32 bb_owner ; t#__le32 bb_crc ; } s ; struct { t#__be64 bb_leftsib ; t#__be64 bb_rightsib ; t#__be64 bb_blkno ; t#__be64 bb_lsn ; t#uuid_t bb_uuid ; t#__be64 bb_owner ; t#__le32 bb_crc ; t#__be32 bb_pad ; } l ; } bb_u ; } 
s#xfs_bmbt_rec_host struct xfs_bmbt_rec_host { t#__uint64_t l0 , l1 ; } 
t#xfs_bmbt_rec_host_t typedef s#xfs_bmbt_rec_host xfs_bmbt_rec_host_t 
t#xfs_extnum_t typedef t#__int32_t xfs_extnum_t 
s#xfs_ext_irec struct xfs_ext_irec { t#xfs_bmbt_rec_host_t * er_extbuf ; t#xfs_extnum_t er_extoff ; t#xfs_extnum_t er_extcount ; } 
t#xfs_ext_irec_t typedef s#xfs_ext_irec xfs_ext_irec_t 
t#xfs_dev_t typedef t#__u32 xfs_dev_t 
s#xfs_ifork struct xfs_ifork { int if_bytes ; int if_real_bytes ; s#xfs_btree_block * if_broot ; short if_broot_bytes ; unsigned char if_flags ; union { t#xfs_bmbt_rec_host_t * if_extents ; t#xfs_ext_irec_t * if_ext_irec ; char * if_data ; } if_u1 ; union { t#xfs_bmbt_rec_host_t if_inline_ext [ 2 ] ; char if_inline_data [ 32 ] ; t#xfs_dev_t if_rdev ; t#uuid_t if_uuid ; } if_u2 ; } 
t#xfs_ifork_t typedef s#xfs_ifork xfs_ifork_t 
s#xfs_log_item_desc struct xfs_log_item_desc { s#xfs_log_item * lid_item ; s#list_head lid_trans ; unsigned char lid_flags ; } 
s#xfs_log_iovec struct xfs_log_iovec { void * i_addr ; int i_len ; t#uint i_type ; } 
s#xfs_item_ops struct xfs_item_ops { void ( * iop_size ) ( t#xfs_log_item_t * , int * , int * ) ; void ( * iop_format ) ( t#xfs_log_item_t * , s#xfs_log_iovec * ) ; void ( * iop_pin ) ( t#xfs_log_item_t * ) ; void ( * iop_unpin ) ( t#xfs_log_item_t * , int ) ; t#uint ( * iop_push ) ( s#xfs_log_item * , s#list_head * ) ; void ( * iop_unlock ) ( t#xfs_log_item_t * ) ; t#xfs_lsn_t ( * iop_committed ) ( t#xfs_log_item_t * , t#xfs_lsn_t ) ; void ( * iop_committing ) ( t#xfs_log_item_t * , t#xfs_lsn_t ) ; } 
s#xfs_log_vec struct xfs_log_vec { s#xfs_log_vec * lv_next ; int lv_niovecs ; s#xfs_log_iovec * lv_iovecp ; s#xfs_log_item * lv_item ; char * lv_buf ; int lv_buf_len ; int lv_size ; } 
s#xfs_log_item struct xfs_log_item { s#list_head li_ail ; t#xfs_lsn_t li_lsn ; s#xfs_log_item_desc * li_desc ; s#xfs_mount * li_mountp ; s#xfs_ail * li_ailp ; t#uint li_type ; t#uint li_flags ; s#xfs_log_item * li_bio_list ; void ( * li_cb ) ( s#xfs_buf * , s#xfs_log_item * ) ; const s#xfs_item_ops * li_ops ; s#list_head li_cil ; s#xfs_log_vec * li_lv ; t#xfs_lsn_t li_seq ; } 
t#xfs_log_item_t typedef s#xfs_log_item xfs_log_item_t 
s#xfs_bmbt_rec struct xfs_bmbt_rec { t#__be64 l0 , l1 ; } 
s#xfs_inode_log_format struct xfs_inode_log_format { t#__uint16_t ilf_type ; t#__uint16_t ilf_size ; t#__uint32_t ilf_fields ; t#__uint16_t ilf_asize ; t#__uint16_t ilf_dsize ; t#__uint64_t ilf_ino ; union { t#__uint32_t ilfu_rdev ; t#uuid_t ilfu_uuid ; } ilf_u ; t#__int64_t ilf_blkno ; t#__int32_t ilf_len ; t#__int32_t ilf_boffset ; } 
t#xfs_inode_log_format_t typedef s#xfs_inode_log_format xfs_inode_log_format_t 
s#xfs_inode_log_item struct xfs_inode_log_item { t#xfs_log_item_t ili_item ; s#xfs_inode * ili_inode ; t#xfs_lsn_t ili_flush_lsn ; t#xfs_lsn_t ili_last_lsn ; unsigned short ili_lock_flags ; unsigned short ili_logged ; unsigned int ili_last_fields ; unsigned int ili_fields ; s#xfs_bmbt_rec * ili_extents_buf ; s#xfs_bmbt_rec * ili_aextents_buf ; t#xfs_inode_log_format_t ili_format ; } 
t#mrlock_t typedef struct { s#rw_semaphore mr_lock ; } mrlock_t 
t#__int8_t typedef signed char __int8_t 
s#xfs_ictimestamp struct xfs_ictimestamp { t#__int32_t t_sec ; t#__int32_t t_nsec ; } 
t#xfs_ictimestamp_t typedef s#xfs_ictimestamp xfs_ictimestamp_t 
t#xfs_fsize_t typedef t#__int64_t xfs_fsize_t 
t#__int16_t typedef signed short int __int16_t 
t#xfs_aextnum_t typedef t#__int16_t xfs_aextnum_t 
s#xfs_icdinode struct xfs_icdinode { t#__uint16_t di_magic ; t#__uint16_t di_mode ; t#__int8_t di_version ; t#__int8_t di_format ; t#__uint16_t di_onlink ; t#__uint32_t di_uid ; t#__uint32_t di_gid ; t#__uint32_t di_nlink ; t#__uint16_t di_projid_lo ; t#__uint16_t di_projid_hi ; t#__uint8_t di_pad [ 6 ] ; t#__uint16_t di_flushiter ; t#xfs_ictimestamp_t di_atime ; t#xfs_ictimestamp_t di_mtime ; t#xfs_ictimestamp_t di_ctime ; t#xfs_fsize_t di_size ; t#xfs_drfsbno_t di_nblocks ; t#xfs_extlen_t di_extsize ; t#xfs_extnum_t di_nextents ; t#xfs_aextnum_t di_anextents ; t#__uint8_t di_forkoff ; t#__int8_t di_aformat ; t#__uint32_t di_dmevmask ; t#__uint16_t di_dmstate ; t#__uint16_t di_flags ; t#__uint32_t di_gen ; t#xfs_agino_t di_next_unlinked ; t#__uint32_t di_crc ; t#__uint64_t di_changecount ; t#xfs_lsn_t di_lsn ; t#__uint64_t di_flags2 ; t#__uint8_t di_pad2 [ 16 ] ; t#xfs_ictimestamp_t di_crtime ; t#xfs_ino_t di_ino ; t#uuid_t di_uuid ; } 
t#xfs_icdinode_t typedef s#xfs_icdinode xfs_icdinode_t 
s#xfs_inode struct xfs_inode { s#xfs_mount * i_mount ; s#xfs_dquot * i_udquot ; s#xfs_dquot * i_gdquot ; s#xfs_dquot * i_pdquot ; t#xfs_ino_t i_ino ; s#xfs_imap i_imap ; t#xfs_ifork_t * i_afp ; t#xfs_ifork_t i_df ; s#xfs_inode_log_item * i_itemp ; t#mrlock_t i_lock ; t#mrlock_t i_iolock ; t#atomic_t i_pincount ; t#spinlock_t i_flags_lock ; unsigned long i_flags ; unsigned int i_delayed_blks ; t#xfs_icdinode_t i_d ; s#inode i_vnode ; } 
t#xfs_send_data_t typedef int ( * xfs_send_data_t ) ( int , s#xfs_inode * , t#loff_t , t#size_t , int , int * ) 
t#xfs_send_mmap_t typedef int ( * xfs_send_mmap_t ) ( s#vm_area_struct * , t#uint ) 
t#xfs_send_destroy_t typedef int ( * xfs_send_destroy_t ) ( s#xfs_inode * , t#dm_right_t ) 
t#xfs_send_namesp_t typedef int ( * xfs_send_namesp_t ) ( t#dm_eventtype_t , s#xfs_mount * , s#xfs_inode * , t#dm_right_t , s#xfs_inode * , t#dm_right_t , const unsigned char * , const unsigned char * , t#mode_t , int , int ) 
t#xfs_send_mount_t typedef int ( * xfs_send_mount_t ) ( s#xfs_mount * , t#dm_right_t , char * , char * ) 
t#xfs_send_unmount_t typedef void ( * xfs_send_unmount_t ) ( s#xfs_mount * , s#xfs_inode * , t#dm_right_t , t#mode_t , int , int ) 
s#xfs_dmops struct xfs_dmops { t#xfs_send_data_t xfs_send_data ; t#xfs_send_mmap_t xfs_send_mmap ; t#xfs_send_destroy_t xfs_send_destroy ; t#xfs_send_namesp_t xfs_send_namesp ; t#xfs_send_mount_t xfs_send_mount ; t#xfs_send_unmount_t xfs_send_unmount ; } 
xfs_dmcore_xfs extern s#xfs_dmops xfs_dmcore_xfs 

/* fs/xfs/xfs_ksyms.o */
s##posix_acl
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##user_namespace
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##mtd_info
s#xfs_ail struct xfs_ail { s#xfs_mount * xa_mount ; s#task_struct * xa_task ; s#list_head xa_ail ; t#xfs_lsn_t xa_target ; t#xfs_lsn_t xa_target_prev ; s#list_head xa_cursors ; t#spinlock_t xa_lock ; t#xfs_lsn_t xa_last_pushed_lsn ; int xa_log_flush ; s#list_head xa_buf_list ; t#wait_queue_head_t xa_empty ; } 
t#xlog_tid_t typedef t#__uint32_t xlog_tid_t 
s#xlog_res struct xlog_res { t#uint r_len ; t#uint r_type ; } 
t#xlog_res_t typedef s#xlog_res xlog_res_t 
s#xlog_ticket struct xlog_ticket { s#list_head t_queue ; s#task_struct * t_task ; t#xlog_tid_t t_tid ; t#atomic_t t_ref ; int t_curr_res ; int t_unit_res ; char t_ocnt ; char t_cnt ; char t_clientid ; char t_flags ; t#uint t_trans_type ; t#uint t_res_num ; t#uint t_res_num_ophdrs ; t#uint t_res_arr_sum ; t#uint t_res_o_flow ; t#xlog_res_t t_res_arr [ 15 ] ; } 
s##xfs_dquot_acct
s#xfs_cil_ctx struct xfs_cil_ctx { s#xfs_cil * cil ; t#xfs_lsn_t sequence ; t#xfs_lsn_t start_lsn ; t#xfs_lsn_t commit_lsn ; s#xlog_ticket * ticket ; int nvecs ; int space_used ; s#list_head busy_extents ; s#xfs_log_vec * lv_chain ; t#xfs_log_callback_t log_cb ; s#list_head committing ; } 
s#xfs_cil struct xfs_cil { s#xlog * xc_log ; s#list_head xc_cil ; t#spinlock_t xc_cil_lock ; s#rw_semaphore xc_ctx_lock __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; s#xfs_cil_ctx * xc_ctx ; t#spinlock_t xc_push_lock __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; t#xfs_lsn_t xc_push_seq ; s#list_head xc_committing ; t#wait_queue_head_t xc_commit_wait ; t#xfs_lsn_t xc_current_sequence ; s#work_struct xc_push_work ; } 
s#xlog_rec_header struct xlog_rec_header { t#__be32 h_magicno ; t#__be32 h_cycle ; t#__be32 h_version ; t#__be32 h_len ; t#__be64 h_lsn ; t#__be64 h_tail_lsn ; t#__le32 h_crc ; t#__be32 h_prev_block ; t#__be32 h_num_logops ; t#__be32 h_cycle_data [ ( 32 * 1024 ) / ( 1 << 9 ) ] ; t#__be32 h_fmt ; t#uuid_t h_fs_uuid ; t#__be32 h_size ; } 
t#xlog_rec_header_t typedef s#xlog_rec_header xlog_rec_header_t 
s#xlog_rec_ext_header struct xlog_rec_ext_header { t#__be32 xh_cycle ; t#__be32 xh_cycle_data [ ( 32 * 1024 ) / ( 1 << 9 ) ] ; } 
t#xlog_rec_ext_header_t typedef s#xlog_rec_ext_header xlog_rec_ext_header_t 
u#xlog_in_core2 union xlog_in_core2 { t#xlog_rec_header_t hic_header ; t#xlog_rec_ext_header_t hic_xheader ; char hic_sector [ 512 ] ; } 
t#xlog_in_core_2_t typedef u#xlog_in_core2 xlog_in_core_2_t 
s#xlog_in_core struct xlog_in_core { t#wait_queue_head_t ic_force_wait ; t#wait_queue_head_t ic_write_wait ; s#xlog_in_core * ic_next ; s#xlog_in_core * ic_prev ; s#xfs_buf * ic_bp ; s#xlog * ic_log ; int ic_size ; int ic_offset ; int ic_bwritecnt ; unsigned short ic_state ; char * ic_datap ; t#spinlock_t ic_callback_lock __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; t#xfs_log_callback_t * ic_callback ; t#xfs_log_callback_t * * ic_callback_tail ; t#atomic_t ic_refcnt __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; t#xlog_in_core_2_t * ic_data ; } 
t#xlog_in_core_t typedef s#xlog_in_core xlog_in_core_t 
s#xlog_grant_head struct xlog_grant_head { t#spinlock_t lock __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; s#list_head waiters ; t#atomic64_t grant ; } 
s#xlog struct xlog { s#xfs_mount * l_mp ; s#xfs_ail * l_ailp ; s#xfs_cil * l_cilp ; s#xfs_buf * l_xbuf ; s#xfs_buftarg * l_targ ; s#delayed_work l_work ; t#uint l_flags ; t#uint l_quotaoffs_flag ; s#list_head * l_buf_cancel_table ; int l_iclog_hsize ; int l_iclog_heads ; t#uint l_sectBBsize ; int l_iclog_size ; int l_iclog_size_log ; int l_iclog_bufs ; t#xfs_daddr_t l_logBBstart ; int l_logsize ; int l_logBBsize ; t#wait_queue_head_t l_flush_wait __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; int l_covered_state ; t#xlog_in_core_t * l_iclog ; t#spinlock_t l_icloglock ; int l_curr_cycle ; int l_prev_cycle ; int l_curr_block ; int l_prev_block ; t#atomic64_t l_last_sync_lsn __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; t#atomic64_t l_tail_lsn __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; s#xlog_grant_head l_reserve_head ; s#xlog_grant_head l_write_head ; } 
s##xfs_quotainfo
s##xfs_qmops
s##xfs_mru_cache
s##xfs_dquot
t#xfs_inode_t typedef s#xfs_inode xfs_inode_t 
xfs_iunlock void xfs_iunlock ( t#xfs_inode_t * , t#uint ) 
xfs_attr_remove int xfs_attr_remove ( s#xfs_inode * , const unsigned char * , int ) 
xfs_iget int xfs_iget ( s#xfs_mount * , s#xfs_trans * , t#xfs_ino_t , t#uint , t#uint , t#xfs_inode_t * * ) 
t#xfs_fileoff_t typedef t#__uint64_t xfs_fileoff_t 
t#xfs_filblks_t typedef t#__uint64_t xfs_filblks_t 
t#xfs_exntst_t typedef enum { XFS_EXT_NORM , XFS_EXT_UNWRITTEN , XFS_EXT_DMAPI_OFFLINE , XFS_EXT_INVALID } xfs_exntst_t 
s#xfs_bmbt_irec struct xfs_bmbt_irec { t#xfs_fileoff_t br_startoff ; t#xfs_fsblock_t br_startblock ; t#xfs_filblks_t br_blockcount ; t#xfs_exntst_t br_state ; } 
xfs_bmapi_read int xfs_bmapi_read ( s#xfs_inode * , t#xfs_fileoff_t , t#xfs_filblks_t , s#xfs_bmbt_irec * , int * , int ) 
t#xfs_mount_t typedef s#xfs_mount xfs_mount_t 
xfs_internal_inum int xfs_internal_inum ( t#xfs_mount_t * , t#xfs_ino_t ) 
xfs_attr_set int xfs_attr_set ( s#xfs_inode * , const unsigned char * , unsigned char * , int , int ) 
xfs_trans_reserve int xfs_trans_reserve ( s#xfs_trans * , s#xfs_trans_res * , t#uint , t#uint ) 
xfs_trans_ijoin void xfs_trans_ijoin ( s#xfs_trans * , s#xfs_inode * , t#uint ) 
xfs_free_eofblocks int xfs_free_eofblocks ( s#xfs_mount * , s#xfs_inode * , t#bool ) 
kmem_free extern void kmem_free ( const void * ) 
t#xfs_trans_t typedef s#xfs_trans xfs_trans_t 
xfs_trans_commit int xfs_trans_commit ( t#xfs_trans_t * , t#uint ) 
xfs_ilock void xfs_ilock ( t#xfs_inode_t * , t#uint ) 
xfs_attr_get int xfs_attr_get ( s#xfs_inode * , const unsigned char * , unsigned char * , int * , int ) 
xfs_readdir extern int xfs_readdir ( s#xfs_inode * , s#dir_context * , t#size_t ) 
xfs_setattr_size extern int xfs_setattr_size ( s#xfs_inode * , s#iattr * , int ) 
xfs_setattr_nonsize extern int xfs_setattr_nonsize ( s#xfs_inode * , s#iattr * , int ) 
xfs_trans_alloc t#xfs_trans_t * xfs_trans_alloc ( s#xfs_mount * , t#uint ) 
xfs_trans_cancel void xfs_trans_cancel ( t#xfs_trans_t * , int ) 
xfs_fsync int xfs_fsync ( s#xfs_inode * , int ) 
t#bulkstat_one_pf typedef int ( * bulkstat_one_pf ) ( s#xfs_mount * , t#xfs_ino_t , void * , int , void * , int * , int * ) 
xfs_bulkstat int xfs_bulkstat ( t#xfs_mount_t * , t#xfs_ino_t * , int * , t#bulkstat_one_pf , void * , t#size_t , char * , int * ) 
xfs_ilock_data_map_shared t#uint xfs_ilock_data_map_shared ( s#xfs_inode * ) 
xfs_trans_log_inode void xfs_trans_log_inode ( t#xfs_trans_t * , s#xfs_inode * , t#uint ) 
s#attrlist_cursor_kern struct attrlist_cursor_kern { t#__u32 hashval ; t#__u32 blkno ; t#__u32 offset ; t#__u16 pad1 ; t#__u8 pad2 ; t#__u8 initted ; } 
xfs_attr_list int xfs_attr_list ( s#xfs_inode * , char * , int , int , s#attrlist_cursor_kern * ) 
t#xfs_km_flags_t typedef unsigned xfs_km_flags_t 
kmem_zalloc_large extern void * kmem_zalloc_large ( t#size_t , t#xfs_km_flags_t ) 
s#xfs_flock64 struct xfs_flock64 { t#__s16 l_type ; t#__s16 l_whence ; t#__s64 l_start ; t#__s64 l_len ; t#__s32 l_sysid ; t#__u32 l_pid ; t#__s32 l_pad [ 4 ] ; } 
t#xfs_flock64_t typedef s#xfs_flock64 xfs_flock64_t 
t#xfs_off_t typedef t#__s64 xfs_off_t 
xfs_change_file_space int xfs_change_file_space ( s#xfs_inode * , int , t#xfs_flock64_t * , t#xfs_off_t , int ) 
xfs_get_extsz_hint t#xfs_extlen_t xfs_get_extsz_hint ( s#xfs_inode * ) 
assfail extern void assfail ( char * , char * , int ) 

/* fs/xfs/xfs_super.o */
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##mtd_info
s##cdev
xfs_fs_type s#file_system_type xfs_fs_type 

/* fs/xfs/xfs_trace.o */
s##static_key_mod
__tracepoint_xfs_irele extern s#tracepoint __tracepoint_xfs_irele 

/* init/init_task.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##sock
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sec_path
s##neighbour
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
init_task extern s#task_struct init_task 

/* init/main.o */
e#system_states extern enum system_states { SYSTEM_BOOTING , SYSTEM_RUNNING , SYSTEM_HALT , SYSTEM_POWER_OFF , SYSTEM_RESTART , } 
system_state extern e#system_states system_state 
reset_devices extern unsigned int reset_devices 
loops_per_jiffy extern unsigned long loops_per_jiffy 

/* init/version.o */
s##user_namespace
init_uts_ns extern s#uts_namespace init_uts_ns 

/* kernel/async.o */
t#async_cookie_t typedef t#u64 async_cookie_t 
t#async_func_t typedef void ( * async_func_t ) ( void * , t#async_cookie_t ) 
async_schedule extern t#async_cookie_t async_schedule ( t#async_func_t , void * ) 
async_schedule_domain extern t#async_cookie_t async_schedule_domain ( t#async_func_t , void * , s#async_domain * ) 
async_synchronize_full extern void async_synchronize_full ( void ) 
async_unregister_domain void async_unregister_domain ( s#async_domain * ) 
async_synchronize_full_domain extern void async_synchronize_full_domain ( s#async_domain * ) 
async_synchronize_cookie_domain extern void async_synchronize_cookie_domain ( t#async_cookie_t , s#async_domain * ) 
async_synchronize_cookie extern void async_synchronize_cookie ( t#async_cookie_t ) 

/* kernel/audit.o */
audit_enabled extern int audit_enabled 
s##audit_buffer
audit_log_task_context extern int audit_log_task_context ( s#audit_buffer * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kioctx
s##eventfd_ctx
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##iw_handler_def
s##iw_public_data
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##mem_cgroup
s##sysfs_dirent
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##serial_icounter_struct
s##tty_audit_buf
e#audit_state enum audit_state { AUDIT_DISABLED , AUDIT_BUILD_CONTEXT , AUDIT_RECORD_CONTEXT } 
s#audit_cap_data struct audit_cap_data { t#kernel_cap_t permitted ; t#kernel_cap_t inheritable ; union { unsigned int fE ; t#kernel_cap_t effective ; } ; } 
s#audit_names struct audit_names { s#list_head list ; s#filename * name ; int name_len ; t#bool hidden ; t#bool name_put ; unsigned long ino ; t#dev_t dev ; t#umode_t mode ; t#kuid_t uid ; t#kgid_t gid ; t#dev_t rdev ; t#u32 osid ; s#audit_cap_data fcap ; unsigned int fcap_ver ; unsigned char type ; t#bool should_free ; } 
s##audit_aux_data
s##audit_tree_refs
t#__kernel_mqd_t typedef int __kernel_mqd_t 
t#mqd_t typedef t#__kernel_mqd_t mqd_t 
s#mq_attr struct mq_attr { long mq_flags ; long mq_maxmsg ; long mq_msgsize ; long mq_curmsgs ; long __reserved [ 4 ] ; } 
s#audit_context struct audit_context { int dummy ; int in_syscall ; e#audit_state state , current_state ; unsigned int serial ; int major ; s#timespec ctime ; unsigned long argv [ 4 ] ; long return_code ; t#u64 prio ; int return_valid ; s#audit_names preallocated_names [ 5 ] ; int name_count ; s#list_head names_list ; char * filterkey ; s#path pwd ; s#audit_aux_data * aux ; s#audit_aux_data * aux_pids ; s#__kernel_sockaddr_storage * sockaddr ; t#size_t sockaddr_len ; t#pid_t pid , ppid ; t#kuid_t uid , euid , suid , fsuid ; t#kgid_t gid , egid , sgid , fsgid ; unsigned long personality ; int arch ; t#pid_t target_pid ; t#kuid_t target_auid ; t#kuid_t target_uid ; unsigned int target_sessionid ; t#u32 target_sid ; char target_comm [ 16 ] ; s#audit_tree_refs * trees , * first_trees ; s#list_head killed_trees ; int tree_count ; int type ; union { struct { int nargs ; long args [ 6 ] ; } socketcall ; struct { t#kuid_t uid ; t#kgid_t gid ; t#umode_t mode ; t#u32 osid ; int has_perm ; t#uid_t perm_uid ; t#gid_t perm_gid ; t#umode_t perm_mode ; unsigned long qbytes ; } ipc ; struct { t#mqd_t mqdes ; s#mq_attr mqstat ; } mq_getsetattr ; struct { t#mqd_t mqdes ; int sigev_signo ; } mq_notify ; struct { t#mqd_t mqdes ; t#size_t msg_len ; unsigned int msg_prio ; s#timespec abs_timeout ; } mq_sendrecv ; struct { int oflag ; t#umode_t mode ; s#mq_attr attr ; } mq_open ; struct { t#pid_t pid ; s#audit_cap_data cap ; } capset ; struct { int fd ; int flags ; } mmap ; } ; int fds [ 2 ] ; } 
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##numa_group
s##return_instance
s##uprobe
audit_log_task_info extern void audit_log_task_info ( s#audit_buffer * , s#task_struct * ) 
audit_log_secctx extern void audit_log_secctx ( s#audit_buffer * , t#u32 ) 
audit_log_start extern s#audit_buffer * audit_log_start ( s#audit_context * , t#gfp_t , int ) 
audit_log_end extern void audit_log_end ( s#audit_buffer * ) 
audit_log_format extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void audit_log_format ( s#audit_buffer * , const char * , ... ) 
audit_log extern __attribute__ ( ( format ( printf , 4 , 5 ) ) ) void audit_log ( s#audit_context * , t#gfp_t , int , const char * , ... ) 

/* kernel/auditsc.o */
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##kiocb
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##swap_info_struct
s##backing_dev_info
s##slab
s##mempolicy
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##proc_dir_entry
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_aux_data
s##audit_tree_refs
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
__audit_inode_child extern void __audit_inode_child ( const s#inode * , const s#dentry * , const unsigned char ) 

/* kernel/capability.o */
__cap_empty_set extern const t#kernel_cap_t __cap_empty_set 
ns_capable extern t#bool ns_capable ( s#user_namespace * , int ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
file_ns_capable extern t#bool file_ns_capable ( const s#file * , s#user_namespace * , int ) 
capable extern t#bool capable ( int ) 
capable_wrt_inode_uidgid extern t#bool capable_wrt_inode_uidgid ( const s#inode * , int ) 

/* kernel/cgroup.o */
s##posix_acl
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##hd_struct
s##gendisk
s##request_queue
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sec_path
s##neighbour
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##cdev
cgroup_is_descendant t#bool cgroup_is_descendant ( s#cgroup * , s#cgroup * ) 
cgroup_path int cgroup_path ( const s#cgroup * , char * , int ) 
task_cgroup_path int task_cgroup_path ( s#task_struct * , char * , t#size_t ) 
cgroup_taskset_first s#task_struct * cgroup_taskset_first ( s#cgroup_taskset * ) 
cgroup_taskset_next s#task_struct * cgroup_taskset_next ( s#cgroup_taskset * ) 
cgroup_taskset_cur_css s#cgroup_subsys_state * cgroup_taskset_cur_css ( s#cgroup_taskset * , int ) 
cgroup_taskset_size int cgroup_taskset_size ( s#cgroup_taskset * ) 
cgroup_attach_task_all int cgroup_attach_task_all ( s#task_struct * , s#task_struct * ) 
cgroup_add_cftypes int cgroup_add_cftypes ( s#cgroup_subsys * , s#cftype * ) 
css_next_child s#cgroup_subsys_state * css_next_child ( s#cgroup_subsys_state * , s#cgroup_subsys_state * ) 
css_next_descendant_pre s#cgroup_subsys_state * css_next_descendant_pre ( s#cgroup_subsys_state * , s#cgroup_subsys_state * ) 
css_rightmost_descendant s#cgroup_subsys_state * css_rightmost_descendant ( s#cgroup_subsys_state * ) 
css_next_descendant_post s#cgroup_subsys_state * css_next_descendant_post ( s#cgroup_subsys_state * , s#cgroup_subsys_state * ) 
cgroup_load_subsys extern int cgroup_load_subsys ( s#cgroup_subsys * ) 
cgroup_unload_subsys extern void cgroup_unload_subsys ( s#cgroup_subsys * ) 
css_id unsigned short css_id ( s#cgroup_subsys_state * ) 
free_css_id void free_css_id ( s#cgroup_subsys * , s#cgroup_subsys_state * ) 
css_lookup s#cgroup_subsys_state * css_lookup ( s#cgroup_subsys * , int ) 

/* kernel/compat.o */
t#compat_time_t typedef t#s32 compat_time_t 
s#compat_timeval struct compat_timeval { t#compat_time_t tv_sec ; t#s32 tv_usec ; } 
get_compat_timeval extern int get_compat_timeval ( s#timeval * , const s#compat_timeval * ) 
put_compat_timeval extern int put_compat_timeval ( const s#timeval * , s#compat_timeval * ) 
s#compat_timespec struct compat_timespec { t#compat_time_t tv_sec ; t#s32 tv_nsec ; } 
get_compat_timespec extern int get_compat_timespec ( s#timespec * , const s#compat_timespec * ) 
put_compat_timespec extern int put_compat_timespec ( const s#timespec * , s#compat_timespec * ) 
compat_get_timeval extern int compat_get_timeval ( s#timeval * , const void * ) 
compat_put_timeval extern int compat_put_timeval ( const s#timeval * , void * ) 
compat_get_timespec extern int compat_get_timespec ( s#timespec * , const void * ) 
compat_put_timespec extern int compat_put_timespec ( const s#timespec * , void * ) 
t#compat_sigset_word typedef t#u32 compat_sigset_word 
t#compat_sigset_t typedef struct { t#compat_sigset_word sig [ ( 64 / 32 ) ] ; } compat_sigset_t 
sigset_from_compat extern void sigset_from_compat ( t#sigset_t * , const t#compat_sigset_t * ) 
compat_alloc_user_space extern void * compat_alloc_user_space ( unsigned long ) 

/* kernel/cpu.o */
get_online_cpus extern void get_online_cpus ( void ) 
put_online_cpus extern void put_online_cpus ( void ) 
register_cpu_notifier extern int register_cpu_notifier ( s#notifier_block * ) 
unregister_cpu_notifier extern void unregister_cpu_notifier ( s#notifier_block * ) 
cpu_down int cpu_down ( unsigned int ) 
cpu_up int cpu_up ( unsigned int ) 
cpu_bit_bitmap extern const unsigned long cpu_bit_bitmap [ 64 + 1 ] [ ( ( ( 2048 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] 
cpu_all_bits extern const unsigned long cpu_all_bits [ ( ( ( 2048 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] 
cpu_possible_mask extern const s#cpumask * const cpu_possible_mask 
cpu_online_mask extern const s#cpumask * const cpu_online_mask 
cpu_present_mask extern const s#cpumask * const cpu_present_mask 
cpu_active_mask extern const s#cpumask * const cpu_active_mask 

/* kernel/cpuset.o */
cpuset_mem_spread_node extern int cpuset_mem_spread_node ( void ) 

/* kernel/cred.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##sock
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sec_path
s##neighbour
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
__put_cred extern void __put_cred ( s#cred * ) 
prepare_creds extern s#cred * prepare_creds ( void ) 
commit_creds extern int commit_creds ( s#cred * ) 
abort_creds extern void abort_creds ( s#cred * ) 
override_creds extern const s#cred * override_creds ( const s#cred * ) 
revert_creds extern void revert_creds ( const s#cred * ) 
prepare_kernel_cred extern s#cred * prepare_kernel_cred ( s#task_struct * ) 
set_security_override extern int set_security_override ( s#cred * , t#u32 ) 
set_security_override_from_ctx extern int set_security_override_from_ctx ( s#cred * , const char * ) 
set_create_files_as extern int set_create_files_as ( s#cred * , s#inode * ) 

/* kernel/debug/debug_core.o */
kgdb_connected extern int kgdb_connected 
kgdb_active extern t#atomic_t kgdb_active 
kgdb_schedule_breakpoint extern void kgdb_schedule_breakpoint ( void ) 
s#kgdb_io struct kgdb_io { const char * name ; int ( * read_char ) ( void ) ; void ( * write_char ) ( t#u8 ) ; void ( * flush ) ( void ) ; int ( * init ) ( void ) ; void ( * pre_exception ) ( void ) ; void ( * post_exception ) ( void ) ; int is_console ; } 
kgdb_register_io_module extern int kgdb_register_io_module ( s#kgdb_io * ) 
kgdb_unregister_io_module extern void kgdb_unregister_io_module ( s#kgdb_io * ) 
kgdb_breakpoint void kgdb_breakpoint ( void ) 

/* kernel/debug/kdb/kdb_debugger.o */
t#get_char_func typedef int ( * get_char_func ) ( void ) 
kdb_poll_funcs extern t#get_char_func kdb_poll_funcs [ ] 
kdb_poll_idx extern int kdb_poll_idx 

/* kernel/debug/kdb/kdb_io.o */
kdb_printf extern __attribute__ ( ( format ( printf , 1 , 2 ) ) ) int kdb_printf ( const char * , ... ) 

/* kernel/debug/kdb/kdb_keyboard.o */
kdb_get_kbd_char extern int kdb_get_kbd_char ( void ) 

/* kernel/debug/kdb/kdb_main.o */
kdb_grepping_flag extern int kdb_grepping_flag 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##optimistic_spin_queue
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
kdb_current_task extern s#task_struct * kdb_current_task 
t#kdb_func_t typedef int ( * kdb_func_t ) ( int , const char * * ) 
t#kdb_repeat_t typedef enum { KDB_REPEAT_NONE = 0 , KDB_REPEAT_NO_ARGS , KDB_REPEAT_WITH_ARGS , } kdb_repeat_t 
kdb_register_repeat extern int kdb_register_repeat ( char * , t#kdb_func_t , char * , char * , short , t#kdb_repeat_t ) 
kdb_register extern int kdb_register ( char * , t#kdb_func_t , char * , char * , short ) 
kdb_unregister extern int kdb_unregister ( char * ) 

/* kernel/debug/kdb/kdb_support.o */
s#__ksymtab struct __ksymtab { unsigned long value ; const char * mod_name ; unsigned long mod_start ; unsigned long mod_end ; const char * sec_name ; unsigned long sec_start ; unsigned long sec_end ; const char * sym_name ; unsigned long sym_start ; unsigned long sym_end ; } 
t#kdb_symtab_t typedef s#__ksymtab kdb_symtab_t 
kdbgetsymval extern int kdbgetsymval ( const char * , t#kdb_symtab_t * ) 

/* kernel/delayacct.o */
delayacct_on extern int delayacct_on 

/* kernel/dma.o */
request_dma extern int request_dma ( unsigned int , const char * ) 
free_dma extern void free_dma ( unsigned int ) 
dma_spin_lock extern t#spinlock_t dma_spin_lock 

/* kernel/events/core.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##module
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s#perf_event_mmap_page struct perf_event_mmap_page { t#__u32 version ; t#__u32 compat_version ; t#__u32 lock ; t#__u32 index ; t#__s64 offset ; t#__u64 time_enabled ; t#__u64 time_running ; union { t#__u64 capabilities ; struct { t#__u64 cap_bit0 : 1 , cap_bit0_is_deprecated : 1 , cap_user_rdpmc : 1 , cap_user_time : 1 , cap_user_time_zero : 1 , cap_____res : 59 ; } ; } ; t#__u16 pmc_width ; t#__u16 time_shift ; t#__u32 time_mult ; t#__u64 time_offset ; t#__u64 time_zero ; t#__u32 size ; t#__u8 __reserved [ 118 * 8 + 4 ] ; t#__u64 data_head ; t#__u64 data_tail ; } 
s#ring_buffer struct ring_buffer { t#atomic_t refcount ; s#callback_head callback_head ; int nr_pages ; int overwrite ; t#atomic_t poll ; t#local_t head ; t#local_t nest ; t#local_t events ; t#local_t wakeup ; t#local_t lost ; long watermark ; t#spinlock_t event_lock ; s#list_head event_list ; t#atomic_t mmap_count ; unsigned long mmap_locked ; s#user_struct * mmap_user ; s#perf_event_mmap_page * user_page ; void * data_pages [ 0 ] ; } 
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
perf_event_disable extern void perf_event_disable ( s#perf_event * ) 
perf_event_enable extern void perf_event_enable ( s#perf_event * ) 
perf_event_refresh extern int perf_event_refresh ( s#perf_event * , int ) 
perf_event_release_kernel extern int perf_event_release_kernel ( s#perf_event * ) 
perf_event_read_value extern t#u64 perf_event_read_value ( s#perf_event * , t#u64 * , t#u64 * ) 
s#perf_guest_info_callbacks struct perf_guest_info_callbacks { int ( * is_in_guest ) ( void ) ; int ( * is_user_mode ) ( void ) ; unsigned long ( * get_guest_ip ) ( void ) ; } 
perf_register_guest_info_callbacks extern int perf_register_guest_info_callbacks ( s#perf_guest_info_callbacks * ) 
perf_unregister_guest_info_callbacks extern int perf_unregister_guest_info_callbacks ( s#perf_guest_info_callbacks * ) 
perf_swevent_get_recursion_context extern int perf_swevent_get_recursion_context ( void ) 
perf_tp_event extern void perf_tp_event ( t#u64 , t#u64 , void * , int , s#pt_regs * , s#hlist_head * , int , s#task_struct * ) 
perf_event_create_kernel_counter extern s#perf_event * perf_event_create_kernel_counter ( s#perf_event_attr * , int , s#task_struct * , t#perf_overflow_handler_t , void * ) 
perf_pmu_migrate_context extern void perf_pmu_migrate_context ( s#pmu * , int , int ) 

/* kernel/events/hw_breakpoint.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##event_filter
s##ftrace_hash
register_user_hw_breakpoint extern s#perf_event * register_user_hw_breakpoint ( s#perf_event_attr * , t#perf_overflow_handler_t , void * , s#task_struct * ) 
modify_user_hw_breakpoint extern int modify_user_hw_breakpoint ( s#perf_event * , s#perf_event_attr * ) 
unregister_hw_breakpoint extern void unregister_hw_breakpoint ( s#perf_event * ) 
register_wide_hw_breakpoint extern s#perf_event * * register_wide_hw_breakpoint ( s#perf_event_attr * , t#perf_overflow_handler_t , void * ) 
unregister_wide_hw_breakpoint extern void unregister_wide_hw_breakpoint ( s#perf_event * * ) 

/* kernel/events/uprobes.o */
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##optimistic_spin_queue
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##export_operations
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
e#uprobe_filter_ctx enum uprobe_filter_ctx { UPROBE_FILTER_REGISTER , UPROBE_FILTER_UNREGISTER , UPROBE_FILTER_MMAP , } 
s#uprobe_consumer struct uprobe_consumer { int ( * handler ) ( s#uprobe_consumer * , s#pt_regs * ) ; int ( * ret_handler ) ( s#uprobe_consumer * , unsigned long , s#pt_regs * ) ; t#bool ( * filter ) ( s#uprobe_consumer * , e#uprobe_filter_ctx , s#mm_struct * ) ; s#uprobe_consumer * next ; } 
uprobe_register extern int uprobe_register ( s#inode * , t#loff_t , s#uprobe_consumer * ) 
uprobe_unregister extern void uprobe_unregister ( s#inode * , t#loff_t , s#uprobe_consumer * ) 

/* kernel/exec_domain.o */
t#handler_t typedef void ( * handler_t ) ( int , s#pt_regs * ) 
s##map_segment
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##kmem_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##event_filter
s##ftrace_hash
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##ring_buffer_iter
s#exec_domain struct exec_domain { const char * name ; t#handler_t handler ; unsigned char pers_low ; unsigned char pers_high ; unsigned long * signal_map ; unsigned long * signal_invmap ; s#map_segment * err_map ; s#map_segment * socktype_map ; s#map_segment * sockopt_map ; s#map_segment * af_map ; s#module * module ; s#exec_domain * next ; } 
register_exec_domain extern int register_exec_domain ( s#exec_domain * ) 
unregister_exec_domain extern int unregister_exec_domain ( s#exec_domain * ) 
__set_personality extern int __set_personality ( unsigned int ) 

/* kernel/exit.o */
allow_signal extern int allow_signal ( int ) 
disallow_signal extern int disallow_signal ( int ) 
do_exit void do_exit ( long ) 
complete_and_exit void complete_and_exit ( s#completion * , long ) 

/* kernel/fork.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##optimistic_spin_queue
s##posix_acl
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##user_namespace
s##export_operations
s##device_private
s##kioctx
s##eventfd_ctx
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##cgroup_taskset
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##nameidata
s##slab
s##kioctx_table
s##sem_undo_list
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##ftrace_hash
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##proc_dir_entry
s##serial_icounter_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s#robust_list struct robust_list { s#robust_list * next ; } 
s#robust_list_head struct robust_list_head { s#robust_list list ; long futex_offset ; s#robust_list * list_op_pending ; } 
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
free_task extern void free_task ( s#task_struct * ) 
__put_task_struct extern void __put_task_struct ( s#task_struct * ) 
__mmdrop extern void __mmdrop ( s#mm_struct * ) 
mmput extern void mmput ( s#mm_struct * ) 
get_task_mm extern s#mm_struct * get_task_mm ( s#task_struct * ) 

/* kernel/freezer.o */
system_freezing_cnt extern t#atomic_t system_freezing_cnt 
pm_freezing extern t#bool pm_freezing 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
freezing_slow_path extern t#bool freezing_slow_path ( s#task_struct * ) 
__refrigerator extern t#bool __refrigerator ( t#bool ) 
set_freezable extern t#bool set_freezable ( void ) 

/* kernel/groups.o */
groups_alloc extern s#group_info * groups_alloc ( int ) 
groups_free extern void groups_free ( s#group_info * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
set_groups extern int set_groups ( s#cred * , s#group_info * ) 
set_current_groups extern int set_current_groups ( s#group_info * ) 
in_group_p extern int in_group_p ( t#kgid_t ) 
in_egroup_p extern int in_egroup_p ( t#kgid_t ) 

/* kernel/hrtimer.o */
ktime_add_safe extern t#ktime_t ktime_add_safe ( const t#ktime_t , const t#ktime_t ) 
hrtimer_forward extern t#u64 hrtimer_forward ( s#hrtimer * , t#ktime_t , t#ktime_t ) 
e#hrtimer_mode enum hrtimer_mode { HRTIMER_MODE_ABS = 0x0 , HRTIMER_MODE_REL = 0x1 , HRTIMER_MODE_PINNED = 0x02 , HRTIMER_MODE_ABS_PINNED = 0x02 , HRTIMER_MODE_REL_PINNED = 0x03 , } 
hrtimer_start_range_ns extern int hrtimer_start_range_ns ( s#hrtimer * , t#ktime_t , unsigned long , const e#hrtimer_mode ) 
hrtimer_start extern int hrtimer_start ( s#hrtimer * , t#ktime_t , const e#hrtimer_mode ) 
hrtimer_try_to_cancel extern int hrtimer_try_to_cancel ( s#hrtimer * ) 
hrtimer_cancel extern int hrtimer_cancel ( s#hrtimer * ) 
hrtimer_get_remaining extern t#ktime_t hrtimer_get_remaining ( const s#hrtimer * ) 
hrtimer_init extern void hrtimer_init ( s#hrtimer * , t#clockid_t , e#hrtimer_mode ) 
hrtimer_get_res extern int hrtimer_get_res ( const t#clockid_t , s#timespec * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##kmem_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s#hrtimer_sleeper struct hrtimer_sleeper { s#hrtimer timer ; s#task_struct * task ; } 
hrtimer_init_sleeper extern void hrtimer_init_sleeper ( s#hrtimer_sleeper * , s#task_struct * ) 
schedule_hrtimeout_range extern int schedule_hrtimeout_range ( t#ktime_t * , unsigned long , const e#hrtimer_mode ) 
schedule_hrtimeout extern int schedule_hrtimeout ( t#ktime_t * , const e#hrtimer_mode ) 

/* kernel/irq/chip.o */
s##device_node
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##proc_dir_entry
s#irqaction struct irqaction { t#irq_handler_t handler ; void * dev_id ; void * percpu_dev_id ; s#irqaction * next ; t#irq_handler_t thread_fn ; s#task_struct * thread ; unsigned int irq ; unsigned int flags ; unsigned long thread_flags ; unsigned long thread_mask ; const char * name ; s#proc_dir_entry * dir ; } 
s#irq_affinity_notify struct irq_affinity_notify { unsigned int irq ; s#kref kref ; s#work_struct work ; void ( * notify ) ( s#irq_affinity_notify * , const t#cpumask_t * ) ; void ( * release ) ( s#kref * ) ; } 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##radix_tree_node
s##pci_dev
s##seq_file
irq_set_chip extern int irq_set_chip ( unsigned int , s#irq_chip * ) 
irq_set_irq_type extern int irq_set_irq_type ( unsigned int , unsigned int ) 
irq_set_handler_data extern int irq_set_handler_data ( unsigned int , void * ) 
irq_set_chip_data extern int irq_set_chip_data ( unsigned int , void * ) 
irq_get_irq_data extern s#irq_data * irq_get_irq_data ( unsigned int ) 
handle_nested_irq extern void handle_nested_irq ( unsigned int ) 
handle_simple_irq extern void handle_simple_irq ( unsigned int , s#irq_desc * ) 
handle_level_irq extern void handle_level_irq ( unsigned int , s#irq_desc * ) 
handle_edge_irq extern void handle_edge_irq ( unsigned int , s#irq_desc * ) 
__irq_set_handler extern void __irq_set_handler ( unsigned int , t#irq_flow_handler_t , int , const char * ) 
irq_set_chip_and_handler_name extern void irq_set_chip_and_handler_name ( unsigned int , s#irq_chip * , t#irq_flow_handler_t , const char * ) 
irq_modify_status void irq_modify_status ( unsigned int , unsigned long , unsigned long ) 

/* kernel/irq/devres.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
devm_request_threaded_irq extern int devm_request_threaded_irq ( s#device * , unsigned int , t#irq_handler_t , t#irq_handler_t , unsigned long , const char * , void * ) 
devm_free_irq extern void devm_free_irq ( s#device * , unsigned int , void * ) 

/* kernel/irq/dummychip.o */
s##device_node
s##task_struct
s##proc_dir_entry
s##module
s##radix_tree_node
s##msi_desc
s##seq_file
dummy_irq_chip extern s#irq_chip dummy_irq_chip 

/* kernel/irq/generic-chip.o */
s##seq_file
s##device_node
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##proc_dir_entry
s##module
s##radix_tree_node
s##msi_desc
irq_gc_mask_set_bit void irq_gc_mask_set_bit ( s#irq_data * ) 
irq_gc_mask_clr_bit void irq_gc_mask_clr_bit ( s#irq_data * ) 
irq_gc_ack_set_bit void irq_gc_ack_set_bit ( s#irq_data * ) 
irq_alloc_generic_chip s#irq_chip_generic * irq_alloc_generic_chip ( const char * , int , unsigned int , void * , t#irq_flow_handler_t ) 
irq_alloc_domain_generic_chips int irq_alloc_domain_generic_chips ( s#irq_domain * , int , int , const char * , t#irq_flow_handler_t , unsigned int , unsigned int , e#irq_gc_flags ) 
irq_get_domain_generic_chip s#irq_chip_generic * irq_get_domain_generic_chip ( s#irq_domain * , unsigned int ) 
irq_generic_chip_ops extern s#irq_domain_ops irq_generic_chip_ops 
irq_setup_generic_chip void irq_setup_generic_chip ( s#irq_chip_generic * , t#u32 , e#irq_gc_flags , unsigned int , unsigned int ) 
irq_setup_alt_chip int irq_setup_alt_chip ( s#irq_data * , unsigned int ) 
irq_remove_generic_chip void irq_remove_generic_chip ( s#irq_chip_generic * , t#u32 , unsigned int , unsigned int ) 

/* kernel/irq/irqdesc.o */
nr_irqs extern int nr_irqs 
s##seq_file
s##device_node
s##radix_tree_node
s##msi_desc
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##proc_dir_entry
s##module
irq_to_desc extern s#irq_desc * irq_to_desc ( unsigned int ) 
generic_handle_irq int generic_handle_irq ( unsigned int ) 
irq_free_descs void irq_free_descs ( unsigned int , unsigned int ) 
__irq_alloc_descs int __irq_alloc_descs ( int , unsigned int , unsigned int , int , s#module * ) 

/* kernel/irq/irqdomain.o */
s##proc_dir_entry
s##msi_desc
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
__irq_domain_add s#irq_domain * __irq_domain_add ( s#device_node * , int , t#irq_hw_number_t , int , const s#irq_domain_ops * , void * ) 
irq_domain_remove extern void irq_domain_remove ( s#irq_domain * ) 
irq_domain_add_simple s#irq_domain * irq_domain_add_simple ( s#device_node * , unsigned int , unsigned int , const s#irq_domain_ops * , void * ) 
irq_domain_add_legacy s#irq_domain * irq_domain_add_legacy ( s#device_node * , unsigned int , unsigned int , t#irq_hw_number_t , const s#irq_domain_ops * , void * ) 
irq_find_host extern s#irq_domain * irq_find_host ( s#device_node * ) 
irq_set_default_host extern void irq_set_default_host ( s#irq_domain * ) 
irq_domain_associate extern int irq_domain_associate ( s#irq_domain * , unsigned int , t#irq_hw_number_t ) 
irq_domain_associate_many extern void irq_domain_associate_many ( s#irq_domain * , unsigned int , t#irq_hw_number_t , int ) 
irq_create_direct_mapping extern unsigned int irq_create_direct_mapping ( s#irq_domain * ) 
irq_create_mapping extern unsigned int irq_create_mapping ( s#irq_domain * , t#irq_hw_number_t ) 
irq_create_strict_mappings extern int irq_create_strict_mappings ( s#irq_domain * , unsigned int , t#irq_hw_number_t , int ) 
irq_create_of_mapping extern unsigned int irq_create_of_mapping ( s#device_node * , const t#u32 * , unsigned int ) 
irq_dispose_mapping extern void irq_dispose_mapping ( unsigned int ) 
irq_find_mapping extern unsigned int irq_find_mapping ( s#irq_domain * , t#irq_hw_number_t ) 
irq_domain_xlate_onecell int irq_domain_xlate_onecell ( s#irq_domain * , s#device_node * , const t#u32 * , unsigned int , t#irq_hw_number_t * , unsigned int * ) 
irq_domain_xlate_twocell int irq_domain_xlate_twocell ( s#irq_domain * , s#device_node * , const t#u32 * , unsigned int , t#irq_hw_number_t * , unsigned int * ) 
irq_domain_xlate_onetwocell int irq_domain_xlate_onetwocell ( s#irq_domain * , s#device_node * , const t#u32 * , unsigned int , t#irq_hw_number_t * , unsigned int * ) 
irq_domain_simple_ops extern const s#irq_domain_ops irq_domain_simple_ops 

/* kernel/irq/manage.o */
synchronize_irq extern void synchronize_irq ( unsigned int ) 
irq_set_affinity_hint extern int irq_set_affinity_hint ( unsigned int , const s#cpumask * ) 
irq_set_affinity_notifier extern int irq_set_affinity_notifier ( unsigned int , s#irq_affinity_notify * ) 
disable_irq_nosync extern void disable_irq_nosync ( unsigned int ) 
disable_irq extern void disable_irq ( unsigned int ) 
enable_irq extern void enable_irq ( unsigned int ) 
irq_set_irq_wake extern int irq_set_irq_wake ( unsigned int , unsigned int ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##proc_dir_entry
setup_irq extern int setup_irq ( unsigned int , s#irqaction * ) 
remove_irq extern void remove_irq ( unsigned int , s#irqaction * ) 
free_irq extern void free_irq ( unsigned int , void * ) 
request_threaded_irq extern int request_threaded_irq ( unsigned int , t#irq_handler_t , t#irq_handler_t , unsigned long , const char * , void * ) 
request_any_context_irq extern int request_any_context_irq ( unsigned int , t#irq_handler_t , unsigned long , const char * , void * ) 
enable_percpu_irq extern void enable_percpu_irq ( unsigned int , unsigned int ) 
disable_percpu_irq extern void disable_percpu_irq ( unsigned int ) 

/* kernel/irq/pm.o */
suspend_device_irqs extern void suspend_device_irqs ( void ) 
resume_device_irqs extern void resume_device_irqs ( void ) 

/* kernel/irq_work.o */
irq_work_queue void irq_work_queue ( s#irq_work * ) 
irq_work_run void irq_work_run ( void ) 
irq_work_sync void irq_work_sync ( s#irq_work * ) 

/* kernel/jump_label.o */
s##static_key_mod
static_key_slow_inc extern void static_key_slow_inc ( s#static_key * ) 
static_key_slow_dec extern void static_key_slow_dec ( s#static_key * ) 
s##tvec_base
s##workqueue_struct
s#static_key_deferred struct static_key_deferred { s#static_key key ; unsigned long timeout ; s#delayed_work work ; } 
static_key_slow_dec_deferred extern void static_key_slow_dec_deferred ( s#static_key_deferred * ) 
jump_label_rate_limit extern void jump_label_rate_limit ( s#static_key_deferred * , unsigned long ) 

/* kernel/kallsyms.o */
kallsyms_lookup_name unsigned long kallsyms_lookup_name ( const char * ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
kallsyms_on_each_symbol int kallsyms_on_each_symbol ( int ( * ) ( void * , const char * , s#module * , unsigned long ) , void * ) 
sprint_symbol extern int sprint_symbol ( char * , unsigned long ) 
sprint_symbol_no_offset extern int sprint_symbol_no_offset ( char * , unsigned long ) 
__print_symbol extern void __print_symbol ( const char * , unsigned long ) 

/* kernel/kmod.o */
__request_module extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int __request_module ( t#bool , const char * , ... ) 
usermodehelper_read_trylock extern int usermodehelper_read_trylock ( void ) 
usermodehelper_read_lock_wait extern long usermodehelper_read_lock_wait ( long ) 
usermodehelper_read_unlock extern void usermodehelper_read_unlock ( void ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##optimistic_spin_queue
s##ring_buffer_iter
s##event_filter
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##radix_tree_node
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s#subprocess_info struct subprocess_info { s#work_struct work ; s#completion * complete ; char * path ; char * * argv ; char * * envp ; int wait ; int retval ; int ( * init ) ( s#subprocess_info * , s#cred * ) ; void ( * cleanup ) ( s#subprocess_info * ) ; void * data ; } 
call_usermodehelper_setup extern s#subprocess_info * call_usermodehelper_setup ( char * , char * * , char * * , t#gfp_t , int ( * ) ( s#subprocess_info * , s#cred * ) , void ( * ) ( s#subprocess_info * ) , void * ) 
call_usermodehelper_exec extern int call_usermodehelper_exec ( s#subprocess_info * , int ) 
call_usermodehelper extern int call_usermodehelper ( char * , char * * , char * * , int ) 

/* kernel/kprobes.o */
t#ppc_opcode_t typedef t#u32 ppc_opcode_t 
t#kprobe_opcode_t typedef t#ppc_opcode_t kprobe_opcode_t 
t#kprobe_pre_handler_t typedef int ( * kprobe_pre_handler_t ) ( s#kprobe * , s#pt_regs * ) 
t#kprobe_post_handler_t typedef void ( * kprobe_post_handler_t ) ( s#kprobe * , s#pt_regs * , unsigned long ) 
t#kprobe_fault_handler_t typedef int ( * kprobe_fault_handler_t ) ( s#kprobe * , s#pt_regs * , int ) 
t#kprobe_break_handler_t typedef int ( * kprobe_break_handler_t ) ( s#kprobe * , s#pt_regs * ) 
s#arch_specific_insn struct arch_specific_insn { t#kprobe_opcode_t * insn ; int boostable ; } 
s#kprobe struct kprobe { s#hlist_node hlist ; s#list_head list ; unsigned long nmissed ; t#kprobe_opcode_t * addr ; const char * symbol_name ; unsigned int offset ; t#kprobe_pre_handler_t pre_handler ; t#kprobe_post_handler_t post_handler ; t#kprobe_fault_handler_t fault_handler ; t#kprobe_break_handler_t break_handler ; t#kprobe_opcode_t opcode ; s#arch_specific_insn ainsn ; t#u32 flags ; } 
register_kprobe int register_kprobe ( s#kprobe * ) 
register_kprobes int register_kprobes ( s#kprobe * * , int ) 
unregister_kprobe void unregister_kprobe ( s#kprobe * ) 
unregister_kprobes void unregister_kprobes ( s#kprobe * * , int ) 
s#jprobe struct jprobe { s#kprobe kp ; void * entry ; } 
register_jprobes int register_jprobes ( s#jprobe * * , int ) 
register_jprobe int register_jprobe ( s#jprobe * ) 
unregister_jprobe void unregister_jprobe ( s#jprobe * ) 
unregister_jprobes void unregister_jprobes ( s#jprobe * * , int ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s#kretprobe_instance struct kretprobe_instance { s#hlist_node hlist ; s#kretprobe * rp ; t#kprobe_opcode_t * ret_addr ; s#task_struct * task ; char data [ 0 ] ; } 
t#kretprobe_handler_t typedef int ( * kretprobe_handler_t ) ( s#kretprobe_instance * , s#pt_regs * ) 
s#kretprobe struct kretprobe { s#kprobe kp ; t#kretprobe_handler_t handler ; t#kretprobe_handler_t entry_handler ; int maxactive ; int nmissed ; t#size_t data_size ; s#hlist_head free_instances ; t#raw_spinlock_t lock ; } 
register_kretprobe int register_kretprobe ( s#kretprobe * ) 
register_kretprobes int register_kretprobes ( s#kretprobe * * , int ) 
unregister_kretprobe void unregister_kretprobe ( s#kretprobe * ) 
unregister_kretprobes void unregister_kretprobes ( s#kretprobe * * , int ) 
disable_kprobe int disable_kprobe ( s#kprobe * ) 
enable_kprobe int enable_kprobe ( s#kprobe * ) 
jprobe_return void jprobe_return ( void ) 

/* kernel/ksysfs.o */
s##sock
s##sysfs_dirent
kernel_kobj extern s#kobject * kernel_kobj 

/* kernel/kthread.o */
kthread_should_stop t#bool kthread_should_stop ( void ) 
kthread_freezable_should_stop t#bool kthread_freezable_should_stop ( t#bool * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##optimistic_spin_queue
s##module
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##kioctx_table
s##mmu_notifier_mm
s##vfsmount
s##dentry
s##bsd_acct_struct
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
kthread_create_on_node __attribute__ ( ( format ( printf , 4 , 5 ) ) ) s#task_struct * kthread_create_on_node ( int ( * ) ( void * ) , void * , int , const char [ ] , ... ) 
kthread_bind void kthread_bind ( s#task_struct * , unsigned int ) 
kthread_stop int kthread_stop ( s#task_struct * ) 
t#kthread_work_func_t typedef void ( * kthread_work_func_t ) ( s#kthread_work * ) 
s#kthread_work struct kthread_work { s#list_head node ; t#kthread_work_func_t func ; t#wait_queue_head_t done ; s#kthread_worker * worker ; } 
s#kthread_worker struct kthread_worker { t#spinlock_t lock ; s#list_head work_list ; s#task_struct * task ; s#kthread_work * current_work ; } 
__init_kthread_worker extern void __init_kthread_worker ( s#kthread_worker * , const char * , s#lock_class_key * ) 
kthread_worker_fn int kthread_worker_fn ( void * ) 
queue_kthread_work t#bool queue_kthread_work ( s#kthread_worker * , s#kthread_work * ) 
flush_kthread_work void flush_kthread_work ( s#kthread_work * ) 
flush_kthread_worker void flush_kthread_worker ( s#kthread_worker * ) 

/* kernel/locking/lglock.o */
s#lglock struct lglock { t#arch_spinlock_t * lock ; } 
lg_lock_init void lg_lock_init ( s#lglock * , char * ) 
lg_local_lock void lg_local_lock ( s#lglock * ) 
lg_local_unlock void lg_local_unlock ( s#lglock * ) 
lg_local_lock_cpu void lg_local_lock_cpu ( s#lglock * , int ) 
lg_local_unlock_cpu void lg_local_unlock_cpu ( s#lglock * , int ) 
lg_global_lock void lg_global_lock ( s#lglock * ) 
lg_global_unlock void lg_global_unlock ( s#lglock * ) 

/* kernel/locking/mutex.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s#optimistic_spin_queue struct optimistic_spin_queue { s#optimistic_spin_queue * next , * prev ; int locked ; } 
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
__mutex_init extern void __mutex_init ( s#mutex * , const char * , s#lock_class_key * ) 
mutex_lock extern void mutex_lock ( s#mutex * ) 
mutex_unlock extern void mutex_unlock ( s#mutex * ) 
ww_mutex_unlock extern void ww_mutex_unlock ( s#ww_mutex * ) 
mutex_lock_interruptible extern int mutex_lock_interruptible ( s#mutex * ) 
mutex_lock_killable extern int mutex_lock_killable ( s#mutex * ) 
mutex_trylock extern int mutex_trylock ( s#mutex * ) 
__ww_mutex_lock extern int __ww_mutex_lock ( s#ww_mutex * , s#ww_acquire_ctx * ) 
__ww_mutex_lock_interruptible extern int __ww_mutex_lock_interruptible ( s#ww_mutex * , s#ww_acquire_ctx * ) 
atomic_dec_and_mutex_lock extern int atomic_dec_and_mutex_lock ( t#atomic_t * , s#mutex * ) 

/* kernel/locking/rtmutex.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s#rt_mutex_waiter struct rt_mutex_waiter { s#plist_node list_entry ; s#plist_node pi_list_entry ; s#task_struct * task ; s#rt_mutex * lock ; } 
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
rt_mutex_lock extern void rt_mutex_lock ( s#rt_mutex * ) 
rt_mutex_lock_interruptible extern int rt_mutex_lock_interruptible ( s#rt_mutex * , int ) 
rt_mutex_timed_lock extern int rt_mutex_timed_lock ( s#rt_mutex * , s#hrtimer_sleeper * , int ) 
rt_mutex_trylock extern int rt_mutex_trylock ( s#rt_mutex * ) 
rt_mutex_unlock extern void rt_mutex_unlock ( s#rt_mutex * ) 
rt_mutex_destroy extern void rt_mutex_destroy ( s#rt_mutex * ) 
__rt_mutex_init extern void __rt_mutex_init ( s#rt_mutex * , const char * ) 

/* kernel/locking/rwsem.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
down_read extern void down_read ( s#rw_semaphore * ) 
down_read_trylock extern int down_read_trylock ( s#rw_semaphore * ) 
down_write extern void down_write ( s#rw_semaphore * ) 
down_write_trylock extern int down_write_trylock ( s#rw_semaphore * ) 
up_read extern void up_read ( s#rw_semaphore * ) 
up_write extern void up_write ( s#rw_semaphore * ) 
downgrade_write extern void downgrade_write ( s#rw_semaphore * ) 

/* kernel/locking/rwsem-xadd.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
__init_rwsem extern void __init_rwsem ( s#rw_semaphore * , const char * , s#lock_class_key * ) 
rwsem_down_read_failed extern s#rw_semaphore * rwsem_down_read_failed ( s#rw_semaphore * ) 
rwsem_down_write_failed extern s#rw_semaphore * rwsem_down_write_failed ( s#rw_semaphore * ) 
rwsem_wake extern s#rw_semaphore * rwsem_wake ( s#rw_semaphore * ) 
rwsem_downgrade_wake extern s#rw_semaphore * rwsem_downgrade_wake ( s#rw_semaphore * ) 

/* kernel/locking/semaphore.o */
down extern void down ( s#semaphore * ) 
down_interruptible extern int down_interruptible ( s#semaphore * ) 
down_killable extern int down_killable ( s#semaphore * ) 
down_trylock extern int down_trylock ( s#semaphore * ) 
down_timeout extern int down_timeout ( s#semaphore * , long ) 
up extern void up ( s#semaphore * ) 

/* kernel/locking/spinlock.o */
_raw_spin_trylock int __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_spin_trylock ( t#raw_spinlock_t * ) 
_raw_spin_trylock_bh int __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_spin_trylock_bh ( t#raw_spinlock_t * ) 
_raw_spin_lock void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_spin_lock ( t#raw_spinlock_t * ) 
_raw_spin_lock_irqsave unsigned long __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_spin_lock_irqsave ( t#raw_spinlock_t * ) 
_raw_spin_lock_irq void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_spin_lock_irq ( t#raw_spinlock_t * ) 
_raw_spin_lock_bh void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_spin_lock_bh ( t#raw_spinlock_t * ) 
_raw_spin_unlock_irqrestore void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_spin_unlock_irqrestore ( t#raw_spinlock_t * , unsigned long ) 
_raw_spin_unlock_bh void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_spin_unlock_bh ( t#raw_spinlock_t * ) 
_raw_read_trylock int __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_read_trylock ( t#rwlock_t * ) 
_raw_read_lock void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_read_lock ( t#rwlock_t * ) 
_raw_read_lock_irqsave unsigned long __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_read_lock_irqsave ( t#rwlock_t * ) 
_raw_read_lock_irq void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_read_lock_irq ( t#rwlock_t * ) 
_raw_read_lock_bh void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_read_lock_bh ( t#rwlock_t * ) 
_raw_read_unlock_irqrestore void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_read_unlock_irqrestore ( t#rwlock_t * , unsigned long ) 
_raw_read_unlock_bh void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_read_unlock_bh ( t#rwlock_t * ) 
_raw_write_trylock int __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_write_trylock ( t#rwlock_t * ) 
_raw_write_lock void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_write_lock ( t#rwlock_t * ) 
_raw_write_lock_irqsave unsigned long __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_write_lock_irqsave ( t#rwlock_t * ) 
_raw_write_lock_irq void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_write_lock_irq ( t#rwlock_t * ) 
_raw_write_lock_bh void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_write_lock_bh ( t#rwlock_t * ) 
_raw_write_unlock_irqrestore void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_write_unlock_irqrestore ( t#rwlock_t * , unsigned long ) 
_raw_write_unlock_bh void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_write_unlock_bh ( t#rwlock_t * ) 
in_lock_functions int in_lock_functions ( unsigned long ) 

/* kernel/module.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
module_mutex extern s#mutex module_mutex 
register_module_notifier int register_module_notifier ( s#notifier_block * ) 
unregister_module_notifier int unregister_module_notifier ( s#notifier_block * ) 
__module_put_and_exit extern void __module_put_and_exit ( s#module * , long ) 
s#symsearch struct symsearch { const s#kernel_symbol * start , * stop ; const unsigned long * crcs ; enum { NOT_GPL_ONLY , GPL_ONLY , WILL_BE_GPL_ONLY , } licence ; t#bool unused ; } 
each_symbol_section t#bool each_symbol_section ( t#bool ( * ) ( const s#symsearch * , s#module * , void * ) , void * ) 
find_symbol const s#kernel_symbol * find_symbol ( const char * , s#module * * , const unsigned long * * , t#bool , t#bool ) 
find_module s#module * find_module ( const char * ) 
__tracepoint_module_get extern s#tracepoint __tracepoint_module_get 
ref_module int ref_module ( s#module * , s#module * ) 
module_refcount unsigned long module_refcount ( s#module * ) 
__symbol_put void __symbol_put ( const char * ) 
symbol_put_addr void symbol_put_addr ( void * ) 
__module_get extern void __module_get ( s#module * ) 
try_module_get extern t#bool try_module_get ( s#module * ) 
module_put extern void module_put ( s#module * ) 
__symbol_get void * __symbol_get ( const char * ) 
__module_address s#module * __module_address ( unsigned long ) 
__module_text_address s#module * __module_text_address ( unsigned long ) 
s#modversion_info struct modversion_info { unsigned long crc ; char name [ ( 64 - sizeof ( unsigned long ) ) ] ; } 
module_layout void module_layout ( s#module * , s#modversion_info * , s#kernel_param * , s#kernel_symbol * , s#tracepoint * const * ) 
secure_modules extern t#bool secure_modules ( void ) 

/* kernel/notifier.o */
atomic_notifier_chain_register extern int atomic_notifier_chain_register ( s#atomic_notifier_head * , s#notifier_block * ) 
atomic_notifier_chain_unregister extern int atomic_notifier_chain_unregister ( s#atomic_notifier_head * , s#notifier_block * ) 
__atomic_notifier_call_chain extern int __atomic_notifier_call_chain ( s#atomic_notifier_head * , unsigned long , void * , int , int * ) 
atomic_notifier_call_chain extern int atomic_notifier_call_chain ( s#atomic_notifier_head * , unsigned long , void * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##optimistic_spin_queue
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##kmem_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
blocking_notifier_chain_register extern int blocking_notifier_chain_register ( s#blocking_notifier_head * , s#notifier_block * ) 
blocking_notifier_chain_cond_register extern int blocking_notifier_chain_cond_register ( s#blocking_notifier_head * , s#notifier_block * ) 
blocking_notifier_chain_unregister extern int blocking_notifier_chain_unregister ( s#blocking_notifier_head * , s#notifier_block * ) 
__blocking_notifier_call_chain extern int __blocking_notifier_call_chain ( s#blocking_notifier_head * , unsigned long , void * , int , int * ) 
blocking_notifier_call_chain extern int blocking_notifier_call_chain ( s#blocking_notifier_head * , unsigned long , void * ) 
raw_notifier_chain_register extern int raw_notifier_chain_register ( s#raw_notifier_head * , s#notifier_block * ) 
raw_notifier_chain_unregister extern int raw_notifier_chain_unregister ( s#raw_notifier_head * , s#notifier_block * ) 
__raw_notifier_call_chain extern int __raw_notifier_call_chain ( s#raw_notifier_head * , unsigned long , void * , int , int * ) 
raw_notifier_call_chain extern int raw_notifier_call_chain ( s#raw_notifier_head * , unsigned long , void * ) 
s##tvec_base
s#srcu_notifier_head struct srcu_notifier_head { s#mutex mutex ; s#srcu_struct srcu ; s#notifier_block * head ; } 
srcu_notifier_chain_register extern int srcu_notifier_chain_register ( s#srcu_notifier_head * , s#notifier_block * ) 
srcu_notifier_chain_unregister extern int srcu_notifier_chain_unregister ( s#srcu_notifier_head * , s#notifier_block * ) 
__srcu_notifier_call_chain extern int __srcu_notifier_call_chain ( s#srcu_notifier_head * , unsigned long , void * , int , int * ) 
srcu_notifier_call_chain extern int srcu_notifier_call_chain ( s#srcu_notifier_head * , unsigned long , void * ) 
srcu_init_notifier_head extern void srcu_init_notifier_head ( s#srcu_notifier_head * ) 
register_die_notifier int register_die_notifier ( s#notifier_block * ) 
unregister_die_notifier int unregister_die_notifier ( s#notifier_block * ) 

/* kernel/padata.o */
s##workqueue_struct
s#padata_list struct padata_list { s#list_head list ; t#spinlock_t lock ; } 
s#padata_parallel_queue struct padata_parallel_queue { s#padata_list parallel ; s#padata_list reorder ; s#parallel_data * pd ; s#work_struct work ; t#atomic_t num_obj ; int cpu_index ; } 
s#padata_serial_queue struct padata_serial_queue { s#padata_list serial ; s#work_struct work ; s#parallel_data * pd ; } 
s#padata_cpumask struct padata_cpumask { t#cpumask_var_t pcpu ; t#cpumask_var_t cbcpu ; } 
s##tvec_base
s#parallel_data struct parallel_data { s#padata_instance * pinst ; s#padata_parallel_queue * pqueue ; s#padata_serial_queue * squeue ; t#atomic_t reorder_objects ; t#atomic_t refcnt ; s#padata_cpumask cpumask ; t#spinlock_t lock __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; t#spinlock_t seq_lock ; unsigned int seq_nr ; unsigned int processed ; s#timer_list timer ; } 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##sock
s##sysfs_dirent
s#padata_instance struct padata_instance { s#notifier_block cpu_notifier ; s#workqueue_struct * wq ; s#parallel_data * pd ; s#padata_cpumask cpumask ; s#blocking_notifier_head cpumask_change_notifier ; s#kobject kobj ; s#mutex lock ; t#u8 flags ; } 
s#padata_priv struct padata_priv { s#list_head list ; s#parallel_data * pd ; int cb_cpu ; int info ; void ( * parallel ) ( s#padata_priv * ) ; void ( * serial ) ( s#padata_priv * ) ; } 
padata_do_parallel extern int padata_do_parallel ( s#padata_instance * , s#padata_priv * , int ) 
padata_do_serial extern void padata_do_serial ( s#padata_priv * ) 
padata_register_cpumask_notifier extern int padata_register_cpumask_notifier ( s#padata_instance * , s#notifier_block * ) 
padata_unregister_cpumask_notifier extern int padata_unregister_cpumask_notifier ( s#padata_instance * , s#notifier_block * ) 
padata_set_cpumasks extern int padata_set_cpumasks ( s#padata_instance * , t#cpumask_var_t , t#cpumask_var_t ) 
padata_set_cpumask extern int padata_set_cpumask ( s#padata_instance * , int , t#cpumask_var_t ) 
padata_add_cpu extern int padata_add_cpu ( s#padata_instance * , int , int ) 
padata_remove_cpu extern int padata_remove_cpu ( s#padata_instance * , int , int ) 
padata_start extern int padata_start ( s#padata_instance * ) 
padata_stop extern void padata_stop ( s#padata_instance * ) 
padata_alloc_possible extern s#padata_instance * padata_alloc_possible ( s#workqueue_struct * ) 
padata_alloc extern s#padata_instance * padata_alloc ( s#workqueue_struct * , const s#cpumask * , const s#cpumask * ) 
padata_free extern void padata_free ( s#padata_instance * ) 

/* kernel/panic.o */
panic_timeout extern int panic_timeout 
panic_notifier_list extern s#atomic_notifier_head panic_notifier_list 
panic_blink extern long ( * panic_blink ) ( int ) 
panic __attribute__ ( ( format ( printf , 1 , 2 ) ) ) void panic ( const char * , ... ) 
test_taint extern int test_taint ( unsigned ) 
e#lockdep_ok enum lockdep_ok { LOCKDEP_STILL_OK , LOCKDEP_NOW_UNRELIABLE } 
add_taint extern void add_taint ( unsigned , e#lockdep_ok ) 

/* kernel/params.o */
param_set_byte extern int param_set_byte ( const char * , const s#kernel_param * ) 
param_get_byte extern int param_get_byte ( char * , const s#kernel_param * ) 
param_ops_byte extern s#kernel_param_ops param_ops_byte 
param_set_short extern int param_set_short ( const char * , const s#kernel_param * ) 
param_get_short extern int param_get_short ( char * , const s#kernel_param * ) 
param_ops_short extern s#kernel_param_ops param_ops_short 
param_set_ushort extern int param_set_ushort ( const char * , const s#kernel_param * ) 
param_get_ushort extern int param_get_ushort ( char * , const s#kernel_param * ) 
param_ops_ushort extern s#kernel_param_ops param_ops_ushort 
param_set_int extern int param_set_int ( const char * , const s#kernel_param * ) 
param_get_int extern int param_get_int ( char * , const s#kernel_param * ) 
param_ops_int extern s#kernel_param_ops param_ops_int 
param_set_uint extern int param_set_uint ( const char * , const s#kernel_param * ) 
param_get_uint extern int param_get_uint ( char * , const s#kernel_param * ) 
param_ops_uint extern s#kernel_param_ops param_ops_uint 
param_set_long extern int param_set_long ( const char * , const s#kernel_param * ) 
param_get_long extern int param_get_long ( char * , const s#kernel_param * ) 
param_ops_long extern s#kernel_param_ops param_ops_long 
param_set_ulong extern int param_set_ulong ( const char * , const s#kernel_param * ) 
param_get_ulong extern int param_get_ulong ( char * , const s#kernel_param * ) 
param_ops_ulong extern s#kernel_param_ops param_ops_ulong 
param_set_charp extern int param_set_charp ( const char * , const s#kernel_param * ) 
param_get_charp extern int param_get_charp ( char * , const s#kernel_param * ) 
param_ops_charp extern s#kernel_param_ops param_ops_charp 
param_set_bool extern int param_set_bool ( const char * , const s#kernel_param * ) 
param_get_bool extern int param_get_bool ( char * , const s#kernel_param * ) 
param_ops_bool extern s#kernel_param_ops param_ops_bool 
param_set_invbool extern int param_set_invbool ( const char * , const s#kernel_param * ) 
param_get_invbool extern int param_get_invbool ( char * , const s#kernel_param * ) 
param_ops_invbool extern s#kernel_param_ops param_ops_invbool 
param_set_bint extern int param_set_bint ( const char * , const s#kernel_param * ) 
param_ops_bint extern s#kernel_param_ops param_ops_bint 
param_array_ops extern s#kernel_param_ops param_array_ops 
param_set_copystring extern int param_set_copystring ( const char * , const s#kernel_param * ) 
param_get_string extern int param_get_string ( char * , const s#kernel_param * ) 
param_ops_string extern s#kernel_param_ops param_ops_string 
__kernel_param_lock extern void __kernel_param_lock ( void ) 
__kernel_param_unlock extern void __kernel_param_unlock ( void ) 

/* kernel/pid.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sec_path
s##neighbour
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##bsd_acct_struct
init_pid_ns extern s#pid_namespace init_pid_ns 
put_pid extern void put_pid ( s#pid * ) 
find_pid_ns extern s#pid * find_pid_ns ( int , s#pid_namespace * ) 
find_vpid extern s#pid * find_vpid ( int ) 
pid_task extern s#task_struct * pid_task ( s#pid * , e#pid_type ) 
get_task_pid extern s#pid * get_task_pid ( s#task_struct * , e#pid_type ) 
get_pid_task extern s#task_struct * get_pid_task ( s#pid * , e#pid_type ) 
find_get_pid extern s#pid * find_get_pid ( int ) 
pid_nr_ns t#pid_t pid_nr_ns ( s#pid * , s#pid_namespace * ) 
pid_vnr t#pid_t pid_vnr ( s#pid * ) 
__task_pid_nr_ns t#pid_t __task_pid_nr_ns ( s#task_struct * , e#pid_type , s#pid_namespace * ) 
task_tgid_nr_ns t#pid_t task_tgid_nr_ns ( s#task_struct * , s#pid_namespace * ) 
task_active_pid_ns extern s#pid_namespace * task_active_pid_ns ( s#task_struct * ) 

/* kernel/pid_namespace.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##bsd_acct_struct
put_pid_ns extern void put_pid_ns ( s#pid_namespace * ) 

/* kernel/posix-timers.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##sock
s##sysfs_dirent
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##tty_struct
s##taskstats
s##tty_audit_buf
posix_timer_event int posix_timer_event ( s#k_itimer * , int ) 
s##compat_timespec
s#pollfd struct pollfd { int fd ; short events ; short revents ; } 
s#restart_block struct restart_block { long ( * fn ) ( s#restart_block * ) ; union { struct { t#u32 * uaddr ; t#u32 val ; t#u32 flags ; t#u32 bitset ; t#u64 time ; t#u32 * uaddr2 ; } futex ; struct { t#clockid_t clockid ; s#timespec * rmtp ; s#compat_timespec * compat_rmtp ; t#u64 expires ; } nanosleep ; struct { s#pollfd * ufds ; int nfds ; int has_timeout ; unsigned long tv_sec ; unsigned long tv_nsec ; } poll ; } ; } 
s#k_clock struct k_clock { int ( * clock_getres ) ( const t#clockid_t , s#timespec * ) ; int ( * clock_set ) ( const t#clockid_t , const s#timespec * ) ; int ( * clock_get ) ( const t#clockid_t , s#timespec * ) ; int ( * clock_adj ) ( const t#clockid_t , s#timex * ) ; int ( * timer_create ) ( s#k_itimer * ) ; int ( * nsleep ) ( const t#clockid_t , int , s#timespec * , s#timespec * ) ; long ( * nsleep_restart ) ( s#restart_block * ) ; int ( * timer_set ) ( s#k_itimer * , int , s#itimerspec * , s#itimerspec * ) ; int ( * timer_del ) ( s#k_itimer * ) ; void ( * timer_get ) ( s#k_itimer * , s#itimerspec * ) ; } 
posix_timers_register_clock void posix_timers_register_clock ( const t#clockid_t , s#k_clock * ) 

/* kernel/power/console.o */
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##user_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##proc_dir_entry
s##serial_icounter_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
pm_vt_switch_required extern void pm_vt_switch_required ( s#device * , t#bool ) 
pm_vt_switch_unregister extern void pm_vt_switch_unregister ( s#device * ) 

/* kernel/power/hibernate.o */
system_entering_hibernation extern t#bool system_entering_hibernation ( void ) 

/* kernel/power/main.o */
register_pm_notifier extern int register_pm_notifier ( s#notifier_block * ) 
unregister_pm_notifier extern int unregister_pm_notifier ( s#notifier_block * ) 
s##workqueue_struct
pm_wq s#workqueue_struct * pm_wq 

/* kernel/power/qos.o */
pm_qos_request int pm_qos_request ( int ) 
s##tvec_base
s##workqueue_struct
pm_qos_request_active int pm_qos_request_active ( s#pm_qos_request * ) 
pm_qos_add_request void pm_qos_add_request ( s#pm_qos_request * , int , t#s32 ) 
pm_qos_update_request void pm_qos_update_request ( s#pm_qos_request * , t#s32 ) 
pm_qos_remove_request void pm_qos_remove_request ( s#pm_qos_request * ) 
pm_qos_add_notifier int pm_qos_add_notifier ( int , s#notifier_block * ) 
pm_qos_remove_notifier int pm_qos_remove_notifier ( int , s#notifier_block * ) 

/* kernel/power/suspend.o */
freeze_wake extern void freeze_wake ( void ) 
t#suspend_state_t typedef int suspend_state_t 
s#platform_suspend_ops struct platform_suspend_ops { int ( * valid ) ( t#suspend_state_t ) ; int ( * begin ) ( t#suspend_state_t ) ; int ( * prepare ) ( void ) ; int ( * prepare_late ) ( void ) ; int ( * enter ) ( t#suspend_state_t ) ; void ( * wake ) ( void ) ; void ( * finish ) ( void ) ; t#bool ( * suspend_again ) ( void ) ; void ( * end ) ( void ) ; void ( * recover ) ( void ) ; } 
suspend_set_ops extern void suspend_set_ops ( const s#platform_suspend_ops * ) 
suspend_valid_only_mem extern int suspend_valid_only_mem ( t#suspend_state_t ) 
pm_suspend extern int pm_suspend ( t#suspend_state_t ) 

/* kernel/printk/printk.o */
oops_in_progress extern int oops_in_progress 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kioctx
s##eventfd_ctx
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##event_filter
s##ftrace_hash
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##ring_buffer_iter
s##proc_dir_entry
console_drivers extern s#console * console_drivers 
console_set_on_cmdline extern int console_set_on_cmdline 
vprintk_emit __attribute__ ( ( format ( printf , 5 , 0 ) ) ) int vprintk_emit ( int , int , const char * , t#size_t , const char * , va_list args ) 
vprintk __attribute__ ( ( format ( printf , 1 , 0 ) ) ) int vprintk ( const char * , va_list args ) 
printk_emit __attribute__ ( ( format ( printf , 5 , 6 ) ) ) __attribute__ ( ( __cold__ ) ) int printk_emit ( int , int , const char * , t#size_t , const char * , ... ) 
printk __attribute__ ( ( format ( printf , 1 , 2 ) ) ) __attribute__ ( ( __cold__ ) ) int printk ( const char * , ... ) 
console_suspend_enabled extern t#bool console_suspend_enabled 
console_lock extern void console_lock ( void ) 
console_trylock extern int console_trylock ( void ) 
console_unlock extern void console_unlock ( void ) 
console_conditional_schedule extern void console_conditional_schedule ( void ) 
console_stop extern void console_stop ( s#console * ) 
console_start extern void console_start ( s#console * ) 
register_console extern void register_console ( s#console * ) 
unregister_console extern int unregister_console ( s#console * ) 
__printk_ratelimit extern int __printk_ratelimit ( const char * ) 
printk_timed_ratelimit extern t#bool printk_timed_ratelimit ( unsigned long * , unsigned int ) 
s#kmsg_dumper struct kmsg_dumper { s#list_head list ; void ( * dump ) ( s#kmsg_dumper * , e#kmsg_dump_reason ) ; e#kmsg_dump_reason max_reason ; t#bool active ; t#bool registered ; t#u32 cur_idx ; t#u32 next_idx ; t#u64 cur_seq ; t#u64 next_seq ; } 
kmsg_dump_register int kmsg_dump_register ( s#kmsg_dumper * ) 
kmsg_dump_unregister int kmsg_dump_unregister ( s#kmsg_dumper * ) 
kmsg_dump_get_line t#bool kmsg_dump_get_line ( s#kmsg_dumper * , t#bool , char * , t#size_t , t#size_t * ) 
kmsg_dump_get_buffer t#bool kmsg_dump_get_buffer ( s#kmsg_dumper * , t#bool , char * , t#size_t , t#size_t * ) 
kmsg_dump_rewind void kmsg_dump_rewind ( s#kmsg_dumper * ) 

/* kernel/profile.o */
prof_on extern int prof_on 
task_handoff_register int task_handoff_register ( s#notifier_block * ) 
task_handoff_unregister int task_handoff_unregister ( s#notifier_block * ) 
e#profile_type enum profile_type { PROFILE_TASK_EXIT , PROFILE_MUNMAP } 
profile_event_register int profile_event_register ( e#profile_type , s#notifier_block * ) 
profile_event_unregister int profile_event_unregister ( e#profile_type , s#notifier_block * ) 
profile_hits void profile_hits ( int , void * , unsigned int ) 

/* kernel/ptrace.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
t#user_regset_get_fn typedef int user_regset_get_fn ( s#task_struct * , const s#user_regset * , unsigned int , unsigned int , void * , void * ) 
t#user_regset_set_fn typedef int user_regset_set_fn ( s#task_struct * , const s#user_regset * , unsigned int , unsigned int , const void * , const void * ) 
t#user_regset_active_fn typedef int user_regset_active_fn ( s#task_struct * , const s#user_regset * ) 
t#user_regset_writeback_fn typedef int user_regset_writeback_fn ( s#task_struct * , const s#user_regset * , int ) 
s#user_regset struct user_regset { t#user_regset_get_fn * get ; t#user_regset_set_fn * set ; t#user_regset_active_fn * active ; t#user_regset_writeback_fn * writeback ; unsigned int n ; unsigned int size ; unsigned int align ; unsigned int bias ; unsigned int core_note_type ; } 
s#user_regset_view struct user_regset_view { const char * name ; const s#user_regset * regsets ; unsigned int n ; t#u32 e_flags ; t#u16 e_machine ; t#u8 ei_osabi ; } 
task_user_regset_view const s#user_regset_view * task_user_regset_view ( s#task_struct * ) 

/* kernel/rcupdate.o */
t#call_rcu_func_t typedef void call_rcu_func_t ( s#callback_head * , void ( * ) ( s#callback_head * ) ) 
wait_rcu_gp void wait_rcu_gp ( t#call_rcu_func_t ) 
do_trace_rcu_torture_read extern void do_trace_rcu_torture_read ( const char * , s#callback_head * , unsigned long , unsigned long , unsigned long ) 

/* kernel/rcutree.o */
rcu_scheduler_active extern int rcu_scheduler_active 
rcu_note_context_switch extern void rcu_note_context_switch ( int ) 
rcu_batches_completed_sched extern long rcu_batches_completed_sched ( void ) 
rcu_batches_completed_bh extern long rcu_batches_completed_bh ( void ) 
rcu_bh_force_quiescent_state extern void rcu_bh_force_quiescent_state ( void ) 
rcutorture_record_test_transition extern void rcutorture_record_test_transition ( void ) 
rcutorture_record_progress extern void rcutorture_record_progress ( unsigned long ) 
rcu_sched_force_quiescent_state extern void rcu_sched_force_quiescent_state ( void ) 
rcu_idle_enter extern void rcu_idle_enter ( void ) 
rcu_idle_exit extern void rcu_idle_exit ( void ) 
rcu_is_cpu_idle extern int rcu_is_cpu_idle ( void ) 
call_rcu_sched extern void call_rcu_sched ( s#callback_head * , void ( * ) ( s#callback_head * ) ) 
call_rcu_bh extern void call_rcu_bh ( s#callback_head * , void ( * ) ( s#callback_head * ) ) 
synchronize_sched extern void synchronize_sched ( void ) 
synchronize_rcu_bh extern void synchronize_rcu_bh ( void ) 
synchronize_sched_expedited extern void synchronize_sched_expedited ( void ) 
rcu_barrier_bh extern void rcu_barrier_bh ( void ) 
rcu_barrier_sched extern void rcu_barrier_sched ( void ) 
rcu_batches_completed extern long rcu_batches_completed ( void ) 
rcu_force_quiescent_state extern void rcu_force_quiescent_state ( void ) 
kfree_call_rcu void kfree_call_rcu ( s#callback_head * , void ( * ) ( s#callback_head * ) ) 
synchronize_rcu_expedited extern void synchronize_rcu_expedited ( void ) 
rcu_barrier extern void rcu_barrier ( void ) 

/* kernel/reboot.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##bsd_acct_struct
cad_pid extern s#pid * cad_pid 
emergency_restart extern void emergency_restart ( void ) 
register_reboot_notifier extern int register_reboot_notifier ( s#notifier_block * ) 
unregister_reboot_notifier extern int unregister_reboot_notifier ( s#notifier_block * ) 
kernel_restart extern void kernel_restart ( char * ) 
kernel_halt extern void kernel_halt ( void ) 
kernel_power_off extern void kernel_power_off ( void ) 
orderly_poweroff extern int orderly_poweroff ( t#bool ) 

/* kernel/relay.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##tvec_base
relay_buf_full extern int relay_buf_full ( s#rchan_buf * ) 
relay_reset extern void relay_reset ( s#rchan * ) 
relay_open s#rchan * relay_open ( const char * , s#dentry * , t#size_t , t#size_t , s#rchan_callbacks * , void * ) 
relay_switch_subbuf extern t#size_t relay_switch_subbuf ( s#rchan_buf * , t#size_t ) 
relay_subbufs_consumed extern void relay_subbufs_consumed ( s#rchan * , unsigned int , t#size_t ) 
relay_close extern void relay_close ( s#rchan * ) 
relay_flush extern void relay_flush ( s#rchan * ) 
relay_file_operations extern const s#file_operations relay_file_operations 

/* kernel/resource.o */
ioport_resource extern s#resource ioport_resource 
iomem_resource extern s#resource iomem_resource 
request_resource extern int request_resource ( s#resource * , s#resource * ) 
release_resource extern int release_resource ( s#resource * ) 
page_is_ram extern int page_is_ram ( unsigned long ) 
allocate_resource extern int allocate_resource ( s#resource * , s#resource * , t#resource_size_t , t#resource_size_t , t#resource_size_t , t#resource_size_t , t#resource_size_t ( * ) ( void * , const s#resource * , t#resource_size_t , t#resource_size_t ) , void * ) 
adjust_resource int adjust_resource ( s#resource * , t#resource_size_t , t#resource_size_t ) 
__request_region extern s#resource * __request_region ( s#resource * , t#resource_size_t , t#resource_size_t , const char * , int ) 
__check_region extern int __check_region ( s#resource * , t#resource_size_t , t#resource_size_t ) 
__release_region extern void __release_region ( s#resource * , t#resource_size_t , t#resource_size_t ) 
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
__devm_request_region extern s#resource * __devm_request_region ( s#device * , s#resource * , t#resource_size_t , t#resource_size_t , const char * ) 
__devm_release_region extern void __devm_release_region ( s#device * , s#resource * , t#resource_size_t , t#resource_size_t ) 

/* kernel/sched/clock.o */
sched_clock extern unsigned long long __attribute__ ( ( no_instrument_function ) ) sched_clock ( void ) 
cpu_clock extern t#u64 cpu_clock ( int ) 
local_clock extern t#u64 local_clock ( void ) 

/* kernel/sched/core.o */
s##posix_acl
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##optimistic_spin_queue
s##ring_buffer_iter
s##event_filter
s##kiocb
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##kstatfs
s##export_operations
s##tvec_base
s##workqueue_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##anon_vma
s##mempolicy
s##files_struct
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s#rt_prio_array struct rt_prio_array { unsigned long bitmap [ ( ( ( 100 + 1 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#list_head queue [ 100 ] ; } 
s#rt_rq struct rt_rq { s#rt_prio_array active ; unsigned int rt_nr_running ; struct { int curr ; int next ; } highest_prio ; unsigned long rt_nr_migratory ; unsigned long rt_nr_total ; int overloaded ; s#plist_head pushable_tasks ; int rt_queued ; int rt_throttled ; t#u64 rt_time ; t#u64 rt_runtime ; t#raw_spinlock_t rt_runtime_lock ; unsigned long rt_nr_boosted ; s#rq * rq ; s#task_group * tg ; } 
s#rt_bandwidth struct rt_bandwidth { t#raw_spinlock_t rt_runtime_lock ; t#ktime_t rt_period ; t#u64 rt_runtime ; s#hrtimer rt_period_timer ; } 
s#cfs_bandwidth struct cfs_bandwidth { t#raw_spinlock_t lock ; t#ktime_t period ; t#u64 quota , runtime ; t#s64 hierarchal_quota ; t#u64 runtime_expires ; int idle , timer_active ; s#hrtimer period_timer , slack_timer ; s#list_head throttled_cfs_rq ; int nr_periods , nr_throttled ; t#u64 throttled_time ; } 
s#task_group struct task_group { s#cgroup_subsys_state css ; s#sched_entity * * se ; s#cfs_rq * * cfs_rq ; unsigned long shares ; t#atomic_long_t load_avg ; t#atomic_t runnable_avg ; s#sched_rt_entity * * rt_se ; s#rt_rq * * rt_rq ; s#rt_bandwidth rt_bandwidth ; s#callback_head rcu ; s#list_head list ; s#task_group * parent ; s#list_head siblings ; s#list_head children ; s#cfs_bandwidth cfs_bandwidth ; } 
s#cfs_rq struct cfs_rq { s#load_weight load ; unsigned int nr_running , h_nr_running ; t#u64 exec_clock ; t#u64 min_vruntime ; s#rb_root tasks_timeline ; s#rb_node * rb_leftmost ; s#sched_entity * curr , * next , * last , * skip ; unsigned int nr_spread_over ; unsigned long runnable_load_avg , blocked_load_avg ; t#atomic64_t decay_counter ; t#u64 last_decay ; t#atomic_long_t removed_load ; t#u32 tg_runnable_contrib ; unsigned long tg_load_contrib ; unsigned long h_load ; t#u64 last_h_load_update ; s#sched_entity * h_load_next ; s#rq * rq ; int on_list ; s#list_head leaf_cfs_rq_list ; s#task_group * tg ; int runtime_enabled ; t#u64 runtime_expires ; t#s64 runtime_remaining ; t#u64 throttled_clock , throttled_clock_task ; t#u64 throttled_clock_task_time ; int throttled , throttle_count ; s#list_head throttled_list ; } 
s#cpupri_vec struct cpupri_vec { t#atomic_t count ; t#cpumask_var_t mask ; } 
s#cpupri struct cpupri { s#cpupri_vec pri_to_cpu [ ( 100 + 2 ) ] ; int * cpu_to_pri ; } 
s#root_domain struct root_domain { t#atomic_t refcount ; t#atomic_t rto_count ; s#callback_head rcu ; t#cpumask_var_t span ; t#cpumask_var_t online ; t#cpumask_var_t rto_mask ; s#cpupri cpupri ; } 
s#sched_group_power struct sched_group_power { t#atomic_t ref ; unsigned int power , power_orig ; unsigned long next_update ; int imbalance ; t#atomic_t nr_busy_cpus ; unsigned long cpumask [ 0 ] ; } 
s#sched_group struct sched_group { s#sched_group * next ; t#atomic_t ref ; unsigned int group_weight ; s#sched_group_power * sgp ; unsigned long cpumask [ 0 ] ; } 
E#CPU_MAX_IDLE_TYPES 3 
s#sched_domain struct sched_domain { s#sched_domain * parent ; s#sched_domain * child ; s#sched_group * groups ; unsigned long min_interval ; unsigned long max_interval ; unsigned int busy_factor ; unsigned int imbalance_pct ; unsigned int cache_nice_tries ; unsigned int busy_idx ; unsigned int idle_idx ; unsigned int newidle_idx ; unsigned int wake_idx ; unsigned int forkexec_idx ; unsigned int smt_gain ; int nohz_idle ; int flags ; int level ; unsigned long last_balance ; unsigned int balance_interval ; unsigned int nr_balance_failed ; t#u64 last_update ; t#u64 max_newidle_lb_cost ; unsigned long next_decay_max_lb_cost ; unsigned int lb_count [ E#CPU_MAX_IDLE_TYPES ] ; unsigned int lb_failed [ E#CPU_MAX_IDLE_TYPES ] ; unsigned int lb_balanced [ E#CPU_MAX_IDLE_TYPES ] ; unsigned int lb_imbalance [ E#CPU_MAX_IDLE_TYPES ] ; unsigned int lb_gained [ E#CPU_MAX_IDLE_TYPES ] ; unsigned int lb_hot_gained [ E#CPU_MAX_IDLE_TYPES ] ; unsigned int lb_nobusyg [ E#CPU_MAX_IDLE_TYPES ] ; unsigned int lb_nobusyq [ E#CPU_MAX_IDLE_TYPES ] ; unsigned int alb_count ; unsigned int alb_failed ; unsigned int alb_pushed ; unsigned int sbe_count ; unsigned int sbe_balanced ; unsigned int sbe_pushed ; unsigned int sbf_count ; unsigned int sbf_balanced ; unsigned int sbf_pushed ; unsigned int ttwu_wake_remote ; unsigned int ttwu_move_affine ; unsigned int ttwu_move_balance ; char * name ; union { void * private ; s#callback_head rcu ; } ; unsigned int span_weight ; unsigned long span [ 0 ] ; } 
t#cpu_stop_fn_t typedef int ( * cpu_stop_fn_t ) ( void * ) 
s##cpu_stop_done
s#cpu_stop_work struct cpu_stop_work { s#list_head list ; t#cpu_stop_fn_t fn ; void * arg ; s#cpu_stop_done * done ; } 
s#rq struct rq { t#raw_spinlock_t lock ; unsigned int nr_running ; unsigned int nr_numa_running ; unsigned int nr_preferred_running ; unsigned long cpu_load [ 5 ] ; unsigned long last_load_update_tick ; t#u64 nohz_stamp ; unsigned long nohz_flags ; int skip_clock_update ; s#load_weight load ; unsigned long nr_load_updates ; t#u64 nr_switches ; s#cfs_rq cfs ; s#rt_rq rt ; s#list_head leaf_cfs_rq_list ; s#list_head leaf_rt_rq_list ; unsigned long nr_uninterruptible ; s#task_struct * curr , * idle , * stop ; unsigned long next_balance ; s#mm_struct * prev_mm ; t#u64 clock ; t#u64 clock_task ; t#atomic_t nr_iowait ; s#root_domain * rd ; s#sched_domain * sd ; unsigned long cpu_power ; unsigned char idle_balance ; int post_schedule ; int active_balance ; int push_cpu ; s#cpu_stop_work active_balance_work ; int cpu ; int online ; s#list_head cfs_tasks ; t#u64 rt_avg ; t#u64 age_stamp ; t#u64 idle_stamp ; t#u64 avg_idle ; t#u64 max_idle_balance_cost ; unsigned long calc_load_update ; long calc_load_active ; int hrtick_csd_pending ; s#call_single_data hrtick_csd ; s#hrtimer hrtick_timer ; s#sched_info rq_sched_info ; unsigned long long rq_cpu_time ; unsigned int yld_count ; unsigned int sched_count ; unsigned int sched_goidle ; unsigned int ttwu_count ; unsigned int ttwu_local ; s#llist_head wake_list ; s#sched_avg avg ; } 
s#sched_class struct sched_class { const s#sched_class * next ; void ( * enqueue_task ) ( s#rq * , s#task_struct * , int ) ; void ( * dequeue_task ) ( s#rq * , s#task_struct * , int ) ; void ( * yield_task ) ( s#rq * ) ; t#bool ( * yield_to_task ) ( s#rq * , s#task_struct * , t#bool ) ; void ( * check_preempt_curr ) ( s#rq * , s#task_struct * , int ) ; s#task_struct * ( * pick_next_task ) ( s#rq * ) ; void ( * put_prev_task ) ( s#rq * , s#task_struct * ) ; int ( * select_task_rq ) ( s#task_struct * , int , int , int ) ; void ( * migrate_task_rq ) ( s#task_struct * , int ) ; void ( * pre_schedule ) ( s#rq * , s#task_struct * ) ; void ( * post_schedule ) ( s#rq * ) ; void ( * task_waking ) ( s#task_struct * ) ; void ( * task_woken ) ( s#rq * , s#task_struct * ) ; void ( * set_cpus_allowed ) ( s#task_struct * , const s#cpumask * ) ; void ( * rq_online ) ( s#rq * ) ; void ( * rq_offline ) ( s#rq * ) ; void ( * set_curr_task ) ( s#rq * ) ; void ( * task_tick ) ( s#rq * , s#task_struct * , int ) ; void ( * task_fork ) ( s#task_struct * ) ; void ( * switched_from ) ( s#rq * , s#task_struct * ) ; void ( * switched_to ) ( s#rq * , s#task_struct * ) ; void ( * prio_changed ) ( s#rq * , s#task_struct * , int ) ; unsigned int ( * get_rr_interval ) ( s#rq * , s#task_struct * ) ; void ( * task_move_group ) ( s#task_struct * , int ) ; } 
s##sem_undo_list
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##ftrace_hash
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sec_path
s##neighbour
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
kick_process extern void kick_process ( s#task_struct * ) 
wake_up_process extern int wake_up_process ( s#task_struct * ) 
preempt_notifier_register void preempt_notifier_register ( s#preempt_notifier * ) 
preempt_notifier_unregister void preempt_notifier_unregister ( s#preempt_notifier * ) 
E#NR_SOFTIRQS ( 0 ) + 10 
s#kernel_stat struct kernel_stat { unsigned long irqs_sum ; unsigned int softirqs [ E#NR_SOFTIRQS ] ; } 
kstat extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( s#kernel_stat ) kstat 
E#NR_STATS 10 
s#kernel_cpustat struct kernel_cpustat { t#u64 cpustat [ E#NR_STATS ] ; } 
kernel_cpustat extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( s#kernel_cpustat ) kernel_cpustat 
schedule void schedule ( void ) 
default_wake_function int default_wake_function ( t#wait_queue_t * , unsigned , int , void * ) 
complete extern void complete ( s#completion * ) 
complete_all extern void complete_all ( s#completion * ) 
wait_for_completion extern void wait_for_completion ( s#completion * ) 
wait_for_completion_timeout extern unsigned long wait_for_completion_timeout ( s#completion * , unsigned long ) 
wait_for_completion_io extern void wait_for_completion_io ( s#completion * ) 
wait_for_completion_io_timeout extern unsigned long wait_for_completion_io_timeout ( s#completion * , unsigned long ) 
wait_for_completion_interruptible extern int wait_for_completion_interruptible ( s#completion * ) 
wait_for_completion_interruptible_timeout extern long wait_for_completion_interruptible_timeout ( s#completion * , unsigned long ) 
wait_for_completion_killable extern int wait_for_completion_killable ( s#completion * ) 
wait_for_completion_killable_timeout extern long wait_for_completion_killable_timeout ( s#completion * , unsigned long ) 
try_wait_for_completion extern t#bool try_wait_for_completion ( s#completion * ) 
completion_done extern t#bool completion_done ( s#completion * ) 
interruptible_sleep_on extern void interruptible_sleep_on ( t#wait_queue_head_t * ) 
interruptible_sleep_on_timeout extern long interruptible_sleep_on_timeout ( t#wait_queue_head_t * , signed long ) 
sleep_on extern void sleep_on ( t#wait_queue_head_t * ) 
sleep_on_timeout extern long sleep_on_timeout ( t#wait_queue_head_t * , signed long ) 
set_user_nice extern void set_user_nice ( s#task_struct * , long ) 
task_nice extern int task_nice ( const s#task_struct * ) 
s#sched_param struct sched_param { int sched_priority ; } 
sched_setscheduler extern int sched_setscheduler ( s#task_struct * , int , const s#sched_param * ) 
_cond_resched extern int _cond_resched ( void ) 
__cond_resched_lock extern int __cond_resched_lock ( t#spinlock_t * ) 
__cond_resched_softirq extern int __cond_resched_softirq ( void ) 
yield void yield ( void ) 
yield_to extern t#bool yield_to ( s#task_struct * , t#bool ) 
io_schedule void io_schedule ( void ) 
set_cpus_allowed_ptr extern int set_cpus_allowed_ptr ( s#task_struct * , const s#cpumask * ) 

/* kernel/sched/proc.o */
avenrun extern unsigned long avenrun [ ] 

/* kernel/signal.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##sock
s##sysfs_dirent
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##proc_dir_entry
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_aux_data
s##audit_tree_refs
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##bsd_acct_struct
kill_pid_info_as_cred extern int kill_pid_info_as_cred ( int , s#siginfo * , s#pid * , const s#cred * , t#u32 ) 
kill_pgrp extern int kill_pgrp ( s#pid * , int , int ) 
kill_pid extern int kill_pid ( s#pid * , int , int ) 
recalc_sigpending extern void recalc_sigpending ( void ) 
dequeue_signal extern int dequeue_signal ( s#task_struct * , t#sigset_t * , t#siginfo_t * ) 
flush_signals extern void flush_signals ( s#task_struct * ) 
force_sig extern void force_sig ( int , s#task_struct * ) 
send_sig extern int send_sig ( int , s#task_struct * , int ) 
send_sig_info extern int send_sig_info ( int , s#siginfo * , s#task_struct * ) 
sigprocmask extern int sigprocmask ( int , t#sigset_t * , t#sigset_t * ) 
block_all_signals extern void block_all_signals ( int ( * ) ( void * ) , void * , t#sigset_t * ) 
unblock_all_signals extern void unblock_all_signals ( void ) 

/* kernel/smp.o */
smp_call_function_single int smp_call_function_single ( int , t#smp_call_func_t , void * , int ) 
smp_call_function_any int smp_call_function_any ( const s#cpumask * , t#smp_call_func_t , void * , int ) 
__smp_call_function_single void __smp_call_function_single ( int , s#call_single_data * , int ) 
smp_call_function_many void smp_call_function_many ( const s#cpumask * , t#smp_call_func_t , void * , t#bool ) 
smp_call_function int smp_call_function ( t#smp_call_func_t , void * , int ) 
setup_max_cpus extern unsigned int setup_max_cpus 
nr_cpu_ids extern int nr_cpu_ids 
on_each_cpu int on_each_cpu ( t#smp_call_func_t , void * , int ) 
on_each_cpu_mask void on_each_cpu_mask ( const s#cpumask * , t#smp_call_func_t , void * , t#bool ) 
on_each_cpu_cond void on_each_cpu_cond ( t#bool ( * ) ( int , void * ) , t#smp_call_func_t , void * , t#bool , t#gfp_t ) 
kick_all_cpus_sync void kick_all_cpus_sync ( void ) 

/* kernel/smpboot.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#smp_hotplug_thread struct smp_hotplug_thread { s#task_struct * * store ; s#list_head list ; int ( * thread_should_run ) ( unsigned int ) ; void ( * thread_fn ) ( unsigned int ) ; void ( * create ) ( unsigned int ) ; void ( * setup ) ( unsigned int ) ; void ( * cleanup ) ( unsigned int , t#bool ) ; void ( * park ) ( unsigned int ) ; void ( * unpark ) ( unsigned int ) ; void ( * pre_unpark ) ( unsigned int ) ; t#bool selfparking ; const char * thread_comm ; } 
smpboot_register_percpu_thread int smpboot_register_percpu_thread ( s#smp_hotplug_thread * ) 
smpboot_unregister_percpu_thread void smpboot_unregister_percpu_thread ( s#smp_hotplug_thread * ) 

/* kernel/softirq.o */
local_bh_disable extern void local_bh_disable ( void ) 
_local_bh_enable extern void _local_bh_enable ( void ) 
local_bh_enable extern void local_bh_enable ( void ) 
local_bh_enable_ip extern void local_bh_enable_ip ( unsigned long ) 
__tasklet_schedule extern void __tasklet_schedule ( s#tasklet_struct * ) 
__tasklet_hi_schedule extern void __tasklet_hi_schedule ( s#tasklet_struct * ) 
__tasklet_hi_schedule_first extern void __tasklet_hi_schedule_first ( s#tasklet_struct * ) 
tasklet_init extern void tasklet_init ( s#tasklet_struct * , void ( * ) ( unsigned long ) , unsigned long ) 
tasklet_kill extern void tasklet_kill ( s#tasklet_struct * ) 
tasklet_hrtimer_init extern void tasklet_hrtimer_init ( s#tasklet_hrtimer * , e#hrtimer_restart ( * ) ( s#hrtimer * ) , t#clockid_t , e#hrtimer_mode ) 
__send_remote_softirq extern void __send_remote_softirq ( s#call_single_data * , int , int , int ) 
send_remote_softirq extern void send_remote_softirq ( s#call_single_data * , int , int ) 

/* kernel/srcu.o */
s##tvec_base
s##workqueue_struct
init_srcu_struct int init_srcu_struct ( s#srcu_struct * ) 
cleanup_srcu_struct void cleanup_srcu_struct ( s#srcu_struct * ) 
__srcu_read_lock int __srcu_read_lock ( s#srcu_struct * ) 
__srcu_read_unlock void __srcu_read_unlock ( s#srcu_struct * , int ) 
call_srcu void call_srcu ( s#srcu_struct * , s#callback_head * , void ( * ) ( s#callback_head * ) ) 
synchronize_srcu void synchronize_srcu ( s#srcu_struct * ) 
synchronize_srcu_expedited void synchronize_srcu_expedited ( s#srcu_struct * ) 
srcu_barrier void srcu_barrier ( s#srcu_struct * ) 
srcu_batches_completed long srcu_batches_completed ( s#srcu_struct * ) 
process_srcu void process_srcu ( s#work_struct * ) 

/* kernel/stacktrace.o */
print_stack_trace extern void print_stack_trace ( s#stack_trace * , int ) 

/* kernel/stop_machine.o */
stop_machine int stop_machine ( int ( * ) ( void * ) , void * , const s#cpumask * ) 

/* kernel/sys.o */
overflowuid extern int overflowuid 
overflowgid extern int overflowgid 
fs_overflowuid extern int fs_overflowuid 
fs_overflowgid extern int fs_overflowgid 

/* kernel/sysctl.o */
proc_dointvec extern int proc_dointvec ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_dointvec_jiffies extern int proc_dointvec_jiffies ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_dointvec_minmax extern int proc_dointvec_minmax ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_dointvec_userhz_jiffies extern int proc_dointvec_userhz_jiffies ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_dointvec_ms_jiffies extern int proc_dointvec_ms_jiffies ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_dostring extern int proc_dostring ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_doulongvec_minmax extern int proc_doulongvec_minmax ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_doulongvec_ms_jiffies_minmax extern int proc_doulongvec_ms_jiffies_minmax ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 

/* kernel/system_keyring.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache
s##pid_namespace
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##seq_file
s##assoc_array_ptr
system_trusted_keyring extern s#key * system_trusted_keyring 

/* kernel/time.o */
s#timezone struct timezone { int tz_minuteswest ; int tz_dsttime ; } 
sys_tz extern s#timezone sys_tz 
s##posix_acl
s##nameidata
s##vfsmount
s##module
s##kiocb
s##iovec
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mempolicy
s##numa_group
s##pipe_inode_info
s##radix_tree_node
s##writeback_control
s##swap_info_struct
s##slab
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##hd_struct
s##gendisk
s##request_queue
s##cdev
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##workqueue_struct
current_fs_time extern s#timespec current_fs_time ( s#super_block * ) 
jiffies_to_msecs extern unsigned int jiffies_to_msecs ( const unsigned long ) 
jiffies_to_usecs extern unsigned int jiffies_to_usecs ( const unsigned long ) 
timespec_trunc extern s#timespec timespec_trunc ( s#timespec , unsigned ) 
mktime extern unsigned long mktime ( const unsigned int , const unsigned int , const unsigned int , const unsigned int , const unsigned int , const unsigned int ) 
set_normalized_timespec extern void set_normalized_timespec ( s#timespec * , t#time_t , t#s64 ) 
ns_to_timespec extern s#timespec ns_to_timespec ( const t#s64 ) 
ns_to_timeval extern s#timeval ns_to_timeval ( const t#s64 ) 
msecs_to_jiffies extern unsigned long msecs_to_jiffies ( const unsigned int ) 
usecs_to_jiffies extern unsigned long usecs_to_jiffies ( const unsigned int ) 
timespec_to_jiffies extern unsigned long timespec_to_jiffies ( const s#timespec * ) 
jiffies_to_timespec extern void jiffies_to_timespec ( const unsigned long , s#timespec * ) 
timeval_to_jiffies extern unsigned long timeval_to_jiffies ( const s#timeval * ) 
jiffies_to_timeval extern void jiffies_to_timeval ( const unsigned long , s#timeval * ) 
t#clock_t typedef t#__kernel_clock_t clock_t 
jiffies_to_clock_t extern t#clock_t jiffies_to_clock_t ( unsigned long ) 
clock_t_to_jiffies extern unsigned long clock_t_to_jiffies ( unsigned long ) 
jiffies_64_to_clock_t extern t#u64 jiffies_64_to_clock_t ( t#u64 ) 

/* kernel/time/alarmtimer.o */
alarm_expires_remaining t#ktime_t alarm_expires_remaining ( const s#alarm * ) 
alarm_init void alarm_init ( s#alarm * , e#alarmtimer_type , e#alarmtimer_restart ( * ) ( s#alarm * , t#ktime_t ) ) 
alarm_start int alarm_start ( s#alarm * , t#ktime_t ) 
alarm_start_relative int alarm_start_relative ( s#alarm * , t#ktime_t ) 
alarm_restart void alarm_restart ( s#alarm * ) 
alarm_try_to_cancel int alarm_try_to_cancel ( s#alarm * ) 
alarm_cancel int alarm_cancel ( s#alarm * ) 
alarm_forward t#u64 alarm_forward ( s#alarm * , t#ktime_t , t#ktime_t ) 
alarm_forward_now t#u64 alarm_forward_now ( s#alarm * , t#ktime_t ) 

/* kernel/time/clockevents.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
clockevent_delta2ns extern t#u64 clockevent_delta2ns ( unsigned long , s#clock_event_device * ) 
clockevents_unbind int clockevents_unbind ( s#clock_event_device * , int ) 
clockevents_register_device extern void clockevents_register_device ( s#clock_event_device * ) 
clockevents_config_and_register extern void clockevents_config_and_register ( s#clock_event_device * , t#u32 , unsigned long , unsigned long ) 
clockevents_notify extern int clockevents_notify ( unsigned long , void * ) 

/* kernel/time/clocksource.o */
s#cyclecounter struct cyclecounter { t#cycle_t ( * read ) ( const s#cyclecounter * ) ; t#cycle_t mask ; t#u32 mult ; t#u32 shift ; } 
s#timecounter struct timecounter { const s#cyclecounter * cc ; t#cycle_t cycle_last ; t#u64 nsec ; } 
timecounter_init extern void timecounter_init ( s#timecounter * , const s#cyclecounter * , t#u64 ) 
timecounter_read extern t#u64 timecounter_read ( s#timecounter * ) 
timecounter_cyc2time extern t#u64 timecounter_cyc2time ( s#timecounter * , t#cycle_t ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#clocksource struct clocksource { t#cycle_t ( * read ) ( s#clocksource * ) ; t#cycle_t cycle_last ; t#cycle_t mask ; t#u32 mult ; t#u32 shift ; t#u64 max_idle_ns ; t#u32 maxadj ; const char * name ; s#list_head list ; int rating ; int ( * enable ) ( s#clocksource * ) ; void ( * disable ) ( s#clocksource * ) ; unsigned long flags ; void ( * suspend ) ( s#clocksource * ) ; void ( * resume ) ( s#clocksource * ) ; s#module * owner ; } 
__clocksource_updatefreq_scale extern void __clocksource_updatefreq_scale ( s#clocksource * , t#u32 , t#u32 ) 
__clocksource_register_scale extern int __clocksource_register_scale ( s#clocksource * , t#u32 , t#u32 ) 
clocksource_register extern int clocksource_register ( s#clocksource * ) 
clocksource_change_rating extern void clocksource_change_rating ( s#clocksource * , int ) 
clocksource_unregister extern int clocksource_unregister ( s#clocksource * ) 

/* kernel/time/jiffies.o */
jiffies extern unsigned long volatile __attribute__ ( ( section ( ".data" ) ) ) jiffies 

/* kernel/time/posix-clock.o */
s##module
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##sock
s##sysfs_dirent
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##tty_struct
s##taskstats
s##tty_audit_buf
posix_clock_register int posix_clock_register ( s#posix_clock * , t#dev_t ) 
posix_clock_unregister void posix_clock_unregister ( s#posix_clock * ) 

/* kernel/time/tick-sched.o */
get_cpu_idle_time_us extern t#u64 get_cpu_idle_time_us ( int , t#u64 * ) 
get_cpu_iowait_time_us extern t#u64 get_cpu_iowait_time_us ( int , t#u64 * ) 
tick_nohz_idle_enter extern void tick_nohz_idle_enter ( void ) 
tick_nohz_idle_exit extern void tick_nohz_idle_exit ( void ) 

/* kernel/time/timeconv.o */
time_to_tm void time_to_tm ( t#time_t , int , s#tm * ) 

/* kernel/time/timekeeping.o */
pvclock_gtod_register_notifier extern int pvclock_gtod_register_notifier ( s#notifier_block * ) 
pvclock_gtod_unregister_notifier extern int pvclock_gtod_unregister_notifier ( s#notifier_block * ) 
__getnstimeofday extern int __getnstimeofday ( s#timespec * ) 
getnstimeofday extern void getnstimeofday ( s#timespec * ) 
ktime_get extern t#ktime_t ktime_get ( void ) 
ktime_get_ts extern void ktime_get_ts ( s#timespec * ) 
timekeeping_clocktai extern void timekeeping_clocktai ( s#timespec * ) 
ktime_get_clocktai extern t#ktime_t ktime_get_clocktai ( void ) 
do_gettimeofday extern void do_gettimeofday ( s#timeval * ) 
do_settimeofday extern int do_settimeofday ( const s#timespec * ) 
timekeeping_inject_offset extern int timekeeping_inject_offset ( s#timespec * ) 
ktime_get_real extern t#ktime_t ktime_get_real ( void ) 
getrawmonotonic extern void getrawmonotonic ( s#timespec * ) 
getboottime extern void getboottime ( s#timespec * ) 
get_monotonic_boottime extern void get_monotonic_boottime ( s#timespec * ) 
ktime_get_boottime extern t#ktime_t ktime_get_boottime ( void ) 
monotonic_to_bootbased extern void monotonic_to_bootbased ( s#timespec * ) 
get_seconds unsigned long get_seconds ( void ) 
current_kernel_time s#timespec current_kernel_time ( void ) 
ktime_get_monotonic_offset extern t#ktime_t ktime_get_monotonic_offset ( void ) 

/* kernel/timer.o */
jiffies_64 extern t#u64 __attribute__ ( ( section ( ".data" ) ) ) jiffies_64 
s##tvec_base
boot_tvec_bases extern s#tvec_base boot_tvec_bases 
__round_jiffies unsigned long __round_jiffies ( unsigned long , int ) 
__round_jiffies_relative unsigned long __round_jiffies_relative ( unsigned long , int ) 
round_jiffies unsigned long round_jiffies ( unsigned long ) 
round_jiffies_relative unsigned long round_jiffies_relative ( unsigned long ) 
__round_jiffies_up unsigned long __round_jiffies_up ( unsigned long , int ) 
__round_jiffies_up_relative unsigned long __round_jiffies_up_relative ( unsigned long , int ) 
round_jiffies_up unsigned long round_jiffies_up ( unsigned long ) 
round_jiffies_up_relative unsigned long round_jiffies_up_relative ( unsigned long ) 
set_timer_slack extern void set_timer_slack ( s#timer_list * , int ) 
init_timer_key void init_timer_key ( s#timer_list * , unsigned int , const char * , s#lock_class_key * ) 
mod_timer_pending extern int mod_timer_pending ( s#timer_list * , unsigned long ) 
mod_timer extern int mod_timer ( s#timer_list * , unsigned long ) 
mod_timer_pinned extern int mod_timer_pinned ( s#timer_list * , unsigned long ) 
add_timer extern void add_timer ( s#timer_list * ) 
add_timer_on extern void add_timer_on ( s#timer_list * , int ) 
del_timer extern int del_timer ( s#timer_list * ) 
try_to_del_timer_sync extern int try_to_del_timer_sync ( s#timer_list * ) 
del_timer_sync extern int del_timer_sync ( s#timer_list * ) 
schedule_timeout extern signed long schedule_timeout ( signed long ) 
schedule_timeout_interruptible extern signed long schedule_timeout_interruptible ( signed long ) 
schedule_timeout_killable extern signed long schedule_timeout_killable ( signed long ) 
schedule_timeout_uninterruptible extern signed long schedule_timeout_uninterruptible ( signed long ) 
msleep void msleep ( unsigned int ) 
msleep_interruptible unsigned long msleep_interruptible ( unsigned int ) 
usleep_range void usleep_range ( unsigned long , unsigned long ) 

/* kernel/trace/blktrace.o */
s##tvec_base
s##posix_acl
s##nameidata
s##vfsmount
s##module
s##kiocb
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s#trace_array_cpu struct trace_array_cpu { t#atomic_t disabled ; void * buffer_page ; unsigned long entries ; unsigned long saved_latency ; unsigned long critical_start ; unsigned long critical_end ; unsigned long critical_sequence ; unsigned long nice ; unsigned long policy ; unsigned long rt_priority ; unsigned long skipped_entries ; t#cycle_t preempt_timestamp ; t#pid_t pid ; t#kuid_t uid ; char comm [ 16 ] ; } 
s#trace_buffer struct trace_buffer { s#trace_array * tr ; s#ring_buffer * buffer ; s#trace_array_cpu * data ; t#cycle_t time_start ; int cpu ; } 
s##pipe_inode_info
s#tracer_opt struct tracer_opt { const char * name ; t#u32 bit ; } 
s#tracer_flags struct tracer_flags { t#u32 val ; s#tracer_opt * opts ; } 
s#tracer struct tracer { const char * name ; int ( * init ) ( s#trace_array * ) ; void ( * reset ) ( s#trace_array * ) ; void ( * start ) ( s#trace_array * ) ; void ( * stop ) ( s#trace_array * ) ; void ( * open ) ( s#trace_iterator * ) ; void ( * pipe_open ) ( s#trace_iterator * ) ; int ( * wait_pipe ) ( s#trace_iterator * ) ; void ( * close ) ( s#trace_iterator * ) ; void ( * pipe_close ) ( s#trace_iterator * ) ; t#ssize_t ( * read ) ( s#trace_iterator * , s#file * , char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * splice_read ) ( s#trace_iterator * , s#file * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) ; void ( * print_header ) ( s#seq_file * ) ; e#print_line_t ( * print_line ) ( s#trace_iterator * ) ; int ( * set_flag ) ( t#u32 , t#u32 , int ) ; int ( * flag_changed ) ( s#tracer * , t#u32 , int ) ; s#tracer * next ; s#tracer_flags * flags ; t#bool print_max ; t#bool enabled ; t#bool use_max_tr ; } 
s#trace_array struct trace_array { s#list_head list ; char * name ; s#trace_buffer trace_buffer ; s#trace_buffer max_buffer ; t#bool allocated_snapshot ; int buffer_disabled ; int sys_refcount_enter ; int sys_refcount_exit ; unsigned long enabled_enter_syscalls [ ( ( ( 355 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long enabled_exit_syscalls [ ( ( ( 355 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; int stop_count ; int clock_id ; s#tracer * current_trace ; unsigned int flags ; t#raw_spinlock_t start_lock ; s#dentry * dir ; s#dentry * options ; s#dentry * percpu_dir ; s#dentry * event_dir ; s#list_head systems ; s#list_head events ; t#cpumask_var_t tracing_cpumask ; int ref ; } 
s##ring_buffer_iter
t#filter_pred_fn_t typedef int ( * filter_pred_fn_t ) ( s#filter_pred * , void * ) 
t#regex_match_func typedef int ( * regex_match_func ) ( char * , s#regex * , int ) 
s#regex struct regex { char pattern [ 256 ] ; int len ; int field_len ; t#regex_match_func match ; } 
s#ftrace_event_field struct ftrace_event_field { s#list_head link ; const char * name ; const char * type ; int filter_type ; int offset ; int size ; int is_signed ; } 
s#filter_pred struct filter_pred { t#filter_pred_fn_t fn ; t#u64 val ; s#regex regex ; unsigned short * ops ; s#ftrace_event_field * field ; int offset ; int not ; int op ; unsigned short index ; unsigned short parent ; unsigned short left ; unsigned short right ; } 
s#event_filter struct event_filter { int n_preds ; int a_preds ; s#filter_pred * preds ; s#filter_pred * root ; char * filter_string ; } 
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##kstatfs
s##radix_tree_node
s##workqueue_struct
s##slab
s##export_operations
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##mempolicy
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
__trace_note_message extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void __trace_note_message ( s#blk_trace * , const char * , ... ) 
blk_trace_remove extern int blk_trace_remove ( s#request_queue * ) 
blk_trace_setup extern int blk_trace_setup ( s#request_queue * , char * , t#dev_t , s#block_device * , char * ) 
blk_trace_startstop extern int blk_trace_startstop ( s#request_queue * , int ) 
blk_add_driver_data extern void blk_add_driver_data ( s#request_queue * , s#request * , void * , t#size_t ) 
blk_fill_rwbs extern void blk_fill_rwbs ( char * , t#u32 , int ) 

/* kernel/trace/ftrace.o */
s##ftrace_hash
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ring_buffer
s##kiocb
s##iovec
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##ring_buffer_iter
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
s##slab
s##mempolicy
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
ftrace_set_filter_ip int ftrace_set_filter_ip ( s#ftrace_ops * , unsigned long , int , int ) 
ftrace_set_filter int ftrace_set_filter ( s#ftrace_ops * , unsigned char * , int , int ) 
ftrace_set_notrace int ftrace_set_notrace ( s#ftrace_ops * , unsigned char * , int , int ) 
ftrace_set_global_filter void ftrace_set_global_filter ( unsigned char * , int , int ) 
ftrace_set_global_notrace void ftrace_set_global_notrace ( unsigned char * , int , int ) 
register_ftrace_function int register_ftrace_function ( s#ftrace_ops * ) 
unregister_ftrace_function int unregister_ftrace_function ( s#ftrace_ops * ) 

/* kernel/trace/power-traces.o */
s##static_key_mod
__tracepoint_cpu_idle extern s#tracepoint __tracepoint_cpu_idle 

/* kernel/trace/ring_buffer.o */
s#ring_buffer_event struct ring_buffer_event { ; t#u32 type_len : 5 , time_delta : 27 ; ; t#u32 array [ ] ; } 
ring_buffer_event_length unsigned ring_buffer_event_length ( s#ring_buffer_event * ) 
ring_buffer_event_data void * ring_buffer_event_data ( s#ring_buffer_event * ) 
s##ring_buffer
ring_buffer_time_stamp t#u64 ring_buffer_time_stamp ( s#ring_buffer * , int ) 
ring_buffer_normalize_time_stamp void ring_buffer_normalize_time_stamp ( s#ring_buffer * , int , t#u64 * ) 
__ring_buffer_alloc s#ring_buffer * __ring_buffer_alloc ( unsigned long , unsigned , s#lock_class_key * ) 
ring_buffer_free void ring_buffer_free ( s#ring_buffer * ) 
ring_buffer_resize int ring_buffer_resize ( s#ring_buffer * , unsigned long , int ) 
ring_buffer_change_overwrite void ring_buffer_change_overwrite ( s#ring_buffer * , int ) 
ring_buffer_lock_reserve s#ring_buffer_event * ring_buffer_lock_reserve ( s#ring_buffer * , unsigned long ) 
ring_buffer_unlock_commit int ring_buffer_unlock_commit ( s#ring_buffer * , s#ring_buffer_event * ) 
ring_buffer_discard_commit void ring_buffer_discard_commit ( s#ring_buffer * , s#ring_buffer_event * ) 
ring_buffer_write int ring_buffer_write ( s#ring_buffer * , unsigned long , void * ) 
ring_buffer_record_disable void ring_buffer_record_disable ( s#ring_buffer * ) 
ring_buffer_record_enable void ring_buffer_record_enable ( s#ring_buffer * ) 
ring_buffer_record_off void ring_buffer_record_off ( s#ring_buffer * ) 
ring_buffer_record_on void ring_buffer_record_on ( s#ring_buffer * ) 
ring_buffer_record_disable_cpu void ring_buffer_record_disable_cpu ( s#ring_buffer * , int ) 
ring_buffer_record_enable_cpu void ring_buffer_record_enable_cpu ( s#ring_buffer * , int ) 
ring_buffer_oldest_event_ts t#u64 ring_buffer_oldest_event_ts ( s#ring_buffer * , int ) 
ring_buffer_bytes_cpu unsigned long ring_buffer_bytes_cpu ( s#ring_buffer * , int ) 
ring_buffer_entries_cpu unsigned long ring_buffer_entries_cpu ( s#ring_buffer * , int ) 
ring_buffer_overrun_cpu unsigned long ring_buffer_overrun_cpu ( s#ring_buffer * , int ) 
ring_buffer_commit_overrun_cpu unsigned long ring_buffer_commit_overrun_cpu ( s#ring_buffer * , int ) 
ring_buffer_dropped_events_cpu unsigned long ring_buffer_dropped_events_cpu ( s#ring_buffer * , int ) 
ring_buffer_read_events_cpu unsigned long ring_buffer_read_events_cpu ( s#ring_buffer * , int ) 
ring_buffer_entries unsigned long ring_buffer_entries ( s#ring_buffer * ) 
ring_buffer_overruns unsigned long ring_buffer_overruns ( s#ring_buffer * ) 
s##ring_buffer_iter
ring_buffer_iter_reset void ring_buffer_iter_reset ( s#ring_buffer_iter * ) 
ring_buffer_iter_empty int ring_buffer_iter_empty ( s#ring_buffer_iter * ) 
ring_buffer_peek s#ring_buffer_event * ring_buffer_peek ( s#ring_buffer * , int , t#u64 * , unsigned long * ) 
ring_buffer_iter_peek s#ring_buffer_event * ring_buffer_iter_peek ( s#ring_buffer_iter * , t#u64 * ) 
ring_buffer_consume s#ring_buffer_event * ring_buffer_consume ( s#ring_buffer * , int , t#u64 * , unsigned long * ) 
ring_buffer_read_prepare s#ring_buffer_iter * ring_buffer_read_prepare ( s#ring_buffer * , int ) 
ring_buffer_read_prepare_sync void ring_buffer_read_prepare_sync ( void ) 
ring_buffer_read_start void ring_buffer_read_start ( s#ring_buffer_iter * ) 
ring_buffer_read_finish void ring_buffer_read_finish ( s#ring_buffer_iter * ) 
ring_buffer_read s#ring_buffer_event * ring_buffer_read ( s#ring_buffer_iter * , t#u64 * ) 
ring_buffer_size unsigned long ring_buffer_size ( s#ring_buffer * , int ) 
ring_buffer_reset_cpu void ring_buffer_reset_cpu ( s#ring_buffer * , int ) 
ring_buffer_reset void ring_buffer_reset ( s#ring_buffer * ) 
ring_buffer_empty int ring_buffer_empty ( s#ring_buffer * ) 
ring_buffer_empty_cpu int ring_buffer_empty_cpu ( s#ring_buffer * , int ) 
ring_buffer_swap_cpu int ring_buffer_swap_cpu ( s#ring_buffer * , s#ring_buffer * , int ) 
ring_buffer_alloc_read_page void * ring_buffer_alloc_read_page ( s#ring_buffer * , int ) 
ring_buffer_free_read_page void ring_buffer_free_read_page ( s#ring_buffer * , void * ) 
ring_buffer_read_page int ring_buffer_read_page ( s#ring_buffer * , void * * , t#size_t , int , int ) 

/* kernel/trace/rpm-traces.o */
s##static_key_mod
__tracepoint_rpm_return_int extern s#tracepoint __tracepoint_rpm_return_int 
__tracepoint_rpm_idle extern s#tracepoint __tracepoint_rpm_idle 
__tracepoint_rpm_suspend extern s#tracepoint __tracepoint_rpm_suspend 
__tracepoint_rpm_resume extern s#tracepoint __tracepoint_rpm_resume 

/* kernel/trace/trace.o */
s##ring_buffer
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##kstatfs
s##user_namespace
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##sem_undo_list
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##ring_buffer_iter
filter_current_check_discard extern int filter_current_check_discard ( s#ring_buffer * , s#ftrace_event_call * , void * , s#ring_buffer_event * ) 
tracing_on void tracing_on ( void ) 
__trace_puts extern int __trace_puts ( unsigned long , const char * , int ) 
__trace_bputs extern int __trace_bputs ( unsigned long , const char * ) 
tracing_snapshot void tracing_snapshot ( void ) 
tracing_snapshot_alloc void tracing_snapshot_alloc ( void ) 
tracing_off void tracing_off ( void ) 
tracing_is_on int tracing_is_on ( void ) 
tracing_generic_entry_update void tracing_generic_entry_update ( s#trace_entry * , unsigned long , int ) 
trace_buffer_unlock_commit void trace_buffer_unlock_commit ( s#ring_buffer * , s#ring_buffer_event * , unsigned long , int ) 
s#event_subsystem struct event_subsystem { s#list_head list ; const char * name ; s#event_filter * filter ; int ref_count ; } 
s#ftrace_subsystem_dir struct ftrace_subsystem_dir { s#list_head list ; s#event_subsystem * subsystem ; s#trace_array * tr ; s#dentry * entry ; int ref_count ; int nr_events ; } 
s#ftrace_event_file struct ftrace_event_file { s#list_head list ; s#ftrace_event_call * event_call ; s#dentry * dir ; s#trace_array * tr ; s#ftrace_subsystem_dir * system ; unsigned long flags ; t#atomic_t sm_ref ; } 
trace_event_buffer_lock_reserve s#ring_buffer_event * trace_event_buffer_lock_reserve ( s#ring_buffer * * , s#ftrace_event_file * , int , unsigned long , unsigned long , int ) 
trace_current_buffer_lock_reserve s#ring_buffer_event * trace_current_buffer_lock_reserve ( s#ring_buffer * * , int , unsigned long , unsigned long , int ) 
trace_current_buffer_unlock_commit void trace_current_buffer_unlock_commit ( s#ring_buffer * , s#ring_buffer_event * , unsigned long , int ) 
trace_buffer_unlock_commit_regs void trace_buffer_unlock_commit_regs ( s#ring_buffer * , s#ring_buffer_event * , unsigned long , int , s#pt_regs * ) 
trace_current_buffer_discard_commit void trace_current_buffer_discard_commit ( s#ring_buffer * , s#ring_buffer_event * ) 
trace_vbprintk extern int trace_vbprintk ( unsigned long , const char * , va_list args ) 
trace_vprintk extern int trace_vprintk ( unsigned long , const char * , va_list args ) 
e#ftrace_dump_mode enum ftrace_dump_mode { DUMP_NONE , DUMP_ALL , DUMP_ORIG , } 
ftrace_dump extern void ftrace_dump ( e#ftrace_dump_mode ) 

/* kernel/trace/trace_clock.o */
trace_clock_local extern t#u64 __attribute__ ( ( no_instrument_function ) ) trace_clock_local ( void ) 

/* kernel/trace/trace_event_perf.o */
perf_trace_buf_prepare extern void * perf_trace_buf_prepare ( int , unsigned short , s#pt_regs * , int * ) 

/* kernel/trace/trace_events.o */
s##ring_buffer
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##ring_buffer_iter
trace_define_field extern int trace_define_field ( s#ftrace_event_call * , const char * , const char * , int , int , int , int ) 
trace_event_raw_init extern int trace_event_raw_init ( s#ftrace_event_call * ) 
ftrace_event_reg extern int ftrace_event_reg ( s#ftrace_event_call * , e#trace_reg , void * ) 
trace_set_clr_event int trace_set_clr_event ( const char * , const char * , int ) 

/* kernel/trace/trace_events_filter.o */
filter_match_preds extern int filter_match_preds ( s#event_filter * , void * ) 

/* kernel/trace/trace_output.o */
trace_seq_printf extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int trace_seq_printf ( s#trace_seq * , const char * , ... ) 
trace_seq_vprintf extern __attribute__ ( ( format ( printf , 2 , 0 ) ) ) int trace_seq_vprintf ( s#trace_seq * , const char * , va_list args ) 
trace_seq_putc extern int trace_seq_putc ( s#trace_seq * , unsigned char ) 
s#trace_print_flags struct trace_print_flags { unsigned long mask ; const char * name ; } 
ftrace_print_flags_seq const char * ftrace_print_flags_seq ( s#trace_seq * , const char * , unsigned long , const s#trace_print_flags * ) 
ftrace_print_symbols_seq const char * ftrace_print_symbols_seq ( s#trace_seq * , unsigned long , const s#trace_print_flags * ) 
ftrace_print_hex_seq const char * ftrace_print_hex_seq ( s#trace_seq * , const unsigned char * , int ) 
s##ring_buffer
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##ring_buffer_iter
ftrace_raw_output_prep int ftrace_raw_output_prep ( s#trace_iterator * , s#trace_event * ) 
register_ftrace_event extern int register_ftrace_event ( s#trace_event * ) 
unregister_ftrace_event extern int unregister_ftrace_event ( s#trace_event * ) 

/* kernel/trace/trace_printk.o */
__trace_bprintk extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int __trace_bprintk ( unsigned long , const char * , ... ) 
__ftrace_vbprintk extern int __ftrace_vbprintk ( unsigned long , const char * , va_list ap ) 
__trace_printk extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int __trace_printk ( unsigned long , const char * , ... ) 
__ftrace_vprintk extern int __ftrace_vprintk ( unsigned long , const char * , va_list ap ) 

/* kernel/tracepoint.o */
tracepoint_probe_register extern int tracepoint_probe_register ( const char * , void * , void * ) 
tracepoint_probe_unregister extern int tracepoint_probe_unregister ( const char * , void * , void * ) 
tracepoint_probe_register_noupdate extern int tracepoint_probe_register_noupdate ( const char * , void * , void * ) 
tracepoint_probe_unregister_noupdate extern int tracepoint_probe_unregister_noupdate ( const char * , void * , void * ) 
tracepoint_probe_update_all extern void tracepoint_probe_update_all ( void ) 
s##static_key_mod
s#tp_module struct tp_module { s#list_head list ; unsigned int num_tracepoints ; s#tracepoint * const * tracepoints_ptrs ; } 
s#tracepoint_iter struct tracepoint_iter { s#tp_module * module ; s#tracepoint * const * tracepoint ; } 
tracepoint_iter_start extern void tracepoint_iter_start ( s#tracepoint_iter * ) 
tracepoint_iter_next extern void tracepoint_iter_next ( s#tracepoint_iter * ) 
tracepoint_iter_stop extern void tracepoint_iter_stop ( s#tracepoint_iter * ) 
tracepoint_iter_reset extern void tracepoint_iter_reset ( s#tracepoint_iter * ) 

/* kernel/user.o */
init_user_ns extern s#user_namespace init_user_ns 

/* kernel/user_namespace.o */
free_user_ns extern void free_user_ns ( s#user_namespace * ) 
make_kuid extern t#kuid_t make_kuid ( s#user_namespace * , t#uid_t ) 
from_kuid extern t#uid_t from_kuid ( s#user_namespace * , t#kuid_t ) 
from_kuid_munged extern t#uid_t from_kuid_munged ( s#user_namespace * , t#kuid_t ) 
make_kgid extern t#kgid_t make_kgid ( s#user_namespace * , t#gid_t ) 
from_kgid extern t#gid_t from_kgid ( s#user_namespace * , t#kgid_t ) 
from_kgid_munged extern t#gid_t from_kgid_munged ( s#user_namespace * , t#kgid_t ) 
make_kprojid extern t#kprojid_t make_kprojid ( s#user_namespace * , t#projid_t ) 
from_kprojid extern t#projid_t from_kprojid ( s#user_namespace * , t#kprojid_t ) 
from_kprojid_munged extern t#projid_t from_kprojid_munged ( s#user_namespace * , t#kprojid_t ) 

/* kernel/wait.o */
__init_waitqueue_head extern void __init_waitqueue_head ( t#wait_queue_head_t * , const char * , s#lock_class_key * ) 
add_wait_queue extern void add_wait_queue ( t#wait_queue_head_t * , t#wait_queue_t * ) 
add_wait_queue_exclusive extern void add_wait_queue_exclusive ( t#wait_queue_head_t * , t#wait_queue_t * ) 
remove_wait_queue extern void remove_wait_queue ( t#wait_queue_head_t * , t#wait_queue_t * ) 
__wake_up void __wake_up ( t#wait_queue_head_t * , unsigned int , int , void * ) 
__wake_up_locked void __wake_up_locked ( t#wait_queue_head_t * , unsigned int , int ) 
__wake_up_locked_key void __wake_up_locked_key ( t#wait_queue_head_t * , unsigned int , void * ) 
__wake_up_sync_key void __wake_up_sync_key ( t#wait_queue_head_t * , unsigned int , int , void * ) 
__wake_up_sync void __wake_up_sync ( t#wait_queue_head_t * , unsigned int , int ) 
prepare_to_wait void prepare_to_wait ( t#wait_queue_head_t * , t#wait_queue_t * , int ) 
prepare_to_wait_exclusive void prepare_to_wait_exclusive ( t#wait_queue_head_t * , t#wait_queue_t * , int ) 
finish_wait void finish_wait ( t#wait_queue_head_t * , t#wait_queue_t * ) 
abort_exclusive_wait void abort_exclusive_wait ( t#wait_queue_head_t * , t#wait_queue_t * , unsigned int , void * ) 
autoremove_wake_function int autoremove_wake_function ( t#wait_queue_t * , unsigned , int , void * ) 
wake_bit_function int wake_bit_function ( t#wait_queue_t * , unsigned , int , void * ) 
s#wait_bit_key struct wait_bit_key { void * flags ; int bit_nr ; } 
s#wait_bit_queue struct wait_bit_queue { s#wait_bit_key key ; t#wait_queue_t wait ; } 
__wait_on_bit int __wait_on_bit ( t#wait_queue_head_t * , s#wait_bit_queue * , int ( * ) ( void * ) , unsigned ) 
out_of_line_wait_on_bit int out_of_line_wait_on_bit ( void * , int , int ( * ) ( void * ) , unsigned ) 
__wait_on_bit_lock int __wait_on_bit_lock ( t#wait_queue_head_t * , s#wait_bit_queue * , int ( * ) ( void * ) , unsigned ) 
out_of_line_wait_on_bit_lock int out_of_line_wait_on_bit_lock ( void * , int , int ( * ) ( void * ) , unsigned ) 
__wake_up_bit void __wake_up_bit ( t#wait_queue_head_t * , void * , int ) 
wake_up_bit void wake_up_bit ( void * , int ) 
bit_waitqueue t#wait_queue_head_t * bit_waitqueue ( void * , int ) 
out_of_line_wait_on_atomic_t int out_of_line_wait_on_atomic_t ( t#atomic_t * , int ( * ) ( t#atomic_t * ) , unsigned ) 
wake_up_atomic_t void wake_up_atomic_t ( t#atomic_t * ) 

/* kernel/watchdog.o */
touch_softlockup_watchdog extern void touch_softlockup_watchdog ( void ) 

/* kernel/workqueue.o */
s##workqueue_struct
system_wq extern s#workqueue_struct * system_wq 
system_highpri_wq s#workqueue_struct * system_highpri_wq 
system_long_wq extern s#workqueue_struct * system_long_wq 
system_unbound_wq extern s#workqueue_struct * system_unbound_wq 
system_freezable_wq extern s#workqueue_struct * system_freezable_wq 
system_power_efficient_wq extern s#workqueue_struct * system_power_efficient_wq 
system_freezable_power_efficient_wq extern s#workqueue_struct * system_freezable_power_efficient_wq 
queue_work_on extern t#bool queue_work_on ( int , s#workqueue_struct * , s#work_struct * ) 
delayed_work_timer_fn void delayed_work_timer_fn ( unsigned long ) 
s##tvec_base
queue_delayed_work_on extern t#bool queue_delayed_work_on ( int , s#workqueue_struct * , s#delayed_work * , unsigned long ) 
mod_delayed_work_on extern t#bool mod_delayed_work_on ( int , s#workqueue_struct * , s#delayed_work * , unsigned long ) 
flush_workqueue extern void flush_workqueue ( s#workqueue_struct * ) 
drain_workqueue extern void drain_workqueue ( s#workqueue_struct * ) 
flush_work extern t#bool flush_work ( s#work_struct * ) 
cancel_work_sync extern t#bool cancel_work_sync ( s#work_struct * ) 
flush_delayed_work extern t#bool flush_delayed_work ( s#delayed_work * ) 
cancel_delayed_work extern t#bool cancel_delayed_work ( s#delayed_work * ) 
cancel_delayed_work_sync extern t#bool cancel_delayed_work_sync ( s#delayed_work * ) 
flush_scheduled_work extern void flush_scheduled_work ( void ) 
execute_in_process_context int execute_in_process_context ( t#work_func_t , s#execute_work * ) 
__alloc_workqueue_key extern s#workqueue_struct * __alloc_workqueue_key ( const char * , unsigned int , int , s#lock_class_key * , const char * , ... ) 
destroy_workqueue extern void destroy_workqueue ( s#workqueue_struct * ) 
workqueue_set_max_active extern void workqueue_set_max_active ( s#workqueue_struct * , int ) 
workqueue_congested extern t#bool workqueue_congested ( int , s#workqueue_struct * ) 
work_busy extern unsigned int work_busy ( s#work_struct * ) 
work_on_cpu long work_on_cpu ( int , long ( * ) ( void * ) , void * ) 

/* lib/argv_split.o */
argv_free extern void argv_free ( char * * ) 
argv_split extern char * * argv_split ( t#gfp_t , const char * , int * ) 

/* lib/asn1_decoder.o */
t#asn1_action_t typedef int ( * asn1_action_t ) ( void * , t#size_t , unsigned char , const void * , t#size_t ) 
s#asn1_decoder struct asn1_decoder { const unsigned char * machine ; t#size_t machlen ; const t#asn1_action_t * actions ; } 
asn1_ber_decoder extern int asn1_ber_decoder ( const s#asn1_decoder * , void * , const unsigned char * , t#size_t ) 

/* lib/average.o */
s#ewma struct ewma { unsigned long internal ; unsigned long factor ; unsigned long weight ; } 
ewma_init extern void ewma_init ( s#ewma * , unsigned long , unsigned long ) 
ewma_add extern s#ewma * ewma_add ( s#ewma * , unsigned long ) 

/* lib/bcd.o */
_bcd2bin unsigned _bcd2bin ( unsigned char ) 
_bin2bcd unsigned char _bin2bcd ( unsigned ) 

/* lib/bch.o */
s##gf_poly
s#bch_control struct bch_control { unsigned int m ; unsigned int n ; unsigned int t ; unsigned int ecc_bits ; unsigned int ecc_bytes ; t#uint16_t * a_pow_tab ; t#uint16_t * a_log_tab ; t#uint32_t * mod8_tab ; t#uint32_t * ecc_buf ; t#uint32_t * ecc_buf2 ; unsigned int * xi_tab ; unsigned int * syn ; int * cache ; s#gf_poly * elp ; s#gf_poly * poly_2t [ 4 ] ; } 
encode_bch void encode_bch ( s#bch_control * , const t#uint8_t * , unsigned int , t#uint8_t * ) 
decode_bch int decode_bch ( s#bch_control * , const t#uint8_t * , unsigned int , const t#uint8_t * , const t#uint8_t * , const unsigned int * , unsigned int * ) 
init_bch s#bch_control * init_bch ( int , int , unsigned int ) 
free_bch void free_bch ( s#bch_control * ) 

/* lib/bitmap.o */
__bitmap_empty extern int __bitmap_empty ( const unsigned long * , int ) 
__bitmap_full extern int __bitmap_full ( const unsigned long * , int ) 
__bitmap_equal extern int __bitmap_equal ( const unsigned long * , const unsigned long * , int ) 
__bitmap_complement extern void __bitmap_complement ( unsigned long * , const unsigned long * , int ) 
__bitmap_shift_right extern void __bitmap_shift_right ( unsigned long * , const unsigned long * , int , int ) 
__bitmap_shift_left extern void __bitmap_shift_left ( unsigned long * , const unsigned long * , int , int ) 
__bitmap_and extern int __bitmap_and ( unsigned long * , const unsigned long * , const unsigned long * , int ) 
__bitmap_or extern void __bitmap_or ( unsigned long * , const unsigned long * , const unsigned long * , int ) 
__bitmap_xor extern void __bitmap_xor ( unsigned long * , const unsigned long * , const unsigned long * , int ) 
__bitmap_andnot extern int __bitmap_andnot ( unsigned long * , const unsigned long * , const unsigned long * , int ) 
__bitmap_intersects extern int __bitmap_intersects ( const unsigned long * , const unsigned long * , int ) 
__bitmap_subset extern int __bitmap_subset ( const unsigned long * , const unsigned long * , int ) 
__bitmap_weight extern int __bitmap_weight ( const unsigned long * , int ) 
bitmap_set extern void bitmap_set ( unsigned long * , int , int ) 
bitmap_clear extern void bitmap_clear ( unsigned long * , int , int ) 
bitmap_find_next_zero_area extern unsigned long bitmap_find_next_zero_area ( unsigned long * , unsigned long , unsigned long , unsigned int , unsigned long ) 
bitmap_scnprintf extern int bitmap_scnprintf ( char * , unsigned int , const unsigned long * , int ) 
__bitmap_parse extern int __bitmap_parse ( const char * , unsigned int , int , unsigned long * , int ) 
bitmap_parse_user extern int bitmap_parse_user ( const char * , unsigned int , unsigned long * , int ) 
bitmap_scnlistprintf extern int bitmap_scnlistprintf ( char * , unsigned int , const unsigned long * , int ) 
bitmap_parselist extern int bitmap_parselist ( const char * , unsigned long * , int ) 
bitmap_parselist_user extern int bitmap_parselist_user ( const char * , unsigned int , unsigned long * , int ) 
bitmap_remap extern void bitmap_remap ( unsigned long * , const unsigned long * , const unsigned long * , const unsigned long * , int ) 
bitmap_bitremap extern int bitmap_bitremap ( int , const unsigned long * , const unsigned long * , int ) 
bitmap_onto extern void bitmap_onto ( unsigned long * , const unsigned long * , const unsigned long * , int ) 
bitmap_fold extern void bitmap_fold ( unsigned long * , const unsigned long * , int , int ) 
bitmap_find_free_region extern int bitmap_find_free_region ( unsigned long * , int , int ) 
bitmap_release_region extern void bitmap_release_region ( unsigned long * , int , int ) 
bitmap_allocate_region extern int bitmap_allocate_region ( unsigned long * , int , int ) 
bitmap_copy_le extern void bitmap_copy_le ( void * , const unsigned long * , int ) 

/* lib/bitrev.o */
byte_rev_table extern t#u8 const byte_rev_table [ 256 ] 
bitrev16 extern t#u16 bitrev16 ( t#u16 ) 
bitrev32 extern t#u32 bitrev32 ( t#u32 ) 

/* lib/bsearch.o */
bsearch void * bsearch ( const void * , const void * , t#size_t , t#size_t , int ( * ) ( const void * , const void * ) ) 

/* lib/btree.o */
s##btree_geo
btree_geo32 extern s#btree_geo btree_geo32 
btree_geo64 extern s#btree_geo btree_geo64 
btree_geo128 extern s#btree_geo btree_geo128 
btree_alloc void * btree_alloc ( t#gfp_t , void * ) 
btree_free void btree_free ( void * , void * ) 
s#btree_head struct btree_head { unsigned long * node ; t#mempool_t * mempool ; int height ; } 
btree_init_mempool void btree_init_mempool ( s#btree_head * , t#mempool_t * ) 
btree_init int btree_init ( s#btree_head * ) 
btree_destroy void btree_destroy ( s#btree_head * ) 
btree_last void * btree_last ( s#btree_head * , s#btree_geo * , unsigned long * ) 
btree_lookup void * btree_lookup ( s#btree_head * , s#btree_geo * , unsigned long * ) 
btree_update int btree_update ( s#btree_head * , s#btree_geo * , unsigned long * , void * ) 
btree_get_prev void * btree_get_prev ( s#btree_head * , s#btree_geo * , unsigned long * ) 
btree_insert int btree_insert ( s#btree_head * , s#btree_geo * , unsigned long * , void * , t#gfp_t ) 
btree_remove void * btree_remove ( s#btree_head * , s#btree_geo * , unsigned long * ) 
btree_merge int btree_merge ( s#btree_head * , s#btree_head * , s#btree_geo * , t#gfp_t ) 
visitorl void visitorl ( void * , unsigned long , unsigned long * , t#size_t , void * ) 
visitor32 void visitor32 ( void * , unsigned long , unsigned long * , t#size_t , void * ) 
visitor64 void visitor64 ( void * , unsigned long , unsigned long * , t#size_t , void * ) 
visitor128 void visitor128 ( void * , unsigned long , unsigned long * , t#size_t , void * ) 
btree_visitor t#size_t btree_visitor ( s#btree_head * , s#btree_geo * , unsigned long , void ( * ) ( void * , unsigned long , unsigned long * , t#size_t , void * ) , void * ) 
btree_grim_visitor t#size_t btree_grim_visitor ( s#btree_head * , s#btree_geo * , unsigned long , void ( * ) ( void * , unsigned long , unsigned long * , t#size_t , void * ) , void * ) 

/* lib/checksum.o */
ip_fast_csum extern t#__sum16 ip_fast_csum ( const void * , unsigned int ) 
csum_partial extern t#__wsum csum_partial ( const void * , int , t#__wsum ) 
ip_compute_csum extern t#__sum16 ip_compute_csum ( const void * , int ) 
csum_partial_copy_from_user extern t#__wsum csum_partial_copy_from_user ( const void * , void * , int , t#__wsum , int * ) 
csum_partial_copy extern t#__wsum csum_partial_copy ( const void * , void * , int , t#__wsum ) 
csum_tcpudp_nofold extern t#__wsum csum_tcpudp_nofold ( t#__be32 , t#__be32 , unsigned short , unsigned short , t#__wsum ) 

/* lib/clz_ctz.o */
__ctzsi2 int __attribute__ ( ( weak ) ) __ctzsi2 ( int ) 
__clzsi2 int __attribute__ ( ( weak ) ) __clzsi2 ( int ) 
__clzdi2 int __attribute__ ( ( weak ) ) __clzdi2 ( long ) 
__ctzdi2 int __attribute__ ( ( weak ) ) __ctzdi2 ( long ) 

/* lib/cmdline.o */
memparse extern unsigned long long memparse ( const char * , char * * ) 
get_option extern int get_option ( char * * , int * ) 
get_options extern char * get_options ( const char * , int , int * ) 

/* lib/cordic.o */
s#cordic_iq struct cordic_iq { t#s32 i ; t#s32 q ; } 
cordic_calc_iq s#cordic_iq cordic_calc_iq ( t#s32 ) 

/* lib/cpu_rmap.o */
alloc_cpu_rmap extern s#cpu_rmap * alloc_cpu_rmap ( unsigned int , t#gfp_t ) 
cpu_rmap_put extern int cpu_rmap_put ( s#cpu_rmap * ) 
cpu_rmap_add extern int cpu_rmap_add ( s#cpu_rmap * , void * ) 
cpu_rmap_update extern int cpu_rmap_update ( s#cpu_rmap * , t#u16 , const s#cpumask * ) 
free_irq_cpu_rmap extern void free_irq_cpu_rmap ( s#cpu_rmap * ) 
irq_cpu_rmap_add extern int irq_cpu_rmap_add ( s#cpu_rmap * , int ) 

/* lib/cpumask.o */
__first_cpu int __first_cpu ( const t#cpumask_t * ) 
__next_cpu int __next_cpu ( int , const t#cpumask_t * ) 
__next_cpu_nr int __next_cpu_nr ( int , const t#cpumask_t * ) 
cpumask_next_and int cpumask_next_and ( int , const s#cpumask * , const s#cpumask * ) 

/* lib/crc-ccitt.o */
crc_ccitt_table extern t#u16 const crc_ccitt_table [ 256 ] 
crc_ccitt extern t#u16 crc_ccitt ( t#u16 , const t#u8 * , t#size_t ) 

/* lib/crc-itu-t.o */
crc_itu_t_table extern t#u16 const crc_itu_t_table [ 256 ] 
crc_itu_t extern t#u16 crc_itu_t ( t#u16 , const t#u8 * , t#size_t ) 

/* lib/crc-t10dif.o */
crc_t10dif t#__u16 crc_t10dif ( unsigned char const * , t#size_t ) 

/* lib/crc16.o */
crc16_table extern t#u16 const crc16_table [ 256 ] 
crc16 extern t#u16 crc16 ( t#u16 , const t#u8 * , t#size_t ) 

/* lib/crc32.o */
crc32_le extern t#u32 crc32_le ( t#u32 , unsigned char const * , t#size_t ) 
__crc32c_le extern t#u32 __crc32c_le ( t#u32 , unsigned char const * , t#size_t ) 
crc32_be extern t#u32 crc32_be ( t#u32 , unsigned char const * , t#size_t ) 

/* lib/crc7.o */
crc7_syndrome_table extern const t#u8 crc7_syndrome_table [ 256 ] 
crc7 extern t#u8 crc7 ( t#u8 , const t#u8 * , t#size_t ) 

/* lib/crc8.o */
crc8_populate_msb void crc8_populate_msb ( t#u8 [ 256 ] , t#u8 ) 
crc8_populate_lsb void crc8_populate_lsb ( t#u8 [ 256 ] , t#u8 ) 
crc8 t#u8 crc8 ( const t#u8 [ 256 ] , t#u8 * , t#size_t , t#u8 ) 

/* lib/ctype.o */
_ctype extern const unsigned char _ctype [ ] 

/* lib/debug_locks.o */
debug_locks extern int debug_locks 
debug_locks_silent extern int debug_locks_silent 
debug_locks_off extern int debug_locks_off ( void ) 

/* lib/dec_and_lock.o */
_atomic_dec_and_lock extern int _atomic_dec_and_lock ( t#atomic_t * , t#spinlock_t * ) 

/* lib/devres.o */
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
devm_ioremap void * devm_ioremap ( s#device * , t#resource_size_t , unsigned long ) 
devm_ioremap_nocache void * devm_ioremap_nocache ( s#device * , t#resource_size_t , unsigned long ) 
devm_iounmap void devm_iounmap ( s#device * , void * ) 
devm_ioremap_resource void * devm_ioremap_resource ( s#device * , s#resource * ) 
devm_request_and_ioremap void * devm_request_and_ioremap ( s#device * , s#resource * ) 
devm_ioport_map void * devm_ioport_map ( s#device * , unsigned long , unsigned int ) 
devm_ioport_unmap void devm_ioport_unmap ( s#device * , void * ) 
pcim_iomap_table void * const * pcim_iomap_table ( s#pci_dev * ) 
pcim_iomap void * pcim_iomap ( s#pci_dev * , int , unsigned long ) 
pcim_iounmap void pcim_iounmap ( s#pci_dev * , void * ) 
pcim_iomap_regions int pcim_iomap_regions ( s#pci_dev * , int , const char * ) 
pcim_iomap_regions_request_all int pcim_iomap_regions_request_all ( s#pci_dev * , int , const char * ) 
pcim_iounmap_regions void pcim_iounmap_regions ( s#pci_dev * , int ) 

/* lib/digsig.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
digsig_verify int digsig_verify ( s#key * , const char * , int , const char * , int ) 

/* lib/div64.o */
iter_div_u64_rem t#u32 iter_div_u64_rem ( t#u64 , t#u32 , t#u64 * ) 

/* lib/dump_stack.o */
dump_stack extern void dump_stack ( void ) 

/* lib/dynamic_debug.o */
s#_ddebug struct _ddebug { const char * modname ; const char * function ; const char * filename ; const char * format ; unsigned int lineno : 18 ; unsigned int flags : 8 ; } 
__dynamic_pr_debug extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int __dynamic_pr_debug ( s#_ddebug * , const char * , ... ) 
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##tvec_base
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
__dynamic_dev_dbg extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) int __dynamic_dev_dbg ( s#_ddebug * , const s#device * , const char * , ... ) 
__dynamic_netdev_dbg extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) int __dynamic_netdev_dbg ( s#_ddebug * , const s#net_device * , const char * , ... ) 
ddebug_add_module int ddebug_add_module ( s#_ddebug * , unsigned int , const char * ) 
ddebug_remove_module extern int ddebug_remove_module ( const char * ) 

/* lib/dynamic_queue_limits.o */
dql_completed void dql_completed ( s#dql * , unsigned int ) 
dql_reset void dql_reset ( s#dql * ) 
dql_init int dql_init ( s#dql * , unsigned ) 

/* lib/find_last_bit.o */
find_last_bit extern unsigned long find_last_bit ( const unsigned long * , unsigned long ) 

/* lib/find_next_bit.o */
find_next_bit extern unsigned long find_next_bit ( const unsigned long * , unsigned long , unsigned long ) 
find_next_zero_bit extern unsigned long find_next_zero_bit ( const unsigned long * , unsigned long , unsigned long ) 

/* lib/flex_array.o */
s##flex_array_part
s#flex_array struct flex_array { union { struct { int element_size ; int total_nr_elements ; int elems_per_part ; s#reciprocal_value reciprocal_elems ; s#flex_array_part * parts [ ] ; } ; char padding [ ( 1UL << 16 ) ] ; } ; } 
flex_array_alloc s#flex_array * flex_array_alloc ( int , unsigned int , t#gfp_t ) 
flex_array_free_parts void flex_array_free_parts ( s#flex_array * ) 
flex_array_free void flex_array_free ( s#flex_array * ) 
flex_array_put int flex_array_put ( s#flex_array * , unsigned int , void * , t#gfp_t ) 
flex_array_clear int flex_array_clear ( s#flex_array * , unsigned int ) 
flex_array_prealloc int flex_array_prealloc ( s#flex_array * , unsigned int , unsigned int , t#gfp_t ) 
flex_array_get void * flex_array_get ( s#flex_array * , unsigned int ) 
flex_array_get_ptr void * flex_array_get_ptr ( s#flex_array * , unsigned int ) 
flex_array_shrink int flex_array_shrink ( s#flex_array * ) 

/* lib/fonts/font_8x16.o */
s#font_desc struct font_desc { int idx ; const char * name ; int width , height ; const void * data ; int pref ; } 
font_vga_8x16 extern const s#font_desc font_vga_8x16 

/* lib/fonts/fonts.o */
find_font extern const s#font_desc * find_font ( const char * ) 
get_default_font extern const s#font_desc * get_default_font ( int , int , t#u32 , t#u32 ) 

/* lib/gcd.o */
gcd unsigned long gcd ( unsigned long , unsigned long ) 

/* lib/genalloc.o */
t#genpool_algo_t typedef unsigned long ( * genpool_algo_t ) ( unsigned long * , unsigned long , unsigned long , unsigned int , void * ) 
s#gen_pool struct gen_pool { t#spinlock_t lock ; s#list_head chunks ; int min_alloc_order ; t#genpool_algo_t algo ; void * data ; } 
gen_pool_create extern s#gen_pool * gen_pool_create ( int , int ) 
gen_pool_add_virt extern int gen_pool_add_virt ( s#gen_pool * , unsigned long , t#phys_addr_t , t#size_t , int ) 
gen_pool_virt_to_phys extern t#phys_addr_t gen_pool_virt_to_phys ( s#gen_pool * , unsigned long ) 
gen_pool_destroy extern void gen_pool_destroy ( s#gen_pool * ) 
gen_pool_alloc extern unsigned long gen_pool_alloc ( s#gen_pool * , t#size_t ) 
gen_pool_free extern void gen_pool_free ( s#gen_pool * , unsigned long , t#size_t ) 
s#gen_pool_chunk struct gen_pool_chunk { s#list_head next_chunk ; t#atomic_t avail ; t#phys_addr_t phys_addr ; unsigned long start_addr ; unsigned long end_addr ; unsigned long bits [ 0 ] ; } 
gen_pool_for_each_chunk extern void gen_pool_for_each_chunk ( s#gen_pool * , void ( * ) ( s#gen_pool * , s#gen_pool_chunk * , void * ) , void * ) 
gen_pool_avail extern t#size_t gen_pool_avail ( s#gen_pool * ) 
gen_pool_size extern t#size_t gen_pool_size ( s#gen_pool * ) 
gen_pool_set_algo extern void gen_pool_set_algo ( s#gen_pool * , t#genpool_algo_t , void * ) 
gen_pool_first_fit extern unsigned long gen_pool_first_fit ( unsigned long * , unsigned long , unsigned long , unsigned int , void * ) 
gen_pool_best_fit extern unsigned long gen_pool_best_fit ( unsigned long * , unsigned long , unsigned long , unsigned int , void * ) 
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##vm_operations_struct
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##proc_dir_entry
s##iommu_group
dev_get_gen_pool extern s#gen_pool * dev_get_gen_pool ( s#device * ) 
of_get_named_gen_pool extern s#gen_pool * of_get_named_gen_pool ( s#device_node * , const char * , int ) 

/* lib/halfmd4.o */
half_md4_transform t#__u32 half_md4_transform ( t#__u32 [ 4 ] , t#__u32 const [ 8 ] ) 

/* lib/hexdump.o */
hex_asc extern const char hex_asc [ ] 
hex_asc_upper extern const char hex_asc_upper [ ] 
hex_to_bin extern int hex_to_bin ( char ) 
hex2bin extern int hex2bin ( t#u8 * , const char * , t#size_t ) 
hex_dump_to_buffer extern void hex_dump_to_buffer ( const void * , t#size_t , int , int , char * , t#size_t , t#bool ) 
print_hex_dump extern void print_hex_dump ( const char * , const char * , int , int , int , const void * , t#size_t , t#bool ) 

/* lib/hweight.o */
__sw_hweight32 extern unsigned int __sw_hweight32 ( unsigned int ) 
__sw_hweight16 extern unsigned int __sw_hweight16 ( unsigned int ) 
__sw_hweight8 extern unsigned int __sw_hweight8 ( unsigned int ) 
__sw_hweight64 extern unsigned long __sw_hweight64 ( t#__u64 ) 

/* lib/idr.o */
__idr_pre_get int __idr_pre_get ( s#idr * , t#gfp_t ) 
__idr_get_new_above int __idr_get_new_above ( s#idr * , void * , int , int * ) 
idr_preload void idr_preload ( t#gfp_t ) 
idr_alloc int idr_alloc ( s#idr * , void * , int , int , t#gfp_t ) 
idr_alloc_cyclic int idr_alloc_cyclic ( s#idr * , void * , int , int , t#gfp_t ) 
idr_remove void idr_remove ( s#idr * , int ) 
__idr_remove_all void __idr_remove_all ( s#idr * ) 
idr_destroy void idr_destroy ( s#idr * ) 
idr_find_slowpath void * idr_find_slowpath ( s#idr * , int ) 
idr_for_each int idr_for_each ( s#idr * , int ( * ) ( int , void * , void * ) , void * ) 
idr_get_next void * idr_get_next ( s#idr * , int * ) 
idr_replace void * idr_replace ( s#idr * , void * , int ) 
idr_init void idr_init ( s#idr * ) 
ida_pre_get int ida_pre_get ( s#ida * , t#gfp_t ) 
ida_get_new_above int ida_get_new_above ( s#ida * , int , int * ) 
ida_remove void ida_remove ( s#ida * , int ) 
ida_destroy void ida_destroy ( s#ida * ) 
ida_simple_get int ida_simple_get ( s#ida * , unsigned int , unsigned int , t#gfp_t ) 
ida_simple_remove void ida_simple_remove ( s#ida * , unsigned int ) 
ida_init void ida_init ( s#ida * ) 

/* lib/int_sqrt.o */
int_sqrt unsigned long int_sqrt ( unsigned long ) 

/* lib/iomap.o */
ioread8 extern unsigned int ioread8 ( void * ) 
ioread16 extern unsigned int ioread16 ( void * ) 
ioread16be extern unsigned int ioread16be ( void * ) 
ioread32 extern unsigned int ioread32 ( void * ) 
ioread32be extern unsigned int ioread32be ( void * ) 
iowrite8 extern void iowrite8 ( t#u8 , void * ) 
iowrite16 extern void iowrite16 ( t#u16 , void * ) 
iowrite16be extern void iowrite16be ( t#u16 , void * ) 
iowrite32 extern void iowrite32 ( t#u32 , void * ) 
iowrite32be extern void iowrite32be ( t#u32 , void * ) 
ioread8_rep extern void ioread8_rep ( void * , void * , unsigned long ) 
ioread16_rep extern void ioread16_rep ( void * , void * , unsigned long ) 
ioread32_rep extern void ioread32_rep ( void * , void * , unsigned long ) 
iowrite8_rep extern void iowrite8_rep ( void * , const void * , unsigned long ) 
iowrite16_rep extern void iowrite16_rep ( void * , const void * , unsigned long ) 
iowrite32_rep extern void iowrite32_rep ( void * , const void * , unsigned long ) 
ioport_map extern void * ioport_map ( unsigned long , unsigned int ) 
ioport_unmap extern void ioport_unmap ( void * ) 
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
pci_iounmap extern void pci_iounmap ( s#pci_dev * , void * ) 

/* lib/iomap_copy.o */
__iowrite32_copy void __iowrite32_copy ( void * , const void * , t#size_t ) 
__iowrite64_copy void __iowrite64_copy ( void * , const void * , t#size_t ) 

/* lib/iommu-helper.o */
iommu_area_alloc unsigned long iommu_area_alloc ( unsigned long * , unsigned long , unsigned long , unsigned int , unsigned long , unsigned long , unsigned long ) 

/* lib/ioremap.o */
ioremap_page_range int ioremap_page_range ( unsigned long , unsigned long , t#phys_addr_t , t#pgprot_t ) 

/* lib/iovec.o */
memcpy_fromiovec int memcpy_fromiovec ( unsigned char * , s#iovec * , int ) 
memcpy_toiovec int memcpy_toiovec ( s#iovec * , unsigned char * , int ) 

/* lib/irq_regs.o */
__irq_regs extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( s#pt_regs * ) __irq_regs 

/* lib/jedec_ddr_data.o */
s#lpddr2_addressing struct lpddr2_addressing { t#u32 num_banks ; t#u32 tREFI_ns ; t#u32 tRFCab_ps ; } 
lpddr2_jedec_addressing_table extern const s#lpddr2_addressing lpddr2_jedec_addressing_table [ 11 ] 
s#lpddr2_timings struct lpddr2_timings { t#u32 max_freq ; t#u32 min_freq ; t#u32 tRPab ; t#u32 tRCD ; t#u32 tWR ; t#u32 tRAS_min ; t#u32 tRRD ; t#u32 tWTR ; t#u32 tXP ; t#u32 tRTP ; t#u32 tCKESR ; t#u32 tDQSCK_max ; t#u32 tDQSCK_max_derated ; t#u32 tFAW ; t#u32 tZQCS ; t#u32 tZQCL ; t#u32 tZQinit ; t#u32 tRAS_max_ns ; } 
lpddr2_jedec_timings extern const s#lpddr2_timings lpddr2_jedec_timings [ 4 ] 
s#lpddr2_min_tck struct lpddr2_min_tck { t#u32 tRPab ; t#u32 tRCD ; t#u32 tWR ; t#u32 tRASmin ; t#u32 tRRD ; t#u32 tWTR ; t#u32 tXP ; t#u32 tRTP ; t#u32 tCKE ; t#u32 tCKESR ; t#u32 tFAW ; } 
lpddr2_jedec_min_tck extern const s#lpddr2_min_tck lpddr2_jedec_min_tck 

/* lib/kasprintf.o */
kvasprintf extern char * kvasprintf ( t#gfp_t , const char * , va_list args ) 
kasprintf extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) char * kasprintf ( t#gfp_t , const char * , ... ) 

/* lib/kfifo.o */
__kfifo_alloc extern int __kfifo_alloc ( s#__kfifo * , unsigned int , t#size_t , t#gfp_t ) 
__kfifo_free extern void __kfifo_free ( s#__kfifo * ) 
__kfifo_init extern int __kfifo_init ( s#__kfifo * , void * , unsigned int , t#size_t ) 
__kfifo_in extern unsigned int __kfifo_in ( s#__kfifo * , const void * , unsigned int ) 
__kfifo_out_peek extern unsigned int __kfifo_out_peek ( s#__kfifo * , void * , unsigned int ) 
__kfifo_out extern unsigned int __kfifo_out ( s#__kfifo * , void * , unsigned int ) 
__kfifo_from_user extern int __kfifo_from_user ( s#__kfifo * , const void * , unsigned long , unsigned int * ) 
__kfifo_to_user extern int __kfifo_to_user ( s#__kfifo * , void * , unsigned long , unsigned int * ) 
__kfifo_dma_in_prepare extern unsigned int __kfifo_dma_in_prepare ( s#__kfifo * , s#scatterlist * , int , unsigned int ) 
__kfifo_dma_out_prepare extern unsigned int __kfifo_dma_out_prepare ( s#__kfifo * , s#scatterlist * , int , unsigned int ) 
__kfifo_max_r extern unsigned int __kfifo_max_r ( unsigned int , t#size_t ) 
__kfifo_len_r extern unsigned int __kfifo_len_r ( s#__kfifo * , t#size_t ) 
__kfifo_in_r extern unsigned int __kfifo_in_r ( s#__kfifo * , const void * , unsigned int , t#size_t ) 
__kfifo_out_peek_r extern unsigned int __kfifo_out_peek_r ( s#__kfifo * , void * , unsigned int , t#size_t ) 
__kfifo_out_r extern unsigned int __kfifo_out_r ( s#__kfifo * , void * , unsigned int , t#size_t ) 
__kfifo_skip_r extern void __kfifo_skip_r ( s#__kfifo * , t#size_t ) 
__kfifo_from_user_r extern int __kfifo_from_user_r ( s#__kfifo * , const void * , unsigned long , unsigned int * , t#size_t ) 
__kfifo_to_user_r extern int __kfifo_to_user_r ( s#__kfifo * , void * , unsigned long , unsigned int * , t#size_t ) 
__kfifo_dma_in_prepare_r extern unsigned int __kfifo_dma_in_prepare_r ( s#__kfifo * , s#scatterlist * , int , unsigned int , t#size_t ) 
__kfifo_dma_in_finish_r extern void __kfifo_dma_in_finish_r ( s#__kfifo * , unsigned int , t#size_t ) 
__kfifo_dma_out_prepare_r extern unsigned int __kfifo_dma_out_prepare_r ( s#__kfifo * , s#scatterlist * , int , unsigned int , t#size_t ) 
__kfifo_dma_out_finish_r extern void __kfifo_dma_out_finish_r ( s#__kfifo * , t#size_t ) 

/* lib/klist.o */
klist_init extern void klist_init ( s#klist * , void ( * ) ( s#klist_node * ) , void ( * ) ( s#klist_node * ) ) 
klist_add_head extern void klist_add_head ( s#klist_node * , s#klist * ) 
klist_add_tail extern void klist_add_tail ( s#klist_node * , s#klist * ) 
klist_add_after extern void klist_add_after ( s#klist_node * , s#klist_node * ) 
klist_add_before extern void klist_add_before ( s#klist_node * , s#klist_node * ) 
klist_del extern void klist_del ( s#klist_node * ) 
klist_remove extern void klist_remove ( s#klist_node * ) 
klist_node_attached extern int klist_node_attached ( s#klist_node * ) 
klist_iter_init_node extern void klist_iter_init_node ( s#klist * , s#klist_iter * , s#klist_node * ) 
klist_iter_init extern void klist_iter_init ( s#klist * , s#klist_iter * ) 
klist_iter_exit extern void klist_iter_exit ( s#klist_iter * ) 
klist_next extern s#klist_node * klist_next ( s#klist_iter * ) 

/* lib/kobject.o */
s##sock
s##sysfs_dirent
kobject_get_path extern char * kobject_get_path ( s#kobject * , t#gfp_t ) 
kobject_set_name extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int kobject_set_name ( s#kobject * , const char * , ... ) 
kobject_init extern void kobject_init ( s#kobject * , s#kobj_type * ) 
kobject_add extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) int kobject_add ( s#kobject * , s#kobject * , const char * , ... ) 
kobject_init_and_add extern __attribute__ ( ( format ( printf , 4 , 5 ) ) ) int kobject_init_and_add ( s#kobject * , s#kobj_type * , s#kobject * , const char * , ... ) 
kobject_rename extern int kobject_rename ( s#kobject * , const char * ) 
kobject_create_and_add extern s#kobject * kobject_create_and_add ( const char * , s#kobject * ) 
kobj_sysfs_ops extern const s#sysfs_ops kobj_sysfs_ops 
kset_create_and_add extern s#kset * kset_create_and_add ( const char * , const s#kset_uevent_ops * , s#kobject * ) 
kobject_get extern s#kobject * kobject_get ( s#kobject * ) 
kobject_put extern void kobject_put ( s#kobject * ) 
kobject_del extern void kobject_del ( s#kobject * ) 
kset_register extern int kset_register ( s#kset * ) 
kset_unregister extern void kset_unregister ( s#kset * ) 

/* lib/kobject_uevent.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
e#kobject_action enum kobject_action { KOBJ_ADD , KOBJ_REMOVE , KOBJ_CHANGE , KOBJ_MOVE , KOBJ_ONLINE , KOBJ_OFFLINE , KOBJ_MAX } 
kobject_uevent_env int kobject_uevent_env ( s#kobject * , e#kobject_action , char * [ ] ) 
kobject_uevent int kobject_uevent ( s#kobject * , e#kobject_action ) 
add_uevent_var __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int add_uevent_var ( s#kobj_uevent_env * , const char * , ... ) 

/* lib/kstrtox.o */
kstrtoull int kstrtoull ( const char * , unsigned int , unsigned long long * ) 
kstrtoll int kstrtoll ( const char * , unsigned int , long long * ) 
_kstrtoul int _kstrtoul ( const char * , unsigned int , unsigned long * ) 
_kstrtol int _kstrtol ( const char * , unsigned int , long * ) 
kstrtouint int kstrtouint ( const char * , unsigned int , unsigned int * ) 
kstrtoint int kstrtoint ( const char * , unsigned int , int * ) 
kstrtou16 int kstrtou16 ( const char * , unsigned int , t#u16 * ) 
kstrtos16 int kstrtos16 ( const char * , unsigned int , t#s16 * ) 
kstrtou8 int kstrtou8 ( const char * , unsigned int , t#u8 * ) 
kstrtos8 int kstrtos8 ( const char * , unsigned int , t#s8 * ) 
kstrtoull_from_user int kstrtoull_from_user ( const char * , t#size_t , unsigned int , unsigned long long * ) 
kstrtoll_from_user int kstrtoll_from_user ( const char * , t#size_t , unsigned int , long long * ) 
kstrtoul_from_user int kstrtoul_from_user ( const char * , t#size_t , unsigned int , unsigned long * ) 
kstrtol_from_user int kstrtol_from_user ( const char * , t#size_t , unsigned int , long * ) 
kstrtouint_from_user int kstrtouint_from_user ( const char * , t#size_t , unsigned int , unsigned int * ) 
kstrtoint_from_user int kstrtoint_from_user ( const char * , t#size_t , unsigned int , int * ) 
kstrtou16_from_user int kstrtou16_from_user ( const char * , t#size_t , unsigned int , t#u16 * ) 
kstrtos16_from_user int kstrtos16_from_user ( const char * , t#size_t , unsigned int , t#s16 * ) 
kstrtou8_from_user int kstrtou8_from_user ( const char * , t#size_t , unsigned int , t#u8 * ) 
kstrtos8_from_user int kstrtos8_from_user ( const char * , t#size_t , unsigned int , t#s8 * ) 

/* lib/lcm.o */
lcm unsigned long lcm ( unsigned long , unsigned long ) 

/* lib/libcrc32c.o */
crc32c t#u32 crc32c ( t#u32 , const void * , unsigned int ) 

/* lib/list_sort.o */
list_sort void list_sort ( void * , s#list_head * , int ( * ) ( void * , s#list_head * , s#list_head * ) ) 

/* lib/llist.o */
llist_add_batch extern t#bool llist_add_batch ( s#llist_node * , s#llist_node * , s#llist_head * ) 
llist_del_first extern s#llist_node * llist_del_first ( s#llist_head * ) 
llist_reverse_order s#llist_node * llist_reverse_order ( s#llist_node * ) 

/* lib/lockref.o */
lockref_get extern void lockref_get ( s#lockref * ) 
lockref_get_not_zero extern int lockref_get_not_zero ( s#lockref * ) 
lockref_get_or_lock extern int lockref_get_or_lock ( s#lockref * ) 
lockref_put_or_lock extern int lockref_put_or_lock ( s#lockref * ) 
lockref_get_not_dead extern int lockref_get_not_dead ( s#lockref * ) 

/* lib/lzo/lzo1x_compress.o */
lzo1x_1_compress int lzo1x_1_compress ( const unsigned char * , t#size_t , unsigned char * , t#size_t * , void * ) 

/* lib/lzo/lzo1x_decompress_safe.o */
lzo1x_decompress_safe int lzo1x_decompress_safe ( const unsigned char * , t#size_t , unsigned char * , t#size_t * ) 

/* lib/md5.o */
md5_transform void md5_transform ( t#__u32 * , t#__u32 const * ) 

/* lib/memweight.o */
memweight extern t#size_t memweight ( const void * , t#size_t ) 

/* lib/mpi/mpi-bit.o */
mpi_get_nbits unsigned mpi_get_nbits ( t#MPI ) 

/* lib/mpi/mpi-cmp.o */
mpi_cmp_ui int mpi_cmp_ui ( t#MPI , t#ulong ) 
mpi_cmp int mpi_cmp ( t#MPI , t#MPI ) 

/* lib/mpi/mpi-pow.o */
mpi_powm int mpi_powm ( t#MPI , t#MPI , t#MPI , t#MPI ) 

/* lib/mpi/mpicoder.o */
mpi_read_raw_data t#MPI mpi_read_raw_data ( const void * , t#size_t ) 
mpi_read_from_buffer t#MPI mpi_read_from_buffer ( const void * , unsigned * ) 
mpi_get_buffer void * mpi_get_buffer ( t#MPI , unsigned * , int * ) 
mpi_set_buffer int mpi_set_buffer ( t#MPI , const void * , unsigned , int ) 

/* lib/mpi/mpiutil.o */
mpi_alloc t#MPI mpi_alloc ( unsigned ) 
mpi_free void mpi_free ( t#MPI ) 

/* lib/net_utils.o */
mac_pton int mac_pton ( const char * , t#u8 * ) 

/* lib/nlattr.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
__nla_reserve extern s#nlattr * __nla_reserve ( s#sk_buff * , int , int ) 
__nla_reserve_nohdr extern void * __nla_reserve_nohdr ( s#sk_buff * , int ) 
nla_reserve extern s#nlattr * nla_reserve ( s#sk_buff * , int , int ) 
nla_reserve_nohdr extern void * nla_reserve_nohdr ( s#sk_buff * , int ) 
__nla_put extern void __nla_put ( s#sk_buff * , int , int , const void * ) 
__nla_put_nohdr extern void __nla_put_nohdr ( s#sk_buff * , int , const void * ) 
nla_put extern int nla_put ( s#sk_buff * , int , int , const void * ) 
nla_put_nohdr extern int nla_put_nohdr ( s#sk_buff * , int , const void * ) 
nla_append extern int nla_append ( s#sk_buff * , int , const void * ) 
nla_validate extern int nla_validate ( const s#nlattr * , int , int , const s#nla_policy * ) 
nla_policy_len extern int nla_policy_len ( const s#nla_policy * , int ) 
nla_parse extern int nla_parse ( s#nlattr * * , int , const s#nlattr * , int , const s#nla_policy * ) 
nla_find extern s#nlattr * nla_find ( const s#nlattr * , int , int ) 
nla_strlcpy extern t#size_t nla_strlcpy ( char * , const s#nlattr * , t#size_t ) 
nla_memcpy extern int nla_memcpy ( void * , const s#nlattr * , int ) 
nla_memcmp extern int nla_memcmp ( const s#nlattr * , const void * , t#size_t ) 
nla_strcmp extern int nla_strcmp ( const s#nlattr * , const char * ) 

/* lib/oid_registry.o */
e#OID enum OID { OID_id_dsa_with_sha1 , OID_id_dsa , OID_id_ecdsa_with_sha1 , OID_id_ecPublicKey , OID_rsaEncryption , OID_md2WithRSAEncryption , OID_md3WithRSAEncryption , OID_md4WithRSAEncryption , OID_sha1WithRSAEncryption , OID_sha256WithRSAEncryption , OID_sha384WithRSAEncryption , OID_sha512WithRSAEncryption , OID_sha224WithRSAEncryption , OID_data , OID_signed_data , OID_email_address , OID_content_type , OID_messageDigest , OID_signingTime , OID_smimeCapabilites , OID_smimeAuthenticatedAttrs , OID_md2 , OID_md4 , OID_md5 , OID_certAuthInfoAccess , OID_msOutlookExpress , OID_sha1 , OID_commonName , OID_surname , OID_countryName , OID_locality , OID_stateOrProvinceName , OID_organizationName , OID_organizationUnitName , OID_title , OID_description , OID_name , OID_givenName , OID_initials , OID_generationalQualifier , OID_subjectKeyIdentifier , OID_keyUsage , OID_subjectAltName , OID_issuerAltName , OID_basicConstraints , OID_crlDistributionPoints , OID_certPolicies , OID_authorityKeyIdentifier , OID_extKeyUsage , OID__NR } 
look_up_OID extern e#OID look_up_OID ( const void * , t#size_t ) 
sprint_oid extern int sprint_oid ( const void * , t#size_t , char * , t#size_t ) 
sprint_OID extern int sprint_OID ( e#OID , char * , t#size_t ) 

/* lib/parser.o */
s#match_token struct match_token { int token ; const char * pattern ; } 
t#match_table_t typedef s#match_token match_table_t [ ] 
t#substring_t typedef struct { char * from ; char * to ; } substring_t 
match_token int match_token ( char * , const t#match_table_t , t#substring_t [ ] ) 
match_int int match_int ( t#substring_t * , int * ) 
match_octal int match_octal ( t#substring_t * , int * ) 
match_hex int match_hex ( t#substring_t * , int * ) 
match_strlcpy t#size_t match_strlcpy ( char * , const t#substring_t * , t#size_t ) 
match_strdup char * match_strdup ( const t#substring_t * ) 

/* lib/pci_iomap.o */
s##msi_chip
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
pci_iomap extern void * pci_iomap ( s#pci_dev * , int , unsigned long ) 

/* lib/percpu-refcount.o */
percpu_ref_init int percpu_ref_init ( s#percpu_ref * , t#percpu_ref_func_t * ) 
percpu_ref_cancel_init void percpu_ref_cancel_init ( s#percpu_ref * ) 
percpu_ref_kill_and_confirm void percpu_ref_kill_and_confirm ( s#percpu_ref * , t#percpu_ref_func_t * ) 

/* lib/percpu_counter.o */
percpu_counter_set void percpu_counter_set ( s#percpu_counter * , t#s64 ) 
__percpu_counter_add void __percpu_counter_add ( s#percpu_counter * , t#s64 , t#s32 ) 
__percpu_counter_sum t#s64 __percpu_counter_sum ( s#percpu_counter * ) 
__percpu_counter_init int __percpu_counter_init ( s#percpu_counter * , t#s64 , s#lock_class_key * ) 
percpu_counter_destroy void percpu_counter_destroy ( s#percpu_counter * ) 
percpu_counter_batch extern int percpu_counter_batch 
percpu_counter_compare int percpu_counter_compare ( s#percpu_counter * , t#s64 ) 

/* lib/percpu_ida.o */
s##percpu_ida_cpu
percpu_ida_alloc int percpu_ida_alloc ( s#percpu_ida * , int ) 
percpu_ida_free void percpu_ida_free ( s#percpu_ida * , unsigned ) 
percpu_ida_destroy void percpu_ida_destroy ( s#percpu_ida * ) 
__percpu_ida_init int __percpu_ida_init ( s#percpu_ida * , unsigned long , unsigned long , unsigned long ) 
t#percpu_ida_cb typedef int ( * percpu_ida_cb ) ( unsigned , void * ) 
percpu_ida_for_each_free int percpu_ida_for_each_free ( s#percpu_ida * , t#percpu_ida_cb , void * ) 
percpu_ida_free_tags unsigned percpu_ida_free_tags ( s#percpu_ida * , int ) 

/* lib/radix-tree.o */
radix_tree_preload int radix_tree_preload ( t#gfp_t ) 
radix_tree_maybe_preload int radix_tree_maybe_preload ( t#gfp_t ) 
s##radix_tree_node
radix_tree_insert int radix_tree_insert ( s#radix_tree_root * , unsigned long , void * ) 
radix_tree_lookup_slot void * * radix_tree_lookup_slot ( s#radix_tree_root * , unsigned long ) 
radix_tree_lookup void * radix_tree_lookup ( s#radix_tree_root * , unsigned long ) 
radix_tree_tag_set void * radix_tree_tag_set ( s#radix_tree_root * , unsigned long , unsigned int ) 
radix_tree_tag_clear void * radix_tree_tag_clear ( s#radix_tree_root * , unsigned long , unsigned int ) 
radix_tree_tag_get int radix_tree_tag_get ( s#radix_tree_root * , unsigned long , unsigned int ) 
s#radix_tree_iter struct radix_tree_iter { unsigned long index ; unsigned long next_index ; unsigned long tags ; } 
radix_tree_next_chunk void * * radix_tree_next_chunk ( s#radix_tree_root * , s#radix_tree_iter * , unsigned ) 
radix_tree_range_tag_if_tagged unsigned long radix_tree_range_tag_if_tagged ( s#radix_tree_root * , unsigned long * , unsigned long , unsigned long , unsigned int , unsigned int ) 
radix_tree_gang_lookup unsigned int radix_tree_gang_lookup ( s#radix_tree_root * , void * * , unsigned long , unsigned int ) 
radix_tree_gang_lookup_slot unsigned int radix_tree_gang_lookup_slot ( s#radix_tree_root * , void * * * , unsigned long * , unsigned long , unsigned int ) 
radix_tree_gang_lookup_tag unsigned int radix_tree_gang_lookup_tag ( s#radix_tree_root * , void * * , unsigned long , unsigned int , unsigned int ) 
radix_tree_gang_lookup_tag_slot unsigned int radix_tree_gang_lookup_tag_slot ( s#radix_tree_root * , void * * * , unsigned long , unsigned int , unsigned int ) 
radix_tree_delete_item void * radix_tree_delete_item ( s#radix_tree_root * , unsigned long , void * ) 
radix_tree_delete void * radix_tree_delete ( s#radix_tree_root * , unsigned long ) 
radix_tree_tagged int radix_tree_tagged ( s#radix_tree_root * , unsigned int ) 

/* lib/raid6/algos.o */
raid6_empty_zero_page extern const char raid6_empty_zero_page [ ( 1UL << 16 ) ] 
s#raid6_calls struct raid6_calls { void ( * gen_syndrome ) ( int , t#size_t , void * * ) ; int ( * valid ) ( void ) ; const char * name ; int prefer ; } 
raid6_call extern s#raid6_calls raid6_call 
raid6_2data_recov extern void ( * raid6_2data_recov ) ( int , t#size_t , int , int , void * * ) 
raid6_datap_recov extern void ( * raid6_datap_recov ) ( int , t#size_t , int , void * * ) 

/* lib/raid6/tables.o */
raid6_gfmul extern const t#u8 raid6_gfmul [ 256 ] [ 256 ] 
raid6_vgfmul extern const t#u8 raid6_vgfmul [ 256 ] [ 32 ] 
raid6_gfexp extern const t#u8 raid6_gfexp [ 256 ] 
raid6_gfinv extern const t#u8 raid6_gfinv [ 256 ] 
raid6_gfexi extern const t#u8 raid6_gfexi [ 256 ] 

/* lib/random32.o */
prandom_u32_state t#u32 prandom_u32_state ( s#rnd_state * ) 
prandom_u32 t#u32 prandom_u32 ( void ) 
prandom_bytes_state void prandom_bytes_state ( s#rnd_state * , void * , int ) 
prandom_bytes void prandom_bytes ( void * , int ) 
prandom_seed void prandom_seed ( t#u32 ) 

/* lib/ratelimit.o */
___ratelimit extern int ___ratelimit ( s#ratelimit_state * , const char * ) 

/* lib/rbtree.o */
__rb_erase_color extern void __rb_erase_color ( s#rb_node * , s#rb_root * , void ( * ) ( s#rb_node * , s#rb_node * ) ) 
rb_insert_color extern void rb_insert_color ( s#rb_node * , s#rb_root * ) 
rb_erase extern void rb_erase ( s#rb_node * , s#rb_root * ) 
__rb_insert_augmented extern void __rb_insert_augmented ( s#rb_node * , s#rb_root * , void ( * ) ( s#rb_node * , s#rb_node * ) ) 
rb_first extern s#rb_node * rb_first ( const s#rb_root * ) 
rb_last extern s#rb_node * rb_last ( const s#rb_root * ) 
rb_next extern s#rb_node * rb_next ( const s#rb_node * ) 
rb_prev extern s#rb_node * rb_prev ( const s#rb_node * ) 
rb_replace_node extern void rb_replace_node ( s#rb_node * , s#rb_node * , s#rb_root * ) 
rb_next_postorder extern s#rb_node * rb_next_postorder ( const s#rb_node * ) 
rb_first_postorder extern s#rb_node * rb_first_postorder ( const s#rb_root * ) 

/* lib/reciprocal_div.o */
reciprocal_value s#reciprocal_value reciprocal_value ( t#u32 ) 

/* lib/reed_solomon/reed_solomon.o */
s#rs_control struct rs_control { int mm ; int nn ; t#uint16_t * alpha_to ; t#uint16_t * index_of ; t#uint16_t * genpoly ; int nroots ; int fcr ; int prim ; int iprim ; int gfpoly ; int ( * gffunc ) ( int ) ; int users ; s#list_head list ; } 
encode_rs8 int encode_rs8 ( s#rs_control * , t#uint8_t * , int , t#uint16_t * , t#uint16_t ) 
decode_rs8 int decode_rs8 ( s#rs_control * , t#uint8_t * , t#uint16_t * , int , t#uint16_t * , int , int * , t#uint16_t , t#uint16_t * ) 
init_rs s#rs_control * init_rs ( int , int , int , int , int ) 
init_rs_non_canonical s#rs_control * init_rs_non_canonical ( int , int ( * ) ( int ) , int , int , int ) 
free_rs void free_rs ( s#rs_control * ) 

/* lib/scatterlist.o */
sg_next s#scatterlist * sg_next ( s#scatterlist * ) 
sg_nents int sg_nents ( s#scatterlist * ) 
sg_last s#scatterlist * sg_last ( s#scatterlist * , unsigned int ) 
sg_init_table void sg_init_table ( s#scatterlist * , unsigned int ) 
sg_init_one void sg_init_one ( s#scatterlist * , const void * , unsigned int ) 
t#sg_free_fn typedef void ( sg_free_fn ) ( s#scatterlist * , unsigned int ) 
__sg_free_table void __sg_free_table ( s#sg_table * , unsigned int , t#sg_free_fn * ) 
sg_free_table void sg_free_table ( s#sg_table * ) 
t#sg_alloc_fn typedef s#scatterlist * ( sg_alloc_fn ) ( unsigned int , t#gfp_t ) 
__sg_alloc_table int __sg_alloc_table ( s#sg_table * , unsigned int , unsigned int , t#gfp_t , t#sg_alloc_fn * ) 
sg_alloc_table int sg_alloc_table ( s#sg_table * , unsigned int , t#gfp_t ) 
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
sg_alloc_table_from_pages int sg_alloc_table_from_pages ( s#sg_table * , s#page * * , unsigned int , unsigned long , unsigned long , t#gfp_t ) 
__sg_page_iter_start void __sg_page_iter_start ( s#sg_page_iter * , s#scatterlist * , unsigned int , unsigned long ) 
__sg_page_iter_next t#bool __sg_page_iter_next ( s#sg_page_iter * ) 
sg_miter_start void sg_miter_start ( s#sg_mapping_iter * , s#scatterlist * , unsigned int , unsigned int ) 
sg_miter_skip t#bool sg_miter_skip ( s#sg_mapping_iter * , t#off_t ) 
sg_miter_next t#bool sg_miter_next ( s#sg_mapping_iter * ) 
sg_miter_stop void sg_miter_stop ( s#sg_mapping_iter * ) 
sg_copy_from_buffer t#size_t sg_copy_from_buffer ( s#scatterlist * , unsigned int , void * , t#size_t ) 
sg_copy_to_buffer t#size_t sg_copy_to_buffer ( s#scatterlist * , unsigned int , void * , t#size_t ) 
sg_pcopy_from_buffer t#size_t sg_pcopy_from_buffer ( s#scatterlist * , unsigned int , void * , t#size_t , t#off_t ) 
sg_pcopy_to_buffer t#size_t sg_pcopy_to_buffer ( s#scatterlist * , unsigned int , void * , t#size_t , t#off_t ) 

/* lib/sha1.o */
sha_transform void sha_transform ( t#__u32 * , const char * , t#__u32 * ) 

/* lib/sort.o */
sort void sort ( void * , t#size_t , t#size_t , int ( * ) ( const void * , const void * ) , void ( * ) ( void * , void * , int ) ) 

/* lib/string.o */
strnicmp extern int strnicmp ( const char * , const char * , t#__kernel_size_t ) 
strcasecmp extern int strcasecmp ( const char * , const char * ) 
strncasecmp extern int strncasecmp ( const char * , const char * , t#size_t ) 
strlcpy t#size_t strlcpy ( char * , const char * , t#size_t ) 
strncat extern char * strncat ( char * , const char * , t#__kernel_size_t ) 
strlcat extern t#size_t strlcat ( char * , const char * , t#__kernel_size_t ) 
strchr extern char * strchr ( const char * , int ) 
strrchr extern char * strrchr ( const char * , int ) 
strnchr extern char * strnchr ( const char * , t#size_t , int ) 
skip_spaces extern char * skip_spaces ( const char * ) 
strim extern char * strim ( char * ) 
strnlen extern t#__kernel_size_t strnlen ( const char * , t#__kernel_size_t ) 
strspn extern t#__kernel_size_t strspn ( const char * , const char * ) 
strcspn extern t#__kernel_size_t strcspn ( const char * , const char * ) 
strpbrk extern char * strpbrk ( const char * , const char * ) 
strsep extern char * strsep ( char * * , const char * ) 
sysfs_streq extern t#bool sysfs_streq ( const char * , const char * ) 
strtobool extern int strtobool ( const char * , t#bool * ) 
memzero_explicit void memzero_explicit ( void * , t#size_t ) 
memcpy extern void * memcpy ( void * , const void * , t#__kernel_size_t ) 
memscan extern void * memscan ( void * , int , t#__kernel_size_t ) 
strstr extern char * strstr ( const char * , const char * ) 
strnstr extern char * strnstr ( const char * , const char * , t#size_t ) 
memchr_inv void * memchr_inv ( const void * , int , t#size_t ) 

/* lib/string_helpers.o */
e#string_size_units enum string_size_units { STRING_UNITS_10 , STRING_UNITS_2 , } 
string_get_size int string_get_size ( t#u64 , e#string_size_units , char * , int ) 
string_unescape int string_unescape ( char * , char * , t#size_t , unsigned int ) 

/* lib/strncpy_from_user.o */
strncpy_from_user extern long strncpy_from_user ( char * , const char * , long ) 

/* lib/strnlen_user.o */
strnlen_user extern long strnlen_user ( const char * , long ) 
strlen_user extern long strlen_user ( const char * ) 

/* lib/syscall.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache
s##mempolicy
s##file
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##vfsmount
s##dentry
s##bsd_acct_struct
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
task_current_syscall extern int task_current_syscall ( s#task_struct * , long * , unsigned long [ 6 ] , unsigned int , unsigned long * , unsigned long * ) 

/* lib/textsearch.o */
s#ts_state struct ts_state { unsigned int offset ; char cb [ 40 ] ; } 
s#ts_config struct ts_config { s#ts_ops * ops ; int flags ; unsigned int ( * get_next_block ) ( unsigned int , const t#u8 * * , s#ts_config * , s#ts_state * ) ; void ( * finish ) ( s#ts_config * , s#ts_state * ) ; } 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#ts_ops struct ts_ops { const char * name ; s#ts_config * ( * init ) ( const void * , unsigned int , t#gfp_t , int ) ; unsigned int ( * find ) ( s#ts_config * , s#ts_state * ) ; void ( * destroy ) ( s#ts_config * ) ; void * ( * get_pattern ) ( s#ts_config * ) ; unsigned int ( * get_pattern_len ) ( s#ts_config * ) ; s#module * owner ; s#list_head list ; } 
textsearch_register extern int textsearch_register ( s#ts_ops * ) 
textsearch_unregister extern int textsearch_unregister ( s#ts_ops * ) 
textsearch_prepare extern s#ts_config * textsearch_prepare ( const char * , const void * , unsigned int , t#gfp_t , int ) 
textsearch_find_continuous extern unsigned int textsearch_find_continuous ( s#ts_config * , s#ts_state * , const void * , unsigned int ) 
textsearch_destroy extern void textsearch_destroy ( s#ts_config * ) 

/* lib/timerqueue.o */
timerqueue_add extern void timerqueue_add ( s#timerqueue_head * , s#timerqueue_node * ) 
timerqueue_del extern void timerqueue_del ( s#timerqueue_head * , s#timerqueue_node * ) 
timerqueue_iterate_next extern s#timerqueue_node * timerqueue_iterate_next ( s#timerqueue_node * ) 

/* lib/uuid.o */
t#uuid_le typedef struct { t#__u8 b [ 16 ] ; } uuid_le 
uuid_le_gen extern void uuid_le_gen ( t#uuid_le * ) 
t#uuid_be typedef struct { t#__u8 b [ 16 ] ; } uuid_be 
uuid_be_gen extern void uuid_be_gen ( t#uuid_be * ) 

/* lib/vsprintf.o */
simple_strtoull extern unsigned long long simple_strtoull ( const char * , char * * , unsigned int ) 
simple_strtoul extern unsigned long simple_strtoul ( const char * , char * * , unsigned int ) 
simple_strtol extern long simple_strtol ( const char * , char * * , unsigned int ) 
simple_strtoll extern long long simple_strtoll ( const char * , char * * , unsigned int ) 
vsnprintf extern __attribute__ ( ( format ( printf , 3 , 0 ) ) ) int vsnprintf ( char * , t#size_t , const char * , va_list args ) 
vscnprintf extern __attribute__ ( ( format ( printf , 3 , 0 ) ) ) int vscnprintf ( char * , t#size_t , const char * , va_list args ) 
snprintf extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) int snprintf ( char * , t#size_t , const char * , ... ) 
scnprintf extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) int scnprintf ( char * , t#size_t , const char * , ... ) 
vsprintf extern __attribute__ ( ( format ( printf , 2 , 0 ) ) ) int vsprintf ( char * , const char * , va_list ) 
sprintf extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int sprintf ( char * , const char * , ... ) 
vbin_printf int vbin_printf ( t#u32 * , t#size_t , const char * , va_list args ) 
bstr_printf int bstr_printf ( char * , t#size_t , const char * , const t#u32 * ) 
bprintf int bprintf ( t#u32 * , t#size_t , const char * , ... ) 
vsscanf extern __attribute__ ( ( format ( scanf , 2 , 0 ) ) ) int vsscanf ( const char * , const char * , va_list ) 
sscanf extern __attribute__ ( ( format ( scanf , 2 , 3 ) ) ) int sscanf ( const char * , const char * , ... ) 

/* lib/xz/xz_dec_syms.o */
s##xz_dec
e#xz_mode enum xz_mode { XZ_SINGLE , XZ_PREALLOC , XZ_DYNALLOC } 
xz_dec_init extern s#xz_dec * xz_dec_init ( e#xz_mode , t#uint32_t ) 
xz_dec_reset extern void xz_dec_reset ( s#xz_dec * ) 
e#xz_ret enum xz_ret { XZ_OK , XZ_STREAM_END , XZ_UNSUPPORTED_CHECK , XZ_MEM_ERROR , XZ_MEMLIMIT_ERROR , XZ_FORMAT_ERROR , XZ_OPTIONS_ERROR , XZ_DATA_ERROR , XZ_BUF_ERROR } 
s#xz_buf struct xz_buf { const t#uint8_t * in ; t#size_t in_pos ; t#size_t in_size ; t#uint8_t * out ; t#size_t out_pos ; t#size_t out_size ; } 
xz_dec_run extern e#xz_ret xz_dec_run ( s#xz_dec * , s#xz_buf * ) 
xz_dec_end extern void xz_dec_end ( s#xz_dec * ) 

/* lib/zlib_deflate/deflate_syms.o */
zlib_deflate_workspacesize extern int zlib_deflate_workspacesize ( int , int ) 
t#Byte typedef unsigned char Byte 
t#uInt typedef unsigned int uInt 
t#uLong typedef unsigned long uLong 
s#internal_state struct internal_state { int dummy ; } 
s#z_stream_s struct z_stream_s { const t#Byte * next_in ; t#uInt avail_in ; t#uLong total_in ; t#Byte * next_out ; t#uInt avail_out ; t#uLong total_out ; char * msg ; s#internal_state * state ; void * workspace ; int data_type ; t#uLong adler ; t#uLong reserved ; } 
t#z_stream typedef s#z_stream_s z_stream 
t#z_streamp typedef t#z_stream * z_streamp 
zlib_deflate extern int zlib_deflate ( t#z_streamp , int ) 
zlib_deflateInit2 extern int zlib_deflateInit2 ( t#z_streamp , int , int , int , int , int ) 
zlib_deflateEnd extern int zlib_deflateEnd ( t#z_streamp ) 
zlib_deflateReset extern int zlib_deflateReset ( t#z_streamp ) 

/* lib/zlib_inflate/inflate_syms.o */
zlib_inflate_workspacesize extern int zlib_inflate_workspacesize ( void ) 
zlib_inflate extern int zlib_inflate ( t#z_streamp , int ) 
zlib_inflateInit2 extern int zlib_inflateInit2 ( t#z_streamp , int ) 
zlib_inflateEnd extern int zlib_inflateEnd ( t#z_streamp ) 
zlib_inflateReset extern int zlib_inflateReset ( t#z_streamp ) 
zlib_inflateIncomp extern int zlib_inflateIncomp ( t#z_stream * ) 
zlib_inflate_blob extern int zlib_inflate_blob ( void * , unsigned , const void * , unsigned ) 

/* mm/backing-dev.o */
s##tvec_base
s##workqueue_struct
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##mtd_info
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
default_backing_dev_info extern s#backing_dev_info default_backing_dev_info 
noop_backing_dev_info extern s#backing_dev_info noop_backing_dev_info 
bdi_register __attribute__ ( ( format ( printf , 3 , 4 ) ) ) int bdi_register ( s#backing_dev_info * , s#device * , const char * , ... ) 
bdi_register_dev int bdi_register_dev ( s#backing_dev_info * , t#dev_t ) 
bdi_unregister void bdi_unregister ( s#backing_dev_info * ) 
bdi_init int bdi_init ( s#backing_dev_info * ) 
bdi_destroy void bdi_destroy ( s#backing_dev_info * ) 
bdi_setup_and_register int bdi_setup_and_register ( s#backing_dev_info * , char * , unsigned int ) 
clear_bdi_congested void clear_bdi_congested ( s#backing_dev_info * , int ) 
set_bdi_congested void set_bdi_congested ( s#backing_dev_info * , int ) 
congestion_wait long congestion_wait ( int , long ) 
s##bootmem_data
wait_iff_congested long wait_iff_congested ( s#zone * , int , long ) 

/* mm/balloon_compaction.o */
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##slab
s##kmem_cache_node
s##array_cache
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
s#balloon_dev_info struct balloon_dev_info { void * balloon_device ; s#address_space * mapping ; unsigned long isolated_pages ; t#spinlock_t pages_lock ; s#list_head pages ; } 
balloon_devinfo_alloc extern s#balloon_dev_info * balloon_devinfo_alloc ( void * ) 
balloon_page_enqueue extern s#page * balloon_page_enqueue ( s#balloon_dev_info * ) 
balloon_page_dequeue extern s#page * balloon_page_dequeue ( s#balloon_dev_info * ) 
balloon_mapping_alloc extern s#address_space * balloon_mapping_alloc ( s#balloon_dev_info * , const s#address_space_operations * ) 

/* mm/bounce.o */
s##blk_mq_ctx
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##seq_file
s##radix_tree_node
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##tvec_base
s##workqueue_struct
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##slab
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##bsg_job
s##throtl_data
blk_queue_bounce extern void blk_queue_bounce ( s#request_queue * , s#bio * * ) 

/* mm/cleancache.o */
s#cleancache_filekey struct cleancache_filekey { union { t#ino_t ino ; t#__u32 fh [ 6 ] ; t#u32 key [ 6 ] ; } u ; } 
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache
s#cleancache_ops struct cleancache_ops { int ( * init_fs ) ( t#size_t ) ; int ( * init_shared_fs ) ( char * , t#size_t ) ; int ( * get_page ) ( int , s#cleancache_filekey , unsigned long , s#page * ) ; void ( * put_page ) ( int , s#cleancache_filekey , unsigned long , s#page * ) ; void ( * invalidate_page ) ( int , s#cleancache_filekey , unsigned long ) ; void ( * invalidate_inode ) ( int , s#cleancache_filekey ) ; void ( * invalidate_fs ) ( int ) ; } 
cleancache_register_ops extern s#cleancache_ops * cleancache_register_ops ( s#cleancache_ops * ) 
__cleancache_init_fs extern void __cleancache_init_fs ( s#super_block * ) 
__cleancache_init_shared_fs extern void __cleancache_init_shared_fs ( char * , s#super_block * ) 
__cleancache_get_page extern int __cleancache_get_page ( s#page * ) 
__cleancache_put_page extern void __cleancache_put_page ( s#page * ) 
__cleancache_invalidate_page extern void __cleancache_invalidate_page ( s#address_space * , s#page * ) 
__cleancache_invalidate_inode extern void __cleancache_invalidate_inode ( s#address_space * ) 
__cleancache_invalidate_fs extern void __cleancache_invalidate_fs ( s#super_block * ) 

/* mm/dmapool.o */
s##dma_pool
s##device_private
s##sock
s##sysfs_dirent
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
dma_pool_create s#dma_pool * dma_pool_create ( const char * , s#device * , t#size_t , t#size_t , t#size_t ) 
dma_pool_destroy void dma_pool_destroy ( s#dma_pool * ) 
dma_pool_alloc void * dma_pool_alloc ( s#dma_pool * , t#gfp_t , t#dma_addr_t * ) 
dma_pool_free void dma_pool_free ( s#dma_pool * , void * , t#dma_addr_t ) 
dmam_pool_create s#dma_pool * dmam_pool_create ( const char * , s#device * , t#size_t , t#size_t , t#size_t ) 
dmam_pool_destroy void dmam_pool_destroy ( s#dma_pool * ) 

/* mm/filemap.o */
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kioctx
s##eventfd_ctx
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##workqueue_struct
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##cgroup_taskset
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##mtd_info
s##nameidata
s##cdev
s##slab
delete_from_page_cache extern void delete_from_page_cache ( s#page * ) 
filemap_fdatawrite extern int filemap_fdatawrite ( s#address_space * ) 
filemap_fdatawrite_range extern int filemap_fdatawrite_range ( s#address_space * , t#loff_t , t#loff_t ) 
filemap_flush extern int filemap_flush ( s#address_space * ) 
filemap_fdatawait_range extern int filemap_fdatawait_range ( s#address_space * , t#loff_t , t#loff_t ) 
filemap_fdatawait extern int filemap_fdatawait ( s#address_space * ) 
filemap_write_and_wait extern int filemap_write_and_wait ( s#address_space * ) 
filemap_write_and_wait_range extern int filemap_write_and_wait_range ( s#address_space * , t#loff_t , t#loff_t ) 
replace_page_cache_page int replace_page_cache_page ( s#page * , s#page * , t#gfp_t ) 
add_to_page_cache_locked int add_to_page_cache_locked ( s#page * , s#address_space * , unsigned long , t#gfp_t ) 
add_to_page_cache int add_to_page_cache ( s#page * , s#address_space * , unsigned long , t#gfp_t ) 
add_to_page_cache_lru int add_to_page_cache_lru ( s#page * , s#address_space * , unsigned long , t#gfp_t ) 
__page_cache_alloc extern s#page * __page_cache_alloc ( t#gfp_t ) 
wait_on_page_bit extern void wait_on_page_bit ( s#page * , int ) 
add_page_wait_queue extern void add_page_wait_queue ( s#page * , t#wait_queue_t * ) 
unlock_page extern void unlock_page ( s#page * ) 
end_page_writeback extern void end_page_writeback ( s#page * ) 
__lock_page extern void __lock_page ( s#page * ) 
__lock_page_killable extern int __lock_page_killable ( s#page * ) 
page_cache_next_hole unsigned long page_cache_next_hole ( s#address_space * , unsigned long , unsigned long ) 
page_cache_prev_hole unsigned long page_cache_prev_hole ( s#address_space * , unsigned long , unsigned long ) 
find_get_entry s#page * find_get_entry ( s#address_space * , unsigned long ) 
find_lock_entry s#page * find_lock_entry ( s#address_space * , unsigned long ) 
pagecache_get_page s#page * pagecache_get_page ( s#address_space * , unsigned long , int , t#gfp_t , t#gfp_t ) 
find_get_pages_contig unsigned find_get_pages_contig ( s#address_space * , unsigned long , unsigned int , s#page * * ) 
find_get_pages_tag unsigned find_get_pages_tag ( s#address_space * , unsigned long * , int , unsigned int , s#page * * ) 
generic_segment_checks extern int generic_segment_checks ( const s#iovec * , unsigned long * , t#size_t * , int ) 
generic_file_aio_read extern t#ssize_t generic_file_aio_read ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t ) 
filemap_fault extern int filemap_fault ( s#vm_area_struct * , s#vm_fault * ) 
filemap_page_mkwrite extern int filemap_page_mkwrite ( s#vm_area_struct * , s#vm_fault * ) 
generic_file_mmap extern int generic_file_mmap ( s#file * , s#vm_area_struct * ) 
generic_file_readonly_mmap extern int generic_file_readonly_mmap ( s#file * , s#vm_area_struct * ) 
t#filler_t typedef int filler_t ( void * , s#page * ) 
read_cache_page extern s#page * read_cache_page ( s#address_space * , unsigned long , t#filler_t * , void * ) 
read_cache_page_gfp extern s#page * read_cache_page_gfp ( s#address_space * , unsigned long , t#gfp_t ) 
s#iov_iter struct iov_iter { const s#iovec * iov ; unsigned long nr_segs ; t#size_t iov_offset ; t#size_t count ; } 
iov_iter_copy_from_user_atomic t#size_t iov_iter_copy_from_user_atomic ( s#page * , s#iov_iter * , unsigned long , t#size_t ) 
iov_iter_copy_from_user t#size_t iov_iter_copy_from_user ( s#page * , s#iov_iter * , unsigned long , t#size_t ) 
iov_iter_advance void iov_iter_advance ( s#iov_iter * , t#size_t ) 
iov_iter_fault_in_readable int iov_iter_fault_in_readable ( s#iov_iter * , t#size_t ) 
iov_iter_single_seg_count t#size_t iov_iter_single_seg_count ( const s#iov_iter * ) 
generic_write_checks int generic_write_checks ( s#file * , t#loff_t * , t#size_t * , int ) 
pagecache_write_begin int pagecache_write_begin ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , void * * ) 
pagecache_write_end int pagecache_write_end ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) 
generic_file_direct_write extern t#ssize_t generic_file_direct_write ( s#kiocb * , const s#iovec * , unsigned long * , t#loff_t , t#loff_t * , t#size_t , t#size_t ) 
grab_cache_page_write_begin s#page * grab_cache_page_write_begin ( s#address_space * , unsigned long , unsigned ) 
generic_file_buffered_write extern t#ssize_t generic_file_buffered_write ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t , t#loff_t * , t#size_t , t#ssize_t ) 
__generic_file_aio_write extern t#ssize_t __generic_file_aio_write ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t * ) 
generic_file_aio_write extern t#ssize_t generic_file_aio_write ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t ) 
try_to_release_page extern int try_to_release_page ( s#page * , t#gfp_t ) 

/* mm/fremap.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##optimistic_spin_queue
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##workqueue_struct
s##io_context
s##kstatfs
s##radix_tree_node
s##kiocb
s##iovec
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##export_operations
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mempolicy
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##linux_binfmt
s##kioctx_table
generic_file_remap_pages2 extern int generic_file_remap_pages2 ( s#vm_area_struct * , unsigned long , unsigned long , unsigned long ) 

/* mm/frontswap.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s#frontswap_ops struct frontswap_ops { void ( * init ) ( unsigned ) ; int ( * store ) ( unsigned , unsigned long , s#page * ) ; int ( * load ) ( unsigned , unsigned long , s#page * ) ; void ( * invalidate_page ) ( unsigned , unsigned long ) ; void ( * invalidate_area ) ( unsigned ) ; } 
frontswap_register_ops extern s#frontswap_ops * frontswap_register_ops ( s#frontswap_ops * ) 
frontswap_writethrough extern void frontswap_writethrough ( t#bool ) 
frontswap_tmem_exclusive_gets extern void frontswap_tmem_exclusive_gets ( t#bool ) 
__frontswap_init extern void __frontswap_init ( unsigned , unsigned long * ) 
__frontswap_test extern t#bool __frontswap_test ( s#swap_info_struct * , unsigned long ) 
__frontswap_store extern int __frontswap_store ( s#page * ) 
__frontswap_load extern int __frontswap_load ( s#page * ) 
__frontswap_invalidate_page extern void __frontswap_invalidate_page ( unsigned , unsigned long ) 
__frontswap_invalidate_area extern void __frontswap_invalidate_area ( unsigned ) 
frontswap_shrink extern void frontswap_shrink ( unsigned long ) 
frontswap_curr_pages extern unsigned long frontswap_curr_pages ( void ) 

/* mm/hugetlb.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##radix_tree_node
s##kiocb
s##iovec
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##linux_binfmt
s##kioctx_table
vma_kernel_pagesize extern unsigned long vma_kernel_pagesize ( s#vm_area_struct * ) 
PageHuge int PageHuge ( s#page * ) 
PageHeadHuge extern int PageHeadHuge ( s#page * ) 

/* mm/list_lru.o */
list_lru_add t#bool list_lru_add ( s#list_lru * , s#list_head * ) 
list_lru_del t#bool list_lru_del ( s#list_lru * , s#list_head * ) 
list_lru_count_node unsigned long list_lru_count_node ( s#list_lru * , int ) 
e#lru_status enum lru_status { LRU_REMOVED , LRU_ROTATE , LRU_SKIP , LRU_RETRY , } 
t#list_lru_walk_cb typedef e#lru_status ( * list_lru_walk_cb ) ( s#list_head * , t#spinlock_t * , void * ) 
list_lru_walk_node unsigned long list_lru_walk_node ( s#list_lru * , int , t#list_lru_walk_cb , void * , unsigned long * ) 
list_lru_init int list_lru_init ( s#list_lru * ) 
list_lru_destroy void list_lru_destroy ( s#list_lru * ) 

/* mm/maccess.o */
probe_kernel_read extern long probe_kernel_read ( void * , const void * , t#size_t ) 
probe_kernel_write extern long __attribute__ ( ( no_instrument_function ) ) probe_kernel_write ( void * , const void * , t#size_t ) 

/* mm/memcontrol.o */
s##posix_acl
s##nameidata
s##vfsmount
s##module
s##kioctx
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##device_private
s##iw_handler_def
s##iw_public_data
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##array_cache
s#kmem_cache_node struct kmem_cache_node { t#spinlock_t list_lock ; s#list_head slabs_partial ; s#list_head slabs_full ; s#list_head slabs_free ; unsigned long free_objects ; unsigned int free_limit ; unsigned int colour_next ; s#array_cache * shared ; s#array_cache * * alien ; unsigned long next_reap ; int free_touched ; } 
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##key_user
s##key_type
s##assoc_array_ptr
s##pipe_inode_info
s##mem_cgroup
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mtd_info
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##eventfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##css_id
s##cgroup_taskset
mem_cgroup_subsys extern s#cgroup_subsys mem_cgroup_subsys 
e#vm_event_item enum vm_event_item { PGPGIN , PGPGOUT , PSWPIN , PSWPOUT , PGALLOC_DMA , PGALLOC_NORMAL , PGALLOC_MOVABLE , PGFREE , PGACTIVATE , PGDEACTIVATE , PGFAULT , PGMAJFAULT , PGREFILL_DMA , PGREFILL_NORMAL , PGREFILL_MOVABLE , PGSTEAL_KSWAPD_DMA , PGSTEAL_KSWAPD_NORMAL , PGSTEAL_KSWAPD_MOVABLE , PGSTEAL_DIRECT_DMA , PGSTEAL_DIRECT_NORMAL , PGSTEAL_DIRECT_MOVABLE , PGSCAN_KSWAPD_DMA , PGSCAN_KSWAPD_NORMAL , PGSCAN_KSWAPD_MOVABLE , PGSCAN_DIRECT_DMA , PGSCAN_DIRECT_NORMAL , PGSCAN_DIRECT_MOVABLE , PGSCAN_DIRECT_THROTTLE , PGSCAN_ZONE_RECLAIM_FAILED , PGINODESTEAL , SLABS_SCANNED , KSWAPD_INODESTEAL , KSWAPD_LOW_WMARK_HIT_QUICKLY , KSWAPD_HIGH_WMARK_HIT_QUICKLY , PAGEOUTRUN , ALLOCSTALL , PGROTATED , DROP_PAGECACHE , DROP_SLAB , NUMA_PTE_UPDATES , NUMA_HUGE_PTE_UPDATES , NUMA_HINT_FAULTS , NUMA_HINT_FAULTS_LOCAL , NUMA_PAGE_MIGRATE , PGMIGRATE_SUCCESS , PGMIGRATE_FAIL , COMPACTMIGRATE_SCANNED , COMPACTFREE_SCANNED , COMPACTISOLATED , COMPACTSTALL , COMPACTFAIL , COMPACTSUCCESS , HTLB_BUDDY_PGALLOC , HTLB_BUDDY_PGALLOC_FAIL , UNEVICTABLE_PGCULLED , UNEVICTABLE_PGSCANNED , UNEVICTABLE_PGRESCUED , UNEVICTABLE_PGMLOCKED , UNEVICTABLE_PGMUNLOCKED , UNEVICTABLE_PGCLEARED , UNEVICTABLE_PGSTRANDED , THP_FAULT_ALLOC , THP_FAULT_FALLBACK , THP_COLLAPSE_ALLOC , THP_COLLAPSE_ALLOC_FAILED , THP_SPLIT , THP_ZERO_PAGE_ALLOC , THP_ZERO_PAGE_ALLOC_FAILED , NR_VM_EVENT_ITEMS } 
__mem_cgroup_count_vm_event void __mem_cgroup_count_vm_event ( s#mm_struct * , e#vm_event_item ) 
parent_mem_cgroup extern s#mem_cgroup * parent_mem_cgroup ( s#mem_cgroup * ) 

/* mm/memory.o */
high_memory extern void * high_memory 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##module
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##export_operations
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##linux_binfmt
s##kioctx_table
s#zap_details struct zap_details { s#vm_area_struct * nonlinear_vma ; s#address_space * check_mapping ; unsigned long first_index ; unsigned long last_index ; } 
zap_page_range void zap_page_range ( s#vm_area_struct * , unsigned long , unsigned long , s#zap_details * ) 
zap_vma_ptes int zap_vma_ptes ( s#vm_area_struct * , unsigned long , unsigned long ) 
__get_user_pages long __get_user_pages ( s#task_struct * , s#mm_struct * , unsigned long , unsigned long , unsigned int , s#page * * , s#vm_area_struct * * , int * ) 
get_user_pages long get_user_pages ( s#task_struct * , s#mm_struct * , unsigned long , unsigned long , int , int , s#page * * , s#vm_area_struct * * ) 
vm_insert_page int vm_insert_page ( s#vm_area_struct * , unsigned long , s#page * ) 
vm_insert_pfn int vm_insert_pfn ( s#vm_area_struct * , unsigned long , unsigned long ) 
vm_insert_mixed int vm_insert_mixed ( s#vm_area_struct * , unsigned long , unsigned long ) 
remap_pfn_range int remap_pfn_range ( s#vm_area_struct * , unsigned long , unsigned long , unsigned long , t#pgprot_t ) 
vm_iomap_memory int vm_iomap_memory ( s#vm_area_struct * , t#phys_addr_t , unsigned long ) 
t#pte_fn_t typedef int ( * pte_fn_t ) ( t#pte_t * , t#pgtable_t , unsigned long , void * ) 
apply_to_page_range extern int apply_to_page_range ( s#mm_struct * , unsigned long , unsigned long , t#pte_fn_t , void * ) 
unmap_mapping_range void unmap_mapping_range ( s#address_space * , t#loff_t const , t#loff_t const , int ) 
follow_pfn int follow_pfn ( s#vm_area_struct * , unsigned long , unsigned long * ) 
generic_access_phys int generic_access_phys ( s#vm_area_struct * , unsigned long , void * , int , int ) 

/* mm/memory-failure.o */
hwpoison_filter_enable extern t#u32 hwpoison_filter_enable 
hwpoison_filter_dev_major extern t#u32 hwpoison_filter_dev_major 
hwpoison_filter_dev_minor extern t#u32 hwpoison_filter_dev_minor 
hwpoison_filter_flags_mask extern t#u64 hwpoison_filter_flags_mask 
hwpoison_filter_flags_value extern t#u64 hwpoison_filter_flags_value 
hwpoison_filter_memcg extern t#u64 hwpoison_filter_memcg 
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##optimistic_spin_queue
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##tvec_base
s##workqueue_struct
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
hwpoison_filter extern int hwpoison_filter ( s#page * ) 
shake_page extern void shake_page ( s#page * , int ) 
memory_failure extern int memory_failure ( unsigned long , int , int ) 
memory_failure_queue extern void memory_failure_queue ( unsigned long , int , int ) 
unpoison_memory extern int unpoison_memory ( unsigned long ) 

/* mm/memory_hotplug.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##seq_file
s##optimistic_spin_queue
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##cdev
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
__add_pages extern int __add_pages ( int , s#zone * , unsigned long , unsigned long ) 
__remove_pages extern int __remove_pages ( s#zone * , unsigned long , unsigned long ) 
t#online_page_callback_t typedef void ( * online_page_callback_t ) ( s#page * ) 
set_online_page_callback extern int set_online_page_callback ( t#online_page_callback_t ) 
restore_online_page_callback extern int restore_online_page_callback ( t#online_page_callback_t ) 
__online_page_set_limits extern void __online_page_set_limits ( s#page * ) 
__online_page_increment_counters extern void __online_page_increment_counters ( s#page * ) 
__online_page_free extern void __online_page_free ( s#page * ) 
add_memory extern int add_memory ( int , t#u64 , t#u64 ) 
try_offline_node extern void try_offline_node ( int ) 
remove_memory extern void remove_memory ( int , t#u64 , t#u64 ) 

/* mm/mempolicy.o */
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##optimistic_spin_queue
s##kiocb
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
s##slab
alloc_pages_current extern s#page * alloc_pages_current ( t#gfp_t , unsigned ) 

/* mm/mempool.o */
mempool_destroy extern void mempool_destroy ( t#mempool_t * ) 
mempool_create extern t#mempool_t * mempool_create ( int , t#mempool_alloc_t * , t#mempool_free_t * , void * ) 
mempool_create_node extern t#mempool_t * mempool_create_node ( int , t#mempool_alloc_t * , t#mempool_free_t * , void * , t#gfp_t , int ) 
mempool_resize extern int mempool_resize ( t#mempool_t * , int , t#gfp_t ) 
mempool_alloc extern void * mempool_alloc ( t#mempool_t * , t#gfp_t ) 
mempool_free extern void mempool_free ( void * , t#mempool_t * ) 
mempool_alloc_slab void * mempool_alloc_slab ( t#gfp_t , void * ) 
mempool_free_slab void mempool_free_slab ( void * , void * ) 
mempool_kmalloc void * mempool_kmalloc ( t#gfp_t , void * ) 
mempool_kfree void mempool_kfree ( void * , void * ) 
mempool_alloc_pages void * mempool_alloc_pages ( t#gfp_t , void * ) 
mempool_free_pages void mempool_free_pages ( void * , void * ) 

/* mm/migrate.o */
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##optimistic_spin_queue
s##slab
s##kmem_cache_node
s##array_cache
s##kiocb
s##iovec
s##files_struct
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
fail_migrate_page extern int fail_migrate_page ( s#address_space * , s#page * , s#page * ) 
migrate_page extern int migrate_page ( s#address_space * , s#page * , s#page * , e#migrate_mode ) 
buffer_migrate_page extern int buffer_migrate_page ( s#address_space * , s#page * , s#page * , e#migrate_mode ) 

/* mm/mlock.o */
can_do_mlock extern int can_do_mlock ( void ) 

/* mm/mm_init.o */
s##sock
s##sysfs_dirent
mm_kobj extern s#kobject * mm_kobj 

/* mm/mmap.o */
vm_get_page_prot t#pgprot_t vm_get_page_prot ( unsigned long ) 
vm_memory_committed unsigned long vm_memory_committed ( void ) 
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##tvec_base
s##workqueue_struct
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##mtd_info
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##linux_binfmt
s##kioctx_table
s##bsd_acct_struct
s##sem_undo_list
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
get_unmapped_area extern unsigned long get_unmapped_area ( s#file * , unsigned long , unsigned long , unsigned long , unsigned long ) 
find_vma extern s#vm_area_struct * find_vma ( s#mm_struct * , unsigned long ) 
vm_munmap extern int vm_munmap ( unsigned long , t#size_t ) 
vm_brk extern unsigned long vm_brk ( unsigned long , unsigned long ) 

/* mm/mmu_context.o */
s##anon_vma
s##address_space
s##slab
s##kmem_cache
s##mempolicy
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
use_mm void use_mm ( s#mm_struct * ) 
unuse_mm void unuse_mm ( s#mm_struct * ) 

/* mm/mmu_notifier.o */
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
__mmu_notifier_invalidate_range_start extern void __mmu_notifier_invalidate_range_start ( s#mm_struct * , unsigned long , unsigned long ) 
__mmu_notifier_invalidate_range_end extern void __mmu_notifier_invalidate_range_end ( s#mm_struct * , unsigned long , unsigned long ) 
mmu_notifier_register extern int mmu_notifier_register ( s#mmu_notifier * , s#mm_struct * ) 
__mmu_notifier_register extern int __mmu_notifier_register ( s#mmu_notifier * , s#mm_struct * ) 
mmu_notifier_unregister extern void mmu_notifier_unregister ( s#mmu_notifier * , s#mm_struct * ) 

/* mm/oom_kill.o */
register_oom_notifier extern int register_oom_notifier ( s#notifier_block * ) 
unregister_oom_notifier extern int unregister_oom_notifier ( s#notifier_block * ) 

/* mm/page-writeback.o */
dirty_writeback_interval extern unsigned int dirty_writeback_interval 
laptop_mode extern int laptop_mode 
s##tvec_base
s##workqueue_struct
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##iovec
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##mtd_info
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##sem_undo_list
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
bdi_writeout_inc extern void bdi_writeout_inc ( s#backing_dev_info * ) 
bdi_set_max_ratio int bdi_set_max_ratio ( s#backing_dev_info * , unsigned int ) 
balance_dirty_pages_ratelimited void balance_dirty_pages_ratelimited ( s#address_space * ) 
tag_pages_for_writeback void tag_pages_for_writeback ( s#address_space * , unsigned long , unsigned long ) 
t#writepage_t typedef int ( * writepage_t ) ( s#page * , s#writeback_control * , void * ) 
write_cache_pages int write_cache_pages ( s#address_space * , s#writeback_control * , t#writepage_t , void * ) 
generic_writepages int generic_writepages ( s#address_space * , s#writeback_control * ) 
write_one_page int write_one_page ( s#page * , int ) 
account_page_dirtied void account_page_dirtied ( s#page * , s#address_space * ) 
account_page_writeback void account_page_writeback ( s#page * ) 
__set_page_dirty_nobuffers int __set_page_dirty_nobuffers ( s#page * ) 
account_page_redirty void account_page_redirty ( s#page * ) 
redirty_page_for_writepage int redirty_page_for_writepage ( s#writeback_control * , s#page * ) 
set_page_dirty int set_page_dirty ( s#page * ) 
set_page_dirty_lock int set_page_dirty_lock ( s#page * ) 
clear_page_dirty_for_io int clear_page_dirty_for_io ( s#page * ) 
__test_set_page_writeback int __test_set_page_writeback ( s#page * , t#bool ) 
mapping_tagged int mapping_tagged ( s#address_space * , int ) 
wait_for_stable_page void wait_for_stable_page ( s#page * ) 

/* mm/page_alloc.o */
E#N_NORMAL_MEMORY 2 
E#N_HIGH_MEMORY E#N_NORMAL_MEMORY 
E#NR_NODE_STATES ( E#N_HIGH_MEMORY ) + 2 
node_states extern t#nodemask_t node_states [ E#NR_NODE_STATES ] 
totalram_pages extern unsigned long totalram_pages 
movable_zone extern int movable_zone 
nr_node_ids extern int nr_node_ids 
nr_online_nodes extern int nr_online_nodes 
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kiocb
s##iovec
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##workqueue_struct
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##ring_buffer_iter
s##kstatfs
s##export_operations
s##mtd_info
s##nameidata
s##cdev
s##slab
split_page void split_page ( s#page * , unsigned int ) 
__alloc_pages_nodemask s#page * __alloc_pages_nodemask ( t#gfp_t , unsigned int , s#zonelist * , t#nodemask_t * ) 
__get_free_pages extern unsigned long __get_free_pages ( t#gfp_t , unsigned int ) 
get_zeroed_page extern unsigned long get_zeroed_page ( t#gfp_t ) 
__free_pages extern void __free_pages ( s#page * , unsigned int ) 
free_pages extern void free_pages ( unsigned long , unsigned int ) 
alloc_pages_exact void * alloc_pages_exact ( t#size_t , t#gfp_t ) 
alloc_pages_exact_nid void * alloc_pages_exact_nid ( int , t#size_t , t#gfp_t ) 
free_pages_exact void free_pages_exact ( void * , t#size_t ) 
nr_free_buffer_pages extern unsigned long nr_free_buffer_pages ( void ) 
s#sysinfo struct sysinfo { t#__kernel_long_t uptime ; t#__kernel_ulong_t loads [ 3 ] ; t#__kernel_ulong_t totalram ; t#__kernel_ulong_t freeram ; t#__kernel_ulong_t sharedram ; t#__kernel_ulong_t bufferram ; t#__kernel_ulong_t totalswap ; t#__kernel_ulong_t freeswap ; t#__u16 procs ; t#__u16 pad ; t#__kernel_ulong_t totalhigh ; t#__kernel_ulong_t freehigh ; t#__u32 mem_unit ; char _f [ 20 - 2 * sizeof ( __kernel_ulong_t ) - sizeof ( __u32 ) ] ; } 
si_meminfo extern void si_meminfo ( s#sysinfo * ) 
adjust_managed_page_count extern void adjust_managed_page_count ( s#page * , long ) 
free_reserved_area extern unsigned long free_reserved_area ( void * , void * , int , char * ) 

/* mm/percpu.o */
pcpu_base_addr extern void * pcpu_base_addr 
__alloc_percpu extern void * __alloc_percpu ( t#size_t , t#size_t ) 
free_percpu extern void free_percpu ( void * ) 

/* mm/readahead.o */
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##kiocb
s##iovec
s##files_struct
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##workqueue_struct
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##mtd_info
s##nameidata
s##cdev
file_ra_state_init extern void file_ra_state_init ( s#file_ra_state * , s#address_space * ) 
read_cache_pages extern int read_cache_pages ( s#address_space * , s#list_head * , t#filler_t * , void * ) 
page_cache_sync_readahead void page_cache_sync_readahead ( s#address_space * , s#file_ra_state * , s#file * , unsigned long , unsigned long ) 
page_cache_async_readahead void page_cache_async_readahead ( s#address_space * , s#file_ra_state * , s#file * , s#page * , unsigned long , unsigned long ) 

/* mm/rmap.o */
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##optimistic_spin_queue
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##tvec_base
s##workqueue_struct
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
page_mkclean int page_mkclean ( s#page * ) 

/* mm/shmem.o */
s##module
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##kioctx
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##hd_geometry
s##blk_mq_ctx
s##kmem_cache_node
s##array_cache
s##cgroup_taskset
s##css_id
s##workqueue_struct
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##slab
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##mtd_info
s##cdev
shmem_truncate_range extern void shmem_truncate_range ( s#inode * , t#loff_t , t#loff_t ) 
shmem_file_setup extern s#file * shmem_file_setup ( const char * , t#loff_t , unsigned long ) 
shmem_read_mapping_page_gfp extern s#page * shmem_read_mapping_page_gfp ( s#address_space * , unsigned long , t#gfp_t ) 

/* mm/slab.o */
s##array_cache
kmem_cache_shrink int kmem_cache_shrink ( s#kmem_cache * ) 
kmem_cache_alloc void * kmem_cache_alloc ( s#kmem_cache * , t#gfp_t ) 
kmem_cache_alloc_trace extern void * kmem_cache_alloc_trace ( s#kmem_cache * , t#gfp_t , t#size_t ) 
kmem_cache_alloc_node void * kmem_cache_alloc_node ( s#kmem_cache * , t#gfp_t , int ) 
kmem_cache_alloc_node_trace extern void * kmem_cache_alloc_node_trace ( s#kmem_cache * , t#gfp_t , int , t#size_t ) 
__kmalloc_node void * __kmalloc_node ( t#size_t , t#gfp_t , int ) 
__kmalloc_node_track_caller extern void * __kmalloc_node_track_caller ( t#size_t , t#gfp_t , int , unsigned long ) 
__kmalloc void * __kmalloc ( t#size_t , t#gfp_t ) 
__kmalloc_track_caller extern void * __kmalloc_track_caller ( t#size_t , t#gfp_t , unsigned long ) 
kmem_cache_free void kmem_cache_free ( s#kmem_cache * , void * ) 
kfree void kfree ( const void * ) 
ksize t#size_t ksize ( const void * ) 

/* mm/slab_common.o */
s##array_cache
kmem_cache_create s#kmem_cache * kmem_cache_create ( const char * , t#size_t , t#size_t , unsigned long , void ( * ) ( void * ) ) 
kmem_cache_destroy void kmem_cache_destroy ( s#kmem_cache * ) 
kmalloc_caches extern s#kmem_cache * kmalloc_caches [ ( ( 9 + 16 - 1 ) <= 25 ? ( 9 + 16 - 1 ) : 25 ) + 1 ] 
kmalloc_dma_caches extern s#kmem_cache * kmalloc_dma_caches [ ( ( 9 + 16 - 1 ) <= 25 ? ( 9 + 16 - 1 ) : 25 ) + 1 ] 
kmalloc_order_trace extern void * kmalloc_order_trace ( t#size_t , t#gfp_t , unsigned int ) 

/* mm/sparse.o */
s##page_cgroup
s#mem_section struct mem_section { unsigned long section_mem_map ; unsigned long * pageblock_flags ; s#page_cgroup * page_cgroup ; unsigned long pad ; } 
mem_section extern s#mem_section * mem_section [ ( ( ( ( 1UL << ( 46 - 24 ) ) ) + ( ( ( 1UL << 16 ) / sizeof ( struct mem_section ) ) ) - 1 ) / ( ( ( 1UL << 16 ) / sizeof ( struct mem_section ) ) ) ) ] 

/* mm/swap.o */
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##workqueue_struct
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##slab
put_page void put_page ( s#page * ) 
__get_page_tail extern t#bool __get_page_tail ( s#page * ) 
put_pages_list void put_pages_list ( s#list_head * ) 
get_kernel_pages int get_kernel_pages ( const s#kvec * , int , int , s#page * * ) 
get_kernel_page int get_kernel_page ( unsigned long , int , s#page * * ) 
mark_page_accessed extern void mark_page_accessed ( s#page * ) 
init_page_accessed extern void init_page_accessed ( s#page * ) 
lru_cache_add_file extern void lru_cache_add_file ( s#page * ) 
release_pages void release_pages ( s#page * * , int , t#bool ) 
__pagevec_release void __pagevec_release ( s#pagevec * ) 
__pagevec_lru_add void __pagevec_lru_add ( s#pagevec * ) 
pagevec_lookup unsigned pagevec_lookup ( s#pagevec * , s#address_space * , unsigned long , unsigned ) 
pagevec_lookup_tag unsigned pagevec_lookup_tag ( s#pagevec * , s#address_space * , unsigned long * , int , unsigned ) 

/* mm/swapfile.o */
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##optimistic_spin_queue
s##slab
s##kmem_cache_node
s##array_cache
s##kiocb
s##iovec
s##files_struct
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##hd_geometry
s##blk_mq_ctx
s##radix_tree_node
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_hw_ctx
s##workqueue_struct
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##mtd_info
s##cdev
__page_file_mapping extern s#address_space * __page_file_mapping ( s#page * ) 
__page_file_index extern unsigned long __page_file_index ( s#page * ) 

/* mm/truncate.o */
s##posix_acl
s##vfsmount
s##module
s##kstatfs
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##tvec_base
s##workqueue_struct
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
cancel_dirty_page extern void cancel_dirty_page ( s#page * , unsigned int ) 
generic_error_remove_page int generic_error_remove_page ( s#address_space * , s#page * ) 
truncate_inode_pages_range extern void truncate_inode_pages_range ( s#address_space * , t#loff_t , t#loff_t ) 
truncate_inode_pages extern void truncate_inode_pages ( s#address_space * , t#loff_t ) 
invalidate_mapping_pages unsigned long invalidate_mapping_pages ( s#address_space * , unsigned long , unsigned long ) 
invalidate_inode_pages2_range extern int invalidate_inode_pages2_range ( s#address_space * , unsigned long , unsigned long ) 
invalidate_inode_pages2 extern int invalidate_inode_pages2 ( s#address_space * ) 
truncate_pagecache extern void truncate_pagecache ( s#inode * , t#loff_t ) 
truncate_setsize extern void truncate_setsize ( s#inode * , t#loff_t ) 
pagecache_isize_extended void pagecache_isize_extended ( s#inode * , t#loff_t , t#loff_t ) 
truncate_pagecache_range void truncate_pagecache_range ( s#inode * , t#loff_t , t#loff_t ) 

/* mm/util.o */
kstrdup extern char * kstrdup ( const char * , t#gfp_t ) 
kstrndup extern char * kstrndup ( const char * , t#size_t , t#gfp_t ) 
kmemdup extern void * kmemdup ( const void * , t#size_t , t#gfp_t ) 
memdup_user extern void * memdup_user ( const void * , t#size_t ) 
__krealloc void * __krealloc ( const void * , t#size_t , t#gfp_t ) 
krealloc void * krealloc ( const void * , t#size_t , t#gfp_t ) 
kzfree void kzfree ( const void * ) 
strndup_user extern char * strndup_user ( const char * , long ) 
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##sock
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
s##slab
__get_user_pages_fast int __get_user_pages_fast ( unsigned long , int , int , s#page * * ) 
get_user_pages_fast int get_user_pages_fast ( unsigned long , int , int , s#page * * ) 
vm_mmap extern unsigned long vm_mmap ( s#file * , unsigned long , unsigned long , unsigned long , unsigned long , unsigned long ) 
s##static_key_mod
__tracepoint_kmalloc extern s#tracepoint __tracepoint_kmalloc 
__tracepoint_kmem_cache_alloc extern s#tracepoint __tracepoint_kmem_cache_alloc 
__tracepoint_kmalloc_node extern s#tracepoint __tracepoint_kmalloc_node 
__tracepoint_kmem_cache_alloc_node extern s#tracepoint __tracepoint_kmem_cache_alloc_node 
__tracepoint_kfree extern s#tracepoint __tracepoint_kfree 
__tracepoint_kmem_cache_free extern s#tracepoint __tracepoint_kmem_cache_free 

/* mm/vmalloc.o */
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
vmalloc_to_page s#page * vmalloc_to_page ( const void * ) 
vmalloc_to_pfn unsigned long vmalloc_to_pfn ( const void * ) 
vm_unmap_aliases extern void vm_unmap_aliases ( void ) 
vm_unmap_ram extern void vm_unmap_ram ( const void * , unsigned int ) 
vm_map_ram extern void * vm_map_ram ( s#page * * , unsigned int , int , t#pgprot_t ) 
unmap_kernel_range_noflush extern void unmap_kernel_range_noflush ( unsigned long , unsigned long ) 
s#vm_struct struct vm_struct { s#vm_struct * next ; void * addr ; unsigned long size ; unsigned long flags ; s#page * * pages ; unsigned int nr_pages ; t#phys_addr_t phys_addr ; const void * caller ; } 
map_vm_area extern int map_vm_area ( s#vm_struct * , t#pgprot_t , s#page * * * ) 
__get_vm_area extern s#vm_struct * __get_vm_area ( unsigned long , unsigned long , unsigned long , unsigned long ) 
vfree extern void vfree ( const void * ) 
vunmap extern void vunmap ( const void * ) 
vmap extern void * vmap ( s#page * * , unsigned int , unsigned long , t#pgprot_t ) 
__vmalloc extern void * __vmalloc ( unsigned long , t#gfp_t , t#pgprot_t ) 
vmalloc extern void * vmalloc ( unsigned long ) 
vzalloc extern void * vzalloc ( unsigned long ) 
vmalloc_user extern void * vmalloc_user ( unsigned long ) 
vmalloc_node extern void * vmalloc_node ( unsigned long , int ) 
vzalloc_node extern void * vzalloc_node ( unsigned long , int ) 
vmalloc_32 extern void * vmalloc_32 ( unsigned long ) 
vmalloc_32_user extern void * vmalloc_32_user ( unsigned long ) 
remap_vmalloc_range_partial extern int remap_vmalloc_range_partial ( s#vm_area_struct * , unsigned long , void * , unsigned long ) 
remap_vmalloc_range extern int remap_vmalloc_range ( s#vm_area_struct * , void * , unsigned long ) 
alloc_vm_area extern s#vm_struct * alloc_vm_area ( t#size_t , t#pte_t * * ) 
free_vm_area extern void free_vm_area ( s#vm_struct * ) 

/* mm/vmscan.o */
register_shrinker extern int register_shrinker ( s#shrinker * ) 
unregister_shrinker extern void unregister_shrinker ( s#shrinker * ) 

/* mm/vmstat.o */
E#NR_VM_EVENT_ITEMS 68 
s#vm_event_state struct vm_event_state { unsigned long event [ E#NR_VM_EVENT_ITEMS ] ; } 
vm_event_states extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( s#vm_event_state ) vm_event_states 
all_vm_events extern void all_vm_events ( unsigned long * ) 
vm_stat extern t#atomic_long_t vm_stat [ E#NR_VM_ZONE_STAT_ITEMS ] 
s##bootmem_data
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##optimistic_spin_queue
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##cdev
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
e#zone_stat_item enum zone_stat_item { NR_FREE_PAGES , NR_ALLOC_BATCH , NR_LRU_BASE , NR_INACTIVE_ANON = E#NR_LRU_BASE , NR_ACTIVE_ANON , NR_INACTIVE_FILE , NR_ACTIVE_FILE , NR_UNEVICTABLE , NR_MLOCK , NR_ANON_PAGES , NR_FILE_MAPPED , NR_FILE_PAGES , NR_FILE_DIRTY , NR_WRITEBACK , NR_SLAB_RECLAIMABLE , NR_SLAB_UNRECLAIMABLE , NR_PAGETABLE , NR_KERNEL_STACK , NR_UNSTABLE_NFS , NR_BOUNCE , NR_VMSCAN_WRITE , NR_VMSCAN_IMMEDIATE , NR_WRITEBACK_TEMP , NR_ISOLATED_ANON , NR_ISOLATED_FILE , NR_SHMEM , NR_DIRTIED , NR_WRITTEN , NR_PAGES_SCANNED , NUMA_HIT , NUMA_MISS , NUMA_FOREIGN , NUMA_INTERLEAVE_HIT , NUMA_LOCAL , NUMA_OTHER , NR_ANON_TRANSPARENT_HUGEPAGES , NR_FREE_CMA_PAGES , NR_VM_ZONE_STAT_ITEMS } 
__mod_zone_page_state void __mod_zone_page_state ( s#zone * , e#zone_stat_item , int ) 
__inc_zone_page_state void __inc_zone_page_state ( s#page * , e#zone_stat_item ) 
__dec_zone_page_state void __dec_zone_page_state ( s#page * , e#zone_stat_item ) 
mod_zone_page_state void mod_zone_page_state ( s#zone * , e#zone_stat_item , int ) 
inc_zone_page_state void inc_zone_page_state ( s#page * , e#zone_stat_item ) 
dec_zone_page_state void dec_zone_page_state ( s#page * , e#zone_stat_item ) 

/* net/802/fc.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##prot_inuse
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
alloc_fcdev extern s#net_device * alloc_fcdev ( int ) 

/* net/802/garp.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
e#garp_applications enum garp_applications { GARP_APPLICATION_GVRP , __GARP_APPLICATION_MAX } 
s#stp_proto struct stp_proto { unsigned char group_address [ 6 ] ; void ( * rcv ) ( const s#stp_proto * , s#sk_buff * , s#net_device * ) ; void * data ; } 
s#garp_application struct garp_application { e#garp_applications type ; unsigned int maxattr ; s#stp_proto proto ; } 
s#garp_applicant struct garp_applicant { s#garp_application * app ; s#net_device * dev ; s#timer_list join_timer ; t#spinlock_t lock ; s#sk_buff_head queue ; s#sk_buff * pdu ; s#rb_root gid ; s#callback_head rcu ; } 
E#__GARP_APPLICATION_MAX 1 
s#garp_port struct garp_port { s#garp_applicant * applicants [ ( E#__GARP_APPLICATION_MAX - 1 ) + 1 ] ; s#callback_head rcu ; } 
s##mrp_port
s##rtnl_link_ops
s##phy_device
garp_request_join extern int garp_request_join ( const s#net_device * , const s#garp_application * , const void * , t#u8 , t#u8 ) 
garp_request_leave extern void garp_request_leave ( const s#net_device * , const s#garp_application * , const void * , t#u8 , t#u8 ) 
garp_init_applicant extern int garp_init_applicant ( s#net_device * , s#garp_application * ) 
garp_uninit_applicant extern void garp_uninit_applicant ( s#net_device * , s#garp_application * ) 
garp_register_application extern int garp_register_application ( s#garp_application * ) 
garp_unregister_application extern void garp_unregister_application ( s#garp_application * ) 

/* net/802/hippi.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
hippi_type_trans extern t#__be16 hippi_type_trans ( s#sk_buff * , s#net_device * ) 
hippi_change_mtu extern int hippi_change_mtu ( s#net_device * , int ) 
hippi_mac_addr extern int hippi_mac_addr ( s#net_device * , void * ) 
hippi_neigh_setup_dev extern int hippi_neigh_setup_dev ( s#net_device * , s#neigh_parms * ) 
alloc_hippi_dev extern s#net_device * alloc_hippi_dev ( int ) 

/* net/802/mrp.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
e#mrp_applications enum mrp_applications { MRP_APPLICATION_MVRP , __MRP_APPLICATION_MAX } 
s#packet_type struct packet_type { t#__be16 type ; s#net_device * dev ; int ( * func ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ; t#bool ( * id_match ) ( s#packet_type * , s#sock * ) ; void * af_packet_priv ; s#list_head list ; } 
s#mrp_application struct mrp_application { e#mrp_applications type ; unsigned int maxattr ; s#packet_type pkttype ; unsigned char group_address [ 6 ] ; t#u8 version ; } 
s#mrp_applicant struct mrp_applicant { s#mrp_application * app ; s#net_device * dev ; s#timer_list join_timer ; s#timer_list periodic_timer ; t#spinlock_t lock ; s#sk_buff_head queue ; s#sk_buff * pdu ; s#rb_root mad ; s#callback_head rcu ; } 
E#__MRP_APPLICATION_MAX 1 
s#mrp_port struct mrp_port { s#mrp_applicant * applicants [ ( E#__MRP_APPLICATION_MAX - 1 ) + 1 ] ; s#callback_head rcu ; } 
s##rtnl_link_ops
s##phy_device
mrp_request_join extern int mrp_request_join ( const s#net_device * , const s#mrp_application * , const void * , t#u8 , t#u8 ) 
mrp_request_leave extern void mrp_request_leave ( const s#net_device * , const s#mrp_application * , const void * , t#u8 , t#u8 ) 
mrp_init_applicant extern int mrp_init_applicant ( s#net_device * , s#mrp_application * ) 
mrp_uninit_applicant extern void mrp_uninit_applicant ( s#net_device * , s#mrp_application * ) 
mrp_register_application extern int mrp_register_application ( s#mrp_application * ) 
mrp_unregister_application extern void mrp_unregister_application ( s#mrp_application * ) 

/* net/802/p8022.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
s#llc_addr struct llc_addr { unsigned char lsap ; unsigned char mac [ 6 ] ; } 
s#llc_sap struct llc_sap { unsigned char state ; unsigned char p_bit ; unsigned char f_bit ; t#atomic_t refcnt ; int ( * rcv_func ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ; s#llc_addr laddr ; s#list_head node ; t#spinlock_t sk_lock ; int sk_count ; s#hlist_nulls_head sk_laddr_hash [ ( 1 << 6 ) ] ; s#hlist_head sk_dev_hash [ ( 1 << 6 ) ] ; } 
s#datalink_proto struct datalink_proto { unsigned char type [ 8 ] ; s#llc_sap * sap ; unsigned short header_length ; int ( * rcvfunc ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ; int ( * request ) ( s#datalink_proto * , s#sk_buff * , unsigned char * ) ; s#list_head node ; } 
register_8022_client extern s#datalink_proto * register_8022_client ( unsigned char , int ( * ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ) 
unregister_8022_client extern void unregister_8022_client ( s#datalink_proto * ) 

/* net/802/p8023.o */
s##llc_sap
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
destroy_8023_client extern void destroy_8023_client ( s#datalink_proto * ) 
make_8023_client extern s#datalink_proto * make_8023_client ( void ) 

/* net/802/psnap.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
register_snap_client extern s#datalink_proto * register_snap_client ( const unsigned char * , int ( * ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ) 
unregister_snap_client extern void unregister_snap_client ( s#datalink_proto * ) 

/* net/802/stp.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
stp_proto_register extern int stp_proto_register ( const s#stp_proto * ) 
stp_proto_unregister extern void stp_proto_unregister ( const s#stp_proto * ) 

/* net/8021q/vlan_core.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##tvec_base
s##workqueue_struct
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
E#VLAN_PROTO_NUM ( 0 ) + 2 
s#vlan_group struct vlan_group { unsigned int nr_vlan_devs ; s#hlist_node hlist ; s#net_device * * vlan_devices_arrays [ E#VLAN_PROTO_NUM ] [ 8 ] ; } 
s#vlan_info struct vlan_info { s#net_device * real_dev ; s#vlan_group grp ; s#list_head vid_list ; unsigned int nr_vids ; s#callback_head rcu ; } 
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
__vlan_find_dev_deep extern s#net_device * __vlan_find_dev_deep ( s#net_device * , t#__be16 , t#u16 ) 
vlan_dev_real_dev extern s#net_device * vlan_dev_real_dev ( const s#net_device * ) 
vlan_dev_vlan_id extern t#u16 vlan_dev_vlan_id ( const s#net_device * ) 
vlan_untag extern s#sk_buff * vlan_untag ( s#sk_buff * ) 
vlan_vid_add extern int vlan_vid_add ( s#net_device * , t#__be16 , t#u16 ) 
vlan_vid_del extern void vlan_vid_del ( s#net_device * , t#__be16 , t#u16 ) 
vlan_vids_add_by_dev extern int vlan_vids_add_by_dev ( s#net_device * , const s#net_device * ) 
vlan_vids_del_by_dev extern void vlan_vids_del_by_dev ( s#net_device * , const s#net_device * ) 
vlan_uses_dev extern t#bool vlan_uses_dev ( const s#net_device * ) 

/* net/9p/client.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##iovec
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##event_filter
s##ftrace_hash
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##ring_buffer_iter
s#p9_fcall struct p9_fcall { t#u32 size ; t#u8 id ; t#u16 tag ; t#size_t offset ; t#size_t capacity ; t#u8 * sdata ; } 
s#p9_req_t struct p9_req_t { int status ; int t_err ; t#wait_queue_head_t * wq ; s#p9_fcall * tc ; s#p9_fcall * rc ; void * aux ; s#list_head req_list ; } 
s#p9_trans_module struct p9_trans_module { s#list_head list ; char * name ; int maxsize ; int def ; s#module * owner ; int ( * create ) ( s#p9_client * , const char * , char * ) ; void ( * close ) ( s#p9_client * ) ; int ( * request ) ( s#p9_client * , s#p9_req_t * ) ; int ( * cancel ) ( s#p9_client * , s#p9_req_t * ) ; int ( * zc_request ) ( s#p9_client * , s#p9_req_t * , char * , char * , int , int , int , int ) ; } 
e#p9_trans_status enum p9_trans_status { Connected , BeginDisconnect , Disconnected , Hung , } 
s##p9_conn
s##p9_idpool
s#p9_client struct p9_client { t#spinlock_t lock ; unsigned int msize ; unsigned char proto_version ; s#p9_trans_module * trans_mod ; e#p9_trans_status status ; void * trans ; s#p9_conn * conn ; s#p9_idpool * fidpool ; s#list_head fidlist ; s#p9_idpool * tagpool ; s#p9_req_t * reqs [ 255 ] ; int max_tag ; char name [ 64 + 1 ] ; } 
p9_is_proto_dotl int p9_is_proto_dotl ( s#p9_client * ) 
p9_is_proto_dotu int p9_is_proto_dotu ( s#p9_client * ) 
p9_tag_lookup s#p9_req_t * p9_tag_lookup ( s#p9_client * , t#u16 ) 
p9_client_cb void p9_client_cb ( s#p9_client * , s#p9_req_t * ) 
p9_parse_header int p9_parse_header ( s#p9_fcall * , t#int32_t * , t#int8_t * , t#int16_t * , int ) 
p9_client_create s#p9_client * p9_client_create ( const char * , char * ) 
p9_client_destroy void p9_client_destroy ( s#p9_client * ) 
p9_client_disconnect void p9_client_disconnect ( s#p9_client * ) 
p9_client_begin_disconnect void p9_client_begin_disconnect ( s#p9_client * ) 
s#p9_qid struct p9_qid { t#u8 type ; t#u32 version ; t#u64 path ; } 
s#p9_fid struct p9_fid { s#p9_client * clnt ; t#u32 fid ; int mode ; s#p9_qid qid ; t#u32 iounit ; t#kuid_t uid ; void * rdir ; s#list_head flist ; s#hlist_node dlist ; } 
p9_client_attach s#p9_fid * p9_client_attach ( s#p9_client * , s#p9_fid * , char * , t#kuid_t , char * ) 
p9_client_walk s#p9_fid * p9_client_walk ( s#p9_fid * , t#uint16_t , char * * , int ) 
p9_client_open int p9_client_open ( s#p9_fid * , int ) 
p9_client_create_dotl int p9_client_create_dotl ( s#p9_fid * , char * , t#u32 , t#u32 , t#kgid_t , s#p9_qid * ) 
p9_client_fcreate int p9_client_fcreate ( s#p9_fid * , char * , t#u32 , int , char * ) 
p9_client_symlink int p9_client_symlink ( s#p9_fid * , char * , char * , t#kgid_t , s#p9_qid * ) 
p9_client_link int p9_client_link ( s#p9_fid * , s#p9_fid * , char * ) 
p9_client_fsync int p9_client_fsync ( s#p9_fid * , int ) 
p9_client_clunk int p9_client_clunk ( s#p9_fid * ) 
p9_client_remove int p9_client_remove ( s#p9_fid * ) 
p9_client_unlinkat int p9_client_unlinkat ( s#p9_fid * , const char * , int ) 
p9_client_read int p9_client_read ( s#p9_fid * , char * , char * , t#u64 , t#u32 ) 
p9_client_write int p9_client_write ( s#p9_fid * , char * , const char * , t#u64 , t#u32 ) 
s#p9_wstat struct p9_wstat { t#u16 size ; t#u16 type ; t#u32 dev ; s#p9_qid qid ; t#u32 mode ; t#u32 atime ; t#u32 mtime ; t#u64 length ; char * name ; char * uid ; char * gid ; char * muid ; char * extension ; t#kuid_t n_uid ; t#kgid_t n_gid ; t#kuid_t n_muid ; } 
p9_client_stat s#p9_wstat * p9_client_stat ( s#p9_fid * ) 
s#p9_stat_dotl struct p9_stat_dotl { t#u64 st_result_mask ; s#p9_qid qid ; t#u32 st_mode ; t#kuid_t st_uid ; t#kgid_t st_gid ; t#u64 st_nlink ; t#u64 st_rdev ; t#u64 st_size ; t#u64 st_blksize ; t#u64 st_blocks ; t#u64 st_atime_sec ; t#u64 st_atime_nsec ; t#u64 st_mtime_sec ; t#u64 st_mtime_nsec ; t#u64 st_ctime_sec ; t#u64 st_ctime_nsec ; t#u64 st_btime_sec ; t#u64 st_btime_nsec ; t#u64 st_gen ; t#u64 st_data_version ; } 
p9_client_getattr_dotl s#p9_stat_dotl * p9_client_getattr_dotl ( s#p9_fid * , t#u64 ) 
p9_client_wstat int p9_client_wstat ( s#p9_fid * , s#p9_wstat * ) 
s#p9_iattr_dotl struct p9_iattr_dotl { t#u32 valid ; t#u32 mode ; t#kuid_t uid ; t#kgid_t gid ; t#u64 size ; t#u64 atime_sec ; t#u64 atime_nsec ; t#u64 mtime_sec ; t#u64 mtime_nsec ; } 
p9_client_setattr int p9_client_setattr ( s#p9_fid * , s#p9_iattr_dotl * ) 
s#p9_rstatfs struct p9_rstatfs { t#u32 type ; t#u32 bsize ; t#u64 blocks ; t#u64 bfree ; t#u64 bavail ; t#u64 files ; t#u64 ffree ; t#u64 fsid ; t#u32 namelen ; } 
p9_client_statfs int p9_client_statfs ( s#p9_fid * , s#p9_rstatfs * ) 
p9_client_rename int p9_client_rename ( s#p9_fid * , s#p9_fid * , const char * ) 
p9_client_renameat int p9_client_renameat ( s#p9_fid * , const char * , s#p9_fid * , const char * ) 
p9_client_xattrwalk s#p9_fid * p9_client_xattrwalk ( s#p9_fid * , const char * , t#u64 * ) 
p9_client_xattrcreate int p9_client_xattrcreate ( s#p9_fid * , const char * , t#u64 , int ) 
p9_client_readdir int p9_client_readdir ( s#p9_fid * , char * , t#u32 , t#u64 ) 
p9_client_mknod_dotl int p9_client_mknod_dotl ( s#p9_fid * , char * , int , t#dev_t , t#kgid_t , s#p9_qid * ) 
p9_client_mkdir_dotl int p9_client_mkdir_dotl ( s#p9_fid * , char * , int , t#kgid_t , s#p9_qid * ) 
s#p9_flock struct p9_flock { t#u8 type ; t#u32 flags ; t#u64 start ; t#u64 length ; t#u32 proc_id ; char * client_id ; } 
p9_client_lock_dotl int p9_client_lock_dotl ( s#p9_fid * , s#p9_flock * , t#u8 * ) 
s#p9_getlock struct p9_getlock { t#u8 type ; t#u64 start ; t#u64 length ; t#u32 proc_id ; char * client_id ; } 
p9_client_getlock_dotl int p9_client_getlock_dotl ( s#p9_fid * , s#p9_getlock * ) 
p9_client_readlink int p9_client_readlink ( s#p9_fid * , char * * ) 

/* net/9p/error.o */
p9_error_init int p9_error_init ( void ) 
p9_errstr2errno int p9_errstr2errno ( char * , int ) 

/* net/9p/mod.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##nameidata
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##p9_conn
s##p9_idpool
v9fs_register_trans void v9fs_register_trans ( s#p9_trans_module * ) 
v9fs_unregister_trans void v9fs_unregister_trans ( s#p9_trans_module * ) 
v9fs_get_trans_by_name s#p9_trans_module * v9fs_get_trans_by_name ( char * ) 
v9fs_get_default_trans s#p9_trans_module * v9fs_get_default_trans ( void ) 

/* net/9p/protocol.o */
p9stat_free void p9stat_free ( s#p9_wstat * ) 
s##p9_trans_module
s##p9_conn
s##p9_idpool
p9stat_read int p9stat_read ( s#p9_client * , char * , int , s#p9_wstat * ) 
s#p9_dirent struct p9_dirent { s#p9_qid qid ; t#u64 d_off ; unsigned char d_type ; char d_name [ 256 ] ; } 
p9dirent_read int p9dirent_read ( s#p9_client * , char * , int , s#p9_dirent * ) 

/* net/9p/trans_common.o */
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
p9_release_pages void p9_release_pages ( s#page * * , int ) 
p9_nr_pages int p9_nr_pages ( char * , int ) 
p9_payload_gup int p9_payload_gup ( char * , int * , s#page * * , int ) 

/* net/9p/util.o */
s##p9_idpool
p9_idpool_create s#p9_idpool * p9_idpool_create ( void ) 
p9_idpool_destroy void p9_idpool_destroy ( s#p9_idpool * ) 
p9_idpool_get int p9_idpool_get ( s#p9_idpool * ) 
p9_idpool_put void p9_idpool_put ( int , s#p9_idpool * ) 
p9_idpool_check int p9_idpool_check ( int , s#p9_idpool * ) 

/* net/bluetooth/af_bluetooth.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
bt_sock_reclassify_lock void bt_sock_reclassify_lock ( s#sock * , int ) 
s#net_proto_family struct net_proto_family { int family ; int ( * create ) ( s#net * , s#socket * , int , int ) ; s#module * owner ; } 
bt_sock_register int bt_sock_register ( int , const s#net_proto_family * ) 
bt_sock_unregister void bt_sock_unregister ( int ) 
s#bt_sock_list struct bt_sock_list { s#hlist_head head ; t#rwlock_t lock ; int ( * custom_seq_show ) ( s#seq_file * , void * ) ; } 
bt_sock_link void bt_sock_link ( s#bt_sock_list * , s#sock * ) 
bt_sock_unlink void bt_sock_unlink ( s#bt_sock_list * , s#sock * ) 
bt_accept_enqueue void bt_accept_enqueue ( s#sock * , s#sock * ) 
bt_accept_unlink void bt_accept_unlink ( s#sock * ) 
bt_accept_dequeue s#sock * bt_accept_dequeue ( s#sock * , s#socket * ) 
bt_sock_recvmsg int bt_sock_recvmsg ( s#kiocb * , s#socket * , s#msghdr * , t#size_t , int ) 
bt_sock_stream_recvmsg int bt_sock_stream_recvmsg ( s#kiocb * , s#socket * , s#msghdr * , t#size_t , int ) 
bt_sock_poll t#uint bt_sock_poll ( s#file * , s#socket * , t#poll_table * ) 
bt_sock_ioctl int bt_sock_ioctl ( s#socket * , unsigned int , unsigned long ) 
bt_sock_wait_state int bt_sock_wait_state ( s#sock * , int , unsigned long ) 
bt_procfs_init extern int bt_procfs_init ( s#net * , const char * , s#bt_sock_list * , int ( * ) ( s#seq_file * , void * ) ) 
bt_procfs_cleanup extern void bt_procfs_cleanup ( s#net * , const char * ) 

/* net/bluetooth/hci_conn.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kioctx
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##mem_cgroup
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##rfkill
hci_get_route s#hci_dev * hci_get_route ( t#bdaddr_t * , t#bdaddr_t * ) 
s#hci_chan struct hci_chan { s#list_head list ; t#__u16 handle ; s#hci_conn * conn ; s#sk_buff_head data_q ; unsigned int sent ; t#__u8 state ; } 
s##crypto_blkcipher
s#smp_chan struct smp_chan { s#l2cap_conn * conn ; t#u8 preq [ 7 ] ; t#u8 prsp [ 7 ] ; t#u8 prnd [ 16 ] ; t#u8 rrnd [ 16 ] ; t#u8 pcnf [ 16 ] ; t#u8 tk [ 16 ] ; t#u8 enc_key_size ; unsigned long smp_flags ; s#crypto_blkcipher * tfm ; s#work_struct confirm ; s#work_struct random ; } 
s#l2cap_conn struct l2cap_conn { s#hci_conn * hcon ; s#hci_chan * hchan ; t#bdaddr_t * dst ; t#bdaddr_t * src ; unsigned int mtu ; t#__u32 feat_mask ; t#__u8 fixed_chan_mask ; t#__u8 info_state ; t#__u8 info_ident ; s#delayed_work info_timer ; t#spinlock_t lock ; s#sk_buff * rx_skb ; t#__u32 rx_len ; t#__u8 tx_ident ; t#__u8 disc_reason ; s#delayed_work security_timer ; s#smp_chan * smp_chan ; s#list_head chan_l ; s#mutex chan_lock ; s#kref ref ; s#list_head users ; } 
s#l2cap_seq_list struct l2cap_seq_list { t#__u16 head ; t#__u16 tail ; t#__u16 mask ; t#__u16 * list ; } 
s#l2cap_ops struct l2cap_ops { char * name ; s#l2cap_chan * ( * new_connection ) ( s#l2cap_chan * ) ; int ( * recv ) ( s#l2cap_chan * , s#sk_buff * ) ; void ( * teardown ) ( s#l2cap_chan * , int ) ; void ( * close ) ( s#l2cap_chan * ) ; void ( * state_change ) ( s#l2cap_chan * , int ) ; void ( * ready ) ( s#l2cap_chan * ) ; void ( * defer ) ( s#l2cap_chan * ) ; s#sk_buff * ( * alloc_skb ) ( s#l2cap_chan * , unsigned long , int ) ; } 
s#l2cap_chan struct l2cap_chan { s#sock * sk ; s#l2cap_conn * conn ; s#hci_conn * hs_hcon ; s#hci_chan * hs_hchan ; s#kref kref ; t#__u8 state ; t#__le16 psm ; t#__u16 dcid ; t#__u16 scid ; t#__u16 imtu ; t#__u16 omtu ; t#__u16 flush_to ; t#__u8 mode ; t#__u8 chan_type ; t#__u8 chan_policy ; t#__le16 sport ; t#__u8 sec_level ; t#__u8 ident ; t#__u8 conf_req [ 64 ] ; t#__u8 conf_len ; t#__u8 num_conf_req ; t#__u8 num_conf_rsp ; t#__u8 fcs ; t#__u16 tx_win ; t#__u16 tx_win_max ; t#__u16 ack_win ; t#__u8 max_tx ; t#__u16 retrans_timeout ; t#__u16 monitor_timeout ; t#__u16 mps ; t#__u8 tx_state ; t#__u8 rx_state ; unsigned long conf_state ; unsigned long conn_state ; unsigned long flags ; t#__u8 remote_amp_id ; t#__u8 local_amp_id ; t#__u8 move_id ; t#__u8 move_state ; t#__u8 move_role ; t#__u16 next_tx_seq ; t#__u16 expected_ack_seq ; t#__u16 expected_tx_seq ; t#__u16 buffer_seq ; t#__u16 srej_save_reqseq ; t#__u16 last_acked_seq ; t#__u16 frames_sent ; t#__u16 unacked_frames ; t#__u8 retry_count ; t#__u16 sdu_len ; s#sk_buff * sdu ; s#sk_buff * sdu_last_frag ; t#__u16 remote_tx_win ; t#__u8 remote_max_tx ; t#__u16 remote_mps ; t#__u8 local_id ; t#__u8 local_stype ; t#__u16 local_msdu ; t#__u32 local_sdu_itime ; t#__u32 local_acc_lat ; t#__u32 local_flush_to ; t#__u8 remote_id ; t#__u8 remote_stype ; t#__u16 remote_msdu ; t#__u32 remote_sdu_itime ; t#__u32 remote_acc_lat ; t#__u32 remote_flush_to ; s#delayed_work chan_timer ; s#delayed_work retrans_timer ; s#delayed_work monitor_timer ; s#delayed_work ack_timer ; s#sk_buff * tx_send_head ; s#sk_buff_head tx_q ; s#sk_buff_head srej_q ; s#l2cap_seq_list srej_list ; s#l2cap_seq_list retrans_list ; s#list_head list ; s#list_head global_l ; void * data ; s#l2cap_ops * ops ; s#mutex lock ; } 
s#amp_mgr struct amp_mgr { s#list_head list ; s#l2cap_conn * l2cap_conn ; s#l2cap_chan * a2mp_chan ; s#l2cap_chan * bredr_chan ; s#kref kref ; t#__u8 ident ; t#__u8 handle ; unsigned long state ; unsigned long flags ; s#list_head amp_ctrls ; s#mutex amp_ctrls_lock ; } 
s#hci_conn struct hci_conn { s#list_head list ; t#atomic_t refcnt ; t#bdaddr_t dst ; t#__u8 dst_type ; t#__u16 handle ; t#__u16 state ; t#__u8 mode ; t#__u8 type ; t#bool out ; t#__u8 attempt ; t#__u8 dev_class [ 3 ] ; t#__u8 features [ 3 ] [ 8 ] ; t#__u16 interval ; t#__u16 pkt_type ; t#__u16 link_policy ; t#__u32 link_mode ; t#__u8 key_type ; t#__u8 auth_type ; t#__u8 sec_level ; t#__u8 pending_sec_level ; t#__u8 pin_length ; t#__u8 enc_key_size ; t#__u8 io_capability ; t#__u32 passkey_notify ; t#__u8 passkey_entered ; t#__u16 disc_timeout ; t#__u16 setting ; unsigned long flags ; t#__u8 remote_cap ; t#__u8 remote_auth ; t#__u8 remote_id ; t#bool flush_key ; unsigned int sent ; s#sk_buff_head data_q ; s#list_head chan_list ; s#delayed_work disc_work ; s#timer_list idle_timer ; s#timer_list auto_accept_timer ; s#device dev ; s#hci_dev * hdev ; void * l2cap_data ; void * sco_data ; void * smp_conn ; s#amp_mgr * amp_mgr ; s#hci_conn * link ; void ( * connect_cfm_cb ) ( s#hci_conn * , t#u8 ) ; void ( * security_cfm_cb ) ( s#hci_conn * , t#u8 ) ; void ( * disconn_cfm_cb ) ( s#hci_conn * , t#u8 ) ; } 
hci_conn_security int hci_conn_security ( s#hci_conn * , t#__u8 , t#__u8 ) 
hci_conn_check_secure int hci_conn_check_secure ( s#hci_conn * , t#__u8 ) 
hci_conn_switch_role int hci_conn_switch_role ( s#hci_conn * , t#__u8 ) 

/* net/bluetooth/hci_core.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##rfkill
__hci_cmd_sync_ev s#sk_buff * __hci_cmd_sync_ev ( s#hci_dev * , t#u16 , t#u32 , const void * , t#u8 , t#u32 ) 
__hci_cmd_sync s#sk_buff * __hci_cmd_sync ( s#hci_dev * , t#u16 , t#u32 , const void * , t#u32 ) 
hci_alloc_dev s#hci_dev * hci_alloc_dev ( void ) 
hci_free_dev void hci_free_dev ( s#hci_dev * ) 
hci_register_dev int hci_register_dev ( s#hci_dev * ) 
hci_unregister_dev void hci_unregister_dev ( s#hci_dev * ) 
hci_suspend_dev int hci_suspend_dev ( s#hci_dev * ) 
hci_resume_dev int hci_resume_dev ( s#hci_dev * ) 
hci_recv_frame int hci_recv_frame ( s#sk_buff * ) 
hci_recv_fragment int hci_recv_fragment ( s#hci_dev * , int , void * , int ) 
hci_recv_stream_fragment int hci_recv_stream_fragment ( s#hci_dev * , void * , int ) 
s##amp_mgr
s#hci_cb struct hci_cb { s#list_head list ; char * name ; void ( * security_cfm ) ( s#hci_conn * , t#__u8 , t#__u8 ) ; void ( * key_change_cfm ) ( s#hci_conn * , t#__u8 ) ; void ( * role_switch_cfm ) ( s#hci_conn * , t#__u8 , t#__u8 ) ; } 
hci_register_cb int hci_register_cb ( s#hci_cb * ) 
hci_unregister_cb int hci_unregister_cb ( s#hci_cb * ) 

/* net/bluetooth/hci_sysfs.o */
s##posix_acl
s##nameidata
s##vfsmount
s##kioctx
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
bt_debugfs extern s#dentry * bt_debugfs 

/* net/bluetooth/l2cap_core.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##rfkill
s##crypto_blkcipher
s#l2cap_user struct l2cap_user { s#list_head list ; int ( * probe ) ( s#l2cap_conn * , s#l2cap_user * ) ; void ( * remove ) ( s#l2cap_conn * , s#l2cap_user * ) ; } 
l2cap_register_user int l2cap_register_user ( s#l2cap_conn * , s#l2cap_user * ) 
l2cap_unregister_user void l2cap_unregister_user ( s#l2cap_conn * , s#l2cap_user * ) 
l2cap_conn_get void l2cap_conn_get ( s#l2cap_conn * ) 
l2cap_conn_put void l2cap_conn_put ( s#l2cap_conn * ) 

/* net/bluetooth/l2cap_sock.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kioctx
s##eventfd_ctx
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##mem_cgroup
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
l2cap_is_socket t#bool l2cap_is_socket ( s#socket * ) 

/* net/bluetooth/lib.o */
baswap void baswap ( t#bdaddr_t * , t#bdaddr_t * ) 
bt_to_errno int bt_to_errno ( t#__u16 ) 
bt_info __attribute__ ( ( format ( printf , 1 , 2 ) ) ) int bt_info ( const char * , ... ) 
bt_err __attribute__ ( ( format ( printf , 1 , 2 ) ) ) int bt_err ( const char * , ... ) 

/* net/bridge/br_input.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
t#br_should_route_hook_t typedef int br_should_route_hook_t ( s#sk_buff * ) 
br_should_route_hook extern t#br_should_route_hook_t * br_should_route_hook 

/* net/bridge/netfilter/ebtables.o */
s#ebt_entries struct ebt_entries { unsigned int distinguisher ; char name [ 32 ] ; unsigned int counter_offset ; int policy ; unsigned int nentries ; char data [ 0 ] __attribute__ ( ( aligned ( __alignof__ ( struct ebt_replace ) ) ) ) ; } 
s#ebt_counter struct ebt_counter { t#uint64_t pcnt ; t#uint64_t bcnt ; } 
s#ebt_replace_kernel struct ebt_replace_kernel { char name [ 32 ] ; unsigned int valid_hooks ; unsigned int nentries ; unsigned int entries_size ; s#ebt_entries * hook_entry [ 6 ] ; unsigned int num_counters ; s#ebt_counter * counters ; char * entries ; } 
s#ebt_entry struct ebt_entry { unsigned int bitmask ; unsigned int invflags ; t#__be16 ethproto ; char in [ 16 ] ; char logical_in [ 16 ] ; char out [ 16 ] ; char logical_out [ 16 ] ; unsigned char sourcemac [ 6 ] ; unsigned char sourcemsk [ 6 ] ; unsigned char destmac [ 6 ] ; unsigned char destmsk [ 6 ] ; unsigned int watchers_offset ; unsigned int target_offset ; unsigned int next_offset ; unsigned char elems [ 0 ] __attribute__ ( ( aligned ( __alignof__ ( struct ebt_replace ) ) ) ) ; } 
s#ebt_chainstack struct ebt_chainstack { s#ebt_entries * chaininfo ; s#ebt_entry * e ; unsigned int n ; } 
s#ebt_table_info struct ebt_table_info { unsigned int entries_size ; unsigned int nentries ; s#ebt_entries * hook_entry [ 6 ] ; s#ebt_chainstack * * chainstack ; char * entries ; s#ebt_counter counters [ 0 ] __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; } 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
E#NF_INET_NUMHOOKS 5 
s#xt_table_info struct xt_table_info { unsigned int size ; unsigned int number ; unsigned int initial_entries ; unsigned int hook_entry [ E#NF_INET_NUMHOOKS ] ; unsigned int underflow [ E#NF_INET_NUMHOOKS ] ; unsigned int stacksize ; unsigned int * stackptr ; void * * * jumpstack ; void * entries [ 1 ] ; } 
t#u_int8_t typedef t#__u8 u_int8_t 
s#xt_table struct xt_table { s#list_head list ; unsigned int valid_hooks ; s#xt_table_info * private ; s#module * me ; t#u_int8_t af ; int priority ; const char name [ 32 ] ; } 
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s#ebt_table struct ebt_table { s#list_head list ; char name [ 32 ] ; s#ebt_replace_kernel * table ; unsigned int valid_hooks ; t#rwlock_t lock ; int ( * check ) ( const s#ebt_table_info * , unsigned int ) ; s#ebt_table_info * private ; s#module * me ; } 
ebt_register_table extern s#ebt_table * ebt_register_table ( s#net * , const s#ebt_table * ) 
ebt_unregister_table extern void ebt_unregister_table ( s#net * , s#ebt_table * ) 
ebt_do_table extern unsigned int ebt_do_table ( unsigned int , s#sk_buff * , const s#net_device * , const s#net_device * , s#ebt_table * ) 

/* net/compat.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##device_private
s##sysfs_dirent
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
compat_sock_get_timestamp extern int compat_sock_get_timestamp ( s#sock * , s#timeval * ) 
compat_sock_get_timestampns extern int compat_sock_get_timestampns ( s#sock * , s#timespec * ) 
compat_mc_setsockopt extern int compat_mc_setsockopt ( s#sock * , int , int , char * , unsigned int , int ( * ) ( s#sock * , int , int , char * , unsigned int ) ) 
compat_mc_getsockopt extern int compat_mc_getsockopt ( s#sock * , int , int , char * , int * , int ( * ) ( s#sock * , int , int , char * , int * ) ) 

/* net/core/datagram.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
__skb_recv_datagram extern s#sk_buff * __skb_recv_datagram ( s#sock * , unsigned , int * , int * , int * ) 
skb_recv_datagram extern s#sk_buff * skb_recv_datagram ( s#sock * , unsigned , int , int * ) 
skb_free_datagram extern void skb_free_datagram ( s#sock * , s#sk_buff * ) 
skb_free_datagram_locked extern void skb_free_datagram_locked ( s#sock * , s#sk_buff * ) 
skb_kill_datagram extern int skb_kill_datagram ( s#sock * , s#sk_buff * , unsigned int ) 
skb_copy_datagram_iovec extern int skb_copy_datagram_iovec ( const s#sk_buff * , int , s#iovec * , int ) 
skb_copy_datagram_const_iovec extern int skb_copy_datagram_const_iovec ( const s#sk_buff * , int , const s#iovec * , int , int ) 
skb_copy_datagram_from_iovec extern int skb_copy_datagram_from_iovec ( s#sk_buff * , int , const s#iovec * , int , int ) 
zerocopy_sg_from_iovec extern int zerocopy_sg_from_iovec ( s#sk_buff * , const s#iovec * , int , t#size_t ) 
__skb_checksum_complete_head extern t#__sum16 __skb_checksum_complete_head ( s#sk_buff * , int ) 
__skb_checksum_complete extern t#__sum16 __skb_checksum_complete ( s#sk_buff * ) 
skb_copy_and_csum_datagram_iovec extern int skb_copy_and_csum_datagram_iovec ( s#sk_buff * , int , s#iovec * ) 
datagram_poll extern unsigned int datagram_poll ( s#file * , s#socket * , s#poll_table_struct * ) 

/* net/core/dev.o */
dev_base_lock extern t#rwlock_t dev_base_lock 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##libipw_device
s##tvec_base
s##workqueue_struct
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##dn_route
s##wireless_dev
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s#qdisc_walker struct qdisc_walker { int stop ; int skip ; int count ; int ( * fn ) ( s#Qdisc * , unsigned long , s#qdisc_walker * ) ; } 
s##tcf_walker
s#sd_flow_limit struct sd_flow_limit { t#u64 count ; unsigned int num_buckets ; unsigned int history_head ; t#u16 history [ ( 1 << 7 ) ] ; t#u8 buckets [ ] ; } 
s#softnet_data struct softnet_data { s#Qdisc * output_queue ; s#Qdisc * * output_queue_tailp ; s#list_head poll_list ; s#sk_buff * completion_queue ; s#sk_buff_head process_queue ; unsigned int processed ; unsigned int time_squeeze ; unsigned int cpu_collision ; unsigned int received_rps ; s#softnet_data * rps_ipi_list ; s#call_single_data csd __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; s#softnet_data * rps_ipi_next ; unsigned int cpu ; unsigned int input_queue_head ; unsigned int input_queue_tail ; unsigned int dropped ; s#sk_buff_head input_pkt_queue ; s#napi_struct backlog ; s#sd_flow_limit * flow_limit ; } 
softnet_data extern __attribute__ ( ( section ( ".data..percpu" "..shared_aligned" ) ) ) __typeof__ ( s#softnet_data ) softnet_data 
dev_add_pack extern void dev_add_pack ( s#packet_type * ) 
__dev_remove_pack extern void __dev_remove_pack ( s#packet_type * ) 
dev_remove_pack extern void dev_remove_pack ( s#packet_type * ) 
s#offload_callbacks struct offload_callbacks { s#sk_buff * ( * gso_segment ) ( s#sk_buff * , t#netdev_features_t ) ; int ( * gso_send_check ) ( s#sk_buff * ) ; s#sk_buff * * ( * gro_receive ) ( s#sk_buff * * , s#sk_buff * ) ; int ( * gro_complete ) ( s#sk_buff * ) ; } 
s#packet_offload struct packet_offload { t#__be16 type ; s#offload_callbacks callbacks ; s#list_head list ; } 
dev_add_offload extern void dev_add_offload ( s#packet_offload * ) 
__dev_remove_offload extern void __dev_remove_offload ( s#packet_offload * ) 
dev_remove_offload extern void dev_remove_offload ( s#packet_offload * ) 
netdev_boot_setup_check extern int netdev_boot_setup_check ( s#net_device * ) 
__dev_get_by_name extern s#net_device * __dev_get_by_name ( s#net * , const char * ) 
dev_get_by_name_rcu extern s#net_device * dev_get_by_name_rcu ( s#net * , const char * ) 
dev_get_by_name extern s#net_device * dev_get_by_name ( s#net * , const char * ) 
__dev_get_by_index extern s#net_device * __dev_get_by_index ( s#net * , int ) 
dev_get_by_index_rcu extern s#net_device * dev_get_by_index_rcu ( s#net * , int ) 
dev_get_by_index extern s#net_device * dev_get_by_index ( s#net * , int ) 
dev_getbyhwaddr_rcu extern s#net_device * dev_getbyhwaddr_rcu ( s#net * , unsigned short , const char * ) 
__dev_getfirstbyhwtype extern s#net_device * __dev_getfirstbyhwtype ( s#net * , unsigned short ) 
dev_getfirstbyhwtype extern s#net_device * dev_getfirstbyhwtype ( s#net * , unsigned short ) 
dev_get_by_flags_rcu extern s#net_device * dev_get_by_flags_rcu ( s#net * , unsigned short , unsigned short ) 
dev_valid_name extern t#bool dev_valid_name ( const char * ) 
dev_alloc_name extern int dev_alloc_name ( s#net_device * , const char * ) 
netdev_features_change extern void netdev_features_change ( s#net_device * ) 
netdev_state_change extern void netdev_state_change ( s#net_device * ) 
netdev_notify_peers extern void netdev_notify_peers ( s#net_device * ) 
dev_open extern int dev_open ( s#net_device * ) 
dev_close extern int dev_close ( s#net_device * ) 
dev_disable_lro extern void dev_disable_lro ( s#net_device * ) 
register_netdevice_notifier extern int register_netdevice_notifier ( s#notifier_block * ) 
unregister_netdevice_notifier extern int unregister_netdevice_notifier ( s#notifier_block * ) 
s#netdev_notifier_info struct netdev_notifier_info { s#net_device * dev ; } 
call_netdevice_notifiers_info extern int call_netdevice_notifiers_info ( unsigned long , s#net_device * , s#netdev_notifier_info * ) 
call_netdevice_notifiers extern int call_netdevice_notifiers ( unsigned long , s#net_device * ) 
net_enable_timestamp extern void net_enable_timestamp ( void ) 
net_disable_timestamp extern void net_disable_timestamp ( void ) 
dev_forward_skb extern int dev_forward_skb ( s#net_device * , s#sk_buff * ) 
netif_set_xps_queue extern int netif_set_xps_queue ( s#net_device * , const s#cpumask * , t#u16 ) 
netif_set_real_num_tx_queues extern int netif_set_real_num_tx_queues ( s#net_device * , unsigned int ) 
netif_set_real_num_rx_queues extern int netif_set_real_num_rx_queues ( s#net_device * , unsigned int ) 
netif_get_num_default_rss_queues extern int netif_get_num_default_rss_queues ( void ) 
__netif_schedule extern void __netif_schedule ( s#Qdisc * ) 
dev_kfree_skb_irq extern void dev_kfree_skb_irq ( s#sk_buff * ) 
dev_kfree_skb_any extern void dev_kfree_skb_any ( s#sk_buff * ) 
netif_device_detach extern void netif_device_detach ( s#net_device * ) 
netif_device_attach extern void netif_device_attach ( s#net_device * ) 
skb_checksum_help extern int skb_checksum_help ( s#sk_buff * ) 
skb_mac_gso_segment extern s#sk_buff * skb_mac_gso_segment ( s#sk_buff * , t#netdev_features_t ) 
__skb_gso_segment extern s#sk_buff * __skb_gso_segment ( s#sk_buff * , t#netdev_features_t , t#bool ) 
netdev_rx_csum_fault extern void netdev_rx_csum_fault ( s#net_device * ) 
netif_skb_dev_features t#netdev_features_t netif_skb_dev_features ( s#sk_buff * , const s#net_device * ) 
dev_hard_start_xmit extern int dev_hard_start_xmit ( s#sk_buff * , s#net_device * , s#netdev_queue * ) 
dev_loopback_xmit extern int dev_loopback_xmit ( s#sk_buff * ) 
dev_queue_xmit extern int dev_queue_xmit ( s#sk_buff * ) 
dev_queue_xmit_accel extern int dev_queue_xmit_accel ( s#sk_buff * , void * ) 
netdev_max_backlog extern int netdev_max_backlog 
s#rps_sock_flow_table struct rps_sock_flow_table { unsigned int mask ; t#u16 ents [ 0 ] ; } 
rps_sock_flow_table extern s#rps_sock_flow_table * rps_sock_flow_table 
rps_may_expire_flow extern t#bool rps_may_expire_flow ( s#net_device * , t#u16 , t#u32 , t#u16 ) 
netif_rx extern int netif_rx ( s#sk_buff * ) 
netif_rx_ni extern int netif_rx_ni ( s#sk_buff * ) 
netdev_rx_handler_register extern int netdev_rx_handler_register ( s#net_device * , t#rx_handler_func_t * , void * ) 
netdev_rx_handler_unregister extern void netdev_rx_handler_unregister ( s#net_device * ) 
netif_receive_skb extern int netif_receive_skb ( s#sk_buff * ) 
napi_gro_flush extern void napi_gro_flush ( s#napi_struct * , t#bool ) 
e#gro_result enum gro_result { GRO_MERGED , GRO_MERGED_FREE , GRO_HELD , GRO_NORMAL , GRO_DROP , } 
t#gro_result_t typedef e#gro_result gro_result_t 
napi_gro_receive extern t#gro_result_t napi_gro_receive ( s#napi_struct * , s#sk_buff * ) 
napi_get_frags extern s#sk_buff * napi_get_frags ( s#napi_struct * ) 
napi_gro_frags extern t#gro_result_t napi_gro_frags ( s#napi_struct * ) 
__napi_schedule extern void __napi_schedule ( s#napi_struct * ) 
__napi_complete extern void __napi_complete ( s#napi_struct * ) 
napi_complete extern void napi_complete ( s#napi_struct * ) 
napi_by_id extern s#napi_struct * napi_by_id ( unsigned int ) 
napi_hash_add extern void napi_hash_add ( s#napi_struct * ) 
napi_hash_del extern void napi_hash_del ( s#napi_struct * ) 
netif_napi_add void netif_napi_add ( s#net_device * , s#napi_struct * , int ( * ) ( s#napi_struct * , int ) , int ) 
netif_napi_del void netif_napi_del ( s#napi_struct * ) 
netdev_has_upper_dev extern t#bool netdev_has_upper_dev ( s#net_device * , s#net_device * ) 
netdev_has_any_upper_dev extern t#bool netdev_has_any_upper_dev ( s#net_device * ) 
netdev_master_upper_dev_get extern s#net_device * netdev_master_upper_dev_get ( s#net_device * ) 
netdev_adjacent_get_private extern void * netdev_adjacent_get_private ( s#list_head * ) 
netdev_all_upper_get_next_dev_rcu extern s#net_device * netdev_all_upper_get_next_dev_rcu ( s#net_device * , s#list_head * * ) 
netdev_lower_get_next_private extern void * netdev_lower_get_next_private ( s#net_device * , s#list_head * * ) 
netdev_lower_get_next_private_rcu extern void * netdev_lower_get_next_private_rcu ( s#net_device * , s#list_head * * ) 
netdev_lower_get_next void * netdev_lower_get_next ( s#net_device * , s#list_head * * ) 
netdev_lower_get_first_private_rcu void * netdev_lower_get_first_private_rcu ( s#net_device * ) 
netdev_master_upper_dev_get_rcu extern s#net_device * netdev_master_upper_dev_get_rcu ( s#net_device * ) 
netdev_upper_dev_link extern int netdev_upper_dev_link ( s#net_device * , s#net_device * ) 
netdev_master_upper_dev_link extern int netdev_master_upper_dev_link ( s#net_device * , s#net_device * ) 
netdev_master_upper_dev_link_private extern int netdev_master_upper_dev_link_private ( s#net_device * , s#net_device * , void * ) 
netdev_upper_dev_unlink extern void netdev_upper_dev_unlink ( s#net_device * , s#net_device * ) 
netdev_lower_dev_get_private extern void * netdev_lower_dev_get_private ( s#net_device * , s#net_device * ) 
dev_get_nest_level int dev_get_nest_level ( s#net_device * , t#bool ( * ) ( s#net_device * ) ) 
dev_set_promiscuity extern int dev_set_promiscuity ( s#net_device * , int ) 
dev_set_allmulti extern int dev_set_allmulti ( s#net_device * , int ) 
__dev_set_rx_mode extern void __dev_set_rx_mode ( s#net_device * ) 
dev_get_flags extern unsigned int dev_get_flags ( const s#net_device * ) 
dev_change_flags extern int dev_change_flags ( s#net_device * , unsigned int ) 
dev_set_mtu extern int dev_set_mtu ( s#net_device * , int ) 
dev_set_group extern void dev_set_group ( s#net_device * , int ) 
dev_set_mac_address extern int dev_set_mac_address ( s#net_device * , s#sockaddr * ) 
dev_change_carrier extern int dev_change_carrier ( s#net_device * , t#bool ) 
dev_get_phys_port_id extern int dev_get_phys_port_id ( s#net_device * , s#netdev_phys_port_id * ) 
netdev_update_features void netdev_update_features ( s#net_device * ) 
netdev_change_features void netdev_change_features ( s#net_device * ) 
netif_stacked_transfer_operstate void netif_stacked_transfer_operstate ( const s#net_device * , s#net_device * ) 
register_netdevice extern int register_netdevice ( s#net_device * ) 
init_dummy_netdev extern int init_dummy_netdev ( s#net_device * ) 
register_netdev extern int register_netdev ( s#net_device * ) 
netdev_refcnt_read extern int netdev_refcnt_read ( const s#net_device * ) 
netdev_stats_to_stats64 extern void netdev_stats_to_stats64 ( s#rtnl_link_stats64 * , const s#net_device_stats * ) 
dev_get_stats extern s#rtnl_link_stats64 * dev_get_stats ( s#net_device * , s#rtnl_link_stats64 * ) 
netdev_set_default_ethtool_ops extern void netdev_set_default_ethtool_ops ( s#net_device * , const s#ethtool_ops * ) 
alloc_netdev_mqs extern s#net_device * alloc_netdev_mqs ( int , const char * , void ( * ) ( s#net_device * ) , unsigned int , unsigned int ) 
free_netdev extern void free_netdev ( s#net_device * ) 
synchronize_net extern void synchronize_net ( void ) 
unregister_netdevice_queue extern void unregister_netdevice_queue ( s#net_device * , s#list_head * ) 
unregister_netdevice_many extern void unregister_netdevice_many ( s#list_head * ) 
unregister_netdev extern void unregister_netdev ( s#net_device * ) 
dev_change_net_namespace extern int dev_change_net_namespace ( s#net_device * , s#net * , const char * ) 
netdev_increment_features t#netdev_features_t netdev_increment_features ( t#netdev_features_t , t#netdev_features_t , t#netdev_features_t ) 
netdev_printk extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) int netdev_printk ( const char * , const s#net_device * , const char * , ... ) 
netdev_emerg extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int netdev_emerg ( const s#net_device * , const char * , ... ) 
netdev_alert extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int netdev_alert ( const s#net_device * , const char * , ... ) 
netdev_crit extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int netdev_crit ( const s#net_device * , const char * , ... ) 
netdev_err extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int netdev_err ( const s#net_device * , const char * , ... ) 
netdev_warn extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int netdev_warn ( const s#net_device * , const char * , ... ) 
netdev_notice extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int netdev_notice ( const s#net_device * , const char * , ... ) 
netdev_info extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int netdev_info ( const s#net_device * , const char * , ... ) 

/* net/core/dev_addr_lists.o */
__hw_addr_add_multiple extern int __hw_addr_add_multiple ( s#netdev_hw_addr_list * , s#netdev_hw_addr_list * , int , unsigned char ) 
__hw_addr_del_multiple extern void __hw_addr_del_multiple ( s#netdev_hw_addr_list * , s#netdev_hw_addr_list * , int , unsigned char ) 
__hw_addr_sync extern int __hw_addr_sync ( s#netdev_hw_addr_list * , s#netdev_hw_addr_list * , int ) 
__hw_addr_unsync extern void __hw_addr_unsync ( s#netdev_hw_addr_list * , s#netdev_hw_addr_list * , int ) 
__hw_addr_flush extern void __hw_addr_flush ( s#netdev_hw_addr_list * ) 
__hw_addr_init extern void __hw_addr_init ( s#netdev_hw_addr_list * ) 
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
dev_addr_flush extern void dev_addr_flush ( s#net_device * ) 
dev_addr_init extern int dev_addr_init ( s#net_device * ) 
dev_addr_add extern int dev_addr_add ( s#net_device * , const unsigned char * , unsigned char ) 
dev_addr_del extern int dev_addr_del ( s#net_device * , const unsigned char * , unsigned char ) 
dev_addr_add_multiple extern int dev_addr_add_multiple ( s#net_device * , s#net_device * , unsigned char ) 
dev_addr_del_multiple extern int dev_addr_del_multiple ( s#net_device * , s#net_device * , unsigned char ) 
dev_uc_add_excl extern int dev_uc_add_excl ( s#net_device * , const unsigned char * ) 
dev_uc_add extern int dev_uc_add ( s#net_device * , const unsigned char * ) 
dev_uc_del extern int dev_uc_del ( s#net_device * , const unsigned char * ) 
dev_uc_sync extern int dev_uc_sync ( s#net_device * , s#net_device * ) 
dev_uc_sync_multiple extern int dev_uc_sync_multiple ( s#net_device * , s#net_device * ) 
dev_uc_unsync extern void dev_uc_unsync ( s#net_device * , s#net_device * ) 
dev_uc_flush extern void dev_uc_flush ( s#net_device * ) 
dev_uc_init extern void dev_uc_init ( s#net_device * ) 
dev_mc_add_excl extern int dev_mc_add_excl ( s#net_device * , const unsigned char * ) 
dev_mc_add extern int dev_mc_add ( s#net_device * , const unsigned char * ) 
dev_mc_add_global extern int dev_mc_add_global ( s#net_device * , const unsigned char * ) 
dev_mc_del extern int dev_mc_del ( s#net_device * , const unsigned char * ) 
dev_mc_del_global extern int dev_mc_del_global ( s#net_device * , const unsigned char * ) 
dev_mc_sync extern int dev_mc_sync ( s#net_device * , s#net_device * ) 
dev_mc_sync_multiple extern int dev_mc_sync_multiple ( s#net_device * , s#net_device * ) 
dev_mc_unsync extern void dev_mc_unsync ( s#net_device * , s#net_device * ) 
dev_mc_flush extern void dev_mc_flush ( s#net_device * ) 
dev_mc_init extern void dev_mc_init ( s#net_device * ) 

/* net/core/dev_ioctl.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
t#gifconf_func_t typedef int gifconf_func_t ( s#net_device * , char * , int ) 
register_gifconf extern int register_gifconf ( unsigned int , t#gifconf_func_t * ) 
dev_load extern void dev_load ( s#net * , const char * ) 

/* net/core/dst.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##prot_inuse
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
dst_discard extern int dst_discard ( s#sk_buff * ) 
dst_alloc extern void * dst_alloc ( s#dst_ops * , s#net_device * , int , int , unsigned short ) 
__dst_free extern void __dst_free ( s#dst_entry * ) 
dst_destroy extern s#dst_entry * dst_destroy ( s#dst_entry * ) 
dst_release extern void dst_release ( s#dst_entry * ) 
dst_cow_metrics_generic extern t#u32 * dst_cow_metrics_generic ( s#dst_entry * , unsigned long ) 
__dst_destroy_metrics_generic extern void __dst_destroy_metrics_generic ( s#dst_entry * , unsigned long ) 
__skb_dst_set_noref extern void __skb_dst_set_noref ( s#sk_buff * , s#dst_entry * , t#bool ) 

/* net/core/ethtool.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
ethtool_op_get_link t#u32 ethtool_op_get_link ( s#net_device * ) 
ethtool_op_get_ts_info int ethtool_op_get_ts_info ( s#net_device * , s#ethtool_ts_info * ) 
__ethtool_get_settings extern int __ethtool_get_settings ( s#net_device * , s#ethtool_cmd * ) 

/* net/core/fib_rules.o */
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s#fib_rule struct fib_rule { s#list_head list ; int iifindex ; int oifindex ; t#u32 mark ; t#u32 mark_mask ; t#u32 flags ; t#u32 table ; t#u8 action ; t#u32 target ; s#fib_rule * ctarget ; s#net * fr_net ; t#atomic_t refcnt ; t#u32 pref ; int suppress_ifgroup ; int suppress_prefixlen ; char iifname [ 16 ] ; char oifname [ 16 ] ; s#callback_head rcu ; } 
s#fib_lookup_arg struct fib_lookup_arg { void * lookup_ptr ; void * result ; s#fib_rule * rule ; int flags ; } 
s#fib_rule_hdr struct fib_rule_hdr { t#__u8 family ; t#__u8 dst_len ; t#__u8 src_len ; t#__u8 tos ; t#__u8 table ; t#__u8 res1 ; t#__u8 res2 ; t#__u8 action ; t#__u32 flags ; } 
s#fib_rules_ops struct fib_rules_ops { int family ; s#list_head list ; int rule_size ; int addr_size ; int unresolved_rules ; int nr_goto_rules ; int ( * action ) ( s#fib_rule * , s#flowi * , int , s#fib_lookup_arg * ) ; t#bool ( * suppress ) ( s#fib_rule * , s#fib_lookup_arg * ) ; int ( * match ) ( s#fib_rule * , s#flowi * , int ) ; int ( * configure ) ( s#fib_rule * , s#sk_buff * , s#fib_rule_hdr * , s#nlattr * * ) ; void ( * delete ) ( s#fib_rule * ) ; int ( * compare ) ( s#fib_rule * , s#fib_rule_hdr * , s#nlattr * * ) ; int ( * fill ) ( s#fib_rule * , s#sk_buff * , s#fib_rule_hdr * ) ; t#u32 ( * default_pref ) ( s#fib_rules_ops * ) ; t#size_t ( * nlmsg_payload ) ( s#fib_rule * ) ; void ( * flush_cache ) ( s#fib_rules_ops * ) ; int nlgroup ; const s#nla_policy * policy ; s#list_head rules_list ; s#module * owner ; s#net * fro_net ; s#callback_head rcu ; } 
fib_default_rule_add extern int fib_default_rule_add ( s#fib_rules_ops * , t#u32 , t#u32 , t#u32 ) 
fib_default_rule_pref extern t#u32 fib_default_rule_pref ( s#fib_rules_ops * ) 
fib_rules_register extern s#fib_rules_ops * fib_rules_register ( const s#fib_rules_ops * , s#net * ) 
fib_rules_unregister extern void fib_rules_unregister ( s#fib_rules_ops * ) 
fib_rules_lookup extern int fib_rules_lookup ( s#fib_rules_ops * , s#flowi * , int , s#fib_lookup_arg * ) 

/* net/core/filter.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
sk_filter extern int sk_filter ( s#sock * , s#sk_buff * ) 
sk_run_filter extern unsigned int sk_run_filter ( const s#sk_buff * , const s#sock_filter * ) 
sk_chk_filter extern int sk_chk_filter ( s#sock_filter * , unsigned int ) 
sk_filter_release_rcu extern void sk_filter_release_rcu ( s#callback_head * ) 
s#sock_fprog struct sock_fprog { unsigned short len ; s#sock_filter * filter ; } 
sk_unattached_filter_create extern int sk_unattached_filter_create ( s#sk_filter * * , s#sock_fprog * ) 
sk_unattached_filter_destroy extern void sk_unattached_filter_destroy ( s#sk_filter * ) 
sk_attach_filter extern int sk_attach_filter ( s#sock_fprog * , s#sock * ) 
sk_detach_filter extern int sk_detach_filter ( s#sock * ) 

/* net/core/flow.o */
flow_cache_genid extern t#atomic_t flow_cache_genid 
s##net
t#flow_resolve_t typedef s#flow_cache_object * ( * flow_resolve_t ) ( s#net * , const s#flowi * , t#u16 , t#u8 , s#flow_cache_object * , void * ) 
flow_cache_lookup extern s#flow_cache_object * flow_cache_lookup ( s#net * , const s#flowi * , t#u16 , t#u8 , t#flow_resolve_t , void * ) 

/* net/core/flow_dissector.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
skb_flow_get_ports t#__be32 skb_flow_get_ports ( const s#sk_buff * , int , t#u8 ) 
s#flow_keys struct flow_keys { t#__be32 src ; t#__be32 dst ; union { t#__be32 ports ; t#__be16 port16 [ 2 ] ; } ; t#u16 thoff ; t#u8 ip_proto ; } 
skb_flow_dissect extern t#bool skb_flow_dissect ( const s#sk_buff * , s#flow_keys * ) 
__skb_get_rxhash extern void __skb_get_rxhash ( s#sk_buff * ) 
__skb_tx_hash extern t#u16 __skb_tx_hash ( const s#net_device * , const s#sk_buff * , unsigned int ) 

/* net/core/gen_estimator.o */
gen_new_estimator extern int gen_new_estimator ( s#gnet_stats_basic_packed * , s#gnet_stats_rate_est64 * , t#spinlock_t * , s#nlattr * ) 
gen_kill_estimator extern void gen_kill_estimator ( s#gnet_stats_basic_packed * , s#gnet_stats_rate_est64 * ) 
gen_replace_estimator extern int gen_replace_estimator ( s#gnet_stats_basic_packed * , s#gnet_stats_rate_est64 * , t#spinlock_t * , s#nlattr * ) 
gen_estimator_active extern t#bool gen_estimator_active ( const s#gnet_stats_basic_packed * , const s#gnet_stats_rate_est64 * ) 

/* net/core/gen_stats.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
gnet_stats_start_copy_compat extern int gnet_stats_start_copy_compat ( s#sk_buff * , int , int , int , t#spinlock_t * , s#gnet_dump * ) 
gnet_stats_start_copy extern int gnet_stats_start_copy ( s#sk_buff * , int , t#spinlock_t * , s#gnet_dump * ) 
gnet_stats_copy_basic extern int gnet_stats_copy_basic ( s#gnet_dump * , s#gnet_stats_basic_packed * ) 
gnet_stats_copy_rate_est extern int gnet_stats_copy_rate_est ( s#gnet_dump * , const s#gnet_stats_basic_packed * , s#gnet_stats_rate_est64 * ) 
gnet_stats_copy_queue extern int gnet_stats_copy_queue ( s#gnet_dump * , s#gnet_stats_queue * ) 
gnet_stats_copy_app extern int gnet_stats_copy_app ( s#gnet_dump * , void * , int ) 
gnet_stats_finish_copy extern int gnet_stats_finish_copy ( s#gnet_dump * ) 

/* net/core/iovec.o */
memcpy_toiovecend extern int memcpy_toiovecend ( const s#iovec * , unsigned char * , int , int ) 
memcpy_fromiovecend extern int memcpy_fromiovecend ( unsigned char * , const s#iovec * , int , int ) 
csum_partial_copy_fromiovecend extern int csum_partial_copy_fromiovecend ( unsigned char * , s#iovec * , int , unsigned int , t#__wsum * ) 
iov_pages extern unsigned long iov_pages ( const s#iovec * , int , unsigned long ) 

/* net/core/link_watch.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##tcf_walker
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
linkwatch_fire_event extern void linkwatch_fire_event ( s#net_device * ) 

/* net/core/neighbour.o */
neigh_rand_reach_time unsigned long neigh_rand_reach_time ( unsigned long ) 
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
neigh_changeaddr void neigh_changeaddr ( s#neigh_table * , s#net_device * ) 
neigh_ifdown int neigh_ifdown ( s#neigh_table * , s#net_device * ) 
neigh_lookup s#neighbour * neigh_lookup ( s#neigh_table * , const void * , s#net_device * ) 
neigh_lookup_nodev s#neighbour * neigh_lookup_nodev ( s#neigh_table * , s#net * , const void * ) 
__neigh_create s#neighbour * __neigh_create ( s#neigh_table * , const void * , s#net_device * , t#bool ) 
__pneigh_lookup s#pneigh_entry * __pneigh_lookup ( s#neigh_table * , s#net * , const void * , s#net_device * ) 
pneigh_lookup s#pneigh_entry * pneigh_lookup ( s#neigh_table * , s#net * , const void * , s#net_device * , int ) 
neigh_destroy void neigh_destroy ( s#neighbour * ) 
__neigh_event_send int __neigh_event_send ( s#neighbour * , s#sk_buff * ) 
neigh_update int neigh_update ( s#neighbour * , const t#u8 * , t#u8 , t#u32 ) 
__neigh_set_probe_once void __neigh_set_probe_once ( s#neighbour * ) 
neigh_event_ns s#neighbour * neigh_event_ns ( s#neigh_table * , t#u8 * , void * , s#net_device * ) 
neigh_compat_output int neigh_compat_output ( s#neighbour * , s#sk_buff * ) 
neigh_resolve_output int neigh_resolve_output ( s#neighbour * , s#sk_buff * ) 
neigh_connected_output int neigh_connected_output ( s#neighbour * , s#sk_buff * ) 
neigh_direct_output int neigh_direct_output ( s#neighbour * , s#sk_buff * ) 
pneigh_enqueue void pneigh_enqueue ( s#neigh_table * , s#neigh_parms * , s#sk_buff * ) 
neigh_parms_alloc s#neigh_parms * neigh_parms_alloc ( s#net_device * , s#neigh_table * ) 
neigh_parms_release void neigh_parms_release ( s#neigh_table * , s#neigh_parms * ) 
neigh_table_init void neigh_table_init ( s#neigh_table * ) 
neigh_table_clear int neigh_table_clear ( s#neigh_table * ) 
neigh_for_each void neigh_for_each ( s#neigh_table * , void ( * ) ( s#neighbour * , void * ) , void * ) 
__neigh_for_each_release void __neigh_for_each_release ( s#neigh_table * , int ( * ) ( s#neighbour * ) ) 
neigh_seq_start void * neigh_seq_start ( s#seq_file * , t#loff_t * , s#neigh_table * , unsigned int ) 
neigh_seq_next void * neigh_seq_next ( s#seq_file * , void * , t#loff_t * ) 
neigh_seq_stop void neigh_seq_stop ( s#seq_file * , void * ) 
neigh_app_ns void neigh_app_ns ( s#neighbour * ) 
neigh_sysctl_register int neigh_sysctl_register ( s#net_device * , s#neigh_parms * , char * , t#proc_handler * ) 
neigh_sysctl_unregister void neigh_sysctl_unregister ( s#neigh_parms * ) 

/* net/core/net-sysfs.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
net_ns_type_operations extern s#kobj_ns_type_operations net_ns_type_operations 
netdev_class_create_file_ns extern int netdev_class_create_file_ns ( s#class_attribute * , const void * ) 
netdev_class_remove_file_ns extern void netdev_class_remove_file_ns ( s#class_attribute * , const void * ) 

/* net/core/net-traces.o */
s##static_key_mod
__tracepoint_kfree_skb extern s#tracepoint __tracepoint_kfree_skb 
__tracepoint_napi_poll extern s#tracepoint __tracepoint_napi_poll 

/* net/core/net_namespace.o */
net_namespace_list extern s#list_head net_namespace_list 
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
init_net extern s#net init_net 
__put_net extern void __put_net ( s#net * ) 
get_net_ns_by_pid extern s#net * get_net_ns_by_pid ( t#pid_t ) 
s#pernet_operations struct pernet_operations { s#list_head list ; int ( * init ) ( s#net * ) ; void ( * exit ) ( s#net * ) ; void ( * exit_batch ) ( s#list_head * ) ; int * id ; t#size_t size ; } 
register_pernet_subsys extern int register_pernet_subsys ( s#pernet_operations * ) 
unregister_pernet_subsys extern void unregister_pernet_subsys ( s#pernet_operations * ) 
register_pernet_device extern int register_pernet_device ( s#pernet_operations * ) 
unregister_pernet_device extern void unregister_pernet_device ( s#pernet_operations * ) 

/* net/core/netevent.o */
register_netevent_notifier extern int register_netevent_notifier ( s#notifier_block * ) 
unregister_netevent_notifier extern int unregister_netevent_notifier ( s#notifier_block * ) 
call_netevent_notifiers extern int call_netevent_notifiers ( unsigned long , void * ) 

/* net/core/netpoll.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##dn_route
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##module
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
netpoll_rx_disable extern void netpoll_rx_disable ( s#net_device * ) 
netpoll_rx_enable extern void netpoll_rx_enable ( s#net_device * ) 
netpoll_send_skb_on_dev void netpoll_send_skb_on_dev ( s#netpoll * , s#sk_buff * , s#net_device * ) 
netpoll_send_udp void netpoll_send_udp ( s#netpoll * , const char * , int ) 
netpoll_print_options void netpoll_print_options ( s#netpoll * ) 
netpoll_parse_options int netpoll_parse_options ( s#netpoll * , char * ) 
__netpoll_setup int __netpoll_setup ( s#netpoll * , s#net_device * , t#gfp_t ) 
netpoll_setup int netpoll_setup ( s#netpoll * ) 
__netpoll_cleanup void __netpoll_cleanup ( s#netpoll * ) 
__netpoll_free_async void __netpoll_free_async ( s#netpoll * ) 
netpoll_cleanup void netpoll_cleanup ( s#netpoll * ) 
netpoll_trap extern int netpoll_trap ( void ) 
netpoll_set_trap void netpoll_set_trap ( int ) 

/* net/core/request_sock.o */
sysctl_max_syn_backlog extern int sysctl_max_syn_backlog 

/* net/core/rtnetlink.o */
rtnl_lock extern void rtnl_lock ( void ) 
rtnl_unlock extern void rtnl_unlock ( void ) 
rtnl_trylock extern int rtnl_trylock ( void ) 
rtnl_is_locked extern int rtnl_is_locked ( void ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pci_sriov
s##pci_ats
s##msi_chip
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##tcf_walker
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##raw_hashinfo
s##xfrm_policy
s##sec_path
t#rtnl_doit_func typedef int ( * rtnl_doit_func ) ( s#sk_buff * , s#nlmsghdr * ) 
t#rtnl_dumpit_func typedef int ( * rtnl_dumpit_func ) ( s#sk_buff * , s#netlink_callback * ) 
t#rtnl_calcit_func typedef t#u16 ( * rtnl_calcit_func ) ( s#sk_buff * , s#nlmsghdr * ) 
__rtnl_register extern int __rtnl_register ( int , int , t#rtnl_doit_func , t#rtnl_dumpit_func , t#rtnl_calcit_func ) 
rtnl_register extern void rtnl_register ( int , int , t#rtnl_doit_func , t#rtnl_dumpit_func , t#rtnl_calcit_func ) 
rtnl_unregister extern int rtnl_unregister ( int , int ) 
rtnl_unregister_all extern void rtnl_unregister_all ( int ) 
__rtnl_link_register extern int __rtnl_link_register ( s#rtnl_link_ops * ) 
rtnl_link_register extern int rtnl_link_register ( s#rtnl_link_ops * ) 
__rtnl_link_unregister extern void __rtnl_link_unregister ( s#rtnl_link_ops * ) 
rtnl_link_unregister extern void rtnl_link_unregister ( s#rtnl_link_ops * ) 
s#rtnl_af_ops struct rtnl_af_ops { s#list_head list ; int family ; int ( * fill_link_af ) ( s#sk_buff * , const s#net_device * ) ; t#size_t ( * get_link_af_size ) ( const s#net_device * ) ; int ( * validate_link_af ) ( const s#net_device * , const s#nlattr * ) ; int ( * set_link_af ) ( s#net_device * , const s#nlattr * ) ; } 
__rtnl_af_register extern int __rtnl_af_register ( s#rtnl_af_ops * ) 
rtnl_af_register extern int rtnl_af_register ( s#rtnl_af_ops * ) 
__rtnl_af_unregister extern void __rtnl_af_unregister ( s#rtnl_af_ops * ) 
rtnl_af_unregister extern void rtnl_af_unregister ( s#rtnl_af_ops * ) 
rtnl_unicast extern int rtnl_unicast ( s#sk_buff * , s#net * , t#u32 ) 
rtnl_notify extern void rtnl_notify ( s#sk_buff * , s#net * , t#u32 , t#u32 , s#nlmsghdr * , t#gfp_t ) 
rtnl_set_sk_err extern void rtnl_set_sk_err ( s#net * , t#u32 , int ) 
rtnetlink_put_metrics extern int rtnetlink_put_metrics ( s#sk_buff * , t#u32 * ) 
rtnl_put_cacheinfo extern int rtnl_put_cacheinfo ( s#sk_buff * , s#dst_entry * , t#u32 , long , t#u32 ) 
E#__IFLA_MAX 35 
ifla_policy extern const s#nla_policy ifla_policy [ ( E#__IFLA_MAX - 1 ) + 1 ] 
rtnl_link_get_net extern s#net * rtnl_link_get_net ( s#net * , s#nlattr * [ ] ) 
s#ifinfomsg struct ifinfomsg { unsigned char ifi_family ; unsigned char __ifi_pad ; unsigned short ifi_type ; int ifi_index ; unsigned ifi_flags ; unsigned ifi_change ; } 
rtnl_configure_link extern int rtnl_configure_link ( s#net_device * , const s#ifinfomsg * ) 
rtnl_create_link extern s#net_device * rtnl_create_link ( s#net * , char * , const s#rtnl_link_ops * , s#nlattr * [ ] ) 
rtmsg_ifinfo void rtmsg_ifinfo ( int , s#net_device * , unsigned , t#gfp_t ) 
ndo_dflt_fdb_add extern int ndo_dflt_fdb_add ( s#ndmsg * , s#nlattr * [ ] , s#net_device * , const unsigned char * , t#u16 ) 
ndo_dflt_fdb_del extern int ndo_dflt_fdb_del ( s#ndmsg * , s#nlattr * [ ] , s#net_device * , const unsigned char * ) 
ndo_dflt_fdb_dump extern int ndo_dflt_fdb_dump ( s#sk_buff * , s#netlink_callback * , s#net_device * , int ) 
ndo_dflt_bridge_getlink extern int ndo_dflt_bridge_getlink ( s#sk_buff * , t#u32 , t#u32 , s#net_device * , t#u16 ) 

/* net/core/scm.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##workqueue_struct
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##mem_cgroup
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##bsd_acct_struct
s#scm_fp_list struct scm_fp_list { short count ; short max ; s#file * fp [ 253 ] ; } 
s#scm_cookie struct scm_cookie { s#pid * pid ; s#scm_fp_list * fp ; s#scm_creds creds ; t#u32 secid ; } 
__scm_destroy extern void __scm_destroy ( s#scm_cookie * ) 
__scm_send extern int __scm_send ( s#socket * , s#msghdr * , s#scm_cookie * ) 
put_cmsg extern int put_cmsg ( s#msghdr * , int , int , int , void * ) 
scm_detach_fds extern void scm_detach_fds ( s#msghdr * , s#scm_cookie * ) 
scm_fp_dup extern s#scm_fp_list * scm_fp_dup ( s#scm_fp_list * ) 

/* net/core/secure_seq.o */
secure_tcpv6_sequence_number extern t#__u32 secure_tcpv6_sequence_number ( const t#__be32 * , const t#__be32 * , t#__be16 , t#__be16 ) 
secure_ipv6_port_ephemeral extern t#u32 secure_ipv6_port_ephemeral ( const t#__be32 * , const t#__be32 * , t#__be16 ) 
secure_ipv4_port_ephemeral extern t#u32 secure_ipv4_port_ephemeral ( t#__be32 , t#__be32 , t#__be16 ) 
secure_dccp_sequence_number extern t#u64 secure_dccp_sequence_number ( t#__be32 , t#__be32 , t#__be16 , t#__be16 ) 
secure_dccpv6_sequence_number extern t#u64 secure_dccpv6_sequence_number ( t#__be32 * , t#__be32 * , t#__be16 , t#__be16 ) 

/* net/core/skbuff.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##tcf_walker
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
__alloc_skb extern s#sk_buff * __alloc_skb ( unsigned int , t#gfp_t , int , int ) 
build_skb extern s#sk_buff * build_skb ( void * , unsigned int ) 
netdev_alloc_frag extern void * netdev_alloc_frag ( unsigned int ) 
__netdev_alloc_skb extern s#sk_buff * __netdev_alloc_skb ( s#net_device * , unsigned int , t#gfp_t ) 
skb_add_rx_frag extern void skb_add_rx_frag ( s#sk_buff * , int , s#page * , int , int , unsigned int ) 
__kfree_skb extern void __kfree_skb ( s#sk_buff * ) 
kfree_skb extern void kfree_skb ( s#sk_buff * ) 
kfree_skb_list extern void kfree_skb_list ( s#sk_buff * ) 
skb_tx_error extern void skb_tx_error ( s#sk_buff * ) 
consume_skb extern void consume_skb ( s#sk_buff * ) 
skb_morph extern s#sk_buff * skb_morph ( s#sk_buff * , s#sk_buff * ) 
skb_copy_ubufs extern int skb_copy_ubufs ( s#sk_buff * , t#gfp_t ) 
skb_clone extern s#sk_buff * skb_clone ( s#sk_buff * , t#gfp_t ) 
skb_copy extern s#sk_buff * skb_copy ( const s#sk_buff * , t#gfp_t ) 
__pskb_copy extern s#sk_buff * __pskb_copy ( s#sk_buff * , int , t#gfp_t ) 
pskb_expand_head extern int pskb_expand_head ( s#sk_buff * , int , int , t#gfp_t ) 
skb_realloc_headroom extern s#sk_buff * skb_realloc_headroom ( s#sk_buff * , unsigned int ) 
skb_copy_expand extern s#sk_buff * skb_copy_expand ( const s#sk_buff * , int , int , t#gfp_t ) 
skb_pad extern int skb_pad ( s#sk_buff * , int ) 
skb_put extern unsigned char * skb_put ( s#sk_buff * , unsigned int ) 
skb_push extern unsigned char * skb_push ( s#sk_buff * , unsigned int ) 
skb_pull extern unsigned char * skb_pull ( s#sk_buff * , unsigned int ) 
skb_trim extern void skb_trim ( s#sk_buff * , unsigned int ) 
___pskb_trim extern int ___pskb_trim ( s#sk_buff * , unsigned int ) 
__pskb_pull_tail extern unsigned char * __pskb_pull_tail ( s#sk_buff * , int ) 
skb_copy_bits extern int skb_copy_bits ( const s#sk_buff * , int , void * , int ) 
skb_store_bits extern int skb_store_bits ( s#sk_buff * , int , const void * , int ) 
skb_checksum extern t#__wsum skb_checksum ( const s#sk_buff * , int , int , t#__wsum ) 
skb_copy_and_csum_bits extern t#__wsum skb_copy_and_csum_bits ( const s#sk_buff * , int , t#u8 * , int , t#__wsum ) 
skb_copy_and_csum_dev extern void skb_copy_and_csum_dev ( const s#sk_buff * , t#u8 * ) 
skb_dequeue extern s#sk_buff * skb_dequeue ( s#sk_buff_head * ) 
skb_dequeue_tail extern s#sk_buff * skb_dequeue_tail ( s#sk_buff_head * ) 
skb_queue_purge extern void skb_queue_purge ( s#sk_buff_head * ) 
skb_queue_head extern void skb_queue_head ( s#sk_buff_head * , s#sk_buff * ) 
skb_queue_tail extern void skb_queue_tail ( s#sk_buff_head * , s#sk_buff * ) 
skb_unlink extern void skb_unlink ( s#sk_buff * , s#sk_buff_head * ) 
skb_append extern void skb_append ( s#sk_buff * , s#sk_buff * , s#sk_buff_head * ) 
skb_insert extern void skb_insert ( s#sk_buff * , s#sk_buff * , s#sk_buff_head * ) 
skb_split extern void skb_split ( s#sk_buff * , s#sk_buff * , const t#u32 ) 
s#skb_seq_state struct skb_seq_state { t#__u32 lower_offset ; t#__u32 upper_offset ; t#__u32 frag_idx ; t#__u32 stepped_offset ; s#sk_buff * root_skb ; s#sk_buff * cur_skb ; t#__u8 * frag_data ; } 
skb_prepare_seq_read extern void skb_prepare_seq_read ( s#sk_buff * , unsigned int , unsigned int , s#skb_seq_state * ) 
skb_seq_read extern unsigned int skb_seq_read ( unsigned int , const t#u8 * * , s#skb_seq_state * ) 
skb_abort_seq_read extern void skb_abort_seq_read ( s#skb_seq_state * ) 
skb_find_text extern unsigned int skb_find_text ( s#sk_buff * , unsigned int , unsigned int , s#ts_config * , s#ts_state * ) 
skb_append_datato_frags extern int skb_append_datato_frags ( s#sock * , s#sk_buff * , int ( void * , char * , int , int , int , s#sk_buff * ) , void * , int ) 
skb_pull_rcsum unsigned char * skb_pull_rcsum ( s#sk_buff * , unsigned int ) 
skb_segment extern s#sk_buff * skb_segment ( s#sk_buff * , t#netdev_features_t ) 
skb_gro_receive extern int skb_gro_receive ( s#sk_buff * * , s#sk_buff * ) 
skb_to_sgvec extern int skb_to_sgvec ( s#sk_buff * , s#scatterlist * , int , int ) 
skb_cow_data extern int skb_cow_data ( s#sk_buff * , int , s#sk_buff * * ) 
sock_queue_err_skb extern int sock_queue_err_skb ( s#sock * , s#sk_buff * ) 
s#skb_shared_hwtstamps struct skb_shared_hwtstamps { t#ktime_t hwtstamp ; t#ktime_t syststamp ; } 
skb_tstamp_tx extern void skb_tstamp_tx ( s#sk_buff * , s#skb_shared_hwtstamps * ) 
skb_complete_wifi_ack void skb_complete_wifi_ack ( s#sk_buff * , t#bool ) 
skb_partial_csum_set t#bool skb_partial_csum_set ( s#sk_buff * , t#u16 , t#u16 ) 
__skb_warn_lro_forwarding extern void __skb_warn_lro_forwarding ( const s#sk_buff * ) 
kfree_skb_partial extern void kfree_skb_partial ( s#sk_buff * , t#bool ) 
skb_try_coalesce extern t#bool skb_try_coalesce ( s#sk_buff * , s#sk_buff * , t#bool * , int * ) 
skb_scrub_packet extern void skb_scrub_packet ( s#sk_buff * , t#bool ) 
skb_gso_transport_seglen unsigned int skb_gso_transport_seglen ( const s#sk_buff * ) 
skb_vlan_untag s#sk_buff * skb_vlan_untag ( s#sk_buff * ) 

/* net/core/sock.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
sk_ns_capable t#bool sk_ns_capable ( const s#sock * , s#user_namespace * , int ) 
sk_capable t#bool sk_capable ( const s#sock * , int ) 
sk_net_capable t#bool sk_net_capable ( const s#sock * , int ) 
sysctl_wmem_max extern t#__u32 sysctl_wmem_max 
sysctl_rmem_max extern t#__u32 sysctl_rmem_max 
sysctl_optmem_max extern int sysctl_optmem_max 
memalloc_socks extern s#static_key memalloc_socks 
sk_set_memalloc extern void sk_set_memalloc ( s#sock * ) 
sk_clear_memalloc extern void sk_clear_memalloc ( s#sock * ) 
__sk_backlog_rcv extern int __sk_backlog_rcv ( s#sock * , s#sk_buff * ) 
sock_queue_rcv_skb extern int sock_queue_rcv_skb ( s#sock * , s#sk_buff * ) 
sk_receive_skb extern int sk_receive_skb ( s#sock * , s#sk_buff * , const int ) 
sk_reset_txq extern void sk_reset_txq ( s#sock * ) 
__sk_dst_check extern s#dst_entry * __sk_dst_check ( s#sock * , t#u32 ) 
sk_dst_check extern s#dst_entry * sk_dst_check ( s#sock * , t#u32 ) 
sock_setsockopt extern int sock_setsockopt ( s#socket * , int , int , char * , unsigned int ) 
s#ucred struct ucred { t#__u32 pid ; t#__u32 uid ; t#__u32 gid ; } 
cred_to_ucred extern void cred_to_ucred ( s#pid * , const s#cred * , s#ucred * ) 
sk_prot_clear_portaddr_nulls void sk_prot_clear_portaddr_nulls ( s#sock * , int ) 
sock_update_classid void sock_update_classid ( s#sock * ) 
sock_update_netprioidx void sock_update_netprioidx ( s#sock * ) 
sk_alloc extern s#sock * sk_alloc ( s#net * , int , t#gfp_t , s#proto * ) 
sk_free extern void sk_free ( s#sock * ) 
sk_release_kernel extern void sk_release_kernel ( s#sock * ) 
sk_clone_lock extern s#sock * sk_clone_lock ( const s#sock * , const t#gfp_t ) 
sk_setup_caps extern void sk_setup_caps ( s#sock * , s#dst_entry * ) 
sock_wfree extern void sock_wfree ( s#sk_buff * ) 
skb_orphan_partial extern void skb_orphan_partial ( s#sk_buff * ) 
sock_rfree extern void sock_rfree ( s#sk_buff * ) 
sock_edemux extern void sock_edemux ( s#sk_buff * ) 
sock_i_uid extern t#kuid_t sock_i_uid ( s#sock * ) 
sock_i_ino extern unsigned long sock_i_ino ( s#sock * ) 
sock_wmalloc extern s#sk_buff * sock_wmalloc ( s#sock * , unsigned long , int , t#gfp_t ) 
sock_kmalloc extern void * sock_kmalloc ( s#sock * , int , t#gfp_t ) 
sock_kfree_s extern void sock_kfree_s ( s#sock * , void * , int ) 
sock_alloc_send_pskb extern s#sk_buff * sock_alloc_send_pskb ( s#sock * , unsigned long , unsigned long , int , int * , int ) 
sock_alloc_send_skb extern s#sk_buff * sock_alloc_send_skb ( s#sock * , unsigned long , int , int * ) 
sk_page_frag_refill extern t#bool sk_page_frag_refill ( s#sock * , s#page_frag * ) 
sk_wait_data extern int sk_wait_data ( s#sock * , long * ) 
__sk_mem_schedule extern int __sk_mem_schedule ( s#sock * , int , int ) 
__sk_mem_reclaim extern void __sk_mem_reclaim ( s#sock * ) 
sock_no_bind extern int sock_no_bind ( s#socket * , s#sockaddr * , int ) 
sock_no_connect extern int sock_no_connect ( s#socket * , s#sockaddr * , int , int ) 
sock_no_socketpair extern int sock_no_socketpair ( s#socket * , s#socket * ) 
sock_no_accept extern int sock_no_accept ( s#socket * , s#socket * , int ) 
sock_no_getname extern int sock_no_getname ( s#socket * , s#sockaddr * , int * , int ) 
sock_no_poll extern unsigned int sock_no_poll ( s#file * , s#socket * , s#poll_table_struct * ) 
sock_no_ioctl extern int sock_no_ioctl ( s#socket * , unsigned int , unsigned long ) 
sock_no_listen extern int sock_no_listen ( s#socket * , int ) 
sock_no_shutdown extern int sock_no_shutdown ( s#socket * , int ) 
sock_no_setsockopt extern int sock_no_setsockopt ( s#socket * , int , int , char * , unsigned int ) 
sock_no_getsockopt extern int sock_no_getsockopt ( s#socket * , int , int , char * , int * ) 
sock_no_sendmsg extern int sock_no_sendmsg ( s#kiocb * , s#socket * , s#msghdr * , t#size_t ) 
sock_no_recvmsg extern int sock_no_recvmsg ( s#kiocb * , s#socket * , s#msghdr * , t#size_t , int ) 
sock_no_mmap extern int sock_no_mmap ( s#file * , s#socket * , s#vm_area_struct * ) 
sock_no_sendpage extern t#ssize_t sock_no_sendpage ( s#socket * , s#page * , int , t#size_t , int ) 
sk_send_sigurg extern void sk_send_sigurg ( s#sock * ) 
sk_reset_timer extern void sk_reset_timer ( s#sock * , s#timer_list * , unsigned long ) 
sk_stop_timer extern void sk_stop_timer ( s#sock * , s#timer_list * ) 
sock_init_data extern void sock_init_data ( s#socket * , s#sock * ) 
lock_sock_nested extern void lock_sock_nested ( s#sock * , int ) 
release_sock extern void release_sock ( s#sock * ) 
lock_sock_fast extern t#bool lock_sock_fast ( s#sock * ) 
sock_get_timestamp extern int sock_get_timestamp ( s#sock * , s#timeval * ) 
sock_get_timestampns extern int sock_get_timestampns ( s#sock * , s#timespec * ) 
sock_recv_errqueue extern int sock_recv_errqueue ( s#sock * , s#msghdr * , int , int , int ) 
sock_common_getsockopt extern int sock_common_getsockopt ( s#socket * , int , int , char * , int * ) 
compat_sock_common_getsockopt extern int compat_sock_common_getsockopt ( s#socket * , int , int , char * , int * ) 
sock_common_recvmsg extern int sock_common_recvmsg ( s#kiocb * , s#socket * , s#msghdr * , t#size_t , int ) 
sock_common_setsockopt extern int sock_common_setsockopt ( s#socket * , int , int , char * , unsigned int ) 
compat_sock_common_setsockopt extern int compat_sock_common_setsockopt ( s#socket * , int , int , char * , unsigned int ) 
sk_common_release extern void sk_common_release ( s#sock * ) 
sock_prot_inuse_add extern void sock_prot_inuse_add ( s#net * , s#proto * , int ) 
sock_prot_inuse_get extern int sock_prot_inuse_get ( s#net * , s#proto * ) 
proto_register extern int proto_register ( s#proto * , int ) 
proto_unregister extern void proto_unregister ( s#proto * ) 

/* net/core/sock_diag.o */
sock_diag_check_cookie int sock_diag_check_cookie ( void * , t#__u32 * ) 
sock_diag_save_cookie void sock_diag_save_cookie ( void * , t#__u32 * ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
sock_diag_put_meminfo int sock_diag_put_meminfo ( s#sock * , s#sk_buff * , int ) 
sock_diag_put_filterinfo int sock_diag_put_filterinfo ( t#bool , s#sock * , s#sk_buff * , int ) 
sock_diag_register_inet_compat void sock_diag_register_inet_compat ( int ( * ) ( s#sk_buff * , s#nlmsghdr * ) ) 
sock_diag_unregister_inet_compat void sock_diag_unregister_inet_compat ( int ( * ) ( s#sk_buff * , s#nlmsghdr * ) ) 
s#sock_diag_handler struct sock_diag_handler { t#__u8 family ; int ( * dump ) ( s#sk_buff * , s#nlmsghdr * ) ; } 
sock_diag_register int sock_diag_register ( const s#sock_diag_handler * ) 
sock_diag_unregister void sock_diag_unregister ( const s#sock_diag_handler * ) 

/* net/core/stream.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
sk_stream_write_space extern void sk_stream_write_space ( s#sock * ) 
sk_stream_wait_connect extern int sk_stream_wait_connect ( s#sock * , long * ) 
sk_stream_wait_close extern void sk_stream_wait_close ( s#sock * , long ) 
sk_stream_wait_memory extern int sk_stream_wait_memory ( s#sock * , long * ) 
sk_stream_error extern int sk_stream_error ( s#sock * , int , int ) 
sk_stream_kill_queues extern void sk_stream_kill_queues ( s#sock * ) 

/* net/core/utils.o */
net_msg_warn extern int net_msg_warn 
net_ratelimit extern int net_ratelimit ( void ) 
in_aton extern t#__be32 in_aton ( const char * ) 
in4_pton extern int in4_pton ( const char * , int , t#u8 * , int , const char * * ) 
in6_pton extern int in6_pton ( const char * , int , t#u8 * , int , const char * * ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
inet_proto_csum_replace4 void inet_proto_csum_replace4 ( t#__sum16 * , s#sk_buff * , t#__be32 , t#__be32 , int ) 
inet_proto_csum_replace16 void inet_proto_csum_replace16 ( t#__sum16 * , s#sk_buff * , const t#__be32 * , const t#__be32 * , int ) 

/* net/dcb/dcbevent.o */
register_dcbevent_notifier extern int register_dcbevent_notifier ( s#notifier_block * ) 
unregister_dcbevent_notifier extern int unregister_dcbevent_notifier ( s#notifier_block * ) 

/* net/dcb/dcbnl.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
dcbnl_ieee_notify int dcbnl_ieee_notify ( s#net_device * , int , int , t#u32 , t#u32 ) 
dcbnl_cee_notify int dcbnl_cee_notify ( s#net_device * , int , int , t#u32 , t#u32 ) 
dcb_getapp t#u8 dcb_getapp ( s#net_device * , s#dcb_app * ) 
dcb_setapp int dcb_setapp ( s#net_device * , s#dcb_app * ) 
dcb_ieee_getapp_mask t#u8 dcb_ieee_getapp_mask ( s#net_device * , s#dcb_app * ) 
dcb_ieee_setapp int dcb_ieee_setapp ( s#net_device * , s#dcb_app * ) 
dcb_ieee_delapp int dcb_ieee_delapp ( s#net_device * , s#dcb_app * ) 

/* net/dns_resolver/dns_query.o */
dns_query extern int dns_query ( const char * , const char * , t#size_t , const char * , char * * , t#time_t * ) 

/* net/dsa/dsa.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##pci_dev
s##iommu_group
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
register_switch_driver void register_switch_driver ( s#dsa_switch_driver * ) 
unregister_switch_driver void unregister_switch_driver ( s#dsa_switch_driver * ) 

/* net/ethernet/eth.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
eth_header extern int eth_header ( s#sk_buff * , s#net_device * , unsigned short , const void * , const void * , unsigned ) 
eth_rebuild_header extern int eth_rebuild_header ( s#sk_buff * ) 
eth_type_trans extern t#__be16 eth_type_trans ( s#sk_buff * , s#net_device * ) 
eth_header_parse int eth_header_parse ( const s#sk_buff * , unsigned char * ) 
eth_header_cache extern int eth_header_cache ( const s#neighbour * , s#hh_cache * , t#__be16 ) 
eth_header_cache_update extern void eth_header_cache_update ( s#hh_cache * , const s#net_device * , const unsigned char * ) 
eth_prepare_mac_addr_change extern int eth_prepare_mac_addr_change ( s#net_device * , void * ) 
eth_commit_mac_addr_change extern void eth_commit_mac_addr_change ( s#net_device * , void * ) 
eth_mac_addr extern int eth_mac_addr ( s#net_device * , void * ) 
eth_change_mtu extern int eth_change_mtu ( s#net_device * , int ) 
eth_validate_addr extern int eth_validate_addr ( s#net_device * ) 
ether_setup extern void ether_setup ( s#net_device * ) 
alloc_etherdev_mqs extern s#net_device * alloc_etherdev_mqs ( int , unsigned int , unsigned int ) 
sysfs_format_mac extern t#ssize_t sysfs_format_mac ( char * , const unsigned char * , int ) 

/* net/ipv4/af_inet.o */
s#ipv4_config struct ipv4_config { int log_martians ; int no_pmtu_disc ; } 
ipv4_config extern s#ipv4_config ipv4_config 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s#ip_sf_list struct ip_sf_list { s#ip_sf_list * sf_next ; t#__be32 sf_inaddr ; unsigned long sf_count [ 2 ] ; unsigned char sf_gsresp ; unsigned char sf_oldin ; unsigned char sf_crcount ; } 
s#ip_mc_list struct ip_mc_list { s#in_device * interface ; t#__be32 multiaddr ; unsigned int sfmode ; s#ip_sf_list * sources ; s#ip_sf_list * tomb ; unsigned long sfcount [ 2 ] ; union { s#ip_mc_list * next ; s#ip_mc_list * next_rcu ; } ; s#ip_mc_list * next_hash ; s#timer_list timer ; int users ; t#atomic_t refcnt ; t#spinlock_t lock ; char tm_running ; char reporter ; char unsolicit_count ; char loaded ; unsigned char gsquery ; unsigned char crcount ; s#callback_head rcu ; } 
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s#fib_table struct fib_table { s#hlist_node tb_hlist ; t#u32 tb_id ; int tb_default ; int tb_num_default ; unsigned long tb_data [ 0 ] ; } 
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s#raw_hashinfo struct raw_hashinfo { t#rwlock_t lock ; s#hlist_head ht [ 256 ] ; } 
inet_sock_destruct extern void inet_sock_destruct ( s#sock * ) 
inet_listen extern int inet_listen ( s#socket * , int ) 
inet_ehash_secret extern t#u32 inet_ehash_secret 
ipv6_hash_secret extern t#u32 ipv6_hash_secret 
build_ehash_secret extern void build_ehash_secret ( void ) 
inet_release extern int inet_release ( s#socket * ) 
sysctl_ip_nonlocal_bind extern int sysctl_ip_nonlocal_bind 
inet_bind extern int inet_bind ( s#socket * , s#sockaddr * , int ) 
inet_dgram_connect extern int inet_dgram_connect ( s#socket * , s#sockaddr * , int , int ) 
__inet_stream_connect extern int __inet_stream_connect ( s#socket * , s#sockaddr * , int , int ) 
inet_stream_connect extern int inet_stream_connect ( s#socket * , s#sockaddr * , int , int ) 
inet_accept extern int inet_accept ( s#socket * , s#socket * , int ) 
inet_getname extern int inet_getname ( s#socket * , s#sockaddr * , int * , int ) 
inet_sendmsg extern int inet_sendmsg ( s#kiocb * , s#socket * , s#msghdr * , t#size_t ) 
inet_sendpage extern t#ssize_t inet_sendpage ( s#socket * , s#page * , int , t#size_t , int ) 
inet_recvmsg extern int inet_recvmsg ( s#kiocb * , s#socket * , s#msghdr * , t#size_t , int ) 
inet_shutdown extern int inet_shutdown ( s#socket * , int ) 
inet_ioctl extern int inet_ioctl ( s#socket * , unsigned int , unsigned long ) 
inet_stream_ops extern const s#proto_ops inet_stream_ops 
inet_dgram_ops extern const s#proto_ops inet_dgram_ops 
s#inet_protosw struct inet_protosw { s#list_head list ; unsigned short type ; unsigned short protocol ; s#proto * prot ; const s#proto_ops * ops ; char no_check ; unsigned char flags ; } 
inet_register_protosw extern void inet_register_protosw ( s#inet_protosw * ) 
inet_unregister_protosw extern void inet_unregister_protosw ( s#inet_protosw * ) 
inet_sk_rebuild_header extern int inet_sk_rebuild_header ( s#sock * ) 
inet_ctl_sock_create extern int inet_ctl_sock_create ( s#sock * * , unsigned short , unsigned short , unsigned char , s#net * ) 
snmp_fold_field extern unsigned long snmp_fold_field ( void * [ ] , int ) 
snmp_mib_init extern int snmp_mib_init ( void * [ 2 ] , t#size_t , t#size_t ) 

/* net/ipv4/arp.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
arp_tbl extern s#neigh_table arp_tbl 
arp_find int arp_find ( unsigned char * , s#sk_buff * ) 
arp_create s#sk_buff * arp_create ( int , int , t#__be32 , s#net_device * , t#__be32 , const unsigned char * , const unsigned char * , const unsigned char * ) 
arp_xmit void arp_xmit ( s#sk_buff * ) 
arp_send void arp_send ( int , int , t#__be32 , s#net_device * , t#__be32 , const unsigned char * , const unsigned char * , const unsigned char * ) 
arp_invalidate int arp_invalidate ( s#net_device * , t#__be32 ) 

/* net/ipv4/datagram.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
ip4_datagram_connect extern int ip4_datagram_connect ( s#sock * , s#sockaddr * , int ) 
ip4_datagram_release_cb extern void ip4_datagram_release_cb ( s#sock * ) 

/* net/ipv4/devinet.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##dn_route
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
__ip_dev_find extern s#net_device * __ip_dev_find ( s#net * , t#__be32 , t#bool ) 
in_dev_finish_destroy extern void in_dev_finish_destroy ( s#in_device * ) 
inetdev_by_index extern s#in_device * inetdev_by_index ( s#net * , int ) 
inet_select_addr extern t#__be32 inet_select_addr ( const s#net_device * , t#__be32 , int ) 
inet_confirm_addr t#__be32 inet_confirm_addr ( s#net * , s#in_device * , t#__be32 , t#__be32 , int ) 
register_inetaddr_notifier extern int register_inetaddr_notifier ( s#notifier_block * ) 
unregister_inetaddr_notifier extern int unregister_inetaddr_notifier ( s#notifier_block * ) 

/* net/ipv4/fib_frontend.o */
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##kmem_cache_node
s##array_cache
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##udp_table
s##raw_hashinfo
s##mem_cgroup
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##bsd_acct_struct
s##prot_inuse
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
inet_addr_type extern unsigned int inet_addr_type ( s#net * , t#__be32 ) 
inet_dev_addr_type extern unsigned int inet_dev_addr_type ( s#net * , const s#net_device * , t#__be32 ) 

/* net/ipv4/fib_rules.o */
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##module
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##dn_route
s##prot_inuse
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s#fib_nh_exception struct fib_nh_exception { s#fib_nh_exception * fnhe_next ; int fnhe_genid ; t#__be32 fnhe_daddr ; t#u32 fnhe_pmtu ; t#__be32 fnhe_gw ; unsigned long fnhe_expires ; s#rtable * fnhe_rth_input ; s#rtable * fnhe_rth_output ; unsigned long fnhe_stamp ; } 
s#fnhe_hash_bucket struct fnhe_hash_bucket { s#fib_nh_exception * chain ; } 
s#fib_nh struct fib_nh { s#net_device * nh_dev ; s#hlist_node nh_hash ; s#fib_info * nh_parent ; unsigned int nh_flags ; unsigned char nh_scope ; int nh_weight ; int nh_power ; t#__u32 nh_tclassid ; int nh_oif ; t#__be32 nh_gw ; t#__be32 nh_saddr ; int nh_saddr_genid ; s#rtable * * nh_pcpu_rth_output ; s#rtable * nh_rth_input ; s#fnhe_hash_bucket * nh_exceptions ; } 
s#fib_info struct fib_info { s#hlist_node fib_hash ; s#hlist_node fib_lhash ; s#net * fib_net ; int fib_treeref ; t#atomic_t fib_clntref ; unsigned int fib_flags ; unsigned char fib_dead ; unsigned char fib_protocol ; unsigned char fib_scope ; unsigned char fib_type ; t#__be32 fib_prefsrc ; t#u32 fib_priority ; t#u32 * fib_metrics ; int fib_nhs ; int fib_power ; s#callback_head rcu ; s#fib_nh fib_nh [ 0 ] ; } 
s#fib_result struct fib_result { unsigned char prefixlen ; unsigned char nh_sel ; unsigned char type ; unsigned char scope ; t#u32 tclassid ; s#fib_info * fi ; s#fib_table * table ; s#list_head * fa_head ; } 
__fib_lookup extern int __fib_lookup ( s#net * , s#flowi4 * , s#fib_result * ) 

/* net/ipv4/fib_trie.o */
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##module
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##dn_route
s##prot_inuse
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
fib_table_lookup extern int fib_table_lookup ( s#fib_table * , const s#flowi4 * , s#fib_result * , int ) 

/* net/ipv4/gre_demux.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s#gre_protocol struct gre_protocol { int ( * handler ) ( s#sk_buff * ) ; void ( * err_handler ) ( s#sk_buff * , t#u32 ) ; } 
gre_add_protocol int gre_add_protocol ( const s#gre_protocol * , t#u8 ) 
gre_del_protocol int gre_del_protocol ( const s#gre_protocol * , t#u8 ) 
s#tnl_ptk_info struct tnl_ptk_info { t#__be16 flags ; t#__be16 proto ; t#__be32 key ; t#__be32 seq ; } 
gre_build_header void gre_build_header ( s#sk_buff * , const s#tnl_ptk_info * , int ) 
s#gre_cisco_protocol struct gre_cisco_protocol { int ( * handler ) ( s#sk_buff * , const s#tnl_ptk_info * ) ; int ( * err_handler ) ( s#sk_buff * , t#u32 , const s#tnl_ptk_info * ) ; t#u8 priority ; } 
gre_cisco_register int gre_cisco_register ( s#gre_cisco_protocol * ) 
gre_cisco_unregister int gre_cisco_unregister ( s#gre_cisco_protocol * ) 

/* net/ipv4/icmp.o */
s#icmp_err struct icmp_err { int errno ; unsigned int fatal : 1 ; } 
icmp_err_convert extern const s#icmp_err icmp_err_convert [ ] 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
icmp_send extern void icmp_send ( s#sk_buff * , int , int , t#__be32 ) 

/* net/ipv4/igmp.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##dn_route
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
ip_mc_inc_group extern void ip_mc_inc_group ( s#in_device * , t#__be32 ) 
ip_mc_dec_group extern void ip_mc_dec_group ( s#in_device * , t#__be32 ) 
s#ip_mreqn struct ip_mreqn { s#in_addr imr_multiaddr ; s#in_addr imr_address ; int imr_ifindex ; } 
ip_mc_join_group extern int ip_mc_join_group ( s#sock * , s#ip_mreqn * ) 
ip_mc_leave_group extern int ip_mc_leave_group ( s#sock * , s#ip_mreqn * ) 

/* net/ipv4/inet_connection_sock.o */
inet_csk_timer_bug_msg extern const char inet_csk_timer_bug_msg [ ] 
sysctl_local_reserved_ports extern unsigned long * sysctl_local_reserved_ports 
inet_get_local_port_range extern void inet_get_local_port_range ( int * , int * ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s#inet_bind_bucket struct inet_bind_bucket { s#net * ib_net ; unsigned short port ; signed char fastreuse ; signed char fastreuseport ; t#kuid_t fastuid ; int num_owners ; s#hlist_node node ; s#hlist_head owners ; } 
inet_csk_bind_conflict extern int inet_csk_bind_conflict ( const s#sock * , const s#inet_bind_bucket * , t#bool ) 
inet_csk_get_port extern int inet_csk_get_port ( s#sock * , unsigned short ) 
inet_csk_accept extern s#sock * inet_csk_accept ( s#sock * , int , int * ) 
inet_csk_init_xmit_timers extern void inet_csk_init_xmit_timers ( s#sock * , void ( * ) ( unsigned long ) , void ( * ) ( unsigned long ) , void ( * ) ( unsigned long ) ) 
inet_csk_clear_xmit_timers extern void inet_csk_clear_xmit_timers ( s#sock * ) 
inet_csk_delete_keepalive_timer extern void inet_csk_delete_keepalive_timer ( s#sock * ) 
inet_csk_reset_keepalive_timer extern void inet_csk_reset_keepalive_timer ( s#sock * , unsigned long ) 
inet_csk_route_req extern s#dst_entry * inet_csk_route_req ( s#sock * , s#flowi4 * , const s#request_sock * ) 
inet_csk_route_child_sock extern s#dst_entry * inet_csk_route_child_sock ( s#sock * , s#sock * , const s#request_sock * ) 
inet_csk_search_req extern s#request_sock * inet_csk_search_req ( const s#sock * , s#request_sock * * * , const t#__be16 , const t#__be32 , const t#__be32 ) 
inet_csk_reqsk_queue_hash_add extern void inet_csk_reqsk_queue_hash_add ( s#sock * , s#request_sock * , unsigned long ) 
inet_rtx_syn_ack extern int inet_rtx_syn_ack ( s#sock * , s#request_sock * ) 
inet_csk_reqsk_queue_prune extern void inet_csk_reqsk_queue_prune ( s#sock * , const unsigned long , const unsigned long , const unsigned long ) 
inet_csk_clone_lock extern s#sock * inet_csk_clone_lock ( const s#sock * , const s#request_sock * , const t#gfp_t ) 
inet_csk_destroy_sock extern void inet_csk_destroy_sock ( s#sock * ) 
inet_csk_prepare_forced_close extern void inet_csk_prepare_forced_close ( s#sock * ) 
inet_csk_listen_start extern int inet_csk_listen_start ( s#sock * , const int ) 
inet_csk_listen_stop extern void inet_csk_listen_stop ( s#sock * ) 
inet_csk_addr2sockaddr extern void inet_csk_addr2sockaddr ( s#sock * , s#sockaddr * ) 
inet_csk_compat_getsockopt extern int inet_csk_compat_getsockopt ( s#sock * , int , int , char * , int * ) 
inet_csk_compat_setsockopt extern int inet_csk_compat_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
inet_csk_update_pmtu extern s#dst_entry * inet_csk_update_pmtu ( s#sock * , t#u32 ) 

/* net/ipv4/inet_diag.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s#in6_pktinfo struct in6_pktinfo { s#in6_addr ipi6_addr ; int ipi6_ifindex ; } 
s#ip6_sf_socklist struct ip6_sf_socklist { unsigned int sl_max ; unsigned int sl_count ; s#in6_addr sl_addr [ 0 ] ; } 
s#ipv6_mc_socklist struct ipv6_mc_socklist { s#in6_addr addr ; int ifindex ; s#ipv6_mc_socklist * next ; t#rwlock_t sflock ; unsigned int sfmode ; s#ip6_sf_socklist * sflist ; s#callback_head rcu ; } 
s#ipv6_ac_socklist struct ipv6_ac_socklist { s#in6_addr acl_addr ; int acl_ifindex ; s#ipv6_ac_socklist * acl_next ; } 
s#ipv6_opt_hdr struct ipv6_opt_hdr { t#__u8 nexthdr ; t#__u8 hdrlen ; } 
s#ipv6_rt_hdr struct ipv6_rt_hdr { t#__u8 nexthdr ; t#__u8 hdrlen ; t#__u8 type ; t#__u8 segments_left ; } 
s#ipv6_txoptions struct ipv6_txoptions { int tot_len ; t#__u16 opt_flen ; t#__u16 opt_nflen ; s#ipv6_opt_hdr * hopopt ; s#ipv6_opt_hdr * dst0opt ; s#ipv6_rt_hdr * srcrt ; s#ipv6_opt_hdr * dst1opt ; } 
s#ip6_flowlabel struct ip6_flowlabel { s#ip6_flowlabel * next ; t#__be32 label ; t#atomic_t users ; s#in6_addr dst ; s#ipv6_txoptions * opt ; unsigned long linger ; s#callback_head rcu ; t#u8 share ; union { s#pid * pid ; t#kuid_t uid ; } owner ; unsigned long lastuse ; unsigned long expires ; s#net * fl_net ; } 
s#ipv6_fl_socklist struct ipv6_fl_socklist { s#ipv6_fl_socklist * next ; s#ip6_flowlabel * fl ; s#callback_head rcu ; } 
s#ipv6_pinfo struct ipv6_pinfo { s#in6_addr saddr ; s#in6_addr rcv_saddr ; s#in6_addr daddr ; s#in6_pktinfo sticky_pktinfo ; const s#in6_addr * daddr_cache ; const s#in6_addr * saddr_cache ; t#__be32 flow_label ; t#__u32 frag_size ; t#__u16 __unused_1 : 7 ; t#__s16 hop_limit : 9 ; t#__u16 mc_loop : 1 , __unused_2 : 6 ; t#__s16 mcast_hops : 9 ; int ucast_oif ; int mcast_oif ; union { struct { t#__u16 srcrt : 1 , osrcrt : 1 , rxinfo : 1 , rxoinfo : 1 , rxhlim : 1 , rxohlim : 1 , hopopts : 1 , ohopopts : 1 , dstopts : 1 , odstopts : 1 , rxflow : 1 , rxtclass : 1 , rxpmtu : 1 , rxorigdstaddr : 1 ; } bits ; t#__u16 all ; } rxopt ; t#__u16 recverr : 1 , sndflow : 1 , pmtudisc : 2 , ipv6only : 1 , srcprefs : 3 , dontfrag : 1 ; t#__u8 min_hopcount ; t#__u8 tclass ; t#__u8 rcv_tclass ; t#__u32 dst_cookie ; t#__u32 rx_dst_cookie ; s#ipv6_mc_socklist * ipv6_mc_list ; s#ipv6_ac_socklist * ipv6_ac_list ; s#ipv6_fl_socklist * ipv6_fl_list ; s#ipv6_txoptions * opt ; s#sk_buff * pktoptions ; s#sk_buff * rxpmtu ; struct { s#ipv6_txoptions * opt ; t#u8 hop_limit ; t#u8 tclass ; } cork ; } 
s#ip_options struct ip_options { t#__be32 faddr ; t#__be32 nexthop ; unsigned char optlen ; unsigned char srr ; unsigned char rr ; unsigned char ts ; unsigned char is_strictroute : 1 , srr_is_hit : 1 , is_changed : 1 , rr_needaddr : 1 , ts_needtime : 1 , ts_needaddr : 1 ; unsigned char router_alert ; unsigned char cipso ; unsigned char __pad2 ; unsigned char __data [ 0 ] ; } 
s#ip_options_rcu struct ip_options_rcu { s#callback_head rcu ; s#ip_options opt ; } 
s##ip_mc_socklist
s#inet_cork struct inet_cork { unsigned int flags ; t#__be32 addr ; s#ip_options * opt ; unsigned int fragsize ; int length ; s#dst_entry * dst ; t#u8 tx_flags ; } 
s#inet_cork_full struct inet_cork_full { s#inet_cork base ; s#flowi fl ; } 
s#inet_sock struct inet_sock { s#sock sk ; s#ipv6_pinfo * pinet6 ; t#__be32 inet_saddr ; t#__s16 uc_ttl ; t#__u16 cmsg_flags ; t#__be16 inet_sport ; t#__u16 inet_id ; s#ip_options_rcu * inet_opt ; int rx_dst_ifindex ; t#__u8 tos ; t#__u8 min_ttl ; t#__u8 mc_ttl ; t#__u8 pmtudisc ; t#__u8 recverr : 1 , is_icsk : 1 , freebind : 1 , hdrincl : 1 , mc_loop : 1 , transparent : 1 , mc_all : 1 , nodefrag : 1 ; t#__u8 rcv_tos ; int uc_index ; int mc_index ; t#__be32 mc_addr ; s#ip_mc_socklist * mc_list ; s#inet_cork_full cork ; } 
s#listen_sock struct listen_sock { t#u8 max_qlen_log ; t#u8 synflood_warned ; int qlen ; int qlen_young ; int clock_hand ; t#u32 hash_rnd ; t#u32 nr_table_entries ; s#request_sock * syn_table [ 0 ] ; } 
s#fastopen_queue struct fastopen_queue { s#request_sock * rskq_rst_head ; s#request_sock * rskq_rst_tail ; t#spinlock_t lock ; int qlen ; int max_qlen ; } 
s#request_sock_queue struct request_sock_queue { s#request_sock * rskq_accept_head ; s#request_sock * rskq_accept_tail ; t#rwlock_t syn_wait_lock ; t#u8 rskq_defer_accept ; s#listen_sock * listen_opt ; s#fastopen_queue * fastopenq ; } 
e#tcp_ca_event enum tcp_ca_event { CA_EVENT_TX_START , CA_EVENT_CWND_RESTART , CA_EVENT_COMPLETE_CWR , CA_EVENT_LOSS , CA_EVENT_FAST_ACK , CA_EVENT_SLOW_ACK , } 
s#tcp_congestion_ops struct tcp_congestion_ops { s#list_head list ; unsigned long flags ; void ( * init ) ( s#sock * ) ; void ( * release ) ( s#sock * ) ; t#u32 ( * ssthresh ) ( s#sock * ) ; t#u32 ( * min_cwnd ) ( const s#sock * ) ; void ( * cong_avoid ) ( s#sock * , t#u32 , t#u32 ) ; void ( * set_state ) ( s#sock * , t#u8 ) ; void ( * cwnd_event ) ( s#sock * , e#tcp_ca_event ) ; t#u32 ( * undo_cwnd ) ( s#sock * ) ; void ( * pkts_acked ) ( s#sock * , t#u32 , t#s32 ) ; void ( * get_info ) ( s#sock * , t#u32 , s#sk_buff * ) ; char name [ 16 ] ; s#module * owner ; } 
s#inet_connection_sock_af_ops struct inet_connection_sock_af_ops { int ( * queue_xmit ) ( s#sk_buff * , s#flowi * ) ; void ( * send_check ) ( s#sock * , s#sk_buff * ) ; int ( * rebuild_header ) ( s#sock * ) ; void ( * sk_rx_dst_set ) ( s#sock * , const s#sk_buff * ) ; int ( * conn_request ) ( s#sock * , s#sk_buff * ) ; s#sock * ( * syn_recv_sock ) ( s#sock * , s#sk_buff * , s#request_sock * , s#dst_entry * ) ; t#u16 net_header_len ; t#u16 net_frag_header_len ; t#u16 sockaddr_len ; int ( * setsockopt ) ( s#sock * , int , int , char * , unsigned int ) ; int ( * getsockopt ) ( s#sock * , int , int , char * , int * ) ; int ( * compat_setsockopt ) ( s#sock * , int , int , char * , unsigned int ) ; int ( * compat_getsockopt ) ( s#sock * , int , int , char * , int * ) ; void ( * addr2sockaddr ) ( s#sock * , s#sockaddr * ) ; int ( * bind_conflict ) ( const s#sock * , const s#inet_bind_bucket * , t#bool ) ; } 
s#inet_connection_sock struct inet_connection_sock { s#inet_sock icsk_inet ; s#request_sock_queue icsk_accept_queue ; s#inet_bind_bucket * icsk_bind_hash ; unsigned long icsk_timeout ; s#timer_list icsk_retransmit_timer ; s#timer_list icsk_delack_timer ; t#__u32 icsk_rto ; t#__u32 icsk_pmtu_cookie ; const s#tcp_congestion_ops * icsk_ca_ops ; const s#inet_connection_sock_af_ops * icsk_af_ops ; unsigned int ( * icsk_sync_mss ) ( s#sock * , t#u32 ) ; t#__u8 icsk_ca_state ; t#__u8 icsk_retransmits ; t#__u8 icsk_pending ; t#__u8 icsk_backoff ; t#__u8 icsk_syn_retries ; t#__u8 icsk_probes_out ; t#__u16 icsk_ext_hdr_len ; struct { t#__u8 pending ; t#__u8 quick ; t#__u8 pingpong ; t#__u8 blocked ; t#__u32 ato ; unsigned long timeout ; t#__u32 lrcvtime ; t#__u16 last_seg_size ; t#__u16 rcv_mss ; } icsk_ack ; struct { int enabled ; int search_high ; int search_low ; int probe_size ; } icsk_mtup ; t#u32 icsk_ca_priv [ 16 ] ; t#u32 icsk_user_timeout ; } 
s#inet_diag_sockid struct inet_diag_sockid { t#__be16 idiag_sport ; t#__be16 idiag_dport ; t#__be32 idiag_src [ 4 ] ; t#__be32 idiag_dst [ 4 ] ; t#__u32 idiag_if ; t#__u32 idiag_cookie [ 2 ] ; } 
s#inet_diag_req_v2 struct inet_diag_req_v2 { t#__u8 sdiag_family ; t#__u8 sdiag_protocol ; t#__u8 idiag_ext ; t#__u8 pad ; t#__u32 idiag_states ; s#inet_diag_sockid id ; } 
inet_sk_diag_fill int inet_sk_diag_fill ( s#sock * , s#inet_connection_sock * , s#sk_buff * , s#inet_diag_req_v2 * , s#user_namespace * , t#u32 , t#u32 , t#u16 , const s#nlmsghdr * ) 
inet_diag_dump_one_icsk int inet_diag_dump_one_icsk ( s#inet_hashinfo * , s#sk_buff * , const s#nlmsghdr * , s#inet_diag_req_v2 * ) 
inet_diag_bc_sk int inet_diag_bc_sk ( const s#nlattr * , s#sock * ) 
inet_diag_dump_icsk void inet_diag_dump_icsk ( s#inet_hashinfo * , s#sk_buff * , s#netlink_callback * , s#inet_diag_req_v2 * , s#nlattr * ) 
s#inet_diag_msg struct inet_diag_msg { t#__u8 idiag_family ; t#__u8 idiag_state ; t#__u8 idiag_timer ; t#__u8 idiag_retrans ; s#inet_diag_sockid id ; t#__u32 idiag_expires ; t#__u32 idiag_rqueue ; t#__u32 idiag_wqueue ; t#__u32 idiag_uid ; t#__u32 idiag_inode ; } 
s#inet_diag_handler struct inet_diag_handler { void ( * dump ) ( s#sk_buff * , s#netlink_callback * , s#inet_diag_req_v2 * , s#nlattr * ) ; int ( * dump_one ) ( s#sk_buff * , const s#nlmsghdr * , s#inet_diag_req_v2 * ) ; void ( * idiag_get_info ) ( s#sock * , s#inet_diag_msg * , void * ) ; t#__u16 idiag_type ; } 
inet_diag_register extern int inet_diag_register ( const s#inet_diag_handler * ) 
inet_diag_unregister extern void inet_diag_unregister ( const s#inet_diag_handler * ) 

/* net/ipv4/inet_fragment.o */
ip_frag_ecn_table extern const t#u8 ip_frag_ecn_table [ 16 ] 
s#inet_frag_bucket struct inet_frag_bucket { s#hlist_head chain ; t#spinlock_t chain_lock ; } 
s##tvec_base
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s#inet_frag_queue struct inet_frag_queue { t#spinlock_t lock ; s#timer_list timer ; s#list_head lru_list ; s#hlist_node list ; t#atomic_t refcnt ; s#sk_buff * fragments ; s#sk_buff * fragments_tail ; t#ktime_t stamp ; int len ; int meat ; t#__u8 last_in ; t#u16 max_size ; s#netns_frags * net ; } 
s#inet_frags struct inet_frags { s#inet_frag_bucket hash [ 1024 ] ; t#rwlock_t lock __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; int secret_interval ; s#timer_list secret_timer ; t#u32 rnd ; int qsize ; unsigned int ( * hashfn ) ( s#inet_frag_queue * ) ; t#bool ( * match ) ( s#inet_frag_queue * , void * ) ; void ( * constructor ) ( s#inet_frag_queue * , void * ) ; void ( * destructor ) ( s#inet_frag_queue * ) ; void ( * skb_free ) ( s#sk_buff * ) ; void ( * frag_expire ) ( unsigned long ) ; } 
inet_frags_init void inet_frags_init ( s#inet_frags * ) 
inet_frags_init_net void inet_frags_init_net ( s#netns_frags * ) 
inet_frags_fini void inet_frags_fini ( s#inet_frags * ) 
inet_frags_exit_net void inet_frags_exit_net ( s#netns_frags * , s#inet_frags * ) 
inet_frag_kill void inet_frag_kill ( s#inet_frag_queue * , s#inet_frags * ) 
inet_frag_destroy void inet_frag_destroy ( s#inet_frag_queue * , s#inet_frags * , int * ) 
inet_frag_evictor int inet_frag_evictor ( s#netns_frags * , s#inet_frags * , t#bool ) 
inet_frag_find s#inet_frag_queue * inet_frag_find ( s#netns_frags * , s#inet_frags * , void * , unsigned int ) 
inet_frag_maybe_warn_overflow void inet_frag_maybe_warn_overflow ( s#inet_frag_queue * , const char * ) 

/* net/ipv4/inet_hashtables.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
inet_put_port extern void inet_put_port ( s#sock * ) 
__inet_inherit_port extern int __inet_inherit_port ( s#sock * , s#sock * ) 
__inet_lookup_listener extern s#sock * __inet_lookup_listener ( s#net * , s#inet_hashinfo * , const t#__be32 , const t#__be16 , const t#__be32 , const unsigned short , const int ) 
__inet_lookup_established extern s#sock * __inet_lookup_established ( s#net * , s#inet_hashinfo * , const t#__be32 , const t#__be16 , const t#__be32 , const t#u16 , const int ) 
s#inet_timewait_sock struct inet_timewait_sock { s#sock_common __tw_common ; int tw_timeout ; volatile unsigned char tw_substate ; unsigned char tw_rcv_wscale ; t#__be16 tw_sport ; ; unsigned int tw_ipv6only : 1 , tw_transparent : 1 , tw_pad : 6 , tw_tos : 8 , tw_ipv6_offset : 16 ; ; unsigned long tw_ttd ; s#inet_bind_bucket * tw_tb ; s#hlist_node tw_death_node ; } 
__inet_hash_nolisten extern int __inet_hash_nolisten ( s#sock * , s#inet_timewait_sock * ) 
inet_hash extern void inet_hash ( s#sock * ) 
inet_unhash extern void inet_unhash ( s#sock * ) 
s#inet_timewait_death_row struct inet_timewait_death_row { int twcal_hand ; unsigned long twcal_jiffie ; s#timer_list twcal_timer ; s#hlist_head twcal_row [ ( 1 << 5 ) ] ; t#spinlock_t death_lock ; int tw_count ; int period ; t#u32 thread_slots ; s#work_struct twkill_work ; s#timer_list tw_timer ; int slot ; s#hlist_head cells [ 8 ] ; s#inet_hashinfo * hashinfo ; int sysctl_tw_recycle ; int sysctl_max_tw_buckets ; } 
inet_hash_connect extern int inet_hash_connect ( s#inet_timewait_death_row * , s#sock * ) 
inet_hashinfo_init void inet_hashinfo_init ( s#inet_hashinfo * ) 

/* net/ipv4/inet_lro.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##dn_route
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s#net_lro_stats struct net_lro_stats { unsigned long aggregated ; unsigned long flushed ; unsigned long no_desc ; } 
s#skb_frag_struct struct skb_frag_struct { struct { s#page * p ; } page ; t#__u32 page_offset ; t#__u32 size ; } 
s#net_lro_desc struct net_lro_desc { s#sk_buff * parent ; s#sk_buff * last_skb ; s#skb_frag_struct * next_frag ; s#iphdr * iph ; s#tcphdr * tcph ; t#__wsum data_csum ; t#__be32 tcp_rcv_tsecr ; t#__be32 tcp_rcv_tsval ; t#__be32 tcp_ack ; t#u32 tcp_next_seq ; t#u32 skb_tot_frags_len ; t#u16 ip_tot_len ; t#u16 tcp_saw_tstamp ; t#__be16 tcp_window ; int pkt_aggr_cnt ; int vlan_packet ; int mss ; int active ; } 
s#net_lro_mgr struct net_lro_mgr { s#net_device * dev ; s#net_lro_stats stats ; unsigned long features ; t#u32 ip_summed ; t#u32 ip_summed_aggr ; int max_desc ; int max_aggr ; int frag_align_pad ; s#net_lro_desc * lro_arr ; int ( * get_skb_header ) ( s#sk_buff * , void * * , void * * , t#u64 * , void * ) ; int ( * get_frag_header ) ( s#skb_frag_struct * , void * * , void * * , void * * , t#u64 * , void * ) ; } 
lro_receive_skb void lro_receive_skb ( s#net_lro_mgr * , s#sk_buff * , void * ) 
lro_receive_frags void lro_receive_frags ( s#net_lro_mgr * , s#skb_frag_struct * , int , int , void * , t#__wsum ) 
lro_flush_all void lro_flush_all ( s#net_lro_mgr * ) 
lro_flush_pkt void lro_flush_pkt ( s#net_lro_mgr * , s#iphdr * , s#tcphdr * ) 

/* net/ipv4/inet_timewait_sock.o */
s##iw_handler_def
s##iw_public_data
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##prot_inuse
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kioctx
s##eventfd_ctx
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##xfrm_policy
s##udp_table
s##raw_hashinfo
inet_twsk_put extern void inet_twsk_put ( s#inet_timewait_sock * ) 
__inet_twsk_hashdance extern void __inet_twsk_hashdance ( s#inet_timewait_sock * , s#sock * , s#inet_hashinfo * ) 
inet_twsk_alloc extern s#inet_timewait_sock * inet_twsk_alloc ( const s#sock * , const int ) 
inet_twdr_hangman extern void inet_twdr_hangman ( unsigned long ) 
inet_twdr_twkill_work extern void inet_twdr_twkill_work ( s#work_struct * ) 
inet_twsk_deschedule extern void inet_twsk_deschedule ( s#inet_timewait_sock * , s#inet_timewait_death_row * ) 
inet_twsk_schedule extern void inet_twsk_schedule ( s#inet_timewait_sock * , s#inet_timewait_death_row * , const int , const int ) 
inet_twdr_twcal_tick extern void inet_twdr_twcal_tick ( unsigned long ) 
inet_twsk_purge extern void inet_twsk_purge ( s#inet_hashinfo * , s#inet_timewait_death_row * , int ) 

/* net/ipv4/inetpeer.o */
inet_peer_base_init extern void inet_peer_base_init ( s#inet_peer_base * ) 
inet_getpeer s#inet_peer * inet_getpeer ( s#inet_peer_base * , const s#inetpeer_addr * , int ) 
inet_putpeer extern void inet_putpeer ( s#inet_peer * ) 
inet_peer_xrlim_allow extern t#bool inet_peer_xrlim_allow ( s#inet_peer * , int ) 
inetpeer_invalidate_tree extern void inetpeer_invalidate_tree ( s#inet_peer_base * ) 

/* net/ipv4/ip_fragment.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
ip_defrag int ip_defrag ( s#sk_buff * , t#u32 ) 
ip_check_defrag s#sk_buff * ip_check_defrag ( s#sk_buff * , t#u32 ) 

/* net/ipv4/ip_input.o */
sysctl_ip_early_demux extern int sysctl_ip_early_demux 

/* net/ipv4/ip_options.o */
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##dn_route
s##prot_inuse
s##ipv4_devconf
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
ip_options_compile extern int ip_options_compile ( s#net * , s#ip_options * , s#sk_buff * ) 
ip_options_rcv_srr extern int ip_options_rcv_srr ( s#sk_buff * ) 

/* net/ipv4/ip_output.o */
sysctl_ip_default_ttl extern int sysctl_ip_default_ttl 
ip_send_check extern void ip_send_check ( s#iphdr * ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
ip_local_out extern int ip_local_out ( s#sk_buff * ) 
ip_build_and_send_pkt extern int ip_build_and_send_pkt ( s#sk_buff * , s#sock * , t#__be32 , t#__be32 , s#ip_options_rcu * ) 
ip_queue_xmit extern int ip_queue_xmit ( s#sk_buff * , s#flowi * ) 
ip_fragment extern int ip_fragment ( s#sk_buff * , int ( * ) ( s#sk_buff * ) ) 
ip_generic_getfrag extern int ip_generic_getfrag ( void * , char * , int , int , int , s#sk_buff * ) 

/* net/ipv4/ip_sockglue.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
ip_cmsg_recv extern void ip_cmsg_recv ( s#msghdr * , s#sk_buff * ) 
ip_setsockopt extern int ip_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
compat_ip_setsockopt extern int compat_ip_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
ip_getsockopt extern int ip_getsockopt ( s#sock * , int , int , char * , int * ) 
compat_ip_getsockopt extern int compat_ip_getsockopt ( s#sock * , int , int , char * , int * ) 

/* net/ipv4/ip_tunnel.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##tvec_base
s##workqueue_struct
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
ip_tunnel_get_stats64 s#rtnl_link_stats64 * ip_tunnel_get_stats64 ( s#net_device * , s#rtnl_link_stats64 * ) 
s#ip_tunnel_parm struct ip_tunnel_parm { char name [ 16 ] ; int link ; t#__be16 i_flags ; t#__be16 o_flags ; t#__be32 i_key ; t#__be32 o_key ; s#iphdr iph ; } 
s#ip_tunnel_prl_entry struct ip_tunnel_prl_entry { s#ip_tunnel_prl_entry * next ; t#__be32 addr ; t#u16 flags ; s#callback_head callback_head ; } 
s#gro_cell struct gro_cell { s#sk_buff_head napi_skbs ; s#napi_struct napi ; } 
s#gro_cells struct gro_cells { unsigned int gro_cells_mask ; s#gro_cell * cells ; } 
s#ip_tunnel struct ip_tunnel { s#ip_tunnel * next ; s#hlist_node hash_node ; s#net_device * dev ; s#net * net ; int err_count ; unsigned long err_time ; t#__u32 i_seqno ; t#__u32 o_seqno ; int hlen ; int mlink ; s#ip_tunnel_parm parms ; s#ip_tunnel_prl_entry * prl ; unsigned int prl_count ; int ip_tnl_net_id ; s#gro_cells gro_cells ; } 
s#ip_tunnel_net struct ip_tunnel_net { s#net_device * fb_tunnel_dev ; s#hlist_head tunnels [ ( 1 << 7 ) ] ; } 
ip_tunnel_lookup s#ip_tunnel * ip_tunnel_lookup ( s#ip_tunnel_net * , int , t#__be16 , t#__be32 , t#__be32 , t#__be32 ) 
ip_tunnel_rcv int ip_tunnel_rcv ( s#ip_tunnel * , s#sk_buff * , const s#tnl_ptk_info * , t#bool ) 
ip_tunnel_xmit void ip_tunnel_xmit ( s#sk_buff * , s#net_device * , const s#iphdr * , const t#u8 ) 
ip_tunnel_ioctl int ip_tunnel_ioctl ( s#net_device * , s#ip_tunnel_parm * , int ) 
ip_tunnel_change_mtu int ip_tunnel_change_mtu ( s#net_device * , int ) 
ip_tunnel_dellink void ip_tunnel_dellink ( s#net_device * , s#list_head * ) 
ip_tunnel_init_net int ip_tunnel_init_net ( s#net * , int , s#rtnl_link_ops * , char * ) 
ip_tunnel_delete_net void ip_tunnel_delete_net ( s#ip_tunnel_net * , s#rtnl_link_ops * ) 
ip_tunnel_newlink int ip_tunnel_newlink ( s#net_device * , s#nlattr * [ ] , s#ip_tunnel_parm * ) 
ip_tunnel_changelink int ip_tunnel_changelink ( s#net_device * , s#nlattr * [ ] , s#ip_tunnel_parm * ) 
ip_tunnel_init int ip_tunnel_init ( s#net_device * ) 
ip_tunnel_uninit void ip_tunnel_uninit ( s#net_device * ) 
ip_tunnel_setup void ip_tunnel_setup ( s#net_device * , int ) 

/* net/ipv4/ip_tunnel_core.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##tvec_base
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##module
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##dn_route
iptunnel_xmit int iptunnel_xmit ( s#rtable * , s#sk_buff * , t#__be32 , t#__be32 , t#__u8 , t#__u8 , t#__u8 , t#__be16 , t#bool ) 
iptunnel_pull_header int iptunnel_pull_header ( s#sk_buff * , int , t#__be16 ) 
iptunnel_handle_offloads s#sk_buff * iptunnel_handle_offloads ( s#sk_buff * , t#bool , int ) 

/* net/ipv4/netfilter.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
ip_route_me_harder extern int ip_route_me_harder ( s#sk_buff * , unsigned ) 
nf_ip_checksum extern t#__sum16 nf_ip_checksum ( s#sk_buff * , unsigned int , unsigned int , t#u_int8_t ) 

/* net/ipv4/netfilter/ip_tables.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
t#u_int16_t typedef t#__u16 u_int16_t 
s#nf_loginfo struct nf_loginfo { t#u_int8_t type ; union { struct { t#u_int32_t copy_len ; t#u_int16_t group ; t#u_int16_t qthreshold ; } ulog ; struct { t#u_int8_t level ; t#u_int8_t logflags ; } log ; } u ; } 
t#nf_logfn typedef void nf_logfn ( s#net * , t#u_int8_t , unsigned int , const s#sk_buff * , const s#net_device * , const s#net_device * , const s#nf_loginfo * , const char * ) 
s#nf_logger struct nf_logger { s#module * me ; t#nf_logfn * logfn ; char * name ; s#list_head list [ E#NFPROTO_NUMPROTO ] ; } 
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
ipt_alloc_initial_table extern void * ipt_alloc_initial_table ( const s#xt_table * ) 
s#xt_counters struct xt_counters { t#__u64 pcnt , bcnt ; } 
s#ipt_ip struct ipt_ip { s#in_addr src , dst ; s#in_addr smsk , dmsk ; char iniface [ 16 ] , outiface [ 16 ] ; unsigned char iniface_mask [ 16 ] , outiface_mask [ 16 ] ; t#__u16 proto ; t#__u8 flags ; t#__u8 invflags ; } 
s#ipt_entry struct ipt_entry { s#ipt_ip ip ; unsigned int nfcache ; t#__u16 target_offset ; t#__u16 next_offset ; unsigned int comefrom ; s#xt_counters counters ; unsigned char elems [ 0 ] ; } 
s#ipt_replace struct ipt_replace { char name [ 32 ] ; unsigned int valid_hooks ; unsigned int num_entries ; unsigned int size ; unsigned int hook_entry [ E#NF_INET_NUMHOOKS ] ; unsigned int underflow [ E#NF_INET_NUMHOOKS ] ; unsigned int num_counters ; s#xt_counters * counters ; s#ipt_entry entries [ 0 ] ; } 
ipt_register_table extern s#xt_table * ipt_register_table ( s#net * , const s#xt_table * , const s#ipt_replace * ) 
ipt_unregister_table extern void ipt_unregister_table ( s#net * , s#xt_table * ) 
ipt_do_table extern unsigned int ipt_do_table ( s#sk_buff * , unsigned int , const s#net_device * , const s#net_device * , s#xt_table * ) 

/* net/ipv4/netfilter/nf_conntrack_l3proto_ipv4.o */
need_ipv4_conntrack extern void need_ipv4_conntrack ( void ) 

/* net/ipv4/netfilter/nf_defrag_ipv4.o */
nf_defrag_ipv4_enable extern void nf_defrag_ipv4_enable ( void ) 

/* net/ipv4/netfilter/nf_nat_l3proto_ipv4.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s#ip_conntrack_stat struct ip_conntrack_stat { unsigned int searched ; unsigned int found ; unsigned int new ; unsigned int invalid ; unsigned int ignore ; unsigned int delete ; unsigned int delete_list ; unsigned int insert ; unsigned int insert_failed ; unsigned int drop ; unsigned int early_drop ; unsigned int error ; unsigned int expect_new ; unsigned int expect_create ; unsigned int expect_delete ; unsigned int search_restart ; } 
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
u#nf_inet_addr union nf_inet_addr { t#__u32 all [ 4 ] ; t#__be32 ip ; t#__be32 ip6 [ 4 ] ; s#in_addr in ; s#in6_addr in6 ; } 
u#nf_conntrack_man_proto union nf_conntrack_man_proto { t#__be16 all ; struct { t#__be16 port ; } tcp ; struct { t#__be16 port ; } udp ; struct { t#__be16 id ; } icmp ; struct { t#__be16 port ; } dccp ; struct { t#__be16 port ; } sctp ; struct { t#__be16 key ; } gre ; } 
s#nf_conntrack_man struct nf_conntrack_man { u#nf_inet_addr u3 ; u#nf_conntrack_man_proto u ; t#u_int16_t l3num ; } 
s#nf_conntrack_tuple struct nf_conntrack_tuple { s#nf_conntrack_man src ; struct { u#nf_inet_addr u3 ; union { t#__be16 all ; struct { t#__be16 port ; } tcp ; struct { t#__be16 port ; } udp ; struct { t#u_int8_t type , code ; } icmp ; struct { t#__be16 port ; } dccp ; struct { t#__be16 port ; } sctp ; struct { t#__be16 key ; } gre ; } u ; t#u_int8_t protonum ; t#u_int8_t dir ; } dst ; } 
s#nf_conntrack_tuple_hash struct nf_conntrack_tuple_hash { s#hlist_nulls_node hnnode ; s#nf_conntrack_tuple tuple ; } 
E#IP_CT_DIR_MAX 2 
E#NF_CT_EXT_NUM 4 
s#nf_ct_ext struct nf_ct_ext { s#callback_head rcu ; t#u16 offset [ E#NF_CT_EXT_NUM ] ; t#u16 len ; char data [ 0 ] ; } 
t#u_int64_t typedef t#__u64 u_int64_t 
s#nf_ct_dccp struct nf_ct_dccp { t#u_int8_t role [ E#IP_CT_DIR_MAX ] ; t#u_int8_t state ; t#u_int8_t last_pkt ; t#u_int8_t last_dir ; t#u_int64_t handshake_seq ; } 
e#sctp_conntrack enum sctp_conntrack { SCTP_CONNTRACK_NONE , SCTP_CONNTRACK_CLOSED , SCTP_CONNTRACK_COOKIE_WAIT , SCTP_CONNTRACK_COOKIE_ECHOED , SCTP_CONNTRACK_ESTABLISHED , SCTP_CONNTRACK_SHUTDOWN_SENT , SCTP_CONNTRACK_SHUTDOWN_RECD , SCTP_CONNTRACK_SHUTDOWN_ACK_SENT , SCTP_CONNTRACK_MAX } 
s#ip_ct_sctp struct ip_ct_sctp { e#sctp_conntrack state ; t#__be32 vtag [ E#IP_CT_DIR_MAX ] ; } 
s#ip_ct_tcp_state struct ip_ct_tcp_state { t#u_int32_t td_end ; t#u_int32_t td_maxend ; t#u_int32_t td_maxwin ; t#u_int32_t td_maxack ; t#u_int8_t td_scale ; t#u_int8_t flags ; } 
s#ip_ct_tcp struct ip_ct_tcp { s#ip_ct_tcp_state seen [ 2 ] ; t#u_int8_t state ; t#u_int8_t last_dir ; t#u_int8_t retrans ; t#u_int8_t last_index ; t#u_int32_t last_seq ; t#u_int32_t last_ack ; t#u_int32_t last_end ; t#u_int16_t last_win ; t#u_int8_t last_wscale ; t#u_int8_t last_flags ; } 
s#nf_ct_gre struct nf_ct_gre { unsigned int stream_timeout ; unsigned int timeout ; } 
u#nf_conntrack_proto union nf_conntrack_proto { s#nf_ct_dccp dccp ; s#ip_ct_sctp sctp ; s#ip_ct_tcp tcp ; s#nf_ct_gre gre ; } 
s#nf_conn struct nf_conn { s#nf_conntrack ct_general ; t#spinlock_t lock ; s#nf_conntrack_tuple_hash tuplehash [ E#IP_CT_DIR_MAX ] ; unsigned long status ; s#nf_conn * master ; s#timer_list timeout ; t#u_int32_t secmark ; s#nf_ct_ext * ext ; s#net * ct_net ; u#nf_conntrack_proto proto ; } 
E#IP_CT_ESTABLISHED 0 
E#IP_CT_IS_REPLY 3 
E#IP_CT_RELATED 1 
E#IP_CT_NEW 2 
e#ip_conntrack_info enum ip_conntrack_info { IP_CT_ESTABLISHED , IP_CT_RELATED , IP_CT_NEW , IP_CT_IS_REPLY , IP_CT_ESTABLISHED_REPLY = E#IP_CT_ESTABLISHED + E#IP_CT_IS_REPLY , IP_CT_RELATED_REPLY = E#IP_CT_RELATED + E#IP_CT_IS_REPLY , IP_CT_NEW_REPLY = E#IP_CT_NEW + E#IP_CT_IS_REPLY , IP_CT_NUMBER = E#IP_CT_IS_REPLY * 2 - 1 } 
nf_nat_icmp_reply_translation extern int nf_nat_icmp_reply_translation ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned int ) 

/* net/ipv4/ping.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##raw_hashinfo
s##xfrm_policy
s#pingv6_ops struct pingv6_ops { int ( * ipv6_recv_error ) ( s#sock * , s#msghdr * , int , int * ) ; int ( * ip6_datagram_recv_ctl ) ( s#sock * , s#msghdr * , s#sk_buff * ) ; int ( * icmpv6_err_convert ) ( t#u8 , t#u8 , int * ) ; void ( * ipv6_icmp_error ) ( s#sock * , s#sk_buff * , int , t#__be16 , t#u32 , t#u8 * ) ; int ( * ipv6_chk_addr ) ( s#net * , const s#in6_addr * , const s#net_device * , int ) ; } 
pingv6_ops extern s#pingv6_ops pingv6_ops 
ping_hash void ping_hash ( s#sock * ) 
ping_get_port int ping_get_port ( s#sock * , unsigned short ) 
ping_unhash void ping_unhash ( s#sock * ) 
ping_init_sock int ping_init_sock ( s#sock * ) 
ping_close void ping_close ( s#sock * , long ) 
ping_bind int ping_bind ( s#sock * , s#sockaddr * , int ) 
ping_err void ping_err ( s#sk_buff * , int , t#u32 ) 
ping_getfrag int ping_getfrag ( void * , char * , int , int , int , s#sk_buff * ) 
ping_common_sendmsg int ping_common_sendmsg ( int , s#msghdr * , t#size_t , void * , t#size_t ) 
ping_recvmsg int ping_recvmsg ( s#kiocb * , s#sock * , s#msghdr * , t#size_t , int , int , int * ) 
ping_queue_rcv_skb int ping_queue_rcv_skb ( s#sock * , s#sk_buff * ) 
ping_rcv void ping_rcv ( s#sk_buff * ) 
ping_prot extern s#proto ping_prot 
ping_seq_start void * ping_seq_start ( s#seq_file * , t#loff_t * , t#sa_family_t ) 
ping_seq_next void * ping_seq_next ( s#seq_file * , void * , t#loff_t * ) 
ping_seq_stop void ping_seq_stop ( s#seq_file * , void * ) 
ping_seq_fops extern const s#file_operations ping_seq_fops 
s#ping_seq_afinfo struct ping_seq_afinfo { char * name ; t#sa_family_t family ; const s#file_operations * seq_fops ; const s#seq_operations seq_ops ; } 
ping_proc_register int ping_proc_register ( s#net * , s#ping_seq_afinfo * ) 
ping_proc_unregister void ping_proc_unregister ( s#net * , s#ping_seq_afinfo * ) 

/* net/ipv4/protocol.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s#net_protocol struct net_protocol { void ( * early_demux ) ( s#sk_buff * ) ; int ( * handler ) ( s#sk_buff * ) ; void ( * err_handler ) ( s#sk_buff * , t#u32 ) ; unsigned int no_policy : 1 , netns_ok : 1 ; } 
inet_add_protocol extern int inet_add_protocol ( const s#net_protocol * , unsigned char ) 
s#net_offload struct net_offload { s#offload_callbacks callbacks ; unsigned int flags ; } 
inet_add_offload extern int inet_add_offload ( const s#net_offload * , unsigned char ) 
inet_del_protocol extern int inet_del_protocol ( const s#net_protocol * , unsigned char ) 
inet_del_offload extern int inet_del_offload ( const s#net_offload * , unsigned char ) 

/* net/ipv4/raw.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##module
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
raw_hash_sk void raw_hash_sk ( s#sock * ) 
raw_unhash_sk void raw_unhash_sk ( s#sock * ) 
raw_seq_start void * raw_seq_start ( s#seq_file * , t#loff_t * ) 
raw_seq_next void * raw_seq_next ( s#seq_file * , void * , t#loff_t * ) 
raw_seq_stop void raw_seq_stop ( s#seq_file * , void * ) 
raw_seq_open int raw_seq_open ( s#inode * , s#file * , s#raw_hashinfo * , const s#seq_operations * ) 

/* net/ipv4/route.o */
ip_tos2prio extern const t#__u8 ip_tos2prio [ 16 ] 
ip_idents_reserve t#u32 ip_idents_reserve ( t#u32 , int ) 
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##tcpm_hash_bucket
s##xt_table
s##tvec_base
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##dn_route
__ip_select_ident extern void __ip_select_ident ( s#iphdr * , s#dst_entry * , int ) 
__ip_select_ident_new void __ip_select_ident_new ( s#iphdr * , int ) 
ipv4_update_pmtu extern void ipv4_update_pmtu ( s#sk_buff * , s#net * , t#u32 , int , t#u32 , t#u8 , int ) 
ipv4_sk_update_pmtu extern void ipv4_sk_update_pmtu ( s#sk_buff * , s#sock * , t#u32 ) 
ipv4_redirect extern void ipv4_redirect ( s#sk_buff * , s#net * , int , t#u32 , t#u8 , int ) 
ipv4_sk_redirect extern void ipv4_sk_redirect ( s#sk_buff * , s#sock * ) 
ip_route_input_noref extern int ip_route_input_noref ( s#sk_buff * , t#__be32 , t#__be32 , t#u8 , s#net_device * ) 
__ip_route_output_key extern s#rtable * __ip_route_output_key ( s#net * , s#flowi4 * ) 
ip_route_output_flow extern s#rtable * ip_route_output_flow ( s#net * , s#flowi4 * , s#sock * ) 

/* net/ipv4/syncookies.o */
syncookie_secret extern t#__u32 syncookie_secret [ 2 ] [ 16 - 4 + 5 ] 
__cookie_v4_init_sequence extern t#u32 __cookie_v4_init_sequence ( const s#iphdr * , const s#tcphdr * , t#u16 * ) 
__cookie_v4_check extern int __cookie_v4_check ( const s#iphdr * , const s#tcphdr * , t#u32 ) 
s#tcp_options_received struct tcp_options_received { long ts_recent_stamp ; t#u32 ts_recent ; t#u32 rcv_tsval ; t#u32 rcv_tsecr ; t#u16 saw_tstamp : 1 , tstamp_ok : 1 , dsack : 1 , wscale_ok : 1 , sack_ok : 4 , snd_wscale : 4 , rcv_wscale : 4 ; t#u8 num_sacks ; t#u16 user_mss ; t#u16 mss_clamp ; } 
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##module
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##dn_route
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
cookie_check_timestamp extern t#bool cookie_check_timestamp ( s#tcp_options_received * , s#net * , t#bool * ) 

/* net/ipv4/tcp.o */
tcp_orphan_count extern s#percpu_counter tcp_orphan_count 
sysctl_tcp_rmem extern int sysctl_tcp_rmem [ 3 ] 
sysctl_tcp_wmem extern int sysctl_tcp_wmem [ 3 ] 
tcp_memory_allocated extern t#atomic_long_t tcp_memory_allocated 
tcp_sockets_allocated extern s#percpu_counter tcp_sockets_allocated 
tcp_memory_pressure extern int tcp_memory_pressure 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
tcp_enter_memory_pressure extern void tcp_enter_memory_pressure ( s#sock * ) 
tcp_init_sock extern void tcp_init_sock ( s#sock * ) 
tcp_poll extern unsigned int tcp_poll ( s#file * , s#socket * , s#poll_table_struct * ) 
tcp_ioctl extern int tcp_ioctl ( s#sock * , int , unsigned long ) 
tcp_splice_read extern t#ssize_t tcp_splice_read ( s#socket * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) 
tcp_sendpage extern int tcp_sendpage ( s#sock * , s#page * , int , t#size_t , int ) 
tcp_sendmsg extern int tcp_sendmsg ( s#kiocb * , s#sock * , s#msghdr * , t#size_t ) 
t#sk_read_actor_t typedef int ( * sk_read_actor_t ) ( t#read_descriptor_t * , s#sk_buff * , unsigned int , t#size_t ) 
tcp_read_sock extern int tcp_read_sock ( s#sock * , t#read_descriptor_t * , t#sk_read_actor_t ) 
tcp_recvmsg extern int tcp_recvmsg ( s#kiocb * , s#sock * , s#msghdr * , t#size_t , int , int , int * ) 
tcp_set_state extern void tcp_set_state ( s#sock * , int ) 
tcp_shutdown extern void tcp_shutdown ( s#sock * , int ) 
tcp_close extern void tcp_close ( s#sock * , long ) 
tcp_disconnect extern int tcp_disconnect ( s#sock * , int ) 
tcp_setsockopt extern int tcp_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
compat_tcp_setsockopt extern int compat_tcp_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
s#tcp_info struct tcp_info { t#__u8 tcpi_state ; t#__u8 tcpi_ca_state ; t#__u8 tcpi_retransmits ; t#__u8 tcpi_probes ; t#__u8 tcpi_backoff ; t#__u8 tcpi_options ; t#__u8 tcpi_snd_wscale : 4 , tcpi_rcv_wscale : 4 ; t#__u32 tcpi_rto ; t#__u32 tcpi_ato ; t#__u32 tcpi_snd_mss ; t#__u32 tcpi_rcv_mss ; t#__u32 tcpi_unacked ; t#__u32 tcpi_sacked ; t#__u32 tcpi_lost ; t#__u32 tcpi_retrans ; t#__u32 tcpi_fackets ; t#__u32 tcpi_last_data_sent ; t#__u32 tcpi_last_ack_sent ; t#__u32 tcpi_last_data_recv ; t#__u32 tcpi_last_ack_recv ; t#__u32 tcpi_pmtu ; t#__u32 tcpi_rcv_ssthresh ; t#__u32 tcpi_rtt ; t#__u32 tcpi_rttvar ; t#__u32 tcpi_snd_ssthresh ; t#__u32 tcpi_snd_cwnd ; t#__u32 tcpi_advmss ; t#__u32 tcpi_reordering ; t#__u32 tcpi_rcv_rtt ; t#__u32 tcpi_rcv_space ; t#__u32 tcpi_total_retrans ; } 
tcp_get_info extern void tcp_get_info ( const s#sock * , s#tcp_info * ) 
tcp_getsockopt extern int tcp_getsockopt ( s#sock * , int , int , char * , int * ) 
compat_tcp_getsockopt extern int compat_tcp_getsockopt ( s#sock * , int , int , char * , int * ) 
tcp_done extern void tcp_done ( s#sock * ) 

/* net/ipv4/tcp_cong.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
tcp_register_congestion_control extern int tcp_register_congestion_control ( s#tcp_congestion_ops * ) 
tcp_unregister_congestion_control extern void tcp_unregister_congestion_control ( s#tcp_congestion_ops * ) 
tcp_is_cwnd_limited extern t#bool tcp_is_cwnd_limited ( const s#sock * , t#u32 ) 
s##ip_mc_socklist
s#tcp_sack_block struct tcp_sack_block { t#u32 start_seq ; t#u32 end_seq ; } 
s#tcp_fastopen_cookie struct tcp_fastopen_cookie { t#s8 len ; t#u8 val [ 16 ] ; } 
s#tcp_fastopen_request struct tcp_fastopen_request { s#tcp_fastopen_cookie cookie ; s#msghdr * data ; t#size_t size ; int copied ; } 
s#tcp_sock struct tcp_sock { s#inet_connection_sock inet_conn ; t#u16 tcp_header_len ; t#u16 xmit_size_goal_segs ; t#__be32 pred_flags ; t#u32 rcv_nxt ; t#u32 copied_seq ; t#u32 rcv_wup ; t#u32 snd_nxt ; t#u32 snd_una ; t#u32 snd_sml ; t#u32 rcv_tstamp ; t#u32 lsndtime ; t#u32 tsoffset ; s#list_head tsq_node ; unsigned long tsq_flags ; struct { s#sk_buff_head prequeue ; s#task_struct * task ; s#iovec * iov ; int memory ; int len ; } ucopy ; t#u32 snd_wl1 ; t#u32 snd_wnd ; t#u32 max_window ; t#u32 mss_cache ; t#u32 window_clamp ; t#u32 rcv_ssthresh ; t#u16 advmss ; t#u8 unused ; t#u8 nonagle : 4 , thin_lto : 1 , thin_dupack : 1 , repair : 1 , frto : 1 ; t#u8 repair_queue ; t#u8 do_early_retrans : 1 , syn_data : 1 , syn_fastopen : 1 , syn_data_acked : 1 ; t#u32 tlp_high_seq ; t#u32 srtt ; t#u32 mdev ; t#u32 mdev_max ; t#u32 rttvar ; t#u32 rtt_seq ; t#u32 packets_out ; t#u32 retrans_out ; t#u16 urg_data ; t#u8 ecn_flags ; t#u8 reordering ; t#u32 snd_up ; t#u8 keepalive_probes ; s#tcp_options_received rx_opt ; t#u32 snd_ssthresh ; t#u32 snd_cwnd ; t#u32 snd_cwnd_cnt ; t#u32 snd_cwnd_clamp ; t#u32 snd_cwnd_used ; t#u32 snd_cwnd_stamp ; t#u32 prior_cwnd ; t#u32 prr_delivered ; t#u32 prr_out ; t#u32 rcv_wnd ; t#u32 write_seq ; t#u32 notsent_lowat ; t#u32 pushed_seq ; t#u32 lost_out ; t#u32 sacked_out ; t#u32 fackets_out ; t#u32 tso_deferred ; s#sk_buff * lost_skb_hint ; s#sk_buff * retransmit_skb_hint ; s#sk_buff_head out_of_order_queue ; s#tcp_sack_block duplicate_sack [ 1 ] ; s#tcp_sack_block selective_acks [ 4 ] ; s#tcp_sack_block recv_sack_cache [ 4 ] ; s#sk_buff * highest_sack ; int lost_cnt_hint ; t#u32 retransmit_high ; t#u32 lost_retrans_low ; t#u32 prior_ssthresh ; t#u32 high_seq ; t#u32 retrans_stamp ; t#u32 undo_marker ; int undo_retrans ; t#u32 total_retrans ; t#u32 urg_seq ; unsigned int keepalive_time ; unsigned int keepalive_intvl ; int linger2 ; struct { t#u32 rtt ; t#u32 seq ; t#u32 time ; } rcv_rtt_est ; struct { int space ; t#u32 seq ; t#u32 time ; } rcvq_space ; struct { t#u32 probe_seq_start ; t#u32 probe_seq_end ; } mtu_probe ; t#u32 mtu_info ; s#tcp_fastopen_request * fastopen_req ; s#request_sock * fastopen_rsk ; } 
tcp_slow_start extern void tcp_slow_start ( s#tcp_sock * ) 
tcp_cong_avoid_ai extern void tcp_cong_avoid_ai ( s#tcp_sock * , t#u32 ) 
tcp_reno_cong_avoid extern void tcp_reno_cong_avoid ( s#sock * , t#u32 , t#u32 ) 
tcp_reno_ssthresh extern t#u32 tcp_reno_ssthresh ( s#sock * ) 
tcp_reno_min_cwnd extern t#u32 tcp_reno_min_cwnd ( const s#sock * ) 
tcp_init_congestion_ops extern s#tcp_congestion_ops tcp_init_congestion_ops 

/* net/ipv4/tcp_input.o */
sysctl_tcp_reordering extern int sysctl_tcp_reordering 
sysctl_tcp_adv_win_scale extern int sysctl_tcp_adv_win_scale 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
tcp_initialize_rcv_mss extern void tcp_initialize_rcv_mss ( s#sock * ) 
tcp_simple_retransmit extern void tcp_simple_retransmit ( s#sock * ) 
tcp_parse_options extern void tcp_parse_options ( const s#sk_buff * , s#tcp_options_received * , int , s#tcp_fastopen_cookie * ) 
tcp_rcv_established extern void tcp_rcv_established ( s#sock * , s#sk_buff * , const s#tcphdr * , unsigned int ) 
tcp_rcv_state_process extern int tcp_rcv_state_process ( s#sock * , s#sk_buff * , const s#tcphdr * , unsigned int ) 

/* net/ipv4/tcp_ipv4.o */
sysctl_tcp_low_latency extern int sysctl_tcp_low_latency 
s##kmem_cache_node
s##array_cache
tcp_hashinfo extern s#inet_hashinfo tcp_hashinfo 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
tcp_twsk_unique extern int tcp_twsk_unique ( s#sock * , s#sock * , void * ) 
tcp_v4_connect extern int tcp_v4_connect ( s#sock * , s#sockaddr * , int ) 
tcp_v4_send_check extern void tcp_v4_send_check ( s#sock * , s#sk_buff * ) 
tcp_syn_flood_action extern t#bool tcp_syn_flood_action ( s#sock * , const s#sk_buff * , const char * ) 
tcp_v4_conn_request extern int tcp_v4_conn_request ( s#sock * , s#sk_buff * ) 
tcp_v4_syn_recv_sock extern s#sock * tcp_v4_syn_recv_sock ( s#sock * , s#sk_buff * , s#request_sock * , s#dst_entry * ) 
tcp_v4_do_rcv extern int tcp_v4_do_rcv ( s#sock * , s#sk_buff * ) 
tcp_prequeue extern t#bool tcp_prequeue ( s#sock * , s#sk_buff * ) 
inet_sk_rx_dst_set void inet_sk_rx_dst_set ( s#sock * , const s#sk_buff * ) 
ipv4_specific extern const s#inet_connection_sock_af_ops ipv4_specific 
tcp_v4_destroy_sock extern void tcp_v4_destroy_sock ( s#sock * ) 
tcp_seq_open int tcp_seq_open ( s#inode * , s#file * ) 
s#tcp_seq_afinfo struct tcp_seq_afinfo { char * name ; t#sa_family_t family ; const s#file_operations * seq_fops ; s#seq_operations seq_ops ; } 
tcp_proc_register extern int tcp_proc_register ( s#net * , s#tcp_seq_afinfo * ) 
tcp_proc_unregister extern void tcp_proc_unregister ( s#net * , s#tcp_seq_afinfo * ) 
tcp_prot extern s#proto tcp_prot 

/* net/ipv4/tcp_metrics.o */
s##kmem_cache_node
s##array_cache
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
tcp_peer_is_proven extern t#bool tcp_peer_is_proven ( s#request_sock * , s#dst_entry * , t#bool ) 
tcp_fetch_timewait_stamp extern void tcp_fetch_timewait_stamp ( s#sock * , s#dst_entry * ) 

/* net/ipv4/tcp_minisocks.o */
sysctl_tcp_syncookies extern int sysctl_tcp_syncookies 
s##tvec_base
s##kmem_cache_node
s##array_cache
tcp_death_row extern s#inet_timewait_death_row tcp_death_row 
e#tcp_tw_status enum tcp_tw_status { TCP_TW_SUCCESS = 0 , TCP_TW_RST = 1 , TCP_TW_ACK = 2 , TCP_TW_SYN = 3 } 
s##iw_handler_def
s##iw_public_data
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kioctx
s##eventfd_ctx
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##bsd_acct_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##udp_table
s##raw_hashinfo
tcp_timewait_state_process extern e#tcp_tw_status tcp_timewait_state_process ( s#inet_timewait_sock * , s#sk_buff * , const s#tcphdr * ) 
tcp_twsk_destructor extern void tcp_twsk_destructor ( s#sock * ) 
tcp_create_openreq_child extern s#sock * tcp_create_openreq_child ( s#sock * , s#request_sock * , s#sk_buff * ) 
tcp_check_req extern s#sock * tcp_check_req ( s#sock * , s#sk_buff * , s#request_sock * , s#request_sock * * , t#bool ) 
tcp_child_process extern int tcp_child_process ( s#sock * , s#sock * , s#sk_buff * ) 

/* net/ipv4/tcp_offload.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
tcp_tso_segment extern s#sk_buff * tcp_tso_segment ( s#sk_buff * , t#netdev_features_t ) 
tcp_gro_receive extern s#sk_buff * * tcp_gro_receive ( s#sk_buff * * , s#sk_buff * ) 
tcp_gro_complete extern int tcp_gro_complete ( s#sk_buff * ) 

/* net/ipv4/tcp_output.o */
sysctl_tcp_notsent_lowat extern unsigned int sysctl_tcp_notsent_lowat 
tcp_select_initial_window extern void tcp_select_initial_window ( int , t#__u32 , t#__u32 * , t#__u32 * , int , t#__u8 * , t#__u32 ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
tcp_release_cb extern void tcp_release_cb ( s#sock * ) 
tcp_mtup_init extern void tcp_mtup_init ( s#sock * ) 
tcp_sync_mss extern unsigned int tcp_sync_mss ( s#sock * , t#u32 ) 
tcp_make_synack extern s#sk_buff * tcp_make_synack ( s#sock * , s#dst_entry * , s#request_sock * , s#tcp_fastopen_cookie * ) 
tcp_connect extern int tcp_connect ( s#sock * ) 

/* net/ipv4/tcp_timer.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
tcp_syn_ack_timeout extern void tcp_syn_ack_timeout ( s#sock * , s#request_sock * ) 
tcp_init_xmit_timers extern void tcp_init_xmit_timers ( s#sock * ) 

/* net/ipv4/tcp_vegas.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
tcp_vegas_init extern void tcp_vegas_init ( s#sock * ) 
tcp_vegas_pkts_acked extern void tcp_vegas_pkts_acked ( s#sock * , t#u32 , t#s32 ) 
tcp_vegas_state extern void tcp_vegas_state ( s#sock * , t#u8 ) 
tcp_vegas_cwnd_event extern void tcp_vegas_cwnd_event ( s#sock * , e#tcp_ca_event ) 
tcp_vegas_get_info extern void tcp_vegas_get_info ( s#sock * , t#u32 , s#sk_buff * ) 

/* net/ipv4/tunnel4.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s#xfrm_tunnel struct xfrm_tunnel { int ( * handler ) ( s#sk_buff * ) ; int ( * err_handler ) ( s#sk_buff * , t#u32 ) ; s#xfrm_tunnel * next ; int priority ; } 
xfrm4_tunnel_register extern int xfrm4_tunnel_register ( s#xfrm_tunnel * , unsigned short ) 
xfrm4_tunnel_deregister extern int xfrm4_tunnel_deregister ( s#xfrm_tunnel * , unsigned short ) 

/* net/ipv4/udp.o */
udp_table extern s#udp_table udp_table 
sysctl_udp_mem extern long sysctl_udp_mem [ 3 ] 
sysctl_udp_rmem_min extern int sysctl_udp_rmem_min 
sysctl_udp_wmem_min extern int sysctl_udp_wmem_min 
udp_memory_allocated extern t#atomic_long_t udp_memory_allocated 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##user_namespace
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##raw_hashinfo
udp_lib_get_port extern int udp_lib_get_port ( s#sock * , unsigned short , int ( * ) ( const s#sock * , const s#sock * ) , unsigned int ) 
__udp4_lib_lookup extern s#sock * __udp4_lib_lookup ( s#net * , t#__be32 , t#__be16 , t#__be32 , t#__be16 , int , s#udp_table * ) 
udp4_lib_lookup extern s#sock * udp4_lib_lookup ( s#net * , t#__be32 , t#__be16 , t#__be32 , t#__be16 , int ) 
udp_flush_pending_frames extern void udp_flush_pending_frames ( s#sock * ) 
udp4_hwcsum extern void udp4_hwcsum ( s#sk_buff * , t#__be32 , t#__be32 ) 
udp_push_pending_frames extern int udp_push_pending_frames ( s#sock * ) 
udp_sendmsg extern int udp_sendmsg ( s#kiocb * , s#sock * , s#msghdr * , t#size_t ) 
udp_ioctl extern int udp_ioctl ( s#sock * , int , unsigned long ) 
udp_disconnect extern int udp_disconnect ( s#sock * , int ) 
udp_lib_unhash extern void udp_lib_unhash ( s#sock * ) 
udp_lib_rehash extern void udp_lib_rehash ( s#sock * , t#u16 ) 
udp_encap_enable extern void udp_encap_enable ( void ) 
udp_lib_setsockopt extern int udp_lib_setsockopt ( s#sock * , int , int , char * , unsigned int , int ( * ) ( s#sock * ) ) 
udp_lib_getsockopt extern int udp_lib_getsockopt ( s#sock * , int , int , char * , int * ) 
udp_poll extern unsigned int udp_poll ( s#file * , s#socket * , t#poll_table * ) 
udp_prot extern s#proto udp_prot 
udp_seq_open int udp_seq_open ( s#inode * , s#file * ) 
s#udp_seq_afinfo struct udp_seq_afinfo { char * name ; t#sa_family_t family ; s#udp_table * udp_table ; const s#file_operations * seq_fops ; s#seq_operations seq_ops ; } 
udp_proc_register extern int udp_proc_register ( s#net * , s#udp_seq_afinfo * ) 
udp_proc_unregister extern void udp_proc_unregister ( s#net * , s#udp_seq_afinfo * ) 

/* net/ipv4/udplite.o */
udplite_table extern s#udp_table udplite_table 
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kioctx
s##eventfd_ctx
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##inet_hashinfo
s##raw_hashinfo
udplite_prot extern s#proto udplite_prot 

/* net/ipv4/xfrm4_input.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
xfrm4_rcv_encap extern int xfrm4_rcv_encap ( s#sk_buff * , int , t#__be32 , int ) 
xfrm4_rcv extern int xfrm4_rcv ( s#sk_buff * ) 

/* net/ipv4/xfrm4_mode_tunnel.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
xfrm4_mode_tunnel_input_register extern int xfrm4_mode_tunnel_input_register ( s#xfrm_tunnel * ) 
xfrm4_mode_tunnel_input_deregister extern int xfrm4_mode_tunnel_input_deregister ( s#xfrm_tunnel * ) 

/* net/ipv4/xfrm4_output.o */
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##kmem_cache_node
s##array_cache
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##mem_cgroup
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##bsd_acct_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
xfrm4_prepare_output extern int xfrm4_prepare_output ( s#xfrm_state * , s#sk_buff * ) 

/* net/ipv6/addrconf.o */
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##module
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##xfrm_state
s##dn_route
s##wireless_dev
s##tcf_walker
s##cpu_rmap
s##pcpu_lstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
ipv6_dev_get_saddr int ipv6_dev_get_saddr ( s#net * , const s#net_device * , const s#in6_addr * , unsigned int , s#in6_addr * ) 
ipv6_chk_addr int ipv6_chk_addr ( s#net * , const s#in6_addr * , const s#net_device * , int ) 
ipv6_chk_custom_prefix t#bool ipv6_chk_custom_prefix ( const s#in6_addr * , const unsigned int , s#net_device * ) 
ipv6_chk_prefix int ipv6_chk_prefix ( const s#in6_addr * , s#net_device * ) 

/* net/ipv6/addrconf_core.o */
__ipv6_addr_type extern int __ipv6_addr_type ( const s#in6_addr * ) 
register_inet6addr_notifier int register_inet6addr_notifier ( s#notifier_block * ) 
unregister_inet6addr_notifier int unregister_inet6addr_notifier ( s#notifier_block * ) 
inet6addr_notifier_call_chain int inet6addr_notifier_call_chain ( unsigned long , void * ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s#ipv6_stub struct ipv6_stub { int ( * ipv6_sock_mc_join ) ( s#sock * , int , const s#in6_addr * ) ; int ( * ipv6_sock_mc_drop ) ( s#sock * , int , const s#in6_addr * ) ; int ( * ipv6_dst_lookup ) ( s#sock * , s#dst_entry * * , s#flowi6 * ) ; void ( * udpv6_encap_enable ) ( void ) ; void ( * ndisc_send_na ) ( s#net_device * , s#neighbour * , const s#in6_addr * , const s#in6_addr * , t#bool , t#bool , t#bool , t#bool ) ; s#neigh_table * nd_tbl ; } 
ipv6_stub extern const s#ipv6_stub * ipv6_stub 
in6addr_loopback extern const s#in6_addr in6addr_loopback 
in6addr_any extern const s#in6_addr in6addr_any 
in6addr_linklocal_allnodes extern const s#in6_addr in6addr_linklocal_allnodes 
in6addr_linklocal_allrouters extern const s#in6_addr in6addr_linklocal_allrouters 
in6addr_interfacelocal_allnodes extern const s#in6_addr in6addr_interfacelocal_allnodes 
in6addr_interfacelocal_allrouters extern const s#in6_addr in6addr_interfacelocal_allrouters 
in6addr_sitelocal_allrouters extern const s#in6_addr in6addr_sitelocal_allrouters 
in6_dev_finish_destroy void in6_dev_finish_destroy ( s#inet6_dev * ) 

/* net/ipv6/af_inet6.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kioctx
s##eventfd_ctx
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##xfrm_state
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##raw_hashinfo
s##xfrm_policy
s##mem_cgroup
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
inet6_bind extern int inet6_bind ( s#socket * , s#sockaddr * , int ) 
inet6_release extern int inet6_release ( s#socket * ) 
inet6_destroy_sock void inet6_destroy_sock ( s#sock * ) 
inet6_getname extern int inet6_getname ( s#socket * , s#sockaddr * , int * , int ) 
inet6_ioctl extern int inet6_ioctl ( s#socket * , unsigned int , unsigned long ) 
inet6_register_protosw extern int inet6_register_protosw ( s#inet_protosw * ) 
inet6_unregister_protosw extern void inet6_unregister_protosw ( s#inet_protosw * ) 
inet6_sk_rebuild_header extern int inet6_sk_rebuild_header ( s#sock * ) 
ipv6_opt_accepted extern t#bool ipv6_opt_accepted ( const s#sock * , const s#sk_buff * ) 

/* net/ipv6/datagram.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##xfrm_state
s##rtable
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
ip6_datagram_connect extern int ip6_datagram_connect ( s#sock * , s#sockaddr * , int ) 
ipv6_recv_error extern int ipv6_recv_error ( s#sock * , s#msghdr * , int , int * ) 
ip6_datagram_recv_ctl int ip6_datagram_recv_ctl ( s#sock * , s#msghdr * , s#sk_buff * ) 
ip6_datagram_send_ctl int ip6_datagram_send_ctl ( s#net * , s#sock * , s#msghdr * , s#flowi6 * , s#ipv6_txoptions * , int * , int * , int * ) 

/* net/ipv6/exthdrs.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
ipv6_push_nfrag_opts extern void ipv6_push_nfrag_opts ( s#sk_buff * , s#ipv6_txoptions * , t#u8 * , s#in6_addr * * ) 
ipv6_dup_options extern s#ipv6_txoptions * ipv6_dup_options ( s#sock * , s#ipv6_txoptions * ) 
ipv6_fixup_options s#ipv6_txoptions * ipv6_fixup_options ( s#ipv6_txoptions * , s#ipv6_txoptions * ) 
fl6_update_dst extern s#in6_addr * fl6_update_dst ( s#flowi6 * , const s#ipv6_txoptions * , s#in6_addr * ) 

/* net/ipv6/exthdrs_core.o */
ipv6_ext_hdr extern t#bool ipv6_ext_hdr ( t#u8 ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
ipv6_skip_exthdr extern int ipv6_skip_exthdr ( const s#sk_buff * , int , t#u8 * , t#__be16 * ) 
ipv6_find_tlv extern int ipv6_find_tlv ( s#sk_buff * , int , int ) 
ipv6_find_hdr extern int ipv6_find_hdr ( const s#sk_buff * , unsigned int * , int , unsigned short * , int * ) 

/* net/ipv6/icmp.o */
icmpv6_err_convert extern int icmpv6_err_convert ( t#u8 , t#u8 , int * ) 

/* net/ipv6/inet6_connection_sock.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##xfrm_state
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
inet6_csk_bind_conflict extern int inet6_csk_bind_conflict ( const s#sock * , const s#inet_bind_bucket * , t#bool ) 
inet6_csk_search_req extern s#request_sock * inet6_csk_search_req ( const s#sock * , s#request_sock * * * , const t#__be16 , const s#in6_addr * , const s#in6_addr * , const int ) 
inet6_csk_reqsk_queue_hash_add extern void inet6_csk_reqsk_queue_hash_add ( s#sock * , s#request_sock * , const unsigned long ) 
inet6_csk_addr2sockaddr extern void inet6_csk_addr2sockaddr ( s#sock * , s#sockaddr * ) 
inet6_csk_xmit extern int inet6_csk_xmit ( s#sk_buff * , s#flowi * ) 
inet6_csk_update_pmtu extern s#dst_entry * inet6_csk_update_pmtu ( s#sock * , t#u32 ) 

/* net/ipv6/inet6_hashtables.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
__inet6_hash extern int __inet6_hash ( s#sock * , s#inet_timewait_sock * ) 
__inet6_lookup_established extern s#sock * __inet6_lookup_established ( s#net * , s#inet_hashinfo * , const s#in6_addr * , const t#__be16 , const s#in6_addr * , const t#u16 , const int ) 
inet6_lookup_listener extern s#sock * inet6_lookup_listener ( s#net * , s#inet_hashinfo * , const s#in6_addr * , const t#__be16 , const s#in6_addr * , const unsigned short , const int ) 
inet6_lookup extern s#sock * inet6_lookup ( s#net * , s#inet_hashinfo * , const s#in6_addr * , const t#__be16 , const s#in6_addr * , const t#__be16 , const int ) 
inet6_hash_connect extern int inet6_hash_connect ( s#inet_timewait_death_row * , s#sock * ) 

/* net/ipv6/ip6_checksum.o */
csum_ipv6_magic t#__sum16 csum_ipv6_magic ( const s#in6_addr * , const s#in6_addr * , t#__u32 , unsigned short , t#__wsum ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s#udphdr struct udphdr { t#__be16 source ; t#__be16 dest ; t#__be16 len ; t#__sum16 check ; } 
udp6_csum_init int udp6_csum_init ( s#sk_buff * , s#udphdr * , int ) 

/* net/ipv6/ip6_flowlabel.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kioctx
s##eventfd_ctx
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##xfrm_state
s##rtable
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##mem_cgroup
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##bsd_acct_struct
fl6_sock_lookup extern s#ip6_flowlabel * fl6_sock_lookup ( s#sock * , t#__be32 ) 
fl6_merge_options extern s#ipv6_txoptions * fl6_merge_options ( s#ipv6_txoptions * , s#ip6_flowlabel * , s#ipv6_txoptions * ) 

/* net/ipv6/ip6_icmp.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
t#ip6_icmp_send_t typedef void ip6_icmp_send_t ( s#sk_buff * , t#u8 , t#u8 , t#__u32 ) 
inet6_register_icmp_sender extern int inet6_register_icmp_sender ( t#ip6_icmp_send_t * ) 
inet6_unregister_icmp_sender extern int inet6_unregister_icmp_sender ( t#ip6_icmp_send_t * ) 
icmpv6_send extern void icmpv6_send ( s#sk_buff * , t#u8 , t#u8 , t#__u32 ) 

/* net/ipv6/ip6_output.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
ip6_xmit extern int ip6_xmit ( s#sock * , s#sk_buff * , s#flowi6 * , s#ipv6_txoptions * , int ) 
ip6_dst_lookup extern int ip6_dst_lookup ( s#sock * , s#dst_entry * * , s#flowi6 * ) 
ip6_dst_lookup_flow extern s#dst_entry * ip6_dst_lookup_flow ( s#sock * , s#flowi6 * , const s#in6_addr * , t#bool ) 
ip6_sk_dst_lookup_flow extern s#dst_entry * ip6_sk_dst_lookup_flow ( s#sock * , s#flowi6 * , const s#in6_addr * , t#bool ) 
ip6_append_data extern int ip6_append_data ( s#sock * , int ( void * , char * , int , int , int , s#sk_buff * ) , void * , int , int , int , int , s#ipv6_txoptions * , s#flowi6 * , s#rt6_info * , unsigned int , int ) 
ip6_push_pending_frames extern int ip6_push_pending_frames ( s#sock * ) 
ip6_flush_pending_frames extern void ip6_flush_pending_frames ( s#sock * ) 

/* net/ipv6/ip6_tunnel.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##tvec_base
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##dn_route
s#__ip6_tnl_parm struct __ip6_tnl_parm { char name [ 16 ] ; int link ; t#__u8 proto ; t#__u8 encap_limit ; t#__u8 hop_limit ; t#__be32 flowinfo ; t#__u32 flags ; s#in6_addr laddr ; s#in6_addr raddr ; t#__be16 i_flags ; t#__be16 o_flags ; t#__be32 i_key ; t#__be32 o_key ; } 
s#ip6_tnl struct ip6_tnl { s#ip6_tnl * next ; s#net_device * dev ; s#net * net ; s#__ip6_tnl_parm parms ; s#flowi fl ; s#dst_entry * dst_cache ; t#u32 dst_cookie ; int err_count ; unsigned long err_time ; t#__u32 i_seqno ; t#__u32 o_seqno ; int hlen ; int mlink ; } 
ip6_tnl_dst_check s#dst_entry * ip6_tnl_dst_check ( s#ip6_tnl * ) 
ip6_tnl_dst_reset void ip6_tnl_dst_reset ( s#ip6_tnl * ) 
ip6_tnl_dst_store void ip6_tnl_dst_store ( s#ip6_tnl * , s#dst_entry * ) 
ip6_tnl_parse_tlv_enc_lim t#__u16 ip6_tnl_parse_tlv_enc_lim ( s#sk_buff * , t#__u8 * ) 
ip6_tnl_get_cap t#__u32 ip6_tnl_get_cap ( s#ip6_tnl * , const s#in6_addr * , const s#in6_addr * ) 
ip6_tnl_rcv_ctl int ip6_tnl_rcv_ctl ( s#ip6_tnl * , const s#in6_addr * , const s#in6_addr * ) 
ip6_tnl_xmit_ctl int ip6_tnl_xmit_ctl ( s#ip6_tnl * ) 

/* net/ipv6/ipv6_sockglue.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##raw_hashinfo
ipv6_setsockopt extern int ipv6_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
compat_ipv6_setsockopt extern int compat_ipv6_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
ipv6_getsockopt extern int ipv6_getsockopt ( s#sock * , int , int , char * , int * ) 
compat_ipv6_getsockopt extern int compat_ipv6_getsockopt ( s#sock * , int , int , char * , int * ) 

/* net/ipv6/ndisc.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##tvec_base
s##workqueue_struct
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
ndisc_mc_map extern int ndisc_mc_map ( const s#in6_addr * , char * , s#net_device * , int ) 

/* net/ipv6/netfilter.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
ip6_route_me_harder extern int ip6_route_me_harder ( s#sk_buff * ) 
nf_ip6_checksum extern t#__sum16 nf_ip6_checksum ( s#sk_buff * , unsigned int , unsigned int , t#u_int8_t ) 

/* net/ipv6/netfilter/ip6_tables.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
ip6t_alloc_initial_table extern void * ip6t_alloc_initial_table ( const s#xt_table * ) 
s#ip6t_ip6 struct ip6t_ip6 { s#in6_addr src , dst ; s#in6_addr smsk , dmsk ; char iniface [ 16 ] , outiface [ 16 ] ; unsigned char iniface_mask [ 16 ] , outiface_mask [ 16 ] ; t#__u16 proto ; t#__u8 tos ; t#__u8 flags ; t#__u8 invflags ; } 
s#ip6t_entry struct ip6t_entry { s#ip6t_ip6 ipv6 ; unsigned int nfcache ; t#__u16 target_offset ; t#__u16 next_offset ; unsigned int comefrom ; s#xt_counters counters ; unsigned char elems [ 0 ] ; } 
s#ip6t_replace struct ip6t_replace { char name [ 32 ] ; unsigned int valid_hooks ; unsigned int num_entries ; unsigned int size ; unsigned int hook_entry [ E#NF_INET_NUMHOOKS ] ; unsigned int underflow [ E#NF_INET_NUMHOOKS ] ; unsigned int num_counters ; s#xt_counters * counters ; s#ip6t_entry entries [ 0 ] ; } 
ip6t_register_table extern s#xt_table * ip6t_register_table ( s#net * , const s#xt_table * , const s#ip6t_replace * ) 
ip6t_unregister_table extern void ip6t_unregister_table ( s#net * , s#xt_table * ) 
ip6t_do_table extern unsigned int ip6t_do_table ( s#sk_buff * , unsigned int , const s#net_device * , const s#net_device * , s#xt_table * ) 

/* net/ipv6/netfilter/nf_defrag_ipv6_hooks.o */
nf_defrag_ipv6_enable extern void nf_defrag_ipv6_enable ( void ) 

/* net/ipv6/output_core.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##xfrm_state
s##rtable
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
ipv6_proxy_select_ident extern void ipv6_proxy_select_ident ( s#sk_buff * ) 
s#frag_hdr struct frag_hdr { t#__u8 nexthdr ; t#__u8 reserved ; t#__be16 frag_off ; t#__be32 identification ; } 
ipv6_select_ident extern void ipv6_select_ident ( s#frag_hdr * , s#rt6_info * ) 
ip6_find_1stfragopt extern int ip6_find_1stfragopt ( s#sk_buff * , t#u8 * * ) 
ip6_dst_hoplimit extern int ip6_dst_hoplimit ( s#dst_entry * ) 
__ip6_local_out extern int __ip6_local_out ( s#sk_buff * ) 
ip6_local_out extern int ip6_local_out ( s#sk_buff * ) 

/* net/ipv6/ping.o */
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kioctx
s##eventfd_ctx
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##xfrm_state
s##rtable
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##inet_hashinfo
s##raw_hashinfo
pingv6_prot extern s#proto pingv6_prot 

/* net/ipv6/protocol.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s#inet6_skb_parm struct inet6_skb_parm { int iif ; t#__be16 ra ; t#__u16 hop ; t#__u16 dst0 ; t#__u16 srcrt ; t#__u16 dst1 ; t#__u16 lastopt ; t#__u16 nhoff ; t#__u16 flags ; t#__u16 dsthao ; t#__u16 frag_max_size ; } 
s#inet6_protocol struct inet6_protocol { void ( * early_demux ) ( s#sk_buff * ) ; int ( * handler ) ( s#sk_buff * ) ; void ( * err_handler ) ( s#sk_buff * , s#inet6_skb_parm * , t#u8 , t#u8 , int , t#__be32 ) ; unsigned int flags ; } 
inet6_protos extern const s#inet6_protocol * inet6_protos [ 256 ] 
inet6_add_protocol extern int inet6_add_protocol ( const s#inet6_protocol * , unsigned char ) 
inet6_del_protocol extern int inet6_del_protocol ( const s#inet6_protocol * , unsigned char ) 
inet6_add_offload extern int inet6_add_offload ( const s#net_offload * , unsigned char ) 
inet6_del_offload extern int inet6_del_offload ( const s#net_offload * , unsigned char ) 

/* net/ipv6/raw.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##module
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
rawv6_mh_filter_register int rawv6_mh_filter_register ( int ( * ) ( s#sock * , s#sk_buff * ) ) 
rawv6_mh_filter_unregister int rawv6_mh_filter_unregister ( int ( * ) ( s#sock * , s#sk_buff * ) ) 

/* net/ipv6/reassembly.o */
inet6_hash_frag extern unsigned int inet6_hash_frag ( t#__be32 , const s#in6_addr * , const s#in6_addr * , t#u32 ) 
s##tvec_base
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##xfrm_state
s##rtable
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
ip6_frag_match t#bool ip6_frag_match ( s#inet_frag_queue * , void * ) 
ip6_frag_init void ip6_frag_init ( s#inet_frag_queue * , void * ) 
s#frag_queue struct frag_queue { s#inet_frag_queue q ; t#__be32 id ; t#u32 user ; s#in6_addr saddr ; s#in6_addr daddr ; int iif ; unsigned int csum ; t#__u16 nhoffset ; t#u8 ecn ; } 
ip6_expire_frag_queue void ip6_expire_frag_queue ( s#net * , s#frag_queue * , s#inet_frags * ) 

/* net/ipv6/route.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##tvec_base
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##module
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##dn_route
ip6_route_lookup extern s#dst_entry * ip6_route_lookup ( s#net * , s#flowi6 * , int ) 
rt6_lookup extern s#rt6_info * rt6_lookup ( s#net * , const s#in6_addr * , const s#in6_addr * , int , int ) 
ip6_route_output extern s#dst_entry * ip6_route_output ( s#net * , const s#sock * , s#flowi6 * ) 
ip6_update_pmtu extern void ip6_update_pmtu ( s#sk_buff * , s#net * , t#__be32 , int , t#u32 ) 
ip6_sk_update_pmtu extern void ip6_sk_update_pmtu ( s#sk_buff * , s#sock * , t#__be32 ) 
ip6_redirect extern void ip6_redirect ( s#sk_buff * , s#net * , int , t#u32 ) 
ip6_sk_redirect extern void ip6_sk_redirect ( s#sk_buff * , s#sock * ) 

/* net/ipv6/syncookies.o */
s#ipv6hdr struct ipv6hdr { t#__u8 priority : 4 , version : 4 ; t#__u8 flow_lbl [ 3 ] ; t#__be16 payload_len ; t#__u8 nexthdr ; t#__u8 hop_limit ; s#in6_addr saddr ; s#in6_addr daddr ; } 
__cookie_v6_init_sequence extern t#u32 __cookie_v6_init_sequence ( const s#ipv6hdr * , const s#tcphdr * , t#u16 * ) 
__cookie_v6_check extern int __cookie_v6_check ( const s#ipv6hdr * , const s#tcphdr * , t#u32 ) 

/* net/ipv6/tunnel6.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s#xfrm6_tunnel struct xfrm6_tunnel { int ( * handler ) ( s#sk_buff * ) ; int ( * err_handler ) ( s#sk_buff * , s#inet6_skb_parm * , t#u8 , t#u8 , int , t#__be32 ) ; s#xfrm6_tunnel * next ; int priority ; } 
xfrm6_tunnel_register extern int xfrm6_tunnel_register ( s#xfrm6_tunnel * , unsigned short ) 
xfrm6_tunnel_deregister extern int xfrm6_tunnel_deregister ( s#xfrm6_tunnel * , unsigned short ) 

/* net/ipv6/udp.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
__udp6_lib_lookup extern s#sock * __udp6_lib_lookup ( s#net * , const s#in6_addr * , t#__be16 , const s#in6_addr * , t#__be16 , int , s#udp_table * ) 
udp6_lib_lookup extern s#sock * udp6_lib_lookup ( s#net * , const s#in6_addr * , t#__be16 , const s#in6_addr * , t#__be16 , int ) 
udpv6_encap_enable extern void udpv6_encap_enable ( void ) 

/* net/ipv6/xfrm6_input.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
xfrm6_rcv_spi extern int xfrm6_rcv_spi ( s#sk_buff * , int , t#__be32 ) 
xfrm6_rcv extern int xfrm6_rcv ( s#sk_buff * ) 
xfrm6_input_addr extern int xfrm6_input_addr ( s#sk_buff * , t#xfrm_address_t * , t#xfrm_address_t * , t#u8 ) 

/* net/ipv6/xfrm6_output.o */
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##kmem_cache_node
s##array_cache
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##mem_cgroup
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##bsd_acct_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
xfrm6_find_1stfragopt extern int xfrm6_find_1stfragopt ( s#xfrm_state * , s#sk_buff * , t#u8 * * ) 
xfrm6_prepare_output extern int xfrm6_prepare_output ( s#xfrm_state * , s#sk_buff * ) 

/* net/ipv6/xfrm6_tunnel.o */
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##kmem_cache_node
s##array_cache
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##mem_cgroup
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##bsd_acct_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
xfrm6_tunnel_spi_lookup extern t#__be32 xfrm6_tunnel_spi_lookup ( s#net * , const t#xfrm_address_t * ) 
xfrm6_tunnel_alloc_spi extern t#__be32 xfrm6_tunnel_alloc_spi ( s#net * , t#xfrm_address_t * ) 

/* net/l2tp/l2tp_core.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##raw_hashinfo
e#l2tp_encap_type enum l2tp_encap_type { L2TP_ENCAPTYPE_UDP , L2TP_ENCAPTYPE_IP , } 
s#l2tp_stats struct l2tp_stats { t#atomic_long_t tx_packets ; t#atomic_long_t tx_bytes ; t#atomic_long_t tx_errors ; t#atomic_long_t rx_packets ; t#atomic_long_t rx_bytes ; t#atomic_long_t rx_seq_discards ; t#atomic_long_t rx_oos_packets ; t#atomic_long_t rx_errors ; t#atomic_long_t rx_cookie_discards ; } 
s#l2tp_tunnel struct l2tp_tunnel { int magic ; s#callback_head rcu ; t#rwlock_t hlist_lock ; s#hlist_head session_hlist [ ( 1 << 4 ) ] ; t#u32 tunnel_id ; t#u32 peer_tunnel_id ; int version ; char name [ 20 ] ; int debug ; e#l2tp_encap_type encap ; s#l2tp_stats stats ; s#list_head list ; s#net * l2tp_net ; t#atomic_t ref_count ; void ( * show ) ( s#seq_file * , void * ) ; int ( * recv_payload_hook ) ( s#sk_buff * ) ; void ( * old_sk_destruct ) ( s#sock * ) ; s#sock * sock ; int fd ; t#bool v4mapped ; s#work_struct del_work ; t#uint8_t priv [ 0 ] ; } 
l2tp_tunnel_sock_lookup extern s#sock * l2tp_tunnel_sock_lookup ( s#l2tp_tunnel * ) 
l2tp_tunnel_sock_put extern void l2tp_tunnel_sock_put ( s#sock * ) 
e#l2tp_pwtype enum l2tp_pwtype { L2TP_PWTYPE_NONE = 0x0000 , L2TP_PWTYPE_ETH_VLAN = 0x0004 , L2TP_PWTYPE_ETH = 0x0005 , L2TP_PWTYPE_PPP = 0x0007 , L2TP_PWTYPE_PPP_AC = 0x0008 , L2TP_PWTYPE_IP = 0x000b , __L2TP_PWTYPE_MAX } 
s#l2tp_session struct l2tp_session { int magic ; s#l2tp_tunnel * tunnel ; t#u32 session_id ; t#u32 peer_session_id ; t#u8 cookie [ 8 ] ; int cookie_len ; t#u8 peer_cookie [ 8 ] ; int peer_cookie_len ; t#u16 offset ; t#u16 l2specific_len ; t#u16 l2specific_type ; t#u16 hdr_len ; t#u32 nr ; t#u32 ns ; s#sk_buff_head reorder_q ; t#u32 nr_max ; t#u32 nr_window_size ; t#u32 nr_oos ; int nr_oos_count ; int nr_oos_count_max ; s#hlist_node hlist ; t#atomic_t ref_count ; char name [ 32 ] ; char ifname [ 16 ] ; unsigned int data_seq : 2 ; unsigned int recv_seq : 1 ; unsigned int send_seq : 1 ; unsigned int lns_mode : 1 ; int debug ; int reorder_timeout ; int reorder_skip ; int mtu ; int mru ; e#l2tp_pwtype pwtype ; s#l2tp_stats stats ; s#hlist_node global_hlist ; int ( * build_header ) ( s#l2tp_session * , void * ) ; void ( * recv_skb ) ( s#l2tp_session * , s#sk_buff * , int ) ; void ( * session_close ) ( s#l2tp_session * ) ; void ( * ref ) ( s#l2tp_session * ) ; void ( * deref ) ( s#l2tp_session * ) ; void ( * show ) ( s#seq_file * , void * ) ; t#uint8_t priv [ 0 ] ; } 
l2tp_session_find extern s#l2tp_session * l2tp_session_find ( s#net * , s#l2tp_tunnel * , t#u32 ) 
l2tp_session_find_nth extern s#l2tp_session * l2tp_session_find_nth ( s#l2tp_tunnel * , int ) 
l2tp_session_find_by_ifname extern s#l2tp_session * l2tp_session_find_by_ifname ( s#net * , char * ) 
l2tp_tunnel_find extern s#l2tp_tunnel * l2tp_tunnel_find ( s#net * , t#u32 ) 
l2tp_tunnel_find_nth extern s#l2tp_tunnel * l2tp_tunnel_find_nth ( s#net * , int ) 
l2tp_recv_common extern void l2tp_recv_common ( s#l2tp_session * , s#sk_buff * , unsigned char * , unsigned char * , t#u16 , int , int ( * ) ( s#sk_buff * ) ) 
l2tp_session_queue_purge extern int l2tp_session_queue_purge ( s#l2tp_session * ) 
l2tp_udp_encap_recv extern int l2tp_udp_encap_recv ( s#sock * , s#sk_buff * ) 
l2tp_xmit_skb extern int l2tp_xmit_skb ( s#l2tp_session * , s#sk_buff * , int ) 
l2tp_tunnel_closeall extern void l2tp_tunnel_closeall ( s#l2tp_tunnel * ) 
s#l2tp_tunnel_cfg struct l2tp_tunnel_cfg { int debug ; e#l2tp_encap_type encap ; s#in_addr local_ip ; s#in_addr peer_ip ; s#in6_addr * local_ip6 ; s#in6_addr * peer_ip6 ; t#u16 local_udp_port ; t#u16 peer_udp_port ; unsigned int use_udp_checksums : 1 ; } 
l2tp_tunnel_create extern int l2tp_tunnel_create ( s#net * , int , int , t#u32 , t#u32 , s#l2tp_tunnel_cfg * , s#l2tp_tunnel * * ) 
l2tp_tunnel_delete extern int l2tp_tunnel_delete ( s#l2tp_tunnel * ) 
l2tp_session_free extern void l2tp_session_free ( s#l2tp_session * ) 
__l2tp_session_unhash extern void __l2tp_session_unhash ( s#l2tp_session * ) 
l2tp_session_delete extern int l2tp_session_delete ( s#l2tp_session * ) 
s#l2tp_session_cfg struct l2tp_session_cfg { e#l2tp_pwtype pw_type ; unsigned int data_seq : 2 ; unsigned int recv_seq : 1 ; unsigned int send_seq : 1 ; unsigned int lns_mode : 1 ; int debug ; t#u16 vlan_id ; t#u16 offset ; t#u16 l2specific_len ; t#u16 l2specific_type ; t#u8 cookie [ 8 ] ; int cookie_len ; t#u8 peer_cookie [ 8 ] ; int peer_cookie_len ; int reorder_timeout ; int mtu ; int mru ; char * ifname ; } 
l2tp_session_create extern s#l2tp_session * l2tp_session_create ( int , s#l2tp_tunnel * , t#u32 , t#u32 , s#l2tp_session_cfg * ) 

/* net/l2tp/l2tp_netlink.o */
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s#l2tp_nl_cmd_ops struct l2tp_nl_cmd_ops { int ( * session_create ) ( s#net * , t#u32 , t#u32 , t#u32 , s#l2tp_session_cfg * ) ; int ( * session_delete ) ( s#l2tp_session * ) ; } 
l2tp_nl_register_ops extern int l2tp_nl_register_ops ( e#l2tp_pwtype , const s#l2tp_nl_cmd_ops * ) 
l2tp_nl_unregister_ops extern void l2tp_nl_unregister_ops ( e#l2tp_pwtype ) 

/* net/llc/llc_core.o */
llc_sap_list extern s#list_head llc_sap_list 
llc_sap_list_lock extern t#spinlock_t llc_sap_list_lock 
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
llc_sap_find extern s#llc_sap * llc_sap_find ( unsigned char ) 
llc_sap_open extern s#llc_sap * llc_sap_open ( unsigned char , int ( * ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ) 
llc_sap_close extern void llc_sap_close ( s#llc_sap * ) 

/* net/llc/llc_input.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
llc_add_pack extern void llc_add_pack ( int , void ( * ) ( s#llc_sap * , s#sk_buff * ) ) 
llc_remove_pack extern void llc_remove_pack ( int ) 
llc_set_station_handler extern void llc_set_station_handler ( void ( * ) ( s#sk_buff * ) ) 

/* net/llc/llc_output.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
llc_mac_hdr_init extern int llc_mac_hdr_init ( s#sk_buff * , const unsigned char * , const unsigned char * ) 
llc_build_and_send_ui_pkt extern int llc_build_and_send_ui_pkt ( s#llc_sap * , s#sk_buff * , unsigned char * , unsigned char ) 

/* net/mac80211/aes_cmac.o */
ieee80211_aes_cmac_calculate_k1_k2 void ieee80211_aes_cmac_calculate_k1_k2 ( s#ieee80211_key_conf * , t#u8 * , t#u8 * ) 

/* net/mac80211/agg-rx.o */
s##posix_acl
s##nameidata
s##vfsmount
s##module
s##kiocb
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##radix_tree_node
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
ieee80211_stop_rx_ba_session void ieee80211_stop_rx_ba_session ( s#ieee80211_vif * , t#u16 , const t#u8 * ) 

/* net/mac80211/agg-tx.o */
s##posix_acl
s##nameidata
s##vfsmount
s##module
s##kiocb
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##radix_tree_node
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
ieee80211_send_bar void ieee80211_send_bar ( s#ieee80211_vif * , t#u8 * , t#u16 , t#u16 ) 
ieee80211_start_tx_ba_session int ieee80211_start_tx_ba_session ( s#ieee80211_sta * , t#u16 , t#u16 ) 
ieee80211_start_tx_ba_cb_irqsafe void ieee80211_start_tx_ba_cb_irqsafe ( s#ieee80211_vif * , const t#u8 * , t#u16 ) 
ieee80211_stop_tx_ba_session int ieee80211_stop_tx_ba_session ( s#ieee80211_sta * , t#u16 ) 
ieee80211_stop_tx_ba_cb_irqsafe void ieee80211_stop_tx_ba_cb_irqsafe ( s#ieee80211_vif * , const t#u8 * , t#u16 ) 

/* net/mac80211/chan.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
ieee80211_iter_chan_contexts_atomic void ieee80211_iter_chan_contexts_atomic ( s#ieee80211_hw * , void ( * ) ( s#ieee80211_hw * , s#ieee80211_chanctx_conf * , void * ) , void * ) 

/* net/mac80211/ht.o */
s##posix_acl
s##nameidata
s##vfsmount
s##module
s##kiocb
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##radix_tree_node
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
ieee80211_request_smps void ieee80211_request_smps ( s#ieee80211_vif * , e#ieee80211_smps_mode ) 

/* net/mac80211/key.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
ieee80211_iter_keys void ieee80211_iter_keys ( s#ieee80211_hw * , s#ieee80211_vif * , void ( * ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_sta * , s#ieee80211_key_conf * , void * ) , void * ) 
ieee80211_gtk_rekey_notify void ieee80211_gtk_rekey_notify ( s#ieee80211_vif * , const t#u8 * , const t#u8 * , t#gfp_t ) 
s#ieee80211_key_seq struct ieee80211_key_seq { union { struct { t#u32 iv32 ; t#u16 iv16 ; } tkip ; struct { t#u8 pn [ 6 ] ; } ccmp ; struct { t#u8 pn [ 6 ] ; } aes_cmac ; } ; } 
ieee80211_get_key_tx_seq void ieee80211_get_key_tx_seq ( s#ieee80211_key_conf * , s#ieee80211_key_seq * ) 
ieee80211_get_key_rx_seq void ieee80211_get_key_rx_seq ( s#ieee80211_key_conf * , int , s#ieee80211_key_seq * ) 
ieee80211_set_key_tx_seq void ieee80211_set_key_tx_seq ( s#ieee80211_key_conf * , s#ieee80211_key_seq * ) 
ieee80211_set_key_rx_seq void ieee80211_set_key_rx_seq ( s#ieee80211_key_conf * , int , s#ieee80211_key_seq * ) 
ieee80211_remove_key void ieee80211_remove_key ( s#ieee80211_key_conf * ) 
ieee80211_gtk_rekey_add s#ieee80211_key_conf * ieee80211_gtk_rekey_add ( s#ieee80211_vif * , s#ieee80211_key_conf * ) 

/* net/mac80211/led.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
__ieee80211_get_radio_led_name char * __ieee80211_get_radio_led_name ( s#ieee80211_hw * ) 
__ieee80211_get_assoc_led_name char * __ieee80211_get_assoc_led_name ( s#ieee80211_hw * ) 
__ieee80211_get_tx_led_name char * __ieee80211_get_tx_led_name ( s#ieee80211_hw * ) 
__ieee80211_get_rx_led_name char * __ieee80211_get_rx_led_name ( s#ieee80211_hw * ) 
s#ieee80211_tpt_blink struct ieee80211_tpt_blink { int throughput ; int blink_time ; } 
__ieee80211_create_tpt_led_trigger char * __ieee80211_create_tpt_led_trigger ( s#ieee80211_hw * , unsigned int , const s#ieee80211_tpt_blink * , unsigned int ) 

/* net/mac80211/main.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kioctx
s##eventfd_ctx
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##rt6_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##dn_route
s##mem_cgroup
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
ieee80211_restart_hw void ieee80211_restart_hw ( s#ieee80211_hw * ) 
ieee80211_alloc_hw s#ieee80211_hw * ieee80211_alloc_hw ( t#size_t , const s#ieee80211_ops * ) 
ieee80211_register_hw int ieee80211_register_hw ( s#ieee80211_hw * ) 
ieee80211_unregister_hw void ieee80211_unregister_hw ( s#ieee80211_hw * ) 
ieee80211_free_hw void ieee80211_free_hw ( s#ieee80211_hw * ) 

/* net/mac80211/mlme.o */
s##posix_acl
s##nameidata
s##vfsmount
s##module
s##kiocb
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##radix_tree_node
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
ieee80211_chswitch_done void ieee80211_chswitch_done ( s#ieee80211_vif * , t#bool ) 
ieee80211_ap_probereq_get s#sk_buff * ieee80211_ap_probereq_get ( s#ieee80211_hw * , s#ieee80211_vif * ) 
ieee80211_beacon_loss void ieee80211_beacon_loss ( s#ieee80211_vif * ) 
ieee80211_connection_loss void ieee80211_connection_loss ( s#ieee80211_vif * ) 
e#nl80211_cqm_rssi_threshold_event enum nl80211_cqm_rssi_threshold_event { NL80211_CQM_RSSI_THRESHOLD_EVENT_LOW , NL80211_CQM_RSSI_THRESHOLD_EVENT_HIGH , NL80211_CQM_RSSI_BEACON_LOSS_EVENT , } 
ieee80211_cqm_rssi_notify void ieee80211_cqm_rssi_notify ( s#ieee80211_vif * , e#nl80211_cqm_rssi_threshold_event , t#gfp_t ) 

/* net/mac80211/offchannel.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
ieee80211_ready_on_channel void ieee80211_ready_on_channel ( s#ieee80211_hw * ) 
ieee80211_remain_on_channel_expired void ieee80211_remain_on_channel_expired ( s#ieee80211_hw * ) 

/* net/mac80211/pm.o */
s##posix_acl
s##nameidata
s##vfsmount
s##module
s##kiocb
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##radix_tree_node
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s#cfg80211_wowlan_wakeup struct cfg80211_wowlan_wakeup { t#bool disconnect , magic_pkt , gtk_rekey_failure , eap_identity_req , four_way_handshake , rfkill_release , packet_80211 , tcp_match , tcp_connlost , tcp_nomoretokens ; t#s32 pattern_idx ; t#u32 packet_present_len , packet_len ; const void * packet ; } 
ieee80211_report_wowlan_wakeup void ieee80211_report_wowlan_wakeup ( s#ieee80211_vif * , s#cfg80211_wowlan_wakeup * , t#gfp_t ) 

/* net/mac80211/rate.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#ieee80211_tx_rate_control struct ieee80211_tx_rate_control { s#ieee80211_hw * hw ; s#ieee80211_supported_band * sband ; s#ieee80211_bss_conf * bss_conf ; s#sk_buff * skb ; s#ieee80211_tx_rate reported_rate ; t#bool rts , short_preamble ; t#u8 max_rate_idx ; t#u32 rate_idx_mask ; t#u8 * rate_idx_mcs_mask ; t#bool bss ; } 
s#rate_control_ops struct rate_control_ops { s#module * module ; const char * name ; void * ( * alloc ) ( s#ieee80211_hw * , s#dentry * ) ; void ( * free ) ( void * ) ; void * ( * alloc_sta ) ( void * , s#ieee80211_sta * , t#gfp_t ) ; void ( * rate_init ) ( void * , s#ieee80211_supported_band * , s#cfg80211_chan_def * , s#ieee80211_sta * , void * ) ; void ( * rate_update ) ( void * , s#ieee80211_supported_band * , s#cfg80211_chan_def * , s#ieee80211_sta * , void * , t#u32 ) ; void ( * free_sta ) ( void * , s#ieee80211_sta * , void * ) ; void ( * tx_status ) ( void * , s#ieee80211_supported_band * , s#ieee80211_sta * , void * , s#sk_buff * ) ; void ( * get_rate ) ( void * , s#ieee80211_sta * , void * , s#ieee80211_tx_rate_control * ) ; void ( * add_sta_debugfs ) ( void * , void * , s#dentry * ) ; void ( * remove_sta_debugfs ) ( void * , void * ) ; } 
ieee80211_rate_control_register int ieee80211_rate_control_register ( s#rate_control_ops * ) 
ieee80211_rate_control_unregister void ieee80211_rate_control_unregister ( s#rate_control_ops * ) 
rate_control_send_low t#bool rate_control_send_low ( s#ieee80211_sta * , void * , s#ieee80211_tx_rate_control * ) 
ieee80211_get_tx_rates void ieee80211_get_tx_rates ( s#ieee80211_vif * , s#ieee80211_sta * , s#sk_buff * , s#ieee80211_tx_rate * , int ) 
rate_control_set_rates int rate_control_set_rates ( s#ieee80211_hw * , s#ieee80211_sta * , s#ieee80211_sta_rates * ) 

/* net/mac80211/rx.o */
ieee80211_sta_ps_transition int ieee80211_sta_ps_transition ( s#ieee80211_sta * , t#bool ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
ieee80211_rx void ieee80211_rx ( s#ieee80211_hw * , s#sk_buff * ) 
ieee80211_rx_irqsafe void ieee80211_rx_irqsafe ( s#ieee80211_hw * , s#sk_buff * ) 

/* net/mac80211/scan.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##qdisc_walker
s##tcf_walker
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
ieee80211_scan_completed void ieee80211_scan_completed ( s#ieee80211_hw * , t#bool ) 
ieee80211_sched_scan_results void ieee80211_sched_scan_results ( s#ieee80211_hw * ) 
ieee80211_sched_scan_stopped void ieee80211_sched_scan_stopped ( s#ieee80211_hw * ) 

/* net/mac80211/sta_info.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
ieee80211_find_sta_by_ifaddr s#ieee80211_sta * ieee80211_find_sta_by_ifaddr ( s#ieee80211_hw * , const t#u8 * , const t#u8 * ) 
ieee80211_find_sta s#ieee80211_sta * ieee80211_find_sta ( s#ieee80211_vif * , const t#u8 * ) 
ieee80211_sta_block_awake void ieee80211_sta_block_awake ( s#ieee80211_hw * , s#ieee80211_sta * , t#bool ) 
ieee80211_sta_eosp void ieee80211_sta_eosp ( s#ieee80211_sta * ) 
ieee80211_sta_set_buffered void ieee80211_sta_set_buffered ( s#ieee80211_sta * , t#u8 , t#bool ) 

/* net/mac80211/status.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
ieee80211_tx_status_irqsafe void ieee80211_tx_status_irqsafe ( s#ieee80211_hw * , s#sk_buff * ) 
ieee80211_tx_status void ieee80211_tx_status ( s#ieee80211_hw * , s#sk_buff * ) 
ieee80211_report_low_ack void ieee80211_report_low_ack ( s#ieee80211_sta * , t#u32 ) 
ieee80211_free_txskb void ieee80211_free_txskb ( s#ieee80211_hw * , s#sk_buff * ) 

/* net/mac80211/tkip.o */
ieee80211_get_tkip_p1k_iv void ieee80211_get_tkip_p1k_iv ( s#ieee80211_key_conf * , t#u32 , t#u16 * ) 
ieee80211_get_tkip_rx_p1k void ieee80211_get_tkip_rx_p1k ( s#ieee80211_key_conf * , const t#u8 * , t#u32 , t#u16 * ) 
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
ieee80211_get_tkip_p2k void ieee80211_get_tkip_p2k ( s#ieee80211_key_conf * , s#sk_buff * , t#u8 * ) 

/* net/mac80211/tx.o */
s##posix_acl
s##nameidata
s##vfsmount
s##module
s##kiocb
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##radix_tree_node
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##pipe_inode_info
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
ieee80211_csa_finish void ieee80211_csa_finish ( s#ieee80211_vif * ) 
ieee80211_csa_is_complete t#bool ieee80211_csa_is_complete ( s#ieee80211_vif * ) 
ieee80211_beacon_get_tim s#sk_buff * ieee80211_beacon_get_tim ( s#ieee80211_hw * , s#ieee80211_vif * , t#u16 * , t#u16 * ) 
ieee80211_proberesp_get s#sk_buff * ieee80211_proberesp_get ( s#ieee80211_hw * , s#ieee80211_vif * ) 
ieee80211_pspoll_get s#sk_buff * ieee80211_pspoll_get ( s#ieee80211_hw * , s#ieee80211_vif * ) 
ieee80211_nullfunc_get s#sk_buff * ieee80211_nullfunc_get ( s#ieee80211_hw * , s#ieee80211_vif * ) 
ieee80211_probereq_get s#sk_buff * ieee80211_probereq_get ( s#ieee80211_hw * , s#ieee80211_vif * , const t#u8 * , t#size_t , t#size_t ) 
s#ieee80211_rts struct ieee80211_rts { t#__le16 frame_control ; t#__le16 duration ; t#u8 ra [ 6 ] ; t#u8 ta [ 6 ] ; } 
ieee80211_rts_get void ieee80211_rts_get ( s#ieee80211_hw * , s#ieee80211_vif * , const void * , t#size_t , const s#ieee80211_tx_info * , s#ieee80211_rts * ) 
s#ieee80211_cts struct ieee80211_cts { t#__le16 frame_control ; t#__le16 duration ; t#u8 ra [ 6 ] ; } 
ieee80211_ctstoself_get void ieee80211_ctstoself_get ( s#ieee80211_hw * , s#ieee80211_vif * , const void * , t#size_t , const s#ieee80211_tx_info * , s#ieee80211_cts * ) 
ieee80211_get_buffered_bc s#sk_buff * ieee80211_get_buffered_bc ( s#ieee80211_hw * , s#ieee80211_vif * ) 

/* net/mac80211/util.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
wiphy_to_ieee80211_hw s#ieee80211_hw * wiphy_to_ieee80211_hw ( s#wiphy * ) 
ieee80211_generic_frame_duration t#__le16 ieee80211_generic_frame_duration ( s#ieee80211_hw * , s#ieee80211_vif * , e#ieee80211_band , t#size_t , s#ieee80211_rate * ) 
ieee80211_rts_duration t#__le16 ieee80211_rts_duration ( s#ieee80211_hw * , s#ieee80211_vif * , t#size_t , const s#ieee80211_tx_info * ) 
ieee80211_ctstoself_duration t#__le16 ieee80211_ctstoself_duration ( s#ieee80211_hw * , s#ieee80211_vif * , t#size_t , const s#ieee80211_tx_info * ) 
ieee80211_wake_queue void ieee80211_wake_queue ( s#ieee80211_hw * , int ) 
ieee80211_stop_queue void ieee80211_stop_queue ( s#ieee80211_hw * , int ) 
ieee80211_stop_queues void ieee80211_stop_queues ( s#ieee80211_hw * ) 
ieee80211_queue_stopped int ieee80211_queue_stopped ( s#ieee80211_hw * , int ) 
ieee80211_wake_queues void ieee80211_wake_queues ( s#ieee80211_hw * ) 
ieee80211_iterate_active_interfaces void ieee80211_iterate_active_interfaces ( s#ieee80211_hw * , t#u32 , void ( * ) ( void * , t#u8 * , s#ieee80211_vif * ) , void * ) 
ieee80211_iterate_active_interfaces_atomic void ieee80211_iterate_active_interfaces_atomic ( s#ieee80211_hw * , t#u32 , void ( * ) ( void * , t#u8 * , s#ieee80211_vif * ) , void * ) 
ieee80211_iterate_active_interfaces_rtnl void ieee80211_iterate_active_interfaces_rtnl ( s#ieee80211_hw * , t#u32 , void ( * ) ( void * , t#u8 * , s#ieee80211_vif * ) , void * ) 
ieee80211_queue_work void ieee80211_queue_work ( s#ieee80211_hw * , s#work_struct * ) 
ieee80211_queue_delayed_work void ieee80211_queue_delayed_work ( s#ieee80211_hw * , s#delayed_work * , unsigned long ) 
ieee80211_resume_disconnect void ieee80211_resume_disconnect ( s#ieee80211_vif * ) 
ieee80211_enable_rssi_reports void ieee80211_enable_rssi_reports ( s#ieee80211_vif * , int , int ) 
ieee80211_disable_rssi_reports void ieee80211_disable_rssi_reports ( s#ieee80211_vif * ) 
ieee80211_ave_rssi int ieee80211_ave_rssi ( s#ieee80211_vif * ) 
ieee80211_radar_detected void ieee80211_radar_detected ( s#ieee80211_hw * ) 

/* net/netfilter/core.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##nf_queue_entry
s#nf_afinfo struct nf_afinfo { unsigned short family ; t#__sum16 ( * checksum ) ( s#sk_buff * , unsigned int , unsigned int , t#u_int8_t ) ; t#__sum16 ( * checksum_partial ) ( s#sk_buff * , unsigned int , unsigned int , unsigned int , t#u_int8_t ) ; int ( * route ) ( s#net * , s#dst_entry * * , s#flowi * , t#bool ) ; void ( * saveroute ) ( const s#sk_buff * , s#nf_queue_entry * ) ; int ( * reroute ) ( s#sk_buff * , const s#nf_queue_entry * ) ; int route_key_size ; } 
nf_afinfo extern const s#nf_afinfo * nf_afinfo [ E#NFPROTO_NUMPROTO ] 
s##nf_ipv6_ops
nf_ipv6_ops const s#nf_ipv6_ops * nf_ipv6_ops 
nf_register_afinfo extern int nf_register_afinfo ( const s#nf_afinfo * ) 
nf_unregister_afinfo extern void nf_unregister_afinfo ( const s#nf_afinfo * ) 
nf_hooks extern s#list_head nf_hooks [ E#NFPROTO_NUMPROTO ] [ 8 ] 
nf_hooks_needed extern s#static_key nf_hooks_needed [ E#NFPROTO_NUMPROTO ] [ 8 ] 
t#nf_hookfn typedef unsigned int nf_hookfn ( unsigned int , s#sk_buff * , const s#net_device * , const s#net_device * , int ( * ) ( s#sk_buff * ) ) 
s#nf_hook_ops struct nf_hook_ops { s#list_head list ; t#nf_hookfn * hook ; s#module * owner ; t#u_int8_t pf ; unsigned int hooknum ; int priority ; } 
nf_register_hook int nf_register_hook ( s#nf_hook_ops * ) 
nf_unregister_hook void nf_unregister_hook ( s#nf_hook_ops * ) 
nf_register_hooks int nf_register_hooks ( s#nf_hook_ops * , unsigned int ) 
nf_unregister_hooks void nf_unregister_hooks ( s#nf_hook_ops * , unsigned int ) 
nf_hook_slow int nf_hook_slow ( t#u_int8_t , unsigned int , s#sk_buff * , s#net_device * , s#net_device * , int ( * ) ( s#sk_buff * ) , int ) 
skb_make_writable extern int skb_make_writable ( s#sk_buff * , unsigned int ) 
ip_ct_attach extern void ( * ip_ct_attach ) ( s#sk_buff * , const s#sk_buff * ) 
nf_ct_attach extern void nf_ct_attach ( s#sk_buff * , const s#sk_buff * ) 
nf_ct_destroy extern void ( * nf_ct_destroy ) ( s#nf_conntrack * ) 
nf_conntrack_destroy extern void nf_conntrack_destroy ( s#nf_conntrack * ) 
s##nf_conn
e##ip_conntrack_info
s#nfq_ct_hook struct nfq_ct_hook { t#size_t ( * build_size ) ( const s#nf_conn * ) ; int ( * build ) ( s#sk_buff * , s#nf_conn * ) ; int ( * parse ) ( const s#nlattr * , s#nf_conn * ) ; int ( * attach_expect ) ( const s#nlattr * , s#nf_conn * , t#u32 , t#u32 ) ; void ( * seq_adjust ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , t#s32 ) ; } 
nfq_ct_hook extern s#nfq_ct_hook * nfq_ct_hook 
s##nfq_ct_nat_hook
nfq_ct_nat_hook s#nfq_ct_nat_hook * nfq_ct_nat_hook 
nf_nat_decode_session_hook extern void ( * nf_nat_decode_session_hook ) ( s#sk_buff * , s#flowi * ) 

/* net/netfilter/ipset/ip_set_core.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s#xt_mtchk_param struct xt_mtchk_param { s#net * net ; const char * table ; const void * entryinfo ; const s#xt_match * match ; void * matchinfo ; unsigned int hook_mask ; t#u_int8_t family ; } 
s#xt_mtdtor_param struct xt_mtdtor_param { s#net * net ; const s#xt_match * match ; void * matchinfo ; t#u_int8_t family ; } 
s#xt_match struct xt_match { s#list_head list ; const char name [ 29 ] ; t#u_int8_t revision ; t#bool ( * match ) ( const s#sk_buff * , s#xt_action_param * ) ; int ( * checkentry ) ( const s#xt_mtchk_param * ) ; void ( * destroy ) ( const s#xt_mtdtor_param * ) ; void ( * compat_from_user ) ( void * , const void * ) ; int ( * compat_to_user ) ( void * , const void * ) ; s#module * me ; const char * table ; unsigned int matchsize ; unsigned int compatsize ; unsigned int hooks ; unsigned short proto ; unsigned short family ; } 
s#xt_tgchk_param struct xt_tgchk_param { s#net * net ; const char * table ; const void * entryinfo ; const s#xt_target * target ; void * targinfo ; unsigned int hook_mask ; t#u_int8_t family ; } 
s#xt_tgdtor_param struct xt_tgdtor_param { s#net * net ; const s#xt_target * target ; void * targinfo ; t#u_int8_t family ; } 
s#xt_target struct xt_target { s#list_head list ; const char name [ 29 ] ; t#u_int8_t revision ; unsigned int ( * target ) ( s#sk_buff * , const s#xt_action_param * ) ; int ( * checkentry ) ( const s#xt_tgchk_param * ) ; void ( * destroy ) ( const s#xt_tgdtor_param * ) ; void ( * compat_from_user ) ( void * , const void * ) ; int ( * compat_to_user ) ( void * , const void * ) ; s#module * me ; const char * table ; unsigned int targetsize ; unsigned int compatsize ; unsigned int hooks ; unsigned short proto ; unsigned short family ; } 
s#xt_action_param struct xt_action_param { union { const s#xt_match * match ; const s#xt_target * target ; } ; union { const void * matchinfo , * targinfo ; } ; const s#net_device * in , * out ; int fragoff ; unsigned int thoff ; unsigned int hooknum ; t#u_int8_t family ; t#bool hotdrop ; } 
E#IPSET_ADT_MAX 3 
e#ipset_adt enum ipset_adt { IPSET_ADD , IPSET_DEL , IPSET_TEST , IPSET_ADT_MAX , IPSET_CREATE = E#IPSET_ADT_MAX , IPSET_CADT_MAX , } 
s#ip_set_ext struct ip_set_ext { unsigned long timeout ; t#u64 packets ; t#u64 bytes ; } 
s#ip_set_adt_opt struct ip_set_adt_opt { t#u8 family ; t#u8 dim ; t#u8 flags ; t#u32 cmdflags ; s#ip_set_ext ext ; } 
t#ipset_adtfn typedef int ( * ipset_adtfn ) ( s#ip_set * , void * , const s#ip_set_ext * , s#ip_set_ext * , t#u32 ) 
s#ip_set_type_variant struct ip_set_type_variant { int ( * kadt ) ( s#ip_set * , const s#sk_buff * , const s#xt_action_param * , e#ipset_adt , s#ip_set_adt_opt * ) ; int ( * uadt ) ( s#ip_set * , s#nlattr * [ ] , e#ipset_adt , t#u32 * , t#u32 , t#bool ) ; t#ipset_adtfn adt [ E#IPSET_ADT_MAX ] ; int ( * resize ) ( s#ip_set * , t#bool ) ; void ( * destroy ) ( s#ip_set * ) ; void ( * flush ) ( s#ip_set * ) ; void ( * expire ) ( s#ip_set * ) ; int ( * head ) ( s#ip_set * , s#sk_buff * ) ; int ( * list ) ( const s#ip_set * , s#sk_buff * , s#netlink_callback * ) ; t#bool ( * same_set ) ( const s#ip_set * , const s#ip_set * ) ; } 
s#ip_set struct ip_set { char name [ 32 ] ; t#rwlock_t lock ; t#u32 ref ; s#ip_set_type * type ; const s#ip_set_type_variant * variant ; t#u8 family ; t#u8 revision ; t#u8 extensions ; void * data ; } 
E#__IPSET_ATTR_CREATE_MAX ( 16 ) + 11 
E#IPSET_ATTR_CADT_MAX 16 
E#__IPSET_ATTR_ADT_MAX ( E#IPSET_ATTR_CADT_MAX + 1 ) + 9 
s#ip_set_type struct ip_set_type { s#list_head list ; char name [ 32 ] ; t#u8 protocol ; t#u8 features ; t#u8 dimension ; t#u8 family ; t#u8 revision_min , revision_max ; int ( * create ) ( s#ip_set * , s#nlattr * [ ] , t#u32 ) ; const s#nla_policy create_policy [ ( E#__IPSET_ATTR_CREATE_MAX - 1 ) + 1 ] ; const s#nla_policy adt_policy [ ( E#__IPSET_ATTR_ADT_MAX - 1 ) + 1 ] ; s#module * me ; } 
ip_set_type_register extern int ip_set_type_register ( s#ip_set_type * ) 
ip_set_type_unregister extern void ip_set_type_unregister ( s#ip_set_type * ) 
ip_set_alloc extern void * ip_set_alloc ( t#size_t ) 
ip_set_free extern void ip_set_free ( void * ) 
ip_set_get_ipaddr4 extern int ip_set_get_ipaddr4 ( s#nlattr * , t#__be32 * ) 
ip_set_get_ipaddr6 extern int ip_set_get_ipaddr6 ( s#nlattr * , u#nf_inet_addr * ) 
ip_set_get_extensions extern int ip_set_get_extensions ( s#ip_set * , s#nlattr * [ ] , s#ip_set_ext * ) 
t#ip_set_id_t typedef t#__u16 ip_set_id_t 
ip_set_test extern int ip_set_test ( t#ip_set_id_t , const s#sk_buff * , const s#xt_action_param * , s#ip_set_adt_opt * ) 
ip_set_add extern int ip_set_add ( t#ip_set_id_t , const s#sk_buff * , const s#xt_action_param * , s#ip_set_adt_opt * ) 
ip_set_del extern int ip_set_del ( t#ip_set_id_t , const s#sk_buff * , const s#xt_action_param * , s#ip_set_adt_opt * ) 
ip_set_get_byname extern t#ip_set_id_t ip_set_get_byname ( const char * , s#ip_set * * ) 
ip_set_put_byindex extern void ip_set_put_byindex ( t#ip_set_id_t ) 
ip_set_name_byindex extern const char * ip_set_name_byindex ( t#ip_set_id_t ) 
ip_set_nfnl_get extern t#ip_set_id_t ip_set_nfnl_get ( const char * ) 
ip_set_nfnl_get_byindex extern t#ip_set_id_t ip_set_nfnl_get_byindex ( t#ip_set_id_t ) 
ip_set_nfnl_put extern void ip_set_nfnl_put ( t#ip_set_id_t ) 

/* net/netfilter/ipset/ip_set_getport.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
ip_set_get_ip4_port extern t#bool ip_set_get_ip4_port ( const s#sk_buff * , t#bool , t#__be16 * , t#u8 * ) 
ip_set_get_ip6_port extern t#bool ip_set_get_ip6_port ( const s#sk_buff * , t#bool , t#__be16 * , t#u8 * ) 
ip_set_get_ip_port extern t#bool ip_set_get_ip_port ( const s#sk_buff * , t#u8 , t#bool , t#__be16 * ) 

/* net/netfilter/ipset/pfxlen.o */
ip_set_netmask_map extern const u#nf_inet_addr ip_set_netmask_map [ ] 
ip_set_hostmask_map extern const u#nf_inet_addr ip_set_hostmask_map [ ] 
ip_set_range_to_cidr extern t#u32 ip_set_range_to_cidr ( t#u32 , t#u32 , t#u8 * ) 

/* net/netfilter/ipvs/ip_vs_app.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s#ip_vs_stats_user struct ip_vs_stats_user { t#__u32 conns ; t#__u32 inpkts ; t#__u32 outpkts ; t#__u64 inbytes ; t#__u64 outbytes ; t#__u32 cps ; t#__u32 inpps ; t#__u32 outpps ; t#__u32 inbps ; t#__u32 outbps ; } 
s#ip_vs_estimator struct ip_vs_estimator { s#list_head list ; t#u64 last_inbytes ; t#u64 last_outbytes ; t#u32 last_conns ; t#u32 last_inpkts ; t#u32 last_outpkts ; t#u32 cps ; t#u32 inpps ; t#u32 outpps ; t#u32 inbps ; t#u32 outbps ; } 
s#ip_vs_counters struct ip_vs_counters { t#__u32 conns ; t#__u32 inpkts ; t#__u32 outpkts ; t#__u64 inbytes ; t#__u64 outbytes ; } 
s#ip_vs_cpu_stats struct ip_vs_cpu_stats { s#ip_vs_counters ustats ; s#u64_stats_sync syncp ; } 
s#ip_vs_stats struct ip_vs_stats { s#ip_vs_stats_user ustats ; s#ip_vs_estimator est ; s#ip_vs_cpu_stats * cpustats ; t#spinlock_t lock ; s#ip_vs_stats_user ustats0 ; } 
s#ip_vs_dest_dst struct ip_vs_dest_dst { s#dst_entry * dst_cache ; t#u32 dst_cookie ; u#nf_inet_addr dst_saddr ; s#callback_head callback_head ; } 
s#ip_vs_iphdr struct ip_vs_iphdr { t#__u32 len ; t#__u16 fragoffs ; t#__s16 protocol ; t#__s32 flags ; u#nf_inet_addr saddr ; u#nf_inet_addr daddr ; } 
s#ip_vs_scheduler struct ip_vs_scheduler { s#list_head n_list ; char * name ; t#atomic_t refcnt ; s#module * module ; int ( * init_service ) ( s#ip_vs_service * ) ; void ( * done_service ) ( s#ip_vs_service * ) ; int ( * add_dest ) ( s#ip_vs_service * , s#ip_vs_dest * ) ; int ( * del_dest ) ( s#ip_vs_service * , s#ip_vs_dest * ) ; int ( * upd_dest ) ( s#ip_vs_service * , s#ip_vs_dest * ) ; s#ip_vs_dest * ( * schedule ) ( s#ip_vs_service * , const s#sk_buff * , s#ip_vs_iphdr * ) ; } 
s#ip_vs_conn_param struct ip_vs_conn_param { s#net * net ; const u#nf_inet_addr * caddr ; const u#nf_inet_addr * vaddr ; t#__be16 cport ; t#__be16 vport ; t#__u16 protocol ; t#u16 af ; const s#ip_vs_pe * pe ; char * pe_data ; t#__u8 pe_data_len ; } 
s#ip_vs_pe struct ip_vs_pe { s#list_head n_list ; char * name ; t#atomic_t refcnt ; s#module * module ; int ( * fill_param ) ( s#ip_vs_conn_param * , s#sk_buff * ) ; t#bool ( * ct_match ) ( const s#ip_vs_conn_param * , s#ip_vs_conn * ) ; t#u32 ( * hashkey_raw ) ( const s#ip_vs_conn_param * , t#u32 , t#bool ) ; int ( * show_pe_data ) ( const s#ip_vs_conn * , char * ) ; } 
s#ip_vs_service struct ip_vs_service { s#hlist_node s_list ; s#hlist_node f_list ; t#atomic_t refcnt ; t#u16 af ; t#__u16 protocol ; u#nf_inet_addr addr ; t#__be16 port ; t#__u32 fwmark ; unsigned int flags ; unsigned int timeout ; t#__be32 netmask ; s#net * net ; s#list_head destinations ; t#__u32 num_dests ; s#ip_vs_stats stats ; s#ip_vs_scheduler * scheduler ; t#spinlock_t sched_lock ; void * sched_data ; s#ip_vs_pe * pe ; s#callback_head callback_head ; } 
s#ip_vs_dest struct ip_vs_dest { s#list_head n_list ; s#hlist_node d_list ; t#u16 af ; t#__be16 port ; u#nf_inet_addr addr ; volatile unsigned int flags ; t#atomic_t conn_flags ; t#atomic_t weight ; t#atomic_t refcnt ; s#ip_vs_stats stats ; unsigned long idle_start ; t#atomic_t activeconns ; t#atomic_t inactconns ; t#atomic_t persistconns ; t#__u32 u_threshold ; t#__u32 l_threshold ; t#spinlock_t dst_lock ; s#ip_vs_dest_dst * dest_dst ; s#ip_vs_service * svc ; t#__u16 protocol ; t#__be16 vport ; u#nf_inet_addr vaddr ; t#__u32 vfwmark ; s#list_head t_list ; unsigned int in_rs_table : 1 ; } 
s#ip_vs_seq struct ip_vs_seq { t#__u32 init_seq ; t#__u32 delta ; t#__u32 previous_delta ; } 
s#ip_vs_conn struct ip_vs_conn { s#hlist_node c_list ; t#__be16 cport ; t#__be16 dport ; t#__be16 vport ; t#u16 af ; u#nf_inet_addr caddr ; u#nf_inet_addr vaddr ; u#nf_inet_addr daddr ; volatile t#__u32 flags ; t#__u16 protocol ; s#net * net ; t#atomic_t refcnt ; s#timer_list timer ; volatile unsigned long timeout ; t#spinlock_t lock ; volatile t#__u16 state ; volatile t#__u16 old_state ; t#__u32 fwmark ; unsigned long sync_endtime ; s#ip_vs_conn * control ; t#atomic_t n_control ; s#ip_vs_dest * dest ; t#atomic_t in_pkts ; int ( * packet_xmit ) ( s#sk_buff * , s#ip_vs_conn * , s#ip_vs_protocol * , s#ip_vs_iphdr * ) ; s#ip_vs_app * app ; void * app_data ; s#ip_vs_seq in_seq ; s#ip_vs_seq out_seq ; const s#ip_vs_pe * pe ; char * pe_data ; t#__u8 pe_data_len ; s#callback_head callback_head ; } 
s#ip_vs_protocol struct ip_vs_protocol { s#ip_vs_protocol * next ; char * name ; t#u16 protocol ; t#u16 num_states ; int dont_defrag ; void ( * init ) ( s#ip_vs_protocol * ) ; void ( * exit ) ( s#ip_vs_protocol * ) ; int ( * init_netns ) ( s#net * , s#ip_vs_proto_data * ) ; void ( * exit_netns ) ( s#net * , s#ip_vs_proto_data * ) ; int ( * conn_schedule ) ( int , s#sk_buff * , s#ip_vs_proto_data * , int * , s#ip_vs_conn * * , s#ip_vs_iphdr * ) ; s#ip_vs_conn * ( * conn_in_get ) ( int , const s#sk_buff * , const s#ip_vs_iphdr * , int ) ; s#ip_vs_conn * ( * conn_out_get ) ( int , const s#sk_buff * , const s#ip_vs_iphdr * , int ) ; int ( * snat_handler ) ( s#sk_buff * , s#ip_vs_protocol * , s#ip_vs_conn * , s#ip_vs_iphdr * ) ; int ( * dnat_handler ) ( s#sk_buff * , s#ip_vs_protocol * , s#ip_vs_conn * , s#ip_vs_iphdr * ) ; int ( * csum_check ) ( int , s#sk_buff * , s#ip_vs_protocol * ) ; const char * ( * state_name ) ( int ) ; void ( * state_transition ) ( s#ip_vs_conn * , int , const s#sk_buff * , s#ip_vs_proto_data * ) ; int ( * register_app ) ( s#net * , s#ip_vs_app * ) ; void ( * unregister_app ) ( s#net * , s#ip_vs_app * ) ; int ( * app_conn_bind ) ( s#ip_vs_conn * ) ; void ( * debug_packet ) ( int , s#ip_vs_protocol * , const s#sk_buff * , int , const char * ) ; void ( * timeout_change ) ( s#ip_vs_proto_data * , int ) ; } 
s##tcp_states_t
s#ip_vs_proto_data struct ip_vs_proto_data { s#ip_vs_proto_data * next ; s#ip_vs_protocol * pp ; int * timeout_table ; t#atomic_t appcnt ; s#tcp_states_t * tcp_state_table ; } 
s##ip_vs_sync_buff
s#ipvs_master_sync_state struct ipvs_master_sync_state { s#list_head sync_queue ; s#ip_vs_sync_buff * sync_buff ; unsigned long sync_queue_len ; unsigned int sync_queue_delay ; s#task_struct * master_thread ; s#delayed_work master_wakeup_work ; s#netns_ipvs * ipvs ; } 
s#netns_ipvs struct netns_ipvs { int gen ; int enable ; s#hlist_head rs_table [ ( 1 << 4 ) ] ; s#list_head app_list ; s#ip_vs_proto_data * proto_data_table [ 32 ] ; s#list_head tcp_apps [ ( 1 << 4 ) ] ; s#list_head udp_apps [ ( 1 << 4 ) ] ; s#list_head sctp_apps [ ( 1 << 4 ) ] ; t#atomic_t conn_count ; s#ip_vs_stats tot_stats ; int num_services ; s#list_head dest_trash ; t#spinlock_t dest_trash_lock ; s#timer_list dest_trash_timer ; t#atomic_t ftpsvc_counter ; t#atomic_t nullsvc_counter ; s#delayed_work defense_work ; int drop_rate ; int drop_counter ; t#atomic_t dropentry ; t#spinlock_t dropentry_lock ; t#spinlock_t droppacket_lock ; t#spinlock_t securetcp_lock ; s#ctl_table_header * sysctl_hdr ; s#ctl_table * sysctl_tbl ; int sysctl_amemthresh ; int sysctl_am_droprate ; int sysctl_drop_entry ; int sysctl_drop_packet ; int sysctl_secure_tcp ; int sysctl_conntrack ; int sysctl_snat_reroute ; int sysctl_sync_ver ; int sysctl_sync_ports ; int sysctl_sync_persist_mode ; unsigned long sysctl_sync_qlen_max ; int sysctl_sync_sock_size ; int sysctl_cache_bypass ; int sysctl_expire_nodest_conn ; int sysctl_sloppy_tcp ; int sysctl_sloppy_sctp ; int sysctl_expire_quiescent_template ; int sysctl_sync_threshold [ 2 ] ; unsigned int sysctl_sync_refresh_period ; int sysctl_sync_retries ; int sysctl_nat_icmp_send ; int sysctl_pmtu_disc ; int sysctl_backup_only ; int sysctl_lblc_expiration ; s#ctl_table_header * lblc_ctl_header ; s#ctl_table * lblc_ctl_table ; int sysctl_lblcr_expiration ; s#ctl_table_header * lblcr_ctl_header ; s#ctl_table * lblcr_ctl_table ; s#list_head est_list ; t#spinlock_t est_lock ; s#timer_list est_timer ; t#spinlock_t sync_lock ; s#ipvs_master_sync_state * ms ; t#spinlock_t sync_buff_lock ; s#task_struct * * backup_threads ; int threads_mask ; int send_mesg_maxlen ; int recv_mesg_maxlen ; volatile int sync_state ; volatile int master_syncid ; volatile int backup_syncid ; s#mutex sync_mutex ; char master_mcast_ifn [ 16 ] ; char backup_mcast_ifn [ 16 ] ; s#net * net ; } 
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s#ip_vs_app struct ip_vs_app { s#list_head a_list ; int type ; char * name ; t#__u16 protocol ; s#module * module ; s#list_head incs_list ; s#list_head p_list ; s#ip_vs_app * app ; t#__be16 port ; t#atomic_t usecnt ; s#callback_head callback_head ; int ( * pkt_out ) ( s#ip_vs_app * , s#ip_vs_conn * , s#sk_buff * , int * ) ; int ( * pkt_in ) ( s#ip_vs_app * , s#ip_vs_conn * , s#sk_buff * , int * ) ; int ( * init_conn ) ( s#ip_vs_app * , s#ip_vs_conn * ) ; int ( * done_conn ) ( s#ip_vs_app * , s#ip_vs_conn * ) ; int ( * bind_conn ) ( s#ip_vs_app * , s#ip_vs_conn * , s#ip_vs_protocol * ) ; void ( * unbind_conn ) ( s#ip_vs_app * , s#ip_vs_conn * ) ; int * timeout_table ; int * timeouts ; int timeouts_size ; int ( * conn_schedule ) ( s#sk_buff * , s#ip_vs_app * , int * , s#ip_vs_conn * * ) ; s#ip_vs_conn * ( * conn_in_get ) ( const s#sk_buff * , s#ip_vs_app * , const s#iphdr * , int ) ; s#ip_vs_conn * ( * conn_out_get ) ( const s#sk_buff * , s#ip_vs_app * , const s#iphdr * , int ) ; int ( * state_transition ) ( s#ip_vs_conn * , int , const s#sk_buff * , s#ip_vs_app * ) ; void ( * timeout_change ) ( s#ip_vs_app * , int ) ; } 
register_ip_vs_app extern s#ip_vs_app * register_ip_vs_app ( s#net * , s#ip_vs_app * ) 
unregister_ip_vs_app extern void unregister_ip_vs_app ( s#net * , s#ip_vs_app * ) 
register_ip_vs_app_inc extern int register_ip_vs_app_inc ( s#net * , s#ip_vs_app * , t#__u16 , t#__u16 ) 

/* net/netfilter/ipvs/ip_vs_conn.o */
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##dn_route
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##tcp_states_t
s##ip_vs_sync_buff
ip_vs_conn_in_get_proto s#ip_vs_conn * ip_vs_conn_in_get_proto ( int , const s#sk_buff * , const s#ip_vs_iphdr * , int ) 
ip_vs_conn_out_get_proto s#ip_vs_conn * ip_vs_conn_out_get_proto ( int , const s#sk_buff * , const s#ip_vs_iphdr * , int ) 

/* net/netfilter/ipvs/ip_vs_core.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##tcp_states_t
s##ip_vs_sync_buff
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
register_ip_vs_scheduler extern int register_ip_vs_scheduler ( s#ip_vs_scheduler * ) 
unregister_ip_vs_scheduler extern int unregister_ip_vs_scheduler ( s#ip_vs_scheduler * ) 
ip_vs_proto_name extern const char * ip_vs_proto_name ( unsigned int ) 
ip_vs_conn_new s#ip_vs_conn * ip_vs_conn_new ( const s#ip_vs_conn_param * , const u#nf_inet_addr * , t#__be16 , unsigned int , s#ip_vs_dest * , t#__u32 ) 
ip_vs_conn_in_get s#ip_vs_conn * ip_vs_conn_in_get ( const s#ip_vs_conn_param * ) 
ip_vs_conn_out_get s#ip_vs_conn * ip_vs_conn_out_get ( const s#ip_vs_conn_param * ) 
ip_vs_tcp_conn_listen extern void ip_vs_tcp_conn_listen ( s#net * , s#ip_vs_conn * ) 
ip_vs_conn_put extern void ip_vs_conn_put ( s#ip_vs_conn * ) 

/* net/netfilter/ipvs/ip_vs_nfct.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##tcp_states_t
s##ip_vs_sync_buff
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
ip_vs_nfct_expect_related extern void ip_vs_nfct_expect_related ( s#sk_buff * , s#nf_conn * , s#ip_vs_conn * , t#u_int8_t , const t#__be16 , int ) 

/* net/netfilter/ipvs/ip_vs_pe.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##tcp_states_t
s##ip_vs_sync_buff
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
register_ip_vs_pe int register_ip_vs_pe ( s#ip_vs_pe * ) 
unregister_ip_vs_pe int unregister_ip_vs_pe ( s#ip_vs_pe * ) 

/* net/netfilter/ipvs/ip_vs_proto.o */
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##dn_route
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##tcp_states_t
s##ip_vs_sync_buff
ip_vs_proto_get extern s#ip_vs_protocol * ip_vs_proto_get ( unsigned short ) 
ip_vs_proto_data_get extern s#ip_vs_proto_data * ip_vs_proto_data_get ( s#net * , unsigned short ) 

/* net/netfilter/ipvs/ip_vs_sched.o */
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##dn_route
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##tcp_states_t
s##ip_vs_sync_buff
ip_vs_scheduler_err extern void ip_vs_scheduler_err ( s#ip_vs_service * , const char * ) 

/* net/netfilter/nf_conntrack_acct.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
seq_print_acct extern unsigned int seq_print_acct ( s#seq_file * , const s#nf_conn * , int ) 

/* net/netfilter/nf_conntrack_broadcast.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
nf_conntrack_broadcast_help extern int nf_conntrack_broadcast_help ( s#sk_buff * , unsigned int , s#nf_conn * , e#ip_conntrack_info , unsigned int ) 

/* net/netfilter/nf_conntrack_core.o */
s##tvec_base
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
e#nf_nat_manip_type enum nf_nat_manip_type { NF_NAT_MANIP_SRC , NF_NAT_MANIP_DST } 
nfnetlink_parse_nat_setup_hook extern int ( * nfnetlink_parse_nat_setup_hook ) ( s#nf_conn * , e#nf_nat_manip_type , const s#nlattr * ) 
nf_nat_seq_adjust_hook int ( * nf_nat_seq_adjust_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned int ) 
nf_conntrack_lock extern t#spinlock_t nf_conntrack_lock 
nf_conntrack_htable_size extern unsigned int nf_conntrack_htable_size 
nf_conntrack_max extern unsigned int nf_conntrack_max 
nf_conntrack_untracked extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( s#nf_conn ) nf_conntrack_untracked 
nf_conntrack_hash_rnd extern unsigned int nf_conntrack_hash_rnd 
s#nf_conntrack_l3proto struct nf_conntrack_l3proto { t#u_int16_t l3proto ; const char * name ; t#bool ( * pkt_to_tuple ) ( const s#sk_buff * , unsigned int , s#nf_conntrack_tuple * ) ; t#bool ( * invert_tuple ) ( s#nf_conntrack_tuple * , const s#nf_conntrack_tuple * ) ; int ( * print_tuple ) ( s#seq_file * , const s#nf_conntrack_tuple * ) ; int ( * get_l4proto ) ( const s#sk_buff * , unsigned int , unsigned int * , t#u_int8_t * ) ; int ( * tuple_to_nlattr ) ( s#sk_buff * , const s#nf_conntrack_tuple * ) ; int ( * nlattr_tuple_size ) ( void ) ; int ( * nlattr_to_tuple ) ( s#nlattr * [ ] , s#nf_conntrack_tuple * ) ; const s#nla_policy * nla_policy ; t#size_t nla_size ; const char * ctl_table_path ; int ( * init_net ) ( s#net * ) ; s#module * me ; } 
s#nf_conntrack_l4proto struct nf_conntrack_l4proto { t#u_int16_t l3proto ; t#u_int8_t l4proto ; t#bool ( * pkt_to_tuple ) ( const s#sk_buff * , unsigned int , s#nf_conntrack_tuple * ) ; t#bool ( * invert_tuple ) ( s#nf_conntrack_tuple * , const s#nf_conntrack_tuple * ) ; int ( * packet ) ( s#nf_conn * , const s#sk_buff * , unsigned int , e#ip_conntrack_info , t#u_int8_t , unsigned int , unsigned int * ) ; t#bool ( * new ) ( s#nf_conn * , const s#sk_buff * , unsigned int , unsigned int * ) ; void ( * destroy ) ( s#nf_conn * ) ; int ( * error ) ( s#net * , s#nf_conn * , s#sk_buff * , unsigned int , e#ip_conntrack_info * , t#u_int8_t , unsigned int ) ; int ( * print_tuple ) ( s#seq_file * , const s#nf_conntrack_tuple * ) ; int ( * print_conntrack ) ( s#seq_file * , s#nf_conn * ) ; unsigned int * ( * get_timeouts ) ( s#net * ) ; int ( * to_nlattr ) ( s#sk_buff * , s#nlattr * , s#nf_conn * ) ; int ( * nlattr_size ) ( void ) ; int ( * from_nlattr ) ( s#nlattr * [ ] , s#nf_conn * ) ; int ( * tuple_to_nlattr ) ( s#sk_buff * , const s#nf_conntrack_tuple * ) ; int ( * nlattr_tuple_size ) ( void ) ; int ( * nlattr_to_tuple ) ( s#nlattr * [ ] , s#nf_conntrack_tuple * ) ; const s#nla_policy * nla_policy ; t#size_t nla_size ; int * net_id ; int ( * init_net ) ( s#net * , t#u_int16_t ) ; s#nf_proto_net * ( * get_net_proto ) ( s#net * ) ; const char * name ; s#module * me ; } 
nf_ct_get_tuple extern t#bool nf_ct_get_tuple ( const s#sk_buff * , unsigned int , unsigned int , t#u_int16_t , t#u_int8_t , s#nf_conntrack_tuple * , const s#nf_conntrack_l3proto * , const s#nf_conntrack_l4proto * ) 
nf_ct_get_tuplepr extern t#bool nf_ct_get_tuplepr ( const s#sk_buff * , unsigned int , t#u_int16_t , s#nf_conntrack_tuple * ) 
nf_ct_invert_tuple extern t#bool nf_ct_invert_tuple ( s#nf_conntrack_tuple * , const s#nf_conntrack_tuple * , const s#nf_conntrack_l3proto * , const s#nf_conntrack_l4proto * ) 
nf_ct_delete t#bool nf_ct_delete ( s#nf_conn * , t#u32 , int ) 
__nf_conntrack_find extern s#nf_conntrack_tuple_hash * __nf_conntrack_find ( s#net * , t#u16 , const s#nf_conntrack_tuple * ) 
nf_conntrack_find_get extern s#nf_conntrack_tuple_hash * nf_conntrack_find_get ( s#net * , t#u16 , const s#nf_conntrack_tuple * ) 
nf_conntrack_hash_check_insert extern int nf_conntrack_hash_check_insert ( s#nf_conn * ) 
__nf_conntrack_confirm extern int __nf_conntrack_confirm ( s#sk_buff * ) 
nf_conntrack_tuple_taken extern int nf_conntrack_tuple_taken ( const s#nf_conntrack_tuple * , const s#nf_conn * ) 
nf_conntrack_alloc extern s#nf_conn * nf_conntrack_alloc ( s#net * , t#u16 , const s#nf_conntrack_tuple * , const s#nf_conntrack_tuple * , t#gfp_t ) 
nf_conntrack_free extern void nf_conntrack_free ( s#nf_conn * ) 
nf_conntrack_in extern unsigned int nf_conntrack_in ( s#net * , t#u_int8_t , unsigned int , s#sk_buff * ) 
nf_ct_invert_tuplepr extern t#bool nf_ct_invert_tuplepr ( s#nf_conntrack_tuple * , const s#nf_conntrack_tuple * ) 
nf_conntrack_alter_reply extern void nf_conntrack_alter_reply ( s#nf_conn * , const s#nf_conntrack_tuple * ) 
__nf_ct_refresh_acct extern void __nf_ct_refresh_acct ( s#nf_conn * , e#ip_conntrack_info , const s#sk_buff * , unsigned long , int ) 
__nf_ct_kill_acct extern t#bool __nf_ct_kill_acct ( s#nf_conn * , e#ip_conntrack_info , const s#sk_buff * , int ) 
nf_ct_port_tuple_to_nlattr extern int nf_ct_port_tuple_to_nlattr ( s#sk_buff * , const s#nf_conntrack_tuple * ) 
nf_ct_port_nla_policy extern const s#nla_policy nf_ct_port_nla_policy [ ] 
nf_ct_port_nlattr_to_tuple extern int nf_ct_port_nlattr_to_tuple ( s#nlattr * [ ] , s#nf_conntrack_tuple * ) 
nf_ct_port_nlattr_tuple_size extern int nf_ct_port_nlattr_tuple_size ( void ) 
nf_ct_iterate_cleanup extern void nf_ct_iterate_cleanup ( s#net * , int ( * ) ( s#nf_conn * , void * ) , void * , t#u32 , int ) 
nf_ct_free_hashtable extern void nf_ct_free_hashtable ( void * , unsigned int ) 
nf_conntrack_flush_report extern void nf_conntrack_flush_report ( s#net * , t#u32 , int ) 
nf_ct_alloc_hashtable extern void * nf_ct_alloc_hashtable ( unsigned int * , int ) 
nf_conntrack_set_hashsize extern int nf_conntrack_set_hashsize ( const char * , s#kernel_param * ) 
nf_ct_untracked_status_or extern void nf_ct_untracked_status_or ( unsigned long ) 

/* net/netfilter/nf_conntrack_expect.o */
nf_ct_expect_hsize extern unsigned int nf_ct_expect_hsize 
s#nf_conntrack_tuple_mask struct nf_conntrack_tuple_mask { struct { u#nf_inet_addr u3 ; u#nf_conntrack_man_proto u ; } src ; } 
s##tvec_base
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s#nf_conntrack_expect_policy struct nf_conntrack_expect_policy { unsigned int max_expected ; unsigned int timeout ; char name [ 16 ] ; } 
s#nf_conntrack_helper struct nf_conntrack_helper { s#hlist_node hnode ; char name [ 16 ] ; s#module * me ; const s#nf_conntrack_expect_policy * expect_policy ; t#size_t data_len ; s#nf_conntrack_tuple tuple ; int ( * help ) ( s#sk_buff * , unsigned int , s#nf_conn * , e#ip_conntrack_info ) ; void ( * destroy ) ( s#nf_conn * ) ; int ( * from_nlattr ) ( s#nlattr * , s#nf_conn * ) ; int ( * to_nlattr ) ( s#sk_buff * , const s#nf_conn * ) ; unsigned int expect_class_max ; unsigned int flags ; unsigned int queue_num ; } 
e#ip_conntrack_dir enum ip_conntrack_dir { IP_CT_DIR_ORIGINAL , IP_CT_DIR_REPLY , IP_CT_DIR_MAX } 
s#nf_conntrack_expect struct nf_conntrack_expect { s#hlist_node lnode ; s#hlist_node hnode ; s#nf_conntrack_tuple tuple ; s#nf_conntrack_tuple_mask mask ; void ( * expectfn ) ( s#nf_conn * , s#nf_conntrack_expect * ) ; s#nf_conntrack_helper * helper ; s#nf_conn * master ; s#timer_list timeout ; t#atomic_t use ; unsigned int flags ; unsigned int class ; u#nf_inet_addr saved_addr ; u#nf_conntrack_man_proto saved_proto ; e#ip_conntrack_dir dir ; s#callback_head rcu ; } 
nf_ct_unlink_expect_report void nf_ct_unlink_expect_report ( s#nf_conntrack_expect * , t#u32 , int ) 
__nf_ct_expect_find s#nf_conntrack_expect * __nf_ct_expect_find ( s#net * , t#u16 , const s#nf_conntrack_tuple * ) 
nf_ct_expect_find_get s#nf_conntrack_expect * nf_ct_expect_find_get ( s#net * , t#u16 , const s#nf_conntrack_tuple * ) 
nf_ct_remove_expectations void nf_ct_remove_expectations ( s#nf_conn * ) 
nf_ct_unexpect_related void nf_ct_unexpect_related ( s#nf_conntrack_expect * ) 
nf_ct_expect_alloc s#nf_conntrack_expect * nf_ct_expect_alloc ( s#nf_conn * ) 
nf_ct_expect_init void nf_ct_expect_init ( s#nf_conntrack_expect * , unsigned int , t#u_int8_t , const u#nf_inet_addr * , const u#nf_inet_addr * , t#u_int8_t , const t#__be16 * , const t#__be16 * ) 
nf_ct_expect_put void nf_ct_expect_put ( s#nf_conntrack_expect * ) 
nf_ct_expect_related_report int nf_ct_expect_related_report ( s#nf_conntrack_expect * , t#u32 , int ) 

/* net/netfilter/nf_conntrack_extend.o */
s##tvec_base
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
__nf_ct_ext_destroy extern void __nf_ct_ext_destroy ( s#nf_conn * ) 
e#nf_ct_ext_id enum nf_ct_ext_id { NF_CT_EXT_HELPER , NF_CT_EXT_NAT , NF_CT_EXT_SEQADJ , NF_CT_EXT_ACCT , NF_CT_EXT_NUM , } 
__nf_ct_ext_add_length void * __nf_ct_ext_add_length ( s#nf_conn * , e#nf_ct_ext_id , t#size_t , t#gfp_t ) 
s#nf_ct_ext_type struct nf_ct_ext_type { void ( * destroy ) ( s#nf_conn * ) ; void ( * move ) ( void * , void * ) ; e#nf_ct_ext_id id ; unsigned int flags ; t#u8 len ; t#u8 align ; t#u8 alloc_size ; } 
nf_ct_extend_register int nf_ct_extend_register ( s#nf_ct_ext_type * ) 
nf_ct_extend_unregister void nf_ct_extend_unregister ( s#nf_ct_ext_type * ) 

/* net/netfilter/nf_conntrack_ftp.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
e#nf_ct_ftp_type enum nf_ct_ftp_type { NF_CT_FTP_PORT , NF_CT_FTP_PASV , NF_CT_FTP_EPRT , NF_CT_FTP_EPSV , } 
nf_nat_ftp_hook extern unsigned int ( * nf_nat_ftp_hook ) ( s#sk_buff * , e#ip_conntrack_info , e#nf_ct_ftp_type , unsigned int , unsigned int , unsigned int , s#nf_conntrack_expect * ) 

/* net/netfilter/nf_conntrack_helper.o */
nf_ct_helper_hash extern s#hlist_head * nf_ct_helper_hash 
nf_ct_helper_hsize extern unsigned int nf_ct_helper_hsize 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
__nf_conntrack_helper_find extern s#nf_conntrack_helper * __nf_conntrack_helper_find ( const char * , t#u16 , t#u8 ) 
nf_conntrack_helper_try_module_get extern s#nf_conntrack_helper * nf_conntrack_helper_try_module_get ( const char * , t#u16 , t#u8 ) 
s#nf_conn_help struct nf_conn_help { s#nf_conntrack_helper * helper ; s#hlist_head expectations ; t#u8 expecting [ 4 ] ; char data [ ] ; } 
nf_ct_helper_ext_add extern s#nf_conn_help * nf_ct_helper_ext_add ( s#nf_conn * , s#nf_conntrack_helper * , t#gfp_t ) 
__nf_ct_try_assign_helper extern int __nf_ct_try_assign_helper ( s#nf_conn * , s#nf_conn * , t#gfp_t ) 
s#nf_ct_helper_expectfn struct nf_ct_helper_expectfn { s#list_head head ; const char * name ; void ( * expectfn ) ( s#nf_conn * , s#nf_conntrack_expect * ) ; } 
nf_ct_helper_expectfn_register void nf_ct_helper_expectfn_register ( s#nf_ct_helper_expectfn * ) 
nf_ct_helper_expectfn_unregister void nf_ct_helper_expectfn_unregister ( s#nf_ct_helper_expectfn * ) 
nf_ct_helper_expectfn_find_by_name s#nf_ct_helper_expectfn * nf_ct_helper_expectfn_find_by_name ( const char * ) 
nf_ct_helper_expectfn_find_by_symbol s#nf_ct_helper_expectfn * nf_ct_helper_expectfn_find_by_symbol ( const void * ) 
nf_ct_helper_log __attribute__ ( ( format ( printf , 3 , 4 ) ) ) void nf_ct_helper_log ( s#sk_buff * , const s#nf_conn * , const char * , ... ) 
nf_conntrack_helper_register extern int nf_conntrack_helper_register ( s#nf_conntrack_helper * ) 
nf_conntrack_helper_unregister extern void nf_conntrack_helper_unregister ( s#nf_conntrack_helper * ) 

/* net/netfilter/nf_conntrack_irc.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
nf_nat_irc_hook extern unsigned int ( * nf_nat_irc_hook ) ( s#sk_buff * , e#ip_conntrack_info , unsigned int , unsigned int , unsigned int , s#nf_conntrack_expect * ) 

/* net/netfilter/nf_conntrack_l3proto_generic.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
nf_conntrack_l3proto_generic extern s#nf_conntrack_l3proto nf_conntrack_l3proto_generic 

/* net/netfilter/nf_conntrack_proto.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
nf_ct_l3protos extern s#nf_conntrack_l3proto * nf_ct_l3protos [ 41 ] 
__nf_ct_l4proto_find extern s#nf_conntrack_l4proto * __nf_ct_l4proto_find ( t#u_int16_t , t#u_int8_t ) 
nf_ct_l3proto_find_get extern s#nf_conntrack_l3proto * nf_ct_l3proto_find_get ( t#u_int16_t ) 
nf_ct_l3proto_put extern void nf_ct_l3proto_put ( s#nf_conntrack_l3proto * ) 
nf_ct_l3proto_try_module_get extern int nf_ct_l3proto_try_module_get ( unsigned short ) 
nf_ct_l3proto_module_put extern void nf_ct_l3proto_module_put ( unsigned short ) 
nf_ct_l4proto_find_get extern s#nf_conntrack_l4proto * nf_ct_l4proto_find_get ( t#u_int16_t , t#u_int8_t ) 
nf_ct_l4proto_put extern void nf_ct_l4proto_put ( s#nf_conntrack_l4proto * ) 
nf_ct_l3proto_register extern int nf_ct_l3proto_register ( s#nf_conntrack_l3proto * ) 
nf_ct_l3proto_pernet_register extern int nf_ct_l3proto_pernet_register ( s#net * , s#nf_conntrack_l3proto * ) 
nf_ct_l3proto_unregister extern void nf_ct_l3proto_unregister ( s#nf_conntrack_l3proto * ) 
nf_ct_l3proto_pernet_unregister extern void nf_ct_l3proto_pernet_unregister ( s#net * , s#nf_conntrack_l3proto * ) 
nf_ct_l4proto_register extern int nf_ct_l4proto_register ( s#nf_conntrack_l4proto * ) 
nf_ct_l4proto_pernet_register extern int nf_ct_l4proto_pernet_register ( s#net * , s#nf_conntrack_l4proto * ) 
nf_ct_l4proto_unregister extern void nf_ct_l4proto_unregister ( s#nf_conntrack_l4proto * ) 
nf_ct_l4proto_pernet_unregister extern void nf_ct_l4proto_pernet_unregister ( s#net * , s#nf_conntrack_l4proto * ) 

/* net/netfilter/nf_conntrack_proto_tcp.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
nf_conntrack_l4proto_tcp4 extern s#nf_conntrack_l4proto nf_conntrack_l4proto_tcp4 
nf_conntrack_l4proto_tcp6 extern s#nf_conntrack_l4proto nf_conntrack_l4proto_tcp6 

/* net/netfilter/nf_conntrack_proto_udp.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
nf_conntrack_l4proto_udp4 extern s#nf_conntrack_l4proto nf_conntrack_l4proto_udp4 
nf_conntrack_l4proto_udp6 extern s#nf_conntrack_l4proto nf_conntrack_l4proto_udp6 

/* net/netfilter/nf_conntrack_seqadj.o */
s##tvec_base
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##module
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##iw_handler_def
s##iw_public_data
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##dn_route
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
nf_ct_seqadj_init extern int nf_ct_seqadj_init ( s#nf_conn * , e#ip_conntrack_info , t#s32 ) 
nf_ct_seqadj_set extern int nf_ct_seqadj_set ( s#nf_conn * , e#ip_conntrack_info , t#__be32 , t#s32 ) 
nf_ct_tcp_seqadj_set extern void nf_ct_tcp_seqadj_set ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , t#s32 ) 
nf_ct_seq_adjust extern int nf_ct_seq_adjust ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned int ) 
nf_ct_seq_offset extern t#s32 nf_ct_seq_offset ( const s#nf_conn * , e#ip_conntrack_dir , t#u32 ) 

/* net/netfilter/nf_conntrack_sip.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
nf_nat_sip_hook extern unsigned int ( * nf_nat_sip_hook ) ( s#sk_buff * , unsigned int , unsigned int , const char * * , unsigned int * ) 
nf_nat_sip_seq_adjust_hook extern void ( * nf_nat_sip_seq_adjust_hook ) ( s#sk_buff * , unsigned int , t#s16 ) 
nf_nat_sip_expect_hook extern unsigned int ( * nf_nat_sip_expect_hook ) ( s#sk_buff * , unsigned int , unsigned int , const char * * , unsigned int * , s#nf_conntrack_expect * , unsigned int , unsigned int ) 
e#sdp_header_types enum sdp_header_types { SDP_HDR_UNSPEC , SDP_HDR_VERSION , SDP_HDR_OWNER , SDP_HDR_CONNECTION , SDP_HDR_MEDIA , } 
nf_nat_sdp_addr_hook extern unsigned int ( * nf_nat_sdp_addr_hook ) ( s#sk_buff * , unsigned int , unsigned int , const char * * , unsigned int * , unsigned int , e#sdp_header_types , e#sdp_header_types , const u#nf_inet_addr * ) 
nf_nat_sdp_port_hook extern unsigned int ( * nf_nat_sdp_port_hook ) ( s#sk_buff * , unsigned int , unsigned int , const char * * , unsigned int * , unsigned int , unsigned int , t#u_int16_t ) 
nf_nat_sdp_session_hook extern unsigned int ( * nf_nat_sdp_session_hook ) ( s#sk_buff * , unsigned int , unsigned int , const char * * , unsigned int * , unsigned int , const u#nf_inet_addr * ) 
nf_nat_sdp_media_hook extern unsigned int ( * nf_nat_sdp_media_hook ) ( s#sk_buff * , unsigned int , unsigned int , const char * * , unsigned int * , s#nf_conntrack_expect * , s#nf_conntrack_expect * , unsigned int , unsigned int , u#nf_inet_addr * ) 
ct_sip_parse_request extern int ct_sip_parse_request ( const s#nf_conn * , const char * , unsigned int , unsigned int * , unsigned int * , u#nf_inet_addr * , t#__be16 * ) 
e#sip_header_types enum sip_header_types { SIP_HDR_CSEQ , SIP_HDR_FROM , SIP_HDR_TO , SIP_HDR_CONTACT , SIP_HDR_VIA_UDP , SIP_HDR_VIA_TCP , SIP_HDR_EXPIRES , SIP_HDR_CONTENT_LENGTH , SIP_HDR_CALL_ID , } 
ct_sip_get_header extern int ct_sip_get_header ( const s#nf_conn * , const char * , unsigned int , unsigned int , e#sip_header_types , unsigned int * , unsigned int * ) 
ct_sip_parse_header_uri extern int ct_sip_parse_header_uri ( const s#nf_conn * , const char * , unsigned int * , unsigned int , e#sip_header_types , int * , unsigned int * , unsigned int * , u#nf_inet_addr * , t#__be16 * ) 
ct_sip_parse_address_param extern int ct_sip_parse_address_param ( const s#nf_conn * , const char * , unsigned int , unsigned int , const char * , unsigned int * , unsigned int * , u#nf_inet_addr * , t#bool ) 
ct_sip_parse_numerical_param extern int ct_sip_parse_numerical_param ( const s#nf_conn * , const char * , unsigned int , unsigned int , const char * , unsigned int * , unsigned int * , unsigned int * ) 
ct_sip_get_sdp_header extern int ct_sip_get_sdp_header ( const s#nf_conn * , const char * , unsigned int , unsigned int , e#sdp_header_types , e#sdp_header_types , unsigned int * , unsigned int * ) 

/* net/netfilter/nf_conntrack_standalone.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
print_tuple int print_tuple ( s#seq_file * , const s#nf_conntrack_tuple * , const s#nf_conntrack_l3proto * , const s#nf_conntrack_l4proto * ) 
need_conntrack extern void need_conntrack ( void ) 

/* net/netfilter/nf_log.o */
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
nf_log_set void nf_log_set ( s#net * , t#u_int8_t , const s#nf_logger * ) 
nf_log_unset void nf_log_unset ( s#net * , const s#nf_logger * ) 
nf_log_register int nf_log_register ( t#u_int8_t , s#nf_logger * ) 
nf_log_unregister void nf_log_unregister ( s#nf_logger * ) 
nf_log_bind_pf int nf_log_bind_pf ( s#net * , t#u_int8_t , const s#nf_logger * ) 
nf_log_unbind_pf void nf_log_unbind_pf ( s#net * , t#u_int8_t ) 
nf_log_packet __attribute__ ( ( format ( printf , 8 , 9 ) ) ) void nf_log_packet ( s#net * , t#u_int8_t , unsigned int , const s#sk_buff * , const s#net_device * , const s#net_device * , const s#nf_loginfo * , const char * , ... ) 

/* net/netfilter/nf_nat_core.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s#nf_nat_range struct nf_nat_range { unsigned int flags ; u#nf_inet_addr min_addr ; u#nf_inet_addr max_addr ; u#nf_conntrack_man_proto min_proto ; u#nf_conntrack_man_proto max_proto ; } 
s#nf_nat_l3proto struct nf_nat_l3proto { t#u8 l3proto ; t#bool ( * in_range ) ( const s#nf_conntrack_tuple * , const s#nf_nat_range * ) ; t#u32 ( * secure_port ) ( const s#nf_conntrack_tuple * , t#__be16 ) ; t#bool ( * manip_pkt ) ( s#sk_buff * , unsigned int , const s#nf_nat_l4proto * , const s#nf_conntrack_tuple * , e#nf_nat_manip_type ) ; void ( * csum_update ) ( s#sk_buff * , unsigned int , t#__sum16 * , const s#nf_conntrack_tuple * , e#nf_nat_manip_type ) ; void ( * csum_recalc ) ( s#sk_buff * , t#u8 , void * , t#__sum16 * , int , int ) ; void ( * decode_session ) ( s#sk_buff * , const s#nf_conn * , e#ip_conntrack_dir , unsigned long , s#flowi * ) ; int ( * nlattr_to_range ) ( s#nlattr * [ ] , s#nf_nat_range * ) ; } 
s#nf_nat_l4proto struct nf_nat_l4proto { t#u8 l4proto ; t#bool ( * manip_pkt ) ( s#sk_buff * , const s#nf_nat_l3proto * , unsigned int , unsigned int , const s#nf_conntrack_tuple * , e#nf_nat_manip_type ) ; t#bool ( * in_range ) ( const s#nf_conntrack_tuple * , e#nf_nat_manip_type , const u#nf_conntrack_man_proto * , const u#nf_conntrack_man_proto * ) ; void ( * unique_tuple ) ( const s#nf_nat_l3proto * , s#nf_conntrack_tuple * , const s#nf_nat_range * , e#nf_nat_manip_type , const s#nf_conn * ) ; int ( * nlattr_to_range ) ( s#nlattr * [ ] , s#nf_nat_range * ) ; } 
__nf_nat_l4proto_find extern const s#nf_nat_l4proto * __nf_nat_l4proto_find ( t#u8 , t#u8 ) 
nf_xfrm_me_harder extern int nf_xfrm_me_harder ( s#sk_buff * , unsigned int ) 
nf_nat_used_tuple extern int nf_nat_used_tuple ( const s#nf_conntrack_tuple * , const s#nf_conn * ) 
nf_nat_setup_info extern unsigned int nf_nat_setup_info ( s#nf_conn * , const s#nf_nat_range * , e#nf_nat_manip_type ) 
nf_nat_packet extern unsigned int nf_nat_packet ( s#nf_conn * , e#ip_conntrack_info , unsigned int , s#sk_buff * ) 
nf_nat_l4proto_register extern int nf_nat_l4proto_register ( t#u8 , const s#nf_nat_l4proto * ) 
nf_nat_l4proto_unregister extern void nf_nat_l4proto_unregister ( t#u8 , const s#nf_nat_l4proto * ) 
nf_nat_l3proto_register extern int nf_nat_l3proto_register ( const s#nf_nat_l3proto * ) 
nf_nat_l3proto_unregister extern void nf_nat_l3proto_unregister ( const s#nf_nat_l3proto * ) 

/* net/netfilter/nf_nat_helper.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
__nf_nat_mangle_tcp_packet extern int __nf_nat_mangle_tcp_packet ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned int , unsigned int , unsigned int , const char * , unsigned int , t#bool ) 
nf_nat_mangle_udp_packet extern int nf_nat_mangle_udp_packet ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned int , unsigned int , unsigned int , const char * , unsigned int ) 
nf_nat_follow_master extern void nf_nat_follow_master ( s#nf_conn * , s#nf_conntrack_expect * ) 

/* net/netfilter/nf_nat_proto_common.o */
nf_nat_l4proto_in_range extern t#bool nf_nat_l4proto_in_range ( const s#nf_conntrack_tuple * , e#nf_nat_manip_type , const u#nf_conntrack_man_proto * , const u#nf_conntrack_man_proto * ) 
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
nf_nat_l4proto_unique_tuple extern void nf_nat_l4proto_unique_tuple ( const s#nf_nat_l3proto * , s#nf_conntrack_tuple * , const s#nf_nat_range * , e#nf_nat_manip_type , const s#nf_conn * , t#u16 * ) 
nf_nat_l4proto_nlattr_to_range extern int nf_nat_l4proto_nlattr_to_range ( s#nlattr * [ ] , s#nf_nat_range * ) 

/* net/netfilter/nf_queue.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s#nf_queue_entry struct nf_queue_entry { s#list_head list ; s#sk_buff * skb ; unsigned int id ; s#nf_hook_ops * elem ; t#u_int8_t pf ; t#u16 size ; unsigned int hook ; s#net_device * indev ; s#net_device * outdev ; int ( * okfn ) ( s#sk_buff * ) ; } 
s#nf_queue_handler struct nf_queue_handler { int ( * outfn ) ( s#nf_queue_entry * , unsigned int ) ; } 
nf_register_queue_handler void nf_register_queue_handler ( const s#nf_queue_handler * ) 
nf_unregister_queue_handler void nf_unregister_queue_handler ( void ) 
nf_queue_entry_release_refs void nf_queue_entry_release_refs ( s#nf_queue_entry * ) 
nf_queue_entry_get_refs t#bool nf_queue_entry_get_refs ( s#nf_queue_entry * ) 
nf_reinject extern void nf_reinject ( s#nf_queue_entry * , unsigned int ) 

/* net/netfilter/nf_sockopt.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s#nf_sockopt_ops struct nf_sockopt_ops { s#list_head list ; t#u_int8_t pf ; int set_optmin ; int set_optmax ; int ( * set ) ( s#sock * , int , void * , unsigned int ) ; int ( * compat_set ) ( s#sock * , int , void * , unsigned int ) ; int get_optmin ; int get_optmax ; int ( * get ) ( s#sock * , int , void * , int * ) ; int ( * compat_get ) ( s#sock * , int , void * , int * ) ; s#module * owner ; } 
nf_register_sockopt int nf_register_sockopt ( s#nf_sockopt_ops * ) 
nf_unregister_sockopt void nf_unregister_sockopt ( s#nf_sockopt_ops * ) 
nf_setsockopt int nf_setsockopt ( s#sock * , t#u_int8_t , int , char * , unsigned int ) 
nf_getsockopt int nf_getsockopt ( s#sock * , t#u_int8_t , int , char * , int * ) 
compat_nf_setsockopt int compat_nf_setsockopt ( s#sock * , t#u_int8_t , int , char * , unsigned int ) 
compat_nf_getsockopt int compat_nf_getsockopt ( s#sock * , t#u_int8_t , int , char * , int * ) 

/* net/netfilter/nfnetlink.o */
nfnl_lock extern void nfnl_lock ( t#__u8 ) 
nfnl_unlock extern void nfnl_unlock ( t#__u8 ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s#nfnl_callback struct nfnl_callback { int ( * call ) ( s#sock * , s#sk_buff * , const s#nlmsghdr * , const s#nlattr * const [ ] ) ; int ( * call_rcu_sched ) ( s#sock * , s#sk_buff * , const s#nlmsghdr * , const s#nlattr * const [ ] ) ; const s#nla_policy * policy ; const t#u_int16_t attr_count ; } 
s#nfnetlink_subsystem struct nfnetlink_subsystem { const char * name ; t#__u8 subsys_id ; t#__u8 cb_count ; const s#nfnl_callback * cb ; } 
nfnetlink_subsys_register extern int nfnetlink_subsys_register ( const s#nfnetlink_subsystem * ) 
nfnetlink_subsys_unregister extern int nfnetlink_subsys_unregister ( const s#nfnetlink_subsystem * ) 
nfnetlink_has_listeners extern int nfnetlink_has_listeners ( s#net * , unsigned int ) 
nfnetlink_alloc_skb extern s#sk_buff * nfnetlink_alloc_skb ( s#net * , unsigned int , t#u32 , t#gfp_t ) 
nfnetlink_send extern int nfnetlink_send ( s#sk_buff * , s#net * , t#u32 , unsigned int , int , t#gfp_t ) 
nfnetlink_set_err extern int nfnetlink_set_err ( s#net * , t#u32 , t#u32 , int ) 
nfnetlink_unicast extern int nfnetlink_unicast ( s#sk_buff * , s#net * , t#u32 , int ) 

/* net/netfilter/nfnetlink_log.o */
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
nfulnl_log_packet void nfulnl_log_packet ( s#net * , t#u_int8_t , unsigned int , const s#sk_buff * , const s#net_device * , const s#net_device * , const s#nf_loginfo * , const char * ) 

/* net/netfilter/x_tables.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
xt_register_target extern int xt_register_target ( s#xt_target * ) 
xt_unregister_target extern void xt_unregister_target ( s#xt_target * ) 
xt_register_targets extern int xt_register_targets ( s#xt_target * , unsigned int ) 
xt_unregister_targets extern void xt_unregister_targets ( s#xt_target * , unsigned int ) 
xt_register_match extern int xt_register_match ( s#xt_match * ) 
xt_unregister_match extern void xt_unregister_match ( s#xt_match * ) 
xt_register_matches extern int xt_register_matches ( s#xt_match * , unsigned int ) 
xt_unregister_matches extern void xt_unregister_matches ( s#xt_match * , unsigned int ) 
xt_find_match extern s#xt_match * xt_find_match ( t#u8 , const char * , t#u8 ) 
xt_request_find_match extern s#xt_match * xt_request_find_match ( t#u8 , const char * , t#u8 ) 
xt_find_target extern s#xt_target * xt_find_target ( t#u8 , const char * , t#u8 ) 
xt_request_find_target extern s#xt_target * xt_request_find_target ( t#u8 , const char * , t#u8 ) 
xt_find_revision extern int xt_find_revision ( t#u8 , const char * , t#u8 , int , int * ) 
xt_check_match extern int xt_check_match ( s#xt_mtchk_param * , unsigned int , t#u_int8_t , t#bool ) 
xt_compat_add_offset extern int xt_compat_add_offset ( t#u_int8_t , unsigned int , int ) 
xt_compat_flush_offsets extern void xt_compat_flush_offsets ( t#u_int8_t ) 
xt_compat_calc_jump extern int xt_compat_calc_jump ( t#u_int8_t , unsigned int ) 
xt_compat_init_offsets extern void xt_compat_init_offsets ( t#u_int8_t , unsigned int ) 
xt_compat_match_offset extern int xt_compat_match_offset ( const s#xt_match * ) 
s#xt_entry_match struct xt_entry_match { union { struct { t#__u16 match_size ; char name [ 29 ] ; t#__u8 revision ; } user ; struct { t#__u16 match_size ; s#xt_match * match ; } kernel ; t#__u16 match_size ; } u ; unsigned char data [ 0 ] ; } 
xt_compat_match_from_user extern int xt_compat_match_from_user ( s#xt_entry_match * , void * * , unsigned int * ) 
xt_compat_match_to_user extern int xt_compat_match_to_user ( const s#xt_entry_match * , void * * , unsigned int * ) 
xt_check_target extern int xt_check_target ( s#xt_tgchk_param * , unsigned int , t#u_int8_t , t#bool ) 
xt_compat_target_offset extern int xt_compat_target_offset ( const s#xt_target * ) 
s#xt_entry_target struct xt_entry_target { union { struct { t#__u16 target_size ; char name [ 29 ] ; t#__u8 revision ; } user ; struct { t#__u16 target_size ; s#xt_target * target ; } kernel ; t#__u16 target_size ; } u ; unsigned char data [ 0 ] ; } 
xt_compat_target_from_user extern void xt_compat_target_from_user ( s#xt_entry_target * , void * * , unsigned int * ) 
xt_compat_target_to_user extern int xt_compat_target_to_user ( const s#xt_entry_target * , void * * , unsigned int * ) 
xt_alloc_table_info extern s#xt_table_info * xt_alloc_table_info ( unsigned int ) 
xt_free_table_info extern void xt_free_table_info ( s#xt_table_info * ) 
xt_find_table_lock extern s#xt_table * xt_find_table_lock ( s#net * , t#u_int8_t , const char * ) 
xt_table_unlock extern void xt_table_unlock ( s#xt_table * ) 
xt_compat_lock extern void xt_compat_lock ( t#u_int8_t ) 
xt_compat_unlock extern void xt_compat_unlock ( t#u_int8_t ) 
xt_recseq extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( t#seqcount_t ) xt_recseq 
xt_replace_table extern s#xt_table_info * xt_replace_table ( s#xt_table * , unsigned int , s#xt_table_info * , int * ) 
xt_register_table extern s#xt_table * xt_register_table ( s#net * , const s#xt_table * , s#xt_table_info * , s#xt_table_info * ) 
xt_unregister_table extern void * xt_unregister_table ( s#xt_table * ) 
xt_hook_link extern s#nf_hook_ops * xt_hook_link ( const s#xt_table * , t#nf_hookfn * ) 
xt_hook_unlink extern void xt_hook_unlink ( const s#xt_table * , s#nf_hook_ops * ) 
xt_proto_init extern int xt_proto_init ( s#net * , t#u_int8_t ) 
xt_proto_fini extern void xt_proto_fini ( s#net * , t#u_int8_t ) 

/* net/netlink/af_netlink.o */
s#nl_portid_hash struct nl_portid_hash { s#hlist_head * table ; unsigned long rehash_time ; unsigned int mask ; unsigned int shift ; unsigned int entries ; unsigned int max_shift ; t#u32 rnd ; } 
s##listeners
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##mem_cgroup
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s#netlink_table struct netlink_table { s#nl_portid_hash hash ; s#hlist_head mc_list ; s#listeners * listeners ; unsigned int flags ; unsigned int groups ; s#mutex * cb_mutex ; s#module * module ; void ( * bind ) ( int ) ; t#bool ( * compare ) ( s#net * , s#sock * ) ; int registered ; } 
nl_table extern s#netlink_table * nl_table 
nl_table_lock extern t#rwlock_t nl_table_lock 
s#netlink_tap struct netlink_tap { s#net_device * dev ; s#module * module ; s#list_head list ; } 
netlink_add_tap extern int netlink_add_tap ( s#netlink_tap * ) 
__netlink_remove_tap extern int __netlink_remove_tap ( s#netlink_tap * ) 
netlink_remove_tap extern int netlink_remove_tap ( s#netlink_tap * ) 
__netlink_ns_capable t#bool __netlink_ns_capable ( const s#netlink_skb_parms * , s#user_namespace * , int ) 
netlink_ns_capable t#bool netlink_ns_capable ( const s#sk_buff * , s#user_namespace * , int ) 
netlink_capable t#bool netlink_capable ( const s#sk_buff * , int ) 
netlink_net_capable t#bool netlink_net_capable ( const s#sk_buff * , int ) 
netlink_unicast extern int netlink_unicast ( s#sock * , s#sk_buff * , t#__u32 , int ) 
netlink_alloc_skb extern s#sk_buff * netlink_alloc_skb ( s#sock * , unsigned int , t#u32 , t#gfp_t ) 
netlink_has_listeners extern int netlink_has_listeners ( s#sock * , unsigned int ) 
netlink_broadcast_filtered extern int netlink_broadcast_filtered ( s#sock * , s#sk_buff * , t#__u32 , t#__u32 , t#gfp_t , int ( * ) ( s#sock * , s#sk_buff * , void * ) , void * ) 
netlink_broadcast extern int netlink_broadcast ( s#sock * , s#sk_buff * , t#__u32 , t#__u32 , t#gfp_t ) 
netlink_set_err extern int netlink_set_err ( s#sock * , t#__u32 , t#__u32 , int ) 
s#netlink_kernel_cfg struct netlink_kernel_cfg { unsigned int groups ; unsigned int flags ; void ( * input ) ( s#sk_buff * ) ; s#mutex * cb_mutex ; void ( * bind ) ( int ) ; t#bool ( * compare ) ( s#net * , s#sock * ) ; } 
__netlink_kernel_create extern s#sock * __netlink_kernel_create ( s#net * , int , s#module * , s#netlink_kernel_cfg * ) 
netlink_kernel_release extern void netlink_kernel_release ( s#sock * ) 
__nlmsg_put s#nlmsghdr * __nlmsg_put ( s#sk_buff * , t#u32 , t#u32 , int , int , int ) 
s#netlink_dump_control struct netlink_dump_control { int ( * dump ) ( s#sk_buff * , s#netlink_callback * ) ; int ( * done ) ( s#netlink_callback * ) ; void * data ; s#module * module ; t#u16 min_dump_alloc ; } 
__netlink_dump_start extern int __netlink_dump_start ( s#sock * , s#sk_buff * , const s#nlmsghdr * , s#netlink_dump_control * ) 
netlink_ack extern void netlink_ack ( s#sk_buff * , s#nlmsghdr * , int ) 
netlink_rcv_skb extern int netlink_rcv_skb ( s#sk_buff * , int ( * ) ( s#sk_buff * , s#nlmsghdr * ) ) 
nlmsg_notify extern int nlmsg_notify ( s#sock * , s#sk_buff * , t#u32 , unsigned int , int , t#gfp_t ) 
netlink_register_notifier extern int netlink_register_notifier ( s#notifier_block * ) 
netlink_unregister_notifier extern int netlink_unregister_notifier ( s#notifier_block * ) 

/* net/netlink/genetlink.o */
genl_lock extern void genl_lock ( void ) 
genl_unlock extern void genl_unlock ( void ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s#genlmsghdr struct genlmsghdr { t#__u8 cmd ; t#__u8 version ; t#__u16 reserved ; } 
s#genl_info struct genl_info { t#u32 snd_seq ; t#u32 snd_portid ; s#nlmsghdr * nlhdr ; s#genlmsghdr * genlhdr ; void * userhdr ; s#nlattr * * attrs ; s#net * _net ; void * user_ptr [ 2 ] ; } 
s#genl_ops struct genl_ops { t#u8 cmd ; t#u8 internal_flags ; unsigned int flags ; const s#nla_policy * policy ; int ( * doit ) ( s#sk_buff * , s#genl_info * ) ; int ( * dumpit ) ( s#sk_buff * , s#netlink_callback * ) ; int ( * done ) ( s#netlink_callback * ) ; s#list_head ops_list ; } 
s#genl_family struct genl_family { unsigned int id ; unsigned int hdrsize ; char name [ 16 ] ; unsigned int version ; unsigned int maxattr ; t#bool netnsok ; t#bool parallel_ops ; int ( * pre_doit ) ( s#genl_ops * , s#sk_buff * , s#genl_info * ) ; void ( * post_doit ) ( s#genl_ops * , s#sk_buff * , s#genl_info * ) ; s#nlattr * * attrbuf ; s#list_head ops_list ; s#list_head family_list ; s#list_head mcast_groups ; s#module * module ; } 
s#genl_multicast_group struct genl_multicast_group { s#genl_family * family ; s#list_head list ; char name [ 16 ] ; t#u32 id ; } 
genl_register_mc_group extern int genl_register_mc_group ( s#genl_family * , s#genl_multicast_group * ) 
genl_unregister_mc_group extern void genl_unregister_mc_group ( s#genl_family * , s#genl_multicast_group * ) 
genl_register_ops extern int genl_register_ops ( s#genl_family * , s#genl_ops * ) 
genl_unregister_ops extern int genl_unregister_ops ( s#genl_family * , s#genl_ops * ) 
__genl_register_family extern int __genl_register_family ( s#genl_family * ) 
__genl_register_family_with_ops extern int __genl_register_family_with_ops ( s#genl_family * , s#genl_ops * , t#size_t ) 
genl_unregister_family extern int genl_unregister_family ( s#genl_family * ) 
genlmsg_put void * genlmsg_put ( s#sk_buff * , t#u32 , t#u32 , s#genl_family * , int , t#u8 ) 
genlmsg_multicast_allns int genlmsg_multicast_allns ( s#sk_buff * , t#u32 , unsigned int , t#gfp_t ) 
genl_notify extern void genl_notify ( s#sk_buff * , s#net * , t#u32 , t#u32 , s#nlmsghdr * , t#gfp_t ) 

/* net/packet/af_packet.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##user_namespace
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##workqueue_struct
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##mem_cgroup
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
fanout_mutex extern s#mutex fanout_mutex 

/* net/rds/af_rds.o */
rds_str_array char * rds_str_array ( char * * , t#size_t , t#size_t ) 

/* net/rds/cong.o */
s#rds_cong_map struct rds_cong_map { s#rb_node m_rb_node ; t#__be32 m_addr ; t#wait_queue_head_t m_waitq ; s#list_head m_conn_list ; unsigned long m_page_addrs [ ( ( ( ( ( ( 65536 / 8 ) ) ) + ( ( typeof ( ( ( 65536 / 8 ) ) ) ) ( ( ( 1UL << 16 ) ) ) - 1 ) ) & ~ ( ( typeof ( ( ( 65536 / 8 ) ) ) ) ( ( ( 1UL << 16 ) ) ) - 1 ) ) / ( 1UL << 16 ) ) ] ; } 
rds_cong_map_updated void rds_cong_map_updated ( s#rds_cong_map * , t#uint64_t ) 

/* net/rds/connection.o */
s#rds_header struct rds_header { t#__be64 h_sequence ; t#__be64 h_ack ; t#__be32 h_len ; t#__be16 h_sport ; t#__be16 h_dport ; t#u8 h_flags ; t#u8 h_credit ; t#u8 h_padding [ 4 ] ; t#__sum16 h_csum ; t#u8 h_exthdr [ 16 ] ; } 
t#rds_rdma_cookie_t typedef t#uint64_t rds_rdma_cookie_t 
s#rds_incoming struct rds_incoming { t#atomic_t i_refcount ; s#list_head i_item ; s#rds_connection * i_conn ; s#rds_header i_hdr ; unsigned long i_rx_jiffies ; t#__be32 i_saddr ; t#rds_rdma_cookie_t i_rdma_cookie ; } 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s#rds_notifier struct rds_notifier { s#list_head n_list ; t#uint64_t n_user_token ; int n_status ; } 
s#rds_mr struct rds_mr { s#rb_node r_rb_node ; t#atomic_t r_refcount ; t#u32 r_key ; unsigned int r_use_once : 1 ; unsigned int r_invalidate : 1 ; unsigned int r_write : 1 ; unsigned long r_state ; s#rds_sock * r_sock ; s#rds_transport * r_trans ; void * r_trans_private ; } 
s#rm_rdma_op struct rm_rdma_op { t#u32 op_rkey ; t#u64 op_remote_addr ; unsigned int op_write : 1 ; unsigned int op_fence : 1 ; unsigned int op_notify : 1 ; unsigned int op_recverr : 1 ; unsigned int op_mapped : 1 ; unsigned int op_silent : 1 ; unsigned int op_active : 1 ; unsigned int op_bytes ; unsigned int op_nents ; unsigned int op_count ; s#scatterlist * op_sg ; s#rds_notifier * op_notifier ; s#rds_mr * op_rdma_mr ; } 
s#rm_atomic_op struct rm_atomic_op { int op_type ; union { struct { t#uint64_t compare ; t#uint64_t swap ; t#uint64_t compare_mask ; t#uint64_t swap_mask ; } op_m_cswp ; struct { t#uint64_t add ; t#uint64_t nocarry_mask ; } op_m_fadd ; } ; t#u32 op_rkey ; t#u64 op_remote_addr ; unsigned int op_notify : 1 ; unsigned int op_recverr : 1 ; unsigned int op_mapped : 1 ; unsigned int op_silent : 1 ; unsigned int op_active : 1 ; s#scatterlist * op_sg ; s#rds_notifier * op_notifier ; s#rds_mr * op_rdma_mr ; } 
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##rds_info_iterator
s#rds_transport struct rds_transport { char t_name [ 16 ] ; s#list_head t_item ; s#module * t_owner ; unsigned int t_prefer_loopback : 1 ; unsigned int t_type ; int ( * laddr_check ) ( t#__be32 ) ; int ( * conn_alloc ) ( s#rds_connection * , t#gfp_t ) ; void ( * conn_free ) ( void * ) ; int ( * conn_connect ) ( s#rds_connection * ) ; void ( * conn_shutdown ) ( s#rds_connection * ) ; void ( * xmit_prepare ) ( s#rds_connection * ) ; void ( * xmit_complete ) ( s#rds_connection * ) ; int ( * xmit ) ( s#rds_connection * , s#rds_message * , unsigned int , unsigned int , unsigned int ) ; int ( * xmit_rdma ) ( s#rds_connection * , s#rm_rdma_op * ) ; int ( * xmit_atomic ) ( s#rds_connection * , s#rm_atomic_op * ) ; int ( * recv ) ( s#rds_connection * ) ; int ( * inc_copy_to_user ) ( s#rds_incoming * , s#iovec * , t#size_t ) ; void ( * inc_free ) ( s#rds_incoming * ) ; int ( * cm_handle_connect ) ( s#rdma_cm_id * , s#rdma_cm_event * ) ; int ( * cm_initiate_connect ) ( s#rdma_cm_id * ) ; void ( * cm_connect_complete ) ( s#rds_connection * , s#rdma_cm_event * ) ; unsigned int ( * stats_info_copy ) ( s#rds_info_iterator * , unsigned int ) ; void ( * exit ) ( void ) ; void * ( * get_mr ) ( s#scatterlist * , unsigned long , s#rds_sock * , t#u32 * ) ; void ( * sync_mr ) ( void * , int ) ; void ( * free_mr ) ( void * , int ) ; void ( * flush_mrs ) ( void ) ; } 
s#rds_sock struct rds_sock { s#sock rs_sk ; t#u64 rs_user_addr ; t#u64 rs_user_bytes ; s#hlist_node rs_bound_node ; t#__be32 rs_bound_addr ; t#__be32 rs_conn_addr ; t#__be16 rs_bound_port ; t#__be16 rs_conn_port ; s#rds_transport * rs_transport ; s#rds_connection * rs_conn ; int rs_congested ; int rs_seen_congestion ; t#spinlock_t rs_lock ; s#list_head rs_send_queue ; t#u32 rs_snd_bytes ; int rs_rcv_bytes ; s#list_head rs_notify_queue ; t#uint64_t rs_cong_mask ; t#uint64_t rs_cong_notify ; s#list_head rs_cong_list ; unsigned long rs_cong_track ; t#rwlock_t rs_recv_lock ; s#list_head rs_recv_queue ; s#list_head rs_item ; t#spinlock_t rs_rdma_lock ; s#rb_root rs_rdma_keys ; unsigned char rs_recverr , rs_cong_monitor ; } 
s#rm_data_op struct rm_data_op { unsigned int op_active : 1 ; unsigned int op_nents ; unsigned int op_count ; s#scatterlist * op_sg ; } 
s#rds_message struct rds_message { t#atomic_t m_refcount ; s#list_head m_sock_item ; s#list_head m_conn_item ; s#rds_incoming m_inc ; t#u64 m_ack_seq ; t#__be32 m_daddr ; unsigned long m_flags ; t#spinlock_t m_rs_lock ; t#wait_queue_head_t m_flush_wait ; s#rds_sock * m_rs ; t#rds_rdma_cookie_t m_rdma_cookie ; unsigned int m_used_sgs ; unsigned int m_total_sgs ; void * m_final_op ; struct { s#rm_atomic_op atomic ; s#rm_rdma_op rdma ; s#rm_data_op data ; } ; } 
s#rds_connection struct rds_connection { s#hlist_node c_hash_node ; t#__be32 c_laddr ; t#__be32 c_faddr ; unsigned int c_loopback : 1 ; s#rds_connection * c_passive ; s#rds_cong_map * c_lcong ; s#rds_cong_map * c_fcong ; s#rds_message * c_xmit_rm ; unsigned long c_xmit_sg ; unsigned int c_xmit_hdr_off ; unsigned int c_xmit_data_off ; unsigned int c_xmit_atomic_sent ; unsigned int c_xmit_rdma_sent ; unsigned int c_xmit_data_sent ; t#spinlock_t c_lock ; t#u64 c_next_tx_seq ; s#list_head c_send_queue ; s#list_head c_retrans ; t#u64 c_next_rx_seq ; s#rds_transport * c_trans ; void * c_transport_data ; t#atomic_t c_state ; unsigned long c_flags ; unsigned long c_reconnect_jiffies ; s#delayed_work c_send_w ; s#delayed_work c_recv_w ; s#delayed_work c_conn_w ; s#work_struct c_down_w ; s#mutex c_cm_lock ; t#wait_queue_head_t c_waitq ; s#list_head c_map_item ; unsigned long c_map_queued ; unsigned int c_unacked_packets ; unsigned int c_unacked_bytes ; unsigned int c_version ; } 
rds_conn_create s#rds_connection * rds_conn_create ( t#__be32 , t#__be32 , s#rds_transport * , t#gfp_t ) 
rds_conn_create_outgoing s#rds_connection * rds_conn_create_outgoing ( t#__be32 , t#__be32 , s#rds_transport * , t#gfp_t ) 
rds_conn_destroy void rds_conn_destroy ( s#rds_connection * ) 
s#rds_info_lengths struct rds_info_lengths { unsigned int nr ; unsigned int each ; } 
rds_for_each_conn_info void rds_for_each_conn_info ( s#socket * , unsigned int , s#rds_info_iterator * , s#rds_info_lengths * , int ( * ) ( s#rds_connection * , void * ) , t#size_t ) 
rds_conn_drop void rds_conn_drop ( s#rds_connection * ) 
rds_conn_connect_if_down void rds_conn_connect_if_down ( s#rds_connection * ) 

/* net/rds/info.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kioctx
s##eventfd_ctx
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##dn_route
s##mem_cgroup
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##rds_info_iterator
t#rds_info_func typedef void ( * rds_info_func ) ( s#socket * , unsigned int , s#rds_info_iterator * , s#rds_info_lengths * ) 
rds_info_register_func void rds_info_register_func ( int , t#rds_info_func ) 
rds_info_deregister_func void rds_info_deregister_func ( int , t#rds_info_func ) 
rds_info_copy void rds_info_copy ( s#rds_info_iterator * , void * , unsigned long ) 

/* net/rds/message.o */
s##module
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##rds_info_iterator
rds_message_addref void rds_message_addref ( s#rds_message * ) 
rds_message_put void rds_message_put ( s#rds_message * ) 
rds_message_populate_header void rds_message_populate_header ( s#rds_header * , t#__be16 , t#__be16 , t#u64 ) 
rds_message_add_extension int rds_message_add_extension ( s#rds_header * , unsigned int , const void * , unsigned int ) 
rds_message_add_rdma_dest_extension int rds_message_add_rdma_dest_extension ( s#rds_header * , t#u32 , t#u32 ) 
rds_message_unmapped void rds_message_unmapped ( s#rds_message * ) 

/* net/rds/page.o */
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kioctx
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##kmem_cache_node
s##array_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##dn_route
s##mem_cgroup
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
rds_page_copy_user int rds_page_copy_user ( s#page * , unsigned long , void * , unsigned long , int ) 
rds_page_remainder_alloc int rds_page_remainder_alloc ( s#scatterlist * , unsigned long , t#gfp_t ) 

/* net/rds/recv.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##rds_info_iterator
rds_inc_init void rds_inc_init ( s#rds_incoming * , s#rds_connection * , t#__be32 ) 
rds_inc_put void rds_inc_put ( s#rds_incoming * ) 
rds_recv_incoming void rds_recv_incoming ( s#rds_connection * , t#__be32 , t#__be32 , s#rds_incoming * , t#gfp_t ) 

/* net/rds/send.o */
s##module
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##rds_info_iterator
rds_rdma_send_complete void rds_rdma_send_complete ( s#rds_message * , int ) 
rds_atomic_send_complete void rds_atomic_send_complete ( s#rds_message * , int ) 
rds_send_get_message s#rds_message * rds_send_get_message ( s#rds_connection * , s#rm_rdma_op * ) 
t#is_acked_func typedef int ( * is_acked_func ) ( s#rds_message * , t#uint64_t ) 
rds_send_drop_acked void rds_send_drop_acked ( s#rds_connection * , t#u64 , t#is_acked_func ) 

/* net/rds/stats.o */
s#rds_statistics struct rds_statistics { t#uint64_t s_conn_reset ; t#uint64_t s_recv_drop_bad_checksum ; t#uint64_t s_recv_drop_old_seq ; t#uint64_t s_recv_drop_no_sock ; t#uint64_t s_recv_drop_dead_sock ; t#uint64_t s_recv_deliver_raced ; t#uint64_t s_recv_delivered ; t#uint64_t s_recv_queued ; t#uint64_t s_recv_immediate_retry ; t#uint64_t s_recv_delayed_retry ; t#uint64_t s_recv_ack_required ; t#uint64_t s_recv_rdma_bytes ; t#uint64_t s_recv_ping ; t#uint64_t s_send_queue_empty ; t#uint64_t s_send_queue_full ; t#uint64_t s_send_lock_contention ; t#uint64_t s_send_lock_queue_raced ; t#uint64_t s_send_immediate_retry ; t#uint64_t s_send_delayed_retry ; t#uint64_t s_send_drop_acked ; t#uint64_t s_send_ack_required ; t#uint64_t s_send_queued ; t#uint64_t s_send_rdma ; t#uint64_t s_send_rdma_bytes ; t#uint64_t s_send_pong ; t#uint64_t s_page_remainder_hit ; t#uint64_t s_page_remainder_miss ; t#uint64_t s_copy_to_user ; t#uint64_t s_copy_from_user ; t#uint64_t s_cong_update_queued ; t#uint64_t s_cong_update_received ; t#uint64_t s_cong_send_error ; t#uint64_t s_cong_send_blocked ; } 
rds_stats extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( s#rds_statistics ) rds_stats 
s##rds_info_iterator
rds_stats_info_copy void rds_stats_info_copy ( s#rds_info_iterator * , t#uint64_t * , const char * const * , t#size_t ) 

/* net/rds/threads.o */
s##workqueue_struct
rds_wq extern s#workqueue_struct * rds_wq 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##rds_info_iterator
rds_connect_complete void rds_connect_complete ( s#rds_connection * ) 

/* net/rds/transport.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##ip_mc_list
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##rds_info_iterator
rds_trans_register int rds_trans_register ( s#rds_transport * ) 
rds_trans_unregister void rds_trans_unregister ( s#rds_transport * ) 

/* net/rfkill/core.o */
s##rfkill
rfkill_get_led_trigger_name const char * rfkill_get_led_trigger_name ( s#rfkill * ) 
rfkill_set_led_trigger_name void rfkill_set_led_trigger_name ( s#rfkill * , const char * ) 
rfkill_set_hw_state t#bool rfkill_set_hw_state ( s#rfkill * , t#bool ) 
rfkill_set_sw_state t#bool rfkill_set_sw_state ( s#rfkill * , t#bool ) 
rfkill_init_sw_state void rfkill_init_sw_state ( s#rfkill * , t#bool ) 
rfkill_set_states void rfkill_set_states ( s#rfkill * , t#bool , t#bool ) 
rfkill_pause_polling void rfkill_pause_polling ( s#rfkill * ) 
rfkill_resume_polling void rfkill_resume_polling ( s#rfkill * ) 
rfkill_blocked t#bool rfkill_blocked ( s#rfkill * ) 
s##device_private
s##sock
s##sysfs_dirent
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##eeh_dev
s##device_node
s##iommu_group
e#rfkill_type enum rfkill_type { RFKILL_TYPE_ALL = 0 , RFKILL_TYPE_WLAN , RFKILL_TYPE_BLUETOOTH , RFKILL_TYPE_UWB , RFKILL_TYPE_WIMAX , RFKILL_TYPE_WWAN , RFKILL_TYPE_GPS , RFKILL_TYPE_FM , RFKILL_TYPE_NFC , NUM_RFKILL_TYPES , } 
s#rfkill_ops struct rfkill_ops { void ( * poll ) ( s#rfkill * , void * ) ; void ( * query ) ( s#rfkill * , void * ) ; int ( * set_block ) ( void * , t#bool ) ; } 
rfkill_alloc s#rfkill * rfkill_alloc ( const char * , s#device * , const e#rfkill_type , const s#rfkill_ops * , void * ) 
rfkill_register int rfkill_register ( s#rfkill * ) 
rfkill_unregister void rfkill_unregister ( s#rfkill * ) 
rfkill_destroy void rfkill_destroy ( s#rfkill * ) 

/* net/sched/act_api.o */
s#tcf_t struct tcf_t { t#__u64 install ; t#__u64 lastuse ; t#__u64 expires ; } 
s#tcf_common struct tcf_common { s#tcf_common * tcfc_next ; t#u32 tcfc_index ; int tcfc_refcnt ; int tcfc_bindcnt ; t#u32 tcfc_capab ; int tcfc_action ; s#tcf_t tcfc_tm ; s#gnet_stats_basic_packed tcfc_bstats ; s#gnet_stats_queue tcfc_qstats ; s#gnet_stats_rate_est64 tcfc_rate_est ; t#spinlock_t tcfc_lock ; s#callback_head tcfc_rcu ; } 
s#tcf_hashinfo struct tcf_hashinfo { s#tcf_common * * htab ; unsigned int hmask ; t#rwlock_t * lock ; } 
tcf_hash_destroy void tcf_hash_destroy ( s#tcf_common * , s#tcf_hashinfo * ) 
tcf_hash_release int tcf_hash_release ( s#tcf_common * , int , s#tcf_hashinfo * ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##tcf_walker
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s#tc_action_ops struct tc_action_ops { s#tc_action_ops * next ; s#tcf_hashinfo * hinfo ; char kind [ 16 ] ; t#__u32 type ; t#__u32 capab ; s#module * owner ; int ( * act ) ( s#sk_buff * , const s#tc_action * , s#tcf_result * ) ; int ( * get_stats ) ( s#sk_buff * , s#tc_action * ) ; int ( * dump ) ( s#sk_buff * , s#tc_action * , int , int ) ; int ( * cleanup ) ( s#tc_action * , int ) ; int ( * lookup ) ( s#tc_action * , t#u32 ) ; int ( * init ) ( s#net * , s#nlattr * , s#nlattr * , s#tc_action * , int , int ) ; int ( * walk ) ( s#sk_buff * , s#netlink_callback * , int , s#tc_action * ) ; } 
s#tc_action struct tc_action { void * priv ; const s#tc_action_ops * ops ; t#__u32 type ; t#__u32 order ; s#tc_action * next ; } 
tcf_generic_walker int tcf_generic_walker ( s#sk_buff * , s#netlink_callback * , int , s#tc_action * ) 
tcf_hash_lookup s#tcf_common * tcf_hash_lookup ( t#u32 , s#tcf_hashinfo * ) 
tcf_hash_new_index t#u32 tcf_hash_new_index ( t#u32 * , s#tcf_hashinfo * ) 
tcf_hash_search int tcf_hash_search ( s#tc_action * , t#u32 ) 
tcf_hash_check s#tcf_common * tcf_hash_check ( t#u32 , s#tc_action * , int , s#tcf_hashinfo * ) 
tcf_hash_create s#tcf_common * tcf_hash_create ( t#u32 , s#nlattr * , s#tc_action * , int , int , t#u32 * , s#tcf_hashinfo * ) 
tcf_hash_insert void tcf_hash_insert ( s#tcf_common * , s#tcf_hashinfo * ) 
tcf_register_action int tcf_register_action ( s#tc_action_ops * ) 
tcf_unregister_action int tcf_unregister_action ( s#tc_action_ops * ) 
tcf_action_exec int tcf_action_exec ( s#sk_buff * , const s#tc_action * , s#tcf_result * ) 
tcf_action_dump_1 int tcf_action_dump_1 ( s#sk_buff * , s#tc_action * , int , int ) 

/* net/sched/cls_api.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s#tcf_walker struct tcf_walker { int stop ; int skip ; int count ; int ( * fn ) ( s#tcf_proto * , unsigned long , s#tcf_walker * ) ; } 
register_tcf_proto_ops int register_tcf_proto_ops ( s#tcf_proto_ops * ) 
unregister_tcf_proto_ops int unregister_tcf_proto_ops ( s#tcf_proto_ops * ) 
s#tcf_exts struct tcf_exts { s#tc_action * action ; } 
tcf_exts_destroy void tcf_exts_destroy ( s#tcf_proto * , s#tcf_exts * ) 
s#tcf_ext_map struct tcf_ext_map { int action ; int police ; } 
tcf_exts_validate int tcf_exts_validate ( s#net * , s#tcf_proto * , s#nlattr * * , s#nlattr * , s#tcf_exts * , const s#tcf_ext_map * ) 
tcf_exts_change void tcf_exts_change ( s#tcf_proto * , s#tcf_exts * , s#tcf_exts * ) 
tcf_exts_dump int tcf_exts_dump ( s#sk_buff * , s#tcf_exts * , const s#tcf_ext_map * ) 
tcf_exts_dump_stats int tcf_exts_dump_stats ( s#sk_buff * , s#tcf_exts * , const s#tcf_ext_map * ) 

/* net/sched/ematch.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s#tcf_ematch struct tcf_ematch { s#tcf_ematch_ops * ops ; unsigned long data ; unsigned int datalen ; t#u16 matchid ; t#u16 flags ; } 
s#tcf_pkt_info struct tcf_pkt_info { unsigned char * ptr ; int nexthdr ; } 
s#tcf_ematch_ops struct tcf_ematch_ops { int kind ; int datalen ; int ( * change ) ( s#tcf_proto * , void * , int , s#tcf_ematch * ) ; int ( * match ) ( s#sk_buff * , s#tcf_ematch * , s#tcf_pkt_info * ) ; void ( * destroy ) ( s#tcf_proto * , s#tcf_ematch * ) ; int ( * dump ) ( s#sk_buff * , s#tcf_ematch * ) ; s#module * owner ; s#list_head link ; } 
tcf_em_register int tcf_em_register ( s#tcf_ematch_ops * ) 
tcf_em_unregister void tcf_em_unregister ( s#tcf_ematch_ops * ) 
s#tcf_ematch_tree_hdr struct tcf_ematch_tree_hdr { t#__u16 nmatches ; t#__u16 progid ; } 
s#tcf_ematch_tree struct tcf_ematch_tree { s#tcf_ematch_tree_hdr hdr ; s#tcf_ematch * matches ; } 
tcf_em_tree_validate int tcf_em_tree_validate ( s#tcf_proto * , s#nlattr * , s#tcf_ematch_tree * ) 
tcf_em_tree_destroy void tcf_em_tree_destroy ( s#tcf_proto * , s#tcf_ematch_tree * ) 
tcf_em_tree_dump int tcf_em_tree_dump ( s#sk_buff * , s#tcf_ematch_tree * , int ) 
__tcf_em_tree_match int __tcf_em_tree_match ( s#sk_buff * , s#tcf_ematch_tree * , s#tcf_pkt_info * ) 

/* net/sched/sch_api.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##tcf_walker
register_qdisc int register_qdisc ( s#Qdisc_ops * ) 
unregister_qdisc int unregister_qdisc ( s#Qdisc_ops * ) 
qdisc_list_del void qdisc_list_del ( s#Qdisc * ) 
s#tc_ratespec struct tc_ratespec { unsigned char cell_log ; t#__u8 linklayer ; unsigned short overhead ; short cell_align ; unsigned short mpu ; t#__u32 rate ; } 
s#qdisc_rate_table struct qdisc_rate_table { s#tc_ratespec rate ; t#u32 data [ 256 ] ; s#qdisc_rate_table * next ; int refcnt ; } 
qdisc_get_rtab s#qdisc_rate_table * qdisc_get_rtab ( s#tc_ratespec * , s#nlattr * ) 
qdisc_put_rtab void qdisc_put_rtab ( s#qdisc_rate_table * ) 
qdisc_put_stab void qdisc_put_stab ( s#qdisc_size_table * ) 
__qdisc_calculate_pkt_len void __qdisc_calculate_pkt_len ( s#sk_buff * , const s#qdisc_size_table * ) 
qdisc_warn_nonwc void qdisc_warn_nonwc ( char * , s#Qdisc * ) 
s#qdisc_watchdog struct qdisc_watchdog { s#hrtimer timer ; s#Qdisc * qdisc ; } 
qdisc_watchdog_init void qdisc_watchdog_init ( s#qdisc_watchdog * , s#Qdisc * ) 
qdisc_watchdog_schedule_ns void qdisc_watchdog_schedule_ns ( s#qdisc_watchdog * , t#u64 ) 
qdisc_watchdog_cancel void qdisc_watchdog_cancel ( s#qdisc_watchdog * ) 
s#Qdisc_class_hash struct Qdisc_class_hash { s#hlist_head * hash ; unsigned int hashsize ; unsigned int hashmask ; unsigned int hashelems ; } 
qdisc_class_hash_grow void qdisc_class_hash_grow ( s#Qdisc * , s#Qdisc_class_hash * ) 
qdisc_class_hash_init int qdisc_class_hash_init ( s#Qdisc_class_hash * ) 
qdisc_class_hash_destroy void qdisc_class_hash_destroy ( s#Qdisc_class_hash * ) 
s#Qdisc_class_common struct Qdisc_class_common { t#u32 classid ; s#hlist_node hnode ; } 
qdisc_class_hash_insert void qdisc_class_hash_insert ( s#Qdisc_class_hash * , s#Qdisc_class_common * ) 
qdisc_class_hash_remove void qdisc_class_hash_remove ( s#Qdisc_class_hash * , s#Qdisc_class_common * ) 
qdisc_tree_decrease_qlen void qdisc_tree_decrease_qlen ( s#Qdisc * , unsigned int ) 
tc_classify_compat int tc_classify_compat ( s#sk_buff * , const s#tcf_proto * , s#tcf_result * ) 
tc_classify int tc_classify ( s#sk_buff * , const s#tcf_proto * , s#tcf_result * ) 
tcf_destroy_chain void tcf_destroy_chain ( s#tcf_proto * * ) 

/* net/sched/sch_fifo.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##tcf_walker
pfifo_qdisc_ops extern s#Qdisc_ops pfifo_qdisc_ops 
bfifo_qdisc_ops extern s#Qdisc_ops bfifo_qdisc_ops 
fifo_set_limit int fifo_set_limit ( s#Qdisc * , unsigned int ) 
fifo_create_dflt s#Qdisc * fifo_create_dflt ( s#Qdisc * , s#Qdisc_ops * , unsigned int ) 

/* net/sched/sch_generic.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##prot_inuse
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##tcf_walker
default_qdisc_ops extern const s#Qdisc_ops * default_qdisc_ops 
dev_trans_start extern unsigned long dev_trans_start ( s#net_device * ) 
netif_carrier_on extern void netif_carrier_on ( s#net_device * ) 
netif_carrier_off extern void netif_carrier_off ( s#net_device * ) 
noop_qdisc extern s#Qdisc noop_qdisc 
qdisc_create_dflt s#Qdisc * qdisc_create_dflt ( s#netdev_queue * , const s#Qdisc_ops * , t#u32 ) 
qdisc_reset void qdisc_reset ( s#Qdisc * ) 
qdisc_destroy void qdisc_destroy ( s#Qdisc * ) 
dev_graft_qdisc s#Qdisc * dev_graft_qdisc ( s#netdev_queue * , s#Qdisc * ) 
dev_activate void dev_activate ( s#net_device * ) 
dev_deactivate void dev_deactivate ( s#net_device * ) 
s#psched_ratecfg struct psched_ratecfg { t#u64 rate_bytes_ps ; t#u32 mult ; t#u16 overhead ; t#u8 linklayer ; t#u8 shift ; } 
psched_ratecfg_precompute void psched_ratecfg_precompute ( s#psched_ratecfg * , const s#tc_ratespec * ) 

/* net/sctp/socket.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##xfrm_state
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
E#__SCTP_MIB_MAX ( 0 ) + 34 
s#sctp_mib struct sctp_mib { unsigned long mibs [ E#__SCTP_MIB_MAX ] ; } 
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##serial_icounter_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
t#sctp_assoc_t typedef t#__s32 sctp_assoc_t 
sctp_do_peeloff int sctp_do_peeloff ( s#sock * , t#sctp_assoc_t , s#socket * * ) 

/* net/socket.o */
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kioctx
s##eventfd_ctx
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##device_private
s##libipw_device
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##forwarding_accel_ops
s##vlan_info
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##pipe_inode_info
s##mem_cgroup
s##sysfs_dirent
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##ftrace_hash
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##numa_group
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
sock_alloc_file extern s#file * sock_alloc_file ( s#socket * , int , const char * ) 
sock_from_file extern s#socket * sock_from_file ( s#file * , int * ) 
sockfd_lookup extern s#socket * sockfd_lookup ( int , int * ) 
sock_release extern void sock_release ( s#socket * ) 
sock_tx_timestamp extern void sock_tx_timestamp ( s#sock * , t#__u8 * ) 
sock_sendmsg extern int sock_sendmsg ( s#socket * , s#msghdr * , t#size_t ) 
kernel_sendmsg extern int kernel_sendmsg ( s#socket * , s#msghdr * , s#kvec * , t#size_t , t#size_t ) 
__sock_recv_timestamp extern void __sock_recv_timestamp ( s#msghdr * , s#sock * , s#sk_buff * ) 
__sock_recv_wifi_status extern void __sock_recv_wifi_status ( s#msghdr * , s#sock * , s#sk_buff * ) 
__sock_recv_ts_and_drops extern void __sock_recv_ts_and_drops ( s#msghdr * , s#sock * , s#sk_buff * ) 
sock_recvmsg extern int sock_recvmsg ( s#socket * , s#msghdr * , t#size_t , int ) 
kernel_recvmsg extern int kernel_recvmsg ( s#socket * , s#msghdr * , s#kvec * , t#size_t , t#size_t , int ) 
brioctl_set extern void brioctl_set ( int ( * ) ( s#net * , unsigned int , void * ) ) 
vlan_ioctl_set extern void vlan_ioctl_set ( int ( * ) ( s#net * , void * ) ) 
dlci_ioctl_set extern void dlci_ioctl_set ( int ( * ) ( unsigned int , void * ) ) 
sock_create_lite extern int sock_create_lite ( int , int , int , s#socket * * ) 
sock_wake_async extern int sock_wake_async ( s#socket * , int , int ) 
__sock_create extern int __sock_create ( s#net * , int , int , int , s#socket * * , int ) 
sock_create extern int sock_create ( int , int , int , s#socket * * ) 
sock_create_kern extern int sock_create_kern ( int , int , int , s#socket * * ) 
sock_register extern int sock_register ( const s#net_proto_family * ) 
sock_unregister extern void sock_unregister ( int ) 
kernel_bind extern int kernel_bind ( s#socket * , s#sockaddr * , int ) 
kernel_listen extern int kernel_listen ( s#socket * , int ) 
kernel_accept extern int kernel_accept ( s#socket * , s#socket * * , int ) 
kernel_connect extern int kernel_connect ( s#socket * , s#sockaddr * , int , int ) 
kernel_getsockname extern int kernel_getsockname ( s#socket * , s#sockaddr * , int * ) 
kernel_getpeername extern int kernel_getpeername ( s#socket * , s#sockaddr * , int * ) 
kernel_getsockopt extern int kernel_getsockopt ( s#socket * , int , int , char * , int * ) 
kernel_setsockopt extern int kernel_setsockopt ( s#socket * , int , int , char * , unsigned int ) 
kernel_sendpage extern int kernel_sendpage ( s#socket * , s#page * , int , t#size_t , int ) 
kernel_sock_ioctl extern int kernel_sock_ioctl ( s#socket * , int , unsigned long ) 
e#sock_shutdown_cmd enum sock_shutdown_cmd { SHUT_RD , SHUT_WR , SHUT_RDWR , } 
kernel_sock_shutdown extern int kernel_sock_shutdown ( s#socket * , e#sock_shutdown_cmd ) 

/* net/sunrpc/addr.o */
rpc_ntop t#size_t rpc_ntop ( const s#sockaddr * , char * , const t#size_t ) 
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##module
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##dn_route
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
rpc_pton t#size_t rpc_pton ( s#net * , const char * , const t#size_t , s#sockaddr * , const t#size_t ) 
rpc_uaddr2sockaddr t#size_t rpc_uaddr2sockaddr ( s#net * , const char * , const t#size_t , s#sockaddr * , const t#size_t ) 

/* net/sunrpc/auth.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##rpc_cred_cache
s##svc_xprt
s##svc_serv
s##rpc_iostats
rpcauth_register int rpcauth_register ( const s#rpc_authops * ) 
rpcauth_unregister int rpcauth_unregister ( const s#rpc_authops * ) 
rpcauth_get_pseudoflavor t#rpc_authflavor_t rpcauth_get_pseudoflavor ( t#rpc_authflavor_t , s#rpcsec_gss_info * ) 
rpcauth_get_gssinfo int rpcauth_get_gssinfo ( t#rpc_authflavor_t , s#rpcsec_gss_info * ) 
rpcauth_list_flavors int rpcauth_list_flavors ( t#rpc_authflavor_t * , int ) 
rpcauth_create s#rpc_auth * rpcauth_create ( s#rpc_auth_create_args * , s#rpc_clnt * ) 
rpcauth_init_credcache int rpcauth_init_credcache ( s#rpc_auth * ) 
rpcauth_key_timeout_notify int rpcauth_key_timeout_notify ( s#rpc_auth * , s#rpc_cred * ) 
rpcauth_cred_key_to_expire t#bool rpcauth_cred_key_to_expire ( s#rpc_cred * ) 
rpcauth_destroy_credcache void rpcauth_destroy_credcache ( s#rpc_auth * ) 
rpcauth_lookup_credcache s#rpc_cred * rpcauth_lookup_credcache ( s#rpc_auth * , s#auth_cred * , int ) 
rpcauth_lookupcred s#rpc_cred * rpcauth_lookupcred ( s#rpc_auth * , int ) 
rpcauth_init_cred void rpcauth_init_cred ( s#rpc_cred * , const s#auth_cred * , s#rpc_auth * , const s#rpc_credops * ) 
rpcauth_generic_bind_cred s#rpc_cred * rpcauth_generic_bind_cred ( s#rpc_task * , s#rpc_cred * , int ) 
put_rpccred void put_rpccred ( s#rpc_cred * ) 

/* net/sunrpc/auth_generic.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##svc_xprt
s##svc_serv
s##rpc_iostats
s##rpcsec_gss_info
s##rpc_cred_cache
rpc_lookup_cred s#rpc_cred * rpc_lookup_cred ( void ) 
rpc_lookup_cred_nonblock s#rpc_cred * rpc_lookup_cred_nonblock ( void ) 
rpc_lookup_machine_cred s#rpc_cred * rpc_lookup_machine_cred ( const char * ) 

/* net/sunrpc/auth_gss/gss_generic_token.o */
g_token_size int g_token_size ( s#xdr_netobj * , unsigned int ) 
g_make_token_header void g_make_token_header ( s#xdr_netobj * , int , unsigned char * * ) 
g_verify_token_header t#u32 g_verify_token_header ( s#xdr_netobj * , int * , unsigned char * * , int ) 

/* net/sunrpc/auth_gss/gss_mech_switch.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
gss_mech_register int gss_mech_register ( s#gss_api_mech * ) 
gss_mech_unregister void gss_mech_unregister ( s#gss_api_mech * ) 
gss_mech_get s#gss_api_mech * gss_mech_get ( s#gss_api_mech * ) 
gss_pseudoflavor_to_service t#u32 gss_pseudoflavor_to_service ( s#gss_api_mech * , t#u32 ) 
gss_mech_put void gss_mech_put ( s#gss_api_mech * ) 

/* net/sunrpc/auth_gss/svcauth_gss.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kstatfs
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##rpc_cred_cache
s##rpc_iostats
s##svc_cacherep
svcauth_gss_flavor t#u32 svcauth_gss_flavor ( s#auth_domain * ) 
svcauth_gss_register_pseudoflavor int svcauth_gss_register_pseudoflavor ( t#u32 , char * ) 

/* net/sunrpc/backchannel_rqst.o */
s##rpc_clnt
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kioctx
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##kmem_cache_node
s##array_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##mem_cgroup
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##rpc_cred_cache
s##rpc_procinfo
s##svc_cacherep
s##svc_stat
xprt_setup_backchannel int xprt_setup_backchannel ( s#rpc_xprt * , unsigned int ) 
xprt_destroy_backchannel void xprt_destroy_backchannel ( s#rpc_xprt * , unsigned int ) 

/* net/sunrpc/cache.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##proc_dir_entry
s#cache_detail_procfs struct cache_detail_procfs { s#proc_dir_entry * proc_ent ; s#proc_dir_entry * flush_ent , * channel_ent , * content_ent ; } 
s#cache_detail_pipefs struct cache_detail_pipefs { s#dentry * dir ; } 
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sec_path
s##neighbour
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s#cache_detail struct cache_detail { s#module * owner ; int hash_size ; s#cache_head * * hash_table ; t#rwlock_t hash_lock ; t#atomic_t inuse ; char * name ; void ( * cache_put ) ( s#kref * ) ; int ( * cache_upcall ) ( s#cache_detail * , s#cache_head * ) ; void ( * cache_request ) ( s#cache_detail * , s#cache_head * , char * * , int * ) ; int ( * cache_parse ) ( s#cache_detail * , char * , int ) ; int ( * cache_show ) ( s#seq_file * , s#cache_detail * , s#cache_head * ) ; void ( * warn_no_listener ) ( s#cache_detail * , int ) ; s#cache_head * ( * alloc ) ( void ) ; int ( * match ) ( s#cache_head * , s#cache_head * ) ; void ( * init ) ( s#cache_head * , s#cache_head * ) ; void ( * update ) ( s#cache_head * , s#cache_head * ) ; t#time_t flush_time ; s#list_head others ; t#time_t nextcheck ; int entries ; s#list_head queue ; t#atomic_t readers ; t#time_t last_close ; t#time_t last_warn ; union { s#cache_detail_procfs procfs ; s#cache_detail_pipefs pipefs ; } u ; s#net * net ; } 
sunrpc_cache_lookup extern s#cache_head * sunrpc_cache_lookup ( s#cache_detail * , s#cache_head * , int ) 
sunrpc_cache_update extern s#cache_head * sunrpc_cache_update ( s#cache_detail * , s#cache_head * , s#cache_head * , int ) 
cache_check extern int cache_check ( s#cache_detail * , s#cache_head * , s#cache_req * ) 
sunrpc_init_cache_detail extern void sunrpc_init_cache_detail ( s#cache_detail * ) 
sunrpc_destroy_cache_detail extern void sunrpc_destroy_cache_detail ( s#cache_detail * ) 
cache_flush extern void cache_flush ( void ) 
cache_purge extern void cache_purge ( s#cache_detail * ) 
qword_add extern void qword_add ( char * * , int * , char * ) 
qword_addhex extern void qword_addhex ( char * * , int * , char * , int ) 
sunrpc_cache_pipe_upcall extern int sunrpc_cache_pipe_upcall ( s#cache_detail * , s#cache_head * ) 
qword_get extern int qword_get ( char * * , char * , int ) 
cache_register_net extern int cache_register_net ( s#cache_detail * , s#net * ) 
cache_unregister_net extern void cache_unregister_net ( s#cache_detail * , s#net * ) 
cache_create_net extern s#cache_detail * cache_create_net ( s#cache_detail * , s#net * ) 
cache_destroy_net extern void cache_destroy_net ( s#cache_detail * , s#net * ) 
sunrpc_cache_register_pipefs extern int sunrpc_cache_register_pipefs ( s#dentry * , const char * , t#umode_t , s#cache_detail * ) 
sunrpc_cache_unregister_pipefs extern void sunrpc_cache_unregister_pipefs ( s#cache_detail * ) 

/* net/sunrpc/clnt.o */
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##rpc_cred_cache
s##svc_cacherep
s#rpc_create_args struct rpc_create_args { s#net * net ; int protocol ; s#sockaddr * address ; t#size_t addrsize ; s#sockaddr * saddress ; const s#rpc_timeout * timeout ; const char * servername ; const s#rpc_program * program ; t#u32 prognumber ; t#u32 version ; t#rpc_authflavor_t authflavor ; unsigned long flags ; char * client_name ; s#svc_xprt * bc_xprt ; } 
rpc_create s#rpc_clnt * rpc_create ( s#rpc_create_args * ) 
rpc_clone_client s#rpc_clnt * rpc_clone_client ( s#rpc_clnt * ) 
rpc_clone_client_set_auth s#rpc_clnt * rpc_clone_client_set_auth ( s#rpc_clnt * , t#rpc_authflavor_t ) 
rpc_killall_tasks void rpc_killall_tasks ( s#rpc_clnt * ) 
rpc_shutdown_client void rpc_shutdown_client ( s#rpc_clnt * ) 
rpc_release_client void rpc_release_client ( s#rpc_clnt * ) 
rpc_bind_new_program s#rpc_clnt * rpc_bind_new_program ( s#rpc_clnt * , const s#rpc_program * , t#u32 ) 
rpc_task_reset_client void rpc_task_reset_client ( s#rpc_task * , s#rpc_clnt * ) 
s#rpc_task_setup struct rpc_task_setup { s#rpc_task * task ; s#rpc_clnt * rpc_client ; const s#rpc_message * rpc_message ; const s#rpc_call_ops * callback_ops ; void * callback_data ; s#workqueue_struct * workqueue ; unsigned short flags ; signed char priority ; } 
rpc_run_task s#rpc_task * rpc_run_task ( const s#rpc_task_setup * ) 
rpc_call_sync int rpc_call_sync ( s#rpc_clnt * , const s#rpc_message * , int ) 
rpc_call_async int rpc_call_async ( s#rpc_clnt * , const s#rpc_message * , int , const s#rpc_call_ops * , void * ) 
rpc_call_start void rpc_call_start ( s#rpc_task * ) 
rpc_peeraddr t#size_t rpc_peeraddr ( s#rpc_clnt * , s#sockaddr * , t#size_t ) 
e#rpc_display_format_t enum rpc_display_format_t { RPC_DISPLAY_ADDR = 0 , RPC_DISPLAY_PORT , RPC_DISPLAY_PROTO , RPC_DISPLAY_HEX_ADDR , RPC_DISPLAY_HEX_PORT , RPC_DISPLAY_NETID , RPC_DISPLAY_MAX , } 
rpc_peeraddr2str const char * rpc_peeraddr2str ( s#rpc_clnt * , e#rpc_display_format_t ) 
rpc_is_foreign int rpc_is_foreign ( s#rpc_clnt * ) 
rpc_localaddr int rpc_localaddr ( s#rpc_clnt * , s#sockaddr * , t#size_t ) 
rpc_setbufsize void rpc_setbufsize ( s#rpc_clnt * , unsigned int , unsigned int ) 
rpc_protocol int rpc_protocol ( s#rpc_clnt * ) 
rpc_net_ns s#net * rpc_net_ns ( s#rpc_clnt * ) 
rpc_max_payload t#size_t rpc_max_payload ( s#rpc_clnt * ) 
rpc_get_timeout unsigned long rpc_get_timeout ( s#rpc_clnt * ) 
rpc_force_rebind void rpc_force_rebind ( s#rpc_clnt * ) 
rpc_restart_call_prepare int rpc_restart_call_prepare ( s#rpc_task * ) 
rpc_restart_call int rpc_restart_call ( s#rpc_task * ) 
rpc_call_null s#rpc_task * rpc_call_null ( s#rpc_clnt * , s#rpc_cred * , int ) 

/* net/sunrpc/rpc_pipe.o */
rpc_pipefs_notifier_register extern int rpc_pipefs_notifier_register ( s#notifier_block * ) 
rpc_pipefs_notifier_unregister extern void rpc_pipefs_notifier_unregister ( s#notifier_block * ) 
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##user_namespace
s##proc_dir_entry
s##ipc_namespace
s##mnt_namespace
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##pipe_inode_info
s##mem_cgroup
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kstatfs
s##export_operations
s##backing_dev_info
s##mtd_info
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s#rpc_pipe_msg struct rpc_pipe_msg { s#list_head list ; void * data ; t#size_t len ; t#size_t copied ; int errno ; } 
rpc_pipe_generic_upcall extern t#ssize_t rpc_pipe_generic_upcall ( s#file * , s#rpc_pipe_msg * , char * , t#size_t ) 
s#rpc_pipe_ops struct rpc_pipe_ops { t#ssize_t ( * upcall ) ( s#file * , s#rpc_pipe_msg * , char * , t#size_t ) ; t#ssize_t ( * downcall ) ( s#file * , const char * , t#size_t ) ; void ( * release_pipe ) ( s#inode * ) ; int ( * open_pipe ) ( s#inode * ) ; void ( * destroy_msg ) ( s#rpc_pipe_msg * ) ; } 
s#rpc_pipe struct rpc_pipe { s#list_head pipe ; s#list_head in_upcall ; s#list_head in_downcall ; int pipelen ; int nreaders ; int nwriters ; int flags ; s#delayed_work queue_timeout ; const s#rpc_pipe_ops * ops ; t#spinlock_t lock ; s#dentry * dentry ; } 
rpc_queue_upcall extern int rpc_queue_upcall ( s#rpc_pipe * , s#rpc_pipe_msg * ) 
rpc_destroy_pipe_data void rpc_destroy_pipe_data ( s#rpc_pipe * ) 
rpc_mkpipe_data s#rpc_pipe * rpc_mkpipe_data ( const s#rpc_pipe_ops * , int ) 
rpc_rmdir extern int rpc_rmdir ( s#dentry * ) 
rpc_mkpipe_dentry extern s#dentry * rpc_mkpipe_dentry ( s#dentry * , const char * , void * , s#rpc_pipe * ) 
rpc_unlink extern int rpc_unlink ( s#dentry * ) 
rpc_init_pipe_dir_head extern void rpc_init_pipe_dir_head ( s#rpc_pipe_dir_head * ) 
s#rpc_pipe_dir_object_ops struct rpc_pipe_dir_object_ops { int ( * create ) ( s#dentry * , s#rpc_pipe_dir_object * ) ; void ( * destroy ) ( s#dentry * , s#rpc_pipe_dir_object * ) ; } 
s#rpc_pipe_dir_object struct rpc_pipe_dir_object { s#list_head pdo_head ; const s#rpc_pipe_dir_object_ops * pdo_ops ; void * pdo_data ; } 
rpc_init_pipe_dir_object extern void rpc_init_pipe_dir_object ( s#rpc_pipe_dir_object * , const s#rpc_pipe_dir_object_ops * , void * ) 
rpc_add_pipe_dir_object extern int rpc_add_pipe_dir_object ( s#net * , s#rpc_pipe_dir_head * , s#rpc_pipe_dir_object * ) 
rpc_remove_pipe_dir_object extern void rpc_remove_pipe_dir_object ( s#net * , s#rpc_pipe_dir_head * , s#rpc_pipe_dir_object * ) 
rpc_find_or_alloc_pipe_dir_object extern s#rpc_pipe_dir_object * rpc_find_or_alloc_pipe_dir_object ( s#net * , s#rpc_pipe_dir_head * , int ( * ) ( s#rpc_pipe_dir_object * , void * ) , s#rpc_pipe_dir_object * ( * ) ( void * ) , void * ) 
rpc_d_lookup_sb extern s#dentry * rpc_d_lookup_sb ( const s#super_block * , const unsigned char * ) 
rpc_get_sb_net extern s#super_block * rpc_get_sb_net ( const s#net * ) 
rpc_put_sb_net extern void rpc_put_sb_net ( const s#net * ) 
gssd_running extern t#bool gssd_running ( s#net * ) 

/* net/sunrpc/rpcb_clnt.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##workqueue_struct
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##mem_cgroup
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##svc_xprt
s##svc_serv
s##rpcsec_gss_info
s##rpc_cred_cache
s##rpc_iostats
rpcb_getport_async void rpcb_getport_async ( s#rpc_task * ) 

/* net/sunrpc/sched.o */
s##tvec_base
rpc_init_priority_wait_queue void rpc_init_priority_wait_queue ( s#rpc_wait_queue * , const char * ) 
rpc_init_wait_queue void rpc_init_wait_queue ( s#rpc_wait_queue * , const char * ) 
rpc_destroy_wait_queue void rpc_destroy_wait_queue ( s#rpc_wait_queue * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##workqueue_struct
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##mem_cgroup
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##ftrace_hash
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##numa_group
s##return_instance
s##uprobe
s##svc_xprt
s##svc_serv
s##rpcsec_gss_info
s##rpc_cred_cache
s##rpc_iostats
__rpc_wait_for_completion_task int __rpc_wait_for_completion_task ( s#rpc_task * , int ( * ) ( void * ) ) 
t#rpc_action typedef void ( * rpc_action ) ( s#rpc_task * ) 
rpc_sleep_on void rpc_sleep_on ( s#rpc_wait_queue * , s#rpc_task * , t#rpc_action ) 
rpc_sleep_on_priority void rpc_sleep_on_priority ( s#rpc_wait_queue * , s#rpc_task * , t#rpc_action , int ) 
rpc_wake_up_queued_task void rpc_wake_up_queued_task ( s#rpc_wait_queue * , s#rpc_task * ) 
rpc_wake_up_first s#rpc_task * rpc_wake_up_first ( s#rpc_wait_queue * , t#bool ( * ) ( s#rpc_task * , void * ) , void * ) 
rpc_wake_up_next s#rpc_task * rpc_wake_up_next ( s#rpc_wait_queue * ) 
rpc_wake_up void rpc_wake_up ( s#rpc_wait_queue * ) 
rpc_wake_up_status void rpc_wake_up_status ( s#rpc_wait_queue * , int ) 
rpc_delay void rpc_delay ( s#rpc_task * , unsigned long ) 
rpc_exit void rpc_exit ( s#rpc_task * , int ) 
rpc_malloc void * rpc_malloc ( s#rpc_task * , t#size_t ) 
rpc_free void rpc_free ( void * ) 
rpc_put_task void rpc_put_task ( s#rpc_task * ) 
rpc_put_task_async void rpc_put_task_async ( s#rpc_task * ) 

/* net/sunrpc/socklib.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##module
s##kstatfs
s##user_namespace
s##export_operations
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##hd_struct
s##gendisk
s##request_queue
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
s#xdr_skb_reader struct xdr_skb_reader { s#sk_buff * skb ; unsigned int offset ; t#size_t count ; t#__wsum csum ; } 
xdr_skb_read_bits t#size_t xdr_skb_read_bits ( s#xdr_skb_reader * , void * , t#size_t ) 
t#xdr_skb_read_actor typedef t#size_t ( * xdr_skb_read_actor ) ( s#xdr_skb_reader * , void * , t#size_t ) 
xdr_partial_copy_from_skb extern t#ssize_t xdr_partial_copy_from_skb ( s#xdr_buf * , unsigned int , s#xdr_skb_reader * , t#xdr_skb_read_actor ) 
csum_partial_copy_to_xdr extern int csum_partial_copy_to_xdr ( s#xdr_buf * , s#sk_buff * ) 

/* net/sunrpc/stats.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##workqueue_struct
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##mem_cgroup
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##rpc_cred_cache
s##svc_cacherep
svc_seq_show void svc_seq_show ( s#seq_file * , const s#svc_stat * ) 
rpc_alloc_iostats s#rpc_iostats * rpc_alloc_iostats ( s#rpc_clnt * ) 
rpc_free_iostats void rpc_free_iostats ( s#rpc_iostats * ) 
rpc_count_iostats void rpc_count_iostats ( const s#rpc_task * , s#rpc_iostats * ) 
rpc_print_iostats void rpc_print_iostats ( s#seq_file * , s#rpc_clnt * ) 
rpc_proc_register s#proc_dir_entry * rpc_proc_register ( s#net * , s#rpc_stat * ) 
rpc_proc_unregister void rpc_proc_unregister ( s#net * , const char * ) 
svc_proc_register s#proc_dir_entry * svc_proc_register ( s#net * , s#svc_stat * , const s#file_operations * ) 
svc_proc_unregister void svc_proc_unregister ( s#net * , const char * ) 

/* net/sunrpc/sunrpc_syms.o */
sunrpc_net_id extern int sunrpc_net_id 

/* net/sunrpc/svc.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##rpc_cred_cache
s##rpc_iostats
s##svc_cacherep
svc_rpcb_setup int svc_rpcb_setup ( s#svc_serv * , s#net * ) 
svc_rpcb_cleanup void svc_rpcb_cleanup ( s#svc_serv * , s#net * ) 
svc_bind int svc_bind ( s#svc_serv * , s#net * ) 
svc_create s#svc_serv * svc_create ( s#svc_program * , unsigned int , void ( * ) ( s#svc_serv * , s#net * ) ) 
svc_create_pooled s#svc_serv * svc_create_pooled ( s#svc_program * , unsigned int , void ( * ) ( s#svc_serv * , s#net * ) , t#svc_thread_fn , s#module * ) 
svc_shutdown_net void svc_shutdown_net ( s#svc_serv * , s#net * ) 
svc_destroy void svc_destroy ( s#svc_serv * ) 
svc_prepare_thread s#svc_rqst * svc_prepare_thread ( s#svc_serv * , s#svc_pool * , int ) 
svc_set_num_threads int svc_set_num_threads ( s#svc_serv * , s#svc_pool * , int ) 
svc_exit_thread void svc_exit_thread ( s#svc_rqst * ) 
svc_process int svc_process ( s#svc_rqst * ) 
bc_svc_process int bc_svc_process ( s#svc_serv * , s#rpc_rqst * , s#svc_rqst * ) 
svc_max_payload extern t#u32 svc_max_payload ( const s#svc_rqst * ) 

/* net/sunrpc/svc_xprt.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##svc_cacherep
s##rpc_clnt
s##rpc_cred_cache
s##rpc_procinfo
svc_reg_xprt_class int svc_reg_xprt_class ( s#svc_xprt_class * ) 
svc_unreg_xprt_class void svc_unreg_xprt_class ( s#svc_xprt_class * ) 
svc_xprt_put void svc_xprt_put ( s#svc_xprt * ) 
svc_xprt_init void svc_xprt_init ( s#net * , s#svc_xprt_class * , s#svc_xprt * , s#svc_serv * ) 
svc_create_xprt int svc_create_xprt ( s#svc_serv * , const char * , s#net * , const int , const unsigned short , int ) 
svc_xprt_copy_addrs void svc_xprt_copy_addrs ( s#svc_rqst * , s#svc_xprt * ) 
svc_print_addr char * svc_print_addr ( s#svc_rqst * , char * , t#size_t ) 
svc_xprt_enqueue void svc_xprt_enqueue ( s#svc_xprt * ) 
svc_reserve void svc_reserve ( s#svc_rqst * , int ) 
svc_wake_up void svc_wake_up ( s#svc_serv * ) 
svc_recv int svc_recv ( s#svc_rqst * , long ) 
svc_drop void svc_drop ( s#svc_rqst * ) 
svc_close_xprt void svc_close_xprt ( s#svc_xprt * ) 
svc_find_xprt s#svc_xprt * svc_find_xprt ( s#svc_serv * , const char * , s#net * , const t#sa_family_t , const unsigned short ) 
svc_xprt_names int svc_xprt_names ( s#svc_serv * , char * , const int ) 
svc_pool_stats_open int svc_pool_stats_open ( s#svc_serv * , s#file * ) 

/* net/sunrpc/svcauth.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##seq_file
s##optimistic_spin_queue
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##svc_stat
s##tvec_base
s##net
s##rpc_xprt
s##svc_cacherep
svc_authenticate extern int svc_authenticate ( s#svc_rqst * , t#__be32 * ) 
svc_set_client extern int svc_set_client ( s#svc_rqst * ) 
svc_auth_register extern int svc_auth_register ( t#rpc_authflavor_t , s#auth_ops * ) 
svc_auth_unregister extern void svc_auth_unregister ( t#rpc_authflavor_t ) 
auth_domain_put extern void auth_domain_put ( s#auth_domain * ) 
auth_domain_lookup extern s#auth_domain * auth_domain_lookup ( char * , s#auth_domain * ) 
auth_domain_find extern s#auth_domain * auth_domain_find ( char * ) 

/* net/sunrpc/svcauth_unix.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##svc_stat
s##rpc_xprt
s##svc_cacherep
unix_domain_find extern s#auth_domain * unix_domain_find ( char * ) 
svcauth_unix_purge extern void svcauth_unix_purge ( s#net * ) 
svcauth_unix_set_client extern int svcauth_unix_set_client ( s#svc_rqst * ) 

/* net/sunrpc/svcsock.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##rpc_cred_cache
s##rpc_iostats
s##svc_cacherep
svc_sock_update_bufs void svc_sock_update_bufs ( s#svc_serv * ) 
svc_alien_sock t#bool svc_alien_sock ( s#net * , int ) 
svc_addsock int svc_addsock ( s#svc_serv * , const int , char * , const t#size_t ) 

/* net/sunrpc/sysctl.o */
rpc_debug extern unsigned int rpc_debug 
nfs_debug extern unsigned int nfs_debug 
nfsd_debug extern unsigned int nfsd_debug 
nlm_debug extern unsigned int nlm_debug 

/* net/sunrpc/timer.o */
rpc_init_rtt extern void rpc_init_rtt ( s#rpc_rtt * , unsigned long ) 
rpc_update_rtt extern void rpc_update_rtt ( s#rpc_rtt * , unsigned , long ) 
rpc_calc_rto extern unsigned long rpc_calc_rto ( s#rpc_rtt * , unsigned ) 

/* net/sunrpc/xdr.o */
xdr_encode_netobj t#__be32 * xdr_encode_netobj ( t#__be32 * , const s#xdr_netobj * ) 
xdr_decode_netobj t#__be32 * xdr_decode_netobj ( t#__be32 * , s#xdr_netobj * ) 
xdr_encode_opaque_fixed t#__be32 * xdr_encode_opaque_fixed ( t#__be32 * , const void * , unsigned int ) 
xdr_encode_opaque t#__be32 * xdr_encode_opaque ( t#__be32 * , const void * , unsigned int ) 
xdr_encode_string t#__be32 * xdr_encode_string ( t#__be32 * , const char * ) 
xdr_decode_string_inplace t#__be32 * xdr_decode_string_inplace ( t#__be32 * , char * * , unsigned int * , unsigned int ) 
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nameidata
s##cdev
s##radix_tree_node
s##slab
s##kmem_cache_node
s##array_cache
xdr_terminate_string void xdr_terminate_string ( s#xdr_buf * , const t#u32 ) 
xdr_inline_pages void xdr_inline_pages ( s#xdr_buf * , unsigned int , s#page * * , unsigned int , unsigned int ) 
_copy_from_pages extern void _copy_from_pages ( char * , s#page * * , t#size_t , t#size_t ) 
xdr_shift_buf extern void xdr_shift_buf ( s#xdr_buf * , t#size_t ) 
xdr_stream_pos extern unsigned int xdr_stream_pos ( const s#xdr_stream * ) 
xdr_init_encode extern void xdr_init_encode ( s#xdr_stream * , s#xdr_buf * , t#__be32 * ) 
xdr_reserve_space extern t#__be32 * xdr_reserve_space ( s#xdr_stream * , t#size_t ) 
xdr_write_pages extern void xdr_write_pages ( s#xdr_stream * , s#page * * , unsigned int , unsigned int ) 
xdr_init_decode extern void xdr_init_decode ( s#xdr_stream * , s#xdr_buf * , t#__be32 * ) 
xdr_init_decode_pages extern void xdr_init_decode_pages ( s#xdr_stream * , s#xdr_buf * , s#page * * , unsigned int ) 
xdr_set_scratch_buffer extern void xdr_set_scratch_buffer ( s#xdr_stream * , void * , t#size_t ) 
xdr_inline_decode extern t#__be32 * xdr_inline_decode ( s#xdr_stream * , t#size_t ) 
xdr_read_pages extern unsigned int xdr_read_pages ( s#xdr_stream * , unsigned int ) 
xdr_enter_page extern void xdr_enter_page ( s#xdr_stream * , unsigned int ) 
xdr_buf_from_iov extern void xdr_buf_from_iov ( s#kvec * , s#xdr_buf * ) 
xdr_buf_subsegment extern int xdr_buf_subsegment ( s#xdr_buf * , s#xdr_buf * , unsigned int , unsigned int ) 
xdr_buf_trim extern void xdr_buf_trim ( s#xdr_buf * , unsigned int ) 
read_bytes_from_xdr_buf extern int read_bytes_from_xdr_buf ( s#xdr_buf * , unsigned int , void * , unsigned int ) 
write_bytes_to_xdr_buf extern int write_bytes_to_xdr_buf ( s#xdr_buf * , unsigned int , void * , unsigned int ) 
xdr_decode_word extern int xdr_decode_word ( s#xdr_buf * , unsigned int , t#u32 * ) 
xdr_encode_word extern int xdr_encode_word ( s#xdr_buf * , unsigned int , t#u32 ) 
xdr_buf_read_netobj extern int xdr_buf_read_netobj ( s#xdr_buf * , s#xdr_netobj * , unsigned int ) 
t#xdr_xcode_elem_t typedef int ( * xdr_xcode_elem_t ) ( s#xdr_array2_desc * , void * ) 
s#xdr_array2_desc struct xdr_array2_desc { unsigned int elem_size ; unsigned int array_len ; unsigned int array_maxlen ; t#xdr_xcode_elem_t xcode ; } 
xdr_decode_array2 extern int xdr_decode_array2 ( s#xdr_buf * , unsigned int , s#xdr_array2_desc * ) 
xdr_encode_array2 extern int xdr_encode_array2 ( s#xdr_buf * , unsigned int , s#xdr_array2_desc * ) 
xdr_process_buf extern int xdr_process_buf ( s#xdr_buf * , unsigned int , unsigned int , int ( * ) ( s#scatterlist * , void * ) , void * ) 

/* net/sunrpc/xprt.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##rpc_cred_cache
s##svc_cacherep
s#xprt_create struct xprt_create { int ident ; s#net * net ; s#sockaddr * srcaddr ; s#sockaddr * dstaddr ; t#size_t addrlen ; const char * servername ; s#svc_xprt * bc_xprt ; unsigned int flags ; } 
s#xprt_class struct xprt_class { s#list_head list ; int ident ; s#rpc_xprt * ( * setup ) ( s#xprt_create * ) ; s#module * owner ; char name [ 32 ] ; } 
xprt_register_transport int xprt_register_transport ( s#xprt_class * ) 
xprt_unregister_transport int xprt_unregister_transport ( s#xprt_class * ) 
xprt_load_transport int xprt_load_transport ( const char * ) 
xprt_reserve_xprt int xprt_reserve_xprt ( s#rpc_xprt * , s#rpc_task * ) 
xprt_reserve_xprt_cong int xprt_reserve_xprt_cong ( s#rpc_xprt * , s#rpc_task * ) 
xprt_release_xprt void xprt_release_xprt ( s#rpc_xprt * , s#rpc_task * ) 
xprt_release_xprt_cong void xprt_release_xprt_cong ( s#rpc_xprt * , s#rpc_task * ) 
xprt_release_rqst_cong void xprt_release_rqst_cong ( s#rpc_task * ) 
xprt_adjust_cwnd void xprt_adjust_cwnd ( s#rpc_xprt * , s#rpc_task * , int ) 
xprt_wake_pending_tasks void xprt_wake_pending_tasks ( s#rpc_xprt * , int ) 
xprt_wait_for_buffer_space void xprt_wait_for_buffer_space ( s#rpc_task * , t#rpc_action ) 
xprt_write_space void xprt_write_space ( s#rpc_xprt * ) 
xprt_set_retrans_timeout_def void xprt_set_retrans_timeout_def ( s#rpc_task * ) 
xprt_set_retrans_timeout_rtt void xprt_set_retrans_timeout_rtt ( s#rpc_task * ) 
xprt_disconnect_done void xprt_disconnect_done ( s#rpc_xprt * ) 
xprt_lookup_rqst s#rpc_rqst * xprt_lookup_rqst ( s#rpc_xprt * , t#__be32 ) 
xprt_complete_rqst void xprt_complete_rqst ( s#rpc_task * , int ) 
xprt_alloc_slot void xprt_alloc_slot ( s#rpc_xprt * , s#rpc_task * ) 
xprt_lock_and_alloc_slot void xprt_lock_and_alloc_slot ( s#rpc_xprt * , s#rpc_task * ) 
xprt_alloc s#rpc_xprt * xprt_alloc ( s#net * , t#size_t , unsigned int , unsigned int ) 
xprt_free void xprt_free ( s#rpc_xprt * ) 

/* net/sunrpc/xprtsock.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##optimistic_spin_queue
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##kmem_cache_node
s##array_cache
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##kioctx
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##slab
s##rpc_cred_cache
s##rpc_iostats
s##svc_cacherep
xs_swapper int xs_swapper ( s#rpc_xprt * , int ) 

/* net/sysctl_net.o */
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##user_namespace
s##proc_dir_entry
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##module
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
register_net_sysctl extern s#ctl_table_header * register_net_sysctl ( s#net * , const char * , s#ctl_table * ) 
unregister_net_sysctl_table extern void unregister_net_sysctl_table ( s#ctl_table_header * ) 

/* net/unix/af_unix.o */
unix_socket_table extern s#hlist_head unix_socket_table [ 2 * 256 ] 
unix_table_lock extern t#spinlock_t unix_table_lock 
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
unix_peer_get s#sock * unix_peer_get ( s#sock * ) 
unix_inq_len long unix_inq_len ( s#sock * ) 
unix_outq_len long unix_outq_len ( s#sock * ) 

/* net/vmw_vsock/af_vsock.o */
vm_sockets_get_local_cid int vm_sockets_get_local_cid ( void ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s#sockaddr_vm struct sockaddr_vm { t#__kernel_sa_family_t svm_family ; unsigned short svm_reserved1 ; unsigned int svm_port ; unsigned int svm_cid ; unsigned char svm_zero [ sizeof ( struct sockaddr ) - sizeof ( sa_family_t ) - sizeof ( unsigned short ) - sizeof ( unsigned int ) - sizeof ( unsigned int ) ] ; } 
s#vsock_sock struct vsock_sock { s#sock sk ; s#sockaddr_vm local_addr ; s#sockaddr_vm remote_addr ; s#list_head bound_table ; s#list_head connected_table ; t#bool trusted ; t#bool cached_peer_allow_dgram ; t#u32 cached_peer ; const s#cred * owner ; long connect_timeout ; s#sock * listener ; s#list_head pending_links ; s#list_head accept_queue ; t#bool rejected ; s#delayed_work dwork ; t#u32 peer_shutdown ; t#bool sent_request ; t#bool ignore_connecting_rst ; void * trans ; } 
vsock_insert_connected void vsock_insert_connected ( s#vsock_sock * ) 
vsock_remove_bound void vsock_remove_bound ( s#vsock_sock * ) 
vsock_remove_connected void vsock_remove_connected ( s#vsock_sock * ) 
vsock_find_bound_socket s#sock * vsock_find_bound_socket ( s#sockaddr_vm * ) 
vsock_find_connected_socket s#sock * vsock_find_connected_socket ( s#sockaddr_vm * , s#sockaddr_vm * ) 
vsock_for_each_connected_socket void vsock_for_each_connected_socket ( void ( * ) ( s#sock * ) ) 
vsock_add_pending void vsock_add_pending ( s#sock * , s#sock * ) 
vsock_remove_pending void vsock_remove_pending ( s#sock * , s#sock * ) 
vsock_enqueue_accept void vsock_enqueue_accept ( s#sock * , s#sock * ) 
vsock_pending_work void vsock_pending_work ( s#work_struct * ) 
__vsock_create s#sock * __vsock_create ( s#net * , s#socket * , s#sock * , t#gfp_t , unsigned short ) 
vsock_stream_has_data t#s64 vsock_stream_has_data ( s#vsock_sock * ) 
vsock_stream_has_space t#s64 vsock_stream_has_space ( s#vsock_sock * ) 
s#vsock_transport_recv_notify_data struct vsock_transport_recv_notify_data { t#u64 data1 ; t#u64 data2 ; t#bool notify_on_block ; } 
s#vsock_transport_send_notify_data struct vsock_transport_send_notify_data { t#u64 data1 ; t#u64 data2 ; } 
s#vsock_transport struct vsock_transport { int ( * init ) ( s#vsock_sock * , s#vsock_sock * ) ; void ( * destruct ) ( s#vsock_sock * ) ; void ( * release ) ( s#vsock_sock * ) ; int ( * connect ) ( s#vsock_sock * ) ; int ( * dgram_bind ) ( s#vsock_sock * , s#sockaddr_vm * ) ; int ( * dgram_dequeue ) ( s#kiocb * , s#vsock_sock * , s#msghdr * , t#size_t , int ) ; int ( * dgram_enqueue ) ( s#vsock_sock * , s#sockaddr_vm * , s#iovec * , t#size_t ) ; t#bool ( * dgram_allow ) ( t#u32 , t#u32 ) ; t#ssize_t ( * stream_dequeue ) ( s#vsock_sock * , s#iovec * , t#size_t , int ) ; t#ssize_t ( * stream_enqueue ) ( s#vsock_sock * , s#iovec * , t#size_t ) ; t#s64 ( * stream_has_data ) ( s#vsock_sock * ) ; t#s64 ( * stream_has_space ) ( s#vsock_sock * ) ; t#u64 ( * stream_rcvhiwat ) ( s#vsock_sock * ) ; t#bool ( * stream_is_active ) ( s#vsock_sock * ) ; t#bool ( * stream_allow ) ( t#u32 , t#u32 ) ; int ( * notify_poll_in ) ( s#vsock_sock * , t#size_t , t#bool * ) ; int ( * notify_poll_out ) ( s#vsock_sock * , t#size_t , t#bool * ) ; int ( * notify_recv_init ) ( s#vsock_sock * , t#size_t , s#vsock_transport_recv_notify_data * ) ; int ( * notify_recv_pre_block ) ( s#vsock_sock * , t#size_t , s#vsock_transport_recv_notify_data * ) ; int ( * notify_recv_pre_dequeue ) ( s#vsock_sock * , t#size_t , s#vsock_transport_recv_notify_data * ) ; int ( * notify_recv_post_dequeue ) ( s#vsock_sock * , t#size_t , t#ssize_t , t#bool , s#vsock_transport_recv_notify_data * ) ; int ( * notify_send_init ) ( s#vsock_sock * , s#vsock_transport_send_notify_data * ) ; int ( * notify_send_pre_block ) ( s#vsock_sock * , s#vsock_transport_send_notify_data * ) ; int ( * notify_send_pre_enqueue ) ( s#vsock_sock * , s#vsock_transport_send_notify_data * ) ; int ( * notify_send_post_enqueue ) ( s#vsock_sock * , t#ssize_t , s#vsock_transport_send_notify_data * ) ; int ( * shutdown ) ( s#vsock_sock * , int ) ; void ( * set_buffer_size ) ( s#vsock_sock * , t#u64 ) ; void ( * set_min_buffer_size ) ( s#vsock_sock * , t#u64 ) ; void ( * set_max_buffer_size ) ( s#vsock_sock * , t#u64 ) ; t#u64 ( * get_buffer_size ) ( s#vsock_sock * ) ; t#u64 ( * get_min_buffer_size ) ( s#vsock_sock * ) ; t#u64 ( * get_max_buffer_size ) ( s#vsock_sock * ) ; t#u32 ( * get_local_cid ) ( void ) ; } 
__vsock_core_init int __vsock_core_init ( const s#vsock_transport * , s#module * ) 
vsock_core_exit void vsock_core_exit ( void ) 

/* net/vmw_vsock/vsock_addr.o */
vsock_addr_init void vsock_addr_init ( s#sockaddr_vm * , t#u32 , t#u32 ) 
vsock_addr_validate int vsock_addr_validate ( const s#sockaddr_vm * ) 
vsock_addr_bound t#bool vsock_addr_bound ( const s#sockaddr_vm * ) 
vsock_addr_unbind void vsock_addr_unbind ( s#sockaddr_vm * ) 
vsock_addr_equals_addr t#bool vsock_addr_equals_addr ( const s#sockaddr_vm * , const s#sockaddr_vm * ) 
vsock_addr_cast int vsock_addr_cast ( const s#sockaddr * , t#size_t , s#sockaddr_vm * * ) 

/* net/wireless/chan.o */
cfg80211_chandef_create void cfg80211_chandef_create ( s#cfg80211_chan_def * , s#ieee80211_channel * , e#nl80211_channel_type ) 
cfg80211_chandef_valid t#bool cfg80211_chandef_valid ( const s#cfg80211_chan_def * ) 
cfg80211_chandef_compatible const s#cfg80211_chan_def * cfg80211_chandef_compatible ( const s#cfg80211_chan_def * , const s#cfg80211_chan_def * ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s#cfg80211_cached_keys struct cfg80211_cached_keys { s#key_params params [ 6 ] ; t#u8 data [ 6 ] [ 32 ] ; int def , defmgmt ; } 
s#cfg80211_bss_ies struct cfg80211_bss_ies { t#u64 tsf ; s#callback_head callback_head ; int len ; t#u8 data [ ] ; } 
s#cfg80211_bss struct cfg80211_bss { s#ieee80211_channel * channel ; e#nl80211_bss_scan_width scan_width ; const s#cfg80211_bss_ies * ies ; const s#cfg80211_bss_ies * beacon_ies ; const s#cfg80211_bss_ies * proberesp_ies ; s#cfg80211_bss * hidden_beacon_bss ; t#s32 signal ; t#u16 beacon_interval ; t#u16 capability ; t#u8 bssid [ 6 ] ; t#u8 priv [ 0 ] __attribute__ ( ( aligned ( sizeof ( void * ) ) ) ) ; } 
s#cfg80211_internal_bss struct cfg80211_internal_bss { s#list_head list ; s#list_head hidden_list ; s#rb_node rbn ; unsigned long ts ; unsigned long refcount ; t#atomic_t hold ; s#cfg80211_bss pub ; } 
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
cfg80211_chandef_usable t#bool cfg80211_chandef_usable ( s#wiphy * , const s#cfg80211_chan_def * , t#u32 ) 
cfg80211_reg_can_beacon t#bool cfg80211_reg_can_beacon ( s#wiphy * , s#cfg80211_chan_def * ) 

/* net/wireless/core.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##libipw_device
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s#cfg80211_beacon_data struct cfg80211_beacon_data { const t#u8 * head , * tail ; const t#u8 * beacon_ies ; const t#u8 * proberesp_ies ; const t#u8 * assocresp_ies ; const t#u8 * probe_resp ; t#size_t head_len , tail_len ; t#size_t beacon_ies_len ; t#size_t proberesp_ies_len ; t#size_t assocresp_ies_len ; t#size_t probe_resp_len ; } 
e#nl80211_hidden_ssid enum nl80211_hidden_ssid { NL80211_HIDDEN_SSID_NOT_IN_USE , NL80211_HIDDEN_SSID_ZERO_LEN , NL80211_HIDDEN_SSID_ZERO_CONTENTS } 
e#nl80211_acl_policy enum nl80211_acl_policy { NL80211_ACL_POLICY_ACCEPT_UNLESS_LISTED , NL80211_ACL_POLICY_DENY_UNLESS_LISTED , } 
s#cfg80211_acl_data struct cfg80211_acl_data { e#nl80211_acl_policy acl_policy ; int n_acl_entries ; s#mac_address mac_addrs [ ] ; } 
s#cfg80211_ap_settings struct cfg80211_ap_settings { s#cfg80211_chan_def chandef ; s#cfg80211_beacon_data beacon ; int beacon_interval , dtim_period ; const t#u8 * ssid ; t#size_t ssid_len ; e#nl80211_hidden_ssid hidden_ssid ; s#cfg80211_crypto_settings crypto ; t#bool privacy ; e#nl80211_auth_type auth_type ; int inactivity_timeout ; t#u8 p2p_ctwindow ; t#bool p2p_opp_ps ; const s#cfg80211_acl_data * acl ; t#bool radar_required ; } 
E#__NL80211_MESH_POWER_AFTER_LAST 4 
e#nl80211_mesh_power_mode enum nl80211_mesh_power_mode { NL80211_MESH_POWER_UNKNOWN , NL80211_MESH_POWER_ACTIVE , NL80211_MESH_POWER_LIGHT_SLEEP , NL80211_MESH_POWER_DEEP_SLEEP , __NL80211_MESH_POWER_AFTER_LAST , NL80211_MESH_POWER_MAX = E#__NL80211_MESH_POWER_AFTER_LAST - 1 } 
s#station_parameters struct station_parameters { const t#u8 * supported_rates ; s#net_device * vlan ; t#u32 sta_flags_mask , sta_flags_set ; t#u32 sta_modify_mask ; int listen_interval ; t#u16 aid ; t#u8 supported_rates_len ; t#u8 plink_action ; t#u8 plink_state ; const s#ieee80211_ht_cap * ht_capa ; const s#ieee80211_vht_cap * vht_capa ; t#u8 uapsd_queues ; t#u8 max_sp ; e#nl80211_mesh_power_mode local_pm ; t#u16 capability ; const t#u8 * ext_capab ; t#u8 ext_capab_len ; } 
s#rate_info struct rate_info { t#u8 flags ; t#u8 mcs ; t#u16 legacy ; t#u8 nss ; } 
s#sta_bss_parameters struct sta_bss_parameters { t#u8 flags ; t#u8 dtim_period ; t#u16 beacon_interval ; } 
s#nl80211_sta_flag_update struct nl80211_sta_flag_update { t#__u32 mask ; t#__u32 set ; } 
s#station_info struct station_info { t#u32 filled ; t#u32 connected_time ; t#u32 inactive_time ; t#u64 rx_bytes ; t#u64 tx_bytes ; t#u16 llid ; t#u16 plid ; t#u8 plink_state ; t#s8 signal ; t#s8 signal_avg ; t#u8 chains ; t#s8 chain_signal [ 4 ] ; t#s8 chain_signal_avg [ 4 ] ; s#rate_info txrate ; s#rate_info rxrate ; t#u32 rx_packets ; t#u32 tx_packets ; t#u32 tx_retries ; t#u32 tx_failed ; t#u32 rx_dropped_misc ; s#sta_bss_parameters bss_param ; s#nl80211_sta_flag_update sta_flags ; int generation ; const t#u8 * assoc_req_ies ; t#size_t assoc_req_ies_len ; t#u32 beacon_loss_count ; t#s64 t_offset ; e#nl80211_mesh_power_mode local_pm ; e#nl80211_mesh_power_mode peer_pm ; e#nl80211_mesh_power_mode nonpeer_pm ; } 
s#mpath_info struct mpath_info { t#u32 filled ; t#u32 frame_qlen ; t#u32 sn ; t#u32 metric ; t#u32 exptime ; t#u32 discovery_timeout ; t#u8 discovery_retries ; t#u8 flags ; int generation ; } 
s#mesh_config struct mesh_config { t#u16 dot11MeshRetryTimeout ; t#u16 dot11MeshConfirmTimeout ; t#u16 dot11MeshHoldingTimeout ; t#u16 dot11MeshMaxPeerLinks ; t#u8 dot11MeshMaxRetries ; t#u8 dot11MeshTTL ; t#u8 element_ttl ; t#bool auto_open_plinks ; t#u32 dot11MeshNbrOffsetMaxNeighbor ; t#u8 dot11MeshHWMPmaxPREQretries ; t#u32 path_refresh_time ; t#u16 min_discovery_timeout ; t#u32 dot11MeshHWMPactivePathTimeout ; t#u16 dot11MeshHWMPpreqMinInterval ; t#u16 dot11MeshHWMPperrMinInterval ; t#u16 dot11MeshHWMPnetDiameterTraversalTime ; t#u8 dot11MeshHWMPRootMode ; t#u16 dot11MeshHWMPRannInterval ; t#bool dot11MeshGateAnnouncementProtocol ; t#bool dot11MeshForwarding ; t#s32 rssi_threshold ; t#u16 ht_opmode ; t#u32 dot11MeshHWMPactivePathToRootTimeout ; t#u16 dot11MeshHWMProotInterval ; t#u16 dot11MeshHWMPconfirmationInterval ; e#nl80211_mesh_power_mode power_mode ; t#u16 dot11MeshAwakeWindowDuration ; t#u32 plink_timeout ; } 
s#mesh_setup struct mesh_setup { s#cfg80211_chan_def chandef ; const t#u8 * mesh_id ; t#u8 mesh_id_len ; t#u8 sync_method ; t#u8 path_sel_proto ; t#u8 path_metric ; t#u8 auth_id ; const t#u8 * ie ; t#u8 ie_len ; t#bool is_authenticated ; t#bool is_secure ; t#bool user_mpm ; t#u8 dtim_period ; t#u16 beacon_interval ; int mcast_rate [ E#IEEE80211_NUM_BANDS ] ; t#u32 basic_rates ; } 
s#bss_parameters struct bss_parameters { int use_cts_prot ; int use_short_preamble ; int use_short_slot_time ; t#u8 * basic_rates ; t#u8 basic_rates_len ; int ap_isolate ; int ht_opmode ; t#s8 p2p_ctwindow , p2p_opp_ps ; } 
e#nl80211_ac enum nl80211_ac { NL80211_AC_VO , NL80211_AC_VI , NL80211_AC_BE , NL80211_AC_BK , NL80211_NUM_ACS } 
s#ieee80211_txq_params struct ieee80211_txq_params { e#nl80211_ac ac ; t#u16 txop ; t#u16 cwmin ; t#u16 cwmax ; t#u8 aifs ; } 
s#cfg80211_auth_request struct cfg80211_auth_request { s#cfg80211_bss * bss ; const t#u8 * ie ; t#size_t ie_len ; e#nl80211_auth_type auth_type ; const t#u8 * key ; t#u8 key_len , key_idx ; const t#u8 * sae_data ; t#size_t sae_data_len ; } 
s#cfg80211_assoc_request struct cfg80211_assoc_request { s#cfg80211_bss * bss ; const t#u8 * ie , * prev_bssid ; t#size_t ie_len ; s#cfg80211_crypto_settings crypto ; t#bool use_mfp ; t#u32 flags ; s#ieee80211_ht_cap ht_capa ; s#ieee80211_ht_cap ht_capa_mask ; s#ieee80211_vht_cap vht_capa , vht_capa_mask ; } 
s#cfg80211_deauth_request struct cfg80211_deauth_request { const t#u8 * bssid ; const t#u8 * ie ; t#size_t ie_len ; t#u16 reason_code ; t#bool local_state_change ; } 
s#cfg80211_disassoc_request struct cfg80211_disassoc_request { s#cfg80211_bss * bss ; const t#u8 * ie ; t#size_t ie_len ; t#u16 reason_code ; t#bool local_state_change ; } 
e#nl80211_tx_power_setting enum nl80211_tx_power_setting { NL80211_TX_POWER_AUTOMATIC , NL80211_TX_POWER_LIMITED , NL80211_TX_POWER_FIXED , } 
s#cfg80211_pmksa struct cfg80211_pmksa { t#u8 * bssid ; t#u8 * pmkid ; } 
e#nl80211_tdls_operation enum nl80211_tdls_operation { NL80211_TDLS_DISCOVERY_REQ , NL80211_TDLS_SETUP , NL80211_TDLS_TEARDOWN , NL80211_TDLS_ENABLE_LINK , NL80211_TDLS_DISABLE_LINK , } 
s#cfg80211_update_ft_ies_params struct cfg80211_update_ft_ies_params { t#u16 md ; const t#u8 * ie ; t#size_t ie_len ; } 
e#nl80211_crit_proto_id enum nl80211_crit_proto_id { NL80211_CRIT_PROTO_UNSPEC , NL80211_CRIT_PROTO_DHCP , NL80211_CRIT_PROTO_EAPOL , NL80211_CRIT_PROTO_APIPA , NUM_NL80211_CRIT_PROTO } 
e#nl80211_coalesce_condition enum nl80211_coalesce_condition { NL80211_COALESCE_CONDITION_MATCH , NL80211_COALESCE_CONDITION_NO_MATCH } 
s#cfg80211_coalesce_rules struct cfg80211_coalesce_rules { int delay ; e#nl80211_coalesce_condition condition ; s#cfg80211_pkt_pattern * patterns ; int n_patterns ; } 
s#cfg80211_coalesce struct cfg80211_coalesce { s#cfg80211_coalesce_rules * rules ; int n_rules ; } 
s#cfg80211_csa_settings struct cfg80211_csa_settings { s#cfg80211_chan_def chandef ; s#cfg80211_beacon_data beacon_csa ; t#u16 counter_offset_beacon , counter_offset_presp ; s#cfg80211_beacon_data beacon_after ; t#bool radar_required ; t#bool block_tx ; t#u8 count ; } 
s#cfg80211_ops struct cfg80211_ops { int ( * suspend ) ( s#wiphy * , s#cfg80211_wowlan * ) ; int ( * resume ) ( s#wiphy * ) ; void ( * set_wakeup ) ( s#wiphy * , t#bool ) ; s#wireless_dev * ( * add_virtual_intf ) ( s#wiphy * , const char * , e#nl80211_iftype , t#u32 * , s#vif_params * ) ; int ( * del_virtual_intf ) ( s#wiphy * , s#wireless_dev * ) ; int ( * change_virtual_intf ) ( s#wiphy * , s#net_device * , e#nl80211_iftype , t#u32 * , s#vif_params * ) ; int ( * add_key ) ( s#wiphy * , s#net_device * , t#u8 , t#bool , const t#u8 * , s#key_params * ) ; int ( * get_key ) ( s#wiphy * , s#net_device * , t#u8 , t#bool , const t#u8 * , void * , void ( * ) ( void * , s#key_params * ) ) ; int ( * del_key ) ( s#wiphy * , s#net_device * , t#u8 , t#bool , const t#u8 * ) ; int ( * set_default_key ) ( s#wiphy * , s#net_device * , t#u8 , t#bool , t#bool ) ; int ( * set_default_mgmt_key ) ( s#wiphy * , s#net_device * , t#u8 ) ; int ( * start_ap ) ( s#wiphy * , s#net_device * , s#cfg80211_ap_settings * ) ; int ( * change_beacon ) ( s#wiphy * , s#net_device * , s#cfg80211_beacon_data * ) ; int ( * stop_ap ) ( s#wiphy * , s#net_device * ) ; int ( * add_station ) ( s#wiphy * , s#net_device * , t#u8 * , s#station_parameters * ) ; int ( * del_station ) ( s#wiphy * , s#net_device * , t#u8 * ) ; int ( * change_station ) ( s#wiphy * , s#net_device * , t#u8 * , s#station_parameters * ) ; int ( * get_station ) ( s#wiphy * , s#net_device * , t#u8 * , s#station_info * ) ; int ( * dump_station ) ( s#wiphy * , s#net_device * , int , t#u8 * , s#station_info * ) ; int ( * add_mpath ) ( s#wiphy * , s#net_device * , t#u8 * , t#u8 * ) ; int ( * del_mpath ) ( s#wiphy * , s#net_device * , t#u8 * ) ; int ( * change_mpath ) ( s#wiphy * , s#net_device * , t#u8 * , t#u8 * ) ; int ( * get_mpath ) ( s#wiphy * , s#net_device * , t#u8 * , t#u8 * , s#mpath_info * ) ; int ( * dump_mpath ) ( s#wiphy * , s#net_device * , int , t#u8 * , t#u8 * , s#mpath_info * ) ; int ( * get_mesh_config ) ( s#wiphy * , s#net_device * , s#mesh_config * ) ; int ( * update_mesh_config ) ( s#wiphy * , s#net_device * , t#u32 , const s#mesh_config * ) ; int ( * join_mesh ) ( s#wiphy * , s#net_device * , const s#mesh_config * , const s#mesh_setup * ) ; int ( * leave_mesh ) ( s#wiphy * , s#net_device * ) ; int ( * change_bss ) ( s#wiphy * , s#net_device * , s#bss_parameters * ) ; int ( * set_txq_params ) ( s#wiphy * , s#net_device * , s#ieee80211_txq_params * ) ; int ( * libertas_set_mesh_channel ) ( s#wiphy * , s#net_device * , s#ieee80211_channel * ) ; int ( * set_monitor_channel ) ( s#wiphy * , s#cfg80211_chan_def * ) ; int ( * scan ) ( s#wiphy * , s#cfg80211_scan_request * ) ; int ( * auth ) ( s#wiphy * , s#net_device * , s#cfg80211_auth_request * ) ; int ( * assoc ) ( s#wiphy * , s#net_device * , s#cfg80211_assoc_request * ) ; int ( * deauth ) ( s#wiphy * , s#net_device * , s#cfg80211_deauth_request * ) ; int ( * disassoc ) ( s#wiphy * , s#net_device * , s#cfg80211_disassoc_request * ) ; int ( * connect ) ( s#wiphy * , s#net_device * , s#cfg80211_connect_params * ) ; int ( * disconnect ) ( s#wiphy * , s#net_device * , t#u16 ) ; int ( * join_ibss ) ( s#wiphy * , s#net_device * , s#cfg80211_ibss_params * ) ; int ( * leave_ibss ) ( s#wiphy * , s#net_device * ) ; int ( * set_mcast_rate ) ( s#wiphy * , s#net_device * , int [ E#IEEE80211_NUM_BANDS ] ) ; int ( * set_wiphy_params ) ( s#wiphy * , t#u32 ) ; int ( * set_tx_power ) ( s#wiphy * , s#wireless_dev * , e#nl80211_tx_power_setting , int ) ; int ( * get_tx_power ) ( s#wiphy * , s#wireless_dev * , int * ) ; int ( * set_wds_peer ) ( s#wiphy * , s#net_device * , const t#u8 * ) ; void ( * rfkill_poll ) ( s#wiphy * ) ; int ( * set_bitrate_mask ) ( s#wiphy * , s#net_device * , const t#u8 * , const s#cfg80211_bitrate_mask * ) ; int ( * dump_survey ) ( s#wiphy * , s#net_device * , int , s#survey_info * ) ; int ( * set_pmksa ) ( s#wiphy * , s#net_device * , s#cfg80211_pmksa * ) ; int ( * del_pmksa ) ( s#wiphy * , s#net_device * , s#cfg80211_pmksa * ) ; int ( * flush_pmksa ) ( s#wiphy * , s#net_device * ) ; int ( * remain_on_channel ) ( s#wiphy * , s#wireless_dev * , s#ieee80211_channel * , unsigned int , t#u64 * ) ; int ( * cancel_remain_on_channel ) ( s#wiphy * , s#wireless_dev * , t#u64 ) ; int ( * mgmt_tx ) ( s#wiphy * , s#wireless_dev * , s#ieee80211_channel * , t#bool , unsigned int , const t#u8 * , t#size_t , t#bool , t#bool , t#u64 * ) ; int ( * mgmt_tx_cancel_wait ) ( s#wiphy * , s#wireless_dev * , t#u64 ) ; int ( * set_power_mgmt ) ( s#wiphy * , s#net_device * , t#bool , int ) ; int ( * set_cqm_rssi_config ) ( s#wiphy * , s#net_device * , t#s32 , t#u32 ) ; int ( * set_cqm_txe_config ) ( s#wiphy * , s#net_device * , t#u32 , t#u32 , t#u32 ) ; void ( * mgmt_frame_register ) ( s#wiphy * , s#wireless_dev * , t#u16 , t#bool ) ; int ( * set_antenna ) ( s#wiphy * , t#u32 , t#u32 ) ; int ( * get_antenna ) ( s#wiphy * , t#u32 * , t#u32 * ) ; int ( * set_ringparam ) ( s#wiphy * , t#u32 , t#u32 ) ; void ( * get_ringparam ) ( s#wiphy * , t#u32 * , t#u32 * , t#u32 * , t#u32 * ) ; int ( * sched_scan_start ) ( s#wiphy * , s#net_device * , s#cfg80211_sched_scan_request * ) ; int ( * sched_scan_stop ) ( s#wiphy * , s#net_device * ) ; int ( * set_rekey_data ) ( s#wiphy * , s#net_device * , s#cfg80211_gtk_rekey_data * ) ; int ( * tdls_mgmt ) ( s#wiphy * , s#net_device * , t#u8 * , t#u8 , t#u8 , t#u16 , const t#u8 * , t#size_t ) ; int ( * tdls_oper ) ( s#wiphy * , s#net_device * , t#u8 * , e#nl80211_tdls_operation ) ; int ( * probe_client ) ( s#wiphy * , s#net_device * , const t#u8 * , t#u64 * ) ; int ( * set_noack_map ) ( s#wiphy * , s#net_device * , t#u16 ) ; int ( * get_et_sset_count ) ( s#wiphy * , s#net_device * , int ) ; void ( * get_et_stats ) ( s#wiphy * , s#net_device * , s#ethtool_stats * , t#u64 * ) ; void ( * get_et_strings ) ( s#wiphy * , s#net_device * , t#u32 , t#u8 * ) ; int ( * get_channel ) ( s#wiphy * , s#wireless_dev * , s#cfg80211_chan_def * ) ; int ( * start_p2p_device ) ( s#wiphy * , s#wireless_dev * ) ; void ( * stop_p2p_device ) ( s#wiphy * , s#wireless_dev * ) ; int ( * set_mac_acl ) ( s#wiphy * , s#net_device * , const s#cfg80211_acl_data * ) ; int ( * start_radar_detection ) ( s#wiphy * , s#net_device * , s#cfg80211_chan_def * ) ; int ( * update_ft_ies ) ( s#wiphy * , s#net_device * , s#cfg80211_update_ft_ies_params * ) ; int ( * crit_proto_start ) ( s#wiphy * , s#wireless_dev * , e#nl80211_crit_proto_id , t#u16 ) ; void ( * crit_proto_stop ) ( s#wiphy * , s#wireless_dev * ) ; int ( * set_coalesce ) ( s#wiphy * , s#cfg80211_coalesce * ) ; int ( * channel_switch ) ( s#wiphy * , s#net_device * , s#cfg80211_csa_settings * ) ; } 
wiphy_new s#wiphy * wiphy_new ( const s#cfg80211_ops * , int ) 
wiphy_register int wiphy_register ( s#wiphy * ) 
wiphy_rfkill_start_polling void wiphy_rfkill_start_polling ( s#wiphy * ) 
wiphy_rfkill_stop_polling void wiphy_rfkill_stop_polling ( s#wiphy * ) 
wiphy_unregister void wiphy_unregister ( s#wiphy * ) 
wiphy_free void wiphy_free ( s#wiphy * ) 
wiphy_rfkill_set_hw_state void wiphy_rfkill_set_hw_state ( s#wiphy * , t#bool ) 
cfg80211_unregister_wdev void cfg80211_unregister_wdev ( s#wireless_dev * ) 

/* net/wireless/ibss.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
cfg80211_ibss_joined void cfg80211_ibss_joined ( s#net_device * , const t#u8 * , t#gfp_t ) 

/* net/wireless/lib80211.o */
print_ssid const char * print_ssid ( char * , const char * , t#u8 ) 
s##sock
s##net_device
s##sec_path
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##optimistic_spin_queue
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##tvec_base
lib80211_crypt_info_init int lib80211_crypt_info_init ( s#lib80211_crypt_info * , char * , t#spinlock_t * ) 
lib80211_crypt_info_free void lib80211_crypt_info_free ( s#lib80211_crypt_info * ) 
lib80211_crypt_delayed_deinit void lib80211_crypt_delayed_deinit ( s#lib80211_crypt_info * , s#lib80211_crypt_data * * ) 
lib80211_register_crypto_ops int lib80211_register_crypto_ops ( s#lib80211_crypto_ops * ) 
lib80211_unregister_crypto_ops int lib80211_unregister_crypto_ops ( s#lib80211_crypto_ops * ) 
lib80211_get_crypto_ops s#lib80211_crypto_ops * lib80211_get_crypto_ops ( const char * ) 

/* net/wireless/mlme.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##user_namespace
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
cfg80211_rx_assoc_resp void cfg80211_rx_assoc_resp ( s#net_device * , s#cfg80211_bss * , const t#u8 * , t#size_t ) 
cfg80211_rx_mlme_mgmt void cfg80211_rx_mlme_mgmt ( s#net_device * , const t#u8 * , t#size_t ) 
cfg80211_auth_timeout void cfg80211_auth_timeout ( s#net_device * , const t#u8 * ) 
cfg80211_assoc_timeout void cfg80211_assoc_timeout ( s#net_device * , s#cfg80211_bss * ) 
cfg80211_tx_mlme_mgmt void cfg80211_tx_mlme_mgmt ( s#net_device * , const t#u8 * , t#size_t ) 
e#nl80211_key_type enum nl80211_key_type { NL80211_KEYTYPE_GROUP , NL80211_KEYTYPE_PAIRWISE , NL80211_KEYTYPE_PEERKEY , NUM_NL80211_KEYTYPES } 
cfg80211_michael_mic_failure void cfg80211_michael_mic_failure ( s#net_device * , const t#u8 * , e#nl80211_key_type , int , const t#u8 * , t#gfp_t ) 
cfg80211_rx_mgmt t#bool cfg80211_rx_mgmt ( s#wireless_dev * , int , int , const t#u8 * , t#size_t , t#u32 , t#gfp_t ) 
cfg80211_radar_event void cfg80211_radar_event ( s#wiphy * , s#cfg80211_chan_def * , t#gfp_t ) 
e#nl80211_radar_event enum nl80211_radar_event { NL80211_RADAR_DETECTED , NL80211_RADAR_CAC_FINISHED , NL80211_RADAR_CAC_ABORTED , NL80211_RADAR_NOP_FINISHED , } 
cfg80211_cac_event void cfg80211_cac_event ( s#net_device * , e#nl80211_radar_event , t#gfp_t ) 

/* net/wireless/nl80211.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kioctx
s##eventfd_ctx
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##mem_cgroup
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
e#cfg80211_station_type enum cfg80211_station_type { CFG80211_STA_AP_CLIENT , CFG80211_STA_AP_MLME_CLIENT , CFG80211_STA_AP_STA , CFG80211_STA_IBSS , CFG80211_STA_TDLS_PEER_SETUP , CFG80211_STA_TDLS_PEER_ACTIVE , CFG80211_STA_MESH_PEER_KERNEL , CFG80211_STA_MESH_PEER_USER , } 
cfg80211_check_station_change int cfg80211_check_station_change ( s#wiphy * , s#station_parameters * , e#cfg80211_station_type ) 
cfg80211_rx_unprot_mlme_mgmt void cfg80211_rx_unprot_mlme_mgmt ( s#net_device * , const t#u8 * , t#size_t ) 
cfg80211_notify_new_peer_candidate void cfg80211_notify_new_peer_candidate ( s#net_device * , const t#u8 * , const t#u8 * , t#u8 , t#gfp_t ) 
cfg80211_ready_on_channel void cfg80211_ready_on_channel ( s#wireless_dev * , t#u64 , s#ieee80211_channel * , unsigned int , t#gfp_t ) 
cfg80211_remain_on_channel_expired void cfg80211_remain_on_channel_expired ( s#wireless_dev * , t#u64 , s#ieee80211_channel * , t#gfp_t ) 
cfg80211_new_sta void cfg80211_new_sta ( s#net_device * , const t#u8 * , s#station_info * , t#gfp_t ) 
cfg80211_del_sta void cfg80211_del_sta ( s#net_device * , const t#u8 * , t#gfp_t ) 
e#nl80211_connect_failed_reason enum nl80211_connect_failed_reason { NL80211_CONN_FAIL_MAX_CLIENTS , NL80211_CONN_FAIL_BLOCKED_CLIENT , } 
cfg80211_conn_failed void cfg80211_conn_failed ( s#net_device * , const t#u8 * , e#nl80211_connect_failed_reason , t#gfp_t ) 
cfg80211_rx_spurious_frame t#bool cfg80211_rx_spurious_frame ( s#net_device * , const t#u8 * , t#gfp_t ) 
cfg80211_rx_unexpected_4addr_frame t#bool cfg80211_rx_unexpected_4addr_frame ( s#net_device * , const t#u8 * , t#gfp_t ) 
cfg80211_mgmt_tx_status void cfg80211_mgmt_tx_status ( s#wireless_dev * , t#u64 , const t#u8 * , t#size_t , t#bool , t#gfp_t ) 
cfg80211_cqm_rssi_notify void cfg80211_cqm_rssi_notify ( s#net_device * , e#nl80211_cqm_rssi_threshold_event , t#gfp_t ) 
cfg80211_gtk_rekey_notify void cfg80211_gtk_rekey_notify ( s#net_device * , const t#u8 * , const t#u8 * , t#gfp_t ) 
cfg80211_pmksa_candidate_notify void cfg80211_pmksa_candidate_notify ( s#net_device * , int , const t#u8 * , t#bool , t#gfp_t ) 
cfg80211_ch_switch_notify void cfg80211_ch_switch_notify ( s#net_device * , s#cfg80211_chan_def * ) 
cfg80211_cqm_txe_notify void cfg80211_cqm_txe_notify ( s#net_device * , const t#u8 * , t#u32 , t#u32 , t#u32 , t#gfp_t ) 
cfg80211_cqm_pktloss_notify void cfg80211_cqm_pktloss_notify ( s#net_device * , const t#u8 * , t#u32 , t#gfp_t ) 
cfg80211_probe_status void cfg80211_probe_status ( s#net_device * , const t#u8 * , t#u64 , t#bool , t#gfp_t ) 
cfg80211_report_obss_beacon void cfg80211_report_obss_beacon ( s#wiphy * , const t#u8 * , t#size_t , int , int ) 
cfg80211_report_wowlan_wakeup void cfg80211_report_wowlan_wakeup ( s#wireless_dev * , s#cfg80211_wowlan_wakeup * , t#gfp_t ) 
cfg80211_tdls_oper_request void cfg80211_tdls_oper_request ( s#net_device * , const t#u8 * , e#nl80211_tdls_operation , t#u16 , t#gfp_t ) 
s#cfg80211_ft_event_params struct cfg80211_ft_event_params { const t#u8 * ies ; t#size_t ies_len ; const t#u8 * target_ap ; const t#u8 * ric_ies ; t#size_t ric_ies_len ; } 
cfg80211_ft_event void cfg80211_ft_event ( s#net_device * , s#cfg80211_ft_event_params * ) 
cfg80211_crit_proto_stopped void cfg80211_crit_proto_stopped ( s#wireless_dev * , t#gfp_t ) 

/* net/wireless/radiotap.o */
s#ieee80211_radiotap_header struct ieee80211_radiotap_header { t#u8 it_version ; t#u8 it_pad ; t#__le16 it_len ; t#__le32 it_present ; } 
s#radiotap_align_size struct radiotap_align_size { t#uint8_t align : 4 , size : 4 ; } 
s#ieee80211_radiotap_namespace struct ieee80211_radiotap_namespace { const s#radiotap_align_size * align_size ; int n_bits ; t#uint32_t oui ; t#uint8_t subns ; } 
s#ieee80211_radiotap_vendor_namespaces struct ieee80211_radiotap_vendor_namespaces { const s#ieee80211_radiotap_namespace * ns ; int n_ns ; } 
s#ieee80211_radiotap_iterator struct ieee80211_radiotap_iterator { s#ieee80211_radiotap_header * _rtheader ; const s#ieee80211_radiotap_vendor_namespaces * _vns ; const s#ieee80211_radiotap_namespace * current_namespace ; unsigned char * _arg , * _next_ns_data ; t#__le32 * _next_bitmap ; unsigned char * this_arg ; int this_arg_index ; int this_arg_size ; int is_radiotap_ns ; int _max_length ; int _arg_index ; t#uint32_t _bitmap_shifter ; int _reset_on_ext ; } 
ieee80211_radiotap_iterator_init int ieee80211_radiotap_iterator_init ( s#ieee80211_radiotap_iterator * , s#ieee80211_radiotap_header * , int , const s#ieee80211_radiotap_vendor_namespaces * ) 
ieee80211_radiotap_iterator_next int ieee80211_radiotap_iterator_next ( s#ieee80211_radiotap_iterator * ) 

/* net/wireless/reg.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
freq_reg_info const s#ieee80211_reg_rule * freq_reg_info ( s#wiphy * , t#u32 ) 
wiphy_apply_custom_regulatory void wiphy_apply_custom_regulatory ( s#wiphy * , const s#ieee80211_regdomain * ) 
regulatory_hint int regulatory_hint ( s#wiphy * , const char * ) 

/* net/wireless/scan.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##sock
s##libipw_device
s##sec_path
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##cfg80211_conn
cfg80211_scan_done void cfg80211_scan_done ( s#cfg80211_scan_request * , t#bool ) 
cfg80211_sched_scan_results void cfg80211_sched_scan_results ( s#wiphy * ) 
cfg80211_sched_scan_stopped void cfg80211_sched_scan_stopped ( s#wiphy * ) 
cfg80211_find_ie const t#u8 * cfg80211_find_ie ( t#u8 , const t#u8 * , int ) 
cfg80211_find_vendor_ie const t#u8 * cfg80211_find_vendor_ie ( unsigned int , t#u8 , const t#u8 * , int ) 
cfg80211_get_bss s#cfg80211_bss * cfg80211_get_bss ( s#wiphy * , s#ieee80211_channel * , const t#u8 * , const t#u8 * , t#size_t , t#u16 , t#u16 ) 
cfg80211_inform_bss_width s#cfg80211_bss * cfg80211_inform_bss_width ( s#wiphy * , s#ieee80211_channel * , e#nl80211_bss_scan_width , const t#u8 * , t#u64 , t#u16 , t#u16 , const t#u8 * , t#size_t , t#s32 , t#gfp_t ) 
cfg80211_inform_bss_width_frame s#cfg80211_bss * cfg80211_inform_bss_width_frame ( s#wiphy * , s#ieee80211_channel * , e#nl80211_bss_scan_width , s#ieee80211_mgmt * , t#size_t , t#s32 , t#gfp_t ) 
cfg80211_ref_bss void cfg80211_ref_bss ( s#wiphy * , s#cfg80211_bss * ) 
cfg80211_put_bss void cfg80211_put_bss ( s#wiphy * , s#cfg80211_bss * ) 
cfg80211_unlink_bss void cfg80211_unlink_bss ( s#wiphy * , s#cfg80211_bss * ) 
cfg80211_wext_siwscan int cfg80211_wext_siwscan ( s#net_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
cfg80211_wext_giwscan int cfg80211_wext_giwscan ( s#net_device * , s#iw_request_info * , s#iw_point * , char * ) 

/* net/wireless/sme.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
cfg80211_connect_result void cfg80211_connect_result ( s#net_device * , const t#u8 * , const t#u8 * , t#size_t , const t#u8 * , t#size_t , t#u16 , t#gfp_t ) 
cfg80211_roamed void cfg80211_roamed ( s#net_device * , s#ieee80211_channel * , const t#u8 * , const t#u8 * , t#size_t , const t#u8 * , t#size_t , t#gfp_t ) 
cfg80211_roamed_bss void cfg80211_roamed_bss ( s#net_device * , s#cfg80211_bss * , const t#u8 * , t#size_t , const t#u8 * , t#size_t , t#gfp_t ) 
cfg80211_disconnected void cfg80211_disconnected ( s#net_device * , t#u16 , t#u8 * , t#size_t , t#gfp_t ) 

/* net/wireless/util.o */
ieee80211_get_response_rate s#ieee80211_rate * ieee80211_get_response_rate ( s#ieee80211_supported_band * , t#u32 , int ) 
ieee80211_mandatory_rates t#u32 ieee80211_mandatory_rates ( s#ieee80211_supported_band * , e#nl80211_bss_scan_width ) 
ieee80211_channel_to_frequency int ieee80211_channel_to_frequency ( int , e#ieee80211_band ) 
ieee80211_frequency_to_channel int ieee80211_frequency_to_channel ( int ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kioctx
s##eventfd_ctx
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##mem_cgroup
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##rt6_statistics
s##fib6_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
__ieee80211_get_channel s#ieee80211_channel * __ieee80211_get_channel ( s#wiphy * , int ) 
ieee80211_hdrlen unsigned int __attribute__ ( ( __const__ ) ) ieee80211_hdrlen ( t#__le16 ) 
ieee80211_get_hdrlen_from_skb unsigned int ieee80211_get_hdrlen_from_skb ( const s#sk_buff * ) 
s#ieee80211s_hdr struct ieee80211s_hdr { t#u8 flags ; t#u8 ttl ; t#__le32 seqnum ; t#u8 eaddr1 [ 6 ] ; t#u8 eaddr2 [ 6 ] ; } 
ieee80211_get_mesh_hdrlen unsigned int ieee80211_get_mesh_hdrlen ( s#ieee80211s_hdr * ) 
ieee80211_data_to_8023 int ieee80211_data_to_8023 ( s#sk_buff * , const t#u8 * , e#nl80211_iftype ) 
ieee80211_data_from_8023 int ieee80211_data_from_8023 ( s#sk_buff * , const t#u8 * , e#nl80211_iftype , t#u8 * , t#bool ) 
ieee80211_amsdu_to_8023s void ieee80211_amsdu_to_8023s ( s#sk_buff * , s#sk_buff_head * , const t#u8 * , e#nl80211_iftype , const unsigned int , t#bool ) 
cfg80211_classify8021d unsigned int cfg80211_classify8021d ( s#sk_buff * ) 
ieee80211_bss_get_ie const t#u8 * ieee80211_bss_get_ie ( s#cfg80211_bss * , t#u8 ) 
cfg80211_calculate_bitrate t#u32 cfg80211_calculate_bitrate ( s#rate_info * ) 
e#ieee80211_p2p_attr_id enum ieee80211_p2p_attr_id { IEEE80211_P2P_ATTR_STATUS = 0 , IEEE80211_P2P_ATTR_MINOR_REASON , IEEE80211_P2P_ATTR_CAPABILITY , IEEE80211_P2P_ATTR_DEVICE_ID , IEEE80211_P2P_ATTR_GO_INTENT , IEEE80211_P2P_ATTR_GO_CONFIG_TIMEOUT , IEEE80211_P2P_ATTR_LISTEN_CHANNEL , IEEE80211_P2P_ATTR_GROUP_BSSID , IEEE80211_P2P_ATTR_EXT_LISTEN_TIMING , IEEE80211_P2P_ATTR_INTENDED_IFACE_ADDR , IEEE80211_P2P_ATTR_MANAGABILITY , IEEE80211_P2P_ATTR_CHANNEL_LIST , IEEE80211_P2P_ATTR_ABSENCE_NOTICE , IEEE80211_P2P_ATTR_DEVICE_INFO , IEEE80211_P2P_ATTR_GROUP_INFO , IEEE80211_P2P_ATTR_GROUP_ID , IEEE80211_P2P_ATTR_INTERFACE , IEEE80211_P2P_ATTR_OPER_CHANNEL , IEEE80211_P2P_ATTR_INVITE_FLAGS , IEEE80211_P2P_ATTR_VENDOR_SPECIFIC = 221 , IEEE80211_P2P_ATTR_MAX } 
cfg80211_get_p2p_attr int cfg80211_get_p2p_attr ( const t#u8 * , unsigned int , e#ieee80211_p2p_attr_id , t#u8 * , unsigned int ) 
ieee80211_operating_class_to_band t#bool ieee80211_operating_class_to_band ( t#u8 , e#ieee80211_band * ) 
rfc1042_header extern const unsigned char rfc1042_header [ 6 ] 
bridge_tunnel_header extern const unsigned char bridge_tunnel_header [ 6 ] 

/* net/wireless/wext-compat.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
cfg80211_wext_giwname int cfg80211_wext_giwname ( s#net_device * , s#iw_request_info * , char * , char * ) 
cfg80211_wext_siwmode int cfg80211_wext_siwmode ( s#net_device * , s#iw_request_info * , t#u32 * , char * ) 
cfg80211_wext_giwmode int cfg80211_wext_giwmode ( s#net_device * , s#iw_request_info * , t#u32 * , char * ) 
cfg80211_wext_giwrange int cfg80211_wext_giwrange ( s#net_device * , s#iw_request_info * , s#iw_point * , char * ) 
cfg80211_wext_siwrts int cfg80211_wext_siwrts ( s#net_device * , s#iw_request_info * , s#iw_param * , char * ) 
cfg80211_wext_giwrts int cfg80211_wext_giwrts ( s#net_device * , s#iw_request_info * , s#iw_param * , char * ) 
cfg80211_wext_siwfrag int cfg80211_wext_siwfrag ( s#net_device * , s#iw_request_info * , s#iw_param * , char * ) 
cfg80211_wext_giwfrag int cfg80211_wext_giwfrag ( s#net_device * , s#iw_request_info * , s#iw_param * , char * ) 
cfg80211_wext_giwretry int cfg80211_wext_giwretry ( s#net_device * , s#iw_request_info * , s#iw_param * , char * ) 

/* net/wireless/wext-core.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##netpoll_info
s##neighbour
s##module
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##user_namespace
s##proc_dir_entry
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
wireless_send_event extern void wireless_send_event ( s#net_device * , unsigned int , u#iwreq_data * , const char * ) 

/* net/wireless/wext-spy.o */
s##libipw_device
s##sock
s##sec_path
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##prot_inuse
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##poll_table_struct
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##tcpm_hash_bucket
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##tvec_base
s##fib6_table
s##dst_entry
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
iw_handler_set_spy extern int iw_handler_set_spy ( s#net_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
iw_handler_get_spy extern int iw_handler_get_spy ( s#net_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
iw_handler_set_thrspy extern int iw_handler_set_thrspy ( s#net_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
iw_handler_get_thrspy extern int iw_handler_get_thrspy ( s#net_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
wireless_spy_update extern void wireless_spy_update ( s#net_device * , unsigned char * , s#iw_quality * ) 

/* net/xfrm/xfrm_algo.o */
s#xfrm_algo_aead_info struct xfrm_algo_aead_info { t#u16 icv_truncbits ; } 
s#xfrm_algo_auth_info struct xfrm_algo_auth_info { t#u16 icv_truncbits ; t#u16 icv_fullbits ; } 
s#xfrm_algo_encr_info struct xfrm_algo_encr_info { t#u16 blockbits ; t#u16 defkeybits ; } 
s#xfrm_algo_comp_info struct xfrm_algo_comp_info { t#u16 threshold ; } 
s#sadb_alg struct sadb_alg { t#__u8 sadb_alg_id ; t#__u8 sadb_alg_ivlen ; t#__u16 sadb_alg_minbits ; t#__u16 sadb_alg_maxbits ; t#__u16 sadb_alg_reserved ; } 
s#xfrm_algo_desc struct xfrm_algo_desc { char * name ; char * compat ; t#u8 available : 1 ; t#u8 pfkey_supported : 1 ; union { s#xfrm_algo_aead_info aead ; s#xfrm_algo_auth_info auth ; s#xfrm_algo_encr_info encr ; s#xfrm_algo_comp_info comp ; } uinfo ; s#sadb_alg desc ; } 
xfrm_aalg_get_byid extern s#xfrm_algo_desc * xfrm_aalg_get_byid ( int ) 
xfrm_ealg_get_byid extern s#xfrm_algo_desc * xfrm_ealg_get_byid ( int ) 
xfrm_calg_get_byid extern s#xfrm_algo_desc * xfrm_calg_get_byid ( int ) 
xfrm_aalg_get_byname extern s#xfrm_algo_desc * xfrm_aalg_get_byname ( const char * , int ) 
xfrm_ealg_get_byname extern s#xfrm_algo_desc * xfrm_ealg_get_byname ( const char * , int ) 
xfrm_calg_get_byname extern s#xfrm_algo_desc * xfrm_calg_get_byname ( const char * , int ) 
xfrm_aead_get_byname extern s#xfrm_algo_desc * xfrm_aead_get_byname ( const char * , int , int ) 
xfrm_aalg_get_byidx extern s#xfrm_algo_desc * xfrm_aalg_get_byidx ( unsigned int ) 
xfrm_ealg_get_byidx extern s#xfrm_algo_desc * xfrm_ealg_get_byidx ( unsigned int ) 
xfrm_probe_algs extern void xfrm_probe_algs ( void ) 
xfrm_count_pfkey_auth_supported extern int xfrm_count_pfkey_auth_supported ( void ) 
xfrm_count_pfkey_enc_supported extern int xfrm_count_pfkey_enc_supported ( void ) 
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
pskb_put extern void * pskb_put ( s#sk_buff * , s#sk_buff * , int ) 

/* net/xfrm/xfrm_input.o */
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##kmem_cache_node
s##array_cache
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##mem_cgroup
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##bsd_acct_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
__secpath_destroy extern void __secpath_destroy ( s#sec_path * ) 
secpath_dup extern s#sec_path * secpath_dup ( s#sec_path * ) 
xfrm_prepare_input extern int xfrm_prepare_input ( s#xfrm_state * , s#sk_buff * ) 
xfrm_input extern int xfrm_input ( s#sk_buff * , int , t#__be32 , int ) 
xfrm_input_resume extern int xfrm_input_resume ( s#sk_buff * , int ) 

/* net/xfrm/xfrm_ipcomp.o */
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##kmem_cache_node
s##array_cache
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##mem_cgroup
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
s##bsd_acct_struct
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
ipcomp_input int ipcomp_input ( s#xfrm_state * , s#sk_buff * ) 
ipcomp_output int ipcomp_output ( s#xfrm_state * , s#sk_buff * ) 
ipcomp_destroy void ipcomp_destroy ( s#xfrm_state * ) 
ipcomp_init_state int ipcomp_init_state ( s#xfrm_state * ) 

/* net/xfrm/xfrm_output.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
xfrm_output_resume extern int xfrm_output_resume ( s#sk_buff * , int ) 
xfrm_output extern int xfrm_output ( s#sk_buff * ) 
xfrm_inner_extract_output extern int xfrm_inner_extract_output ( s#xfrm_state * , s#sk_buff * ) 
xfrm_local_error extern void xfrm_local_error ( s#sk_buff * , int ) 

/* net/xfrm/xfrm_policy.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##files_struct
s##kmem_cache_node
s##array_cache
s##bsd_acct_struct
s##user_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##optimistic_spin_queue
s##key_user
s##key_type
s##assoc_array_ptr
s##kioctx
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##tvec_base
s##workqueue_struct
s##dn_route
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##mem_cgroup
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##nameidata
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##return_instance
s##uprobe
xfrm_cfg_mutex extern s#mutex xfrm_cfg_mutex 
xfrm_policy_alloc s#xfrm_policy * xfrm_policy_alloc ( s#net * , t#gfp_t ) 
xfrm_policy_destroy extern void xfrm_policy_destroy ( s#xfrm_policy * ) 
s#xfrmk_spdinfo struct xfrmk_spdinfo { t#u32 incnt ; t#u32 outcnt ; t#u32 fwdcnt ; t#u32 inscnt ; t#u32 outscnt ; t#u32 fwdscnt ; t#u32 spdhcnt ; t#u32 spdhmcnt ; } 
xfrm_spd_getinfo extern void xfrm_spd_getinfo ( s#net * , s#xfrmk_spdinfo * ) 
xfrm_policy_insert int xfrm_policy_insert ( int , s#xfrm_policy * , int ) 
xfrm_policy_bysel_ctx s#xfrm_policy * xfrm_policy_bysel_ctx ( s#net * , t#u32 , t#u8 , int , s#xfrm_selector * , s#xfrm_sec_ctx * , int , int * ) 
xfrm_policy_byid s#xfrm_policy * xfrm_policy_byid ( s#net * , t#u32 , t#u8 , int , t#u32 , int , int * ) 
s#xfrm_audit struct xfrm_audit { t#u32 secid ; t#kuid_t loginuid ; t#u32 sessionid ; } 
xfrm_policy_flush int xfrm_policy_flush ( s#net * , t#u8 , s#xfrm_audit * ) 
s#xfrm_policy_walk struct xfrm_policy_walk { s#xfrm_policy_walk_entry walk ; t#u8 type ; t#u32 seq ; } 
xfrm_policy_walk extern int xfrm_policy_walk ( s#net * , s#xfrm_policy_walk * , int ( * ) ( s#xfrm_policy * , int , int , void * ) , void * ) 
xfrm_policy_walk_init extern void xfrm_policy_walk_init ( s#xfrm_policy_walk * , t#u8 ) 
xfrm_policy_walk_done extern void xfrm_policy_walk_done ( s#xfrm_policy_walk * ) 
xfrm_policy_delete extern int xfrm_policy_delete ( s#xfrm_policy * , int ) 
xfrm_lookup extern s#dst_entry * xfrm_lookup ( s#net * , s#dst_entry * , const s#flowi * , s#sock * , int ) 
xfrm_lookup_route s#dst_entry * xfrm_lookup_route ( s#net * , s#dst_entry * , const s#flowi * , s#sock * , int ) 
__xfrm_decode_session extern int __xfrm_decode_session ( s#sk_buff * , s#flowi * , unsigned int , int ) 
__xfrm_policy_check extern int __xfrm_policy_check ( s#sock * , int , s#sk_buff * , unsigned short ) 
__xfrm_route_forward extern int __xfrm_route_forward ( s#sk_buff * , unsigned short ) 
xfrm_dst_ifdown extern void xfrm_dst_ifdown ( s#dst_entry * , s#net_device * ) 
xfrm_garbage_collect extern void xfrm_garbage_collect ( s#net * ) 
E#XFRM_POLICY_TYPE_MAX 2 
s#xfrm_dst struct xfrm_dst { union { s#dst_entry dst ; s#rtable rt ; s#rt6_info rt6 ; } u ; s#dst_entry * route ; s#flow_cache_object flo ; s#xfrm_policy * pols [ E#XFRM_POLICY_TYPE_MAX ] ; int num_pols , num_xfrms ; s#flowi * origin ; s#xfrm_selector * partner ; t#u32 xfrm_genid ; t#u32 policy_genid ; t#u32 route_mtu_cached ; t#u32 child_mtu_cached ; t#u32 route_cookie ; t#u32 path_cookie ; } 
s#xfrm_policy_afinfo struct xfrm_policy_afinfo { unsigned short family ; s#dst_ops * dst_ops ; void ( * garbage_collect ) ( s#net * ) ; s#dst_entry * ( * dst_lookup ) ( s#net * , int , const t#xfrm_address_t * , const t#xfrm_address_t * ) ; int ( * get_saddr ) ( s#net * , t#xfrm_address_t * , t#xfrm_address_t * ) ; void ( * decode_session ) ( s#sk_buff * , s#flowi * , int ) ; int ( * get_tos ) ( const s#flowi * ) ; void ( * init_dst ) ( s#net * , s#xfrm_dst * ) ; int ( * init_path ) ( s#xfrm_dst * , s#dst_entry * , int ) ; int ( * fill_dst ) ( s#xfrm_dst * , s#net_device * , const s#flowi * ) ; s#dst_entry * ( * blackhole_route ) ( s#net * , s#dst_entry * ) ; } 
xfrm_policy_register_afinfo extern int xfrm_policy_register_afinfo ( s#xfrm_policy_afinfo * ) 
xfrm_policy_unregister_afinfo extern int xfrm_policy_unregister_afinfo ( s#xfrm_policy_afinfo * ) 
xfrm_audit_policy_add extern void xfrm_audit_policy_add ( s#xfrm_policy * , int , t#kuid_t , t#u32 , t#u32 ) 
xfrm_audit_policy_delete extern void xfrm_audit_policy_delete ( s#xfrm_policy * , int , t#kuid_t , t#u32 , t#u32 ) 
s#xfrm_migrate struct xfrm_migrate { t#xfrm_address_t old_daddr ; t#xfrm_address_t old_saddr ; t#xfrm_address_t new_daddr ; t#xfrm_address_t new_saddr ; t#u8 proto ; t#u8 mode ; t#u16 reserved ; t#u32 reqid ; t#u16 old_family ; t#u16 new_family ; } 
s#xfrm_kmaddress struct xfrm_kmaddress { t#xfrm_address_t local ; t#xfrm_address_t remote ; t#u32 reserved ; t#u16 family ; } 
xfrm_migrate extern int xfrm_migrate ( const s#xfrm_selector * , t#u8 , t#u8 , s#xfrm_migrate * , int , s#xfrm_kmaddress * ) 

/* net/xfrm/xfrm_replay.o */
s##user_namespace
s##proc_dir_entry
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##optimistic_spin_queue
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kioctx
s##eventfd_ctx
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##swap_info_struct
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroup_taskset
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##bsd_acct_struct
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##netpoll_info
s##forwarding_accel_ops
s##sysfs_dirent
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
xfrm_init_replay extern int xfrm_init_replay ( s#xfrm_state * ) 

/* net/xfrm/xfrm_state.o */
s##vfsmount
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##workqueue_struct
s##netpoll_info
s##forwarding_accel_ops
s##vlan_info
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##pci_bus
s##device_node
s##pci_dev
s##iommu_group
s##mii_bus
s##in_device
s##dn_dev
s##dn_route
s##wireless_dev
s##Qdisc
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##pcpu_vstats
s##garp_port
s##mrp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##tcpm_hash_bucket
s##xt_table
s##sctp_mib
s##nf_logger
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##kioctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
xfrm_register_type extern int xfrm_register_type ( const s#xfrm_type * , unsigned short ) 
xfrm_unregister_type extern int xfrm_unregister_type ( const s#xfrm_type * , unsigned short ) 
xfrm_register_mode extern int xfrm_register_mode ( s#xfrm_mode * , int ) 
xfrm_unregister_mode extern int xfrm_unregister_mode ( s#xfrm_mode * , int ) 
xfrm_state_alloc extern s#xfrm_state * xfrm_state_alloc ( s#net * ) 
__xfrm_state_destroy extern void __xfrm_state_destroy ( s#xfrm_state * ) 
__xfrm_state_delete extern int __xfrm_state_delete ( s#xfrm_state * ) 
xfrm_state_delete extern int xfrm_state_delete ( s#xfrm_state * ) 
xfrm_state_flush extern int xfrm_state_flush ( s#net * , t#u8 , s#xfrm_audit * ) 
s#xfrmk_sadinfo struct xfrmk_sadinfo { t#u32 sadhcnt ; t#u32 sadhmcnt ; t#u32 sadcnt ; } 
xfrm_sad_getinfo extern void xfrm_sad_getinfo ( s#net * , s#xfrmk_sadinfo * ) 
xfrm_stateonly_find extern s#xfrm_state * xfrm_stateonly_find ( s#net * , t#u32 , t#xfrm_address_t * , t#xfrm_address_t * , unsigned short , t#u8 , t#u8 , t#u32 ) 
xfrm_state_insert extern void xfrm_state_insert ( s#xfrm_state * ) 
xfrm_state_add extern int xfrm_state_add ( s#xfrm_state * ) 
xfrm_migrate_state_find extern s#xfrm_state * xfrm_migrate_state_find ( s#xfrm_migrate * ) 
xfrm_state_migrate extern s#xfrm_state * xfrm_state_migrate ( s#xfrm_state * , s#xfrm_migrate * ) 
xfrm_state_update extern int xfrm_state_update ( s#xfrm_state * ) 
xfrm_state_check_expire extern int xfrm_state_check_expire ( s#xfrm_state * ) 
xfrm_state_lookup extern s#xfrm_state * xfrm_state_lookup ( s#net * , t#u32 , const t#xfrm_address_t * , t#__be32 , t#u8 , unsigned short ) 
xfrm_state_lookup_byaddr extern s#xfrm_state * xfrm_state_lookup_byaddr ( s#net * , t#u32 , const t#xfrm_address_t * , const t#xfrm_address_t * , t#u8 , unsigned short ) 
xfrm_find_acq s#xfrm_state * xfrm_find_acq ( s#net * , const s#xfrm_mark * , t#u8 , t#u32 , t#u8 , const t#xfrm_address_t * , const t#xfrm_address_t * , int , unsigned short ) 
xfrm_tmpl_sort extern int xfrm_tmpl_sort ( s#xfrm_tmpl * * , s#xfrm_tmpl * * , int , unsigned short ) 
xfrm_state_sort extern int xfrm_state_sort ( s#xfrm_state * * , s#xfrm_state * * , int , unsigned short ) 
xfrm_find_acq_byseq extern s#xfrm_state * xfrm_find_acq_byseq ( s#net * , t#u32 , t#u32 ) 
xfrm_get_acqseq t#u32 xfrm_get_acqseq ( void ) 
xfrm_alloc_spi extern int xfrm_alloc_spi ( s#xfrm_state * , t#u32 , t#u32 ) 
xfrm_state_walk extern int xfrm_state_walk ( s#net * , s#xfrm_state_walk * , int ( * ) ( s#xfrm_state * , int , void * ) , void * ) 
xfrm_state_walk_init extern void xfrm_state_walk_init ( s#xfrm_state_walk * , t#u8 ) 
xfrm_state_walk_done extern void xfrm_state_walk_done ( s#xfrm_state_walk * ) 
s#km_event struct km_event { union { t#u32 hard ; t#u32 proto ; t#u32 byid ; t#u32 aevent ; t#u32 type ; } data ; t#u32 seq ; t#u32 portid ; t#u32 event ; s#net * net ; } 
km_policy_notify extern void km_policy_notify ( s#xfrm_policy * , int , const s#km_event * ) 
km_state_notify extern void km_state_notify ( s#xfrm_state * , const s#km_event * ) 
km_state_expired extern void km_state_expired ( s#xfrm_state * , int , t#u32 ) 
km_query extern int km_query ( s#xfrm_state * , s#xfrm_tmpl * , s#xfrm_policy * ) 
km_new_mapping extern int km_new_mapping ( s#xfrm_state * , t#xfrm_address_t * , t#__be16 ) 
km_policy_expired extern void km_policy_expired ( s#xfrm_policy * , int , int , t#u32 ) 
km_migrate extern int km_migrate ( const s#xfrm_selector * , t#u8 , t#u8 , const s#xfrm_migrate * , int , const s#xfrm_kmaddress * ) 
km_report extern int km_report ( s#net * , t#u8 , s#xfrm_selector * , t#xfrm_address_t * ) 
xfrm_user_policy extern int xfrm_user_policy ( s#sock * , int , t#u8 * , int ) 
s#xfrm_mgr struct xfrm_mgr { s#list_head list ; char * id ; int ( * notify ) ( s#xfrm_state * , const s#km_event * ) ; int ( * acquire ) ( s#xfrm_state * , s#xfrm_tmpl * , s#xfrm_policy * ) ; s#xfrm_policy * ( * compile_policy ) ( s#sock * , int , t#u8 * , int , int * ) ; int ( * new_mapping ) ( s#xfrm_state * , t#xfrm_address_t * , t#__be16 ) ; int ( * notify_policy ) ( s#xfrm_policy * , int , const s#km_event * ) ; int ( * report ) ( s#net * , t#u8 , s#xfrm_selector * , t#xfrm_address_t * ) ; int ( * migrate ) ( const s#xfrm_selector * , t#u8 , t#u8 , const s#xfrm_migrate * , int , const s#xfrm_kmaddress * ) ; } 
xfrm_register_km extern int xfrm_register_km ( s#xfrm_mgr * ) 
xfrm_unregister_km extern int xfrm_unregister_km ( s#xfrm_mgr * ) 
xfrm_state_register_afinfo extern int xfrm_state_register_afinfo ( s#xfrm_state_afinfo * ) 
xfrm_state_unregister_afinfo extern int xfrm_state_unregister_afinfo ( s#xfrm_state_afinfo * ) 
xfrm_state_delete_tunnel extern void xfrm_state_delete_tunnel ( s#xfrm_state * ) 
__xfrm_init_state extern int __xfrm_init_state ( s#xfrm_state * , t#bool ) 
xfrm_init_state extern int xfrm_init_state ( s#xfrm_state * ) 
xfrm_audit_state_add extern void xfrm_audit_state_add ( s#xfrm_state * , int , t#kuid_t , t#u32 , t#u32 ) 
xfrm_audit_state_delete extern void xfrm_audit_state_delete ( s#xfrm_state * , int , t#kuid_t , t#u32 , t#u32 ) 
xfrm_audit_state_replay_overflow extern void xfrm_audit_state_replay_overflow ( s#xfrm_state * , s#sk_buff * ) 
xfrm_audit_state_replay extern void xfrm_audit_state_replay ( s#xfrm_state * , s#sk_buff * , t#__be32 ) 
xfrm_audit_state_notfound_simple extern void xfrm_audit_state_notfound_simple ( s#sk_buff * , t#u16 ) 
xfrm_audit_state_notfound extern void xfrm_audit_state_notfound ( s#sk_buff * , t#u16 , t#__be32 , t#__be32 ) 
xfrm_audit_state_icvfail extern void xfrm_audit_state_icvfail ( s#xfrm_state * , s#sk_buff * , t#u8 ) 

/* security/inode.o */
s##posix_acl
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##seq_file
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##sem_undo_list
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##kstatfs
s##export_operations
s##mtd_info
s##workqueue_struct
s##cdev
securityfs_create_file extern s#dentry * securityfs_create_file ( const char * , t#umode_t , s#dentry * , void * , const s#file_operations * ) 
securityfs_create_dir extern s#dentry * securityfs_create_dir ( const char * , s#dentry * ) 
securityfs_remove extern void securityfs_remove ( s#dentry * ) 

/* security/integrity/evm/evm_main.o */
e#integrity_status enum integrity_status { INTEGRITY_PASS = 0 , INTEGRITY_FAIL , INTEGRITY_NOLABEL , INTEGRITY_NOXATTRS , INTEGRITY_UNKNOWN , } 
s##posix_acl
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##seq_file
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##cdev
s#evm_ima_xattr_data struct evm_ima_xattr_data { t#u8 type ; t#u8 digest [ 20 ] ; } 
s#integrity_iint_cache struct integrity_iint_cache { s#rb_node rb_node ; s#inode * inode ; t#u64 version ; unsigned long flags ; s#evm_ima_xattr_data ima_xattr ; e#integrity_status ima_file_status : 4 ; e#integrity_status ima_mmap_status : 4 ; e#integrity_status ima_bprm_status : 4 ; e#integrity_status ima_module_status : 4 ; e#integrity_status evm_status : 4 ; } 
evm_verifyxattr extern e#integrity_status evm_verifyxattr ( s#dentry * , const char * , void * , t#size_t , s#integrity_iint_cache * ) 
s#xattr struct xattr { const char * name ; void * value ; t#size_t value_len ; } 
evm_inode_init_security extern int evm_inode_init_security ( s#inode * , const s#xattr * , s#xattr * ) 

/* security/integrity/ima/ima_main.o */
s##posix_acl
s##nameidata
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##writeback_control
s##kiocb
s##iovec
s##swap_info_struct
s##backing_dev_info
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##kstatfs
s##seq_file
s##export_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
ima_file_check extern int ima_file_check ( s#file * , int ) 

/* security/keys/encrypted-keys/ecryptfs_format.o */
s#ecryptfs_session_key struct ecryptfs_session_key { t#u32 flags ; t#u32 encrypted_key_size ; t#u32 decrypted_key_size ; t#u8 encrypted_key [ 512 ] ; t#u8 decrypted_key [ 64 ] ; } 
s#ecryptfs_password struct ecryptfs_password { t#u32 password_bytes ; t#s32 hash_algo ; t#u32 hash_iterations ; t#u32 session_key_encryption_key_bytes ; t#u32 flags ; t#u8 session_key_encryption_key [ 64 ] ; t#u8 signature [ ( 8 * 2 ) + 1 ] ; t#u8 salt [ 8 ] ; } 
s#ecryptfs_private_key struct ecryptfs_private_key { t#u32 key_size ; t#u32 data_len ; t#u8 signature [ ( 8 * 2 ) + 1 ] ; char pki_type [ 16 + 1 ] ; t#u8 data [ ] ; } 
s#ecryptfs_auth_tok struct ecryptfs_auth_tok { t#u16 version ; t#u16 token_type ; t#u32 flags ; s#ecryptfs_session_key session_key ; t#u8 reserved [ 32 ] ; union { s#ecryptfs_password password ; s#ecryptfs_private_key private_key ; } token ; } 
ecryptfs_get_auth_tok_key t#u8 * ecryptfs_get_auth_tok_key ( s#ecryptfs_auth_tok * ) 
ecryptfs_get_versions void ecryptfs_get_versions ( int * , int * , int * ) 
ecryptfs_fill_auth_tok int ecryptfs_fill_auth_tok ( s#ecryptfs_auth_tok * , const char * ) 

/* security/keys/encrypted-keys/encrypted.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##assoc_array_ptr
key_type_encrypted extern s#key_type key_type_encrypted 

/* security/keys/key.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##file
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##pid_namespace
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s#key_user struct key_user { s#rb_node node ; s#mutex cons_lock ; t#spinlock_t lock ; t#atomic_t usage ; t#atomic_t nkeys ; t#atomic_t nikeys ; t#kuid_t uid ; int qnkeys ; int qnbytes ; } 
s##assoc_array_ptr
key_alloc extern s#key * key_alloc ( s#key_type * , const char * , t#kuid_t , t#kgid_t , const s#cred * , t#key_perm_t , unsigned long ) 
key_payload_reserve extern int key_payload_reserve ( s#key * , t#size_t ) 
key_instantiate_and_link extern int key_instantiate_and_link ( s#key * , const void * , t#size_t , s#key * , s#key * ) 
key_reject_and_link extern int key_reject_and_link ( s#key * , unsigned , unsigned , s#key * , s#key * ) 
key_put extern void key_put ( s#key * ) 
key_set_timeout extern void key_set_timeout ( s#key * , unsigned ) 
s##__key_reference_with_attributes
t#key_ref_t typedef s#__key_reference_with_attributes * key_ref_t 
key_create_or_update extern t#key_ref_t key_create_or_update ( t#key_ref_t , const char * , const char * , const void * , t#size_t , t#key_perm_t , unsigned long ) 
key_update extern int key_update ( t#key_ref_t , const void * , t#size_t ) 
key_revoke extern void key_revoke ( s#key * ) 
key_invalidate extern void key_invalidate ( s#key * ) 
register_key_type extern int register_key_type ( s#key_type * ) 
unregister_key_type extern void unregister_key_type ( s#key_type * ) 

/* security/keys/keyring.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##assoc_array_ptr
key_type_keyring extern s#key_type key_type_keyring 
keyring_alloc extern s#key * keyring_alloc ( const char * , t#kuid_t , t#kgid_t , const s#cred * , t#key_perm_t , unsigned long , s#key * ) 
s##__key_reference_with_attributes
keyring_search extern t#key_ref_t keyring_search ( t#key_ref_t , s#key_type * , const char * ) 
key_link extern int key_link ( s#key * , s#key * ) 
key_unlink extern int key_unlink ( s#key * , s#key * ) 
keyring_clear extern int keyring_clear ( s#key * ) 

/* security/keys/permission.o */
s##__key_reference_with_attributes
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##seq_file
s##assoc_array_ptr
s##user_namespace
key_task_permission extern int key_task_permission ( const t#key_ref_t , const s#cred * , t#key_perm_t ) 
key_validate extern int key_validate ( const s#key * ) 

/* security/keys/request_key.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##seq_file
s##assoc_array_ptr
complete_request_key extern void complete_request_key ( s#key_construction * , int ) 
wait_for_key_construction extern int wait_for_key_construction ( s#key * , t#bool ) 
request_key extern s#key * request_key ( s#key_type * , const char * , const char * ) 
request_key_with_auxdata extern s#key * request_key_with_auxdata ( s#key_type * , const char * , const void * , t#size_t , void * ) 
request_key_async extern s#key * request_key_async ( s#key_type * , const char * , const void * , t#size_t ) 
request_key_async_with_auxdata extern s#key * request_key_async_with_auxdata ( s#key_type * , const char * , const void * , t#size_t , void * ) 

/* security/keys/trusted.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##key_user
s##assoc_array_ptr
s##seq_file
key_type_trusted extern s#key_type key_type_trusted 

/* security/keys/user_defined.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##address_space
s##slab
s##kmem_cache_node
s##array_cache
s##pid_namespace
s##user_namespace
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##optimistic_spin_queue
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##assoc_array_ptr
key_type_user extern s#key_type key_type_user 
key_type_logon extern s#key_type key_type_logon 
user_instantiate extern int user_instantiate ( s#key * , s#key_preparsed_payload * ) 
user_update extern int user_update ( s#key * , s#key_preparsed_payload * ) 
user_match extern int user_match ( const s#key * , const void * ) 
user_revoke extern void user_revoke ( s#key * ) 
user_destroy extern void user_destroy ( s#key * ) 
user_describe extern void user_describe ( const s#key * , s#seq_file * ) 
user_read extern long user_read ( const s#key * , char * , t#size_t ) 

/* security/security.o */
security_sb_copy_data int security_sb_copy_data ( char * , char * ) 
s##posix_acl
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##ftrace_event_call
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##optimistic_spin_queue
s##kiocb
s##swap_info_struct
s##tvec_base
s##workqueue_struct
s##device
s##slab
s##kmem_cache_node
s##array_cache
s##mempolicy
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##bsd_acct_struct
s##user_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##sem_undo_list
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##return_instance
s##uprobe
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##seq_file
s##hd_struct
s##gendisk
s##request_queue
s##cdev
s##kstatfs
s##export_operations
s##mtd_info
security_sb_set_mnt_opts int security_sb_set_mnt_opts ( s#super_block * , s#security_mnt_opts * , unsigned long , unsigned long * ) 
security_sb_clone_mnt_opts int security_sb_clone_mnt_opts ( const s#super_block * , s#super_block * ) 
security_sb_parse_opts_str int security_sb_parse_opts_str ( char * , s#security_mnt_opts * ) 
security_dentry_init_security int security_dentry_init_security ( s#dentry * , int , s#qstr * , void * * , t#u32 * ) 
t#initxattrs typedef int ( * initxattrs ) ( s#inode * , const s#xattr * , void * ) 
security_inode_init_security int security_inode_init_security ( s#inode * , s#inode * , const s#qstr * , t#initxattrs t#initxattrs , void * ) 
security_old_inode_init_security int security_old_inode_init_security ( s#inode * , s#inode * , const s#qstr * , const char * * , void * * , t#size_t * ) 
security_path_mknod int security_path_mknod ( s#path * , s#dentry * , t#umode_t , unsigned int ) 
security_path_mkdir int security_path_mkdir ( s#path * , s#dentry * , t#umode_t ) 
security_path_unlink int security_path_unlink ( s#path * , s#dentry * ) 
security_path_rename int security_path_rename ( s#path * , s#dentry * , s#path * , s#dentry * ) 
security_inode_create int security_inode_create ( s#inode * , s#dentry * , t#umode_t ) 
security_inode_mkdir int security_inode_mkdir ( s#inode * , s#dentry * , t#umode_t ) 
security_inode_setattr int security_inode_setattr ( s#dentry * , s#iattr * ) 
security_inode_listsecurity int security_inode_listsecurity ( s#inode * , char * , t#size_t ) 
security_task_getsecid void security_task_getsecid ( s#task_struct * , t#u32 * ) 
security_d_instantiate void security_d_instantiate ( s#dentry * , s#inode * ) 
security_ismaclabel int security_ismaclabel ( const char * ) 
security_secid_to_secctx int security_secid_to_secctx ( t#u32 , char * * , t#u32 * ) 
security_secctx_to_secid int security_secctx_to_secid ( const char * , t#u32 , t#u32 * ) 
security_release_secctx void security_release_secctx ( char * , t#u32 ) 
security_inode_notifysecctx int security_inode_notifysecctx ( s#inode * , void * , t#u32 ) 
security_inode_setsecctx int security_inode_setsecctx ( s#dentry * , void * , t#u32 ) 
security_inode_getsecctx int security_inode_getsecctx ( s#inode * , void * * , t#u32 * ) 
security_unix_stream_connect int security_unix_stream_connect ( s#sock * , s#sock * , s#sock * ) 
s##socket
security_unix_may_send int security_unix_may_send ( s#socket * , s#socket * ) 
s##sk_buff
security_sock_rcv_skb int security_sock_rcv_skb ( s#sock * , s#sk_buff * ) 
security_socket_getpeersec_dgram int security_socket_getpeersec_dgram ( s#socket * , s#sk_buff * , t#u32 * ) 
security_sk_clone void security_sk_clone ( const s#sock * , s#sock * ) 
security_sk_classify_flow void security_sk_classify_flow ( s#sock * , s#flowi * ) 
s##request_sock
security_req_classify_flow void security_req_classify_flow ( const s#request_sock * , s#flowi * ) 
security_sock_graft void security_sock_graft ( s#sock * , s#socket * ) 
security_inet_conn_request int security_inet_conn_request ( s#sock * , s#sk_buff * , s#request_sock * ) 
security_secmark_relabel_packet int security_secmark_relabel_packet ( t#u32 ) 
security_secmark_refcount_inc void security_secmark_refcount_inc ( void ) 
security_secmark_refcount_dec void security_secmark_refcount_dec ( void ) 
security_tun_dev_alloc_security int security_tun_dev_alloc_security ( void * * ) 
security_tun_dev_free_security void security_tun_dev_free_security ( void * ) 
security_tun_dev_create int security_tun_dev_create ( void ) 
security_tun_dev_attach_queue int security_tun_dev_attach_queue ( void * ) 
security_tun_dev_attach int security_tun_dev_attach ( s#sock * , void * ) 
security_tun_dev_open int security_tun_dev_open ( void * ) 
s##xfrm_sec_ctx
s##xfrm_user_sec_ctx
security_xfrm_policy_alloc int security_xfrm_policy_alloc ( s#xfrm_sec_ctx * * , s#xfrm_user_sec_ctx * ) 
security_xfrm_policy_free void security_xfrm_policy_free ( s#xfrm_sec_ctx * ) 
s##xfrm_state
security_xfrm_state_alloc int security_xfrm_state_alloc ( s#xfrm_state * , s#xfrm_user_sec_ctx * ) 
security_xfrm_state_delete int security_xfrm_state_delete ( s#xfrm_state * ) 
security_skb_classify_flow void security_skb_classify_flow ( s#sk_buff * , s#flowi * ) 

/* security/selinux/exports.o */
selinux_is_enabled t#bool selinux_is_enabled ( void ) 

/* virt/kvm/kvm_main.o */
s##kmem_cache_node
s##array_cache
kvm_vcpu_cache extern s#kmem_cache * kvm_vcpu_cache 
kvm_rebooting extern t#bool kvm_rebooting 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##writeback_control
s##kstatfs
s##user_namespace
s##export_operations
s##optimistic_spin_queue
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##nameidata
s##kiocb
s##files_struct
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##cdev
s##radix_tree_node
s##slab
s##linux_binfmt
s##kioctx_table
s##sem_undo_list
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##tvec_base
s##dev_pm_qos
s##dma_coherent_mem
s##dma_map_ops
s##pci_controller
s##pci_bus
s##proc_dir_entry
s##pci_dev
s##iommu_group
s##perf_cgroup
s##event_constraint
s##ring_buffer
s##ftrace_hash
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroup_taskset
s##eventfd_ctx
s##css_id
s##robust_list_head
s##futex_pi_state
s##numa_group
s##mem_cgroup
s##return_instance
s##uprobe
s##kvmppc_vcpu_book3s
s##openpic
s##kvmppc_icp
s#kvm_io_device_ops struct kvm_io_device_ops { int ( * read ) ( s#kvm_io_device * , t#gpa_t , int , void * ) ; int ( * write ) ( s#kvm_io_device * , t#gpa_t , int , const void * ) ; void ( * destructor ) ( s#kvm_io_device * ) ; } 
s#kvm_io_device struct kvm_io_device { const s#kvm_io_device_ops * ops ; } 
s##kvmppc_xics
s##kvmppc_ops
kvm_flush_remote_tlbs void kvm_flush_remote_tlbs ( s#kvm * ) 
kvm_vcpu_init int kvm_vcpu_init ( s#kvm_vcpu * , s#kvm * , unsigned ) 
kvm_vcpu_uninit void kvm_vcpu_uninit ( s#kvm_vcpu * ) 
kvm_get_kvm void kvm_get_kvm ( s#kvm * ) 
kvm_put_kvm void kvm_put_kvm ( s#kvm * ) 
__kvm_set_memory_region int __kvm_set_memory_region ( s#kvm * , s#kvm_userspace_memory_region * ) 
kvm_set_memory_region int kvm_set_memory_region ( s#kvm * , s#kvm_userspace_memory_region * ) 
kvm_get_dirty_log int kvm_get_dirty_log ( s#kvm * , s#kvm_dirty_log * , int * ) 
kvm_disable_largepages void kvm_disable_largepages ( void ) 
gfn_to_memslot s#kvm_memory_slot * gfn_to_memslot ( s#kvm * , t#gfn_t ) 
kvm_is_visible_gfn int kvm_is_visible_gfn ( s#kvm * , t#gfn_t ) 
gfn_to_hva_memslot unsigned long gfn_to_hva_memslot ( s#kvm_memory_slot * , t#gfn_t ) 
gfn_to_hva unsigned long gfn_to_hva ( s#kvm * , t#gfn_t ) 
gfn_to_pfn_atomic t#pfn_t gfn_to_pfn_atomic ( s#kvm * , t#gfn_t ) 
gfn_to_pfn_async t#pfn_t gfn_to_pfn_async ( s#kvm * , t#gfn_t , t#bool * , t#bool , t#bool * ) 
gfn_to_pfn t#pfn_t gfn_to_pfn ( s#kvm * , t#gfn_t ) 
gfn_to_pfn_prot t#pfn_t gfn_to_pfn_prot ( s#kvm * , t#gfn_t , t#bool , t#bool * ) 
gfn_to_pfn_memslot_atomic t#pfn_t gfn_to_pfn_memslot_atomic ( s#kvm_memory_slot * , t#gfn_t ) 
gfn_to_page_many_atomic int gfn_to_page_many_atomic ( s#kvm * , t#gfn_t , s#page * * , int ) 
gfn_to_page s#page * gfn_to_page ( s#kvm * , t#gfn_t ) 
kvm_release_page_clean void kvm_release_page_clean ( s#page * ) 
kvm_release_pfn_clean void kvm_release_pfn_clean ( t#pfn_t ) 
kvm_release_page_dirty void kvm_release_page_dirty ( s#page * ) 
kvm_release_pfn_dirty void kvm_release_pfn_dirty ( t#pfn_t ) 
kvm_set_page_dirty void kvm_set_page_dirty ( s#page * ) 
kvm_set_pfn_dirty void kvm_set_pfn_dirty ( t#pfn_t ) 
kvm_set_pfn_accessed void kvm_set_pfn_accessed ( t#pfn_t ) 
kvm_get_pfn void kvm_get_pfn ( t#pfn_t ) 
kvm_read_guest_page int kvm_read_guest_page ( s#kvm * , t#gfn_t , void * , int , int ) 
kvm_read_guest int kvm_read_guest ( s#kvm * , t#gpa_t , void * , unsigned long ) 
kvm_read_guest_atomic int kvm_read_guest_atomic ( s#kvm * , t#gpa_t , void * , unsigned long ) 
kvm_write_guest_page int kvm_write_guest_page ( s#kvm * , t#gfn_t , const void * , int , int ) 
s#gfn_to_hva_cache struct gfn_to_hva_cache { t#u64 generation ; t#gpa_t gpa ; unsigned long hva ; unsigned long len ; s#kvm_memory_slot * memslot ; } 
kvm_gfn_to_hva_cache_init int kvm_gfn_to_hva_cache_init ( s#kvm * , s#gfn_to_hva_cache * , t#gpa_t , unsigned long ) 
kvm_write_guest_cached int kvm_write_guest_cached ( s#kvm * , s#gfn_to_hva_cache * , void * , unsigned long ) 
kvm_read_guest_cached int kvm_read_guest_cached ( s#kvm * , s#gfn_to_hva_cache * , void * , unsigned long ) 
kvm_clear_guest_page int kvm_clear_guest_page ( s#kvm * , t#gfn_t , int , int ) 
kvm_clear_guest int kvm_clear_guest ( s#kvm * , t#gpa_t , unsigned long ) 
mark_page_dirty void mark_page_dirty ( s#kvm * , t#gfn_t ) 
kvm_vcpu_block void kvm_vcpu_block ( s#kvm_vcpu * ) 
kvm_vcpu_kick void kvm_vcpu_kick ( s#kvm_vcpu * ) 
kvm_vcpu_yield_to t#bool kvm_vcpu_yield_to ( s#kvm_vcpu * ) 
kvm_vcpu_on_spin void kvm_vcpu_on_spin ( s#kvm_vcpu * ) 
kvm_init int kvm_init ( void * , unsigned , unsigned , s#module * ) 
kvm_exit void kvm_exit ( void ) 

