From: Michal Kubecek <mkubecek@suse.cz>
Date: Fri, 14 Oct 2016 10:27:30 +0200
Subject: kabi: hide harmless change in struct inet_connection_sock
Patch-mainline: Never, kabi workaround
References: fate#318553

Backport of mainline commit  9f950415e4e2 ("tcp: fix child sockets to
use system default congestion control if not set") steals one bit from
inet_connection_sock::icsk_ca_state for icsk_ca_setsockopt flag.

This doesn't change the layout of the structure and as icsk_ca_state is
only supposed to use values from tcp_ca_state enum (0-4), six bits are
more than enough.

Mask the change and add BE/LE ifdef to make sure new icsk_ca_state is
equal to old icsk_ca_state & 0x3f (which is not true on big endian
architectures for mainline code).

Signed-off-by: Michal Kubecek <mkubecek@suse.cz>
---
 include/net/inet_connection_sock.h | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/include/net/inet_connection_sock.h b/include/net/inet_connection_sock.h
index fa4b0725ae34..6779defcee22 100644
--- a/include/net/inet_connection_sock.h
+++ b/include/net/inet_connection_sock.h
@@ -98,8 +98,19 @@ struct inet_connection_sock {
 	const struct tcp_congestion_ops *icsk_ca_ops;
 	const struct inet_connection_sock_af_ops *icsk_af_ops;
 	unsigned int		  (*icsk_sync_mss)(struct sock *sk, u32 pmtu);
+#ifdef __GENKSYMS__
+	__u8			  icsk_ca_state:7,
+#else
+#if defined(__LITTLE_ENDIAN_BITFIELD)
 	__u8			  icsk_ca_state:6,
 				  icsk_ca_setsockopt:1,
+#elif defined(__BIG_ENDIAN_BITFIELD)
+	__u8			  icsk_ca_setsockopt:1,
+				  icsk_ca_state:6,
+#else
+#error "unexpected bitfield endianness: neither LE nor BE"
+#endif
+#endif
 				  icsk_ca_dst_locked:1;
 	__u8			  icsk_retransmits;
 	__u8			  icsk_pending;
-- 
2.10.1

