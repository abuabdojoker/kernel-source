From: Jiri Slaby <jslaby@suse.cz>
Subject: kABI: protect struct pci_dev
Patch-mainline: never, kabi

In 3.12.35, commit 5545f8b0fca9fa9efe65d8084dbb536aebabdb61 (PCI/MSI:
Add device flag indicating that 64-bit MSIs don't work), upstream
commit f144d1496b47e7450f41b767d0d91c724c2198bc added an one-bit
member to struct pci_dev. It indeed changed the layout of that
structure.

Since it is a single bit and there are other bits declared, let us
move this new bit at the end of the bitfield and rely on the C specs
that it has to be joined with the others. Then, protect the member the
usual way, by #ifdef __GENKSYMS__.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 include/linux/pci.h |    2 ++
 1 file changed, 2 insertions(+)

--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@ -345,7 +345,9 @@ struct pci_dev {
 	unsigned int	__aer_firmware_first:1;
 	unsigned int	broken_intx_masking:1;
 	unsigned int	io_window_1k:1;	/* Intel P2P bridge 1K I/O windows */
+#ifndef __GENKSYMS__
 	unsigned int	non_compliant_bars:1;	/* broken BARs; ignore them */
+#endif
 	pci_dev_flags_t dev_flags;
 	atomic_t	enable_cnt;	/* pci_enable_device has been called */
 
