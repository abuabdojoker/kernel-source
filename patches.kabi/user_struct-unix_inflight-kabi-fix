From: Takashi Iwai <tiwai@suse.de>
Subject: Fix kABI for addition of unix_inflight to user_struct
Patch-mainline: Never, SUSE Leap kernel only

The new field was added in 4.1.17 kernel.  Just move it at the tail
to keep kABI compatibility.

Signed-off-by: Takashi Iwai <tiwai@suse.de>

---
 include/linux/sched.h |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -802,7 +802,6 @@ struct user_struct {
 	unsigned long mq_bytes;	/* How many bytes can be allocated to mqueue? */
 #endif
 	unsigned long locked_shm; /* How many pages of mlocked shm ? */
-	unsigned long unix_inflight;	/* How many files in flight in unix sockets */
 	atomic_long_t pipe_bufs;  /* how many pages are allocated in pipe buffers */
 
 #ifdef CONFIG_KEYS
@@ -817,6 +816,9 @@ struct user_struct {
 #ifdef CONFIG_PERF_EVENTS
 	atomic_long_t locked_vm;
 #endif
+#ifndef __GENKSYMS__
+	unsigned long unix_inflight;	/* How many files in flight in unix sockets */
+#endif
 };
 
 extern int uids_sysfs_init(void);
