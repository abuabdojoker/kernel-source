From: Sebastian Ott <sebott@linux.vnet.ibm.com>
Subject: s390/pci: enforce fmb page boundary rule
Patch-mainline: v4.6-rc1
Git-commit: 80c544ded25ac14d7cc3e555abb8ed2c2da99b84
References: bnc#974692, LTC#139445

Description:  s390/pci: enforce fmb page boundary rule
Symptom:      Kernel panic.
Problem:      Unhandled operand exception due to a misaligned function
              measurement block.
Solution:     Enforce correct alignment.
Reproduction: PCI hotplug in a tight loop during load.

Upstream-Description:

              s390/pci: enforce fmb page boundary rule

              The function measurement block must not cross a page boundary. Ensure
              that by raising the alignment requirement to the smallest power of 2
              larger than the size of the fmb.

              Fixes: d0b088531 ("s390/pci: performance statistics and debug infrastructure")
              Cc: stable@vger.kernel.org # v3.8+
              Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
              Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>


Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/include/asm/pci.h |    2 +-
 arch/s390/pci/pci.c         |    5 ++++-
 2 files changed, 5 insertions(+), 2 deletions(-)

--- a/arch/s390/include/asm/pci.h
+++ b/arch/s390/include/asm/pci.h
@@ -44,7 +44,7 @@ struct zpci_fmb {
 	u64 rpcit_ops;
 	u64 dma_rbytes;
 	u64 dma_wbytes;
-} __packed __aligned(16);
+} __packed __aligned(64);
 
 #define ZPCI_MSI_VEC_BITS	11
 #define ZPCI_MSI_VEC_MAX	(1 << ZPCI_MSI_VEC_BITS)
--- a/arch/s390/pci/pci.c
+++ b/arch/s390/pci/pci.c
@@ -894,8 +894,11 @@ static inline int barsize(u8 size)
 
 static int zpci_mem_init(void)
 {
+	BUILD_BUG_ON(!is_power_of_2(__alignof__(struct zpci_fmb)) ||
+		     __alignof__(struct zpci_fmb) < sizeof(struct zpci_fmb));
+
 	zdev_fmb_cache = kmem_cache_create("PCI_FMB_cache", sizeof(struct zpci_fmb),
-				16, 0, NULL);
+					   __alignof__(struct zpci_fmb), 0, NULL);
 	if (!zdev_fmb_cache)
 		goto error_zdev;
 
