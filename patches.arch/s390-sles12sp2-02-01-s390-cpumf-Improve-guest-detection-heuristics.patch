From: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
Subject: s390/cpumf: Improve guest detection heuristics
Patch-mainline: v4.6-rc1
Git-commit: b1685ab9bd3ae14830acac8ffdc7aafc0fb416e3
References: bnc#943476, LTC#141776

Description:  s390/perf: rework program parameter setting to spot KVM guests
Symptom:      Host and guest samples cannot be distinguished.
Problem:      The guest program parameter is zero for the kernel
              in the guest context.
Solution:     Improve the program parameter doubleword by combining
              two parts, the leftmost LPP part and the rightmost PID
              part.  Set the PID part for processes by using the task
              PID.  To distinguish host and guest samples for the
              kernel (PID part is zero), the guest must always set
              the program paramater to a non-zero value.  Use the
              leftmost bit in the LPP part of the program parameter
              to be able to detect guest kernel samples.
Reproduction: For example, use perf to sample guests.

Upstream-Description:

              s390/cpumf: Improve guest detection heuristics

              commit e22cf8ca6f75 ("s390/cpumf: rework program parameter setting
              to detect guest samples") requires guest changes to get proper
              guest/host. We can do better: We can use the primary asn value,
              which is set on all Linux variants to compare this with the host
              pp value.
              We now have the following cases:
              1. Guest using PP
              host sample:  gpp == 0, asn == hpp --> host
              guest sample: gpp != 0 --> guest
              2. Guest not using PP
              host sample:  gpp == 0, asn == hpp --> host
              guest sample: gpp == 0, asn != hpp --> guest

              As soon as the host no longer sets CR4, we must back out
              this heuristics - let's add a comment in switch_to.

              Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
              Reviewed-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
              Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>


Signed-off-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/kernel/entry.S        |    1 +
 arch/s390/kernel/perf_cpum_sf.c |    9 ++++++---
 2 files changed, 7 insertions(+), 3 deletions(-)

--- a/arch/s390/kernel/entry.S
+++ b/arch/s390/kernel/entry.S
@@ -195,6 +195,7 @@ ENTRY(__switch_to)
 	stg	%r5,__LC_THREAD_INFO		# store thread info of next
 	stg	%r15,__LC_KERNEL_STACK		# store end of kernel stack
 	lg	%r15,__THREAD_ksp(%r1)		# load kernel stack of next
+	/* c4 is used in guest detection: arch/s390/kernel/perf_cpum_sf.c */
 	lctl	%c4,%c4,__TASK_pid(%r3)		# load pid to control reg. 4
 	mvc	__LC_CURRENT_PID(4,%r0),__TASK_pid(%r3) # store pid of next
 	lmg	%r6,%r15,__SF_GPRS(%r15)	# load gprs of next task
--- a/arch/s390/kernel/perf_cpum_sf.c
+++ b/arch/s390/kernel/perf_cpum_sf.c
@@ -1022,10 +1022,13 @@ static int perf_push_sample(struct perf_
 	/*
 	 * A non-zero guest program parameter indicates a guest
 	 * sample.
-	 * Note that some early samples might be misaccounted to
-	 * the host.
+	 * Note that some early samples or samples from guests without
+	 * lpp usage would be misaccounted to the host. We use the asn
+	 * value as a heuristic to detect most of these guest samples.
+	 * If the value differs from the host hpp value, we assume
+	 * it to be a KVM guest.
 	 */
-	if (sfr->basic.gpp)
+	if (sfr->basic.gpp || sfr->basic.prim_asn != (u16) sfr->basic.hpp)
 		sde_regs->in_guest = 1;
 
 	overflow = 0;
