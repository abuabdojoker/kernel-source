From: Sebastian Ott <sebott@linux.vnet.ibm.com>
Subject: s390/pci: remove iomap sanity checks
Patch-mainline: v4.5-rc2
Git-commit: f5e44f82c1848d8e55fb0061308f14c0884e5483
References: bnc#998608, LTC#146199

Description:  s390/pci: fix panic after hot-plugging PCI functions
Symptom:      Panic after function hot-plug
Problem:      Overzealous sanity checks trigger a BUG_ON.
Solution:     Remove the overzealous check, convert the other to
              be a WARN_ON.
Reproduction: hot-plug with pci functions

Upstream-Description:

              s390/pci: remove iomap sanity checks

              Since each iomap_entry handles only one bar of one pci function
              (even when disjunct ranges of a bar are mapped) the sanity check
              in pci_iomap_range is not needed and can be removed.

              Also convert the remaining BUG_ONs to WARN_ONs.

              Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
              Reviewed-by: Gerald Schaefer <gerald.schaefer@de.ibm.com>
              Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>


Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/pci/pci.c |   13 ++++---------
 1 file changed, 4 insertions(+), 9 deletions(-)

--- a/arch/s390/pci/pci.c
+++ b/arch/s390/pci/pci.c
@@ -273,15 +273,10 @@ void __iomem *pci_iomap_range(struct pci
 
 	idx = zdev->bars[bar].map_idx;
 	spin_lock(&zpci_iomap_lock);
-	if (zpci_iomap_start[idx].count++) {
-		BUG_ON(zpci_iomap_start[idx].fh != zdev->fh ||
-		       zpci_iomap_start[idx].bar != bar);
-	} else {
-		zpci_iomap_start[idx].fh = zdev->fh;
-		zpci_iomap_start[idx].bar = bar;
-	}
 	/* Detect overrun */
-	BUG_ON(!zpci_iomap_start[idx].count);
+	WARN_ON(!++zpci_iomap_start[idx].count);
+	zpci_iomap_start[idx].fh = zdev->fh;
+	zpci_iomap_start[idx].bar = bar;
 	spin_unlock(&zpci_iomap_lock);
 
 	addr = ZPCI_IOMAP_ADDR_BASE | ((u64) idx << 48);
@@ -302,7 +297,7 @@ void pci_iounmap(struct pci_dev *pdev, v
 	idx = (((__force u64) addr) & ~ZPCI_IOMAP_ADDR_BASE) >> 48;
 	spin_lock(&zpci_iomap_lock);
 	/* Detect underrun */
-	BUG_ON(!zpci_iomap_start[idx].count);
+	WARN_ON(!zpci_iomap_start[idx].count);
 	if (!--zpci_iomap_start[idx].count) {
 		zpci_iomap_start[idx].fh = 0;
 		zpci_iomap_start[idx].bar = 0;
