From: Heiko Carstens <heiko.carstens@de.ibm.com>
Subject: s390/spinlock: avoid yield to non existent cpu
Patch-mainline: v4.6-rc5
Git-commit: 8497695243f70fd19ed6cf28b63584f1b608b5f9
References: bnc#980892, LTC#141106

Description:  kernel: avoid yield to non existent cpu
Symptom:      cpu yields (diag 9c) to non existent cpus
Problem:      arch_spin_lock_wait_flags() checks if a spinlock is not held
              before trying a compare and swap instruction. If the lock is
              unlocked it tries the compare and swap instruction, however if
              a different cpu grabbed the lock in the meantime the instruction
              will fail as expected.
              Subsequently the arch_spin_lock_wait_flags() incorrectly tries to
              figure out if the cpu that holds the lock is running. However it
              is using the wrong cpu number for this (-1) and then will also
              yield the current cpu to the wrong cpu.
Solution:     Add missing continue statement.
Reproduction: -

Upstream-Description:

              s390/spinlock: avoid yield to non existent cpu

              arch_spin_lock_wait_flags() checks if a spinlock is not held before
              trying a compare and swap instruction. If the lock is unlocked it
              tries the compare and swap instruction, however if a different cpu
              grabbed the lock in the meantime the instruction will fail as
              expected.

              Subsequently the arch_spin_lock_wait_flags() incorrectly tries to
              figure out if the cpu that holds the lock is running. However it is
              using the wrong cpu number for this (-1) and then will also yield the
              current cpu to the wrong cpu.

              Fix this by adding a missing continue statement.

              Fixes: 470ada6b1a1d ("s390/spinlock: refactor arch_spin_lock_wait[_flags]")
              Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
              Acked-by: Martin Schwidefsky <schwidefsky@de.ibm.com>


Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/lib/spinlock.c |    1 +
 1 file changed, 1 insertion(+)

--- a/arch/s390/lib/spinlock.c
+++ b/arch/s390/lib/spinlock.c
@@ -90,6 +90,7 @@ void arch_spin_lock_wait_flags(arch_spin
 			if (_raw_compare_and_swap(&lp->lock, 0, cpu))
 				return;
 			local_irq_restore(flags);
+			continue;
 		}
 		/* Check if the lock owner is running. */
 		if (!smp_vcpu_scheduled(~owner)) {
