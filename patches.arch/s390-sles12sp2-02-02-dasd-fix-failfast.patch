From: Stefan Haberland <stefan.haberland@de.ibm.com>
Subject: s390/dasd: fix failfast for disconnected devices
Patch-mainline: v4.5-rc1
Git-commit: c6fc7b6f8ca5d3d59446ce4ee870569355cfb04a
References: bnc#943476, LTC#135138

Description:  dasd: fix failfast for disconnected devices
Symptom:      For disconnected devices with activated failfast I/O
              operations hang and do not fail immediately as expected.
Problem:      For disconnected devices new requests are not fetched
              from the block queue and therefore failfast is not
              triggered.
Solution:     Let the DASD driver fetch requests for disconnected
              devices with failfast active.
Reproduction: Have failfast active for a disconnected DASD device and
              start I/O requests. The requests hang and do not fail
              immediately as expected.

Upstream-Description:

              s390/dasd: fix failfast for disconnected devices

              Enabling failfast should let request fail immediately if either an
              error occurred or the device gets disconnected.
              For disconnected devices new requests are not fetches from the block
              queue and therefore failfast is not triggered.

              Fix by letting the DASD driver fetch requests for disconnected devices
              with failfast active.

              Signed-off-by: Stefan Haberland <stefan.haberland@de.ibm.com>
              Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>


Signed-off-by: Stefan Haberland <stefan.haberland@de.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 drivers/s390/block/dasd.c |    8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

--- a/drivers/s390/block/dasd.c
+++ b/drivers/s390/block/dasd.c
@@ -2612,8 +2612,12 @@ static void __dasd_process_request_queue
 		return;
 	}
 
-	/* if device ist stopped do not fetch new requests */
-	if (basedev->stopped)
+	/*
+	 * if device is stopped do not fetch new requests
+	 * except failfast is active which will let requests fail
+	 * immediately in __dasd_block_start_head()
+	 */
+	if (basedev->stopped && !(basedev->features & DASD_FEATURE_FAILFAST))
 		return;
 
 	/* Now we try to fetch requests from the request queue */
