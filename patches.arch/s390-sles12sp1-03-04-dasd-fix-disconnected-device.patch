From: Stefan Haberland <stefan.haberland@de.ibm.com>
Subject: s390/dasd: fix disconnected device with valid path mask
Patch-mainline: v4.4-rc1
Git-commit: ccc0e7dc708ce1bd2e1c4a2b6a180ae7459374de
References: bnc#954986, LTC#132707

Description:  dasd: fix disconnected device with valid path mask
Symptom:      Inaccessible device after path events during boot or in
              conjunction with a suspend/resume cycle.
Problem:      Path verification is either done via
              dasd_eckd_read_conf() which is triggered during online
              processing and resume or via do_path_verification_work()
              which is triggered after path events. The
              dasd_eckd_read_conf() version added paths
              unconditionally and did not check if the path mask was
              empty. This led to devices having the disconnected stop
              flag set but a valid path mask. So they where not
              working although they had paths validated
              successfully. After a resume this state could even not
              be solved with additional paths added.
Solution:     Check for an empty path mask in dasd_eckd_read_conf()
              and clear the device stop bits for a newly added channel
              path.
Reproduction: Have path events during boot or within an suspend/resume
              cycle.

Upstream-Description:

              s390/dasd: fix disconnected device with valid path mask

              Path verification is either done via dasd_eckd_read_conf() which is
              triggered during online processing and resume or via
              do_path_verification_work() which is triggered after path events.
              The dasd_eckd_read_conf() version added paths unconditionally and did
              not check if the path mask was empty. This led to devices having the
              disconnected stop flag set but a valid path mask. So they where not
              working although they had paths validated successfully. After a resume
              this state could even not be solved with additional paths added.

              Fix by checking for an empty path mask in dasd_eckd_read_conf() and
              clearing the device stop bits for a newly added channel path.

              Reviewed-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
              Signed-off-by: Stefan Haberland <stefan.haberland@de.ibm.com>
              Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>


Signed-off-by: Stefan Haberland <stefan.haberland@de.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 drivers/s390/block/dasd_eckd.c |    8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

--- a/drivers/s390/block/dasd_eckd.c
+++ b/drivers/s390/block/dasd_eckd.c
@@ -1140,8 +1140,12 @@ static int dasd_eckd_read_conf(struct da
 			path_data->ppm |= lpm;
 			break;
 		}
-		path_data->opm |= lpm;
-
+		if (!path_data->opm) {
+			path_data->opm = lpm;
+			dasd_generic_path_operational(device);
+		} else {
+			path_data->opm |= lpm;
+		}
 		if (conf_data != private->conf_data)
 			kfree(conf_data);
 	}
