From 0a29f5d90ef9ea525b57aac7f1c21c5a8fed3c67 Mon Sep 17 00:00:00 2001
From: Oliver Neukum <oneukum@suse.de>
Date: Mon, 10 Feb 2014 14:37:09 +0100
Git-Commit: 14aec589327a6fc4035f5327d90ac5548f501c4c
Patch-Mainline: v3.15
References: bnc#862400
Subject: [PATCH 2/2] storage: accept some UAS devices if streams are
 unavailable

On some older XHCIs streams are not supported and the UAS driver
will fail at probe time. For those devices storage should try
to bind to UAS devices.
This patch adds a flag for stream support to HCDs and evaluates
it.

Signed-off-by: Oliver Neukum <oneukum@suse.de>
---
 drivers/usb/host/xhci-pci.c      |    3 +++
 drivers/usb/host/xhci-plat.c     |    3 +++
 drivers/usb/storage/uas-detect.h |    4 ++++
 include/linux/usb/hcd.h          |    1 +
 4 files changed, 11 insertions(+)

--- a/drivers/usb/host/xhci-pci.c
+++ b/drivers/usb/host/xhci-pci.c
@@ -237,6 +237,9 @@ static int xhci_pci_probe(struct pci_dev
 	/* USB-2 and USB-3 roothubs initialized, allow runtime pm suspend */
 	pm_runtime_put_noidle(&dev->dev);
 
+	if (HCC_MAX_PSA(xhci->hcc_params) >= 4)
+		hcd->can_do_streams = 1;
+
 	return 0;
 
 put_usb3_hcd:
--- a/drivers/usb/host/xhci-plat.c
+++ b/drivers/usb/host/xhci-plat.c
@@ -156,6 +156,9 @@ static int xhci_plat_probe(struct platfo
 	 */
 	*((struct xhci_hcd **) xhci->shared_hcd->hcd_priv) = xhci;
 
+	if (HCC_MAX_PSA(xhci->hcc_params) >=4)
+		hcd->can_do_streams = 1;
+
 	ret = usb_add_hcd(xhci->shared_hcd, irq, IRQF_SHARED);
 	if (ret)
 		goto put_usb3_hcd;
--- a/drivers/usb/storage/uas-detect.h
+++ b/drivers/usb/storage/uas-detect.h
@@ -72,6 +72,7 @@ static int uas_use_uas_driver(struct usb
 {
 	struct usb_host_endpoint *eps[4] = { };
 	struct usb_device *udev = interface_to_usbdev(intf);
+	struct usb_hcd *hcd = bus_to_hcd(udev->bus);
 	unsigned long flags = id->driver_info;
 	int r, alt;
 
@@ -80,6 +81,9 @@ static int uas_use_uas_driver(struct usb
 	if (flags & US_FL_IGNORE_UAS)
 		return 0;
 
+	if (udev->speed >= USB_SPEED_SUPER && !hcd->can_do_streams)
+		return 0;
+
 	alt = uas_find_uas_alt_setting(intf);
 	if (alt < 0)
 		return 0;
--- a/include/linux/usb/hcd.h
+++ b/include/linux/usb/hcd.h
@@ -142,6 +142,7 @@ struct usb_hcd {
 	unsigned		authorized_default:1;
 	unsigned		has_tt:1;	/* Integrated TT in root hub */
 	unsigned		amd_resume_bug:1; /* AMD remote wakeup quirk */
+	unsigned		can_do_streams:1; /* HC supports streams */
 
 	unsigned int		irq;		/* irq allocated */
 	void __iomem		*regs;		/* device memory/io */
