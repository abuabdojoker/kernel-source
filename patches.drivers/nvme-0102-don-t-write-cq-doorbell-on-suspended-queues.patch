From: Keith Busch <keith.busch@intel.com>
Date: Tue, 11 Aug 2015 09:27:50 -0600
Subject: [PATCH] NVMe: Don't write cq doorbell on suspended queues
References: bsc#948374
Git-Commit: 0dcae78b6bb5f4fc4846aa6f25dca8c6b0ef5cf1
Git-Repo: http://git.infradead.org/users/kbusch/nvme-legacy.git/
Patch-mainline: Never, in nvme-legacy repository

The doorbell address may have been unmapped at this point. To hit, the
controller must have submitted completions after the queue was suspended
but before it was disabled at the pci layer.

Reported-by: Nilesh Choudhury <nilesh.choudhury@oracle.com>
Signed-off-by: Keith Busch <keith.busch@intel.com>
Acked-by: Johannes Thumshirn <jthumshirn@suse.de>
---
 drivers/block/nvme-core.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

--- a/drivers/block/nvme-core.c
+++ b/drivers/block/nvme-core.c
@@ -931,7 +931,8 @@ static int nvme_process_cq(struct nvme_q
 	if (head == nvmeq->cq_head && phase == nvmeq->cq_phase)
 		return 0;
 
-	writel(head, nvmeq->q_db + nvmeq->dev->db_stride);
+	if (!nvmeq->q_suspended)
+		writel(head, nvmeq->q_db + nvmeq->dev->db_stride);
 	nvmeq->cq_head = head;
 	nvmeq->cq_phase = phase;
 
