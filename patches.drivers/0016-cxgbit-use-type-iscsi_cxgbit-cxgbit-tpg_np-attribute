From: Nicholas Bellinger <nab@linux-iscsi.org>
Date: Sat, 14 May 2016 22:28:51 -0700
Subject: cxgbit: Use type ISCSI_CXGBIT + cxgbit tpg_np attribute
Git-commit: ff7199b04f08e1a72637ba66cd2c05842dc592d0
Patch-mainline: v4.7-rc1
References: bsc#982737 fate#320113

Instead of having cxgbit use type ISCSI_HW_OFFLOAD + 'hw_offload'
tpg_np attribute, it should be using it's own driver specific
type + attribute

Cc: Varun Prakash <varun@chelsio.com>
Cc: Hariprasad Shenai <hariprasad@chelsio.com>
Cc: Christoph Hellwig <hch@lst.de>
Cc: Sagi Grimberg <sagi@grimberg.me>
Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
Acked-by: Lee Duncan <lduncan@suse.com>
---
 drivers/target/iscsi/cxgbit/cxgbit_main.c    |  2 +-
 drivers/target/iscsi/iscsi_target_configfs.c | 14 +++++++-------
 include/target/iscsi/iscsi_target_core.h     |  2 +-
 3 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/drivers/target/iscsi/cxgbit/cxgbit_main.c b/drivers/target/iscsi/cxgbit/cxgbit_main.c
index c25f5313322c..60dccd02bd85 100644
--- a/drivers/target/iscsi/cxgbit/cxgbit_main.c
+++ b/drivers/target/iscsi/cxgbit/cxgbit_main.c
@@ -624,7 +624,7 @@ static enum target_prot_op cxgbit_get_sup_prot_ops(struct iscsi_conn *conn)
 
 static struct iscsit_transport cxgbit_transport = {
 	.name			= DRV_NAME,
-	.transport_type		= ISCSI_HW_OFFLOAD,
+	.transport_type		= ISCSI_CXGBIT,
 	.rdma_shutdown		= false,
 	.priv_size		= sizeof(struct cxgbit_cmd),
 	.owner			= THIS_MODULE,
diff --git a/drivers/target/iscsi/iscsi_target_configfs.c b/drivers/target/iscsi/iscsi_target_configfs.c
index 33d811ac9539..923c032f0b95 100644
--- a/drivers/target/iscsi/iscsi_target_configfs.c
+++ b/drivers/target/iscsi/iscsi_target_configfs.c
@@ -131,22 +131,22 @@ static ssize_t lio_target_np_iser_store(struct config_item *item,
 }
 CONFIGFS_ATTR(lio_target_np_, iser);
 
-static ssize_t lio_target_np_hw_offload_show(struct config_item *item, char *page)
+static ssize_t lio_target_np_cxgbit_show(struct config_item *item, char *page)
 {
-	return lio_target_np_driver_show(item, page, ISCSI_HW_OFFLOAD);
+	return lio_target_np_driver_show(item, page, ISCSI_CXGBIT);
 }
 
-static ssize_t lio_target_np_hw_offload_store(struct config_item *item,
-					      const char *page, size_t count)
+static ssize_t lio_target_np_cxgbit_store(struct config_item *item,
+					  const char *page, size_t count)
 {
 	return lio_target_np_driver_store(item, page, count,
-					  ISCSI_HW_OFFLOAD, "");
+					  ISCSI_CXGBIT, "cxgbit");
 }
-CONFIGFS_ATTR(lio_target_np_, hw_offload);
+CONFIGFS_ATTR(lio_target_np_, cxgbit);
 
 static struct configfs_attribute *lio_target_portal_attrs[] = {
 	&lio_target_np_attr_iser,
-	&lio_target_np_attr_hw_offload,
+	&lio_target_np_attr_cxgbit,
 	NULL,
 };
 
diff --git a/include/target/iscsi/iscsi_target_core.h b/include/target/iscsi/iscsi_target_core.h
index 110c1fde7c68..4ac24f5a3308 100644
--- a/include/target/iscsi/iscsi_target_core.h
+++ b/include/target/iscsi/iscsi_target_core.h
@@ -74,7 +74,7 @@ enum iscsit_transport_type {
 	ISCSI_IWARP_TCP				= 3,
 	ISCSI_IWARP_SCTP			= 4,
 	ISCSI_INFINIBAND			= 5,
-	ISCSI_HW_OFFLOAD			= 6,
+	ISCSI_CXGBIT				= 6,
 };
 
 /* RFC-3720 7.1.4  Standard Connection State Diagram for a Target */

