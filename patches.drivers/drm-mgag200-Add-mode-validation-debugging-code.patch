From: Egbert Eich <eich@suse.de>
Date: Wed May 21 20:30:20 2014 +0200
Subject: drm/mgag200: Add mode validation debugging code
Patch-mainline: not to be upstreamed
References: bnc#876772
Signed-off-by: Egbert Eich <eich@suse.com>

Signed-off-by: Egbert Eich <eich@suse.de>
---
 drivers/gpu/drm/mgag200/mgag200_mode.c |   44 ++++++++++++++++++++++++---------
 1 file changed, 33 insertions(+), 11 deletions(-)

--- a/drivers/gpu/drm/mgag200/mgag200_mode.c
+++ b/drivers/gpu/drm/mgag200/mgag200_mode.c
@@ -1573,6 +1573,7 @@ static int mga_vga_mode_valid(struct drm
 	int lace = 1 + ((mode->flags & DRM_MODE_FLAG_INTERLACE) ? 1 : 0);
 	int bpp = 32;
 	int i = 0;
+	uint32_t bw;
 
 	if (mode->hdisplay % 8 || mode->hsync_start % 8 ||
 	    mode->hsync_end % 8 || mode->htotal % 8)
@@ -1584,37 +1585,54 @@ static int mga_vga_mode_valid(struct drm
 				return MODE_VIRTUAL_X;
 			if (mode->vdisplay > 1200)
 				return MODE_VIRTUAL_Y;
-			if (mga_vga_calculate_mode_bandwidth(mode, bpp)
-				> (24400 * 1024))
+			if ((bw =
+			     mga_vga_calculate_mode_bandwidth(mode, bpp))
+			    > (24400 * 1024)) {
+				DRM_DEBUG_KMS("Mode %d exceeds bandwidth: %d > %d",
+					      mode->base.id, bw, 24400 * 1024);
 				return MODE_BANDWIDTH;
+			}
 		} else if (mdev->unique_rev_id >= 0x02) {
 			if (mode->hdisplay > 1920)
 				return MODE_VIRTUAL_X;
 			if (mode->vdisplay > 1200)
 				return MODE_VIRTUAL_Y;
-			if (mga_vga_calculate_mode_bandwidth(mode, bpp)
-				> (30100 * 1024))
+			if ((bw =
+			     mga_vga_calculate_mode_bandwidth(mode, bpp))
+			    > (30100 * 1024)) {
+				DRM_DEBUG_KMS("Mode %d exceeds bandwidth: %d > %d",
+					      mode->base.id, bw, 30100 * 1024);
 				return MODE_BANDWIDTH;
+			}
 		}
 	} else if (mdev->type == G200_WB) {
 		if (mode->hdisplay > 1280)
 			return MODE_VIRTUAL_X;
 		if (mode->vdisplay > 1024)
 			return MODE_VIRTUAL_Y;
-		if (mga_vga_calculate_mode_bandwidth(mode,
-			bpp > (31877 * 1024)))
-			return MODE_BANDWIDTH;
+		if ((bw = mga_vga_calculate_mode_bandwidth(mode, bpp))
+		    > (31877 * 1024)) {
+		DRM_DEBUG_KMS("Mode %d exceeds bandwidth: %d > %d",
+			      mode->base.id, bw, 31877 * 1024);
+		return MODE_BANDWIDTH;
+		}
 	} else if (mdev->type == G200_EV &&
-		(mga_vga_calculate_mode_bandwidth(mode, bpp)
+		   ((bw = mga_vga_calculate_mode_bandwidth(mode, bpp))
 			> (32700 * 1024))) {
+		DRM_DEBUG_KMS("Mode %d exceeds bandwidth: %d > %d",
+			      mode->base.id, bw, 32700 * 1024);
 		return MODE_BANDWIDTH;
 	} else if (mdev->type == G200_EH &&
-		(mga_vga_calculate_mode_bandwidth(mode, bpp)
+		   ((bw = mga_vga_calculate_mode_bandwidth(mode, bpp))
 			> (37500 * 1024))) {
+		DRM_DEBUG_KMS("Mode %d exceeds bandwidth: %d > %d",
+			      mode->base.id, bw, 37500 * 1024);
 		return MODE_BANDWIDTH;
 	} else if (mdev->type == G200_ER &&
-		(mga_vga_calculate_mode_bandwidth(mode,
-			bpp) > (55000 * 1024))) {
+		   ((bw = mga_vga_calculate_mode_bandwidth(mode, bpp))
+		    > (55000 * 1024))) {
+		DRM_DEBUG_KMS("Mode %d exceeds bandwidth: %d > %d",
+			      mode->base.id, bw, 55000 * 1024);
 		return MODE_BANDWIDTH;
 	}
 
@@ -1629,6 +1647,8 @@ static int mga_vga_mode_valid(struct drm
 	    mode->vsync_start > 4096 * lace ||
 	    mode->vsync_end > 4096 * lace ||
 	    mode->vtotal > 4096 * lace) {
+		DRM_DEBUG_KMS("Mode: %d exceeds h/v param max limits\n",
+			      mode->base.id);
 		return MODE_BAD;
 	}
 
@@ -1648,6 +1668,8 @@ static int mga_vga_mode_valid(struct drm
 	if ((mode->hdisplay * mode->vdisplay * (bpp/8)) > mdev->mc.vram_size) {
 		if (fb_helper_conn)
 			fb_helper_conn->cmdline_mode.specified = false;
+		DRM_DEBUG_KMS("Mode %d needs more than %lu vram\n",
+			      mode->base.id, (unsigned long)mdev->mc.vram_size);
 		return MODE_BAD;
 	}
 
