From: NeilBrown <neilb@suse.de>
Subject: NFS: limit the time we might block in nfs_release_page()
Patch-mainline: not yet
References: fate#315220

On the way to mainline, this patchset has changed to never block
indefinitely in nfs_release_page().  It is never really necessary
and there are various subtle deadlocks it can cause.
In particular, if the state manager thread needs to be started
when memory is tight, the GFP_KERNEL allocation of the new thread
could block in nfs_release_page().

So change nfs_release_page() to never block more than half a second.
This can sometimes be longer than we might like, but at least assures
that we will make forward progress eventually.

Signed-off-by: NeilBrown <neilb@suse.de>

---
 fs/nfs/write.c |   11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

--- a/fs/nfs/write.c
+++ b/fs/nfs/write.c
@@ -1458,15 +1458,18 @@ void nfs_writeback_done(struct rpc_task
 
 static int _wait_bit_connected(struct rpc_clnt *cl)
 {
+	unsigned long *commit_start = current->journal_info;
+	unsigned long waited = jiffies - *commit_start;
+
 	if (fatal_signal_pending(current))
 		return -ERESTARTSYS;
 	if (!cl || rpc_is_foreign(cl)) {
 		/* it might not stay foreign forever */
-		freezable_schedule_timeout_unsafe(HZ);
+		if (waited >= HZ/2)
+			/* Too long, give up */
+			return -EAGAIN;
+		freezable_schedule_timeout_unsafe(HZ/2);
 	} else {
-		unsigned long *commit_start = current->journal_info;
-		unsigned long waited = jiffies - *commit_start;
-
 		/* we could block forever here ... */
 		if (waited >= HZ/10)
 			/* Too long, give up */
