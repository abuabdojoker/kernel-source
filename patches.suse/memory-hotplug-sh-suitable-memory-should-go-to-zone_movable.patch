From: Wang Nan <wangnan0@huawei.com>
Subject: memory-hotplug: sh: suitable memory should go to ZONE_MOVABLE

References: fate#316483
Patch-mainline: v3.17-rc1
Git-commit: 6e90b58be7545c2cb2306fa186ccf5888c76c559

This patch introduces zone_for_memory() to arch_add_memory() on sh to
ensure new, higher memory added into ZONE_MOVABLE if movable zone has
already setup.

Signed-off-by: Wang Nan <wangnan0@huawei.com>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Mel Gorman <mgorman@suse.de>
---

 arch/sh/mm/init.c |    5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff -puN arch/sh/mm/init.c~memory-hotplug-sh-suitable-memory-should-go-to-zone_movable arch/sh/mm/init.c
--- a/arch/sh/mm/init.c~memory-hotplug-sh-suitable-memory-should-go-to-zone_movable
+++ a/arch/sh/mm/init.c
@@ -495,8 +495,9 @@ int arch_add_memory(int nid, u64 start,
 	pgdat = NODE_DATA(nid);
 
 	/* We only have ZONE_NORMAL, so this is easy.. */
-	ret = __add_pages(nid, pgdat->node_zones + ZONE_NORMAL,
-				start_pfn, nr_pages);
+	ret = __add_pages(nid, pgdat->node_zones +
+			zone_for_memory(nid, start, size, ZONE_NORMAL),
+			start_pfn, nr_pages);
 	if (unlikely(ret))
 		printk("%s: Failed, __add_pages() == %d\n", __func__, ret);
 
