From: Miroslav Benes <mbenes@suse.cz>
Date: Thu, 17 Mar 2016 14:04:13 +0100
Subject: kgr: call kgr_init_ftrace_ops() only for loaded objects
Patch-mainline: not yet, kgraft
References: fate#313296

Restructure the code a bit so that kgr_init_ftrace_ops() in
kgr_patch_code() is called only for loaded objects. This allows to
simplify error handling.

Signed-off-by: Miroslav Benes <mbenes@suse.cz>
Reviewed-by: Petr Mladek <pmladek@suse.com>
Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 kernel/kgraft.c |   17 ++++++++---------
 1 file changed, 8 insertions(+), 9 deletions(-)

--- a/kernel/kgraft.c
+++ b/kernel/kgraft.c
@@ -397,8 +397,7 @@ static unsigned long kgr_get_fentry_loc(
 
 	orig_addr = kallsyms_lookup_name(pf->name);
 	if (!orig_addr) {
-		if (kgr_is_object_loaded(pf->objname))
-			pr_err("kgr: function %s not resolved\n", pf->name);
+		pr_err("kgr: function %s not resolved\n", pf->name);
 		return -ENOENT;
 	}
 
@@ -657,15 +656,15 @@ static int kgr_patch_code(struct kgr_pat
 	case KGR_PATCH_INIT:
 		if (revert || final || replace_revert)
 			return -EINVAL;
+
+		if (!kgr_is_object_loaded(patch_fun->objname)) {
+			patch_fun->state = KGR_PATCH_SKIPPED;
+			return 0;
+		}
+
 		err = kgr_init_ftrace_ops(patch_fun);
-		if (err) {
-			if (err == -ENOENT &&
-			    !kgr_is_object_loaded(patch_fun->objname)) {
-				patch_fun->state = KGR_PATCH_SKIPPED;
-				return 0;
-			}
+		if (err)
 			return err;
-		}
 
 		next_state = KGR_PATCH_SLOW;
 		new_ops = &patch_fun->ftrace_ops_slow;
