From 0676c4958f1a92e1142679ddd00ac8bc12e34b85 Mon Sep 17 00:00:00 2001
From: Matt Fleming <matt@codeblueprint.co.uk>
Date: Mon, 18 Jul 2016 12:47:51 +0100
Subject: [PATCH] arm64/efi: Don't truncate frame buffer address to 32-bits
Patch-mainline: Not yet, depends on unmerged patch
References: bsc#986987

EFI GOP frame buffer addresses are 64-bits in size, but are stored as
two 32-bit halves in 'screen_info'. If the PCI BAR containing the
frame buffer is relocated we must ensure that both halves are updated,
otherwise the efifb driver may attempt to map an incorrect address.

Signed-off-by: Matt Fleming <matt@codeblueprint.co.uk>
Signed-off-by: Matt Fleming <mfleming@suse.de>
---
 arch/arm64/kernel/efi.c | 25 ++++++++++++++++++++++---
 1 file changed, 22 insertions(+), 3 deletions(-)

diff --git a/arch/arm64/kernel/efi.c b/arch/arm64/kernel/efi.c
index 4a2c741..f7c1107 100644
--- a/arch/arm64/kernel/efi.c
+++ b/arch/arm64/kernel/efi.c
@@ -217,9 +217,14 @@ static __init void reserve_regions(void)
 #ifdef CONFIG_PCI
 static bool efi_pci_overlaps_efifb(struct pci_bar_update_info *update_info)
 {
+	u64 lfb_base = screen_info.lfb_base;
+
+	if (screen_info.capabilities & VIDEO_CAPABILITY_64BIT_BASE)
+		lfb_base |= (u64)screen_info.ext_lfb_base << 32;
+
 	/* is the screen_info frame buffer inside the pci BAR? */
-	if (screen_info.lfb_base >= update_info->old_start &&
-	    (screen_info.lfb_base + screen_info.lfb_size) <=
+	if (lfb_base >= update_info->old_start &&
+	    (lfb_base + screen_info.lfb_size) <=
 	     (update_info->old_start + update_info->size))
 		return true;
 
@@ -237,7 +242,21 @@ static int efi_pci_notifier(struct notifier_block *self,
 	 */
 	if (efi_pci_overlaps_efifb(update_info)) {
 		u64 diff = (update_info->new_start - update_info->old_start);
-		screen_info.lfb_base += diff;
+		u32 ext_lfb_base = screen_info.ext_lfb_base;
+		u64 new_base = screen_info.lfb_base;
+
+		if (screen_info.capabilities & VIDEO_CAPABILITY_64BIT_BASE)
+			new_base += (u64)ext_lfb_base << 32;
+
+		new_base += diff;
+
+		screen_info.lfb_base = new_base;
+
+		ext_lfb_base = new_base >> 32;
+		if (ext_lfb_base) {
+			screen_info.capabilities |= VIDEO_CAPABILITY_64BIT_BASE;
+			screen_info.ext_lfb_base = ext_lfb_base;
+		}
 	}
 
 	return NOTIFY_OK;
-- 
2.7.3

