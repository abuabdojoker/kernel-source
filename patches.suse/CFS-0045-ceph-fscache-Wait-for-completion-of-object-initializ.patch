From: Yunchuan Wen <yunchuanwen@ubuntukylin.com>
Date: Thu, 26 Dec 2013 06:29:28 -0800
Subject: [PATCH] ceph: fscache: Wait for completion of object initialization
Git-commit: f1fc4fee3bb163eebd0e1d16a8c84b66af03886e
Patch-mainline: v3.15
References: Fate#318586


The object store limit needs to be updated after writing,
and this can be done provided the corresponding object has already
been initialized. Current object initialization is done asynchrously,
which introduce a race if a file is opened, then immediately followed
by a writing, the initialization may have not completed, the code will
reach the ASSERT in fscache_submit_exclusive_op() to cause kernel
bug.

Tested-by: Milosz Tanski <milosz@adfin.com>
Signed-off-by: Yunchuan Wen <yunchuanwen@ubuntukylin.com>
Signed-off-by: Min Chen <minchen@ubuntukylin.com>
Signed-off-by: Li Wang <liwang@ubuntukylin.com>
Acked-by: NeilBrown <neilb@suse.com>

---
 fs/ceph/cache.c |    1 +
 1 file changed, 1 insertion(+)

--- a/fs/ceph/cache.c
+++ b/fs/ceph/cache.c
@@ -205,6 +205,7 @@ void ceph_fscache_register_inode_cookie(
 	ci->fscache = fscache_acquire_cookie(fsc->fscache,
 					     &ceph_fscache_inode_object_def,
 					     ci);
+	fscache_check_consistency(ci->fscache);
 done:
 	mutex_unlock(&inode->i_mutex);
 
