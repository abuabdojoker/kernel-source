From: Miroslav Benes <mbenes@suse.cz>
Subject: [PATCH] kgr: reserve a place in thread_struct for storing RIP on
 x86_64
Patch-mainline: Never, SLE12 specific
References: fate#313296

In order to be able to patch __schedule() function with kGraft we need
to store proper RIP in switch_to macro and use it as a return address.
This ensures that a task will follow consistent path (with respect to
old/new universes) all the way in __schedule(). Otherwise it could be
possible that a task is woken up with the different code than it went
to sleep with. The RIP should be stored in thread_struct embedded to
task_struct. Reserve a place for that even for x86_64 arch.

Signed-off-by: Miroslav Benes <mbenes@suse.cz>
---
 arch/x86/include/asm/processor.h | 2 --
 1 file changed, 2 deletions(-)

diff --git a/arch/x86/include/asm/processor.h b/arch/x86/include/asm/processor.h
index f8aa526e1a48..3c8d19382833 100644
--- a/arch/x86/include/asm/processor.h
+++ b/arch/x86/include/asm/processor.h
@@ -454,9 +454,7 @@ struct thread_struct {
 	unsigned short		fsindex;
 	unsigned short		gsindex;
 #endif
-#ifdef CONFIG_X86_32
 	unsigned long		ip;
-#endif
 #ifdef CONFIG_X86_64
 	unsigned long		fs;
 #endif
-- 
2.1.4

