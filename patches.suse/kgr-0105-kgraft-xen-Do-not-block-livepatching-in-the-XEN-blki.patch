From: Petr Mladek <pmladek@suse.com>
Date: Tue, 19 Apr 2016 17:12:21 +0200
Subject: kgraft/xen: Do not block livepatching in the XEN blkif kthread
Patch-mainline: not yet, kgraft
References: fate#313296

There are three interruptible sleep cycles in xen_blkif_schedule()
that might potentially block livepatching.

The first two might get ignored because the maximum sleep time
is 100ms.

The third one is more problematic. It is called when the block io
operation fails. It blocks the kthread until it is asked to quit.
I can't find how the two operations are synchronized. It is even
possible that the kthread might stay blocked until the system
shutdown.

Let's be on the safe side and migrate the kthread when waiting
for its death.

Reported-by: Miroslav Benes <mbenes@suse.cz>
Signed-off-by: Petr Mladek <pmladek@suse.com>
Reviewed-by: Miroslav Benes <mbenes@suse.cz>
Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 drivers/block/xen-blkback/blkback.c |    5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

--- a/drivers/block/xen-blkback/blkback.c
+++ b/drivers/block/xen-blkback/blkback.c
@@ -608,8 +608,9 @@ int xen_blkif_schedule(void *arg)
 		if (ret > 0)
 			blkif->waiting_reqs = 1;
 		if (ret == -EACCES)
-			wait_event_interruptible(blkif->shutdown_wq,
-						 kthread_should_stop());
+			wait_event_interruptible(blkif->shutdown_wq, ({
+					klp_kgraft_mark_task_safe(current);
+					kthread_should_stop(); }));
 
 purge_gnt_list:
 		if (blkif->vbd.feature_gnt_persistent &&
