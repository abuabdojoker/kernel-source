From: Michal Hocko <mhocko@suse.cz>
Subject: mm: remove PG_waiters from PAGE_FLAGS_CHECK_AT_FREE
Patch-mainline: no, suse specific
References: bnc#943959

This is a follow up for
patches.suse/mm-filemap-Avoid-unnecessary-barriers-and-waitqueue-lookups-in-unlock_page-fastpath.patch
which removes PG_waiters flag from the mask checked at the time when the page
is freed. It was useful during initial development but we haven't seen a true
positive of improper freeing due to missed wakeup in the field. Quite opposite,
we have seen multiple false positives (bnc#941951, bnc#943959, bnc#892004,
bnc#890373) where direct users of the page allocator do not free pages via
put_page or release_pages so they are prone to the issue described in
release_pages.

We will keep all the existing fixes in place in case we ever want to debug the
missed wakeup when this patch will simply get disabled for the testing kernel.

The flag should still be cleared when it is free because it might confuse new
users. This should be harmless though.

Signed-off-by: Michal Hocko <mhocko@suse.cz>

---
 include/linux/page-flags.h |    1 -
 mm/page_alloc.c            |    3 +++
 2 files changed, 3 insertions(+), 1 deletion(-)

--- a/include/linux/page-flags.h
+++ b/include/linux/page-flags.h
@@ -527,7 +527,6 @@ static inline void ClearPageSlabPfmemall
  */
 #define PAGE_FLAGS_CHECK_AT_FREE \
 	(1 << PG_lru	 | 1 << PG_locked    | \
-	 __PG_WAITERS | \
 	 1 << PG_private | 1 << PG_private_2 | \
 	 1 << PG_writeback | 1 << PG_reserved | \
 	 1 << PG_slab	 | 1 << PG_swapcache | 1 << PG_active | \
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@ -659,6 +659,9 @@ static inline int free_pages_check(struc
 	page_cpupid_reset_last(page);
 	if (page->flags & PAGE_FLAGS_CHECK_AT_PREP)
 		page->flags &= ~PAGE_FLAGS_CHECK_AT_PREP;
+
+	/* Get rid of the stale PG_waiters flag */
+	__ClearPageWaiters(page);
 	return 0;
 }
 
