From 023e3642122347304ec184cd74adccf85d0992f7 Mon Sep 17 00:00:00 2001
From: Hannes Reinecke <hare@suse.de>
Date: Tue, 25 Oct 2016 08:54:28 +0200
Subject: mlx4: Do not BUG_ON() if device reset failed
References: bsc#1001888
Patch-Mainline: no, temporary fix for SLES12 SP2 GMC

If for some reason the device reset failed we should just disable
the device, not crash.

Signed-off-by: Hannes Reinecke <hare@suse.com>
---
 drivers/net/ethernet/mellanox/mlx4/catas.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/mellanox/mlx4/catas.c b/drivers/net/ethernet/mellanox/mlx4/catas.c
index c7e9399..b4ec016 100644
--- a/drivers/net/ethernet/mellanox/mlx4/catas.c
+++ b/drivers/net/ethernet/mellanox/mlx4/catas.c
@@ -183,17 +183,19 @@ void mlx4_enter_error_state(struct mlx4_dev_persistent *persist)
 	else
 		err = mlx4_reset_master(dev);
 
+	dev->persist->state |= MLX4_DEVICE_STATE_INTERNAL_ERROR;
+	mutex_unlock(&persist->device_state_mutex);
 	if (!err) {
 		mlx4_err(dev, "device was reset successfully\n");
 	} else {
 		/* EEH could have disabled the PCI channel during reset. That's
 		 * recoverable and the PCI error flow will handle it.
 		 */
-		if (!pci_channel_offline(dev->persist->pdev))
-			BUG_ON(1);
+		if (!pci_channel_offline(dev->persist->pdev)) {
+			mlx4_err(dev, "device reset failed with err %d\n", err);
+			return;
+		}
 	}
-	dev->persist->state |= MLX4_DEVICE_STATE_INTERNAL_ERROR;
-	mutex_unlock(&persist->device_state_mutex);
 
 	/* At that step HW was already reset, now notify clients */
 	mlx4_dispatch_event(dev, MLX4_DEV_EVENT_CATASTROPHIC_ERROR, 0);
-- 
1.8.5.6

