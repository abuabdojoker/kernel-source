From: Mark Tinguely <tinguely@sgi.com>
Subject: xfs: fix xfs_setattr for DMAPI
References: bsc#932900
Patch-mainline: Depends on DMAPI
    
The community split xfs_setattr:

  Split up xfs_setattr into two functions, one for the complex truncate
  handling, and one for the trivial attribute updates.  Also move both
  new routines to xfs_iops.c as they are fairly Linux-specific.
    
DMAPI and others may set size and user/group ids in the same call.
The new code does not process the setting of user/group ids if the
size was also set.

Fix Suggested by: Mark Tinguely <tinguely@sgi.com>
First off the ASSERT in xfs_setattr_size is wrong and second we no
longer set the UID/GID if the ATTR_SIZE bit is set.
    
Signed-off-by: Rich Johnston <rjohnston@sgi.com>
Reviewed-by: Olaf Weber <olaf@sgi.com>
Reviewed-by: Mark Tinguely <tinguely@sgi.com>

Patched to only change the call from xfs_dmapi and not in the
general case.

Signed-off-by: Mark Tinguely <tinguely@sgi.com>
Acked-by: Jeff Mahoney <jeffm@suse.com>
---
    
 fs/xfs/dmapi/xfs_dm.c |   11 +++++++++--
 fs/xfs/xfs_iops.c     |    4 ++--
 2 files changed, 11 insertions(+), 4 deletions(-)

--- a/fs/xfs/dmapi/xfs_dm.c
+++ b/fs/xfs/dmapi/xfs_dm.c
@@ -2524,8 +2524,15 @@ xfs_dm_set_fileattr(
 		iattr.ia_size = stat.fa_size;
 	}
 
-	if (iattr.ia_valid & ATTR_SIZE)
-		return -xfs_setattr_size(XFS_I(inode), &iattr, XFS_ATTR_DMI);
+	if (iattr.ia_valid & ATTR_SIZE) {
+		int error = -xfs_setattr_size(XFS_I(inode), &iattr,
+					      XFS_ATTR_DMI);
+		if (error ||
+		    ((iattr.ia_valid & (ATTR_ATIME|ATTR_UID|ATTR_GID)) == 0))
+			return error;
+		/* clear flags handled by xfs_setattr_size */
+		iattr.ia_valid &= ~(ATTR_SIZE|ATTR_CTIME|ATTR_MTIME);
+	}
 	return -xfs_setattr_nonsize(XFS_I(inode), &iattr, XFS_ATTR_DMI);
 }
 
--- a/fs/xfs/xfs_iops.c
+++ b/fs/xfs/xfs_iops.c
@@ -774,8 +774,8 @@ xfs_setattr_size(
 
 	ASSERT(xfs_isilocked(ip, XFS_IOLOCK_EXCL));
 	ASSERT(S_ISREG(ip->i_d.di_mode));
-	ASSERT((mask & (ATTR_UID|ATTR_GID|ATTR_ATIME|ATTR_ATIME_SET|
-			ATTR_MTIME_SET|ATTR_KILL_PRIV|ATTR_TIMES_SET)) == 0);
+	ASSERT((mask & (ATTR_ATIME_SET|ATTR_MTIME_SET|ATTR_KILL_PRIV|
+			ATTR_TIMES_SET)) == 0);
 
 	if (DM_EVENT_ENABLED(ip, DM_EVENT_TRUNCATE) &&
 	    !(flags & XFS_ATTR_DMI)) {
