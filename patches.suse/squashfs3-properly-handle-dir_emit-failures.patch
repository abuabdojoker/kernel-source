From: Jeff Mahoney <jeffm@suse.com>
Subject: squashfs3: properly handle dir_emit() failures
Patch-mainline: Never, depends on squashfs3 patch
References: bsc#998795

dir_emit no longer returns an int -- now it returns a bool.  The code
had been updated to honor that but kept the comparison < 0, which is
now invalid.  As a result, errors will get missed since the return
value will never be <0.

Signed-off-by: Jeff Mahoney <jeffm@suse.com>
---
 fs/squashfs3/inode.c       |    8 ++++----
 fs/squashfs3/squashfs2_0.c |    5 ++---
 2 files changed, 6 insertions(+), 7 deletions(-)

--- a/fs/squashfs3/inode.c
+++ b/fs/squashfs3/inode.c
@@ -1863,8 +1863,8 @@ static int squashfs3_readdir(struct file
 				ctx->pos, i_ino, squashfs3_filetype_table[1]);
 
 		if (!dir_emit(ctx, name, size, i_ino,
-				squashfs3_filetype_table[1]) < 0) {
-				TRACE("Filldir returned less than 0\n");
+				squashfs3_filetype_table[1])) {
+				TRACE("Filldir failed\n");
 			goto finish;
 		}
 		ctx->pos += size;
@@ -1931,8 +1931,8 @@ static int squashfs3_readdir(struct file
 
 			if (!dir_emit(ctx, dire->name, dire->size + 1,
 					dirh.inode_number + dire->inode_number,
-					squashfs3_filetype_table[dire->type]) < 0) {
-				TRACE("Filldir returned less than 0\n");
+					squashfs3_filetype_table[dire->type])) {
+				TRACE("Filldir failed\n");
 				goto finish;
 			}
 			ctx->pos = length;
--- a/fs/squashfs3/squashfs2_0.c
+++ b/fs/squashfs3/squashfs2_0.c
@@ -586,9 +586,8 @@ static int squashfs3_readdir_2(struct fi
 			if (!dir_emit(ctx, dire->name, dire->size + 1,
 					SQUASHFS3_MK_VFS_INODE(
 					dirh.start_block, dire->offset),
-					squashfs3_filetype_table[dire->type])
-					< 0) {
-				TRACE("Filldir returned less than 0\n");
+					squashfs3_filetype_table[dire->type])) {
+				TRACE("Filldir failed\n");
 				goto finish;
 			}
 			ctx->pos = length;
