From: Petr Mladek <pmladek@suse.com>
Date: Tue, 19 Apr 2016 17:12:20 +0200
Subject: kgraft/gfs2: Do not block livepatching in the log daemon for too long
Patch-mainline: not yet, kgraft
References: fate#313296

gfs2_logd() waits 30 sec by default when there is no logging request.
It should be safe to apply the livepatch in the sleeping cycle.
At least it should not be more dangerous than migrating the
kthread in the existing try_to_freeze() call.

Heh, the logic of the whole kthread would deserve a cleanup.
Let's do it upstream and use this conservative change for SLE.

Reported-by: Miroslav Benes <mbenes@suse.cz>
Signed-off-by: Petr Mladek <pmladek@suse.com>
Reviewed-by: Miroslav Benes <mbenes@suse.cz>
Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 fs/gfs2/log.c |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

--- a/fs/gfs2/log.c
+++ b/fs/gfs2/log.c
@@ -898,8 +898,10 @@ int gfs2_logd(void *data)
 					TASK_INTERRUPTIBLE);
 			if (!gfs2_ail_flush_reqd(sdp) &&
 			    !gfs2_jrnl_flush_reqd(sdp) &&
-			    !kthread_should_stop())
+			    !kthread_should_stop()) {
+				klp_kgraft_mark_task_safe(current);
 				t = schedule_timeout(t);
+			}
 		} while(t && !gfs2_ail_flush_reqd(sdp) &&
 			!gfs2_jrnl_flush_reqd(sdp) &&
 			!kthread_should_stop());
